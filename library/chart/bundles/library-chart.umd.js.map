{"version":3,"file":"library-chart.umd.js","sources":["../../../projects/library/chart/src/lib/tsc/constant/chart.constant.ts","../../../projects/library/chart/src/lib/chart.service.ts","../../../projects/library/chart/src/lib/chart.component.ts","../../../projects/library/chart/src/lib/chart.module.ts","../../../projects/library/chart/src/lib/tsc/component/doughnut-chart/doughnut-chart.component.ts","../../../projects/library/chart/src/lib/tsc/component/doughnut-chart/doughnut-chart.component.html","../../../projects/library/chart/src/lib/tsc/component/doughnut-chart/doughnut-chart.module.ts","../../../projects/library/chart/src/lib/tsc/constant/common.constant.ts","../../../projects/library/chart/src/lib/tsc/component/stacked-bar-chart/stacked-bar-chart.component.ts","../../../projects/library/chart/src/lib/tsc/component/stacked-bar-chart/stacked-bar-chart.component.html","../../../projects/library/chart/src/lib/tsc/component/stacked-bar-chart/stacked-bar-chart.module.ts","../../../projects/library/chart/src/lib/tsc/component/bar-chart/bar-chart.component.ts","../../../projects/library/chart/src/lib/tsc/component/bar-chart/bar-chart.component.html","../../../projects/library/chart/src/lib/tsc/component/bar-chart/bar-chart.module.ts","../../../projects/library/chart/src/public-api.ts","../../../projects/library/chart/src/library-chart.ts"],"sourcesContent":["import { EChartsOption } from 'echarts';\n\nexport const LOADING_GRAPHIC: EChartsOption = {\n    graphic: {\n        elements: [\n            {\n                type: 'group',\n                left: 'center',\n                top: 'center',\n                children: new Array(7).fill(0).map((val, i) => ({\n                    type: 'rect',\n                    x: i * 20,\n                    shape: {\n                        x: 0,\n                        y: -40,\n                        width: 10,\n                        height: 80\n                    },\n                    style: { fill: '#0E2F44' },\n                    keyframeAnimation: {\n                        duration: 1000,\n                        delay: i * 200,\n                        loop: true,\n                        keyframes: [\n                            {\n                                percent: 0.5,\n                                scaleY: 0.3,\n                                easing: 'cubicIn'\n                            },\n                            {\n                                percent: 1,\n                                scaleY: 1,\n                                easing: 'cubicOut'\n                            }\n                        ]\n                    }\n                }))\n            }\n        ]\n    }\n};\n\nexport const NO_DATA_GRAPHIC = {\n    type: 'text',\n    left: 'center',\n    top: 'middle',\n    style: {\n        fill: '#6c757d',\n        fontSize: 25,\n        text: \"No Data\",\n    }\n};\n","import { Injectable } from '@angular/core';\n\nimport { NO_DATA_GRAPHIC } from './tsc/constant/chart.constant';\n@Injectable({\n  providedIn: 'root'\n})\nexport class ChartService {\n\n  public createOptionWithTitleAndValue(title: string, titleColor: string): any {\n    return {\n      title: {\n        text: title != null ? title : '',\n        textStyle: {\n          color: title != null ? (titleColor != null ? titleColor : 'Black') : '',\n        },\n        padding: [7, 0, 0, 20],\n      },\n      graphic: NO_DATA_GRAPHIC,\n      xAxis: { show: false },\n      yAxis: { show: false },\n    };\n  }\n  constructor() { }\n}\n","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'lib-chart',\n  template: `\n    <p>\n      chart works!\n    </p>\n  `,\n  styles: [\n  ]\n})\nexport class ChartComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit(): void {\n  }\n\n}\n","import { NgModule } from '@angular/core';\nimport { ChartComponent } from './chart.component';\n\n@NgModule({\n    declarations: [\n        ChartComponent,\n    ],\n    imports: [\n    ],\n    exports: [\n        ChartComponent\n    ]\n})\nexport class ChartModule { }\n","import { Component, Input, OnInit } from '@angular/core';\n\nimport { EChartsOption } from 'echarts';\n\nimport { ChartM } from '../../model/chart.model';\nimport { LOADING_GRAPHIC } from '../../constant/chart.constant';\n\nimport { ChartService } from '../../../chart.service';\n\n@Component({\n    selector: 'lib-doughnut-chart',\n    templateUrl: './doughnut-chart.component.html',\n    styleUrls: []\n})\n\nexport class DoughnutChartComponent implements OnInit {\n\n    @Input() renderFlag: string = 'LOADING';\n    @Input() chartData: ChartM;\n\n    chartDataOption: EChartsOption;\n    noDataOption;\n\n    constructor(\n        private chartService: ChartService\n    ) {\n    }\n\n    ngOnInit(): void {\n        this.noDataOption = this.chartService.createOptionWithTitleAndValue(this.chartData.title.name, this.chartData.title.color);\n        this.chartDataCheck();\n    }\n\n\n    ngOnChanges() {\n        console.log(this.chartData, \"ChartData\", this.renderFlag)\n        this.chartDataCheck();\n    }\n\n    chartDataCheck() {\n        if (this.renderFlag == 'LOADING') {\n            this.chartDataOption = LOADING_GRAPHIC;\n        } else if (this.renderFlag == 'DATA') {\n            this.drawChart();\n        } else {\n            this.chartDataOption = this.noDataOption;\n        }\n    }\n\n    drawChart() {\n        this.chartDataOption = {\n            tooltip: {\n                trigger: 'item',\n                formatter: function (params) {\n                    console.log(params, \"ParamsData\")\n                    let tooltip = '';\n                    tooltip += '<b><span class=\"text-primary\">' + params.data.name + '</span></b><br />';\n                    tooltip += 'Value: <b><span style=\"float: right; margin-left:15px;\">' +\n                        ((params.data.value != null ? params.data.value : '') +\n                            (params.data.unit != null ? ' ' + params.data.unit : '')) + '</span></b>';\n                    return tooltip;\n                }\n            },\n            toolbox: {\n                feature: {\n                    dataView: { show: true, readOnly: true },\n                    saveAsImage: { show: true }\n                }\n            },\n            title: {\n                show: true,\n                text: `${this.chartData.title.name ?? ''}`,\n                textStyle: {\n                    color: this.chartData.title.name != null ? (this.chartData.title.color != null ? this.chartData.title.color : 'Black') : ''\n                },\n\n            },\n            legend: {\n                top: this.chartData.legend.top ?? '5px',\n                bottom: this.chartData.legend.bottom ?? '0',\n                left: this.chartData.legend.left ?? '0',\n                right: this.chartData.legend.right ?? '0'\n\n            },\n            series: [\n                {\n                    name: this.chartData.title.name,\n                    type: 'pie',\n                    radius: ['40%', '70%'],\n                    avoidLabelOverlap: false,\n                    label: {\n                        show: false,\n                        position: 'center',\n                    },\n                    emphasis: {\n                        label: {\n                            show: false,\n                            fontSize: 40,\n                            fontWeight: 'bold',\n                        },\n                    },\n                    labelLine: {\n                        show: false,\n                    },\n                    data: this.chartData.data.map(m => ({\n                        name: m.name,\n                        value: m.value,\n                        unit: m.unit.name\n                    })),\n                },\n            ]\n        };\n    }\n}","<div echarts [options]=\"chartDataOption\"></div>","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\n\nimport { DoughnutChartComponent } from './doughnut-chart.component';\n\nimport { NgxEchartsModule } from 'ngx-echarts';\n\n@NgModule({\n    declarations: [DoughnutChartComponent],\n    imports: [\n        CommonModule,\n        NgxEchartsModule.forRoot({\n            echarts: () => import('echarts')\n        }),\n    ],\n    exports: [DoughnutChartComponent]\n})\nexport class DoughnutChartModule { }\n","export const commonConstant = {\n    NO_DATA: 'No data',\n    EMPTY_DATA: '',\n}","import { Component, Input, OnInit, SimpleChanges } from '@angular/core';\n\nimport { EChartsOption } from 'echarts';\n\nimport { LOADING_GRAPHIC } from '../../constant/chart.constant';\n\n\nimport { commonConstant } from '../../constant/common.constant';\n\nimport { ChartService } from '../../../chart.service';\n@Component({\n    selector: 'lib-stacked-bar-chart',\n    templateUrl: './stacked-bar-chart.component.html',\n    styles: []\n})\nexport class StackedBarChartComponent implements OnInit {\n\n    @Input() renderFlag: string = 'LOADING';\n\n    @Input() chartData: any;\n\n    stackedData: any;\n\n\n    showChartData: any;\n    chartMetaData: any;\n\n    chartDataOption: EChartsOption;\n    noDataOption;\n\n    showData: any[] = [];\n    titleData: any;\n    showStackedData: any = [];\n\n    commonConstant = commonConstant;\n    constructor(\n        private chartService: ChartService\n    ) { }\n\n    ngOnInit(): void {\n        this.noDataOption = this.chartService.createOptionWithTitleAndValue(this.chartData.title.name, this.chartData.title.color);\n        this.chartDataCheck();\n    }\n\n    ngOnChanges(changes: SimpleChanges): void {\n        this.showStackedData = [];\n        this.showChartData = this.chartData.toolbox;\n        this.stackedData = this.chartData.data.data;\n\n        this.titleData = this.chartData.data.vehicles;\n        if (this.stackedData) {\n            this.stackedData.forEach((res: any) => {\n                if (res.data && Object.keys(res.data).length > 0) {\n                    this.showStackedData.push(res.data);\n                }\n            });\n        }\n\n        if (this.showStackedData.length <= 0) {\n            this.renderFlag = 'NO_DATA';\n        }\n        this.chartDataCheck();\n    }\n\n    chartDataCheck() {\n        if (this.renderFlag == 'LOADING') {\n            this.chartDataOption = LOADING_GRAPHIC;\n        } else if (this.renderFlag == 'DATA') {\n            this.drawChart();\n        } else {\n            this.chartDataOption = this.noDataOption;\n        }\n    }\n\n    drawChart() {\n        this.chartDataOption = {\n            toolbox: {\n                feature: {\n                    dataView: { show: this.showChartData.feature.showDataView, readOnly: true },\n                    magicType: { show: this.showChartData.feature.lineChartView, type: ['line'] },\n                    restore: { show: this.showChartData.feature.restoreGraph },\n                    saveAsImage: { show: this.showChartData.feature.saveImage }\n                }\n            },\n            grid: {\n                top: 30,\n                bottom: 80,\n                left: 50,\n                right: 30,\n            },\n            title: {\n                show: true,\n                text: `${this.chartData.title.name ?? ''}`,\n                textStyle: {\n                    color: this.chartData.title.name != null ? (this.chartData.title.color ?? 'black') : '',\n                },\n                padding: [7, 0, 0, 20],\n            },\n\n            tooltip: {\n                trigger: 'axis',\n                axisPointer: {\n                    type: 'line'\n                },\n            },\n            legend: {\n                top: this.chartData.legend.top ?? '5px',\n                bottom: this.chartData.legend.bottom ?? '0px',\n                left: this.chartData.legend.left ?? '0px',\n                right: this.chartData.legend.right ?? '0px'\n\n            },\n            xAxis: {\n                type: 'category',\n                data: this.stackedData.map(m => ({\n                    value: m.duration,\n                })),\n                nameTextStyle: {\n                    align: 'right',\n                    verticalAlign: 'top',\n                    padding: [30, 0, 0, 0],\n                },\n            },\n            yAxis: {\n                type: 'value',\n                min: 0,\n            },\n            series: this.titleData.map(res => ({\n                name: res,\n                type: 'bar',\n                stack: 'ad',\n                label: {\n                    show: false\n                },\n                emphasis: {\n                    focus: 'series'\n                },\n                data: this.showStackedData.map(m => ({\n                    value: m[res],\n                })),\n                tooltip: {\n                    valueFormatter: (value) => {\n                        return value == null ? commonConstant.NO_DATA : value;\n                    }\n                },\n            })),\n        };\n    }\n}\n","<div echarts [options]=\"chartDataOption\"></div>","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\n\nimport { NgxEchartsModule } from 'ngx-echarts';\n\nimport { StackedBarChartComponent } from './stacked-bar-chart.component';\n\n@NgModule({\n    declarations: [StackedBarChartComponent],\n    imports: [\n        CommonModule,\n        NgxEchartsModule.forRoot({\n            echarts: () => import('echarts')\n        }),\n    ],\n    exports: [StackedBarChartComponent]\n})\nexport class StackedBarChartModule { }\n","import { Component, Input, OnInit } from '@angular/core';\n\nimport { EChartsOption } from 'echarts';\n\nimport { ChartM } from '../../model/chart.model';\nimport { LOADING_GRAPHIC } from '../../constant/chart.constant';\n\nimport { ChartService } from '../../../chart.service';\n\n@Component({\n    selector: 'lib-bar-chart',\n    templateUrl: './bar-chart.component.html',\n    styleUrls: []\n})\nexport class BarChartComponent implements OnInit {\n\n    @Input() renderFlag: string = 'LOADING';\n    @Input() chartData: ChartM;\n\n    chartDataOption: EChartsOption;\n    noDataOption;\n\n    chartDataValue: any[] = [];\n\n    xAxisHeaderData: any;\n    yAxisHeaderData: any;\n    showChartData: any;\n    chartMetaData: any;;\n\n    constructor(\n        private chartService: ChartService\n    ) { }\n\n    ngOnInit(): void {\n        this.noDataOption = this.chartService.createOptionWithTitleAndValue(this.chartData.title.name, this.chartData.title.color);\n        this.xAxisHeaderData = this.chartData.xAxis;\n        this.yAxisHeaderData = this.chartData.yAxis;\n        this.showChartData = this.chartData.toolbox;\n        this.chartDataCheck();\n    }\n\n    ngOnChanges() {\n        this.chartDataValue = this.chartData.data;\n        this.chartDataCheck();\n    }\n\n    chartDataCheck() {\n        if (this.renderFlag == 'LOADING') {\n            this.chartDataOption = LOADING_GRAPHIC;\n        } else if (this.renderFlag == 'DATA') {\n            this.drawChart();\n        } else {\n            this.chartDataOption = this.noDataOption;\n        }\n    }\n\n    drawChart() {\n        this.chartDataOption = {\n            toolbox: {\n                feature: {\n                    dataView: { show: this.showChartData.showDataView, readOnly: true },\n                    magicType: { show: this.showChartData.lineChartView, type: ['line'] },\n                    restore: { show: this.showChartData.restoreGraph },\n                    saveAsImage: { show: this.showChartData.saveImage }\n                }\n            },\n            title: {\n                show: true,\n                text: `${this.chartData.title.name ?? ''}`,\n                textStyle: {\n                    color: this.chartData.title.name != null ? (this.chartData.title.color ?? 'black') : '',\n                },\n\n            },\n            tooltip: {\n                trigger: 'axis',\n                axisPointer: {\n                    type: 'shadow'\n                },\n                formatter: function (params) {\n                    let tooltip = '';\n                    tooltip += params[0].axisValue + '<br />';\n\n                    tooltip += 'Value: <b><span style=\"float: right; margin-left:15px;\">' +\n                        ((params[0].value != null ? params[0].value : '') +\n                            (params[0].data.unit != null ? ' ' + params[0].data.unit : '')) + '</span></b>';\n                    return tooltip;\n                }\n            },\n            grid: {\n                top: '10%',\n                left: '7%',\n                right: '5%',\n                bottom: '10%',\n                containLabel: true\n            },\n            xAxis: {\n                type: 'category',\n                name: this.xAxisHeaderData.label,\n                data: this.chartDataValue.map(m => ({\n                    value: m.name,\n                })),\n                axisTick: {\n                    alignWithLabel: true\n                }\n            },\n            yAxis: {\n                type: 'value',\n                name: this.yAxisHeaderData.label,\n                nameLocation: this.yAxisHeaderData.position ?? 'middle',\n                nameGap: 70\n            },\n            series: [\n                {\n                    data: this.chartDataValue.map(m => ({\n                        value: m.value,\n                        unit: m.unit.name\n                    })),\n                    type: 'bar',\n                    barWidth: '40%',\n                    label: {\n                        show: true,\n                        position: 'top'\n                    }\n                }\n            ]\n        }\n    }\n}\n","<div echarts [options]=\"chartDataOption\"></div>","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\n\nimport { BarChartComponent } from './bar-chart.component';\n\nimport { NgxEchartsModule } from 'ngx-echarts';\n\n@NgModule({\n    declarations: [BarChartComponent],\n    imports: [\n        CommonModule,\n        NgxEchartsModule.forRoot({\n            echarts: () => import('echarts')\n        }),\n    ],\n    exports: [BarChartComponent]\n})\nexport class BarChartModule { }\n","/*\n * Public API Surface of chart\n */\n\nexport * from './lib/chart.service';\nexport * from './lib/chart.component';\nexport * from './lib/chart.module';\n\nexport * from './lib/tsc/component/doughnut-chart/doughnut-chart.module';\nexport * from './lib/tsc/component/doughnut-chart/doughnut-chart.component';\n\nexport * from './lib/tsc/component/stacked-bar-chart/stacked-bar-chart.module';\nexport * from './lib/tsc/component/stacked-bar-chart/stacked-bar-chart.component';\n\n// export * from './lib/tsc/constant/chart.constant';\n// export * from './lib/tsc/constant/common.constant';\n\n// export * from './lib/tsc/component/bar-chart/bar-chart.component';\n// export * from './lib/tsc/component/bar-chart/bar-chart.module'\n\nexport * from './lib/tsc/component/bar-chart/bar-chart.module';\nexport * from './lib/tsc/component/bar-chart/bar-chart.component';\n","/**\n * Generated bundle index. Do not edit.\n */\n\nexport * from './public-api';\n"],"names":["i0","Injectable","Component","NgModule","i1.ChartService","i2","Input","CommonModule","NgxEchartsModule"],"mappings":"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"}