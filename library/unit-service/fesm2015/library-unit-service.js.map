{"version":3,"file":"library-unit-service.js","sources":["../../../projects/library/unit-service/src/lib/unit-service.service.ts","../../../projects/library/unit-service/src/lib/unit-service.component.ts","../../../projects/library/unit-service/src/lib/unit-service.module.ts","../../../projects/library/unit-service/src/lib/tsc/enum/unit.enum.ts","../../../projects/library/unit-service/src/lib/tsc/model/unit.model.ts","../../../projects/library/unit-service/src/lib/tsc/controller/unit.controller.ts","../../../projects/library/unit-service/src/lib/tsc/service/unit.service.ts","../../../projects/library/unit-service/src/public-api.ts","../../../projects/library/unit-service/src/library-unit-service.ts"],"sourcesContent":["import { Injectable } from '@angular/core';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class UnitServiceService {\n\n  constructor() { }\n}\n","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'lib-unit-service',\n  template: `\n    <p>\n      unit-service works!\n    </p>\n  `,\n  styles: [\n  ]\n})\nexport class UnitServiceComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit(): void {\n  }\n\n}\n","import { NgModule, ModuleWithProviders } from '@angular/core';\nimport { UnitServiceComponent } from './unit-service.component';\n\n@NgModule({\n    declarations: [\n        UnitServiceComponent\n    ],\n    imports: [\n    ],\n    exports: [\n        UnitServiceComponent\n    ]\n})\nexport class UnitServiceModule {\n    static forRoot(environment: any): ModuleWithProviders<UnitServiceModule> {\n        return {\n            ngModule: UnitServiceModule,\n            providers: [\n                { provide: 'environment', useValue: environment }\n            ]\n        };\n    }\n}\n","export enum UnitTypeKeyID {\n    LENGTH = 'LENGTH',\n    VOLUME = 'VOLUME',\n    ENERGY = 'ENERGY',\n    EQUIVALENT_EMISSION = 'EQUIVALENT_EMISSION',\n    MASS = 'MASS',\n}\n\nexport enum UomCode {\n    TCO2E = 'tCO2e'\n}\n","export interface OldUnitM {\n    unitID: number;\n    uomName: string;\n    uomCode: string;\n    unitType: string;\n    unitTypeName: string;\n    unitSubType: string;\n}\n\nexport class OldUnit implements OldUnitM {\n    unitID = null;\n    uomName = null;\n    uomCode = null;\n    unitType = null;\n    unitTypeName: string;\n    unitSubType = null;\n}\n\nexport interface UnitM {\n    id: number;\n    name: string;\n    uomCode: string;\n    type: string;\n    typeName: string;\n    subType: string;\n}\n\nexport class Unit implements UnitM {\n    id = null;\n    name = null;\n    uomCode = null;\n    type = null;\n    typeName: string;\n    subType = null;\n}\n","import { Inject, Injectable } from '@angular/core';\nimport { HttpClient, HttpParams } from '@angular/common/http';\nimport { Observable } from 'rxjs';\n\nimport { OldUnitM } from '../model/unit.model'; \n\n@Injectable({\n    providedIn: 'root'\n})\n\nexport class UnitController {\n    constructor(\n        private http: HttpClient,\n        @Inject('environment') private environment: any\n    ) { }\n\n    getUnit(filters: string[]): Observable<OldUnitM[]> {\n        let params = new HttpParams();\n\n        filters.forEach(filter => {\n            params = params.append('filter', filter);\n        });\n\n        return this.http.get<OldUnitM[]>(`${this.environment.COMMON_API_URL}units/filter`, { params: params });\n    }\n\n    getUnitUsingPublicUrl(filters: string[]): Observable<OldUnitM[]> {\n        let params = new HttpParams();\n\n        filters.forEach(filter => {\n            params = params.append('filter', filter);\n        });\n\n        return this.http.get<OldUnitM[]>(`${this.environment.COMMON_PUBLIC_API_URL}units/filter`, { params: params });\n    }\n}\n","import { Injectable } from '@angular/core';\n\nimport { UnitM, Unit, OldUnitM } from '../model/unit.model';\nimport { UnitController } from '../controller/unit.controller';\n\n@Injectable({\n    providedIn: 'root'\n})\n\nexport class UnitService {\n    constructor(\n        private unitController: UnitController\n    ) { }\n\n    async getUnit(apiFilter): Promise<UnitM[]> {\n        let oldUnitM: OldUnitM[];\n        let unitM: UnitM[];\n\n        try {\n            oldUnitM = await this.unitController.getUnit(apiFilter).toPromise();\n\n            if (oldUnitM) {\n                unitM = oldUnitM.map(this.transformUnit);\n\n                unitM.unshift({\n                    id: null,\n                    name: 'Select none',\n                    uomCode: null,\n                    type: null,\n                    typeName: null,\n                    subType: null\n                });\n\n                return unitM;\n            } else {\n                return [new Unit()];\n            }\n        } catch (error) {\n            console.error('Error -', error);\n            return [new Unit()];\n        }\n    }\n\n    async getUnitUsingPublicUrl(apiFilter): Promise<UnitM[]> {\n        let oldUnitM: OldUnitM[];\n        let unitM: UnitM[];\n\n        try {\n            oldUnitM = await this.unitController.getUnitUsingPublicUrl(apiFilter).toPromise();\n\n            if (oldUnitM) {\n                unitM = oldUnitM.map(this.transformUnit);\n\n                unitM.unshift({\n                    id: null,\n                    name: 'Select none',\n                    uomCode: null,\n                    type: null,\n                    typeName: null,\n                    subType: null\n                });\n\n                return unitM;\n            } else {\n                return [new Unit()];\n            }\n        } catch (error) {\n            console.error('Error -', error);\n            return [new Unit()];\n        }\n    }\n\n    transformUnit(oldUnit: OldUnitM): UnitM {\n        return {\n            id: oldUnit.unitID,\n            name: oldUnit.uomName,\n            uomCode: oldUnit.uomCode,\n            type: oldUnit.unitType,\n            typeName: oldUnit.unitTypeName,\n            subType: oldUnit.unitSubType,\n        };\n    }\n\n    filterUnit(unit: UnitM[], unitTypeFilter: string[]): UnitM[] {\n        let unitM: UnitM[];\n\n        unitM = unit.filter((unit: UnitM) => unitTypeFilter.includes(unit.type));\n\n        unitM.unshift({\n            id: null,\n            name: 'Select none',\n            uomCode: null,\n            type: null,\n            typeName: null,\n            subType: null\n        });\n\n        return unitM;\n    }\n}\n","/*\n * Public API Surface of unit-service\n */\n\nexport * from './lib/unit-service.service';\nexport * from './lib/unit-service.component';\nexport * from './lib/unit-service.module';\n\nexport * from './lib/tsc/enum/unit.enum';\nexport * from './lib/tsc/model/unit.model';\nexport * from './lib/tsc/service/unit.service';\n","/**\n * Generated bundle index. Do not edit.\n */\n\nexport * from './public-api';\n"],"names":["i1.UnitController"],"mappings":"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"}