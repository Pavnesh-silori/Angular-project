{"version":3,"file":"library-authentication-service.js","sources":["../../../projects/library/authentication-service/src/lib/authentication-service.service.ts","../../../projects/library/authentication-service/src/lib/authentication-service.component.ts","../../../projects/library/authentication-service/src/lib/authentication-service.module.ts","../../../projects/library/authentication-service/src/lib/tsc/service/authentication.service.ts","../../../projects/library/authentication-service/src/lib/tsc/guard/auth.guard.ts","../../../projects/library/authentication-service/src/public-api.ts","../../../projects/library/authentication-service/src/library-authentication-service.ts"],"sourcesContent":["import { Injectable } from '@angular/core';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class AuthenticationServiceService {\n\n  constructor() { }\n}\n","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'lib-authentication-service',\n  template: `\n    <p>\n      authentication-service works!\n    </p>\n  `,\n  styles: [\n  ]\n})\nexport class AuthenticationServiceComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit(): void {\n  }\n\n}\n","import { \n    NgModule, \n    ModuleWithProviders \n} from '@angular/core';\n\nimport { AuthenticationServiceComponent } from './authentication-service.component';\n\n@NgModule({\n    declarations: [\n        AuthenticationServiceComponent\n    ],\n    imports: [\n    ],\n    exports: [\n        AuthenticationServiceComponent\n    ]\n})\n\nexport class AuthenticationServiceModule {\n    static forRoot(environment: any): ModuleWithProviders<AuthenticationServiceModule> {\n        return {\n            ngModule: AuthenticationServiceModule,\n            providers: [\n                { provide: 'environment', useValue: environment }\n            ]\n        };\n    }\n}\n","import { Inject, Injectable } from \"@angular/core\";\nimport { StorageService } from \"@library/storage-service\";\n\n@Injectable({\n    providedIn: 'root'\n})\n\nexport class AuthenticationService {\n\n    ACCOUNT_KEY_ID = \"ACCOUNT\";\n\n    constructor(\n        @Inject('environment') private environment: any,\n        private storageService: StorageService,\n    ) { }\n\n    isLoggedIn() {\n        // return this.getStorage('token');\n\n        let userID: string = '';\n        // let netZeroA: string = '';\n        // let primaryOrgID: string = '';\n        // let defaultApp: string = '';\n        // let currentApp: string = '';\n        // let currentOrgID: string = '';\n        let token: string = '';\n        // let resourcePermissions: string = '';\n        // let currentOrgType: string = '';\n\n        userID = this.storageService.getStorage('userID');\n        // netZeroA = this.getStorage('netZeroA');\n        // primaryOrgID = this.getStorage('primaryOrgID');\n        // defaultApp = this.getStorage('defaultApp');\n        // currentApp = this.getStorage('currentApp');\n        // currentOrgID = this.getStorage('currentOrgID');\n        token = this.storageService.getStorage('token');\n        // resourcePermissions = this.getStorage('resourcePermissions');\n        // currentOrgType = this.getStorage('currentOrgType');\n\n        // console.log('userID', userID);\n        // console.log('netZeroA', netZeroA);\n        // console.log('primaryOrgID', primaryOrgID);\n        // console.log('defaultApp', defaultApp);\n        // console.log('currentApp', currentApp);\n        // console.log('currentOrgID', currentOrgID);\n        // console.log('token', token);\n        // console.log('resourcePermissions', resourcePermissions);\n        // console.log('currentOrgType', currentOrgType);\n\n        // let userIDLength = userID.length;\n        // let netZeroALength = netZeroA.length;\n        // let primaryOrgIDLength = primaryOrgID.length;\n        // let defaultAppLength = defaultApp.length;\n        // let currentAppLength = currentApp.length;\n        // let currentOrgIDLength = currentOrgID.length;\n        // let tokenLength = token.length;\n        // let permissionsLength = resourcePermissions.length;\n        // let currentOrgTypeLength = currentOrgType.length;\n\n        if (\n            userID == 'undefined' ||\n            // netZeroA == 'undefined' ||\n            // primaryOrgID == 'undefined' ||\n            // defaultApp == 'undefined' ||\n            // currentApp == 'undefined' ||\n            // currentOrgID == 'undefined' ||\n            token == 'undefined' ||\n            // resourcePermissions == 'undefined' ||\n            // currentOrgType == 'undefined' ||\n            userID == 'null' ||\n            // netZeroA == 'null' ||\n            // primaryOrgID == 'null' ||\n            // defaultApp == 'null' ||\n            // currentApp == 'null' ||\n            // currentOrgID == 'null' ||\n            token == 'null' ||\n            // resourcePermissions == 'null' ||\n            // currentOrgType == 'null' ||\n            userID == null ||\n            // netZeroA == null ||\n            // primaryOrgID == null ||\n            // defaultApp == null ||\n            // currentApp == null ||\n            // currentOrgID == null ||\n            token == null ||\n            // resourcePermissions == null ||\n            // currentOrgType == null ||\n            userID == '' ||\n            // netZeroA == '' ||\n            // primaryOrgID == '' ||\n            // defaultApp == '' ||\n            // currentApp == '' ||\n            // currentOrgID == '' ||\n            token == ''\n            // resourcePermissions == '' ||\n            // currentOrgType == ''\n            // userIDLength == 0 ||\n            // netZeroALength == 0 ||\n            // primaryOrgIDLength == 0 ||\n            // defaultAppLength == 0 ||\n            // currentAppLength == 0 ||\n            // currentOrgIDLength == 0 ||\n            // tokenLength == 0 ||\n            // permissionsLength == 0 ||\n            // currentOrgTypeLength == 0 \n        ) {\n            return false;\n        } else {\n            return true;\n        }\n    }\n\n    logout(redirectUrl, pageUrl, action, applicationKeyID = '') {\n        localStorage.clear();\n        sessionStorage.clear();\n\n        if (applicationKeyID != this.ACCOUNT_KEY_ID && action == 'interceptor') {\n            window.location.href = `${this.environment.ACCOUNT_URL}login?redirectUrl=${redirectUrl}&pageUrl=${pageUrl}`;\n        } else {            \n            window.location.href = `${this.environment.ACCOUNT_URL}login?redirectUrl=${redirectUrl}&pageUrl=${pageUrl}&action=${action}`;\n        }\n    }\n\n}","import { Injectable } from '@angular/core';\n\nimport {\n    CanActivate,\n    ActivatedRouteSnapshot,\n    RouterStateSnapshot\n} from '@angular/router';\n\nimport { Observable } from 'rxjs';\n\nimport { AuthenticationService } from '../service/authentication.service';\n\n@Injectable({\n    providedIn: 'root'\n})\n\nexport class AuthGuard implements CanActivate {\n    constructor(\n        private authenticationService: AuthenticationService\n    ) { }\n\n    canActivate(\n        route: ActivatedRouteSnapshot,\n        state: RouterStateSnapshot): Observable<boolean> | Promise<boolean> | boolean {\n\n        if (this.authenticationService.isLoggedIn()) {\n            return true;\n        } else {\n            let appURL: string;\n\n            // this.activatedRoute.data.subscribe(data => {\n            //     console.log('data -', data);\n            //     appURL = data.appURL;\n            // });\n\n            appURL = route.data.appURL;\n\n            this.authenticationService.logout(appURL + 'login', state.url, '');\n            return false;\n        }\n    }\n\n}\n","/*\n * Public API Surface of authentication-service\n */\n\nexport * from './lib/authentication-service.service';\nexport * from './lib/authentication-service.component';\nexport * from './lib/authentication-service.module';\n\nexport * from './lib/tsc/service/authentication.service';\nexport * from './lib/tsc/guard/auth.guard';\n","/**\n * Generated bundle index. Do not edit.\n */\n\nexport * from './public-api';\n"],"names":["i1.AuthenticationService"],"mappings":"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"}