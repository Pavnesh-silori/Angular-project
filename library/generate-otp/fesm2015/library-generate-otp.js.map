{"version":3,"file":"library-generate-otp.js","sources":["../../../projects/library/generate-otp/src/lib/generate-otp.service.ts","../../../projects/library/generate-otp/src/lib/generate-otp.component.ts","../../../projects/library/generate-otp/src/lib/generate-otp.component.html","../../../projects/library/generate-otp/src/lib/generate-otp.module.ts","../../../projects/library/generate-otp/src/public-api.ts","../../../projects/library/generate-otp/src/library-generate-otp.ts"],"sourcesContent":["import { Injectable } from '@angular/core';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class GenerateOtpService {\n\n  constructor() { }\n}\n","import { Component, EventEmitter, Input, OnInit, Output, SimpleChanges, ViewChild } from '@angular/core';\n\nimport { NgOtpInputComponent } from 'ng-otp-input';\n\nimport { MATERIAL_CONSTANT } from '@library/tsc-common';\nimport { ToastrColor, ToastrService, ToastrTitle } from '@library/toastr-service';\n\n@Component({\n    selector: 'lib-generate-otp',\n    templateUrl: './generate-otp.component.html',\n    styleUrls: ['./generate-otp.component.scss']\n})\n\nexport class GenerateOtpComponent implements OnInit {\n    // library\n    MATERIAL_CONSTANT = MATERIAL_CONSTANT;\n    // /library/\n\n    @Output() otpEmitter: EventEmitter<{ otp: string, resendOtp: boolean }> = new EventEmitter();\n\n    @Input()\n    showEnterOtpInput: any;\n\n    @Input()\n    generateOtpBtnLblInput: string;\n\n    @Input()\n    submitBtnLblInput: string;\n\n    @Input()\n    remainingTimeInput: number;\n\n    @ViewChild(NgOtpInputComponent, { static: false }) ngOtpInput: NgOtpInputComponent;\n\n    generateOtpBtnLbl: string = 'Generate OTP';\n    submitBtnLbl: string = 'Submit';\n    private countdownInterval: any;\n    otpValue: any;\n\n    checkOtp: boolean;\n    resendOtpBoolean: boolean = false;\n    showGenreateOtpBtn: boolean = true;\n    showEnterOtp: boolean = false;\n    defaultRemainingTime: number = 100;\n    remainingTime: number = this.defaultRemainingTime;\n\n    constructor(\n        private toastrService: ToastrService\n    ) { }\n\n    ngOnInit(): void {\n    }\n\n    ngOnChanges(changes: SimpleChanges): void {\n        if (changes.submitBtnLblInput && this.submitBtnLblInput) {\n            this.submitBtnLbl = this.submitBtnLblInput;\n        }\n\n        if (changes.generateOtpBtnLblInput && this.generateOtpBtnLblInput) {\n            this.generateOtpBtnLbl = this.generateOtpBtnLblInput;\n        }\n\n        if (changes.remainingTimeInput && this.remainingTimeInput) {\n            this.defaultRemainingTime = this.remainingTimeInput;\n            this.remainingTime = this.remainingTimeInput;\n        }\n\n        if (this.showEnterOtpInput) {\n            this.showEnterOtpFnc();\n        }\n    }\n\n    generateOtp() {\n        this.otpEmitter.emit({ otp: this.otpValue, resendOtp: this.resendOtpBoolean });\n    }\n\n    showEnterOtpFnc() {\n        this.showGenreateOtpBtn = false;\n        this.showEnterOtp = true;\n        this.remainingTime = this.defaultRemainingTime;\n\n        // Start the countdown timer\n        this.startCountdown();\n    }\n\n    onOtpChange(value: any) {\n        // Handle OTP change if needed\n        this.otpValue = value;\n        this.checkOtp = true;\n    }\n\n    resendOtp() {\n        this.showEnterOtpInput = false;\n        this.ngOtpInput.setValue(null);\n        this.otpValue = null;\n        this.checkOtp = false;\n        this.resendOtpBoolean = true;\n        this.otpEmitter.emit({ otp: this.otpValue, resendOtp: this.resendOtpBoolean });\n        this.startCountdown();\n    }\n\n    submitOtp() {\n        this.resendOtpBoolean = false;\n        if (this.checkOtp && this.otpValue.length == 6) {\n            this.otpEmitter.emit({ otp: this.otpValue, resendOtp: this.resendOtpBoolean });\n        } else {\n            this.toastrService.openToast(ToastrTitle.ERROR, 'Plese enter 6 digit OTP.', ToastrColor.ERROR);\n            return;\n        }\n    }\n\n    startCountdown() {\n        const interval = 1000; // Update every second\n        this.remainingTime = this.defaultRemainingTime;\n\n        const countdown = setInterval(() => {\n            this.remainingTime--;\n\n            if (this.remainingTime <= 0) {\n                clearInterval(countdown); // Stop the countdown when time reaches 0\n            }\n        }, interval);\n    }\n\n    formatTime(): string {\n        clearInterval(this.countdownInterval);\n        const seconds = this.remainingTime;\n        const minutes = Math.floor((seconds % 3600) / 60);\n        const remainingSeconds = seconds % 60;\n\n        return `${minutes}:${remainingSeconds}`;\n    }\n}\n","<div class=\"text-end\">\n    <button class=\"btn btn-success\" type=\"button\" *ngIf=\"showGenreateOtpBtn\" (click)=\"generateOtp()\" matRipple\n        [matRippleCentered]=\"MATERIAL_CONSTANT.MAT_RIPPLE_CENTER\">\n        {{ generateOtpBtnLbl }}\n    </button>\n\n    <div *ngIf=\"showEnterOtp\">\n        <div class=\"pt-2\">\n            <span>Enter a OTP</span>\n            <ng-otp-input (onInputChange)=\"onOtpChange($event)\"\n                [config]=\"{length:6,inputClass:'dot',allowNumbersOnly:true}\">\n            </ng-otp-input>\n\n            <div class=\"pt-2\">\n                <button [disabled]=\"remainingTime > 0\" class=\"btn ps-1 fw-normal\" (click)=\"resendOtp()\"><span\n                        class=\"cursorPointer btn-link\">Resend OTP </span> <span *ngIf=\"remainingTime > 0\"\n                        class=\"ml-2\">in {{\n                        formatTime() }}</span></button>\n            </div>\n        </div>\n\n        <div class=\"pt-1 sm-3\">\n            <button class=\"btn btn-success\" (click)=\"submitOtp()\" matRipple\n                [matRippleCentered]=\"MATERIAL_CONSTANT.MAT_RIPPLE_CENTER\">\n                {{ submitBtnLbl }}\n            </button>\n        </div>\n\n    </div>\n</div>\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\n\nimport { MatRippleModule } from '@angular/material/core';\n\nimport { GenerateOtpComponent } from './generate-otp.component';\n\nimport { NgOtpInputModule } from 'ng-otp-input';\n\n@NgModule({\n    declarations: [\n        GenerateOtpComponent\n    ],\n    imports: [\n        CommonModule,\n        MatRippleModule,\n        NgOtpInputModule\n\n    ],\n    exports: [\n        GenerateOtpComponent,\n\n    ]\n})\nexport class GenerateOtpModule { }\n","/*\n * Public API Surface of generate-otp\n */\n\nexport * from './lib/generate-otp.service';\nexport * from './lib/generate-otp.component';\nexport * from './lib/generate-otp.module';\n","/**\n * Generated bundle index. Do not edit.\n */\n\nexport * from './public-api';\n"],"names":[],"mappings":"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"}