import { Component, Inject } from '@angular/core';
import { MAT_DIALOG_DATA } from '@angular/material/dialog';
import { MATERIAL_CONSTANT } from '../../../constant/material.constant';
import { DialogOneEnum } from '../../../enum/dialog-one.enum';
import { MaterialFormFieldAppearance } from '../../../enum/material.enum';
import * as i0 from "@angular/core";
import * as i1 from "@angular/material/dialog";
import * as i2 from "@angular/material/form-field";
import * as i3 from "@angular/common";
import * as i4 from "@angular/material/input";
import * as i5 from "@angular/material/core";
export class TypeConfirmationDialog {
    constructor(dialogRef, data) {
        this.dialogRef = dialogRef;
        this.data = data;
        this.MATERIAL_CONSTANT = MATERIAL_CONSTANT;
        this.DialogOneEnum = DialogOneEnum;
        this.MaterialFormFieldAppearance = MaterialFormFieldAppearance;
        this.btnFlag = false;
    }
    ngOnInit() {
    }
    confirmationCheck(value) {
        this.data.confirmationInput == value ? this.btnFlag = true : this.btnFlag = false;
    }
    success() {
        this.dialogRef.close(true);
    }
    fail() {
        this.dialogRef.close(false);
    }
}
TypeConfirmationDialog.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: "12.0.0", version: "12.2.17", ngImport: i0, type: TypeConfirmationDialog, deps: [{ token: i1.MatDialogRef }, { token: MAT_DIALOG_DATA }], target: i0.ɵɵFactoryTarget.Component });
TypeConfirmationDialog.ɵcmp = i0.ɵɵngDeclareComponent({ minVersion: "12.0.0", version: "12.2.17", type: TypeConfirmationDialog, selector: "app-type-dialog", ngImport: i0, template: "<ng-container *ngIf=\"data.type; else deleteTemplate\">\n    <div mat-dialog-title class=\"fw-4 mb-0 d-flex\">\n        <div class=\"col-sm-1\">\n            <span class=\"material-symbols-outlined mr-2 pt-4\">\n                {{data.icon}}\n            </span>\n        </div>\n\n        <strong class=\"col-sm-11 \">\n            <div class=\"pt-3\" [innerHTML]=\"data.header\"></div>\n        </strong>\n    </div>\n</ng-container>\n<ng-template #deleteTemplate>\n    <div mat-dialog-title class=\"fw-4 mb-0 text-danger d-flex\">\n        <div class=\"col-sm-1\">\n            <span class=\"material-symbols-outlined mr-2 pt-4\">\n                {{data.icon}}\n            </span>\n        </div>\n\n        <strong class=\"col-sm-11 \">\n            <div class=\"pt-3\" [innerHTML]=\"data.header\"></div>\n        </strong>\n    </div>\n</ng-template>\n\n<div mat-dialog-content class=\"card-body mat-typography ms-4 mb-2\">\n    <div [innerHTML]=\"data.body\"></div><br />\n    <div class=\"ps-2\">\n        <p>Please type \"{{data.confirmationInput}}\" to continue.</p>\n        <mat-form-field [appearance]=\"MaterialFormFieldAppearance.FORM_FIELD_APPEARANCE\">\n            <input matInput type=\"text\" placeholder='Please type \"{{data.confirmationInput}}\"'  (input)=\"confirmationCheck($event.target.value)\">\n        </mat-form-field>\n    </div>\n</div>\n\n\n<ng-container *ngIf=\"data.type; else elseBlock\">\n    <button class=\"btn btn-sm btn-secondary float-end ms-2\" (click)=\"fail()\" matRipple\n        [matRippleCentered]=\"MATERIAL_CONSTANT.MAT_RIPPLE_CENTER\">\n        {{ data.buttonOne }}\n    </button>\n    <button class=\"btn btn-sm btn-success float-end ms-2\" (click)=\"success()\" matRipple\n        [matRippleCentered]=\"MATERIAL_CONSTANT.MAT_RIPPLE_CENTER\" [disabled]=\"!btnFlag\">\n        {{ data.buttonTwo }}\n    </button>\n</ng-container>\n\n<ng-template #elseBlock>\n    <button class=\"btn btn-sm btn-secondary float-end ms-2\" (click)=\"fail()\" matRipple\n        [matRippleCentered]=\"MATERIAL_CONSTANT.MAT_RIPPLE_CENTER\">\n        {{ data.buttonOne }}\n    </button>\n    <button class=\"btn btn-sm btn-danger float-end ms-2\" (click)=\"success()\" matRipple\n        [matRippleCentered]=\"MATERIAL_CONSTANT.MAT_RIPPLE_CENTER\" [disabled]=\"!btnFlag\">\n        {{ data.buttonTwo }}\n    </button>\n</ng-template>", components: [{ type: i2.MatFormField, selector: "mat-form-field", inputs: ["color", "floatLabel", "appearance", "hideRequiredMarker", "hintLabel"], exportAs: ["matFormField"] }], directives: [{ type: i3.NgIf, selector: "[ngIf]", inputs: ["ngIf", "ngIfThen", "ngIfElse"] }, { type: i1.MatDialogTitle, selector: "[mat-dialog-title], [matDialogTitle]", inputs: ["id"], exportAs: ["matDialogTitle"] }, { type: i1.MatDialogContent, selector: "[mat-dialog-content], mat-dialog-content, [matDialogContent]" }, { type: i4.MatInput, selector: "input[matInput], textarea[matInput], select[matNativeControl],      input[matNativeControl], textarea[matNativeControl]", inputs: ["id", "disabled", "required", "type", "value", "readonly", "placeholder", "errorStateMatcher", "aria-describedby"], exportAs: ["matInput"] }, { type: i5.MatRipple, selector: "[mat-ripple], [matRipple]", inputs: ["matRippleRadius", "matRippleDisabled", "matRippleTrigger", "matRippleColor", "matRippleUnbounded", "matRippleCentered", "matRippleAnimation"], exportAs: ["matRipple"] }] });
i0.ɵɵngDeclareClassMetadata({ minVersion: "12.0.0", version: "12.2.17", ngImport: i0, type: TypeConfirmationDialog, decorators: [{
            type: Component,
            args: [{
                    selector: 'app-type-dialog',
                    templateUrl: './type-confirmation.component.html',
                }]
        }], ctorParameters: function () { return [{ type: i1.MatDialogRef }, { type: undefined, decorators: [{
                    type: Inject,
                    args: [MAT_DIALOG_DATA]
                }] }]; } });
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoidHlwZS1jb25maXJtYXRpb24uY29tcG9uZW50LmpzIiwic291cmNlUm9vdCI6IiIsInNvdXJjZXMiOlsiLi4vLi4vLi4vLi4vLi4vLi4vLi4vLi4vcHJvamVjdHMvbGlicmFyeS90c2MtY29tbW9uL3NyYy9saWIvdHNjL2NvbXBvbmVudC9kaWFsb2cvdHlwZS1jb25maXJtYXRpb24vdHlwZS1jb25maXJtYXRpb24uY29tcG9uZW50LnRzIiwiLi4vLi4vLi4vLi4vLi4vLi4vLi4vLi4vcHJvamVjdHMvbGlicmFyeS90c2MtY29tbW9uL3NyYy9saWIvdHNjL2NvbXBvbmVudC9kaWFsb2cvdHlwZS1jb25maXJtYXRpb24vdHlwZS1jb25maXJtYXRpb24uY29tcG9uZW50Lmh0bWwiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUEsT0FBTyxFQUFFLFNBQVMsRUFBVSxNQUFNLEVBQUUsTUFBTSxlQUFlLENBQUM7QUFDMUQsT0FBTyxFQUFnQixlQUFlLEVBQUUsTUFBTSwwQkFBMEIsQ0FBQztBQUN6RSxPQUFPLEVBQUUsaUJBQWlCLEVBQUUsTUFBTSxxQ0FBcUMsQ0FBQztBQUN4RSxPQUFPLEVBQUUsYUFBYSxFQUFFLE1BQU0sK0JBQStCLENBQUM7QUFDOUQsT0FBTyxFQUFFLDJCQUEyQixFQUFFLE1BQU0sNkJBQTZCLENBQUM7Ozs7Ozs7QUFNMUUsTUFBTSxPQUFPLHNCQUFzQjtJQUsvQixZQUNXLFNBQStDLEVBQ3RCLElBQVM7UUFEbEMsY0FBUyxHQUFULFNBQVMsQ0FBc0M7UUFDdEIsU0FBSSxHQUFKLElBQUksQ0FBSztRQU43QyxzQkFBaUIsR0FBRyxpQkFBaUIsQ0FBQztRQUN0QyxrQkFBYSxHQUFHLGFBQWEsQ0FBQztRQUM5QixnQ0FBMkIsR0FBRywyQkFBMkIsQ0FBQztRQUMxRCxZQUFPLEdBQVksS0FBSyxDQUFDO0lBSXJCLENBQUM7SUFFTCxRQUFRO0lBQ1IsQ0FBQztJQUVELGlCQUFpQixDQUFDLEtBQWE7UUFDM0IsSUFBSSxDQUFDLElBQUksQ0FBQyxpQkFBaUIsSUFBSSxLQUFLLENBQUMsQ0FBQyxDQUFDLElBQUksQ0FBQyxPQUFPLEdBQUcsSUFBSSxDQUFDLENBQUMsQ0FBQyxJQUFJLENBQUMsT0FBTyxHQUFHLEtBQUssQ0FBQztJQUN0RixDQUFDO0lBRUQsT0FBTztRQUNILElBQUksQ0FBQyxTQUFTLENBQUMsS0FBSyxDQUFDLElBQUksQ0FBQyxDQUFDO0lBQy9CLENBQUM7SUFFRCxJQUFJO1FBQ0EsSUFBSSxDQUFDLFNBQVMsQ0FBQyxLQUFLLENBQUMsS0FBSyxDQUFDLENBQUM7SUFDaEMsQ0FBQzs7b0hBdkJRLHNCQUFzQiw4Q0FPbkIsZUFBZTt3R0FQbEIsc0JBQXNCLHVEQ1ZuQyw4ekVBMERjOzRGRGhERCxzQkFBc0I7a0JBSmxDLFNBQVM7bUJBQUM7b0JBQ1AsUUFBUSxFQUFFLGlCQUFpQjtvQkFDM0IsV0FBVyxFQUFFLG9DQUFvQztpQkFDcEQ7OzBCQVFRLE1BQU07MkJBQUMsZUFBZSIsInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7IENvbXBvbmVudCwgT25Jbml0LCBJbmplY3QgfSBmcm9tICdAYW5ndWxhci9jb3JlJztcbmltcG9ydCB7IE1hdERpYWxvZ1JlZiwgTUFUX0RJQUxPR19EQVRBIH0gZnJvbSAnQGFuZ3VsYXIvbWF0ZXJpYWwvZGlhbG9nJztcbmltcG9ydCB7IE1BVEVSSUFMX0NPTlNUQU5UIH0gZnJvbSAnLi4vLi4vLi4vY29uc3RhbnQvbWF0ZXJpYWwuY29uc3RhbnQnO1xuaW1wb3J0IHsgRGlhbG9nT25lRW51bSB9IGZyb20gJy4uLy4uLy4uL2VudW0vZGlhbG9nLW9uZS5lbnVtJztcbmltcG9ydCB7IE1hdGVyaWFsRm9ybUZpZWxkQXBwZWFyYW5jZSB9IGZyb20gJy4uLy4uLy4uL2VudW0vbWF0ZXJpYWwuZW51bSc7XG5cbkBDb21wb25lbnQoe1xuICAgIHNlbGVjdG9yOiAnYXBwLXR5cGUtZGlhbG9nJyxcbiAgICB0ZW1wbGF0ZVVybDogJy4vdHlwZS1jb25maXJtYXRpb24uY29tcG9uZW50Lmh0bWwnLFxufSlcbmV4cG9ydCBjbGFzcyBUeXBlQ29uZmlybWF0aW9uRGlhbG9nIHtcbiAgICBNQVRFUklBTF9DT05TVEFOVCA9IE1BVEVSSUFMX0NPTlNUQU5UO1xuICAgIERpYWxvZ09uZUVudW0gPSBEaWFsb2dPbmVFbnVtO1xuICAgIE1hdGVyaWFsRm9ybUZpZWxkQXBwZWFyYW5jZSA9IE1hdGVyaWFsRm9ybUZpZWxkQXBwZWFyYW5jZTtcbiAgICBidG5GbGFnOiBib29sZWFuID0gZmFsc2U7XG4gICAgY29uc3RydWN0b3IoXG4gICAgICAgIHB1YmxpYyBkaWFsb2dSZWY6IE1hdERpYWxvZ1JlZjxUeXBlQ29uZmlybWF0aW9uRGlhbG9nPixcbiAgICAgICAgQEluamVjdChNQVRfRElBTE9HX0RBVEEpIHB1YmxpYyBkYXRhOiBhbnlcbiAgICApIHsgfVxuXG4gICAgbmdPbkluaXQoKTogdm9pZCB7XG4gICAgfVxuXG4gICAgY29uZmlybWF0aW9uQ2hlY2sodmFsdWU6IHN0cmluZyk6IHZvaWQge1xuICAgICAgICB0aGlzLmRhdGEuY29uZmlybWF0aW9uSW5wdXQgPT0gdmFsdWUgPyB0aGlzLmJ0bkZsYWcgPSB0cnVlIDogdGhpcy5idG5GbGFnID0gZmFsc2U7XG4gICAgfVxuXG4gICAgc3VjY2VzcygpIHtcbiAgICAgICAgdGhpcy5kaWFsb2dSZWYuY2xvc2UodHJ1ZSk7XG4gICAgfVxuXG4gICAgZmFpbCgpIHtcbiAgICAgICAgdGhpcy5kaWFsb2dSZWYuY2xvc2UoZmFsc2UpO1xuICAgIH1cbn1cbiIsIjxuZy1jb250YWluZXIgKm5nSWY9XCJkYXRhLnR5cGU7IGVsc2UgZGVsZXRlVGVtcGxhdGVcIj5cbiAgICA8ZGl2IG1hdC1kaWFsb2ctdGl0bGUgY2xhc3M9XCJmdy00IG1iLTAgZC1mbGV4XCI+XG4gICAgICAgIDxkaXYgY2xhc3M9XCJjb2wtc20tMVwiPlxuICAgICAgICAgICAgPHNwYW4gY2xhc3M9XCJtYXRlcmlhbC1zeW1ib2xzLW91dGxpbmVkIG1yLTIgcHQtNFwiPlxuICAgICAgICAgICAgICAgIHt7ZGF0YS5pY29ufX1cbiAgICAgICAgICAgIDwvc3Bhbj5cbiAgICAgICAgPC9kaXY+XG5cbiAgICAgICAgPHN0cm9uZyBjbGFzcz1cImNvbC1zbS0xMSBcIj5cbiAgICAgICAgICAgIDxkaXYgY2xhc3M9XCJwdC0zXCIgW2lubmVySFRNTF09XCJkYXRhLmhlYWRlclwiPjwvZGl2PlxuICAgICAgICA8L3N0cm9uZz5cbiAgICA8L2Rpdj5cbjwvbmctY29udGFpbmVyPlxuPG5nLXRlbXBsYXRlICNkZWxldGVUZW1wbGF0ZT5cbiAgICA8ZGl2IG1hdC1kaWFsb2ctdGl0bGUgY2xhc3M9XCJmdy00IG1iLTAgdGV4dC1kYW5nZXIgZC1mbGV4XCI+XG4gICAgICAgIDxkaXYgY2xhc3M9XCJjb2wtc20tMVwiPlxuICAgICAgICAgICAgPHNwYW4gY2xhc3M9XCJtYXRlcmlhbC1zeW1ib2xzLW91dGxpbmVkIG1yLTIgcHQtNFwiPlxuICAgICAgICAgICAgICAgIHt7ZGF0YS5pY29ufX1cbiAgICAgICAgICAgIDwvc3Bhbj5cbiAgICAgICAgPC9kaXY+XG5cbiAgICAgICAgPHN0cm9uZyBjbGFzcz1cImNvbC1zbS0xMSBcIj5cbiAgICAgICAgICAgIDxkaXYgY2xhc3M9XCJwdC0zXCIgW2lubmVySFRNTF09XCJkYXRhLmhlYWRlclwiPjwvZGl2PlxuICAgICAgICA8L3N0cm9uZz5cbiAgICA8L2Rpdj5cbjwvbmctdGVtcGxhdGU+XG5cbjxkaXYgbWF0LWRpYWxvZy1jb250ZW50IGNsYXNzPVwiY2FyZC1ib2R5IG1hdC10eXBvZ3JhcGh5IG1zLTQgbWItMlwiPlxuICAgIDxkaXYgW2lubmVySFRNTF09XCJkYXRhLmJvZHlcIj48L2Rpdj48YnIgLz5cbiAgICA8ZGl2IGNsYXNzPVwicHMtMlwiPlxuICAgICAgICA8cD5QbGVhc2UgdHlwZSBcInt7ZGF0YS5jb25maXJtYXRpb25JbnB1dH19XCIgdG8gY29udGludWUuPC9wPlxuICAgICAgICA8bWF0LWZvcm0tZmllbGQgW2FwcGVhcmFuY2VdPVwiTWF0ZXJpYWxGb3JtRmllbGRBcHBlYXJhbmNlLkZPUk1fRklFTERfQVBQRUFSQU5DRVwiPlxuICAgICAgICAgICAgPGlucHV0IG1hdElucHV0IHR5cGU9XCJ0ZXh0XCIgcGxhY2Vob2xkZXI9J1BsZWFzZSB0eXBlIFwie3tkYXRhLmNvbmZpcm1hdGlvbklucHV0fX1cIicgIChpbnB1dCk9XCJjb25maXJtYXRpb25DaGVjaygkZXZlbnQudGFyZ2V0LnZhbHVlKVwiPlxuICAgICAgICA8L21hdC1mb3JtLWZpZWxkPlxuICAgIDwvZGl2PlxuPC9kaXY+XG5cblxuPG5nLWNvbnRhaW5lciAqbmdJZj1cImRhdGEudHlwZTsgZWxzZSBlbHNlQmxvY2tcIj5cbiAgICA8YnV0dG9uIGNsYXNzPVwiYnRuIGJ0bi1zbSBidG4tc2Vjb25kYXJ5IGZsb2F0LWVuZCBtcy0yXCIgKGNsaWNrKT1cImZhaWwoKVwiIG1hdFJpcHBsZVxuICAgICAgICBbbWF0UmlwcGxlQ2VudGVyZWRdPVwiTUFURVJJQUxfQ09OU1RBTlQuTUFUX1JJUFBMRV9DRU5URVJcIj5cbiAgICAgICAge3sgZGF0YS5idXR0b25PbmUgfX1cbiAgICA8L2J1dHRvbj5cbiAgICA8YnV0dG9uIGNsYXNzPVwiYnRuIGJ0bi1zbSBidG4tc3VjY2VzcyBmbG9hdC1lbmQgbXMtMlwiIChjbGljayk9XCJzdWNjZXNzKClcIiBtYXRSaXBwbGVcbiAgICAgICAgW21hdFJpcHBsZUNlbnRlcmVkXT1cIk1BVEVSSUFMX0NPTlNUQU5ULk1BVF9SSVBQTEVfQ0VOVEVSXCIgW2Rpc2FibGVkXT1cIiFidG5GbGFnXCI+XG4gICAgICAgIHt7IGRhdGEuYnV0dG9uVHdvIH19XG4gICAgPC9idXR0b24+XG48L25nLWNvbnRhaW5lcj5cblxuPG5nLXRlbXBsYXRlICNlbHNlQmxvY2s+XG4gICAgPGJ1dHRvbiBjbGFzcz1cImJ0biBidG4tc20gYnRuLXNlY29uZGFyeSBmbG9hdC1lbmQgbXMtMlwiIChjbGljayk9XCJmYWlsKClcIiBtYXRSaXBwbGVcbiAgICAgICAgW21hdFJpcHBsZUNlbnRlcmVkXT1cIk1BVEVSSUFMX0NPTlNUQU5ULk1BVF9SSVBQTEVfQ0VOVEVSXCI+XG4gICAgICAgIHt7IGRhdGEuYnV0dG9uT25lIH19XG4gICAgPC9idXR0b24+XG4gICAgPGJ1dHRvbiBjbGFzcz1cImJ0biBidG4tc20gYnRuLWRhbmdlciBmbG9hdC1lbmQgbXMtMlwiIChjbGljayk9XCJzdWNjZXNzKClcIiBtYXRSaXBwbGVcbiAgICAgICAgW21hdFJpcHBsZUNlbnRlcmVkXT1cIk1BVEVSSUFMX0NPTlNUQU5ULk1BVF9SSVBQTEVfQ0VOVEVSXCIgW2Rpc2FibGVkXT1cIiFidG5GbGFnXCI+XG4gICAgICAgIHt7IGRhdGEuYnV0dG9uVHdvIH19XG4gICAgPC9idXR0b24+XG48L25nLXRlbXBsYXRlPiJdfQ==