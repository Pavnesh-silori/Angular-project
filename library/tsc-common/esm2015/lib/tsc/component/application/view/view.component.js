import { __awaiter } from "tslib";
import { Component } from '@angular/core';
import { ApplicationKeyID, Application, UserApplication } from '@library/application-service';
import { User } from '@library/user-service';
import * as i0 from "@angular/core";
import * as i1 from "@library/storage-service";
import * as i2 from "@library/application-service";
import * as i3 from "@library/user-service";
import * as i4 from "@angular/material/card";
import * as i5 from "@angular/flex-layout/flex";
import * as i6 from "@angular/common";
// /library/
export class ViewComponent {
    constructor(storageService, applicationService, userService) {
        this.storageService = storageService;
        this.applicationService = applicationService;
        this.userService = userService;
        this.isCurrentAppIsAccount = false;
        this.applicationFilter = [new Application()];
        this.excludeApplicationKeyID = [ApplicationKeyID.ADMIN_KEY_ID, ApplicationKeyID.NETZERO_ADMIN_KEY_ID, ApplicationKeyID.EMPLOYEE_KEY_ID];
        // userApplicationM: UserApplicationM[];
        this.userApplicationM = [new UserApplication()];
        this.userM = new User();
    }
    ngOnInit() {
        this.currentOrgID = this.storageService.getStorage(['currentOrgID']);
        this.currentAppKeyID = this.storageService.getStorage(['applicationKeyID']);
        this.userID = this.storageService.getStorage(['userID']);
        this.isCurrentAppIsAccountFnc(this.currentAppKeyID);
        this.getAllApplication();
        this.getUserByID();
        if (!this.isCurrentAppIsAccount) {
            this.getApplicationByUserAccess();
        }
    }
    getAllApplication() {
        return __awaiter(this, void 0, void 0, function* () {
            this.applicationM = (yield this.applicationService.getAllApplication());
            this.applicationFilter = this.applicationM.filter((applicationres) => !this.excludeApplicationKeyID.includes(applicationres.keyID));
        });
    }
    getApplicationByUserAccess() {
        return __awaiter(this, void 0, void 0, function* () {
            this.userApplicationM = (yield this.applicationService.getSubscribedApplicationsByOrgID(this.currentOrgID));
        });
    }
    getUserByID() {
        return __awaiter(this, void 0, void 0, function* () {
            this.userM = (yield this.userService.getUserByID(this.userID));
        });
    }
    getApplicationLogoWithoutName(keyID) {
        let logo;
        logo = this.applicationService.getApplicationLogoWithoutName(keyID);
        return logo;
    }
    isCurrentAppIsAccountFnc(appKeyID) {
        this.isCurrentAppIsAccount = appKeyID == ApplicationKeyID.ACCOUNT_KEY_ID ? true : false;
    }
    isAccess(applicationID) {
        return this.userApplicationM.some(item => item.id == applicationID);
    }
}
ViewComponent.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: "12.0.0", version: "12.2.17", ngImport: i0, type: ViewComponent, deps: [{ token: i1.StorageService }, { token: i2.ApplicationService }, { token: i3.UserService }], target: i0.ɵɵFactoryTarget.Component });
ViewComponent.ɵcmp = i0.ɵɵngDeclareComponent({ minVersion: "12.0.0", version: "12.2.17", type: ViewComponent, selector: "app-view", ngImport: i0, template: "<div class=\"card main-card cardOverwrite h100 mb-4 appTile\">\n    <div class=\"headerContainer\">\n        <div class=\"headerLeftContainer\">\n            <div class=\"pageTitle\">\n                Hello {{ userM.firstName }}{{ userM.lastName ? ' ' + userM.lastName : ''}}, welcome to The\n                Sustainability Cloud! <img class=\"celebrateEmoji\" src=\"/assets/images/celebrate-emoji.png\">\n            </div>\n            <div class=\"pageSubtitle\">\n                Let's transition your business to netzero.\n            </div>\n        </div>\n    </div>\n\n    <div class=\"card-body\">\n        <div fxLayout=\"row wrap\" fxLayoutGap=\"20px grid\">\n            <div class=\"appCardOuter\" fxFlex=\"50%\" fxFlex.xs=\"50%\" fxFlex.sm=\"50%\"\n                *ngFor=\"let applications of applicationFilter\">\n\n                <a href=\"{{ applications.url }}\" target=\"_blank\">\n                    <mat-card class=\"border appCardInner cardOverwrite cursorPointer matHeader\">\n                        <div class=\"row\">\n                            <div class=\"col-sm-3\">\n                                <span class=\"centerAlign\">\n                                    <img class=\"appImg\" [src]=\"getApplicationLogoWithoutName(applications.keyID)\"\n                                        alt=\"{{ applications.name }}\">\n                                </span>\n                            </div>\n                            <div class=\"col-sm-9\">\n                                <mat-card-header>\n                                    <mat-card-title-group>\n                                        <mat-card-title class=\"ps-0\">\n                                            <p class=\"fs-4 fw-bold\">\n                                                {{ applications.name }}\n                                                <span *ngIf=\"!isCurrentAppIsAccount && isAccess(applications.id)\">\n                                                    <svg xmlns=\"http://www.w3.org/2000/svg\" fill=\"currentColor\"\n                                                        class=\"check-circle-fill flex-shrink-0 me-2 mb-2 ms-2 tickIcon text-success\"\n                                                        viewBox=\"0 0 16 16\" role=\"img\" aria-label=\"Success:\">\n                                                        <path\n                                                            d=\"M16 8A8 8 0 1 1 0 8a8 8 0 0 1 16 0zm-3.97-3.03a.75.75 0 0 0-1.08.022L7.477 9.417 5.384 7.323a.75.75 0 0 0-1.06 1.06L6.97 11.03a.75.75 0 0 0 1.079-.02l3.992-4.99a.75.75 0 0 0-.01-1.05z\" />\n                                                    </svg>\n                                                </span>\n                                            </p>\n                                        </mat-card-title>\n                                    </mat-card-title-group>\n                                </mat-card-header>\n                                <mat-card-content>\n                                    <p>{{ applications.description }}</p>\n                                </mat-card-content>\n                            </div>\n                        </div>\n                    </mat-card>\n                </a>\n\n            </div>\n        </div>\n    </div>\n</div>\n", styles: [".appTile .celebrateEmoji{max-width:20px}.appTile .appImg{max-width:70%;height:auto}.appTile .appCardOuter .mat-card{min-height:70px!important}.appTile .appCardInner{height:8rem;transition:all .3s cubic-bezier(.25,.8,.25,1)}.appTile .appCardInner:hover{box-shadow:0 1px 20px #0000,0 10px 10px #0000000d!important}.appTile .mat-card-subtitle,.appTile .mat-card-content{font-size:13px}.appTile .mat-card-title{font-size:16px!important;margin:0!important;color:#495057}.appTile .mat-card-title p{margin-bottom:0!important}.appTile .mat-card-content{color:gray}.appTile .tickIcon{width:24px;height:24px}\n"], components: [{ type: i4.MatCard, selector: "mat-card", exportAs: ["matCard"] }, { type: i4.MatCardHeader, selector: "mat-card-header" }, { type: i4.MatCardTitleGroup, selector: "mat-card-title-group" }], directives: [{ type: i5.DefaultLayoutDirective, selector: "  [fxLayout], [fxLayout.xs], [fxLayout.sm], [fxLayout.md],  [fxLayout.lg], [fxLayout.xl], [fxLayout.lt-sm], [fxLayout.lt-md],  [fxLayout.lt-lg], [fxLayout.lt-xl], [fxLayout.gt-xs], [fxLayout.gt-sm],  [fxLayout.gt-md], [fxLayout.gt-lg]", inputs: ["fxLayout", "fxLayout.xs", "fxLayout.sm", "fxLayout.md", "fxLayout.lg", "fxLayout.xl", "fxLayout.lt-sm", "fxLayout.lt-md", "fxLayout.lt-lg", "fxLayout.lt-xl", "fxLayout.gt-xs", "fxLayout.gt-sm", "fxLayout.gt-md", "fxLayout.gt-lg"] }, { type: i5.DefaultLayoutGapDirective, selector: "  [fxLayoutGap], [fxLayoutGap.xs], [fxLayoutGap.sm], [fxLayoutGap.md],  [fxLayoutGap.lg], [fxLayoutGap.xl], [fxLayoutGap.lt-sm], [fxLayoutGap.lt-md],  [fxLayoutGap.lt-lg], [fxLayoutGap.lt-xl], [fxLayoutGap.gt-xs], [fxLayoutGap.gt-sm],  [fxLayoutGap.gt-md], [fxLayoutGap.gt-lg]", inputs: ["fxLayoutGap", "fxLayoutGap.xs", "fxLayoutGap.sm", "fxLayoutGap.md", "fxLayoutGap.lg", "fxLayoutGap.xl", "fxLayoutGap.lt-sm", "fxLayoutGap.lt-md", "fxLayoutGap.lt-lg", "fxLayoutGap.lt-xl", "fxLayoutGap.gt-xs", "fxLayoutGap.gt-sm", "fxLayoutGap.gt-md", "fxLayoutGap.gt-lg"] }, { type: i6.NgForOf, selector: "[ngFor][ngForOf]", inputs: ["ngForOf", "ngForTrackBy", "ngForTemplate"] }, { type: i5.DefaultFlexDirective, selector: "  [fxFlex], [fxFlex.xs], [fxFlex.sm], [fxFlex.md],  [fxFlex.lg], [fxFlex.xl], [fxFlex.lt-sm], [fxFlex.lt-md],  [fxFlex.lt-lg], [fxFlex.lt-xl], [fxFlex.gt-xs], [fxFlex.gt-sm],  [fxFlex.gt-md], [fxFlex.gt-lg]", inputs: ["fxFlex", "fxFlex.xs", "fxFlex.sm", "fxFlex.md", "fxFlex.lg", "fxFlex.xl", "fxFlex.lt-sm", "fxFlex.lt-md", "fxFlex.lt-lg", "fxFlex.lt-xl", "fxFlex.gt-xs", "fxFlex.gt-sm", "fxFlex.gt-md", "fxFlex.gt-lg"] }, { type: i4.MatCardTitle, selector: "mat-card-title, [mat-card-title], [matCardTitle]" }, { type: i6.NgIf, selector: "[ngIf]", inputs: ["ngIf", "ngIfThen", "ngIfElse"] }, { type: i4.MatCardContent, selector: "mat-card-content, [mat-card-content], [matCardContent]" }] });
i0.ɵɵngDeclareClassMetadata({ minVersion: "12.0.0", version: "12.2.17", ngImport: i0, type: ViewComponent, decorators: [{
            type: Component,
            args: [{
                    selector: 'app-view',
                    templateUrl: './view.component.html',
                    styleUrls: ['./view.component.scss'
                    ]
                }]
        }], ctorParameters: function () { return [{ type: i1.StorageService }, { type: i2.ApplicationService }, { type: i3.UserService }]; } });
//# sourceMappingURL=data:application/json;base64,