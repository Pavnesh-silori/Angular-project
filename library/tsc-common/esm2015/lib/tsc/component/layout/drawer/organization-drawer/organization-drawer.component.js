import { __awaiter } from "tslib";
import { Component, EventEmitter, Input, Output, ViewChild } from '@angular/core';
import { COMMON_CONSTANT } from '../../../../constant/common.constant';
import { Facility } from '@library/facility-service';
import { Organization, OrgStatus, OrgSiteAccess, OrgType, OrgSiteAccessType } from '@library/organization-service';
import * as i0 from "@angular/core";
import * as i1 from "@angular/router";
import * as i2 from "@library/storage-service";
import * as i3 from "@library/organization-service";
import * as i4 from "@library/facility-service";
import * as i5 from "ngx-perfect-scrollbar";
import * as i6 from "../../../search/search-bar-two/search-bar-two.component";
import * as i7 from "@angular/material/card";
import * as i8 from "@angular/common";
export class OrganizationDrawerComponent {
    constructor(activatedRoute, storageService, organizationService, facilityService) {
        this.activatedRoute = activatedRoute;
        this.storageService = storageService;
        this.organizationService = organizationService;
        this.facilityService = facilityService;
        this.toggleOrgDrawerGlobal = new EventEmitter(true);
        this.COMMON_CONSTANT = COMMON_CONSTANT;
        this.showOrgAndFacility = false;
        this.OrgStatus = OrgStatus;
        this.OrgType = OrgType;
        this.OrgSiteAccessType = OrgSiteAccessType;
        this.organizationM = new Organization();
        this.facilityM = new Facility();
        this.orgSiteAccessM = new OrgSiteAccess();
        this.filteredOrgAccessM = [];
    }
    ngOnInit() {
        this.toggleOrgDrawerGlobal.emit(false);
        this.userID = this.storageService.getStorage('userID');
        this.rootOrgID = this.storageService.getStorage(['rootOrgID']);
        this.currentOrgID = this.storageService.getStorage('currentOrgID');
        if (this.rootOrgID == this.currentOrgID) {
            this.getFacilityByID();
        }
        else {
            this.getOrgByID();
            this.getFacilityByID();
            this.showOrgAndFacility = true;
        }
        this.getOrgSiteWithUserAccess();
    }
    getOrgByID() {
        return __awaiter(this, void 0, void 0, function* () {
            this.organizationM = (yield this.organizationService.getOrganizationByID(this.rootOrgID));
        });
    }
    getFacilityByID() {
        return __awaiter(this, void 0, void 0, function* () {
            this.facilityM = (yield this.facilityService.getFacilityByID(this.rootOrgID, this.currentOrgID));
        });
    }
    getOrgSiteWithUserAccess() {
        var _a;
        return __awaiter(this, void 0, void 0, function* () {
            this.orgSiteAccessM = (yield this.organizationService.getOrgSiteWithUserAccess(this.userID));
            this.filteredOrgAccessM = [...(_a = this.orgSiteAccessM) === null || _a === void 0 ? void 0 : _a.records];
        });
    }
    toggleOrgDrawerFun() {
        this.toggleOrgDrawer = !this.toggleOrgDrawer;
        this.toggleOrgDrawerGlobal.emit(this.toggleOrgDrawer);
    }
    searchFn(value) {
        var _a, _b;
        const searchTerm = value.trim().toLowerCase();
        if (searchTerm.length > 0) {
            this.filteredOrgAccessM = (_a = this.orgSiteAccessM) === null || _a === void 0 ? void 0 : _a.records.filter(org => org.name.trim().toLowerCase().includes(searchTerm));
        }
        else {
            this.searchBar.searchClear();
            this.filteredOrgAccessM = [...(_b = this.orgSiteAccessM) === null || _b === void 0 ? void 0 : _b.records];
        }
    }
    orgSwitch(orgID) {
        let currentRoute = this.activatedRoute;
        let orgSwitchRedirect = null;
        while (currentRoute.firstChild) {
            currentRoute = currentRoute.firstChild;
            if (currentRoute.snapshot.data && currentRoute.snapshot.data.orgSwitchRedirect) {
                orgSwitchRedirect = currentRoute.snapshot.data.orgSwitchRedirect;
            }
        }
        this.organizationService.orgSwitch(orgID, orgSwitchRedirect);
    }
}
OrganizationDrawerComponent.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: "12.0.0", version: "12.2.17", ngImport: i0, type: OrganizationDrawerComponent, deps: [{ token: i1.ActivatedRoute }, { token: i2.StorageService }, { token: i3.OrganizationService }, { token: i4.FacilityService }], target: i0.ɵɵFactoryTarget.Component });
OrganizationDrawerComponent.ɵcmp = i0.ɵɵngDeclareComponent({ minVersion: "12.0.0", version: "12.2.17", type: OrganizationDrawerComponent, selector: "lib-organization-drawer", inputs: { toggleOrgDrawer: "toggleOrgDrawer", drawerAccessType: "drawerAccessType" }, outputs: { toggleOrgDrawerGlobal: "toggleOrgDrawerGlobal" }, viewQueries: [{ propertyName: "searchBar", first: true, predicate: ["searchBar"], descendants: true }], ngImport: i0, template: "<div class=\"drawer-wrapper\">\n    <div class=\"drawer-nav-btn\">\n        <button type=\"button\" class=\"hamburger hamburger--elastic\" [ngClass]=\"{'is-active' : toggleOrgDrawer}\"\n            (click)=\"toggleOrgDrawerFun()\">\n            <span class=\"hamburger-box\"><span class=\"hamburger-inner\"></span></span>\n        </button>\n    </div>\n    <div class=\"drawer-content-wrapper\">\n        <section class=\"scrollbar-container\">\n            <perfect-scrollbar [autoPropagation]=\"true\">\n                <div class=\"container mt-5\">\n                    <div class=\"row mt-3\" *ngIf=\"showOrgAndFacility\">\n                        <ng-container *ngTemplateOutlet=\"orgFacilityTemplate; \n                            context: {\n                                matCardClass: 'org-border-left',\n                                name: organizationM.name,\n                                idLabel: 'Org ID',\n                                id: organizationM.id,\n                                state: organizationM.stateName,\n                                country: organizationM.countryName,\n                                status: organizationM.status,\n                                image: organizationM.logoUrl,\n                                orgFacilityLabel: 'Organization',\n                                orgFacilityLabelClass: 'bg-primary',\n                                type: OrgType.ORGANIZATION\n                            }\">\n                        </ng-container>\n                    </div>\n                    <div class=\"row mt-3\">\n                        <ng-container *ngTemplateOutlet=\"orgFacilityTemplate; \n                            context: {\n                                matCardClass: 'current-org-border-left',\n                                name: facilityM.name,\n                                idLabel: rootOrgID == currentOrgID ? 'Org ID' : 'Facility ID',\n                                id: facilityM.id,\n                                state: facilityM.stateName,\n                                country: facilityM.countryName,\n                                status: facilityM.status,\n                                image: facilityM.logoUrl,\n                                orgFacilityLabel: rootOrgID == currentOrgID ? 'Current organization' : 'Current facility',\n                                orgFacilityLabelClass: 'bg-success',\n                                type: rootOrgID == currentOrgID ? OrgType.ORGANIZATION : OrgType.SITE\n                            }\">\n                        </ng-container>\n                    </div>\n                    <div class=\"row mt-4\">\n                        <div class=\"col-sm-6\">\n                            <span class=\"card-title sectionTitle\">\n                                <ng-container *ngIf=\"drawerAccessType == OrgSiteAccessType.SITE; else showOrg;\">\n                                    All Facilities\n                                </ng-container>\n                                <ng-template #showOrg>\n                                    All Organizations\n                                </ng-template>\n                            </span>\n                            <span class=\"badge rounded-pill bg-light text-dark ms-3\">{{ orgSiteAccessM ?\n                                orgSiteAccessM.totalCount : COMMON_CONSTANT.HYPHEN }}</span>\n                        </div>\n                        <div class=\"col-sm-6\">\n                            <lib-search-bar-two class=\"float-end me-3\" #searchBar searchBy=\"name\"\n                                (emitSearch)=\"searchFn($event)\">\n                            </lib-search-bar-two>\n                        </div>\n                    </div>\n                    <div class=\"row mt-3\">\n                        <div class=\"col-sm-12 mb-3\" *ngFor=\"let org of filteredOrgAccessM; let i=index\"\n                            (click)=\"currentOrgID != org.id && orgSwitch(org.id)\"\n                            [ngClass]=\"{'cursorPointer': currentOrgID != org.id}\">\n                            <mat-card class=\"card cardOverwrite\"\n                                [ngClass]=\"{'current-org': currentOrgID == org.id, 'border': currentOrgID != org.id}\">\n                                <div class=\"row\">\n                                    <div class=\"col-sm-8 d-flex flex-column justify-content-center\">\n                                        <span class=\"fw-bold\">{{ org.name ? org.name :\n                                            COMMON_CONSTANT.HYPHEN }}</span>\n                                        <div class=\"row text-secondary\">\n                                            <div class=\"col-sm-4\" *ngIf=\"org.type == OrgType.ORGANIZATION\">Org ID:\n                                            </div>\n                                            <div class=\"col-sm-4\" *ngIf=\"org.type == OrgType.SITE\">Facility ID:</div>\n                                            <div class=\"col-sm-8 fw-bold\">{{ org.id }}</div>\n                                        </div>\n                                        <div *ngIf=\"org.type == OrgType.SITE\">\n                                            <div class=\"row text-secondary\">\n                                                <div class=\"col-sm-4\">Org Name:</div>\n                                                <div class=\"col-sm-8 fw-bold\">{{ org.orgName }}</div>\n                                            </div>\n                                            <div class=\"row text-secondary\">\n                                                <div class=\"col-sm-4\">Org ID:</div>\n                                                <div class=\"col-sm-8 fw-bold\">{{ org.orgID }}</div>\n                                            </div>\n                                        </div>\n                                    </div>\n                                    <div class=\"col-sm-4 d-flex flex-column align-items-center justify-content-center\">\n                                        <ng-container *ngIf=\"org.logoUrl && org.logoUrl != null; else showDefaultIcon;\">\n                                            <img class=\"listOrgView\" [src]=\"org.logoUrl\" alt=\"org-logo\" />\n                                        </ng-container>\n                                        <ng-template #showDefaultIcon>\n                                            <ng-container *ngIf=\"org.type == OrgType.ORGANIZATION\">\n                                                <span class=\"material-symbols-outlined fs-1\">\n                                                    corporate_fare\n                                                </span>\n                                            </ng-container>\n                                            <ng-container *ngIf=\"org.type == OrgType.SITE\">\n                                                <span class=\"material-symbols-outlined fs-1\">\n                                                    factory\n                                                </span>\n                                            </ng-container>\n                                        </ng-template>\n                                        <span [ngSwitch]=\"org.type\">\n                                            <span class=\"badge rounded-pill mt-2\"\n                                                [ngClass]=\"{'bg-success': currentOrgID == org.id, 'bg-secondary': currentOrgID != org.id}\"\n                                                *ngSwitchCase=\"'ORG'\">Organization</span>\n                                            <span class=\"badge rounded-pill mt-2\"\n                                                [ngClass]=\"{'bg-success': currentOrgID == org.id, 'bg-secondary': currentOrgID != org.id}\"\n                                                *ngSwitchCase=\"'SITE'\">Facility</span>\n                                        </span>\n                                    </div>\n                                </div>\n                                <div class=\"row\" *ngIf=\"org.subscriptionStatus == OrgStatus.INACTIVE_STATUS\">\n                                    <div class=\"col-sm-12\">\n                                        <span class=\"text-danger me-3 fw-bold float-end expiredFontSize\">\n                                            Subscription expired\n                                        </span>\n                                    </div>\n                                </div>\n                            </mat-card>\n                        </div>\n                    </div>\n                </div>\n            </perfect-scrollbar>\n        </section>\n    </div>\n</div>\n\n<div class=\"drawer-overlay\" (click)=\"toggleOrgDrawerFun()\"></div>\n\n<ng-template #orgFacilityTemplate let-name=\"name\" let-state=\"state\" let-country=\"country\" let-status=\"status\"\n    let-type=\"type\" let-idLabel=\"idLabel\" let-id=\"id\" let-matCardClass=\"matCardClass\" let-image=\"image\"\n    let-orgFacilityLabel=\"orgFacilityLabel\" let-orgFacilityLabelClass=\"orgFacilityLabelClass\">\n    <div class=\"col-sm-12\">\n        <mat-card class=\"cardOverwrite cardBackgroundColor\" [class]=\"matCardClass\">\n            <div class=\"row\">\n                <div class=\"col-sm-8\">\n                    <div class=\"d-flex flex-column\">\n                        <span class=\"fw-bold\">\n                            {{ name ? name : COMMON_CONSTANT.HYPHEN }}\n                        </span>\n                        <div class=\"row text-secondary\">\n                            <div class=\"col-sm-4\">\n                                {{ idLabel }}\n                            </div>\n                            <div class=\"col-sm-8 fw-bold\">\n                                {{ id }}\n                            </div>\n                        </div>\n                        <div class=\"row text-secondary\">\n                            <div class=\"col-sm-4\">Address:</div>\n                            <div class=\"col-sm-8 fw-bold\">{{ state }}, {{ country }}</div>\n                        </div>\n                        <div class=\"row\">\n                            <div class=\"col-sm-4 text-secondary\">Status:</div>\n                            <div class=\"col-sm-8 fw-bold\"\n                                [ngClass]=\"{'text-success': status == OrgStatus.ACTIVE_STATUS, 'text-danger': status == OrgStatus.INACTIVE_STATUS}\">\n                                {{ status | titlecase }}\n                            </div>\n                        </div>\n                    </div>\n                </div>\n                <div class=\"col-sm-4 d-flex flex-column align-items-center justify-content-center\">\n                    <ng-container *ngIf=\"image && image != null; else showIcon;\">\n                        <img class=\"orgViewLogo\" [src]=\"image\" alt=\"org-logo\" />\n                    </ng-container>\n                    <ng-template #showIcon>\n                        <ng-container *ngIf=\"type == OrgType.ORGANIZATION\">\n                            <span class=\"material-symbols-outlined fs-1\">\n                                corporate_fare\n                            </span>\n                        </ng-container>\n                        <ng-container *ngIf=\"type == OrgType.SITE\">\n                            <span class=\"material-symbols-outlined fs-1\">\n                                factory\n                            </span>\n                        </ng-container>\n                    </ng-template>\n                    <span class=\"badge rounded-pill mt-2\" [class]=\"orgFacilityLabelClass\">{{ orgFacilityLabel }}</span>\n                </div>\n            </div>\n        </mat-card>\n    </div>\n</ng-template>", styles: [".mat-card{padding:12px}.current-org-border-left{border-left:5px solid #3ac47d}.org-border-left{border-left:5px solid #007bff}.cardBackgroundColor{background:whitesmoke}.badge{text-transform:none}.orgViewLogo{height:45px}.listOrgView{height:30px}.current-org{border-left:5px solid #3ac47d;background:whitesmoke}.expiredFontSize{font-size:12px}\n"], components: [{ type: i5.PerfectScrollbarComponent, selector: "perfect-scrollbar", inputs: ["disabled", "usePSClass", "autoPropagation", "scrollIndicators", "config"], outputs: ["psScrollY", "psScrollX", "psScrollUp", "psScrollDown", "psScrollLeft", "psScrollRight", "psYReachEnd", "psYReachStart", "psXReachEnd", "psXReachStart"], exportAs: ["ngxPerfectScrollbar"] }, { type: i6.SearchBarTwoComponent, selector: "lib-search-bar-two", inputs: ["type", "searchBy", "clear"], outputs: ["emitSearch"] }, { type: i7.MatCard, selector: "mat-card", exportAs: ["matCard"] }], directives: [{ type: i8.NgClass, selector: "[ngClass]", inputs: ["class", "ngClass"] }, { type: i8.NgIf, selector: "[ngIf]", inputs: ["ngIf", "ngIfThen", "ngIfElse"] }, { type: i8.NgTemplateOutlet, selector: "[ngTemplateOutlet]", inputs: ["ngTemplateOutletContext", "ngTemplateOutlet"] }, { type: i8.NgForOf, selector: "[ngFor][ngForOf]", inputs: ["ngForOf", "ngForTrackBy", "ngForTemplate"] }, { type: i8.NgSwitch, selector: "[ngSwitch]", inputs: ["ngSwitch"] }, { type: i8.NgSwitchCase, selector: "[ngSwitchCase]", inputs: ["ngSwitchCase"] }], pipes: { "titlecase": i8.TitleCasePipe } });
i0.ɵɵngDeclareClassMetadata({ minVersion: "12.0.0", version: "12.2.17", ngImport: i0, type: OrganizationDrawerComponent, decorators: [{
            type: Component,
            args: [{
                    selector: 'lib-organization-drawer',
                    templateUrl: './organization-drawer.component.html',
                    styleUrls: ['./organization-drawer.component.scss']
                }]
        }], ctorParameters: function () { return [{ type: i1.ActivatedRoute }, { type: i2.StorageService }, { type: i3.OrganizationService }, { type: i4.FacilityService }]; }, propDecorators: { toggleOrgDrawer: [{
                type: Input
            }], drawerAccessType: [{
                type: Input
            }], toggleOrgDrawerGlobal: [{
                type: Output
            }], searchBar: [{
                type: ViewChild,
                args: ['searchBar']
            }] } });
//# sourceMappingURL=data:application/json;base64,