import { __awaiter } from "tslib";
import { Component } from '@angular/core';
import { ApplicationKeyID } from '@library/application-service';
import { OrgType } from '@library/organization-service';
import * as i0 from "@angular/core";
import * as i1 from "@library/storage-service";
import * as i2 from "@library/application-service";
import * as i3 from "@ng-bootstrap/ng-bootstrap";
import * as i4 from "@angular/common";
export class ApplicationDrawerComponent {
    constructor(storageService, applicationService) {
        this.storageService = storageService;
        this.applicationService = applicationService;
        this.applicationM = [];
        this.applicationFilter = [];
        this.currentOrgType = '';
        this.currentOrgID = '';
        this.currentRootOrgID = '';
    }
    ngOnInit() {
        this.applicationKeyID = this.storageService.getStorage('applicationKeyID');
        this.currentOrgType = this.storageService.getStorage('currentOrgType');
        this.currentOrgID = this.storageService.getStorage('currentOrgID');
        this.currentRootOrgID = this.storageService.getStorage('rootOrgID');
        if (this.applicationKeyID == ApplicationKeyID.ACCOUNT_KEY_ID) {
            this.getAllApplication();
        }
        else {
            this.getApplicationByUserAccess();
        }
    }
    getAllApplication() {
        return __awaiter(this, void 0, void 0, function* () {
            this.applicationM = (yield this.applicationService.getAllApplication());
            this.applicationFilter = this.applicationM.filter(applicationFilter => applicationFilter['keyID'] != ApplicationKeyID.NETZERO_ADMIN_KEY_ID &&
                applicationFilter['keyID'] != ApplicationKeyID.EMPLOYEE_KEY_ID);
        });
    }
    getApplicationByUserAccess() {
        return __awaiter(this, void 0, void 0, function* () {
            this.applicationM = (yield this.applicationService.getApplicationByUserAccess());
            this.applicationFilter = this.applicationM.filter(applicationFilter => applicationFilter['keyID'] != this.applicationKeyID &&
                applicationFilter['keyID'] != ApplicationKeyID.EMPLOYEE_KEY_ID);
        });
    }
    getApplicationLogo(keyID) {
        let logo;
        logo = this.applicationService.getApplicationLogoWithoutName(keyID);
        return logo;
    }
    appUrlBuilder(applicationKeyID, appURL) {
        let url = appURL;
        let orgLevelApp = [ApplicationKeyID.ADMIN_KEY_ID, ApplicationKeyID.OFFSET_KEY_ID];
        let siteLevelApp = [ApplicationKeyID.ENERGY_KEY_ID, ApplicationKeyID.WATER_KEY_ID, ApplicationKeyID.ENVIRO_KEY_ID];
        let orgSiteLevelApp = [ApplicationKeyID.NETZERO_KEY_ID, ApplicationKeyID.CONNECT_KEY_ID];
        if (orgLevelApp.includes(applicationKeyID) && this.currentOrgType == OrgType.ORGANIZATION) {
            url = `${appURL}&orgID=${this.currentRootOrgID}`;
        }
        else if (siteLevelApp.includes(applicationKeyID) && this.currentOrgType == OrgType.SITE) {
            url = `${appURL}&orgID=${this.currentOrgID}`;
        }
        else if (orgSiteLevelApp.includes(applicationKeyID) && (this.currentOrgType == OrgType.ORGANIZATION || this.currentOrgType == OrgType.SITE)) {
            url = `${appURL}&orgID=${this.currentOrgID}`;
        }
        else {
            url = appURL;
        }
        return url;
    }
}
ApplicationDrawerComponent.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: "12.0.0", version: "12.2.17", ngImport: i0, type: ApplicationDrawerComponent, deps: [{ token: i1.StorageService }, { token: i2.ApplicationService }], target: i0.ɵɵFactoryTarget.Component });
ApplicationDrawerComponent.ɵcmp = i0.ɵɵngDeclareComponent({ minVersion: "12.0.0", version: "12.2.17", type: ApplicationDrawerComponent, selector: "lib-application-drawer", ngImport: i0, template: "<div class=\"header-dots\">\n    <div class=\"btn-group\" ngbDropdown placement=\"bottom\">\n        <button type=\"button\" class=\"btn btn-link text-secondary p-0\" ngbDropdownToggle>\n            <span class=\"material-symbols-outlined fw-bolder\">\n                apps\n            </span>\n        </button>\n        <div class=\"dropdown-menu-xl mt-3 appDrawerPositioning\" ngbDropdownMenu>\n            <div class=\"grid-menu grid-menu-xl grid-menu-3col\">\n                <div class=\"g-0 row\">\n\n                    <div class=\"col-sm-4 col-xl-4 border-0\" *ngFor=\"let applicationsM of applicationFilter\">\n                        <a class=\"btn\" [href]=\"appUrlBuilder(applicationsM.keyID, applicationsM.url)\" target=\"_blank\">\n\n                            <img class=\"appDrawerIcon\" [src]=\"getApplicationLogo(applicationsM.keyID)\" alt=\"{{ applicationsM.name }}\">\n                            <br />\n                            <span class=\"appDrawerName\">{{ applicationsM.name }}</span>\n                        </a>\n                    </div>\n\n                </div>\n            </div>\n        </div>\n    </div>\n</div>\n", styles: [".appDrawerPositioning{transform:translate(-355px,35px)!important;border-radius:20px}.appDrawerIcon{width:auto;height:40px;margin-bottom:10px}.appDrawerName{font-size:14px}\n"], directives: [{ type: i3.NgbDropdown, selector: "[ngbDropdown]", inputs: ["autoClose", "dropdownClass", "open", "placement", "container", "display"], outputs: ["openChange"], exportAs: ["ngbDropdown"] }, { type: i3.NgbDropdownToggle, selector: "[ngbDropdownToggle]" }, { type: i3.NgbDropdownMenu, selector: "[ngbDropdownMenu]" }, { type: i4.NgForOf, selector: "[ngFor][ngForOf]", inputs: ["ngForOf", "ngForTrackBy", "ngForTemplate"] }] });
i0.ɵɵngDeclareClassMetadata({ minVersion: "12.0.0", version: "12.2.17", ngImport: i0, type: ApplicationDrawerComponent, decorators: [{
            type: Component,
            args: [{
                    selector: 'lib-application-drawer',
                    templateUrl: './application-drawer.component.html',
                    styleUrls: ['./application-drawer.component.scss']
                }]
        }], ctorParameters: function () { return [{ type: i1.StorageService }, { type: i2.ApplicationService }]; } });
//# sourceMappingURL=data:application/json;base64,