{"version":3,"file":"library-netzero.js","sources":["../../../projects/library/netzero/src/lib/netzero.service.ts","../../../projects/library/netzero/src/lib/netzero.component.ts","../../../projects/library/netzero/src/lib/netzero.module.ts","../../../projects/library/netzero/src/lib/tsc/enum/vechile-type.enum.ts","../../../projects/library/netzero/src/lib/tsc/model/vehicle.model.ts","../../../projects/library/netzero/src/lib/tsc/component/vehicle/vehicle-routing.module.ts","../../../projects/library/netzero/src/lib/tsc/component/vehicle/vehicle.module.ts","../../../projects/library/netzero/src/lib/tsc/controller/vehicle.controller.ts","../../../projects/library/netzero/src/lib/tsc/service/vehicle.service.ts","../../../projects/library/netzero/src/lib/tsc/enum/page-path.enum.ts","../../../projects/library/netzero/src/lib/tsc/enum/emission-factor.enum.ts","../../../projects/library/netzero/src/lib/tsc/enum/activity.enum.ts","../../../projects/library/netzero/src/lib/tsc/controller/preference.controller.ts","../../../projects/library/netzero/src/lib/tsc/service/preference.service.ts","../../../projects/library/netzero/src/lib/tsc/component/vehicle/create-update/create-update.component.ts","../../../projects/library/netzero/src/lib/tsc/component/vehicle/create-update/create-update.component.html","../../../projects/library/netzero/src/lib/tsc/component/vehicle/create-update/create-update-routing.module.ts","../../../projects/library/netzero/src/lib/tsc/component/vehicle/create-update/create-update.module.ts","../../../projects/library/netzero/src/lib/tsc/component/vehicle/page/page.component.ts","../../../projects/library/netzero/src/lib/tsc/component/vehicle/page/page.component.html","../../../projects/library/netzero/src/lib/tsc/component/vehicle/page/page-routing.module.ts","../../../projects/library/netzero/src/lib/tsc/component/vehicle/page/page.module.ts","../../../projects/library/netzero/src/public-api.ts","../../../projects/library/netzero/src/library-netzero.ts"],"sourcesContent":["import { Injectable } from '@angular/core';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class NetzeroService {\n\n  constructor() { }\n}\n","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'lib-netzero',\n  template: `\n    <p>\n      netzero works!\n    </p>\n  `,\n  styles: [\n  ]\n})\nexport class NetzeroComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit(): void {\n  }\n\n}\n","import { NgModule, ModuleWithProviders } from '@angular/core';\nimport { NetzeroComponent } from './netzero.component';\n\n@NgModule({\n    declarations: [\n        NetzeroComponent\n    ],\n    imports: [\n    ],\n    exports: [\n        NetzeroComponent\n    ]\n})\n\nexport class NetzeroModule {\n    static forRoot(environment: any, constant: any): ModuleWithProviders<NetzeroModule> {\n        return {\n            ngModule: NetzeroModule,\n            providers: [\n                { provide: 'environment', useValue: environment },\n                { provide: 'constant', useValue: constant }\n            ]\n        };\n    }\n}\n","export enum VehicleTypeEnum {\n    ON_ROAD = 'on-road',\n    NON_ROAD = 'non-road'\n}\n","export interface VehicleTypeM {\n    id: number;\n    name: string;\n    keyID: string;\n    status: string;\n}\n\nexport class VehicleType implements VehicleTypeM {\n    id;\n    name;\n    keyID;\n    status;\n}\n\nexport interface VehicleCategoryM {\n    id: number;\n    status: string;\n    name: string;\n    description: string | null;\n    typeID: number;\n}\n\nexport class VehicleCategory implements VehicleCategoryM {\n    id;\n    status;\n    name;\n    description;\n    typeID;\n}\n\nexport interface EngineStrokeM {\n    id: number;\n    name: string;\n    keyID: number,\n    status: string;\n}\n\nexport class EngineStroke implements EngineStrokeM {\n    id;\n    name;\n    keyID;\n    status;\n}\n\nexport interface VehicleM {\n    id: number,\n    vehicleName: string,\n    vehicleNumber: string,\n    vehicleType: {\n        id: number,\n        name: string,\n        keyID: string,\n        status: string\n    },\n    sourceTypeID: number,\n    vehicleCategory: {\n        id: number,\n        status: string,\n        name: string,\n        description: string,\n        typeID: number\n    },\n    year: string,\n    odoMeterUnit: {\n        unitID: number,\n        uomName: string,\n        uomCode: string,\n        unitTypeName: string,\n        unitType: string,\n        unitSubType: string\n    },\n    engineStroke: string,\n};\n\nexport class Vehicle implements VehicleM {\n    id;\n    vehicleName;\n    vehicleNumber;\n    vehicleType: {\n        id;\n        name;\n        keyID;\n        status;\n    };\n    sourceTypeID;\n    vehicleCategory: {\n        id;\n        status;\n        name;\n        description;\n        typeID;\n    };\n    year;\n    odoMeterUnit: {\n        unitID;\n        uomName;\n        uomCode;\n        unitTypeName;\n        unitType;\n        unitSubType;\n    };\n    engineStroke;\n}\n\nexport interface VehiclePageM {\n    totalCount: number,\n    vehicle: VehicleM[]\n}\n\nexport class VehiclePage implements VehiclePageM {\n    totalCount;\n    vehicle: [\n        {\n            id;\n            vehicleName;\n            vehicleNumber;\n            vehicleType: {\n                id;\n                name;\n                keyID;\n                status;\n            },\n            sourceTypeID;\n            vehicleCategory: {\n                id;\n                status;\n                name;\n                description;\n                typeID;\n            },\n            year;\n            odoMeterUnit: {\n                unitID;\n                uomName;\n                uomCode;\n                unitTypeName;\n                unitType;\n                unitSubType;\n            }\n            engineStroke;\n        }\n    ]\n}\n\nexport interface VehicleByTypeM {\n    id: number;\n    vehicleName: string;\n    vehicleNumber: string;\n    sourceTypeID: number;\n    vehicleTypeID: number;\n  }\n\nexport class VehicleByType implements VehicleByTypeM{\n    id;\n    vehicleName;\n    vehicleNumber;\n    sourceTypeID;\n    vehicleTypeID;\n}\n\n\n\n","import { NgModule } from '@angular/core';\nimport { RouterModule, Routes } from '@angular/router';\n\nimport { FormAction, VIEW_TYPE_ENUM } from '@library/tsc-common';\n\nconst routes: Routes = [\n    {\n        path: 'create',\n        loadChildren: () => import('./create-update/create-update.module').then(m => m.CreateUpdateModule),\n        data: { action: FormAction.CREATE, source: VIEW_TYPE_ENUM.PAGE }\n    },\n    {\n        path: ':vehicleID/update',\n        loadChildren: () => import('./create-update/create-update.module').then(m => m.CreateUpdateModule),\n        data: { action: FormAction.UPDATE, source: VIEW_TYPE_ENUM.PAGE }\n    },\n    {\n        path: 'page',\n        loadChildren: () => import('./page/page.module').then(m => m.PageModule)\n    }\n];\n\n@NgModule({\n    imports: [RouterModule.forChild(routes)],\n    exports: [RouterModule]\n})\n\nexport class VehicleRoutingModule { }\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\n\nimport { VehicleRoutingModule } from './vehicle-routing.module';\n\n@NgModule({\n    declarations: [],\n    imports: [\n        CommonModule,\n        VehicleRoutingModule,\n    ]\n})\n\nexport class VehicleModule { }\n","import { Injectable, Inject } from '@angular/core';\nimport { HttpClient, HttpParams } from '@angular/common/http';\n\nimport { Observable } from 'rxjs';\n\nimport { VehicleCategoryM, VehicleTypeM, VehicleByTypeM, VehicleM, VehiclePageM, EngineStrokeM } from '../model/vehicle.model';\n\n@Injectable({\n    providedIn: 'root'\n})\nexport class VehicleController {\n\n    constructor(\n        private http: HttpClient,\n        @Inject('environment') private environment: any\n    ) { }\n\n    createVehicle(orgID, value) {\n        return this.http.post(`${this.environment.COMMON_API_URL}organizations/${orgID}/vehicles`, value);\n    }\n\n    createVehicleForEmployee(orgID, employeeID, value) {\n        return this.http.post(`${this.environment.COMMON_API_URL}organizations/${orgID}/employees/${employeeID}/vehicles`, value);\n    }\n\n    getVehicleByPage(pageNo: number, pazeSize: number, orgId, filterArr): Observable<VehiclePageM> {\n        let params = new HttpParams();\n        params = params.append('pageNo', pageNo);\n        params = params.append('pageSize', pazeSize);\n        filterArr.forEach(filter => params = params.append('filter', filter))\n        return this.http.get<VehiclePageM>(`${this.environment.COMMON_API_URL}organizations/${orgId}/vehicles`, { params: params });\n    }\n\n    getVehicleByID(orgID, vehicleID): Observable<VehicleM> {\n        return this.http.get<VehicleM>(`${this.environment.COMMON_API_URL}organizations/${orgID}/${vehicleID}`)\n    }\n\n    updateVehicle(orgID, value, vehicleID) {\n        return this.http.patch(`${this.environment.COMMON_API_URL}organizations/${orgID}/vehicles/${vehicleID}`, value);\n    }\n\n    vehicleExist(orgID, vehicleNumber) {\n        return this.http.get(`${this.environment.COMMON_API_URL}organizations/${orgID}/vehicles/exit-vehicle/${vehicleNumber}`)\n    }\n\n    getVehicleType(): Observable<VehicleTypeM[]> {\n        return this.http.get<VehicleTypeM[]>(`${this.environment.COMMON_API_URL}vehicle-type`);\n    }\n\n    getVehicleCategory(): Observable<VehicleCategoryM[]> {\n        return this.http.get<VehicleCategoryM[]>(`${this.environment.COMMON_API_URL}vehicle-category`);\n    }\n\n    getEngineStroke(): Observable<EngineStrokeM[]> {\n        return this.http.get<EngineStrokeM[]>(`${this.environment.COMMON_API_URL}engine-stroke`);\n    }\n\n    vehicleBulkUpload(orgId, file) {\n        return this.http.post(`${this.environment.COMMON_API_URL}organizations/${orgId}/vehicles/bulk-upload`, file);\n    }\n\n    getVehicleByTypeID(orgID, vehicleTypeID):Observable<VehicleByTypeM[]> {\n        let params = new HttpParams();\n        params = params.append('vehicleTypeId', vehicleTypeID);\n\n        return this.http.get<VehicleByTypeM[]>(`${this.environment.COMMON_API_URL}organizations/${orgID}/vehicles/all`, {params:params});\n    }\n\n    getAllVehicle(orgID):Observable<VehicleByTypeM[]>{\n        return this.http.get<VehicleByTypeM[]>(`${this.environment.COMMON_API_URL}organizations/${orgID}/vehicles/all`);\n    }\n\n\n}\n","import { Injectable } from \"@angular/core\";\n\nimport { VehicleTypeM, VehicleType, VehicleByTypeM, VehicleByType, VehicleCategoryM, VehicleCategory, EngineStrokeM, EngineStroke } from '../model/vehicle.model';\nimport { VehicleController } from \"../controller/vehicle.controller\";\n\n@Injectable({\n    providedIn: 'root'\n})\n\nexport class VehicleService {\n    constructor(\n        private vehicleController: VehicleController\n    ) { }\n\n    async getVehicleType(): Promise<VehicleTypeM[]> {\n        let vehicleTypeM: VehicleTypeM[];\n\n        try {\n            vehicleTypeM = await this.vehicleController.getVehicleType().toPromise();\n\n            if (vehicleTypeM) {\n                return vehicleTypeM;\n            } else {\n                return [new VehicleType()];\n            }\n        } catch (error) {\n            console.error('Error in getVehicleType -', error);\n            return [new VehicleType()];\n        }\n    }\n\n    async getVehicleCategory(): Promise<VehicleCategoryM[]> {\n        let vehicleCategoryM: VehicleCategoryM[];\n\n        try {\n            vehicleCategoryM = await this.vehicleController.getVehicleCategory().toPromise();\n\n            if (vehicleCategoryM) {\n                return vehicleCategoryM;\n            } else {\n                return [new VehicleCategory()];\n            }\n        } catch (error) {\n            console.error('Error in getVehicleCategory -', error);\n            return [new VehicleCategory()];\n        }\n    }\n\n    async getEngineStroke(): Promise<EngineStrokeM[]> {\n        let engineStrokeM: EngineStrokeM[];\n\n        try {\n            engineStrokeM = await this.vehicleController.getEngineStroke().toPromise();\n\n            if (engineStrokeM) {\n                return engineStrokeM;\n            } else {\n                return [new EngineStroke()];\n            }\n        } catch (error) {\n            console.error('Error in getEngineStroke -', error);\n            return [new EngineStroke()];\n        }\n    }\n\n    async getVehicleByTypeID(currentOrgID, VechileTypeID): Promise<VehicleByTypeM[]> {\n        let vechileTypeM: VehicleByTypeM[];\n        let vechileType = [new VehicleByType()];\n        try {\n            vechileTypeM = await this.vehicleController.getVehicleByTypeID(currentOrgID, VechileTypeID).toPromise();\n            if (vechileTypeM) {\n                return vechileTypeM;\n            } else {\n                return vechileType;\n            }\n        } catch (error) {\n            console.error('Error -', error);\n            return vechileType;\n        }\n    }\n\n    async getAllVehicle(currentOrgID): Promise<VehicleByTypeM[]> {\n        let vechileTypeM: VehicleByTypeM[];\n        let vechileType = [new VehicleByType()];\n        try {\n            vechileTypeM = await this.vehicleController.getAllVehicle(currentOrgID).toPromise();\n            if (vechileTypeM) {\n                return vechileTypeM;\n            } else {\n                return vechileType;\n            }\n        } catch (error) {\n            console.error('Error -', error);\n            return vechileType;\n        }\n    }\n\n}","export enum PagePathEnum {\n    VEHICLE_LIST_PAGE = '/source/vehicle1/page'\n}\n","export enum EMISSION_FACTOR_SOUREC_KEYID_ENUM {\n    IPCC_GUIDELINES_FOR_NATIONAL_GREENHOUSE_GAS_INVENTORIES = 'ipcc-guidelines-for-national-greenhouse-gas-inventories',\n    GHG_EMISSION_FACTORS_HUB_US_EPA = 'ghg-emission-factors-hub-us-epa'\n}\n","export enum ACTIVITY_KEYID_ENUM {\n    PURCHASED_ELECTRICITY = \"purchased-electricity\",\n    PURCHASED_HEAT_STEAM = \"purchased-heat-steam\",\n    PURCHASED_COOLING = \"purchased-cooling\",\n    STATIONARY_COMBUSTION = \"stationary-combustion\",\n    MOBILE_COMBUSTION = \"mobile-combustion\",\n    PURCHASED_GOODS_AND_SERVICES = 'purchased-goods-and-services',\n    CAPITAL_GOODS = 'capital-goods',\n    UPSTREAM_TRANSPORTATION_AND_DISTRIBUTION = 'upstream-transportation-and-distribution',\n    DOWNSTREAM_TRANSPORTATION_AND_DISTRIBUTION = 'downstream-transportation-and-distribution',\n    BUSINESS_TRAVEL = 'business-travel',\n    REFRIGERATION_AC_AND_FIRE_SUPPRESSION = \"refrigeration-ac-and-fire-suppression\",\n    OTHER_FUGITIVE_EMISSION = 'other-fugitive-emission',\n    WASTE_GENERATED_IN_OPERATIONS = \"waste-generated-in-operations\",\n    EMPLOYEE_COMMUTING = 'employee-commuting',\n    PROCESS_EMISSION = 'process-emission',\n    CHP_ATTRIBUTION = 'chp-attribution',\n    PROCESS_ELECTRICITY_CONSUMPTION = 'process-electricity-consumption',\n    PROCESS_HEAT_CONSUMPTION = 'process-heat-consumption',\n    PROCESS_FUEL_CONSUMPTION = 'process-fuel-consumption',\n    PURCHASED_PRECURSOR = 'purchased-precursor',\n    PROCESS_PRECURSOR_CONSUMPTION = 'process-precursor-consumption',\n    PROCESS_ELECTRICITY_EXPORT = 'process-electricity-export',\n    PROCESS_HEAT_EXPORT = 'process-heat-export',\n    PROCESS_PRECURSOR_EXPORT = 'process-precursor-export',\n    PROCESS_WASTE_GAS_EXPORT = 'process-waste-gas-export',\n    PROCESS_INTERMEDIATE_PRODUCT_EXPORT = 'process-intermediate-product-export',\n    PROCESS_PRODUCTION_LEVEL = 'process-production-level',\n    SPEND_BASED_METHOD = \"spend-based-method\",\n\n    // factor standard database \n    US_EEIO_KEY_ID = 'us-eeio',\n    // factor standard database \n}\n\nexport enum ProcessEmissionActivityTypeKeyIDEnum {\n    STANDARD = 'STANDARD',\n    CUSTOM = 'CUSTOM',\n}\n","import { Injectable, Inject } from '@angular/core';\nimport { HttpClient } from '@angular/common/http';\n\n@Injectable({\n    providedIn: 'root'\n})\n\nexport class PreferenceController {\n\n    constructor(\n        private http: HttpClient,\n        @Inject('environment') private environment: any\n    ) { }\n\n    getOrgPreference(orgID) {\n        return this.http.get(`${this.environment.CARBON_ACCOUNTING_API_URL}organizations/${orgID}/preference`);\n    }\n}\n","import { Injectable } from '@angular/core';\nimport { PreferenceController } from '../controller/preference.controller';\n\n@Injectable({\n    providedIn: 'root'\n})\n\nexport class PreferenceService {\n\n    constructor(\n        private preferenceController: PreferenceController\n    ) { }\n\n    async getOrgPreference(orgID): Promise<any> {\n        let preference: any = null;\n\n        try {\n            preference = await this.preferenceController.getOrgPreference(orgID).toPromise();\n\n            if (preference) {\n                return preference;\n            } else {\n                throw new Error('Preference not found');\n            }\n        } catch (error) {\n            console.error('Error -', error);\n            return null;\n        }\n    }\n}\n","import { Component, Inject, OnInit, ViewChild, SimpleChanges, Input, Optional } from '@angular/core';\nimport { FormBuilder, FormControl, FormGroup, Validators } from '@angular/forms';\nimport { MAT_DIALOG_DATA, MatDialogRef } from '@angular/material/dialog';\nimport { ActivatedRoute, Router } from '@angular/router';\n\nimport { forkJoin } from 'rxjs';\n\nimport { isEqual } from 'lodash';\n\nimport { VehicleCategoryM, EngineStrokeM, VehicleTypeM, VehicleM } from '../../../model/vehicle.model';\nimport { VehicleController } from '../../../controller/vehicle.controller';\nimport { VehicleService } from '../../../service/vehicle.service';\nimport { PreferenceService } from '../../../service/preference.service';\nimport { VehicleTypeEnum } from '../../../enum/vechile-type.enum';\nimport { PagePathEnum } from '../../../enum/page-path.enum';\nimport { EMISSION_FACTOR_SOUREC_KEYID_ENUM } from '../../../enum/emission-factor.enum';\nimport { ACTIVITY_KEYID_ENUM } from '../../../enum/activity.enum';\n\n// tsc-library\nimport { ResponseM, MaterialFormFieldAppearance, InvalidForm, ButtonLabelEnum, FormAction, PageTitleEnum, VIEW_TYPE_ENUM, FormErrorEnum, TSCCommonService, DialogEnum } from '@library/tsc-common';\nimport { UnitM, UnitService, UnitTypeKeyID } from '@library/unit-service';\nimport { ToastrService, ToastrTitle, ToastrColor } from '@library/toastr-service';\nimport { StorageService } from '@library/storage-service';\nimport { ApplicationKeyID } from '@library/application-service';\nimport { DateInputComponent, DateInputTypeEnum, DateService } from '@library/date';\n// /tsc-library/\n\n@Component({\n    selector: 'app-create-update',\n    templateUrl: './create-update.component.html',\n    styleUrls: ['./create-update.component.scss']\n})\n\nexport class CreateUpdateComponent implements OnInit {\n    FormAction = FormAction;\n    FormErrorEnum = FormErrorEnum;\n    ButtonLabelEnum = ButtonLabelEnum;\n    PageTitleEnum = PageTitleEnum;\n    VIEW_TYPE_ENUM = VIEW_TYPE_ENUM;\n    VehicleTypeEnum = VehicleTypeEnum;\n    MaterialFormFieldAppearance = MaterialFormFieldAppearance;\n\n    DateInputTypeEnum = DateInputTypeEnum\n    @ViewChild('yearInput') yearInput: DateInputComponent;\n\n    vehicleFG: FormGroup;\n    rootOrgID: any;\n    userID: any;\n    applicationStdKeyID: string;\n    action: string;\n    source: string;\n    vehicleID: any;\n    vehicle: any;\n    isEngineStroke: boolean = false;\n    isEqual: boolean = true;\n    isIpcc: boolean = false;\n    intialObject: any;\n\n    vehicleTypeM: VehicleTypeM[];\n    vehicleCategoryM: VehicleCategoryM[];\n    vehicleCategoryOR: VehicleCategoryM[];\n    vehicleCategoryNR: VehicleCategoryM[];\n    vehicleCategory: VehicleCategoryM[];\n    engineStrokeM: EngineStrokeM[];\n    unitM: UnitM[];\n\n    constructor(\n        @Optional() @Inject(MAT_DIALOG_DATA) private dialogData: any,\n        @Optional() private dialogRef: MatDialogRef<CreateUpdateComponent>,\n        private activatedRoute: ActivatedRoute,\n        private router: Router,\n        private formBuilder: FormBuilder,\n        private toastrService: ToastrService,\n        private unitService: UnitService,\n        private vehicleController: VehicleController,\n        private vehicleService: VehicleService,\n        private preferenceService: PreferenceService,\n        private storageService: StorageService,\n        private tSCCommonService: TSCCommonService,\n        @Inject('constant') private constant: any\n    ) { }\n\n    ngOnInit(): void {\n        this.rootOrgID = this.storageService.getStorage('rootOrgID');\n        this.userID = this.storageService.getStorage('userID');\n\n        this.vehicleFGInit();\n        this.ipccFieldHandler();\n\n        if (this.dialogData) {\n            this.action = this.dialogData.action;\n            this.source = this.dialogData.source;\n\n            if (this.action == FormAction.UPDATE) {\n                this.vehicleID = this.dialogData.vehicleID;\n            }\n        } else {\n            this.activatedRoute.data.subscribe(data => {\n                this.action = data.action;\n                this.source = data.source;\n            });\n\n            this.activatedRoute.params.subscribe(params => {\n                if (this.action == FormAction.UPDATE) {\n                    this.vehicleID = params.vehicleID;\n                }\n            });\n        }\n    }\n\n    vehicleFGInit() {\n        this.vehicleFG = this.formBuilder.group({\n            vehicleName: [, Validators.required],\n            vehicleNumber: [, Validators.required],\n            vehicleTypeID: [, Validators.required],\n            vehicleCategoryID: [],\n            engineStrokeId: [],\n            odoMeterUnitID: [, Validators.required],\n            year: []\n        });\n    }\n\n    dateInpChange() {\n        let duration = this.yearInput.durationFC.value;\n        this.vehicleFG.get('year').patchValue(duration);\n    }\n\n    async getVehicleType() {\n        this.vehicleTypeM = <VehicleTypeM[]>await this.vehicleService.getVehicleType();\n    }\n\n    async getVehicleCategory() {\n        this.vehicleCategoryM = <VehicleCategoryM[]>await this.vehicleService.getVehicleCategory();\n\n        this.vehicleCategoryOR = this.vehicleCategoryM.filter(item => item['vehicleType']['keyID'] == VehicleTypeEnum.ON_ROAD);\n        this.vehicleCategoryNR = this.vehicleCategoryM.filter(item => item['vehicleType']['keyID'] == VehicleTypeEnum.NON_ROAD);\n    }\n\n    async getEngineStroke() {\n        this.engineStrokeM = <EngineStrokeM[]>await this.vehicleService.getEngineStroke();\n    }\n\n    async getUnit() {\n        try {\n            this.unitM = <UnitM[]>await this.unitService.getUnitUsingPublicUrl([`type:${UnitTypeKeyID.LENGTH}`]);\n        } catch (error) {\n            console.error(error);\n        }\n    }\n\n    onVehicleTypeChange(vehicleType: any) {\n        this.vehicleFG.patchValue({\n            vehicleCategoryID: null,\n            engineStrokeId: null\n        });\n\n        if (vehicleType.keyID == VehicleTypeEnum.ON_ROAD) {\n            this.isEngineStroke = false;\n            this.vehicleCategory = this.vehicleCategoryOR;\n        } else {\n            this.isEngineStroke = true;\n            this.vehicleCategory = this.vehicleCategoryNR;\n        }\n    }\n\n    vehicleExist() {\n        let vehicleNumber = this.vehicleFG.get('vehicleNumber').value;\n\n        this.vehicleController.vehicleExist(this.rootOrgID, vehicleNumber).subscribe((res: any) => {\n            if (res.status == false) {\n                if (this.constant.CURRENT_APPLICATION_KEY_ID == ApplicationKeyID.NETZERO_KEY_ID) {\n                    this.createVehicle();\n                } else if (this.constant.CURRENT_APPLICATION_KEY_ID == ApplicationKeyID.EMPLOYEE_KEY_ID) {\n                    this.createVehicleForEmployee();\n                }\n            } else {\n                let toast: any;\n\n                toast = this.toastrService.getToastStatus(res.status);\n                this.toastrService.openToast(toast.title, res.message, toast.color);\n            }\n        });\n    }\n\n    vechileSubmit() {\n        if (this.vehicleFG.invalid) {\n            this.toastrService.openToast(InvalidForm.INVALID_FORM_TITLE, InvalidForm.INVALID_FORM_MESSAGE, ToastrColor.ERROR);\n            return;\n        } else {\n            if (this.action == FormAction.CREATE) {\n                this.vehicleExist();\n            } else if (this.action == FormAction.UPDATE) {\n                this.updateVehicle();\n            }\n        }\n    }\n\n    createVehicle() {\n        this.vehicleController.createVehicle(this.rootOrgID, this.vehicleFG.value).subscribe((res: ResponseM) => {\n            let toast: any;\n\n            toast = this.toastrService.getToastStatus(res.status);\n            this.toastrService.openToast(toast.title, res.message, toast.color);\n            this.createUpdateVehiclePostAction(res);\n        }, error => {\n            console.log('error in createVehicle -', error);\n        });\n    }\n\n    createVehicleForEmployee() {\n        this.vehicleController.createVehicleForEmployee(this.rootOrgID, this.userID, this.vehicleFG.value).subscribe((res: ResponseM) => {\n            let toast: any;\n\n            toast = this.toastrService.getToastStatus(res.status);\n            this.toastrService.openToast(toast.title, res.message, toast.color);\n            this.createUpdateVehiclePostAction(res);\n        }, error => {\n            console.log('error in createVehicleForEmployee -', error);\n        });\n    }\n\n    getVehicleByIDHandler() {\n        forkJoin([this.getVehicleType(), this.getVehicleCategory(), this.getEngineStroke(), this.getUnit()]).subscribe(([]) => {\n            if (this.action == FormAction.UPDATE) {\n                this.getVehicleByID();\n            }\n        }, error => {\n            console.error('error in forkJoin -', error);\n        });\n    }\n\n    getVehicleByID() {\n        this.vehicleController.getVehicleByID(this.rootOrgID, this.vehicleID).subscribe((res: any) => {\n            this.vehicle = res;\n            this.patchVehicle();\n        }, error => {\n            console.log(error);\n        });\n    }\n\n    patchVehicle() {\n        this.onVehicleTypeChange(this.vehicle['vehicleType']);\n        this.vehicleFG.patchValue({\n            vehicleName: this.vehicle['vehicleName'],\n            vehicleTypeID: this.vehicle['vehicleType'].id,\n            vehicleNumber: this.vehicle['vehicleNumber'],\n            odoMeterUnitID: this.vehicle['odoMeterUnit'].unitID,\n            vehicleCategoryID: this.vehicle.vehicleCategory?.id,\n            year: this.vehicle?.year\n        });\n\n        if (!this.isIpcc) {\n            let durationToPatch = this.vehicleFG.get('year').value;\n            this.yearInput.durationFC.patchValue(durationToPatch.toString());\n        }\n\n        if (this.vehicle['engineStroke'] !== null) {\n            this.isEngineStroke = true;\n            this.vehicleFG.patchValue({\n                engineStrokeId: this.vehicle['engineStroke'].id\n            });\n        }\n\n        this.intialObject = this.vehicleFG.value;\n\n        this.vehicleFG.valueChanges.subscribe(() => {\n            this.isEqual = isEqual(this.intialObject, this.vehicleFG.value);\n        });\n    }\n\n    updateVehicle() {\n        this.vehicleController.updateVehicle(this.rootOrgID, this.vehicleFG.value, this.vehicleID).subscribe((res: ResponseM) => {\n            let toast: any;\n\n            toast = this.toastrService.getToastStatus(res.status);\n            this.toastrService.openToast(toast.title, res.message, toast.color);\n            this.createUpdateVehiclePostAction(res);\n        }, error => {\n            console.log('error in updateVehicle -', error);\n        })\n    }\n\n    createUpdateVehiclePostAction(res) {\n        if (this.source == VIEW_TYPE_ENUM.PAGE) {\n            this.router.navigate([PagePathEnum.VEHICLE_LIST_PAGE]);\n        } else if (this.source == VIEW_TYPE_ENUM.DIALOG) {\n            let result: any = {\n                status: DialogEnum.SUCCESS_DR,\n                res\n            }\n            this.dialogRef.close(result);\n        }\n    }\n\n    cancelButtonClick() {\n        if (this.source == VIEW_TYPE_ENUM.PAGE) {\n            this.tSCCommonService.back();\n        } else if (this.source == VIEW_TYPE_ENUM.DIALOG) {\n            this.dialogRef.close();\n        }\n    }\n\n    errorHandling = (control: string, error: string): boolean => {\n        return this.vehicleFG.get(control).hasError(error);\n    }\n\n    async ipccFieldHandler() {\n        let preference;\n        let activity;\n\n        if (this.constant.CURRENT_APPLICATION_KEY_ID == ApplicationKeyID.NETZERO_KEY_ID) {\n            preference = await this.preferenceService.getOrgPreference(this.rootOrgID);\n\n            if (preference.preferenceID != null) {\n                activity = preference.activity.find(item => item.activityKeyID == ACTIVITY_KEYID_ENUM.STATIONARY_COMBUSTION);\n\n                // if (activity.emissionFactorSourceKeyID == EMISSION_FACTOR_SOUREC_KEYID_ENUM.IPCC_GUIDELINES_FOR_NATIONAL_GREENHOUSE_GAS_INVENTORIES) {\n                //     this.isIpcc = true;\n                // }\n\n                if (activity) {\n                    let calculationApproach = activity.calculationApproach.length > 0 ? activity.calculationApproach[0] : null;\n                    if (calculationApproach) {\n                        let emissionFactorSource = calculationApproach.emissionFactorSource.find(ef => ef.id == calculationApproach.emissionFactorSourceID);\n                        if (emissionFactorSource) {\n                            if (emissionFactorSource.keyID == EMISSION_FACTOR_SOUREC_KEYID_ENUM.IPCC_GUIDELINES_FOR_NATIONAL_GREENHOUSE_GAS_INVENTORIES) {\n                                this.isIpcc = true;\n                            };\n                        }\n                    }\n                }\n\n            }\n\n            this.getVehicleByIDHandler();\n        } else {\n            this.getVehicleByIDHandler();\n        }\n    }\n\n}\n","<div class=\"card main-card cardOverwrite h100\">\n    <div class=\"headerContainer\">\n        <div class=\"headerLeftContainer\">\n            <div class=\"pageTitle\">{{ action == FormAction.CREATE ? PageTitleEnum.CREATE :\n                PageTitleEnum.UPDATE }} vehicle\n            </div>\n            <div class=\"pageSubtitle\">\n            </div>\n        </div>\n    </div>\n\n    <div class=\"card-body\" [ngClass]=\"{ 'vechileCreateUpdateForm' : source == VIEW_TYPE_ENUM.PAGE }\">\n        <form [formGroup]=\"vehicleFG\" (ngSubmit)=\"vechileSubmit()\">\n\n            <div class=\"row\">\n                <div class=\"col-sm-6\">\n                    <mat-form-field class=\"matFieldWidth100\"\n                        [appearance]=\"MaterialFormFieldAppearance.FORM_FIELD_APPEARANCE\">\n                        <mat-label class=\"formLabel\">Vehicle number</mat-label>\n                        <input class=\"formPlaceholder\" matInput type=\"text\" placeholder=\"Vehicle number\"\n                            formControlName=\"vehicleNumber\" required />\n                        <mat-error *ngIf=\"errorHandling('vehicleNumber', 'required')\">\n                            {{ FormErrorEnum.REQUIRED }}\n                        </mat-error>\n                    </mat-form-field>\n                </div>\n\n                <div class=\"col-sm-6\">\n                    <mat-form-field class=\"matFieldWidth100\"\n                        [appearance]=\"MaterialFormFieldAppearance.FORM_FIELD_APPEARANCE\">\n                        <mat-label class=\"formLabel\">Vehicle name</mat-label>\n                        <input class=\"formPlaceholder\" matInput type=\"text\" placeholder=\"Vehicle name\"\n                            formControlName=\"vehicleName\" required />\n                        <mat-error *ngIf=\"errorHandling('vehicleName', 'required')\">\n                            {{ FormErrorEnum.REQUIRED }}\n                        </mat-error>\n                    </mat-form-field>\n                </div>\n            </div>\n\n            <div class=\"row\">\n                <div class=\"col-sm-12\">\n                    <div class=\"radioBtnGroupLabel\">Select a vehicle type</div>\n                    <mat-radio-group formControlName=\"vehicleTypeID\">\n                        <div class=\"row mt-1\">\n                            <div class=\"col-sm-6\" *ngFor=\"let data of vehicleTypeM\">\n                                <mat-radio-button class=\"radioBtnLabel\" [value]=\"data.id\"\n                                    (change)=\"onVehicleTypeChange(data)\">\n                                    {{ data.name }}\n                                </mat-radio-button>\n                            </div>\n                        </div>\n                    </mat-radio-group>\n                </div>\n            </div>\n\n            <div class=\"row mt-3\" *ngIf=\"!isIpcc\">\n                <div class=\"col-sm-6\">\n                    <mat-form-field class=\"matFieldWidth100\"\n                        [appearance]=\"MaterialFormFieldAppearance.FORM_FIELD_APPEARANCE\">\n                        <mat-label class=\"formLabel\">Select vehicle category\n                        </mat-label>\n                        <mat-select formControlName=\"vehicleCategoryID\" required>\n                            <mat-option *ngFor=\"let method of vehicleCategory\" [value]=\"method.id\">\n                                {{ method.name }}\n                            </mat-option>\n                        </mat-select>\n                        <mat-error *ngIf=\"errorHandling('vehicleCategoryID', 'required')\">\n                            {{ FormErrorEnum.REQUIRED }}\n                        </mat-error>\n                    </mat-form-field>\n                </div>\n\n                <div class=\"col-sm-6\">\n                    <mat-form-field *ngIf=\"isEngineStroke\" class=\"matFieldWidth100\"\n                        [appearance]=\"MaterialFormFieldAppearance.FORM_FIELD_APPEARANCE\">\n                        <mat-label class=\"formLabel\">Select engine stroke</mat-label>\n                        <mat-select formControlName=\"engineStrokeId\" required>\n                            <mat-option *ngFor=\"let data of engineStrokeM\" [value]=\"data.id\">\n                                <span class=\"d-flex justify-content-between\">{{ data.name }}\n                                </span>\n                            </mat-option>\n                        </mat-select>\n                        <mat-error *ngIf=\"errorHandling('engineStrokeId', 'required')\">\n                            {{ FormErrorEnum.REQUIRED }}\n                        </mat-error>\n                    </mat-form-field>\n                </div>\n            </div>\n\n            <div class=\"row\">\n                <div class=\"col-sm-6\" *ngIf=\"!isIpcc\">\n                    <lib-date-input class=\"cursorPointer\"  #yearInput (emitFilter)=\"dateInpChange()\" [materialFieldWidthInp]=\"true\"\n                        [materialFormFieldAppearanceInp]=\"MaterialFormFieldAppearance.FORM_FIELD_APPEARANCE\"\n                        [isMandatoryFieldInp]=\"true\" [dateInputTypeInp]=\"DateInputTypeEnum.YEAR_INPUT\"\n                        [labelInp]=\"'Vehicle Year'\"></lib-date-input>\n                </div>\n\n                <div class=\"col-sm-6\">\n                    <mat-form-field class=\"matFieldWidth100\"\n                        [appearance]=\"MaterialFormFieldAppearance.FORM_FIELD_APPEARANCE\">\n                        <mat-label class=\"formLabel\">Select odometer unit</mat-label>\n                        <mat-select formControlName=\"odoMeterUnitID\" required>\n                            <mat-option *ngFor=\"let units of unitM\" [value]=\"units.id\">\n                                <span class=\"d-flex justify-content-between\">{{ units.name }}\n                                    <span>{{ units.uomCode }} </span></span>\n                            </mat-option>\n                        </mat-select>\n                        <mat-error *ngIf=\"errorHandling('odoMeterUnitID', 'required')\">\n                            {{ FormErrorEnum.REQUIRED }}\n                        </mat-error>\n                    </mat-form-field>\n                </div>\n            </div>\n\n            <div class=\"float-end\">\n                <button class=\"btn btn-sm btn-secondary me-2\" type=\"button\" (click)=\"cancelButtonClick()\">\n                    Cancel\n                </button>\n\n                <button class=\"btn btn-sm btn-success\" [ngClass]=\"{\n                        'btn-success' : action == FormAction.CREATE,\n                        'btn-primary' : action == FormAction.UPDATE,\n                        'disabled' : action == FormAction.UPDATE && isEqual\n                    }\" type=\"submit\">{{ action ==\n                    FormAction.CREATE ? ButtonLabelEnum.CREATE_BTN_LABEL :\n                    ButtonLabelEnum.UPDATE_BTN_LABEL }}\n                </button>\n            </div>\n        </form>\n    </div>\n</div>","import { NgModule } from '@angular/core';\nimport { RouterModule, Routes } from '@angular/router';\nimport { CreateUpdateComponent } from './create-update.component';\n\nconst routes: Routes = [\n    {\n        path: '',\n        component: CreateUpdateComponent,\n    }\n];\n\n@NgModule({\n    imports: [RouterModule.forChild(routes)],\n    exports: [RouterModule]\n})\n\nexport class CreateUpdateRoutingModule { }\n","import { NgModule } from '@angular/core';\nimport { NgbModule } from '@ng-bootstrap/ng-bootstrap';\nimport { CommonModule } from '@angular/common';\nimport {\n    FormsModule,\n    ReactiveFormsModule\n} from '@angular/forms';\n\nimport { MatTableModule } from '@angular/material/table';\nimport { MatPaginatorModule } from '@angular/material/paginator';\nimport { MatButtonModule } from '@angular/material/button';\nimport { MatFormFieldModule } from '@angular/material/form-field';\nimport { MatIconModule } from '@angular/material/icon';\nimport { MatInputModule } from '@angular/material/input';\nimport { MatSelectModule } from '@angular/material/select';\nimport { MatTooltipModule } from '@angular/material/tooltip';\nimport { MatDatepickerModule } from '@angular/material/datepicker';\nimport { MatOptionModule } from '@angular/material/core';\nimport { MatRadioModule } from '@angular/material/radio';\n\nimport { NgxDaterangepickerMd } from 'ngx-daterangepicker-material';\n\nimport { CreateUpdateComponent } from '../create-update/create-update.component';\nimport { CreateUpdateRoutingModule } from './create-update-routing.module';\nimport { DateInputModule } from '@library/date';\n\n@NgModule({\n    declarations: [\n        CreateUpdateComponent\n    ],\n    imports: [\n        CommonModule,\n        NgbModule,\n        CreateUpdateRoutingModule,\n        FormsModule,\n        ReactiveFormsModule,\n        MatTableModule,\n        MatIconModule,\n        MatInputModule,\n        MatRadioModule,\n        MatSelectModule,\n        MatTooltipModule,\n        MatOptionModule,\n        MatDatepickerModule,\n        MatFormFieldModule,\n        MatPaginatorModule,\n        MatButtonModule,\n        NgxDaterangepickerMd,\n        DateInputModule\n    ],\n    exports: [\n        CreateUpdateComponent\n    ]\n})\n\nexport class CreateUpdateModule { }\n","import { Component, ElementRef, OnInit, ViewChild, Inject } from '@angular/core';\nimport { MatPaginator } from '@angular/material/paginator';\nimport { MatDialog } from \"@angular/material/dialog\";\nimport { FormControl } from '@angular/forms';\n\nimport { merge, fromEvent, of as observableOf } from 'rxjs';\nimport { catchError, map, startWith, switchMap } from 'rxjs/operators';\n\nimport { faPlus, faSearch, faEllipsisV } from '@fortawesome/free-solid-svg-icons';\n\nimport { EMISSION_FACTOR_SOUREC_KEYID_ENUM } from '../../../enum/emission-factor.enum';\nimport { ACTIVITY_KEYID_ENUM } from '../../../enum/activity.enum';\nimport { VehicleM, VehiclePageM } from '../../../model/vehicle.model';\nimport { VehicleController } from '../../../controller/vehicle.controller';\nimport { VehicleService } from '../../../service/vehicle.service';\nimport { PreferenceService } from '../../../service/preference.service';\nimport { CreateUpdateComponent } from '../create-update/create-update.component';\n\n//tsc-library\nimport { StorageService } from '@library/storage-service';\nimport { UnitM, Unit, UnitService, UnitTypeKeyID } from '@library/unit-service';\nimport { ToastrService, ToastrTitle, ToastrColor } from '@library/toastr-service';\nimport { ApplicationKeyID } from '@library/application-service';\nimport {\n    COMMON_CONSTANT,\n    MATERIAL_CONSTANT,\n    TABLE_CONSTANT,\n    ButtonTooltipEnum,\n    FormAction,\n    BulkUploadDialogLib,\n    DialogOneComponent,\n    DialogOneEnum,\n    FunnelFilterComponent,\n    VIEW_TYPE_ENUM,\n    DialogEnum\n} from \"@library/tsc-common\";\n// /tsc-library/\n\n@Component({\n    selector: 'app-page',\n    templateUrl: './page.component.html',\n    styleUrls: ['./page.component.scss']\n})\nexport class PageComponent implements OnInit {\n    COMMON_CONSTANT = COMMON_CONSTANT;\n    MATERIAL_CONSTANT = MATERIAL_CONSTANT;\n    TABLE_CONSTANT = TABLE_CONSTANT;\n    ButtonTooltipEnum = ButtonTooltipEnum;\n    FormAction = FormAction;\n\n    faPlus = faPlus;\n    faEllipsisV = faEllipsisV;\n\n    rootOrgID: any;\n    currentOrgID: any;\n    dataSource: any;\n    resultLength: number;\n    searchValue: any;\n    displayedColumns: string[] = ['vehicleNumber', 'vehicleName', 'vehicleType', 'vehicleCategory', 'engineStroke', 'year', 'odometer', 'option'];\n    searchFlag: boolean = false;\n\n    bulkUploadResponse: any;\n    title: any;\n    response: any;\n    message: any;\n    error: boolean = false;\n    isIpcc: boolean = false;\n    isDataLoaded: boolean = false;\n    duplicateData: string;\n    mandatoryData: string;\n\n    vehicleTypeList: any = [];\n    vehicleTypeFc = new FormControl();\n    vehicleTypeFlag = false;\n\n    vehicleCategoryList: any = [];\n    vehicleCategoryFc = new FormControl();\n    vehicleCategoryFlag = false;\n\n    odometerList: UnitM[] = [];\n\n    odometerFc = new FormControl();\n    odometerFlag = false;\n\n    filterArr: Array<string> = [];\n\n    @ViewChild(MatPaginator, { static: true }) paginator: MatPaginator;\n    @ViewChild('searchBar', { static: true }) searchBar: ElementRef;\n    @ViewChild('refreshBtn', { static: true }) refreshBtn: ElementRef;\n    @ViewChild('vehicleType') vehicleType: FunnelFilterComponent;\n    @ViewChild('vehicleCategory') vehicleCategory: FunnelFilterComponent;\n    @ViewChild('odometer') odometer: FunnelFilterComponent;\n\n    constructor(\n        private dialog: MatDialog,\n        private vehicleController: VehicleController,\n        private storageService: StorageService,\n        private vehicleService: VehicleService,\n        private preferenceService: PreferenceService,\n        private unitService: UnitService,\n        private toastrService: ToastrService,\n        @Inject('constant') private constant: any\n    ) { }\n\n    ngOnInit() {\n        this.rootOrgID = this.storageService.getStorage('rootOrgID');\n        this.currentOrgID = this.storageService.getStorage('currentOrgID');\n\n        this.getVehicleType();\n        this.getVehicleCategory();\n        this.getUnit();\n    }\n\n    SearchFn($event) {\n        this.searchValue = $event;\n        if (this.searchValue.length > 0) {\n            this.searchFlag = true;\n        }\n        else {\n            this.searchFlag = false;\n        }\n        this.vehicleCategoryFlag = false;\n        this.vehicleTypeFlag = false;\n        this.refreshBtn.nativeElement.click();\n    }\n\n    async getVehicleCategory() {\n        this.vehicleCategoryList = await this.vehicleService.getVehicleCategory();\n        this.vehicleCategoryList.unshift({ id: 'all', name: 'All', keyID: 'all' })\n    }\n\n    async getVehicleType() {\n        this.vehicleTypeList = await this.vehicleService.getVehicleType();\n        this.vehicleTypeList.unshift({ id: 'all', name: 'All', keyID: 'all' })\n    }\n\n    async getUnit() {\n        try {\n            this.odometerList = await this.unitService.getUnitUsingPublicUrl([`type:${UnitTypeKeyID.LENGTH}`]);\n        } catch (error) {\n            console.error(error);\n        }\n    }\n\n    ngAfterViewInit() {\n        this.ipccFieldHandler();\n    }\n\n    getVehicleByPage() {\n        this.getMerge().pipe(\n            startWith({}),\n            switchMap(() => {\n                this.filterArr = [];\n\n                if (this.vehicleTypeFlag) {\n                    if (this.vehicleTypeFc.value == 'all') { this.vehicleTypeFlag = false; }\n                    else { this.filterArr.push('vehicleType:' + this.vehicleTypeFc.value); }\n                }\n                if (this.vehicleCategoryFlag) {\n                    if (this.vehicleCategoryFc.value == 'all') { this.vehicleCategoryFlag = false; }\n                    else { this.filterArr.push('vehicleCategory:' + this.vehicleCategoryFc.value) }\n                }\n                if (this.odometerFlag) {\n                    if (this.odometerFc.value == 'Select none') { this.odometerFlag = false; }\n                    else { this.filterArr.push('vehicleOdoMeterUnit:' + this.odometerFc.value) }\n                }\n                if (this.searchFlag) {\n                    this.filterArr.push('searchVehicleName:' + this.searchValue)\n                }\n\n                return this.vehicleController.getVehicleByPage(\n                    this.paginator.pageIndex,\n                    this.paginator.pageSize,\n                    this.currentOrgID,\n                    this.filterArr,\n                ).pipe(catchError(() => observableOf(null)));\n            }),\n            map((dataSource: VehiclePageM) => {\n                if (dataSource === null) {\n                    return [];\n                }\n                this.resultLength = dataSource.totalCount;\n                return dataSource.vehicle;\n            })\n        ).subscribe((dataSource: VehicleM[]) => (this.dataSource = dataSource));\n    }\n\n    bulkUpload() {\n        const dialogRef = this.dialog.open(BulkUploadDialogLib, {\n            data: { source: \"assets/files/vehicle-upload.xlsx\" },\n            minWidth: \"600px\",\n            maxWidth: \"600px\",\n        });\n\n        dialogRef.afterClosed().subscribe((response) => {\n            this.bulkUploadResponse = response;\n\n            if (response) { this.vehicleBulkUpload(); }\n        });\n    }\n\n    toFormData(): FormData {\n        const formData = new FormData();\n        formData.append('file', this.bulkUploadResponse);\n\n        return formData;\n    }\n\n\n    vehicleBulkUpload() {\n        this.vehicleController.vehicleBulkUpload(this.currentOrgID, this.toFormData())\n            .subscribe((bulkUploadRes) => {\n                if (bulkUploadRes['title'] == 'Success') {\n                    this.toastrService.openToast(ToastrTitle.SUCCESS, bulkUploadRes['message'], bulkUploadRes['result']);\n\n                } else if (bulkUploadRes['title'] == 'Error') {\n                    this.error = true;\n                    this.title = bulkUploadRes['title']\n                    this.message = bulkUploadRes['message'];\n                    this.response = bulkUploadRes['response'];\n                    this.errorDialog(this.title, this.message, this.response);\n                    this.getErrorData();\n\n                }\n            });\n    }\n\n    errorDialog(title, message, response) {\n        const dialogRef = this.dialog.open(DialogOneComponent, {\n            minWidth: '450px',\n            maxWidth: '700px',\n            data: {\n                type: DialogOneEnum.CONFIRMATION,\n                icon: 'warning',\n                header: title,\n                body: message,\n                buttonOne: 'Cancel',\n                buttonTwo: 'Try again'\n            }\n        });\n\n        dialogRef.afterClosed()\n            .subscribe((result) => {\n                if (result) {\n                    this.bulkUpload()\n                }\n                else { }\n            })\n    }\n\n    getErrorData() {\n        if (this.response['duplicateDataInRows'].length != 0) {\n            let dupDataInRows = this.response['duplicateDataInRows'];\n            this.duplicateData = [dupDataInRows.slice(0, -1).join(', '), dupDataInRows.slice(-1)[0]].join(dupDataInRows.length < 2 ? '' : ' and ');\n        }\n        if (this.response['mandatoryDataMissingInRows'].length != 0) {\n            let manDataMissingInRows = this.response['mandatoryDataMissingInRows'];\n            this.mandatoryData = [manDataMissingInRows.slice(0, -1).join(', '), manDataMissingInRows.slice(-1)[0]].join(manDataMissingInRows.length < 2 ? '' : ' and ');\n        }\n    }\n\n    refreshFn() {\n        this.vehicleTypeFlag = false;\n        this.vehicleCategoryFlag = false;\n        this.odometerFlag = false;\n        this.refreshBtn.nativeElement.click();\n    }\n\n    createUpdateVehicle = (actionP, row) => {\n        let action: string = actionP;\n        let dialogRef;\n        let data: any;\n\n        if (action == FormAction.CREATE) {\n            data = {\n                action: FormAction.CREATE,\n                source: VIEW_TYPE_ENUM.DIALOG\n            }\n        } else if (action == FormAction.UPDATE) {\n            data = {\n                action: FormAction.UPDATE,\n                source: VIEW_TYPE_ENUM.DIALOG,\n                vehicleID: row.id\n            }\n        }\n\n        dialogRef = this.dialog.open(CreateUpdateComponent, {\n            data: data,\n            minWidth: '600px',\n            maxWidth: '600px',\n            height: '100%',\n            position: { right: '-2px', top: '0px' },\n            panelClass: 'matDialogContainerOverride'\n        });\n\n        dialogRef.afterClosed()\n            .subscribe((result: any) => {\n                if (result.status == DialogEnum.SUCCESS_DR) {\n                    this.refreshBtn.nativeElement.click();\n                }\n            });\n    }\n\n    handleClick(func: Function, params: any[]) {\n        func(...params);\n    }\n\n    async ipccFieldHandler() {\n        let preference;\n        let activity;\n\n        if (this.constant.CURRENT_APPLICATION_KEY_ID == ApplicationKeyID.NETZERO_KEY_ID) {\n            preference = await this.preferenceService.getOrgPreference(this.rootOrgID);\n\n            if (preference.preferenceID != null) {\n                activity = preference.activity.find(item => item.activityKeyID == ACTIVITY_KEYID_ENUM.STATIONARY_COMBUSTION);\n\n                // if (activity.emissionFactorSourceKeyID == EMISSION_FACTOR_SOUREC_KEYID_ENUM.IPCC_GUIDELINES_FOR_NATIONAL_GREENHOUSE_GAS_INVENTORIES) {\n                //     this.isIpcc = true;\n                // }\n\n                if (activity) {\n                    let calculationApproach = activity.calculationApproach.length > 0 ? activity.calculationApproach[0] : null;\n                    if (calculationApproach) {\n                        let emissionFactorSource = calculationApproach.emissionFactorSource.find(ef => ef.id == calculationApproach.emissionFactorSourceID);\n                        if (emissionFactorSource) {\n                            if (emissionFactorSource.keyID == EMISSION_FACTOR_SOUREC_KEYID_ENUM.IPCC_GUIDELINES_FOR_NATIONAL_GREENHOUSE_GAS_INVENTORIES) {\n                                this.isIpcc = true;\n                            };\n                        }\n                    }\n                }\n            }\n            this.getVehicleByPage();\n        }\n    }\n\n    getMerge() {\n        if (this.isIpcc) {\n            return merge(\n                this.paginator.page,\n                this.vehicleType.mono,\n                this.odometer.mono,\n                fromEvent(this.refreshBtn.nativeElement, 'click')\n            )\n        } else {\n            return merge(\n                this.paginator.page,\n                this.vehicleType.mono,\n                this.vehicleCategory.mono,\n                this.odometer.mono,\n                fromEvent(this.refreshBtn.nativeElement, 'click')\n            )\n        }\n    }\n}\n","<div class=\"card cardOverwrite h100\">\n    <div class=\"headerContainer\">\n        <div class=\"headerLeftContainer\">\n            <div class=\"pageTitle\">Vehicles</div>\n            <div class=\"pageSubtitle\">Create company owned vehicles to track their emissions.</div>\n        </div>\n        <div class=\"headerRightContainer\">\n            <div class=\"headerRightContainerInner\">\n                <lib-search-bar-one class=\"me-3\" #searchBar [searchBy]=\"'vehicle name'\"\n                    (emitSearch)=\"SearchFn($event)\"></lib-search-bar-one>\n\n                <button class=\"btn btn-sm btn-light centerAlign me-3 py-1 refreshBtn\" #refreshBtn matRipple\n                    [matRippleCentered]=\"MATERIAL_CONSTANT.MAT_RIPPLE_CENTER\" matTooltipPosition=\"below\"\n                    [matTooltip]=\"ButtonTooltipEnum.REFRESH\">\n                    <span class=\"material-symbols-outlined\">\n                        refresh\n                    </span>\n                </button>\n\n\n\n                <button type=\"button\" class=\"btn btn-sm btn-success btnRightRadiusZero\"\n                    (click)=\"createUpdateVehicle(FormAction.CREATE, '')\" matRipple\n                    [matRippleCentered]=\"MATERIAL_CONSTANT.MAT_RIPPLE_CENTER\" matTooltipPosition=\"below\"\n                    [matTooltip]=\"ButtonTooltipEnum.CREATE\">\n                    <fa-icon [icon]=\"faPlus\"></fa-icon>&nbsp;&nbsp;Vehicle\n                </button>\n\n                <div class=\"btn-group\" ngbDropdown placement=\"bottom-right\" matTooltipPosition=\"below\"\n                    [matTooltip]=\"ButtonTooltipEnum.MORE\">\n                    <button type=\"button\" ngbDropdownToggle class=\"btn btn-sm btn-success btnLeftRadiusZero\">\n                    </button>\n                    <div ngbDropdownMenu>\n                        <button class=\"dropdown-item\" (click)=\"bulkUpload()\" matRipple\n                            [matRippleCentered]=\"MATERIAL_CONSTANT.MAT_RIPPLE_CENTER\">\n                            Import\n                        </button>\n                    </div>\n                </div>\n            </div>\n        </div>\n    </div>\n\n    <table mat-table [dataSource]=\"dataSource\" #sort matSort matSortActive=\"employeeID\" matSortDirection=\"desc\"\n        matSortDisableClear>\n\n        <ng-container matColumnDef=\"vehicleNumber\">\n            <th mat-header-cell class=\"col-sm-2 \" *matHeaderCellDef disableClear> Vehicle Number </th>\n            <td mat-cell *matCellDef=\"let row\"> {{ row.vehicleNumber ? row.vehicleNumber : COMMON_CONSTANT.HYPHEN}}\n            </td>\n        </ng-container>\n\n        <ng-container matColumnDef=\"vehicleName\">\n            <th mat-header-cell class=\"col-sm-2\" *matHeaderCellDef> Vehicle Name </th>\n            <td mat-cell *matCellDef=\"let row\"> {{row.vehicleName ? row.vehicleName : COMMON_CONSTANT.HYPHEN}}</td>\n        </ng-container>\n\n        <ng-container matColumnDef=\"vehicleType\">\n            <th mat-header-cell class=\"vehicleType\" *matHeaderCellDef disableClear>\n                <funnel-filter #vehicleType header=\"Vehicle Type\" type=\"mono\" value=\"id\" [entityList]=\"vehicleTypeList\"\n                    [selectFC]=\"vehicleTypeFc\" [active]=\"vehicleTypeFlag\" (mono)=\"vehicleTypeFlag = true;\">\n                </funnel-filter>\n            </th>\n            <td mat-cell *matCellDef=\"let row\"> {{row.vehicleType.name ? row.vehicleType.name : COMMON_CONSTANT.HYPHEN}}\n            </td>\n        </ng-container>\n\n        <ng-container matColumnDef=\"vehicleCategory\">\n            <th mat-header-cell class=\"vehicleCategory\" *matHeaderCellDef disableClear [ngClass]=\"{'d-none': isIpcc}\">\n                <funnel-filter #vehicleCategory header=\"Vehicle Category\" value=\"id\" type=\"mono\"\n                    [entityList]=\"vehicleCategoryList\" [selectFC]=\"vehicleCategoryFc\" [active]=\"vehicleCategoryFlag\"\n                    (mono)=\"vehicleCategoryFlag = true;\"></funnel-filter>\n            </th>\n\n            <td mat-cell *matCellDef=\"let row\" [ngClass]=\"{'d-none': isIpcc}\"> {{row.vehicleCategory ?\n                row.vehicleCategory.name :\n                COMMON_CONSTANT.HYPHEN}}\n            </td>\n        </ng-container>\n\n        <ng-container matColumnDef=\"engineStroke\">\n            <th mat-header-cell class=\"col-sm-1\" *matHeaderCellDef [ngClass]=\"{'d-none': isIpcc}\"> Engine Stroke </th>\n            <td mat-cell *matCellDef=\"let row\" [ngClass]=\"{'d-none': isIpcc}\">\n                {{ row.engineStroke ? row.engineStroke.name : COMMON_CONSTANT.HYPHEN }}\n            </td>\n        </ng-container>\n\n        <ng-container matColumnDef=\"year\">\n            <th mat-header-cell class=\"col-sm-1\" *matHeaderCellDef [ngClass]=\"{'d-none': isIpcc}\"> Year </th>\n            <td mat-cell *matCellDef=\"let row;\" [ngClass]=\"{'d-none': isIpcc}\">\n                {{row.year ? row.year : COMMON_CONSTANT.HYPHEN}}\n            </td>\n        </ng-container>\n\n        <ng-container matColumnDef=\"odometer\">\n            <th mat-header-cell class=\"col-sm-1\" *matHeaderCellDef> <funnel-filter #odometer header=\"Odometer\"\n                    type=\"mono\" value=\"id\" view=\"name\" [entityList]=\"odometerList\" [selectFC]=\"odometerFc\"\n                    [active]=\"odometerFlag\" (mono)=\"odometerFlag = true;\"></funnel-filter></th>\n            <td mat-cell *matCellDef=\"let row;\">\n                {{row.odoMeterUnit.uomCode ? row.odoMeterUnit.uomCode : COMMON_CONSTANT.HYPHEN}}\n            </td>\n            <td mat-cell *matCellDef=\"let row;\">\n                {{ row.odoMeterUnit.uomCode ? row.odoMeterUnit.uomName + \" (\" + row.odoMeterUnit.uomCode + \")\" :\n                COMMON_CONSTANT.HYPHEN }}\n            </td>\n        </ng-container>\n\n        <ng-container matColumnDef=\"option\">\n            <th mat-header-cell *matHeaderCellDef></th>\n            <td mat-cell *matCellDef=\"let row\">\n                <div class=\"centerAlignVertical\">\n                    <ng-container *ngTemplateOutlet=\"icon; \n                    context: {\n                        icon: 'edit',\n                        tooltip: ButtonTooltipEnum.UPDATE,\n                        class: 'text-primary',\n                        function: createUpdateVehicle,\n                        functionParameter: [FormAction.UPDATE, row]\n                    }\">\n                    </ng-container>\n                </div>\n        </ng-container>\n\n        <tr mat-header-row *matHeaderRowDef=\"displayedColumns\"></tr>\n        <tr mat-row *matRowDef=\"let row; columns: displayedColumns;\" class=\"dataRow\"></tr>\n        <tr class=\"mat-row\" *matNoDataRow>\n            <td class=\"mat-cell text-center\" [attr.colspan]=\"displayedColumns.length\">\n                {{ TABLE_CONSTANT.TABLE_NO_DATA }}\n            </td>\n        </tr>\n    </table>\n\n    <mat-paginator class=\"roundedBorder\" #paginator [length]=\"resultLength\"\n        [pageSizeOptions]=\"TABLE_CONSTANT.PAGE_SIZE_OPTION\" [pageSize]=\"TABLE_CONSTANT.DEFAULT_PAGE_SIZE\"\n        showFirstLastButtons>\n    </mat-paginator>\n</div>\n\n<ng-template #icon let-icon=\"icon\" let-tooltip=\"tooltip\" let-class=\"class\" let-function=\"function\"\n    let-functionParameter=\"functionParameter\">\n    <button class=\"iconBtn centerAlign\" [class]=\"class\" matTooltipPosition=\"below\" [matTooltip]=\"tooltip\" matRipple\n        [matRippleCentered]=\"MATERIAL_CONSTANT.MAT_RIPPLE_CENTER\" (click)=\"handleClick(function, functionParameter)\">\n        <span class=\"material-symbols-outlined icon\">\n            {{ icon }}\n        </span>\n    </button>\n</ng-template>\n","import { NgModule } from '@angular/core';\nimport { RouterModule, Routes } from '@angular/router';\nimport { PageComponent } from './page.component';\n\nconst routes: Routes = [\n    {\n        path: '',\n        component: PageComponent,\n    }\n];\n\n@NgModule({\n    imports: [RouterModule.forChild(routes)],\n    exports: [RouterModule]\n})\n\nexport class PageRoutingModule { }\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\n\nimport { MatRippleModule } from '@angular/material/core';\nimport { MatTooltipModule } from '@angular/material/tooltip';\nimport { MatTableModule } from '@angular/material/table';\nimport { MatPaginatorModule } from '@angular/material/paginator';\nimport { MatButtonModule } from '@angular/material/button';\nimport { MatDialogModule } from '@angular/material/dialog';\n\nimport { NgbModule } from '@ng-bootstrap/ng-bootstrap';\nimport { FontAwesomeModule } from '@fortawesome/angular-fontawesome';\n\nimport { PageComponent } from './page.component';\nimport { PageRoutingModule } from './page-routing.module';\n\n//tsc-library\nimport {\n    SearchBarOneModule,\n    FunnelFilterModule\n} from '@library/tsc-common';\n// import { CreateUpdateModule } from '../create-update/create-update.module';\nimport { DateInputModule } from '@library/date';\n\n// /tsc-library/\n\n@NgModule({\n    declarations: [\n        PageComponent,\n    ],\n    imports: [\n        CommonModule,\n\n        MatRippleModule,\n        MatTooltipModule,\n        MatTableModule,\n        MatPaginatorModule,\n        MatButtonModule,\n        MatDialogModule,\n        // CreateUpdateModule,\n        NgbModule,\n        FontAwesomeModule,\n\n        PageRoutingModule,\n\n        SearchBarOneModule,\n        FunnelFilterModule,\n        DateInputModule,\n        \n    ]\n})\n\nexport class PageModule { }\n","/*\n * Public API Surface of netzero\n */\n\nexport * from './lib/netzero.service';\nexport * from './lib/netzero.component';\nexport * from './lib/netzero.module';\n\nexport * from './lib/tsc/enum/vechile-type.enum';\nexport * from './lib/tsc/model/vehicle.model';\nexport * from './lib/tsc/component/vehicle/vehicle.module';\nexport * from './lib/tsc/service/vehicle.service';\n\nexport * from './lib/tsc/component/vehicle/create-update/create-update.module';\nexport * from './lib/tsc/component/vehicle/create-update/create-update.component';\n\nexport * from './lib/tsc/component/vehicle/page/page.module';\nexport * from './lib/tsc/component/vehicle/page/page.component';\n\nexport * from './lib/tsc/enum/emission-factor.enum';\n","/**\n * Generated bundle index. Do not edit.\n */\n\nexport * from './public-api';\n"],"names":["routes","i1.VehicleController","i1.PreferenceController","i1","i6.VehicleController","i7.VehicleService","i8.PreferenceService","observableOf","i8","i9","i10","i11","i12","i13","i14","i15"],"mappings":"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"}