import { OnInit } from '@angular/core';
import { FormBuilder, FormGroup } from '@angular/forms';
import { MatDialogRef } from '@angular/material/dialog';
import { ActivatedRoute, Router } from '@angular/router';
import { VehicleCategoryM, EngineStrokeM, VehicleTypeM } from '../../../model/vehicle.model';
import { VehicleController } from '../../../controller/vehicle.controller';
import { VehicleService } from '../../../service/vehicle.service';
import { VehicleTypeEnum } from '../../../enum/vechile-type.enum';
import { MaterialFormFieldAppearance, ButtonLabelEnum, FormAction, PageTitleEnum, ComponentSourceEnum, FormErrorEnum, TSCCommonService } from '@library/tsc-common';
import { UnitM, UnitService } from '@library/unit-service';
import { ToastrService } from '@library/toastr-service';
import { StorageService } from '@library/storage-service';
import * as i0 from "@angular/core";
export declare class CreateUpdateComponent implements OnInit {
    private dialogData;
    private dialogRef;
    private activatedRoute;
    private router;
    private formBuilder;
    private toastrService;
    private unitService;
    private vehicleController;
    private vehicleService;
    private storageService;
    private tSCCommonService;
    private constant;
    FormAction: typeof FormAction;
    FormErrorEnum: typeof FormErrorEnum;
    ButtonLabelEnum: typeof ButtonLabelEnum;
    PageTitleEnum: typeof PageTitleEnum;
    ComponentSourceEnum: typeof ComponentSourceEnum;
    VehicleTypeEnum: typeof VehicleTypeEnum;
    MaterialFormFieldAppearance: typeof MaterialFormFieldAppearance;
    vehicleFG: FormGroup;
    rootOrgID: any;
    userID: any;
    applicationStdKeyID: string;
    action: string;
    source: string;
    vehicleID: any;
    vehicle: any;
    isEngineStroke: boolean;
    isEqual: boolean;
    intialObject: any;
    vehicleTypeM: VehicleTypeM[];
    vehicleCategoryM: VehicleCategoryM[];
    vehicleCategoryOR: VehicleCategoryM[];
    vehicleCategoryNR: VehicleCategoryM[];
    vehicleCategory: VehicleCategoryM[];
    engineStrokeM: EngineStrokeM[];
    unitM: UnitM[];
    constructor(dialogData: any, dialogRef: MatDialogRef<CreateUpdateComponent>, activatedRoute: ActivatedRoute, router: Router, formBuilder: FormBuilder, toastrService: ToastrService, unitService: UnitService, vehicleController: VehicleController, vehicleService: VehicleService, storageService: StorageService, tSCCommonService: TSCCommonService, constant: any);
    ngOnInit(): void;
    vehicleFGInit(): void;
    getVehicleType(): Promise<void>;
    getVehicleCategory(): Promise<void>;
    getEngineStroke(): Promise<void>;
    getUnit(): Promise<void>;
    onVehicleTypeChange(vehicleType: any): void;
    vehicleExist(): void;
    vechileSubmit(): void;
    createVehicle(): void;
    createVehicleForEmployee(): void;
    getVehicleByID(): void;
    patchVehicle(): void;
    updateVehicle(): void;
    createUpdateVehiclePostAction(res: any): void;
    cancelButtonClick(): void;
    errorHandling: (control: string, error: string) => boolean;
    static ɵfac: i0.ɵɵFactoryDeclaration<CreateUpdateComponent, [{ optional: true; }, { optional: true; }, null, null, null, null, null, null, null, null, null, null]>;
    static ɵcmp: i0.ɵɵComponentDeclaration<CreateUpdateComponent, "app-create-update", never, {}, {}, never, never>;
}
