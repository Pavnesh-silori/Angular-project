// tsc-library
import { COMMON_CONSTANT } from '@library/tsc-common';
// /tsc-library/
export const LOADING_GRAPHIC = {
    graphic: {
        elements: [
            {
                type: 'group',
                left: 'center',
                top: 'center',
                children: new Array(7).fill(0).map((val, i) => ({
                    type: 'rect',
                    x: i * 20,
                    shape: {
                        x: 0,
                        y: -40,
                        width: 10,
                        height: 80
                    },
                    style: { fill: '#0E2F44' },
                    keyframeAnimation: {
                        duration: 1000,
                        delay: i * 200,
                        loop: true,
                        keyframes: [
                            {
                                percent: 0.5,
                                scaleY: 0.3,
                                easing: 'cubicIn'
                            },
                            {
                                percent: 1,
                                scaleY: 1,
                                easing: 'cubicOut'
                            }
                        ]
                    }
                }))
            }
        ]
    }
};
export const NO_DATA_GRAPHIC = {
    type: 'text',
    left: 'center',
    top: 'middle',
    style: {
        fill: '#6c757d',
        fontSize: 25,
        text: COMMON_CONSTANT.NO_DATA,
    }
};
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiZWNoYXJ0LmNvbnN0YW50LmpzIiwic291cmNlUm9vdCI6IiIsInNvdXJjZXMiOlsiLi4vLi4vLi4vLi4vLi4vLi4vcHJvamVjdHMvbGlicmFyeS9lY2hhcnQvc3JjL2xpYi90c2MvY29uc3RhbnQvZWNoYXJ0LmNvbnN0YW50LnRzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUVBLGNBQWM7QUFDZCxPQUFPLEVBQUUsZUFBZSxFQUFFLE1BQU0scUJBQXFCLENBQUM7QUFDdEQsZ0JBQWdCO0FBRWhCLE1BQU0sQ0FBQyxNQUFNLGVBQWUsR0FBa0I7SUFDMUMsT0FBTyxFQUFFO1FBQ0wsUUFBUSxFQUFFO1lBQ047Z0JBQ0ksSUFBSSxFQUFFLE9BQU87Z0JBQ2IsSUFBSSxFQUFFLFFBQVE7Z0JBQ2QsR0FBRyxFQUFFLFFBQVE7Z0JBQ2IsUUFBUSxFQUFFLElBQUksS0FBSyxDQUFDLENBQUMsQ0FBQyxDQUFDLElBQUksQ0FBQyxDQUFDLENBQUMsQ0FBQyxHQUFHLENBQUMsQ0FBQyxHQUFHLEVBQUUsQ0FBQyxFQUFFLEVBQUUsQ0FBQyxDQUFDO29CQUM1QyxJQUFJLEVBQUUsTUFBTTtvQkFDWixDQUFDLEVBQUUsQ0FBQyxHQUFHLEVBQUU7b0JBQ1QsS0FBSyxFQUFFO3dCQUNILENBQUMsRUFBRSxDQUFDO3dCQUNKLENBQUMsRUFBRSxDQUFDLEVBQUU7d0JBQ04sS0FBSyxFQUFFLEVBQUU7d0JBQ1QsTUFBTSxFQUFFLEVBQUU7cUJBQ2I7b0JBQ0QsS0FBSyxFQUFFLEVBQUUsSUFBSSxFQUFFLFNBQVMsRUFBRTtvQkFDMUIsaUJBQWlCLEVBQUU7d0JBQ2YsUUFBUSxFQUFFLElBQUk7d0JBQ2QsS0FBSyxFQUFFLENBQUMsR0FBRyxHQUFHO3dCQUNkLElBQUksRUFBRSxJQUFJO3dCQUNWLFNBQVMsRUFBRTs0QkFDUDtnQ0FDSSxPQUFPLEVBQUUsR0FBRztnQ0FDWixNQUFNLEVBQUUsR0FBRztnQ0FDWCxNQUFNLEVBQUUsU0FBUzs2QkFDcEI7NEJBQ0Q7Z0NBQ0ksT0FBTyxFQUFFLENBQUM7Z0NBQ1YsTUFBTSxFQUFFLENBQUM7Z0NBQ1QsTUFBTSxFQUFFLFVBQVU7NkJBQ3JCO3lCQUNKO3FCQUNKO2lCQUNKLENBQUMsQ0FBQzthQUNOO1NBQ0o7S0FDSjtDQUNKLENBQUM7QUFFRixNQUFNLENBQUMsTUFBTSxlQUFlLEdBQUc7SUFDM0IsSUFBSSxFQUFFLE1BQU07SUFDWixJQUFJLEVBQUUsUUFBUTtJQUNkLEdBQUcsRUFBRSxRQUFRO0lBQ2IsS0FBSyxFQUFFO1FBQ0gsSUFBSSxFQUFFLFNBQVM7UUFDZixRQUFRLEVBQUUsRUFBRTtRQUNaLElBQUksRUFBRSxlQUFlLENBQUMsT0FBTztLQUNoQztDQUNKLENBQUMiLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgeyBFQ2hhcnRzT3B0aW9uIH0gZnJvbSAnZWNoYXJ0cyc7XG5cbi8vIHRzYy1saWJyYXJ5XG5pbXBvcnQgeyBDT01NT05fQ09OU1RBTlQgfSBmcm9tICdAbGlicmFyeS90c2MtY29tbW9uJztcbi8vIC90c2MtbGlicmFyeS9cblxuZXhwb3J0IGNvbnN0IExPQURJTkdfR1JBUEhJQzogRUNoYXJ0c09wdGlvbiA9IHtcbiAgICBncmFwaGljOiB7XG4gICAgICAgIGVsZW1lbnRzOiBbXG4gICAgICAgICAgICB7XG4gICAgICAgICAgICAgICAgdHlwZTogJ2dyb3VwJyxcbiAgICAgICAgICAgICAgICBsZWZ0OiAnY2VudGVyJyxcbiAgICAgICAgICAgICAgICB0b3A6ICdjZW50ZXInLFxuICAgICAgICAgICAgICAgIGNoaWxkcmVuOiBuZXcgQXJyYXkoNykuZmlsbCgwKS5tYXAoKHZhbCwgaSkgPT4gKHtcbiAgICAgICAgICAgICAgICAgICAgdHlwZTogJ3JlY3QnLFxuICAgICAgICAgICAgICAgICAgICB4OiBpICogMjAsXG4gICAgICAgICAgICAgICAgICAgIHNoYXBlOiB7XG4gICAgICAgICAgICAgICAgICAgICAgICB4OiAwLFxuICAgICAgICAgICAgICAgICAgICAgICAgeTogLTQwLFxuICAgICAgICAgICAgICAgICAgICAgICAgd2lkdGg6IDEwLFxuICAgICAgICAgICAgICAgICAgICAgICAgaGVpZ2h0OiA4MFxuICAgICAgICAgICAgICAgICAgICB9LFxuICAgICAgICAgICAgICAgICAgICBzdHlsZTogeyBmaWxsOiAnIzBFMkY0NCcgfSxcbiAgICAgICAgICAgICAgICAgICAga2V5ZnJhbWVBbmltYXRpb246IHtcbiAgICAgICAgICAgICAgICAgICAgICAgIGR1cmF0aW9uOiAxMDAwLFxuICAgICAgICAgICAgICAgICAgICAgICAgZGVsYXk6IGkgKiAyMDAsXG4gICAgICAgICAgICAgICAgICAgICAgICBsb29wOiB0cnVlLFxuICAgICAgICAgICAgICAgICAgICAgICAga2V5ZnJhbWVzOiBbXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAge1xuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBwZXJjZW50OiAwLjUsXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIHNjYWxlWTogMC4zLFxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBlYXNpbmc6ICdjdWJpY0luJ1xuICAgICAgICAgICAgICAgICAgICAgICAgICAgIH0sXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAge1xuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBwZXJjZW50OiAxLFxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICBzY2FsZVk6IDEsXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIGVhc2luZzogJ2N1YmljT3V0J1xuICAgICAgICAgICAgICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgICAgICAgICAgICAgIF1cbiAgICAgICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgICAgIH0pKVxuICAgICAgICAgICAgfVxuICAgICAgICBdXG4gICAgfVxufTtcblxuZXhwb3J0IGNvbnN0IE5PX0RBVEFfR1JBUEhJQyA9IHtcbiAgICB0eXBlOiAndGV4dCcsXG4gICAgbGVmdDogJ2NlbnRlcicsXG4gICAgdG9wOiAnbWlkZGxlJyxcbiAgICBzdHlsZToge1xuICAgICAgICBmaWxsOiAnIzZjNzU3ZCcsXG4gICAgICAgIGZvbnRTaXplOiAyNSxcbiAgICAgICAgdGV4dDogQ09NTU9OX0NPTlNUQU5ULk5PX0RBVEEsXG4gICAgfVxufTtcbiJdfQ==