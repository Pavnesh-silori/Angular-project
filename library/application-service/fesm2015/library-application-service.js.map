{"version":3,"file":"library-application-service.js","sources":["../../../projects/library/application-service/src/lib/application-service.service.ts","../../../projects/library/application-service/src/lib/application-service.component.ts","../../../projects/library/application-service/src/lib/application-service.module.ts","../../../projects/library/application-service/src/lib/tsc/enum/application.enum.ts","../../../projects/library/application-service/src/lib/tsc/model/application.model.ts","../../../projects/library/application-service/src/lib/tsc/controller/application.controller.ts","../../../projects/library/application-service/src/lib/tsc/service/application.service.ts","../../../projects/library/application-service/src/public-api.ts","../../../projects/library/application-service/src/library-application-service.ts"],"sourcesContent":["import { Injectable } from '@angular/core';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class ApplicationServiceService {\n\n  constructor() { }\n}\n","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'lib-application-service',\n  template: `\n    <p>\n      application-service works!\n    </p>\n  `,\n  styles: [\n  ]\n})\nexport class ApplicationServiceComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit(): void {\n  }\n\n}\n","import { \n    NgModule, \n    ModuleWithProviders \n} from '@angular/core';\n\nimport { ApplicationServiceComponent } from './application-service.component';\n\n@NgModule({\n    declarations: [\n        ApplicationServiceComponent\n    ],\n    imports: [\n    ],\n    exports: [\n        ApplicationServiceComponent\n    ]\n})\n\nexport class ApplicationServiceModule {\n    static forRoot(environment: any): ModuleWithProviders<ApplicationServiceModule> {\n        return {\n            ngModule: ApplicationServiceModule,\n            providers: [\n                { provide: 'environment', useValue: environment }\n            ]\n        };\n    }\n}\n","export enum ApplicationKeyID {\n    NETZERO_ADMIN_KEY_ID = 'NETZERO_ADMIN',\n    ACCOUNT_KEY_ID = 'ACCOUNT',\n    ADMIN_KEY_ID = 'ADMIN',\n    NETZERO_KEY_ID = 'TSC_NETZERO',\n    ENERGY_KEY_ID = 'TSC_ENERGY',\n    WATER_KEY_ID = 'TSC_WATER',\n    ENVIRO_KEY_ID = 'TSC_ENVIRO',\n    CONNECT_KEY_ID = 'TSC_CONNECT',\n    OFFSET_KEY_ID = 'TSC_OFFSET',\n    SUPPLIER_KEY_ID = 'SUPPLIER',\n    EMPLOYEE_KEY_ID = 'EMPLOYEE'\n}\n","export interface ApplicationM {\n    id: number;\n    name: string;\n    keyID: string;\n    description: string;\n    url: string;\n}\n\nexport class Application implements ApplicationM {\n    id = null;\n    name  = null;\n    keyID  = null;\n    description  = null;\n    url = null;\n}\n\nexport interface RoleM {\n    id: number;\n    name: string;\n    totalUsers: number;\n  }\n  \n  export class Role implements RoleM{\n    id;\n    name;\n    totalUsers;\n  }\n  export interface UserApplicationM {\n    id: number;\n    name: string;\n    subscriptionStatus: string;\n    roles: Role[];\n  }\n  \n  export interface RootObjectM {\n    application: Application[];\n  }\n  export class RootObject implements RootObjectM{\n    application: Application[];\n}\n  \n  export class UserApplication implements UserApplicationM{\n    id;\n    name;\n    subscriptionStatus;\n    roles: Role[];\n  }\n\n\n","import { Inject, Injectable } from '@angular/core';\nimport { HttpClient } from '@angular/common/http';\nimport { Observable } from 'rxjs';\n\nimport { ApplicationM } from '../model/application.model'; \n\n@Injectable({\n    providedIn: 'root'\n})\n\nexport class ApplicationController {\n    constructor(\n        private http: HttpClient,\n        @Inject('environment') private environment: any\n    ) { }\n\n    getAllApplication(): Observable<ApplicationM[]> {\n        return this.http.get<ApplicationM[]>(`${this.environment.SUBSCRIPTION_API_URL}applications`);\n    }\n\n    getApplicationByUserAccess(): Observable<ApplicationM[]> {\n        return this.http.get<ApplicationM[]>(`${this.environment.ORGANIZATION_API_URL}user/applications/access`);\n    }\n\n    getSubscribedApplicationsByOrgID(orgID) {\n        return this.http.get(`${this.environment.ORGANIZATION_API_URL}organizations/${orgID}/applications-roles`);\n    }\n}\n","import { Inject, Injectable } from '@angular/core';\n\nimport { ApplicationKeyID } from '../enum/application.enum';\nimport { ApplicationM, Application, UserApplication, UserApplicationM } from '../model/application.model';\n\nimport { ApplicationController } from '../controller/application.controller';\n\nimport { AuthenticationService } from '@library/authentication-service';\n\n@Injectable({\n    providedIn: 'root'\n})\n\nexport class ApplicationService {\n\n    ApplicationKeyID: ApplicationKeyID;\n\n    constructor(\n        @Inject('environment') private environment: any,\n        private applicationController: ApplicationController,\n        private authenticationService: AuthenticationService\n    ) { }\n\n    async getAllApplication(): Promise<ApplicationM[]> {\n        let applicationM: ApplicationM[];\n\n        try {\n            applicationM = await this.applicationController.getAllApplication().toPromise();\n\n            if (applicationM) {\n                return applicationM;\n            } else {\n                return [new Application()];\n            }\n        } catch (error) {\n            console.error('Error -', error);\n            return [new Application()];\n        }\n    }\n\n    async getApplicationByUserAccess(): Promise<ApplicationM[]> {\n        let applicationM: ApplicationM[];\n\n        try {\n            applicationM = await this.applicationController.getApplicationByUserAccess().toPromise();\n\n            if (applicationM) {\n                return applicationM;\n            } else {\n                return [new Application()];\n            }\n        } catch (error) {\n            console.error('Error -', error);\n            return [new Application()];\n        }\n    }\n\n    async getSubscribedApplicationsByOrgID(orgID): Promise<UserApplicationM[]> {\n        let applicationM: any;\n\n        try {\n            applicationM = await this.applicationController.getSubscribedApplicationsByOrgID(orgID).toPromise();\n\n            if (applicationM) {\n                return applicationM['application'];\n            } else {\n                return [new UserApplication()];\n            }\n        } catch (error) {\n            console.error('Error -', error);\n            return [new UserApplication()];\n        }\n    }\n\n    getApplicationLogo(keyID: string): string {\n        let logo: string;\n        let basePath: string = '/assets/images/application-logo/';\n\n        switch (keyID) {\n            case ApplicationKeyID.ADMIN_KEY_ID:\n                logo = basePath + 'admin-with-name.jpg';\n                break;\n            case ApplicationKeyID.NETZERO_KEY_ID:\n                logo = basePath + 'netzero-with-name.jpg';\n                break;\n            case ApplicationKeyID.WATER_KEY_ID:\n                logo = basePath + 'water-with-name.jpg';\n                break;\n            case ApplicationKeyID.ENERGY_KEY_ID:\n                logo = basePath + 'energy-with-name.jpg';\n                break;\n            case ApplicationKeyID.ENVIRO_KEY_ID:\n                logo = basePath + 'enviro-with-name.jpg';\n                break;\n            case ApplicationKeyID.OFFSET_KEY_ID:\n                logo = basePath + 'offset-with-name.jpg';\n                break;\n            case ApplicationKeyID.CONNECT_KEY_ID:\n                logo = basePath + 'connect-with-name.jpg';\n                break;\n            default:\n                logo = null;\n        }\n        return logo;\n    }\n\n    getApplicationLogoWithoutName(keyID: string): string {\n        let logo: string;\n        let basePath: string = '/assets/images/application-logo/';\n\n        switch (keyID) {\n            case ApplicationKeyID.ADMIN_KEY_ID:\n                logo = basePath + 'admin-without-name.jpg';\n                break;\n            case ApplicationKeyID.NETZERO_KEY_ID:\n                logo = basePath + 'netzero-without-name.jpg';\n                break;\n            case ApplicationKeyID.WATER_KEY_ID:\n                logo = basePath + 'water-without-name.jpg';\n                break;\n            case ApplicationKeyID.ENERGY_KEY_ID:\n                logo = basePath + 'energy-without-name.jpg';\n                break;\n            case ApplicationKeyID.ENVIRO_KEY_ID:\n                logo = basePath + 'enviro-without-name.jpg';\n                break;\n            case ApplicationKeyID.OFFSET_KEY_ID:\n                logo = basePath + 'offset-without-name.jpg';\n                break;\n            case ApplicationKeyID.CONNECT_KEY_ID:\n                logo = basePath + 'connect-without-name.jpg';\n                break;\n            default:\n                logo = null;\n        }\n        return logo;\n    }\n\n    getApplicationLogoWithSideName(keyID: string): string {\n        let logo: string;\n        let basePath: string = '/assets/images/application-logo/with-side-name/';\n\n        switch (keyID) {\n            case ApplicationKeyID.ADMIN_KEY_ID:\n                logo = basePath + 'tsc.png';\n                break;\n            case ApplicationKeyID.NETZERO_KEY_ID:\n                logo = basePath + 'netzero.png';\n                break;\n            case ApplicationKeyID.WATER_KEY_ID:\n                logo = basePath + 'water.png';\n                break;\n            case ApplicationKeyID.ENERGY_KEY_ID:\n                logo = basePath + 'energy.png';\n                break;\n            case ApplicationKeyID.ENVIRO_KEY_ID:\n                logo = basePath + 'enviro.png';\n                break;\n            case ApplicationKeyID.OFFSET_KEY_ID:\n                logo = basePath + 'offset.png';\n                break;\n            case ApplicationKeyID.CONNECT_KEY_ID:\n                logo = basePath + 'connect.png';\n                break;\n            default:\n                logo = null;\n        }\n        return logo;\n    }\n\n    getApplicationLogoFileName(keyID: string): string {\n        let fileName: string;\n\n        switch (keyID) {\n            case ApplicationKeyID.ADMIN_KEY_ID:\n                fileName = 'admin';\n                break;\n            case ApplicationKeyID.NETZERO_KEY_ID:\n                fileName = 'netzero';\n                break;\n            case ApplicationKeyID.WATER_KEY_ID:\n                fileName = 'water';\n                break;\n            case ApplicationKeyID.ENERGY_KEY_ID:\n                fileName = 'energy';\n                break;\n            case ApplicationKeyID.ENVIRO_KEY_ID:\n                fileName = 'enviro';\n                break;\n            case ApplicationKeyID.OFFSET_KEY_ID:\n                fileName = 'offset';\n                break;\n            case ApplicationKeyID.CONNECT_KEY_ID:\n                fileName = 'connect';\n                break;\n            default:\n                fileName = null;\n        }\n        return fileName;\n    }\n\n    appRedirect(applicationKeyID) {\n        let redirectUrl: string;\n\n        switch (applicationKeyID) {\n            case ApplicationKeyID.NETZERO_ADMIN_KEY_ID:\n                redirectUrl = this.environment.NETZERO_ADMIN_URL;\n                break;\n            case ApplicationKeyID.ADMIN_KEY_ID:\n                redirectUrl = this.environment.ADMIN_URL;\n                break;\n            case ApplicationKeyID.NETZERO_KEY_ID:\n                redirectUrl = this.environment.NETZERO_URL;\n                break;\n            case ApplicationKeyID.SUPPLIER_KEY_ID:\n                redirectUrl = this.environment.ENTERPRISE_SUPPLIER_URL;\n                break;\n            case ApplicationKeyID.OFFSET_KEY_ID:\n                redirectUrl = this.environment.OFFSET_URL;\n                break;\n            case ApplicationKeyID.CONNECT_KEY_ID:\n                redirectUrl = this.environment.CONNECT_URL;\n                break;\n            case ApplicationKeyID.ENERGY_KEY_ID:\n                redirectUrl = this.environment.ENERGY_URL;\n                break;\n            case ApplicationKeyID.WATER_KEY_ID:\n                redirectUrl = this.environment.WATER_URL;\n                break;\n            case ApplicationKeyID.ENVIRO_KEY_ID:\n                redirectUrl = this.environment.WATER_URL;\n                break;\n            default:\n                redirectUrl = this.environment.ACCOUNT_URL;\n                break;\n        }\n\n        return redirectUrl;\n    }\n\n    appBtnLogout(applicationKeyID) {\n        let redirectUrl = '';\n\n        redirectUrl = this.appRedirect(applicationKeyID);\n        this.authenticationService.logout(redirectUrl, '', 'logout');\n    }\n\n}\n","/*\n * Public API Surface of application-service\n */\n\nexport * from './lib/application-service.service';\nexport * from './lib/application-service.component';\nexport * from './lib/application-service.module';\n\nexport * from './lib/tsc/enum/application.enum';\nexport * from './lib/tsc/model/application.model';\nexport * from './lib/tsc/controller/application.controller';\nexport * from './lib/tsc/service/application.service';\n","/**\n * Generated bundle index. Do not edit.\n */\n\nexport * from './public-api';\n"],"names":["i1.ApplicationController"],"mappings":"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"}