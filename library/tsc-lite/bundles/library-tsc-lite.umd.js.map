{"version":3,"file":"library-tsc-lite.umd.js","sources":["../../../projects/library/tsc-lite/src/lib/tsc-lite.service.ts","../../../projects/library/tsc-lite/src/lib/tsc-lite.component.ts","../../../projects/library/tsc-lite/src/lib/tsc-lite.module.ts","../../../projects/library/tsc-lite/src/lib/tsc/constant/list.constant.ts","../../../projects/library/tsc-lite/src/lib/tsc/enum/error.enum.ts","../../../projects/library/tsc-lite/src/lib/tsc/enum/schedule-report.enum.ts","../../../projects/library/tsc-lite/src/lib/tsc/model/alert.model.ts","../../../projects/library/tsc-lite/src/lib/tsc/model/parameter.model.ts","../../../projects/library/tsc-lite/src/lib/tsc/model/entity.model.ts","../../../projects/library/tsc-lite/src/lib/tsc/model/device.model.ts","../../../projects/library/tsc-lite/src/lib/tsc/model/unit.model.ts","../../../projects/library/tsc-lite/src/lib/tsc/model/shift.model.ts","../../../projects/library/tsc-lite/src/lib/tsc/model/recent-data.model.ts","../../../projects/library/tsc-lite/src/lib/tsc/model/report.model.ts","../../../projects/library/tsc-lite/src/lib/tsc/model/aggregate-data.model.ts","../../../projects/library/tsc-lite/src/lib/tsc/model/make-model.model.ts","../../../projects/library/tsc-lite/src/lib/tsc/model/regulator.model.ts","../../../projects/library/tsc-lite/src/lib/tsc/controller/parameter.controller.ts","../../../projects/library/tsc-lite/src/lib/tsc/guard/resolve.guard.ts","../../../node_modules/tslib/tslib.es6.mjs","../../../projects/library/tsc-lite/src/lib/tsc/service/parameter.service.ts","../../../projects/library/tsc-lite/src/lib/tsc/controller/aggregate-data.controller.ts","../../../projects/library/tsc-lite/src/lib/tsc/service/aggregate-data.service.ts","../../../projects/library/tsc-lite/src/lib/tsc/component/_shared/dialog/trend/trend.component.ts","../../../projects/library/tsc-lite/src/lib/tsc/component/_shared/dialog/trend/trend.component.html","../../../projects/library/tsc-lite/src/lib/tsc/component/_shared/dialog/trend/trend.module.ts","../../../projects/library/tsc-lite/src/lib/tsc/component/_shared/dialog/entity/entity.component.ts","../../../projects/library/tsc-lite/src/lib/tsc/component/_shared/dialog/entity/entity.component.html","../../../projects/library/tsc-lite/src/lib/tsc/component/_shared/dialog/entity/entity.module.ts","../../../projects/library/tsc-lite/src/lib/tsc/component/_shared/download-report/download-report.component.ts","../../../projects/library/tsc-lite/src/lib/tsc/component/_shared/download-report/download-report.component.html","../../../projects/library/tsc-lite/src/lib/tsc/component/_shared/download-report/download-report.module.ts","../../../projects/library/tsc-lite/src/lib/tsc/component/_shared/static-page/layout-not-found/layout-not-found.component.ts","../../../projects/library/tsc-lite/src/lib/tsc/component/_shared/static-page/layout-not-found/layout-not-found.component.html","../../../projects/library/tsc-lite/src/lib/tsc/component/_shared/static-page/layout-not-found/layout-not-found.module.ts","../../../projects/library/tsc-lite/src/lib/tsc/component/_shared/static-page/tsc-restrict/tsc-restrict.component.ts","../../../projects/library/tsc-lite/src/lib/tsc/component/_shared/static-page/tsc-restrict/tsc-restrict.component.html","../../../projects/library/tsc-lite/src/lib/tsc/component/_shared/static-page/tsc-restrict/tsc-restrict.module.ts","../../../projects/library/tsc-lite/src/lib/tsc/component/authorization/success/success.component.ts","../../../projects/library/tsc-lite/src/lib/tsc/component/authorization/success/success.component.html","../../../projects/library/tsc-lite/src/lib/tsc/component/dropdown/aggregation/aggregation.component.ts","../../../projects/library/tsc-lite/src/lib/tsc/component/dropdown/aggregation/aggregation.component.html","../../../projects/library/tsc-lite/src/lib/tsc/component/dropdown/aggregation/aggregation.module.ts","../../../projects/library/tsc-lite/src/lib/tsc/component/dropdown/aggregation-duration/aggregation-duration.component.ts","../../../projects/library/tsc-lite/src/lib/tsc/component/dropdown/aggregation-duration/aggregation-duration.component.html","../../../projects/library/tsc-lite/src/lib/tsc/component/dropdown/aggregation-duration/aggregation-duration.module.ts","../../../projects/library/tsc-lite/src/lib/tsc/component/dropdown/param-metric/param-metric.component.ts","../../../projects/library/tsc-lite/src/lib/tsc/component/dropdown/param-metric/param-metric.component.html","../../../projects/library/tsc-lite/src/lib/tsc/component/dropdown/param-metric/param-metric.module.ts","../../../projects/library/tsc-lite/src/lib/tsc/component/dropdown/parameter/parameter.component.ts","../../../projects/library/tsc-lite/src/lib/tsc/component/dropdown/parameter/parameter.component.html","../../../projects/library/tsc-lite/src/lib/tsc/component/dropdown/parameter/parameter.module.ts","../../../projects/library/tsc-lite/src/lib/tsc/enum/dropdown.enum.ts","../../../projects/library/tsc-lite/src/lib/tsc/controller/device.controller.ts","../../../projects/library/tsc-lite/src/lib/tsc/service/device.service.ts","../../../projects/library/tsc-lite/src/lib/tsc/component/dropdown/device/device.component.ts","../../../projects/library/tsc-lite/src/lib/tsc/component/dropdown/device/device.component.html","../../../projects/library/tsc-lite/src/lib/tsc/component/dropdown/device/device.module.ts","../../../projects/library/tsc-lite/src/lib/tsc/controller/entity.controller.ts","../../../projects/library/tsc-lite/src/lib/tsc/service/entity.service.ts","../../../projects/library/tsc-lite/src/lib/tsc/component/dropdown/entity/entity.component.ts","../../../projects/library/tsc-lite/src/lib/tsc/component/dropdown/entity/entity.component.html","../../../projects/library/tsc-lite/src/lib/tsc/component/dropdown/entity/entity.module.ts","../../../projects/library/tsc-lite/src/lib/tsc/component/dropdown/entity-type/entity-type.component.ts","../../../projects/library/tsc-lite/src/lib/tsc/component/dropdown/entity-type/entity-type.component.html","../../../projects/library/tsc-lite/src/lib/tsc/component/dropdown/entity-type/entity-type.module.ts","../../../projects/library/tsc-lite/src/lib/tsc/controller/unit.controller.ts","../../../projects/library/tsc-lite/src/lib/tsc/service/unit.service.ts","../../../projects/library/tsc-lite/src/lib/tsc/component/dropdown/unit/unit.component.ts","../../../projects/library/tsc-lite/src/lib/tsc/component/dropdown/unit/unit.component.html","../../../projects/library/tsc-lite/src/lib/tsc/component/dropdown/unit/unit.module.ts","../../../projects/library/tsc-lite/src/lib/tsc/component/landing-page/home/home.component.ts","../../../projects/library/tsc-lite/src/lib/tsc/component/landing-page/home/home.component.html","../../../projects/library/tsc-lite/src/lib/tsc/component/landing-page/home/home-routing.module.ts","../../../projects/library/tsc-lite/src/lib/tsc/component/landing-page/home/home.module.ts","../../../projects/library/tsc-lite/src/lib/tsc/controller/shift.controller.ts","../../../projects/library/tsc-lite/src/lib/tsc/service/shift.service.ts","../../../projects/library/tsc-lite/src/lib/tsc/component/dropdown/shift/shift.component.ts","../../../projects/library/tsc-lite/src/lib/tsc/component/dropdown/shift/shift.component.html","../../../projects/library/tsc-lite/src/lib/tsc/component/dropdown/shift/shift.module.ts","../../../projects/library/tsc-lite/src/lib/tsc/component/dashboard/consumption/consumption.component.ts","../../../projects/library/tsc-lite/src/lib/tsc/component/dashboard/consumption/consumption.component.html","../../../projects/library/tsc-lite/src/lib/tsc/component/dashboard/consumption/consumption-routing.module.ts","../../../projects/library/tsc-lite/src/lib/tsc/component/dashboard/consumption/consumption.module.ts","../../../projects/library/tsc-lite/src/lib/tsc/component/dashboard/consumption-breakup/consumption-breakup.component.ts","../../../projects/library/tsc-lite/src/lib/tsc/component/dashboard/consumption-breakup/consumption-breakup.component.html","../../../projects/library/tsc-lite/src/lib/tsc/component/dashboard/consumption-breakup/consumption-breakup-routing.module.ts","../../../projects/library/tsc-lite/src/lib/tsc/component/dashboard/consumption-breakup/consumption-breakup.module.ts","../../../projects/library/tsc-lite/src/lib/tsc/service/trend.service.ts","../../../projects/library/tsc-lite/src/lib/tsc/controller/recent-data.controller.ts","../../../projects/library/tsc-lite/src/lib/tsc/service/recent-data.service.ts","../../../projects/library/tsc-lite/src/lib/tsc/component/dashboard/entity/entity.component.ts","../../../projects/library/tsc-lite/src/lib/tsc/component/dashboard/entity/entity.component.html","../../../projects/library/tsc-lite/src/lib/tsc/component/dashboard/entity/entity-routing.module.ts","../../../projects/library/tsc-lite/src/lib/tsc/component/dashboard/entity/entity.module.ts","../../../projects/library/tsc-lite/src/lib/tsc/service/alert.service.ts","../../../projects/library/tsc-lite/src/lib/tsc/component/dashboard/facility/facility.component.ts","../../../projects/library/tsc-lite/src/lib/tsc/component/dashboard/facility/facility.component.html","../../../projects/library/tsc-lite/src/lib/tsc/component/dashboard/facility/facility-routing.module.ts","../../../projects/library/tsc-lite/src/lib/tsc/component/dashboard/facility/facility.module.ts","../../../projects/library/tsc-lite/src/lib/tsc/controller/entity-device.controller.ts","../../../projects/library/tsc-lite/src/lib/tsc/service/entity-device.service.ts","../../../projects/library/tsc-lite/src/lib/tsc/component/dashboard/meter-data/meter-data.component.ts","../../../projects/library/tsc-lite/src/lib/tsc/component/dashboard/meter-data/meter-data.component.html","../../../projects/library/tsc-lite/src/lib/tsc/component/dashboard/meter-data/meter-data-routing.module.ts","../../../projects/library/tsc-lite/src/lib/tsc/component/dashboard/meter-data/meter-data.module.ts","../../../projects/library/tsc-lite/src/lib/tsc/component/dashboard/parameter/tab/tab-routing.module.ts","../../../projects/library/tsc-lite/src/lib/tsc/component/dashboard/parameter/tab/tab.component.ts","../../../projects/library/tsc-lite/src/lib/tsc/component/dashboard/parameter/tab/tab.component.html","../../../projects/library/tsc-lite/src/lib/tsc/component/dashboard/parameter/tab/tab.module.ts","../../../projects/library/tsc-lite/src/lib/tsc/component/dashboard/parameter/by-entity/by-entity.component.ts","../../../projects/library/tsc-lite/src/lib/tsc/component/dashboard/parameter/by-entity/by-entity.component.html","../../../projects/library/tsc-lite/src/lib/tsc/component/dashboard/parameter/by-entity/by-entity-routing.module.ts","../../../projects/library/tsc-lite/src/lib/tsc/component/dashboard/parameter/by-entity/by-entity.module.ts","../../../projects/library/tsc-lite/src/lib/tsc/component/dashboard/parameter/by-parameter/by-parameter.component.ts","../../../projects/library/tsc-lite/src/lib/tsc/component/dashboard/parameter/by-parameter/by-parameter.component.html","../../../projects/library/tsc-lite/src/lib/tsc/component/dashboard/parameter/by-parameter/by-parameter-routing.module.ts","../../../projects/library/tsc-lite/src/lib/tsc/component/dashboard/parameter/by-parameter/by-parameter.module.ts","../../../projects/library/tsc-lite/src/lib/tsc/component/_shared/filter/source-load/source-load.component.ts","../../../projects/library/tsc-lite/src/lib/tsc/component/_shared/filter/source-load/source-load.component.html","../../../projects/library/tsc-lite/src/lib/tsc/component/_shared/filter/source-load/source-load.module.ts","../../../projects/library/tsc-lite/src/lib/tsc/service/report.service.ts","../../../projects/library/tsc-lite/src/lib/tsc/component/report/breakup/breakup.component.ts","../../../projects/library/tsc-lite/src/lib/tsc/component/report/breakup/breakup.component.html","../../../projects/library/tsc-lite/src/lib/tsc/component/report/breakup/breakup-routing.module.ts","../../../projects/library/tsc-lite/src/lib/tsc/component/report/breakup/breakup.module.ts","../../../projects/library/tsc-lite/src/lib/tsc/component/report/cgwa/cgwa.component.ts","../../../projects/library/tsc-lite/src/lib/tsc/component/report/cgwa/cgwa.component.html","../../../projects/library/tsc-lite/src/lib/tsc/component/report/cgwa/cgwa-routing.module.ts","../../../projects/library/tsc-lite/src/lib/tsc/component/report/cgwa/cgwa.module.ts","../../../projects/library/tsc-lite/src/lib/tsc/component/report/consumption-breakup/consumption-breakup.component.ts","../../../projects/library/tsc-lite/src/lib/tsc/component/report/consumption-breakup/consumption-breakup.component.html","../../../projects/library/tsc-lite/src/lib/tsc/component/report/consumption-breakup/consumption-breakup-routing.module.ts","../../../projects/library/tsc-lite/src/lib/tsc/component/report/consumption-breakup/consumption-breakup.module.ts","../../../projects/library/tsc-lite/src/lib/tsc/model/source-consumer.model.ts","../../../projects/library/tsc-lite/src/lib/tsc/controller/source.controller.ts","../../../projects/library/tsc-lite/src/lib/tsc/service/source.service.ts","../../../projects/library/tsc-lite/src/lib/tsc/component/report/consumption/consumption.component.ts","../../../projects/library/tsc-lite/src/lib/tsc/component/report/consumption/consumption.component.html","../../../projects/library/tsc-lite/src/lib/tsc/component/report/consumption/consumption-routing.module.ts","../../../projects/library/tsc-lite/src/lib/tsc/component/report/consumption/consumption.module.ts","../../../projects/library/tsc-lite/src/lib/tsc/model/data-availability.model.ts","../../../projects/library/tsc-lite/src/lib/tsc/controller/data-availability.controller.ts","../../../projects/library/tsc-lite/src/lib/tsc/component/report/data-availability/data-availability.component.ts","../../../projects/library/tsc-lite/src/lib/tsc/component/report/data-availability/data-availability.component.html","../../../projects/library/tsc-lite/src/lib/tsc/component/report/data-availability/data-availability-routing.module.ts","../../../projects/library/tsc-lite/src/lib/tsc/component/report/data-availability/data-availability.module.ts","../../../projects/library/tsc-lite/src/lib/tsc/component/report/meter/meter.component.ts","../../../projects/library/tsc-lite/src/lib/tsc/component/report/meter/meter.component.html","../../../projects/library/tsc-lite/src/lib/tsc/component/report/meter/meter-routing.module.ts","../../../projects/library/tsc-lite/src/lib/tsc/component/report/meter/meter.module.ts","../../../projects/library/tsc-lite/src/lib/tsc/component/report/parameter/parameter.component.ts","../../../projects/library/tsc-lite/src/lib/tsc/component/report/parameter/parameter.component.html","../../../projects/library/tsc-lite/src/lib/tsc/component/report/parameter/parameter-routing.module.ts","../../../projects/library/tsc-lite/src/lib/tsc/component/report/parameter/parameter.module.ts","../../../projects/library/tsc-lite/src/lib/tsc/component/report/raw-data/raw-data.component.ts","../../../projects/library/tsc-lite/src/lib/tsc/component/report/raw-data/raw-data.component.html","../../../projects/library/tsc-lite/src/lib/tsc/component/report/raw-data/raw-data-routing.module.ts","../../../projects/library/tsc-lite/src/lib/tsc/component/report/raw-data/raw-data.module.ts","../../../projects/library/tsc-lite/src/lib/tsc/component/report/sourcing/sourcing.component.ts","../../../projects/library/tsc-lite/src/lib/tsc/component/report/sourcing/sourcing.component.html","../../../projects/library/tsc-lite/src/lib/tsc/component/report/sourcing/sourcing-routing.module.ts","../../../projects/library/tsc-lite/src/lib/tsc/component/report/sourcing/sourcing.module.ts","../../../projects/library/tsc-lite/src/lib/tsc/component/report/usage-across-facility/usage-across-facility.component.ts","../../../projects/library/tsc-lite/src/lib/tsc/component/report/usage-across-facility/usage-across-facility.component.html","../../../projects/library/tsc-lite/src/lib/tsc/component/report/usage-across-facility/usage-across-facility-routing.module.ts","../../../projects/library/tsc-lite/src/lib/tsc/component/report/usage-across-facility/usage-across-facility.module.ts","../../../projects/library/tsc-lite/src/lib/tsc/component/schedule-report/_shared/configuration/configuration.component.ts","../../../projects/library/tsc-lite/src/lib/tsc/component/schedule-report/_shared/configuration/configuration.component.html","../../../projects/library/tsc-lite/src/lib/tsc/component/schedule-report/_shared/configuration/configuration.module.ts","../../../projects/library/tsc-lite/src/lib/tsc/model/schedule-report.model.ts","../../../projects/library/tsc-lite/src/lib/tsc/controller/schedule-report.controller.ts","../../../projects/library/tsc-lite/src/lib/tsc/component/schedule-report/_shared/page/page.component.ts","../../../projects/library/tsc-lite/src/lib/tsc/component/schedule-report/_shared/page/page.component.html","../../../projects/library/tsc-lite/src/lib/tsc/component/schedule-report/_shared/page/page-routing.module.ts","../../../projects/library/tsc-lite/src/lib/tsc/component/schedule-report/_shared/page/page.module.ts","../../../projects/library/tsc-lite/src/lib/tsc/service/schedule-report.service.ts","../../../projects/library/tsc-lite/src/lib/tsc/component/schedule-report/breakup/breakup.component.ts","../../../projects/library/tsc-lite/src/lib/tsc/component/schedule-report/breakup/breakup.component.html","../../../projects/library/tsc-lite/src/lib/tsc/component/schedule-report/breakup/breakup-routing.module.ts","../../../projects/library/tsc-lite/src/lib/tsc/component/schedule-report/breakup/breakup.module.ts","../../../projects/library/tsc-lite/src/lib/tsc/component/schedule-report/cgwa/cgwa.component.ts","../../../projects/library/tsc-lite/src/lib/tsc/component/schedule-report/cgwa/cgwa.component.html","../../../projects/library/tsc-lite/src/lib/tsc/component/schedule-report/cgwa/cgwa-routing.module.ts","../../../projects/library/tsc-lite/src/lib/tsc/component/schedule-report/cgwa/cgwa.module.ts","../../../projects/library/tsc-lite/src/lib/tsc/component/schedule-report/consumption/consumption.component.ts","../../../projects/library/tsc-lite/src/lib/tsc/component/schedule-report/consumption/consumption.component.html","../../../projects/library/tsc-lite/src/lib/tsc/component/schedule-report/consumption/consumption-routing.module.ts","../../../projects/library/tsc-lite/src/lib/tsc/component/schedule-report/consumption/consumption.module.ts","../../../projects/library/tsc-lite/src/lib/tsc/component/schedule-report/sourcing/sourcing.component.ts","../../../projects/library/tsc-lite/src/lib/tsc/component/schedule-report/sourcing/sourcing.component.html","../../../projects/library/tsc-lite/src/lib/tsc/component/schedule-report/sourcing/sourcing-routing.module.ts","../../../projects/library/tsc-lite/src/lib/tsc/component/schedule-report/sourcing/sourcing.module.ts","../../../projects/library/tsc-lite/src/lib/tsc/component/schedule-report/temperature/temperature.component.ts","../../../projects/library/tsc-lite/src/lib/tsc/component/schedule-report/temperature/temperature.component.html","../../../projects/library/tsc-lite/src/lib/tsc/component/schedule-report/temperature/temperature-routing.module.ts","../../../projects/library/tsc-lite/src/lib/tsc/component/schedule-report/temperature/temperature.module.ts","../../../projects/library/tsc-lite/src/lib/tsc/component/layout/_dialog/create-update/entity/entity.component.ts","../../../projects/library/tsc-lite/src/lib/tsc/component/layout/_dialog/create-update/entity/entity.component.html","../../../projects/library/tsc-lite/src/lib/tsc/component/layout/_dialog/create-update/entity/entity.module.ts","../../../projects/library/tsc-lite/src/lib/tsc/component/layout/_dialog/create-update/layout/layout.component.ts","../../../projects/library/tsc-lite/src/lib/tsc/component/layout/_dialog/create-update/layout/layout.component.html","../../../projects/library/tsc-lite/src/lib/tsc/component/layout/_dialog/create-update/layout/layout.module.ts","../../../projects/library/tsc-lite/src/lib/tsc/component/layout/_dialog/create-update/source-load/source-load.component.ts","../../../projects/library/tsc-lite/src/lib/tsc/component/layout/_dialog/create-update/source-load/source-load.component.html","../../../projects/library/tsc-lite/src/lib/tsc/component/layout/_dialog/create-update/source-load/source-load.module.ts","../../../projects/library/tsc-lite/src/lib/tsc/component/layout/page/page.component.ts","../../../projects/library/tsc-lite/src/lib/tsc/component/layout/page/page.component.html","../../../projects/library/tsc-lite/src/lib/tsc/component/layout/page/page-routing.module.ts","../../../projects/library/tsc-lite/src/lib/tsc/component/layout/page/page.module.ts","../../../projects/library/tsc-lite/src/lib/tsc/component/layout/chart/chart.component.ts","../../../projects/library/tsc-lite/src/lib/tsc/component/layout/chart/chart.component.html","../../../projects/library/tsc-lite/src/lib/tsc/component/layout/chart/chart-routing.module.ts","../../../projects/library/tsc-lite/src/lib/tsc/component/layout/chart/chart.module.ts","../../../projects/library/tsc-lite/src/lib/tsc/component/layout/list/list.component.ts","../../../projects/library/tsc-lite/src/lib/tsc/component/layout/list/list.component.html","../../../projects/library/tsc-lite/src/lib/tsc/component/layout/list/list-routing.module.ts","../../../projects/library/tsc-lite/src/lib/tsc/component/layout/list/list.module.ts","../../../projects/library/tsc-lite/src/lib/tsc/component/layout/tab/tab-routing.module.ts","../../../projects/library/tsc-lite/src/lib/tsc/component/layout/tab/tab.component.ts","../../../projects/library/tsc-lite/src/lib/tsc/component/layout/tab/tab.component.html","../../../projects/library/tsc-lite/src/lib/tsc/component/layout/tab/tab.module.ts","../../../projects/library/tsc-lite/src/lib/tsc/component/layout/map-device/add/add.component.ts","../../../projects/library/tsc-lite/src/lib/tsc/component/layout/map-device/add/add.component.html","../../../projects/library/tsc-lite/src/lib/tsc/component/layout/map-device/add/add-routing.module.ts","../../../projects/library/tsc-lite/src/lib/tsc/component/layout/map-device/add/add.module.ts","../../../projects/library/tsc-lite/src/lib/tsc/component/layout/map-device/view/view.component.ts","../../../projects/library/tsc-lite/src/lib/tsc/component/layout/map-device/view/view.component.html","../../../projects/library/tsc-lite/src/lib/tsc/component/layout/map-device/view/view-routing.module.ts","../../../projects/library/tsc-lite/src/lib/tsc/component/layout/map-device/view/view.module.ts","../../../projects/library/tsc-lite/src/lib/tsc/controller/consumer.controller.ts","../../../projects/library/tsc-lite/src/lib/tsc/component/preferences/_dialog/consumer/create-update/create-update.component.ts","../../../projects/library/tsc-lite/src/lib/tsc/component/preferences/_dialog/consumer/create-update/create-update.component.html","../../../projects/library/tsc-lite/src/lib/tsc/component/preferences/consumer/page/page.component.ts","../../../projects/library/tsc-lite/src/lib/tsc/component/preferences/consumer/page/page.component.html","../../../projects/library/tsc-lite/src/lib/tsc/component/preferences/consumer/page/page-routing.module.ts","../../../projects/library/tsc-lite/src/lib/tsc/component/preferences/consumer/page/page.module.ts","../../../projects/library/tsc-lite/src/lib/tsc/component/preferences/_dialog/source/create-update/create-update.component.ts","../../../projects/library/tsc-lite/src/lib/tsc/component/preferences/_dialog/source/create-update/create-update.component.html","../../../projects/library/tsc-lite/src/lib/tsc/component/preferences/_dialog/source/create-update/create-update-routing.module.ts","../../../projects/library/tsc-lite/src/lib/tsc/component/preferences/_dialog/source/create-update/create-update.module.ts","../../../projects/library/tsc-lite/src/lib/tsc/component/preferences/_dialog/consumer/create-update/create-update-routing.module.ts","../../../projects/library/tsc-lite/src/lib/tsc/component/preferences/_dialog/consumer/create-update/create-update.module.ts","../../../projects/library/tsc-lite/src/lib/tsc/component/preferences/source/page/page.component.ts","../../../projects/library/tsc-lite/src/lib/tsc/component/preferences/source/page/page.component.html","../../../projects/library/tsc-lite/src/lib/tsc/component/preferences/source/page/page-routing.module.ts","../../../projects/library/tsc-lite/src/lib/tsc/component/preferences/source/page/page.module.ts","../../../projects/library/tsc-lite/src/lib/tsc/component/preferences/consumption-parameter/add-update/add-update.component.ts","../../../projects/library/tsc-lite/src/lib/tsc/component/preferences/consumption-parameter/add-update/add-update.component.html","../../../projects/library/tsc-lite/src/lib/tsc/component/preferences/consumption-parameter/add-update/add-update-routing.module.ts","../../../projects/library/tsc-lite/src/lib/tsc/component/preferences/consumption-parameter/add-update/add-update.module.ts","../../../projects/library/tsc-lite/src/lib/tsc/interceptor/interceptor.ts","../../../projects/library/tsc-lite/src/lib/tsc/controller/make-model.controller.ts","../../../projects/library/tsc-lite/src/lib/tsc/controller/regulator.controller.ts","../../../projects/library/tsc-lite/src/lib/tsc/service/make-model.service.ts","../../../projects/library/tsc-lite/src/public-api.ts","../../../projects/library/tsc-lite/src/library-tsc-lite.ts"],"sourcesContent":["import { Injectable } from '@angular/core';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class TscLiteService {\n\n  constructor() { }\n}\n","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'lib-tsc-lite',\n  template: `\n    <p>\n      tsc-lite works!\n    </p>\n  `,\n  styles: [\n  ]\n})\nexport class TscLiteComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit(): void {\n  }\n\n}\n","import { ModuleWithProviders, NgModule } from '@angular/core';\n\nimport { TscLiteComponent } from './tsc-lite.component';\n\n@NgModule({\n    declarations: [\n        TscLiteComponent,\n    ],\n    imports: [\n    ],\n    exports: [\n        TscLiteComponent\n    ]\n})\n\nexport class TscLiteModule {\n    static forRoot(environment: any): ModuleWithProviders<TscLiteModule> {\n        return {\n            ngModule: TscLiteModule,\n            providers: [\n                { provide: 'environment', useValue: environment }\n            ]\n        };\n    }\n}","import { STATUS_CONSTANT } from \"@library/tsc-common\";\n\nexport const LIST_CONSTANT = {\n\n    CONDITION: [\n        {\n            label: '>= (Greater or Equal)',\n            value: 'GTE'\n        },\n        {\n            label: '<= (Less or Equal)',\n            value: 'LTE'\n        },\n        {\n            label: '= (Equal)',\n            value: 'EQUAL'\n        },\n        {\n            label: '> (Greater than)',\n            value: 'GREATER'\n        },\n        {\n            label: '< (Less than)',\n            value: 'LESS'\n        },\n        {\n            label: 'between',\n            value: 'BETWEEN'\n        }\n    ],\n\n    EMAIL_FREQUENCY: [\n        {\n            label: \"Never\",\n            value: \"NEVER\"\n        },\n        {\n            label: \"24 Hrs\",\n            value: \"HOURS_24\"\n        },\n        {\n            label: \"12 Hrs\",\n            value: \"HOURS_12\"\n        },\n        {\n            label: \"6 Hrs\",\n            value: \"HOURS_6\"\n        },\n        {\n            label: \"4 Hrs\",\n            value: \"HOURS_4\"\n        }\n    ],\n\n    SMS_FREQUENCY: [\n        {\n            label: \"Never\",\n            value: \"NEVER\"\n        },\n        {\n            label: \"24 Hrs\",\n            value: \"HOURS_24\"\n        },\n        {\n            label: \"12 Hrs\",\n            value: \"HOURS_12\"\n        }\n    ],\n\n    ESCALATION_FREQUENCY: [\n        {\n            label: \"Day\",\n            value: \"DAY\"\n        },\n        {\n            label: \"Hour\",\n            value: \"HOUR\"\n        },\n        {\n            label: \"Min\",\n            value: \"MIN\"\n        }\n    ],\n\n    ALERT_RULE_FREQUENCY: [\n        {\n            label: 'Instant',\n            value: 'INSTANT'\n        },\n        {\n            label: \"Daily(Today)\",\n            value: \"DAILY_TODAY\"\n        },\n        {\n            label: \"Daily(Yesterday)\",\n            value: \"DAILY_YESTERDAY\"\n        },\n        {\n            label: \"Monthly(Current month)\",\n            value: \"MONTHLY_CURRENT\"\n        },\n        {\n            label: \"Monthly(Last month)\",\n            value: \"MONTHLY_LAST\"\n        },\n        {\n            label: \"Hourly(Current hour)\",\n            value: \"HOURLY_CURRENT\"\n        },\n        {\n            label: \"Hourly(Last hour)\",\n            value: \"HOURLY_LAST\"\n        }\n    ],\n\n    TREND_DATE_RANGE: [\n        {\n            label: \"Last 24 hrs\",\n            value: \"LAST_24_HRS\"\n        },\n        {\n            label: \"Last 7 days\",\n            value: \"LAST_7_DAYS\"\n        },\n        {\n            label: \"Last 30 days\",\n            value: \"LAST_30_DAYS\"\n        }\n    ],\n\n    AGGREGATION_DURATION: [] = [\n        {\n            label: \"15 minutes\",\n            value: \"min_15\"\n\n        },\n        {\n            label: \"30 minutes\",\n            value: \"min_30\"\n        },\n        {\n            label: \"Hourly\",\n            value: \"hour_1\"\n        },\n        {\n            label: \"12 hours\",\n            value: \"hour_12\"\n        },\n        {\n            label: \"Daily\",\n            value: \"day_1\"\n        },\n        {\n            label: \"Monthly\",\n            value: \"month_1\"\n        }\n    ],\n\n    AGGREGATION: [] = [\n        {\n            label: 'Absolute Average',\n            value: 'avgabs'\n        },\n        {\n            label: 'Absolute Maximum',\n            value: 'maxabs'\n        },\n        {\n            label: 'Absolute Minimum',\n            value: 'minabs'\n        },\n        {\n            label: 'Absolute Sum',\n            value: 'sumabs'\n        },\n        {\n            label: 'Average',\n            value: 'avg'\n        },\n        {\n            label: 'Count',\n            value: 'count'\n        },\n        {\n            label: 'First',\n            value: 'first'\n        },\n        {\n            label: 'Last',\n            value: 'last'\n        },\n        {\n            label: 'Maximum',\n            value: 'max'\n        },\n        {\n            label: 'Minimum',\n            value: 'min'\n        },\n        {\n            label: 'Sum',\n            value: 'sum'\n        }\n    ],\n\n    DOWNLOAD_TYPE: [] = [\n        {\n            label: \"PDF\",\n            value: \"pdf\"\n        },\n        {\n            label: \"CSV\",\n            value: \"csv\"\n        },\n        {\n            label: \"XLSX\",\n            value: \"xlsx\"\n        }\n    ],\n\n    SOURCE_LOAD: [] = [\n        {\n            label: \"Source\",\n            value: \"source\"\n        },\n        {\n            label: \"Consumer\",\n            value: \"load\"\n        }\n    ],\n\n    HOURLY_NOTIFICATION_FREQUENCY: [] = [\n        {\n            hour: 1,\n            label: \"1 Hr\",\n            value: \"HOURS_1\"\n        },\n        {\n            hour: 2,\n            label: \"2 Hrs\",\n            value: \"HOURS_2\"\n        },\n        {\n            hour: 4,\n            label: \"4 Hrs\",\n            value: \"HOURS_4\"\n        },\n        {\n            hour: 6,\n            label: \"6 Hrs\",\n            value: \"HOURS_6\"\n        },\n        {\n            hour: 8,\n            label: \"8 Hrs\",\n            value: \"HOURS_8\"\n        },\n        {\n            hour: 12,\n            label: \"12 Hrs\",\n            value: \"HOURS_12\"\n        },\n        {\n            hour: 24,\n            label: \"24 Hrs\",\n            value: \"HOURS_24\"\n        }\n    ],\n\n    HOURLY_REMINDER_FREQUENCY: [] = [\n        {\n            hour: 2,\n            label: \"2 Hrs\",\n            value: \"HOURS_2\"\n        },\n        {\n            hour: 4,\n            label: \"4 Hrs\",\n            value: \"HOURS_4\"\n        },\n        {\n            hour: 6,\n            label: \"6 Hrs\",\n            value: \"HOURS_6\"\n        },\n        {\n            hour: 12,\n            label: \"12 Hrs\",\n            value: \"HOURS_12\"\n        },\n        {\n            hour: 24,\n            label: \"24 Hrs\",\n            value: \"HOURS_24\"\n        },\n        {\n            hour: 48,\n            label: \"48 Hrs\",\n            value: \"HOURS_48\"\n        }\n    ],\n\n    ENERGY_APP_SCHEDULE_REPORT_TYPE: [] = [\n        {\n            label: \"Energy sourcing report\",\n            value: \"SOURCING_REPORT\"\n        },\n        {\n            label: \"Energy breakup report\",\n            value: \"BREAKUP_REPORT\"\n        },\n        {\n            label: \"Energy consumption report\",\n            value: \"CONSUMPTION_REPORT\"\n        },\n        {\n            label: \"Temperature Report\",\n            value: \"TEMPERATURE_REPORT\"\n        }\n    ],\n\n    WATER_APP_SCHEDULE_REPORT_TYPE: [] = [\n        {\n            label: \"Water sourcing report\",\n            value: \"SOURCING_REPORT\"\n        },\n        {\n            label: \"Water breakup report\",\n            value: \"BREAKUP_REPORT\"\n        },\n        {\n            label: \"Water consumption report\",\n            value: \"CONSUMPTION_REPORT\"\n        },\n        {\n            label: \"CGWA Report\",\n            value: \"CGWA_REPORT\"\n        }\n    ]\n}","export enum ReportErrorEnum {\n    INVALID_DATE_LABEL = 'Invalid dates!',\n    INVALID_DATE_MESSAGE = 'Select distinct dates to view the desired report.',\n    TIME_EXCEEDED_LABEL = 'Time exceeded!',\n    HOUR_24_TIME_EXCEEDED_MESSAGE = 'You cannot view or download report for more than 24 hours.',\n    DAY_30_TIME_EXCEEDED_MESSAGE = 'You cannot view or download report for more than 30 days.',\n    DATA_NOT_FOUND_LABEL = 'No data found!',\n    DATA_NOT_FOUND_MESSAGE = 'No data was recorded for the above specified filters. Please keep changing the filters and try again.',\n    INVALID_ERROR_LABEL = 'Please try again later!',\n    INVALID_ERROR_MESSAGE = 'We are not able to fetch the data for the specified filters at the moment. Please keep changing the filters and try again.'\n}\n\nexport enum DashboardErrorEnum {\n    DATA_NOT_FOUND_LABEL = 'No data found!',\n    DATA_NOT_FOUND_MESSAGE = 'No data was recorded at the moment. Please try again after sometime.',\n    INVALID_ERROR_LABEL = 'Please try again later!',\n    INVALID_ERROR_MESSAGE = 'We are not able to fetch the requested data at the moment. Please try again after sometime.'\n}","export enum ScheduleReportTypeEnum {\n    SOURCING_REPORT = 'SOURCING_REPORT',\n    BREAKUP_REPORT = 'BREAKUP_REPORT',\n    CONSUMPTION_REPORT = 'CONSUMPTION_REPORT',\n    CGWA_REPORT = 'CGWA_REPORT',\n    TEMPERATURE_REPORT = 'TEMPERATURE_REPORT'\n}","export interface AlertM {\n    showAlert: boolean;\n    alertLabel: string;\n    alertContent: string;\n    messageAlertType: string;\n    messageAlertIcon: string;\n}\n\nexport class Alert implements AlertM {\n    showAlert = false;\n    alertLabel = '';\n    alertContent = '';\n    messageAlertType = '';\n    messageAlertIcon = '';\n}","export interface ParameterM {\n    id: number;\n    name: string;\n    type: string;\n    label: string;\n    unit: string;\n    paramMetric: string;\n    isCounter: boolean;\n}\n\nexport class Parameter implements ParameterM {\n    id;\n    name;\n    type;\n    label;\n    unit;\n    paramMetric;\n    isCounter;\n}\n\nexport interface ConsumptionParameterM {\n    consumptionParameter: Array<{\n        consumptionParameterID: number;\n        id: number;\n        name: string;\n        type: string;\n        label: string;\n        unit: string;\n        isCounter: boolean;\n        paramMetric: string;\n        aggregation: Array<{\n            keyID: string;\n        }>;\n        dependentParameter: ParameterM[];\n    }>\n}\n\nexport class ConsumptionParameter implements ConsumptionParameterM {\n    consumptionParameter;\n}\n\nexport interface SavedConsumptionParameterM {\n    consumptionParamID: number;\n    dependentParameterID: number[];\n}\n\nexport class SavedConsumptionParameter implements SavedConsumptionParameterM {\n    consumptionParamID;\n    dependentParameterID;\n}","export interface EntityM {\n    id: number;\n    name: string;\n    type: string;\n}\n\nexport class Entity implements EntityM {\n    id;\n    name;\n    type;\n}\n\nexport interface ChildEntity {\n    id: number;\n    name: string;\n    type: string;\n    children: ChildEntity[];\n}\n\nexport interface ParameterEntityM {\n    id: number;\n    name: string;\n    type: string;\n    isParameterExists: boolean;\n    children: ChildEntity[];\n}\n\nexport class ParameterEntity implements ParameterEntityM {\n    id;\n    name;\n    type;\n    isParameterExists;\n    children;\n}\n\nexport interface EntityWithChildrenM {\n    id: number;\n    name: string;\n    type: string;\n    entityStatusFlag: boolean;\n    children: ChildEntity[];\n}\n\nexport class EntityWithChildren implements EntityWithChildrenM {\n    id = null;\n    name = null;\n    type = null;\n    entityStatusFlag = false;\n    children = [];\n}\n\nexport interface EntityLevelConsumptionM {\n    id: number;\n    name: string;\n    value: number;\n    unit: string;\n}\n\nexport class EntityLevelConsumption implements EntityLevelConsumptionM {\n    id;\n    name;\n    value;\n    unit;\n}\n\nexport interface EntityTypeM {\n    type: string;\n}\n\nexport class EntityType implements EntityTypeM {\n    type = null;\n}\n\nexport interface DashboardEntitiesI {\n    id: number;\n    name: string;\n    type: string;\n    status: string;\n}\n\nexport class DashboardEntities implements DashboardEntitiesI {\n    id = null;\n    name = null;\n    type = null;\n    status = null;\n}","export interface DeviceM {\n    id: number;\n    name: string;\n    sourceOrLoad: string;\n    sourceLoadType: string;\n    status: string;\n}\n\nexport class Device implements DeviceM {\n    id;\n    name;\n    sourceOrLoad;\n    sourceLoadType;\n    status;\n}\n\nexport interface DeviceModel {\n    id: number;\n    name: string;\n    sourceOrLoad: string;\n    sourceLoadType: string;\n}\n\nexport interface DevicesWithEntitiesM {\n    id: number;\n    name: string;\n    type: string;\n    devices: DeviceModel[];\n}\n\nexport class DevicesWithEntities implements DevicesWithEntitiesM {\n    id;\n    name;\n    type;\n    devices;\n}\n\nexport interface StatusInfoM {\n    total: number;\n    online: number;\n    delay: number;\n    offline: number;\n}\n\nexport class StatusInfo implements StatusInfoM {\n    total;\n    online;\n    delay;\n    offline;\n}\n\nexport interface DeviceMappingM {\n    id: number;\n    name: string;\n    type: string;\n    make: string;\n    model: string;\n    parameter: Array<{\n        id: number;\n        label: string;\n    }>;\n    mappingRecords: Array<{\n        parameterID: number;\n        parameterName: string;\n        mapping: Array<{\n            mappingID: number;\n            type: string;\n            value: number;\n            name: string;\n        }>;\n    }>;\n}\n\nexport class DeviceMapping implements DeviceMappingM {\n    id;\n    name;\n    type;\n    make;\n    model;\n    parameter;\n    mappingRecords: { \n        parameterID: number;\n        parameterName: string;\n        mapping: { \n            mappingID: number;\n            type: string;\n            value: number;\n            name: string;\n        }[];\n    }[];\n}\n","export interface UnitM {\n    id: number;\n    name: string;\n    type: string;\n}\n\nexport class Unit implements UnitM {\n    id;\n    name;\n    type;\n}","export interface ShiftM {\n    id: number;\n    name: string;\n    keyID: string;\n    startTime: string;\n    endTime: string;\n}\n\nexport class Shift implements ShiftM {\n    id;\n    name;\n    keyID;\n    startTime;\n    endTime;\n}","export interface RecentDataRequestWithParamM {\n    params: Array<{\n        name: string;\n    }>,\n    deviceID: number[];\n    includeDescendants: boolean;\n    timezone: string;\n    entityType: string;\n    backscan: number;\n}\n\nexport class RecentDataRequestWithParam implements RecentDataRequestWithParamM {\n    params = null;\n    deviceID = null;\n    includeDescendants = false;\n    timezone = null;\n    entityType = null;\n    backscan = null;\n}\n\nexport interface RecentDataRequestWithoutParamM {\n    entityID: number[];\n    timezone: string;\n    entityType: string;\n    backscan: number;\n}\n\nexport class RecentDataRequestWithoutParam implements RecentDataRequestWithoutParamM {\n    entityID = null;\n    timezone = null;\n    entityType = null;\n    backscan = null;\n}\n\nexport interface ParamData {\n    name: string;\n    label: string;\n    unit: string;\n    data: {\n        date: string;\n        value: number;\n    };\n    status: string;\n}\n\nexport interface DeviceData {\n    id: number;\n    name: string;\n    status: string;\n    paramData: ParamData[];\n}\n\nexport interface OrgRecentDataM {\n    orgID: number;\n    entityID: number;\n    entityName: string;\n    entityType: string;\n    entityStatusFlag: boolean;\n    deviceData: DeviceData[];\n}\n\nexport class OrgRecentData implements OrgRecentDataM {\n    orgID = null;\n    entityID = null;\n    entityName = null;\n    entityType = null;\n    entityStatusFlag = false;\n    deviceData = null;\n}\n\nexport interface DeviceRecentDataM {\n    deviceID: number;\n    deviceName: string;\n    status: string;\n    paramData: ParamData[];\n}\n\nexport class DeviceRecentData implements DeviceRecentDataM {\n    deviceID = null;\n    deviceName = null;\n    status = null;\n    paramData = [];\n}","import { AggregateDataRequestM } from \"./aggregate-data.model\";\n\nexport interface DownloadReportRequestM {\n    request: AggregateDataRequestM;\n    reportName: string;\n    reportFormat: string;\n}\n\nexport class DownloadReportRequest implements DownloadReportRequestM {\n    request = null;\n    reportName = null;\n    reportFormat = null;\n}","export interface AggregateDataRequestM {\n    interval: string;\n    entityType: string;\n    shiftKey: string;\n    deviceID: number[];\n    entityID: number[];\n    params: Array<{\n        name: string;\n        dsAgg: string;\n        agg: string;\n        source_or_load: string;\n        sourceLoadType: string;\n    }>;\n    showImmediateChildOnly: boolean;\n    groupAll: boolean;\n    startTime: string;\n    endTime: string;\n}\n\nexport class AggregateDataRequest implements AggregateDataRequestM {\n    interval = null;\n    entityType = null;\n    shiftKey = null;\n    deviceID = null;\n    entityID = null;\n    params = null;\n    showImmediateChildOnly = false;\n    groupAll = false;\n    startTime = null;\n    endTime = null;\n\n    nullifyParams() {\n        this.params?.forEach(param => {\n            param.name = param.name || null;\n            param.dsAgg = param.dsAgg || null;\n            param.agg = param.agg || null;\n            param.source_or_load = param.source_or_load || null;\n            param.sourceLoadType = param.sourceLoadType || null;\n        });\n    }\n}\n\nexport interface MeterDataI {\n    date: string;\n    meterName: string;\n    parameterName: string;\n    meterStartReading: number;\n    meterEndReading: number;\n    meterConsumption: number;\n}\n\nexport class MeterData implements MeterDataI {\n    date: string;\n    meterName: string;\n    parameterName: string;\n    meterStartReading: number;\n    meterEndReading: number;\n    meterConsumption: number;\n}","export interface MakeModelI {\n    id: number;\n    name: string;\n}\n\nexport class MakeModel implements MakeModelI {\n    id;\n    name;\n}","export interface RegulatorTypeI {\n    id: number;\n    name: string;\n}\n\nexport class RegulatorType implements RegulatorTypeI {\n    id;\n    name;\n}\n\nexport interface RegulatorsEntitiesI {\n    regulator: {\n        id: number,\n        name: string\n    };\n    entity: {\n        id: number,\n        name: string\n    };\n    status: string;\n}\n\nexport class RegulatorsEntities implements RegulatorsEntitiesI {\n    regulator = {\n        id: null,\n        name: null\n    };\n    entity = {\n        id: null,\n        name: null\n    };\n    status = null;\n}","import { Inject, Injectable } from '@angular/core';\nimport { HttpClient } from '@angular/common/http';\n\nimport { Observable } from 'rxjs';\n\nimport { ConsumptionParameterM, ParameterM, SavedConsumptionParameterM } from '../model/parameter.model';\n\n@Injectable({\n    providedIn: 'root'\n})\n\nexport class ParameterController {\n\n    constructor(\n        private http: HttpClient,\n        @Inject('environment') private environment: any\n    ) { }\n\n    getParameterByOrgID(orgID): Observable<ParameterM[]> {\n        return this.http.get<ParameterM[]>(`${this.environment.TSC_COMMON_API_URL}organizations/${orgID}/parameters`);\n    }\n\n    getParameterByLayoutID(orgID): Observable<ParameterM[]> {\n        return this.http.get<ParameterM[]>(`${this.environment.TSC_COMMON_API_URL}organizations/${orgID}/layouts/parameters`);\n    }\n\n    getParameterByDeviceID(orgID, requestBody): Observable<ParameterM[]> {\n        return this.http.post<ParameterM[]>(`${this.environment.TSC_COMMON_API_URL}organizations/${orgID}/devices/parameters`, requestBody);\n    }\n\n    getParameterByEntityType(orgID, requestBody): Observable<ParameterM[]> {\n        return this.http.post<ParameterM[]>(`${this.environment.TSC_COMMON_API_URL}organizations/${orgID}/entity-type/parameters`, requestBody);\n    }\n\n    getConsumptionParameter(orgID): Observable<ConsumptionParameterM> {\n        return this.http.get<ConsumptionParameterM>(`${this.environment.TSC_COMMON_API_URL}organizations/${orgID}/consumption-parameters`);\n    }\n\n    saveConsumptionParameter(orgID, parameter) {\n        return this.http.post(`${this.environment.TSC_COMMON_API_URL}organizations/${orgID}/consumption-parameters`, parameter);\n    }\n\n    getSavedConsumptionParameter(orgID): Observable<SavedConsumptionParameterM[]> {\n        return this.http.get<SavedConsumptionParameterM[]>(`${this.environment.TSC_COMMON_API_URL}organizations/${orgID}/saved-consumption-parameters`);\n    }\n\n}\n","import { Injectable } from '@angular/core';\nimport { Resolve, ActivatedRouteSnapshot, RouterStateSnapshot, Router } from '@angular/router';\n\nimport { Observable } from 'rxjs';\nimport { catchError, map } from 'rxjs/operators';\n\nimport { ParameterController } from '../controller/parameter.controller';\n\n// tsc-library\nimport { StorageService } from '@library/storage-service';\n// /tsc-library/\n\n@Injectable({\n    providedIn: 'root',\n})\n\nexport class ResolveGuard implements Resolve<boolean> {\n    constructor(\n        private router: Router,\n        private storageService: StorageService,\n        private parameterController: ParameterController\n    ) { }\n\n    resolve(\n        next: ActivatedRouteSnapshot,\n        state: RouterStateSnapshot\n    ): Observable<boolean> | Promise<boolean> | boolean {\n        const layoutID = this.storageService.getStorage('layoutID');\n        const orgID = this.storageService.getStorage('currentOrgID');\n\n        if (!layoutID) {\n            this.router.navigate(['/not-found']);\n            return false;\n        } else {\n            return this.parameterController.getSavedConsumptionParameter(orgID).pipe(\n                map((response: any) => {\n                    if (response && response.length == 0) {\n                        this.router.navigate(['/not-found']);\n                        return false;\n                    } else {\n                        return true;\n                    }\n                }),\n                catchError(error => {\n                    console.log('error in getSavedConsumptionParameter -', error);\n                    this.router.navigate(['/not-found']);\n                    return [false];\n                })\n            );\n        }\n    }\n}","/******************************************************************************\nCopyright (c) Microsoft Corporation.\n\nPermission to use, copy, modify, and/or distribute this software for any\npurpose with or without fee is hereby granted.\n\nTHE SOFTWARE IS PROVIDED \"AS IS\" AND THE AUTHOR DISCLAIMS ALL WARRANTIES WITH\nREGARD TO THIS SOFTWARE INCLUDING ALL IMPLIED WARRANTIES OF MERCHANTABILITY\nAND FITNESS. IN NO EVENT SHALL THE AUTHOR BE LIABLE FOR ANY SPECIAL, DIRECT,\nINDIRECT, OR CONSEQUENTIAL DAMAGES OR ANY DAMAGES WHATSOEVER RESULTING FROM\nLOSS OF USE, DATA OR PROFITS, WHETHER IN AN ACTION OF CONTRACT, NEGLIGENCE OR\nOTHER TORTIOUS ACTION, ARISING OUT OF OR IN CONNECTION WITH THE USE OR\nPERFORMANCE OF THIS SOFTWARE.\n***************************************************************************** */\n/* global Reflect, Promise, SuppressedError, Symbol */\n\nvar extendStatics = function(d, b) {\n  extendStatics = Object.setPrototypeOf ||\n      ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n      function (d, b) { for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p]; };\n  return extendStatics(d, b);\n};\n\nexport function __extends(d, b) {\n  if (typeof b !== \"function\" && b !== null)\n      throw new TypeError(\"Class extends value \" + String(b) + \" is not a constructor or null\");\n  extendStatics(d, b);\n  function __() { this.constructor = d; }\n  d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n}\n\nexport var __assign = function() {\n  __assign = Object.assign || function __assign(t) {\n      for (var s, i = 1, n = arguments.length; i < n; i++) {\n          s = arguments[i];\n          for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p)) t[p] = s[p];\n      }\n      return t;\n  }\n  return __assign.apply(this, arguments);\n}\n\nexport function __rest(s, e) {\n  var t = {};\n  for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0)\n      t[p] = s[p];\n  if (s != null && typeof Object.getOwnPropertySymbols === \"function\")\n      for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) {\n          if (e.indexOf(p[i]) < 0 && Object.prototype.propertyIsEnumerable.call(s, p[i]))\n              t[p[i]] = s[p[i]];\n      }\n  return t;\n}\n\nexport function __decorate(decorators, target, key, desc) {\n  var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\n  if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\n  else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n  return c > 3 && r && Object.defineProperty(target, key, r), r;\n}\n\nexport function __param(paramIndex, decorator) {\n  return function (target, key) { decorator(target, key, paramIndex); }\n}\n\nexport function __esDecorate(ctor, descriptorIn, decorators, contextIn, initializers, extraInitializers) {\n  function accept(f) { if (f !== void 0 && typeof f !== \"function\") throw new TypeError(\"Function expected\"); return f; }\n  var kind = contextIn.kind, key = kind === \"getter\" ? \"get\" : kind === \"setter\" ? \"set\" : \"value\";\n  var target = !descriptorIn && ctor ? contextIn[\"static\"] ? ctor : ctor.prototype : null;\n  var descriptor = descriptorIn || (target ? Object.getOwnPropertyDescriptor(target, contextIn.name) : {});\n  var _, done = false;\n  for (var i = decorators.length - 1; i >= 0; i--) {\n      var context = {};\n      for (var p in contextIn) context[p] = p === \"access\" ? {} : contextIn[p];\n      for (var p in contextIn.access) context.access[p] = contextIn.access[p];\n      context.addInitializer = function (f) { if (done) throw new TypeError(\"Cannot add initializers after decoration has completed\"); extraInitializers.push(accept(f || null)); };\n      var result = (0, decorators[i])(kind === \"accessor\" ? { get: descriptor.get, set: descriptor.set } : descriptor[key], context);\n      if (kind === \"accessor\") {\n          if (result === void 0) continue;\n          if (result === null || typeof result !== \"object\") throw new TypeError(\"Object expected\");\n          if (_ = accept(result.get)) descriptor.get = _;\n          if (_ = accept(result.set)) descriptor.set = _;\n          if (_ = accept(result.init)) initializers.unshift(_);\n      }\n      else if (_ = accept(result)) {\n          if (kind === \"field\") initializers.unshift(_);\n          else descriptor[key] = _;\n      }\n  }\n  if (target) Object.defineProperty(target, contextIn.name, descriptor);\n  done = true;\n};\n\nexport function __runInitializers(thisArg, initializers, value) {\n  var useValue = arguments.length > 2;\n  for (var i = 0; i < initializers.length; i++) {\n      value = useValue ? initializers[i].call(thisArg, value) : initializers[i].call(thisArg);\n  }\n  return useValue ? value : void 0;\n};\n\nexport function __propKey(x) {\n  return typeof x === \"symbol\" ? x : \"\".concat(x);\n};\n\nexport function __setFunctionName(f, name, prefix) {\n  if (typeof name === \"symbol\") name = name.description ? \"[\".concat(name.description, \"]\") : \"\";\n  return Object.defineProperty(f, \"name\", { configurable: true, value: prefix ? \"\".concat(prefix, \" \", name) : name });\n};\n\nexport function __metadata(metadataKey, metadataValue) {\n  if (typeof Reflect === \"object\" && typeof Reflect.metadata === \"function\") return Reflect.metadata(metadataKey, metadataValue);\n}\n\nexport function __awaiter(thisArg, _arguments, P, generator) {\n  function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\n  return new (P || (P = Promise))(function (resolve, reject) {\n      function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\n      function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\n      function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\n      step((generator = generator.apply(thisArg, _arguments || [])).next());\n  });\n}\n\nexport function __generator(thisArg, body) {\n  var _ = { label: 0, sent: function() { if (t[0] & 1) throw t[1]; return t[1]; }, trys: [], ops: [] }, f, y, t, g;\n  return g = { next: verb(0), \"throw\": verb(1), \"return\": verb(2) }, typeof Symbol === \"function\" && (g[Symbol.iterator] = function() { return this; }), g;\n  function verb(n) { return function (v) { return step([n, v]); }; }\n  function step(op) {\n      if (f) throw new TypeError(\"Generator is already executing.\");\n      while (g && (g = 0, op[0] && (_ = 0)), _) try {\n          if (f = 1, y && (t = op[0] & 2 ? y[\"return\"] : op[0] ? y[\"throw\"] || ((t = y[\"return\"]) && t.call(y), 0) : y.next) && !(t = t.call(y, op[1])).done) return t;\n          if (y = 0, t) op = [op[0] & 2, t.value];\n          switch (op[0]) {\n              case 0: case 1: t = op; break;\n              case 4: _.label++; return { value: op[1], done: false };\n              case 5: _.label++; y = op[1]; op = [0]; continue;\n              case 7: op = _.ops.pop(); _.trys.pop(); continue;\n              default:\n                  if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) { _ = 0; continue; }\n                  if (op[0] === 3 && (!t || (op[1] > t[0] && op[1] < t[3]))) { _.label = op[1]; break; }\n                  if (op[0] === 6 && _.label < t[1]) { _.label = t[1]; t = op; break; }\n                  if (t && _.label < t[2]) { _.label = t[2]; _.ops.push(op); break; }\n                  if (t[2]) _.ops.pop();\n                  _.trys.pop(); continue;\n          }\n          op = body.call(thisArg, _);\n      } catch (e) { op = [6, e]; y = 0; } finally { f = t = 0; }\n      if (op[0] & 5) throw op[1]; return { value: op[0] ? op[1] : void 0, done: true };\n  }\n}\n\nexport var __createBinding = Object.create ? (function(o, m, k, k2) {\n  if (k2 === undefined) k2 = k;\n  var desc = Object.getOwnPropertyDescriptor(m, k);\n  if (!desc || (\"get\" in desc ? !m.__esModule : desc.writable || desc.configurable)) {\n      desc = { enumerable: true, get: function() { return m[k]; } };\n  }\n  Object.defineProperty(o, k2, desc);\n}) : (function(o, m, k, k2) {\n  if (k2 === undefined) k2 = k;\n  o[k2] = m[k];\n});\n\nexport function __exportStar(m, o) {\n  for (var p in m) if (p !== \"default\" && !Object.prototype.hasOwnProperty.call(o, p)) __createBinding(o, m, p);\n}\n\nexport function __values(o) {\n  var s = typeof Symbol === \"function\" && Symbol.iterator, m = s && o[s], i = 0;\n  if (m) return m.call(o);\n  if (o && typeof o.length === \"number\") return {\n      next: function () {\n          if (o && i >= o.length) o = void 0;\n          return { value: o && o[i++], done: !o };\n      }\n  };\n  throw new TypeError(s ? \"Object is not iterable.\" : \"Symbol.iterator is not defined.\");\n}\n\nexport function __read(o, n) {\n  var m = typeof Symbol === \"function\" && o[Symbol.iterator];\n  if (!m) return o;\n  var i = m.call(o), r, ar = [], e;\n  try {\n      while ((n === void 0 || n-- > 0) && !(r = i.next()).done) ar.push(r.value);\n  }\n  catch (error) { e = { error: error }; }\n  finally {\n      try {\n          if (r && !r.done && (m = i[\"return\"])) m.call(i);\n      }\n      finally { if (e) throw e.error; }\n  }\n  return ar;\n}\n\n/** @deprecated */\nexport function __spread() {\n  for (var ar = [], i = 0; i < arguments.length; i++)\n      ar = ar.concat(__read(arguments[i]));\n  return ar;\n}\n\n/** @deprecated */\nexport function __spreadArrays() {\n  for (var s = 0, i = 0, il = arguments.length; i < il; i++) s += arguments[i].length;\n  for (var r = Array(s), k = 0, i = 0; i < il; i++)\n      for (var a = arguments[i], j = 0, jl = a.length; j < jl; j++, k++)\n          r[k] = a[j];\n  return r;\n}\n\nexport function __spreadArray(to, from, pack) {\n  if (pack || arguments.length === 2) for (var i = 0, l = from.length, ar; i < l; i++) {\n      if (ar || !(i in from)) {\n          if (!ar) ar = Array.prototype.slice.call(from, 0, i);\n          ar[i] = from[i];\n      }\n  }\n  return to.concat(ar || Array.prototype.slice.call(from));\n}\n\nexport function __await(v) {\n  return this instanceof __await ? (this.v = v, this) : new __await(v);\n}\n\nexport function __asyncGenerator(thisArg, _arguments, generator) {\n  if (!Symbol.asyncIterator) throw new TypeError(\"Symbol.asyncIterator is not defined.\");\n  var g = generator.apply(thisArg, _arguments || []), i, q = [];\n  return i = {}, verb(\"next\"), verb(\"throw\"), verb(\"return\"), i[Symbol.asyncIterator] = function () { return this; }, i;\n  function verb(n) { if (g[n]) i[n] = function (v) { return new Promise(function (a, b) { q.push([n, v, a, b]) > 1 || resume(n, v); }); }; }\n  function resume(n, v) { try { step(g[n](v)); } catch (e) { settle(q[0][3], e); } }\n  function step(r) { r.value instanceof __await ? Promise.resolve(r.value.v).then(fulfill, reject) : settle(q[0][2], r); }\n  function fulfill(value) { resume(\"next\", value); }\n  function reject(value) { resume(\"throw\", value); }\n  function settle(f, v) { if (f(v), q.shift(), q.length) resume(q[0][0], q[0][1]); }\n}\n\nexport function __asyncDelegator(o) {\n  var i, p;\n  return i = {}, verb(\"next\"), verb(\"throw\", function (e) { throw e; }), verb(\"return\"), i[Symbol.iterator] = function () { return this; }, i;\n  function verb(n, f) { i[n] = o[n] ? function (v) { return (p = !p) ? { value: __await(o[n](v)), done: false } : f ? f(v) : v; } : f; }\n}\n\nexport function __asyncValues(o) {\n  if (!Symbol.asyncIterator) throw new TypeError(\"Symbol.asyncIterator is not defined.\");\n  var m = o[Symbol.asyncIterator], i;\n  return m ? m.call(o) : (o = typeof __values === \"function\" ? __values(o) : o[Symbol.iterator](), i = {}, verb(\"next\"), verb(\"throw\"), verb(\"return\"), i[Symbol.asyncIterator] = function () { return this; }, i);\n  function verb(n) { i[n] = o[n] && function (v) { return new Promise(function (resolve, reject) { v = o[n](v), settle(resolve, reject, v.done, v.value); }); }; }\n  function settle(resolve, reject, d, v) { Promise.resolve(v).then(function(v) { resolve({ value: v, done: d }); }, reject); }\n}\n\nexport function __makeTemplateObject(cooked, raw) {\n  if (Object.defineProperty) { Object.defineProperty(cooked, \"raw\", { value: raw }); } else { cooked.raw = raw; }\n  return cooked;\n};\n\nvar __setModuleDefault = Object.create ? (function(o, v) {\n  Object.defineProperty(o, \"default\", { enumerable: true, value: v });\n}) : function(o, v) {\n  o[\"default\"] = v;\n};\n\nexport function __importStar(mod) {\n  if (mod && mod.__esModule) return mod;\n  var result = {};\n  if (mod != null) for (var k in mod) if (k !== \"default\" && Object.prototype.hasOwnProperty.call(mod, k)) __createBinding(result, mod, k);\n  __setModuleDefault(result, mod);\n  return result;\n}\n\nexport function __importDefault(mod) {\n  return (mod && mod.__esModule) ? mod : { default: mod };\n}\n\nexport function __classPrivateFieldGet(receiver, state, kind, f) {\n  if (kind === \"a\" && !f) throw new TypeError(\"Private accessor was defined without a getter\");\n  if (typeof state === \"function\" ? receiver !== state || !f : !state.has(receiver)) throw new TypeError(\"Cannot read private member from an object whose class did not declare it\");\n  return kind === \"m\" ? f : kind === \"a\" ? f.call(receiver) : f ? f.value : state.get(receiver);\n}\n\nexport function __classPrivateFieldSet(receiver, state, value, kind, f) {\n  if (kind === \"m\") throw new TypeError(\"Private method is not writable\");\n  if (kind === \"a\" && !f) throw new TypeError(\"Private accessor was defined without a setter\");\n  if (typeof state === \"function\" ? receiver !== state || !f : !state.has(receiver)) throw new TypeError(\"Cannot write private member to an object whose class did not declare it\");\n  return (kind === \"a\" ? f.call(receiver, value) : f ? f.value = value : state.set(receiver, value)), value;\n}\n\nexport function __classPrivateFieldIn(state, receiver) {\n  if (receiver === null || (typeof receiver !== \"object\" && typeof receiver !== \"function\")) throw new TypeError(\"Cannot use 'in' operator on non-object\");\n  return typeof state === \"function\" ? receiver === state : state.has(receiver);\n}\n\nexport function __addDisposableResource(env, value, async) {\n  if (value !== null && value !== void 0) {\n    if (typeof value !== \"object\" && typeof value !== \"function\") throw new TypeError(\"Object expected.\");\n    var dispose;\n    if (async) {\n        if (!Symbol.asyncDispose) throw new TypeError(\"Symbol.asyncDispose is not defined.\");\n        dispose = value[Symbol.asyncDispose];\n    }\n    if (dispose === void 0) {\n        if (!Symbol.dispose) throw new TypeError(\"Symbol.dispose is not defined.\");\n        dispose = value[Symbol.dispose];\n    }\n    if (typeof dispose !== \"function\") throw new TypeError(\"Object not disposable.\");\n    env.stack.push({ value: value, dispose: dispose, async: async });\n  }\n  else if (async) {\n    env.stack.push({ async: true });\n  }\n  return value;\n}\n\nvar _SuppressedError = typeof SuppressedError === \"function\" ? SuppressedError : function (error, suppressed, message) {\n  var e = new Error(message);\n  return e.name = \"SuppressedError\", e.error = error, e.suppressed = suppressed, e;\n};\n\nexport function __disposeResources(env) {\n  function fail(e) {\n    env.error = env.hasError ? new _SuppressedError(e, env.error, \"An error was suppressed during disposal.\") : e;\n    env.hasError = true;\n  }\n  function next() {\n    while (env.stack.length) {\n      var rec = env.stack.pop();\n      try {\n        var result = rec.dispose && rec.dispose.call(rec.value);\n        if (rec.async) return Promise.resolve(result).then(next, function(e) { fail(e); return next(); });\n      }\n      catch (e) {\n          fail(e);\n      }\n    }\n    if (env.hasError) throw env.error;\n  }\n  return next();\n}\n\nexport default {\n  __extends,\n  __assign,\n  __rest,\n  __decorate,\n  __param,\n  __metadata,\n  __awaiter,\n  __generator,\n  __createBinding,\n  __exportStar,\n  __values,\n  __read,\n  __spread,\n  __spreadArrays,\n  __spreadArray,\n  __await,\n  __asyncGenerator,\n  __asyncDelegator,\n  __asyncValues,\n  __makeTemplateObject,\n  __importStar,\n  __importDefault,\n  __classPrivateFieldGet,\n  __classPrivateFieldSet,\n  __classPrivateFieldIn,\n  __addDisposableResource,\n  __disposeResources,\n};\n","import { Injectable } from '@angular/core';\n\nimport { ConsumptionParameter, ConsumptionParameterM, Parameter, ParameterM, SavedConsumptionParameter, SavedConsumptionParameterM } from '../model/parameter.model';\n\nimport { ParameterController } from '../controller/parameter.controller';\n\n@Injectable({\n    providedIn: 'root'\n})\n\nexport class ParameterService {\n\n    constructor(\n        private parameterController: ParameterController,\n    ) { }\n\n    async getParameterByOrgID(orgID): Promise<ParameterM[]> {\n        let parameterM: ParameterM[];\n        try {\n            parameterM = await this.parameterController.getParameterByOrgID(orgID).toPromise();\n\n            if (parameterM) {\n                return parameterM;\n            } else {\n                return [new Parameter()];\n            }\n        } catch (error) {\n            console.error('Error -', error);\n            return [new Parameter()];\n        }\n    }\n\n    async getParameterByLayoutID(orgID): Promise<ParameterM[]> {\n        let parameterM: ParameterM[];\n        try {\n            parameterM = await this.parameterController.getParameterByLayoutID(orgID).toPromise();\n\n            if (parameterM) {\n                return parameterM;\n            } else {\n                return [new Parameter()];\n            }\n        } catch (error) {\n            console.error('Error -', error);\n            return [new Parameter()];\n        }\n    }\n\n    async getParameterByDeviceID(orgID, requestBody): Promise<ParameterM[]> {\n        let parameterM: ParameterM[];\n        try {\n            parameterM = await this.parameterController.getParameterByDeviceID(orgID, requestBody).toPromise();\n\n            if (parameterM) {\n                return parameterM;\n            } else {\n                return [new Parameter()];\n            }\n        } catch (error) {\n            console.error('Error -', error);\n            return [new Parameter()];\n        }\n    }\n\n    async getConsumptionParameter(orgID): Promise<ConsumptionParameterM> {\n        let consumptionParamM: ConsumptionParameterM;\n        try {\n            consumptionParamM = await this.parameterController.getConsumptionParameter(orgID).toPromise();\n\n            if (consumptionParamM) {\n                return consumptionParamM;\n            } else {\n                return new ConsumptionParameter();\n            }\n        } catch (error) {\n            console.error('Error -', error);\n            return new ConsumptionParameter();\n        }\n    }\n\n    async getSavedConsumptionParameter(orgID): Promise<SavedConsumptionParameterM[]> {\n        let savedConsumptionParamM: SavedConsumptionParameterM[];\n        try {\n            savedConsumptionParamM = await this.parameterController.getSavedConsumptionParameter(orgID).toPromise();\n\n            if (savedConsumptionParamM) {\n                return savedConsumptionParamM;\n            } else {\n                return [new SavedConsumptionParameter()];\n            }\n        } catch (error) {\n            console.error('Error -', error);\n            return [new SavedConsumptionParameter()];\n        }\n    }\n\n}","import { Inject, Injectable } from '@angular/core';\nimport { HttpClient, HttpHeaders } from '@angular/common/http';\n\nimport { Observable } from 'rxjs';\n\nimport { MeterDataI } from '../model/aggregate-data.model';\n\n@Injectable({\n    providedIn: 'root'\n})\nexport class AggregateDataController {\n\n    constructor(\n        private http: HttpClient,\n        @Inject('environment') private environment: any\n    ) { }\n\n    getAggregateData(orgID, requestBody) {\n        let headers = new HttpHeaders().set('skipLoader', 'YES');\n\n        return this.http.post(`${this.environment.TSC_COMMON_API_URL}organizations/${orgID}/data/aggregate`, requestBody, { headers: headers });\n    }\n\n    getMeterAggregateDataForReport(orgID, requestBody): Observable<MeterDataI[]> {\n        let headers = new HttpHeaders().set('skipLoader', 'YES');\n\n        return this.http.post<MeterDataI[]>(`${this.environment.TSC_COMMON_API_URL}organizations/${orgID}/meter-data`, requestBody, { headers: headers })\n    }\n\n    getDeviceAggregateData(orgID, requestBody) {\n        let headers = new HttpHeaders().set('skipLoader', 'YES');\n\n        return this.http.post(`${this.environment.TSC_COMMON_API_URL}organizations/${orgID}/devices/data/aggregate`, requestBody, { headers: headers })\n    }\n\n    getCumulativeConsumption(orgID, requestBody) {\n        let headers = new HttpHeaders().set('skipLoader', 'YES');\n\n        return this.http.post(`${this.environment.TSC_COMMON_API_URL}organizations/${orgID}/consumption`, requestBody, { headers: headers });\n    }\n\n    getEntityParameterData(orgID, requestBody) {\n        let headers = new HttpHeaders().set('skipLoader', 'YES');\n\n        return this.http.post(`${this.environment.TSC_COMMON_API_URL}organizations/${orgID}/entity/parameter-data`, requestBody, { headers: headers });\n    }\n\n    getAvoidedEmissionData(orgID, requestBody) {\n        let headers = new HttpHeaders().set('skipLoader', 'YES');\n\n        return this.http.post(`${this.environment.TSC_COMMON_API_URL}organizations/${orgID}/avoided-emissions`, requestBody, { headers: headers });\n    }\n\n}\n","import { Injectable } from '@angular/core';\n\nimport { MeterData, MeterDataI } from '../model/aggregate-data.model';\n\nimport { AggregateDataController } from '../controller/aggregate-data.controller';\n\n@Injectable({\n    providedIn: 'root'\n})\n\nexport class AggregateDataService {\n\n    constructor(\n        private aggregateDataController: AggregateDataController\n    ) { }\n\n    async getAggregateData(orgID, requestBody) {\n        let aggregatedData;\n        try {\n            aggregatedData = await this.aggregateDataController.getAggregateData(orgID, requestBody).toPromise();\n\n            if (aggregatedData) {\n                return aggregatedData;\n            }\n        } catch (error) {\n            console.error('Error -', error);\n            throw error;\n        }\n    }\n\n    async getMeterAggregateDataForReport(orgID, requestBody): Promise<MeterDataI[]> {\n        let meterReportData: MeterDataI[];\n        try {\n            meterReportData = await this.aggregateDataController.getMeterAggregateDataForReport(orgID, requestBody).toPromise();\n\n            if (meterReportData) {\n                return [new MeterData()];\n            }\n        } catch (error) {\n            console.error('Error -', error);\n            throw error;\n        }\n    }\n\n\n    async getDeviceAggregateData(orgID, requestBody) {\n        let deviceAggregateData;\n        try {\n            deviceAggregateData = await this.aggregateDataController.getDeviceAggregateData(orgID, requestBody).toPromise();\n\n            if (deviceAggregateData) {\n                return deviceAggregateData;\n            }\n        } catch (error) {\n            console.error('Error -', error);\n            throw error;\n        }\n    }\n\n}","import { Component, Inject, OnInit } from '@angular/core';\nimport { FormControl, Validators } from '@angular/forms';\nimport { MAT_DIALOG_DATA } from '@angular/material/dialog';\n\nimport * as moment from 'moment';\n\nimport { LIST_CONSTANT } from '../../../../constant/list.constant';\n\nimport { AggregateDataRequest } from '../../../../model/aggregate-data.model';\nimport { Parameter, ParameterM } from '../../../../model/parameter.model';\n\nimport { ParameterService } from '../../../../service/parameter.service';\nimport { AggregateDataService } from '../../../../service/aggregate-data.service';\n\n// tsc-library\nimport { DialogEnum, MaterialFormFieldAppearance, TSCCommonService } from '@library/tsc-common';\nimport { DateService, DateTimeIntervalEnum } from '@library/date';\nimport { StorageService } from '@library/storage-service';\nimport { ChartViewStateEnum, BasicAreaLineBarChart, ChartTypeEnum, ChartTitle } from '@library/echart';\n// /tsc-library/\n\n@Component({\n    selector: 'lib-trend',\n    templateUrl: './trend.component.html',\n    styles: [\n    ]\n})\n\nexport class TrendComponent implements OnInit {\n\n    listConstant = LIST_CONSTANT;\n\n    materialFormFieldAppearance = MaterialFormFieldAppearance;\n    dateTimeIntervalEnum = DateTimeIntervalEnum;\n    dialogEnum = DialogEnum;\n\n    orgID: any;\n    trendData: any;\n    startTime: any;\n    endTime: any;\n    interval: any;\n    paramLabel: any;\n    parameterM = [new Parameter()];\n\n    chartType: string = ChartTypeEnum.BASIC_AREA_CHART;\n    viewStateFlag: string = ChartViewStateEnum.LOADING;\n    chartTitle = new ChartTitle();\n    chartData = new BasicAreaLineBarChart();\n\n    dateRangeFC: FormControl = new FormControl('LAST_24_HRS', Validators.required);\n\n    constructor(\n        @Inject(MAT_DIALOG_DATA) public data,\n        private storageService: StorageService,\n        private dateService: DateService,\n        private parameterService: ParameterService,\n        private aggregateDataService: AggregateDataService,\n        private tscCommonService: TSCCommonService,\n    ) {\n        this.trendData = data['trendData'];\n    }\n\n    ngOnInit(): void {\n        this.orgID = this.storageService.getStorage('currentOrgID');\n\n        this.dateRangeChange(this.dateRangeFC.value);\n        this.getParameterByLayoutID();\n    }\n\n    async getParameterByLayoutID() {\n        this.parameterM = <ParameterM[]>await this.parameterService.getParameterByLayoutID(this.orgID);\n    }\n\n    dateRangeChange(selectedDateRange) {\n\n        this.startTime = this.dateService.getStartDateTime(selectedDateRange);\n\n        switch (selectedDateRange) {\n            case DateTimeIntervalEnum.LAST_24_HRS:\n                this.endTime = this.dateService.getEndDateTime(DateTimeIntervalEnum.CURRENT_TIME);\n                this.interval = 'min_15';\n                break;\n\n            case DateTimeIntervalEnum.LAST_7_DAYS:\n                this.endTime = this.dateService.getEndDateTime(DateTimeIntervalEnum.CURRENT_DAY);\n                this.interval = 'hour_1';\n                break;\n\n            case DateTimeIntervalEnum.LAST_30_DAYS:\n                this.endTime = this.dateService.getEndDateTime(DateTimeIntervalEnum.CURRENT_DAY);\n                this.interval = 'day_1';\n                break;\n            default:\n                this.endTime = null;\n                this.interval = null;\n                break;\n        }\n\n        this.getTrendData();\n    }\n\n    getCounterParameter(paramMetricValue) {\n        const parameter = this.tscCommonService.getUniqueObject(this.parameterM, 'isCounter', paramMetricValue);\n        return parameter ? parameter.isCounter : false;\n    }\n\n    async getTrendData() {\n\n        this.viewStateFlag = ChartViewStateEnum.LOADING;\n\n        try {\n            let requestData = new AggregateDataRequest();\n\n            const isCounterParameter = this.getCounterParameter(this.trendData?.paramMetric);\n\n            requestData.interval = this.interval;\n            requestData.entityID = this.trendData?.entityID ? [this.trendData.entityID] : null;\n            requestData.deviceID = this.trendData?.deviceID ? [this.trendData.deviceID] : null;\n            requestData.entityType = this.trendData?.entityType;\n\n            requestData.params = [\n                {\n                    name: this.trendData.paramMetric,\n                    dsAgg: \"avg\",\n                    agg: \"avg\",\n                    sourceLoadType: isCounterParameter ? \"all\" : null,\n                    source_or_load: isCounterParameter ? \"source\" : null,\n                }\n            ];\n            requestData.nullifyParams();\n\n            requestData.startTime = this.startTime;\n            requestData.endTime = this.endTime;\n\n            const trendRes = await this.aggregateDataService.getAggregateData(this.orgID, requestData);\n\n            if (trendRes?.[0]?.data.length > 0) {\n                this.paramLabel = trendRes?.[0].paramLabel;\n\n                this.chartData.metaData = trendRes?.[0].data.map(item => ({\n                    name: moment(new Date(item.date)).format(\"YYYY-MM-DD HH:mm:ss\"),\n                    value: item.value\n                }));\n\n                this.chartData.unit = {\n                    name: '',\n                    code: trendRes?.[0].unit,\n                };\n\n                this.chartData.yAxisLabel = trendRes?.[0].paramLabel + ' (' + trendRes?.[0].unit + ')';\n                this.chartData.showDataZoomSlider = true;\n                this.chartData.showDataView = true;\n                this.chartData.showMagicType = true;\n                this.chartData.showRestore = true;\n                this.chartData.showDownloadImage = true;\n\n                this.viewStateFlag = ChartViewStateEnum.HAS_DATA;\n\n            } else {\n                this.viewStateFlag = ChartViewStateEnum.NO_DATA;\n            }\n\n        } catch (error) {\n            this.viewStateFlag = ChartViewStateEnum.NO_DATA;\n\n            console.error(`Error in getTrendData()`, error);\n        }\n    }\n\n}\n","<div mat-dialog-title>\n    <strong class=\"dialogTitle\">\n        {{ paramLabel }} Trend\n    </strong>\n\n    <button mat-icon-button mat-dialog-close cdkFocusInitial class=\"float-end matDialogClose\" matTooltip=\"Close\"\n        matTooltipPosition=\"before\">\n        <span class=\"material-symbols-outlined\" [mat-dialog-close]=\"dialogEnum.CLOSE_DR\">\n            close\n        </span>\n    </button>\n</div>\n\n<div class=\"matDialogContent\" mat-dialog-content>\n    <div class=\"row\">\n        <div class=\"col-sm-6\">\n            <mat-form-field class=\"matFieldWidth100\"\n                [appearance]=\"materialFormFieldAppearance.FORM_FIELD_APPEARANCE\">\n                <mat-label>Select daterange</mat-label>\n                <mat-select (selectionChange)=\"dateRangeChange($event.value)\" [formControl]=\"dateRangeFC\">\n                    <mat-option disabled>Select daterange</mat-option>\n                    <mat-option *ngFor=\"let daterange of listConstant.TREND_DATE_RANGE\" [value]=\"daterange.value\">\n                        {{ daterange.label }}\n                    </mat-option>\n                </mat-select>\n            </mat-form-field>\n        </div>\n    </div>\n\n    <div class=\"row\">\n        <div class=\"col-sm-12\">\n            <lib-basic-area-line-bar [chartTypeInp]=\"chartType\" [chartTitleInp]=\"chartTitle\" [viewStateInp]=\"viewStateFlag\"\n                [dataInp]=\"chartData\"></lib-basic-area-line-bar>\n        </div>\n    </div>\n</div>","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { ReactiveFormsModule } from '@angular/forms';\n\nimport { MatDialogModule } from '@angular/material/dialog';\nimport { MatButtonModule } from '@angular/material/button';\nimport { MatInputModule } from '@angular/material/input';\nimport { MatFormFieldModule } from '@angular/material/form-field';\nimport { MatSelectModule } from '@angular/material/select';\nimport { MatTooltipModule } from '@angular/material/tooltip';\n\nimport { TrendComponent } from './trend.component';\n\n// tsc-library\nimport { BasicAreaLineBarModule } from '@library/echart';\n// /tsc-library/\n\n@NgModule({\n    declarations: [\n        TrendComponent\n    ],\n    imports: [\n        CommonModule,\n        BasicAreaLineBarModule,\n        ReactiveFormsModule,\n        MatDialogModule,\n        MatButtonModule,\n        MatInputModule,\n        MatFormFieldModule,\n        MatSelectModule,\n        MatTooltipModule,\n    ]\n})\nexport class TrendModule { }\n","import { Component, Inject, OnInit } from '@angular/core';\nimport { FormControl, Validators } from '@angular/forms';\nimport { MAT_DIALOG_DATA, MatDialogRef } from '@angular/material/dialog';\n\n// tsc-library\nimport { DialogEnum } from '@library/tsc-common';\n// /tsc-library/\n\n@Component({\n    selector: 'lib-entity',\n    templateUrl: './entity.component.html',\n    styles: [\n    ]\n})\nexport class EntityDialogComponent implements OnInit {\n\n    DialogEnum = DialogEnum;\n\n    entityID: any;\n    entityType: any;\n    entityObject: any;\n\n    entityFC: FormControl = new FormControl('', Validators.required);\n\n    constructor(\n        public dialogRef: MatDialogRef<EntityDialogComponent>,\n        @Inject(MAT_DIALOG_DATA) public data,\n    ) {\n        this.entityID = data?.entityID;\n        this.entityType = data?.entityType;\n        this.entityObject = data?.entityObject;\n        this.dialogRef.disableClose = true;\n    }\n\n    ngOnInit(): void {\n        if (this.entityID) {\n            this.entityFC.patchValue(this.entityID);\n        }\n    }\n\n    onEntityChange(selectedValue) {\n        this.entityFC.patchValue(selectedValue);\n\n        this.dialogRef.close({\n            result: DialogEnum.CLOSE_DR,\n            entityID: this.entityFC.value\n        })\n    }\n\n}","<div mat-dialog-title>\n    <div class=\"row\">\n        <div class=\"col-sm-11\">\n            <div class=\"pageTitle dialogHeader fw-bold\"> Select Entity </div>\n            <div class=\"pageSubtitle\">\n                Entities displayed in gray color have never had consumption, whereas those in black have consumption.\n            </div>\n        </div>\n        <div class=\"col-sm-1\">\n            <button mat-icon-button mat-dialog-close cdkFocusInitial class=\"float-end matDialogClose\"\n                matTooltip=\"Close\" matTooltipPosition=\"before\">\n                <span class=\"material-symbols-outlined\">\n                    close\n                </span>\n            </button>\n        </div>\n    </div>\n</div>\n\n<div class=\"matDialogContent\" mat-dialog-content>\n    <mat-radio-group [formControl]=\"entityFC\" (change)=\"onEntityChange($event.value)\" *ngIf=\"entityObject && entityObject.length > 0 && entityObject[0].id\">\n        <div class=\"row\">\n            <div class=\"col-sm-12\">\n                <div *ngFor=\"let entity of entityObject; let i = index\" class=\"mt-2\">\n                    <mat-radio-button class=\"radioBtnLabel me-2\" [ngClass]=\"{'text-secondary': !entity.entityStatusFlag}\"\n                        [value]=\"entity.id\" [disabled]=\"!entity.entityStatusFlag\">\n                        {{ entity.name }}\n                    </mat-radio-button>\n                    <div *ngIf=\"entity.children && entity.children.length > 0\" class=\"ms-5\">\n                        <ng-container *ngTemplateOutlet=\"recursiveTemplate; context:{ $implicit: entity.children }\"></ng-container>\n                    </div>\n                </div>\n            </div>\n        </div>\n        \n        <ng-template #recursiveTemplate let-entities>\n            <div *ngFor=\"let entity of entities; let i = index\" class=\"mt-2\">\n                <mat-radio-button class=\"radioBtnLabel me-2\" [ngClass]=\"{'text-secondary': !entity.entityStatusFlag}\"\n                    [value]=\"entity.id\" [disabled]=\"!entity.entityStatusFlag\">\n                    {{ entity.name }}\n                </mat-radio-button>\n                <div *ngIf=\"entity.children && entity.children.length > 0\" class=\"ms-5\">\n                    <ng-container *ngTemplateOutlet=\"recursiveTemplate; context:{ $implicit: entity.children }\"></ng-container>\n                </div>\n            </div>\n        </ng-template>\n    </mat-radio-group>\n</div>","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\n\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\n\nimport { MatRadioModule } from '@angular/material/radio';\nimport { MatIconModule } from '@angular/material/icon';\nimport { MatButtonModule } from '@angular/material/button';\nimport { MatTooltipModule } from '@angular/material/tooltip';\nimport { MatDialogModule } from '@angular/material/dialog';\n\nimport { EntityDialogComponent } from './entity.component';\n\n@NgModule({\n    declarations: [\n        EntityDialogComponent\n    ],\n    imports: [\n        CommonModule,\n        FormsModule,\n        ReactiveFormsModule,\n        MatRadioModule,\n        MatIconModule,\n        MatButtonModule,\n        MatTooltipModule,\n        MatDialogModule\n    ]\n})\nexport class EntityDialogModule { }\n","import { Component, EventEmitter, Input, OnInit, Output, SimpleChanges } from '@angular/core';\n\nimport { LIST_CONSTANT } from '../../../constant/list.constant';\n\n// tsc-library\nimport { FileTypeEnum, MATERIAL_CONSTANT } from '@library/tsc-common';\n// /tsc-library/\n\n@Component({\n    selector: 'lib-download-report',\n    templateUrl: './download-report.component.html',\n    styleUrls: ['./download-report.component.scss']\n})\nexport class DownloadReportComponent implements OnInit {\n\n    listConstant = LIST_CONSTANT;\n    materialConstant = MATERIAL_CONSTANT;\n    fileTypeEnum = FileTypeEnum;\n\n    @Input()\n    excludeFileTypeInp: FileTypeEnum;\n\n    @Output()\n    fileTypeEmitted = new EventEmitter<string>();\n\n    excludeFileType = '';\n\n    constructor() { }\n\n    ngOnInit(): void {\n    }\n\n    onChange(selectedType) {\n        this.fileTypeEmitted.emit(selectedType);\n    }\n\n    ngOnChanges(changes: SimpleChanges): void {\n        if (changes.excludeFileTypeInp && this.excludeFileTypeInp) {\n            this.excludeFileType = this.excludeFileTypeInp;\n        }\n    }\n\n}\n","<div class=\"btn-group\" ngbDropdown>\n    <button type=\"button\" ngbDropdownToggle class=\"btn btn-sm btn-primary ms-2 dropdownAfter\" matRipple\n        [matRippleCentered]=\"materialConstant.MAT_RIPPLE_CENTER\">\n        <div class=\"d-flex align-items-center\">\n            <span class=\"me-2\">\n                Export as\n            </span>\n            <span class=\"material-symbols-outlined iconSize\">\n                arrow_drop_down\n            </span>\n        </div>\n    </button>\n\n    <div ngbDropdownMenu>\n        <button *ngFor=\"let type of listConstant.DOWNLOAD_TYPE\" class=\"dropdown-item\" [hidden]=\"excludeFileType == type.value\"\n            (click)=\"onChange(type.value)\">\n            <div class=\"d-flex align-items-center\">\n                <span class=\"material-symbols-outlined me-2 fs-5\" [ngSwitch]=\"type.value\">\n                    <span *ngSwitchCase=\"fileTypeEnum.PDF\" class=\"material-symbols-outlined pdfColor\">\n                        picture_as_pdf\n                    </span>\n                    <span *ngSwitchCase=\"fileTypeEnum.CSV\" class=\"material-symbols-outlined csvXlsxColor\">\n                        csv\n                    </span>\n                    <span *ngSwitchCase=\"fileTypeEnum.XLSX\" class=\"material-symbols-outlined csvXlsxColor\">\n                        description\n                    </span>\n                </span>\n                <span>\n                    {{ type.label }}\n                </span>\n            </div>\n        </button>\n    </div>\n</div>","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\n\nimport { MatInputModule } from '@angular/material/input';\nimport { MatSelectModule } from '@angular/material/select';\nimport { MatIconModule } from '@angular/material/icon';\nimport { MatButtonModule } from '@angular/material/button';\nimport { MatRippleModule } from '@angular/material/core';\n\nimport { NgbModule } from '@ng-bootstrap/ng-bootstrap';\n\nimport { DownloadReportComponent } from './download-report.component';\n\n@NgModule({\n    declarations: [\n        DownloadReportComponent\n    ],\n    imports: [\n        CommonModule,\n        NgbModule,\n        ReactiveFormsModule,\n        FormsModule,\n        MatInputModule,\n        MatSelectModule,\n        MatIconModule,\n        MatButtonModule,\n        MatRippleModule\n    ],\n    exports: [DownloadReportComponent]\n})\nexport class DownloadReportModule { }\n","import { Component, OnInit } from '@angular/core';\n\n@Component({\n    selector: 'lib-layout-not-found',\n    templateUrl: './layout-not-found.component.html',\n    styleUrls: ['./layout-not-found.component.scss']\n})\nexport class LayoutNotFoundComponent implements OnInit {\n\n    constructor() { }\n\n    ngOnInit(): void {\n    }\n\n}\n","<div class=\"card main-card cardOverwrite h-100\">\n    <div class=\"card-body\">\n        <div class=\"container d-flex align-items-center\">\n            <div class=\"mx-auto text-center\">\n                <img class=\"layoutNotFindImg\" src=\"/assets/images/tsc-restrict.jpg\" alt=\"Layout not found\" />\n                <br />\n                <br />\n                You don't have any layout to showcase the respective page. Please create a layout for better experience.\n                <br />\n                Click <a [href]=\"'layout/page'\">here</a> to create a layout.\n            </div>\n        </div>\n    </div>\n</div>\n","import { ModuleWithProviders, NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\n\nimport { LayoutNotFoundComponent } from './layout-not-found.component';\n\n@NgModule({\n    declarations: [\n        LayoutNotFoundComponent,\n    ],\n    imports: [\n        CommonModule\n    ],\n    exports: [\n        LayoutNotFoundComponent\n    ]\n})\n\nexport class LayoutNotFoundModule {\n    static forRoot(environment: any): ModuleWithProviders<LayoutNotFoundModule> {\n        return {\n            ngModule: LayoutNotFoundModule,\n            providers: [\n                { provide: 'environment', useValue: environment }\n            ]\n        };\n    }\n}\n","import { Component, OnInit } from '@angular/core';\n\nimport { SavedConsumptionParameter, SavedConsumptionParameterM } from '../../../../model/parameter.model';\n\nimport { ParameterService } from '../../../../service/parameter.service';\n\n// tsc-library\nimport { StorageService } from '@library/storage-service';\n// /tsc-library/\n\n@Component({\n    selector: 'lib-tsc-restrict',\n    templateUrl: './tsc-restrict.component.html',\n    styleUrls: ['./tsc-restrict.component.scss']\n})\nexport class TscRestrictComponent implements OnInit {\n\n    orgID: any;\n    layoutID: any;\n    consumptionParameter = [new SavedConsumptionParameter()];\n\n    setLayoutRedirectUrl = '/layout/page';\n    setConsumptionRedirectUrl = '/preference/consumption-parameter/add';\n\n    constructor(\n        private storageService: StorageService,\n        private parameterService: ParameterService\n    ) { }\n\n    ngOnInit(): void {\n        this.orgID = this.storageService.getStorage('currentOrgID');\n        this.layoutID = this.storageService.getStorage('layoutID');\n\n        this.getSavedConsumptionParameter();\n    }\n\n    async getSavedConsumptionParameter() {\n        this.consumptionParameter = <SavedConsumptionParameterM[]>await this.parameterService.getSavedConsumptionParameter(this.orgID);\n    }\n\n}\n","<div class=\"card main-card cardOverwrite h-100\">\n    <div class=\"card-body\">\n        <div class=\"container d-flex align-items-center\">\n            <div class=\"mx-auto text-center\">\n                <img class=\"img\" src=\"/assets/images/tsc-restrict.jpg\" alt=\"Not found\" />\n                <br />\n                <br />\n                <ng-container\n                    *ngIf=\"!consumptionParameter?.[0]?.['consumptionParamID'] && !layoutID; else setConsumptionParameter\">\n                    You have not set consumption parameters. Please add consumption parameters for better experience.\n                    <br />\n                    Click <a [href]=\"setConsumptionRedirectUrl\">here</a> to add consumption parameters.\n                    <br />\n                    <br />\n                    You don't have any layout to showcase the respective page. Please create a layout for better\n                    experience.\n                    <br />\n                    Click <a [href]=\"setLayoutRedirectUrl\">here</a> to create a layout.\n                </ng-container>\n                <ng-template #setConsumptionParameter>\n                    <ng-container\n                        *ngIf=\"!consumptionParameter?.[0]?.['consumptionParamID'] && layoutID; else setLayout\">\n                        You have not set consumption parameters. Please add consumption parameters for better\n                        experience.\n                        <br />\n                        Click <a [href]=\"setConsumptionRedirectUrl\">here</a> to add consumption parameters.\n                    </ng-container>\n                    <ng-template #setLayout>\n                        You don't have any layout to showcase the respective page. Please create a layout for better\n                        experience.\n                        <br />\n                        Click <a [href]=\"setLayoutRedirectUrl\">here</a> to create a layout.\n                    </ng-template>\n                </ng-template>\n            </div>\n        </div>\n    </div>\n</div>","import { ModuleWithProviders, NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\n\nimport { TscRestrictComponent } from './tsc-restrict.component';\n\n@NgModule({\n    declarations: [\n        TscRestrictComponent,\n    ],\n    imports: [\n        CommonModule\n    ],\n    exports: [\n        TscRestrictComponent\n    ]\n})\n\nexport class TscRestrictModule {\n    static forRoot(environment: any): ModuleWithProviders<TscRestrictModule> {\n        return {\n            ngModule: TscRestrictModule,\n            providers: [\n                { provide: 'environment', useValue: environment }\n            ]\n        };\n    }\n}\n","import { Component, OnInit } from '@angular/core';\nimport { ActivatedRoute, Router } from '@angular/router';\n\n// tsc-library\nimport { StorageService } from '@library/storage-service';\nimport { Layout, LayoutM, LayoutService } from '@library/layout-service';\nimport { OrganizationService } from '@library/organization-service';\n// /tsc-library/\n\n@Component({\n    selector: 'app-success',\n    templateUrl: './success.component.html',\n    styleUrls: ['./success.component.scss']\n})\n\nexport class SuccessComponent implements OnInit {\n    redirectUrl: string = '/';\n    noTimezone: string = './timezone-not-found';\n    layoutM = [new Layout()];\n    timezone: string = null;\n\n    constructor(\n        private activatedRoute: ActivatedRoute,\n        private router: Router,\n        private layoutService: LayoutService,\n        private organizationService: OrganizationService,\n        private storageService: StorageService\n    ) { }\n\n    ngOnInit(): void {\n        this.activatedRoute.queryParams.subscribe(queryParam => {\n            if (queryParam.redirectUrl) {\n                this.redirectUrl = queryParam.redirectUrl;\n            }\n        });\n\n        // INFO: SOMYA AGRAWAL\n        // Clearing layoutID from storage in switch org because previous layoutID remains in local storage even if current org does not have any layout!\n        this.storageService.deleteStorage('layoutID');\n        this.timeZoneCheck();\n    }\n\n    async timeZoneCheck() {\n        this.timezone = <string>await this.organizationService.getOrgTimezone();\n\n        if (this.timezone) {\n            this.storageService.setStorage('timezone', this.timezone);\n            this.getLayoutsByOrgID();\n        } else {\n            this.router.navigate([this.noTimezone]);\n        }\n    }\n\n    async getLayoutsByOrgID() {\n        let orgID = this.storageService.getStorage('currentOrgID');\n\n        this.layoutM = <LayoutM[]>await this.layoutService.getLayoutByOrgID(orgID);\n\n        const defaultLayout = this.layoutM.find(layout => layout.isDefault);\n\n        if (defaultLayout) {\n            const defaultLayoutID = defaultLayout.id;\n            this.storageService.setStorage('layoutID', defaultLayoutID);\n        } else {\n            console.error('No layout found.');\n        }\n\n        this.router.navigate([this.redirectUrl]);\n    }\n\n}\n","<div class=\"d-flex h-100 justify-content-center align-items-center\">\n    <div class=\"text-center fs-4\"><img class=\"appAuthImg\"\n            src=\"assets/images/application-logo/tsc-with-name.png\" />\n        <br />\n        <br />\n        <span class=\"spinner-border spinner-border-sm text-success\"></span> ..\n    </div>\n</div>\n","import { Component, EventEmitter, OnInit, Output } from '@angular/core';\nimport { FormControl, Validators } from '@angular/forms';\n\nimport { LIST_CONSTANT } from '../../../constant/list.constant';\n\n// tsc-library\nimport { FormErrorEnum, MaterialFormFieldAppearance } from '@library/tsc-common';\n// /tsc-library/\n\n@Component({\n    selector: 'lib-aggregation',\n    templateUrl: './aggregation.component.html',\n    styles: [\n    ]\n})\nexport class AggregationComponent implements OnInit {\n\n    listConstant = LIST_CONSTANT;\n    materialFormFieldAppearance = MaterialFormFieldAppearance;\n\n    FormErrorEnum = FormErrorEnum;\n\n    allAggregationIDs: any[] = [];\n    totalAggregationCount: number = 0;\n    aggregationFC: FormControl = new FormControl(['avg'], [Validators.required]);\n\n    @Output()\n    emitFilter = new EventEmitter();\n\n    constructor() { }\n\n    ngOnInit(): void {\n        let aggregationList = this.listConstant.AGGREGATION;\n\n        this.totalAggregationCount = aggregationList.length;\n        aggregationList.forEach(aggregation => this.allAggregationIDs.push(aggregation['value']));\n    }\n\n    ngAfterViewInit() {\n        this.emitFilter.emit();\n    }\n\n    selectAllAggregation() {\n        if (!this.aggregationFC.value.includes(-1)) {\n            this.aggregationFC.reset([]);\n            return;\n        }\n        this.aggregationFC.setValue([-1, ...this.allAggregationIDs]);\n        this.emitFilter.emit();\n    }\n\n    selectedAggregation() {\n        const selected = this.aggregationFC.value;\n\n        if (selected.includes(-1)) {\n            selected.shift();\n            this.aggregationFC.patchValue(selected);\n        } else if (this.aggregationFC.value.length == this.totalAggregationCount) {\n            this.allAggregationIDs.splice(0, 0, -1);\n            this.aggregationFC.patchValue(this.allAggregationIDs);\n        } else {\n            const filteredSelected = selected.filter(s => s != -1);\n            this.aggregationFC.patchValue(filteredSelected);\n        }\n\n        this.emitFilter.emit();\n    }\n\n}\n","<mat-form-field class=\"matFieldWidth100\" [appearance]=\"materialFormFieldAppearance.FORM_FIELD_APPEARANCE\">\n    <mat-label>Select aggregation</mat-label>\n    <mat-select [formControl]=\"aggregationFC\" multiple required>\n        <mat-option [value]=\"-1\" (click)=\"selectAllAggregation()\">\n            Select all\n        </mat-option>\n        <mat-option *ngFor=\"let aggregation of listConstant.AGGREGATION\" [value]=\"aggregation.value\"\n            (click)=\"selectedAggregation()\">\n            {{ aggregation.label }}\n        </mat-option>\n    </mat-select>\n    <mat-error *ngIf=\"aggregationFC.touched && aggregationFC.hasError('required')\">\n        {{ FormErrorEnum.REQUIRED }}\n    </mat-error>\n</mat-form-field>","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\n\nimport { MatInputModule } from '@angular/material/input';\nimport { MatFormFieldModule } from '@angular/material/form-field';\nimport { MatSelectModule } from '@angular/material/select';\n\nimport { NgxMatSelectSearchModule } from 'ngx-mat-select-search';\n\nimport { AggregationComponent } from './aggregation.component';\n\n@NgModule({\n    declarations: [\n        AggregationComponent\n    ],\n    imports: [\n        CommonModule,\n        FormsModule,\n        ReactiveFormsModule,\n        MatInputModule,\n        MatSelectModule,\n        MatFormFieldModule,\n        NgxMatSelectSearchModule\n    ],\n    exports: [\n        AggregationComponent\n    ]\n})\nexport class AggregationModule { }\n","import { Component, EventEmitter, OnInit, Output } from '@angular/core';\nimport { FormControl, Validators } from '@angular/forms';\n\nimport { LIST_CONSTANT } from '../../../constant/list.constant';\n\n// tsc-library\nimport { FormErrorEnum, MaterialFormFieldAppearance } from '@library/tsc-common';\n// /tsc-library/\n\n@Component({\n    selector: 'lib-aggregation-duration',\n    templateUrl: './aggregation-duration.component.html',\n    styles: [\n    ]\n})\n\nexport class AggregationDurationComponent implements OnInit {\n\n    listConstant = LIST_CONSTANT;\n    materialFormFieldAppearance = MaterialFormFieldAppearance;\n\n    FormErrorEnum = FormErrorEnum;\n\n    aggDurationFC: FormControl = new FormControl('min_15', [Validators.required]);\n\n    @Output()\n    emitFilter = new EventEmitter();\n\n    constructor() { }\n\n    ngOnInit(): void {\n    }\n\n    ngAfterViewInit() {\n        this.emitFilter.emit();\n    }\n\n    onChange(selectedAD) {\n        this.aggDurationFC.patchValue(selectedAD);\n        this.emitFilter.emit();\n    }\n\n}\n","<mat-form-field class=\"matFieldWidth100\" [appearance]=\"materialFormFieldAppearance.FORM_FIELD_APPEARANCE\">\n    <mat-label>Select aggregation duration</mat-label>\n    <mat-select (selectionChange)=\"onChange($event.value)\" [formControl]=\"aggDurationFC\" required>\n        <mat-option *ngFor=\"let duration of listConstant.AGGREGATION_DURATION\" [value]=\"duration.value\">\n            {{ duration.label }}\n        </mat-option>\n    </mat-select>\n    <mat-error *ngIf=\"aggDurationFC.touched && aggDurationFC.hasError('required')\">\n        {{ FormErrorEnum.REQUIRED }}\n    </mat-error>\n</mat-form-field>","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\n\nimport { MatInputModule } from '@angular/material/input';\nimport { MatFormFieldModule } from '@angular/material/form-field';\nimport { MatSelectModule } from '@angular/material/select';\n\nimport { NgxMatSelectSearchModule } from 'ngx-mat-select-search';\n\nimport { AggregationDurationComponent } from './aggregation-duration.component';\n\n@NgModule({\n    declarations: [\n        AggregationDurationComponent\n    ],\n    imports: [\n        CommonModule,\n        FormsModule,\n        ReactiveFormsModule,\n        MatInputModule,\n        MatSelectModule,\n        MatFormFieldModule,\n        NgxMatSelectSearchModule\n    ],\n    exports: [\n        AggregationDurationComponent\n    ]\n})\nexport class AggregationDurationModule { }\n","import { Component, EventEmitter, Input, OnInit, Output, SimpleChanges } from '@angular/core';\nimport { FormControl, Validators } from '@angular/forms';\n\nimport { Parameter, ParameterM } from '../../../model/parameter.model';\n\nimport { ParameterService } from '../../../service/parameter.service';\n\n// tsc-library\nimport { COMMON_CONSTANT, FormErrorEnum, MatSelectSearchService, MaterialFormFieldAppearance } from '@library/tsc-common';\nimport { StorageService } from '@library/storage-service';\n// /tsc-library/\n\n@Component({\n    selector: 'lib-param-metric',\n    templateUrl: './param-metric.component.html',\n    styles: [\n    ]\n})\nexport class ParamMetricComponent implements OnInit {\n    materialFormFieldAppearance = MaterialFormFieldAppearance\n    commonConstant = COMMON_CONSTANT;\n\n    FormErrorEnum = FormErrorEnum;\n\n    @Input()\n    deviceInp: any;\n\n    orgID: any;\n    parameterM = [new Parameter()];\n\n    allParameterID: any[] = [];\n    totalParameterCount: number = 0;\n\n    parameterFC: FormControl = new FormControl([], [Validators.required]);\n    paramSearchUtil: MatSelectSearchService = new MatSelectSearchService(['label']);\n\n    @Output()\n    emitFilter = new EventEmitter();\n\n    constructor(\n        private storageService: StorageService,\n        private parameterService: ParameterService\n    ) { }\n\n    ngOnInit(): void {\n        this.orgID = this.storageService.getStorage('currentOrgID');\n    }\n\n    ngOnChanges(changes: SimpleChanges): void {\n        if (changes.deviceInp && this.deviceInp) {\n            this.getParameterByDeviceID(this.deviceInp);\n\n            this.parameterFC.reset([]);\n            this.emitFilter.emit();\n        }\n    }\n\n    async getParameterByDeviceID(selectedDevices) {\n        this.allParameterID = [];\n\n        let requestBody = {};\n        requestBody['deviceID'] = [selectedDevices];\n\n        this.parameterM = <ParameterM[]>await this.parameterService.getParameterByDeviceID(this.orgID, requestBody);\n\n        this.paramSearchUtil.entityArr = this.parameterM;\n        this.paramSearchUtil.createSubscription();\n\n        this.totalParameterCount = this.parameterM.length;\n        this.parameterM.forEach(parameter => this.allParameterID.push(parameter['paramMetric']));\n\n        this.emitFilter.emit();\n    }\n\n    selectAllParameters() {\n        if (!this.parameterFC.value.includes(-1)) {\n            this.parameterFC.reset([]);\n            return;\n        }\n        this.parameterFC.setValue([-1, ...this.allParameterID]);\n\n        this.emitFilter.emit();\n    }\n\n    selectedParameters() {\n        const selected = this.parameterFC.value;\n\n        if (selected.includes(-1)) {\n            selected.shift();\n            this.parameterFC.patchValue(selected);\n        } else if (this.parameterFC.value.length == this.totalParameterCount) {\n            this.allParameterID.splice(0, 0, -1);\n            this.parameterFC.patchValue(this.allParameterID);\n        } else {\n            const filteredSelected = selected.filter(s => s != -1);\n            this.parameterFC.patchValue(filteredSelected);\n        }\n\n        this.emitFilter.emit();\n    }\n\n}\n","<mat-form-field class=\"matFieldWidth100\" [appearance]=\"materialFormFieldAppearance.FORM_FIELD_APPEARANCE\">\n    <mat-label>Select parameter</mat-label>\n\n    <mat-select [formControl]=\"parameterFC\" multiple required>\n        <ng-container *ngIf=\"parameterM && parameterM.length > 0 && parameterM[0]['id']; else noDataOption\">\n            <ngx-mat-select-search [formControl]=\"paramSearchUtil.filterFC\" placeholderLabel=\"Search by name\"\n                noEntriesFoundLabel=\"No matching name found.\">\n            </ngx-mat-select-search>\n            <mat-option [value]=\"-1\" (click)=\"selectAllParameters()\" [hidden]=\"paramSearchUtil.filterFC.value\">\n                Select all\n            </mat-option>\n            <mat-option *ngFor=\"let parameter of paramSearchUtil.filteredEntities | async\" [value]=\"parameter.paramMetric\"\n                (click)=\"selectedParameters()\">\n                {{ parameter.label }}\n            </mat-option>\n        </ng-container>\n        <ng-template #noDataOption>\n            <mat-option disabled>\n                {{ commonConstant.NO_DATA_FOUND }}\n            </mat-option>\n        </ng-template>\n    </mat-select>\n\n    <mat-error *ngIf=\"!deviceInp\">\n        Please select device first\n    </mat-error>\n    <mat-error *ngIf=\"parameterFC.touched && parameterFC.hasError('required') && deviceInp\">\n        {{ FormErrorEnum.REQUIRED }}\n    </mat-error>\n</mat-form-field>","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\n\nimport { MatInputModule } from '@angular/material/input';\nimport { MatFormFieldModule } from '@angular/material/form-field';\nimport { MatSelectModule } from '@angular/material/select';\n\nimport { NgxMatSelectSearchModule } from 'ngx-mat-select-search';\n\nimport { ParamMetricComponent } from './param-metric.component';\n\n@NgModule({\n    declarations: [\n        ParamMetricComponent\n    ],\n    imports: [\n        CommonModule,\n        FormsModule,\n        ReactiveFormsModule,\n        MatInputModule,\n        MatSelectModule,\n        MatFormFieldModule,\n        NgxMatSelectSearchModule\n    ],\n    exports: [\n        ParamMetricComponent\n    ]\n})\nexport class ParamMetricModule { }\n","import { Component, EventEmitter, OnInit, Output } from '@angular/core';\nimport { FormControl, Validators } from '@angular/forms';\n\nimport { Parameter, ParameterM } from '../../../model/parameter.model';\n\nimport { ParameterService } from '../../../service/parameter.service';\n\n// tsc-library\nimport { StorageService } from '@library/storage-service';\nimport { COMMON_CONSTANT, FormErrorEnum, MaterialFormFieldAppearance, MatSelectSearchService } from '@library/tsc-common';\n// /tsc-library/\n\n@Component({\n    selector: 'lib-parameter',\n    templateUrl: './parameter.component.html',\n    styles: [\n    ]\n})\nexport class ParameterComponent implements OnInit {\n\n    COMMON_CONSTANT = COMMON_CONSTANT;\n    MaterialFormFieldAppearance = MaterialFormFieldAppearance;\n\n    FormErrorEnum = FormErrorEnum;\n\n    @Output()\n    emitFilter = new EventEmitter();\n\n    orgID: any;\n\n    parameterM = [new Parameter()];\n\n    selectedParameterFC: FormControl = new FormControl('', [Validators.required]);\n\n    parameterSearchUtil: MatSelectSearchService = new MatSelectSearchService(['label']);\n\n    constructor(\n        private storageService: StorageService,\n        private parameterService: ParameterService\n    ) { }\n\n    ngOnInit(): void {\n        this.orgID = this.storageService.getStorage('currentOrgID');\n\n        this.getParameterByLayoutID();\n    }\n\n    async getParameterByLayoutID() {\n        this.parameterM = <ParameterM[]>await this.parameterService.getParameterByLayoutID(this.orgID);\n\n        this.parameterSearchUtil.entityArr = this.parameterM;\n        this.parameterSearchUtil.createSubscription();\n    }\n\n    parameterChange(selectedParameter) {\n        this.selectedParameterFC.patchValue(selectedParameter);\n        this.emitFilter.emit();\n    }\n\n}\n","<div class=\"row\">\n    <mat-form-field class=\"matFieldWidth100\" [appearance]=\"MaterialFormFieldAppearance.FORM_FIELD_APPEARANCE\">\n        <mat-label>Select parameter</mat-label>\n        <mat-select (selectionChange)=\"parameterChange($event.value)\" [formControl]=\"selectedParameterFC\" required>\n            <ng-container *ngIf=\"parameterM && parameterM.length > 0 && parameterM[0]['id']; else noDataFound\">\n                <mat-option>\n                    <ngx-mat-select-search [formControl]=\"parameterSearchUtil.filterFC\"\n                        placeholderLabel=\"Search by name\" noEntriesFoundLabel=\"No matching name found.\">\n                    </ngx-mat-select-search>\n                </mat-option>\n                <mat-option *ngFor=\"let parameter of parameterSearchUtil.filteredEntities | async\" [value]=\"parameter.id\">\n                    {{ parameter.label }}\n                </mat-option>\n            </ng-container>\n            <ng-template #noDataFound>\n                <mat-option disabled>\n                    {{ COMMON_CONSTANT.NO_DATA_FOUND }}\n                </mat-option>\n            </ng-template>\n        </mat-select>\n        <mat-error *ngIf=\"selectedParameterFC.hasError('required')\">\n            {{ FormErrorEnum.REQUIRED }}\n        </mat-error>\n    </mat-form-field>\n</div>","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\n\nimport { MatInputModule } from '@angular/material/input';\nimport { MatSelectModule } from '@angular/material/select';\nimport { MatFormFieldModule } from '@angular/material/form-field';\nimport { NgxMatSelectSearchModule } from 'ngx-mat-select-search';\n\nimport { ParameterComponent } from './parameter.component';\n\n@NgModule({\n    declarations: [\n        ParameterComponent\n    ],\n    imports: [\n        CommonModule,\n        FormsModule,\n        ReactiveFormsModule,\n        MatInputModule,\n        MatSelectModule,\n        MatFormFieldModule,\n        NgxMatSelectSearchModule\n    ],\n    exports: [\n        ParameterComponent\n    ]\n})\n\nexport class ParameterModule { }\n","export enum DropdownTypeEnum {\n    SINGLE_DROPDOWN = 'SINGLE',\n    MULTIPLE_DROPDOWN = 'MULTIPLE',\n}","import { Inject, Injectable } from '@angular/core';\nimport { HttpClient, HttpParams } from '@angular/common/http';\n\nimport { Observable } from 'rxjs';\n\nimport { StatusInfoM, DeviceM, DeviceMappingM } from '../model/device.model';\n\n// tsc-library\nimport { PageM } from '@library/tsc-common';\n// /tsc-library/\n\n@Injectable({\n    providedIn: 'root'\n})\n\nexport class DeviceController {\n\n    constructor(\n        private http: HttpClient,\n        @Inject('environment') private environment: any\n    ) { }\n\n    getDeviceStatusInfo(orgID): Observable<StatusInfoM> {\n        return this.http.get<StatusInfoM>(`${this.environment.TSC_COMMON_API_URL}organizations/${orgID}/devices/status`);\n    }\n\n    getDevicesByEntityID(orgID, requestBody): Observable<DeviceM[]> {\n        return this.http.post<DeviceM[]>(`${this.environment.TSC_COMMON_API_URL}organizations/${orgID}/entities/devices`, requestBody);\n    }\n\n    getUnMappedDevices(pageNo: number, pageSize: number, sortBy: string, orderBy: string, search: any[], orgID: number, layoutID: number, entityID: number): Observable<PageM<DeviceMappingM>> {\n        let params = new HttpParams();\n\n        params = params.append('pageNo', pageNo);\n        params = params.append('pageSize', pageSize);\n        params = params.append('sortBy', sortBy);\n        params = params.append('orderBy', orderBy);\n\n        search.forEach(search => params = params.append('search', search));\n        return this.http.get<PageM<DeviceMappingM>>(`${this.environment.TSC_COMMON_API_URL}organizations/${orgID}/layouts/${layoutID}/entities/${entityID}/devices/unmapped`, { params: params });\n    }\n\n    getMappedDevices(pageNo: number, pageSize: number, search: any[], orgID: number, layoutID: number, entityID: number): Observable<PageM<DeviceMappingM>> {\n        let params = new HttpParams();\n\n        params = params.append('pageNo', pageNo);\n        params = params.append('pageSize', pageSize);\n\n        search.forEach(search => params = params.append('search', search));\n        return this.http.get<PageM<DeviceMappingM>>(`${this.environment.TSC_COMMON_API_URL}organizations/${orgID}/layouts/${layoutID}/entities/${entityID}/devices/mapped`, { params: params });\n    }\n\n    saveDeviceMapping(orgID, layoutID, entityID, devices) {\n        return this.http.patch(`${this.environment.TSC_COMMON_API_URL}organizations/${orgID}/layouts/${layoutID}/entities/${entityID}/map-devices`, devices);\n    }\n\n    deleteDeviceMapping(orgID, layoutID, entityID, deviceID) {\n        let params = new HttpParams();\n        params = params.append('deviceID', deviceID);\n\n        return this.http.delete(`${this.environment.TSC_COMMON_API_URL}organizations/${orgID}/layouts/${layoutID}/entities/${entityID}/devices`, { params: params });\n    }\n\n    updateSourceLoad(orgID, layoutID, entityID, deviceID, requestBody) {\n        return this.http.patch(`${this.environment.TSC_COMMON_API_URL}organizations/${orgID}/layouts/${layoutID}/entities/${entityID}/devices/${deviceID}/source-load`, requestBody);\n    }\n\n}\n","import { Injectable } from '@angular/core';\n\nimport { Device, DeviceM } from '../model/device.model';\n\nimport { DeviceController } from '../controller/device.controller';\n\n@Injectable({\n    providedIn: 'root'\n})\n\nexport class DeviceService {\n\n    constructor(\n        private deviceController: DeviceController\n    ) { }\n\n    async getDevicesByEntityID(orgID, requestBody): Promise<DeviceM[]> {\n        let deviceM: DeviceM[];\n        try {\n            deviceM = await this.deviceController.getDevicesByEntityID(orgID, requestBody).toPromise();\n\n            if (deviceM) {\n                return deviceM;\n            } else {\n                return [new Device()];\n            }\n        } catch (error) {\n            console.error('Error -', error);\n            return [new Device()];\n        }\n    }\n\n}","import { Component, EventEmitter, Input, OnInit, Output, SimpleChanges } from '@angular/core';\nimport { FormControl, Validators } from '@angular/forms';\n\nimport { DropdownTypeEnum } from '../../../enum/dropdown.enum';\nimport { Device, DeviceM } from '../../../model/device.model';\n\nimport { DeviceService } from '../../../service/device.service';\n\n// tsc-library\nimport { StorageService } from '@library/storage-service';\nimport { COMMON_CONSTANT, FormErrorEnum, MaterialFormFieldAppearance, MatSelectSearchService } from '@library/tsc-common';\n// /tsc-library/\n\n@Component({\n    selector: 'lib-device',\n    templateUrl: './device.component.html',\n    styles: [\n    ]\n})\n\nexport class DeviceComponent implements OnInit {\n\n    @Input()\n    dropdownTypeInp: DropdownTypeEnum;\n\n    @Input()\n    entityInp: any;\n\n    commonConstant = COMMON_CONSTANT;\n    materialFormFieldAppearance = MaterialFormFieldAppearance;\n    dropdownTypeEnum = DropdownTypeEnum;\n    FormErrorEnum = FormErrorEnum;\n\n    deviceM = [new Device()];\n\n    orgID: any;\n    dropdownType: any;\n    allDeviceID: any[] = [];\n    totalDeviceCount: number = 0;\n\n    deviceFC: FormControl = new FormControl('', [Validators.required]);\n    multipleDeviceFC: FormControl = new FormControl([], [Validators.required]);\n\n    deviceSearchUtil: MatSelectSearchService = new MatSelectSearchService(['name']);\n\n    @Output()\n    emitFilter = new EventEmitter();\n\n    constructor(\n        private storageService: StorageService,\n        private deviceService: DeviceService\n    ) { }\n\n    ngOnInit(): void {\n        this.orgID = this.storageService.getStorage('currentOrgID');\n    }\n\n    ngOnChanges(changes: SimpleChanges): void {\n        if (changes.dropdownTypeInp && this.dropdownTypeInp) {\n            this.dropdownType = this.dropdownTypeInp;\n        }\n\n        if (this.entityInp && this.entityInp?.length != 0) {\n            if (changes.entityInp) {\n                this.getDevicesByEntityID(this.entityInp);\n\n                this.deviceFC.patchValue(null);\n                this.emitFilter.emit();\n            }\n        }\n    }\n\n    async getDevicesByEntityID(entityID) {\n        const requestBody = { 'entityID': this.dropdownTypeInp == 'SINGLE' ? [entityID] : entityID };\n\n        this.deviceM = <DeviceM[]>await this.deviceService.getDevicesByEntityID(this.orgID, requestBody);\n\n        this.deviceSearchUtil.entityArr = this.deviceM;\n        this.deviceSearchUtil.createSubscription();\n\n        this.totalDeviceCount = this.deviceM.length;\n        this.deviceM.forEach(device => this.allDeviceID.push(device['id']));\n        this.emitFilter.emit();\n    }\n\n    onChange(selectedDevice) {\n        this.deviceFC.patchValue(selectedDevice);\n        this.emitFilter.emit();\n    }\n\n    selectAllDevices() {\n        if (!this.multipleDeviceFC.value.includes(-1)) {\n            this.multipleDeviceFC.reset([]);\n            return;\n        }\n        this.multipleDeviceFC.setValue([-1, ...this.allDeviceID]);\n        this.emitFilter.emit();\n    }\n\n    selectedDevices() {\n        const selected = this.multipleDeviceFC.value;\n\n        if (selected.includes(-1)) {\n            selected.shift();\n            this.multipleDeviceFC.patchValue(selected);\n        } else if (this.multipleDeviceFC.value.length == this.totalDeviceCount) {\n            this.allDeviceID.splice(0, 0, -1);\n            this.multipleDeviceFC.patchValue(this.allDeviceID);\n        } else {\n            const filteredSelected = selected.filter(s => s != -1);\n            this.multipleDeviceFC.patchValue(filteredSelected);\n        }\n\n        this.emitFilter.emit();\n    }\n\n}","<mat-form-field *ngIf=\"dropdownType == dropdownTypeEnum.SINGLE_DROPDOWN\" class=\"matFieldWidth100\"\n    [appearance]=\"materialFormFieldAppearance.FORM_FIELD_APPEARANCE\">\n    <mat-label>Select device</mat-label>\n    <mat-select (selectionChange)=\"onChange($event.value)\" [formControl]=\"deviceFC\" required>\n        <ng-container *ngIf=\"deviceM && deviceM.length > 0 && deviceM[0]['id']; else noDeviceFound\">\n            <mat-option>\n                <ngx-mat-select-search [formControl]=\"deviceSearchUtil.filterFC\" placeholderLabel=\"Search by name\"\n                    noEntriesFoundLabel=\"No matching name found.\">\n                </ngx-mat-select-search>\n            </mat-option>\n            <mat-option *ngFor=\"let device of deviceSearchUtil.filteredEntities | async\" [value]=\"device.id\">\n                {{ device.name }}\n            </mat-option>\n        </ng-container>\n        <ng-template #noDeviceFound>\n            <mat-option disabled>\n                {{ commonConstant.NO_DATA_FOUND }}\n            </mat-option>\n        </ng-template>\n    </mat-select>\n    <mat-error *ngIf=\"!entityInp\">\n        Please select entity first\n    </mat-error>\n    <mat-error *ngIf=\"deviceFC.touched && deviceFC.hasError('required') && entityInp\">\n        {{ FormErrorEnum.REQUIRED }}\n    </mat-error>\n</mat-form-field>\n\n<mat-form-field *ngIf=\"dropdownType == dropdownTypeEnum.MULTIPLE_DROPDOWN\" class=\"matFieldWidth100\"\n    [appearance]=\"materialFormFieldAppearance.FORM_FIELD_APPEARANCE\">\n    <mat-label>Select device</mat-label>\n\n    <mat-select [formControl]=\"multipleDeviceFC\" multiple required>\n        <ng-container *ngIf=\"deviceM && deviceM.length > 0 && deviceM[0]['id']; else noDataOption\">\n            <ngx-mat-select-search [formControl]=\"deviceSearchUtil.filterFC\" placeholderLabel=\"Search by name\"\n                noEntriesFoundLabel=\"No matching name found.\">\n            </ngx-mat-select-search>\n            <mat-option [value]=\"-1\" (click)=\"selectAllDevices()\" [hidden]=\"deviceSearchUtil.filterFC.value\">\n                Select all\n            </mat-option>\n            <mat-option *ngFor=\"let device of deviceSearchUtil.filteredEntities | async\" [value]=\"device.id\"\n                (click)=\"selectedDevices()\">\n                {{ device.name }}\n            </mat-option>\n        </ng-container>\n        <ng-template #noDataOption>\n            <mat-option disabled>\n                {{ commonConstant.NO_DATA_FOUND }}\n            </mat-option>\n        </ng-template>\n    </mat-select>\n\n    <mat-error *ngIf=\"!entityInp\">\n        Please select entity first\n    </mat-error>\n    <mat-error *ngIf=\"multipleDeviceFC.touched && multipleDeviceFC.hasError('required') && entityInp\">\n        {{ FormErrorEnum.REQUIRED }}\n    </mat-error>\n</mat-form-field>","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\n\nimport { MatInputModule } from '@angular/material/input';\nimport { MatSelectModule } from '@angular/material/select';\nimport { MatFormFieldModule } from '@angular/material/form-field';\n\nimport { NgxMatSelectSearchModule } from 'ngx-mat-select-search';\n\nimport { DeviceComponent } from './device.component';\n\n@NgModule({\n    declarations: [\n        DeviceComponent\n    ],\n    imports: [\n        CommonModule,\n        FormsModule,\n        ReactiveFormsModule,\n        MatInputModule,\n        MatSelectModule,\n        MatFormFieldModule,\n        NgxMatSelectSearchModule\n    ],\n    exports: [\n        DeviceComponent\n    ]\n})\n\nexport class DeviceModule { }\n","import { Inject, Injectable } from '@angular/core';\nimport { HttpClient, HttpHeaders, HttpParams } from '@angular/common/http';\n\nimport { Observable } from 'rxjs';\n\nimport { EntityWithChildrenM, EntityM, ParameterEntityM, EntityTypeM, DashboardEntitiesI } from '../model/entity.model';\nimport { StatusInfoM } from '../model/device.model';\n\n@Injectable({\n    providedIn: 'root'\n})\n\nexport class EntityController {\n\n    constructor(\n        private http: HttpClient,\n        @Inject('environment') private environment: any\n    ) { }\n\n    getEntitiesHavingDevicesByOrgID(orgID): Observable<EntityM[]> {\n        return this.http.get<EntityM[]>(`${this.environment.TSC_COMMON_API_URL}organizations/${orgID}/entities-having-devices`);\n    }\n\n    getEntityByID(orgID, layoutID, entityID): Observable<EntityM> {\n        return this.http.get<EntityM>(`${this.environment.TSC_COMMON_API_URL}organizations/${orgID}/layouts/${layoutID}/entities/${entityID}`);\n    }\n\n    getConsumptionEntities(orgID): Observable<EntityWithChildrenM> {\n        return this.http.get<EntityWithChildrenM>(`${this.environment.TSC_COMMON_API_URL}organizations/${orgID}/layouts/consumption-entities`);\n    }\n\n    getEntitiesByParameterID(orgID, parameterID): Observable<ParameterEntityM[]> {\n        return this.http.get<ParameterEntityM[]>(`${this.environment.TSC_COMMON_API_URL}organizations/${orgID}/layouts/parameters/${parameterID}/entities`);\n    }\n\n    getEntitiesByLayoutID(orgID, layoutID): Observable<ParameterEntityM[]> {\n        return this.http.get<ParameterEntityM[]>(`${this.environment.TSC_COMMON_API_URL}organizations/${orgID}/layouts/${layoutID}/entities`);\n    }\n\n    getEntitiesWithDevicesByLayoutID(orgID, layoutID, requestBody, skipLoader): Observable<ParameterEntityM> {\n        let headers = new HttpHeaders().set('skipLoader', skipLoader);\n\n        return this.http.post<ParameterEntityM>(`${this.environment.TSC_COMMON_API_URL}organizations/${orgID}/layouts/${layoutID}/entity-device`, requestBody, { headers: headers });\n    }\n\n    getEntitiesByEntityType(orgID, requestBody): Observable<EntityWithChildrenM> {\n        return this.http.post<EntityWithChildrenM>(`${this.environment.TSC_COMMON_API_URL}organizations/${orgID}/entity-type/entities`, requestBody);\n    }\n\n    getEntitiesByParamMetric(orgID, paramName): Observable<EntityM[]> {\n        let params = new HttpParams();\n        params = params.append('paramName', paramName);\n\n        return this.http.get<EntityM[]>(`${this.environment.TSC_COMMON_API_URL}organizations/${orgID}/parameter-entities`, { params: params });\n    }\n\n    getEntityLevelConsumption(orgID, requestBody) {\n        return this.http.post(`${this.environment.TSC_COMMON_API_URL}organizations/${orgID}/entities/load-consumption`, requestBody);\n    }\n\n    getEntityTypeByLayoutID(orgID, skipLoader): Observable<EntityTypeM[]> {\n        let headers = new HttpHeaders().set('skipLoader', skipLoader);\n\n        return this.http.get<EntityTypeM[]>(`${this.environment.TSC_COMMON_API_URL}organizations/${orgID}/entities/type`, { headers: headers });\n    }\n\n    createEntity(orgID, layoutID, entityID, entity) {\n        return this.http.post(`${this.environment.TSC_COMMON_API_URL}organizations/${orgID}/layouts/${layoutID}/entities/${entityID}/add-child`, entity);\n    }\n\n    updateEntity(orgID, layoutID, entityID, entity) {\n        return this.http.patch(`${this.environment.TSC_COMMON_API_URL}organizations/${orgID}/layouts/${layoutID}/entities/${entityID}`, entity);\n    }\n\n    deleteEntity(orgID, layoutID, entityID) {\n        return this.http.delete(`${this.environment.TSC_COMMON_API_URL}organizations/${orgID}/layouts/${layoutID}/entities/${entityID}`);\n    }\n\n    getEntityStatusInfo(orgID): Observable<StatusInfoM> {\n        return this.http.get<StatusInfoM>(`${this.environment.TSC_COMMON_API_URL}organizations/${orgID}/entities/status`);\n    }\n\n    getDashboardEntities(entityTypeFilterArr, orgID): Observable<DashboardEntitiesI[]> {\n        let params = new HttpParams();\n        entityTypeFilterArr.forEach(filter => params = params.append('filter', filter));\n\n        return this.http.get<DashboardEntitiesI[]>(`${this.environment.TSC_COMMON_API_URL}organizations/${orgID}/layouts/dashboard/entities`, { params: params });\n    }\n}\n","import { Injectable } from '@angular/core';\n\nimport { Entity, EntityM, ParameterEntity, ParameterEntityM, EntityType, EntityTypeM } from '../model/entity.model';\n\nimport { EntityController } from '../controller/entity.controller';\n\n@Injectable({\n    providedIn: 'root'\n})\n\nexport class EntityService {\n\n    constructor(\n        private entityController: EntityController\n    ) { }\n\n    async getEntitiesHavingDevicesByOrgID(orgID): Promise<EntityM[]> {\n        let entityM: EntityM[];\n        try {\n            entityM = await this.entityController.getEntitiesHavingDevicesByOrgID(orgID).toPromise();\n\n            if (entityM) {\n                return entityM;\n            } else {\n                return [new Entity()];\n            }\n        } catch (error) {\n            console.error('Error -', error);\n            return [new Entity()];\n        }\n    }\n\n    async getEntitiesByParameterID(orgID, parameterID): Promise<ParameterEntityM[]> {\n        let entityTreeM: ParameterEntityM[];\n        try {\n            entityTreeM = await this.entityController.getEntitiesByParameterID(orgID, parameterID).toPromise();\n\n            if (entityTreeM) {\n                return entityTreeM;\n            } else {\n                return [new ParameterEntity()];\n            }\n        } catch (error) {\n            console.error('Error -', error);\n            return [new ParameterEntity()];\n        }\n    }\n\n    async getEntityTypeByLayoutID(orgID, skipLoader): Promise<EntityTypeM[]> {\n        let entityTypeM: EntityTypeM[];\n        try {\n            entityTypeM = await this.entityController.getEntityTypeByLayoutID(orgID, skipLoader).toPromise();\n\n            if (entityTypeM) {\n                return entityTypeM;\n            } else {\n                return [new EntityType()];\n            }\n        } catch (error) {\n            console.error('Error -', error);\n            return [new EntityType()];\n        }\n    }\n\n    async getEntitiesWithDevicesByLayoutID(orgID, layoutID, requestBody, skipLoader): Promise<ParameterEntityM> {\n        let entityDeviceM: ParameterEntityM;\n        try {\n            entityDeviceM = await this.entityController.getEntitiesWithDevicesByLayoutID(orgID, layoutID, requestBody, skipLoader).toPromise();\n\n            if (entityDeviceM) {\n                return entityDeviceM;\n            } else {\n                return new ParameterEntity();\n            }\n        } catch (error) {\n            console.error('Error -', error);\n            return new ParameterEntity();\n        }\n    }\n\n    async getEntityByID(orgID, layoutID, entityID): Promise<EntityM> {\n        let layoutM: EntityM;\n        try {\n            layoutM = await this.entityController.getEntityByID(orgID, layoutID, entityID).toPromise();\n\n            if (layoutM) {\n                return layoutM;\n            } else {\n                return new Entity();\n            }\n        } catch (error) {\n            console.error('Error -', error);\n            return new Entity();\n        }\n    }\n\n    async getEntitiesByParamMetric(orgID, paramName): Promise<EntityM[]> {\n        let entityM: EntityM[];\n        try {\n            entityM = await this.entityController.getEntitiesByParamMetric(orgID, paramName).toPromise();\n\n            if (entityM) {\n                return entityM;\n            } else {\n                return [new Entity()];\n            }\n        } catch (error) {\n            console.error('Error -', error);\n            return [new Entity()];\n        }\n    }\n\n}","import { Component, EventEmitter, Input, OnInit, Output, SimpleChanges } from '@angular/core';\nimport { FormControl, Validators } from '@angular/forms';\n\nimport { Entity, EntityM } from '../../../model/entity.model';\n\nimport { EntityService } from '../../../service/entity.service';\n\n// tsc-library\nimport { COMMON_CONSTANT, FormErrorEnum, MatSelectSearchService, MaterialFormFieldAppearance } from '@library/tsc-common';\nimport { StorageService } from '@library/storage-service';\nimport { DropdownTypeEnum } from '../../../enum/dropdown.enum';\n// /tsc-library/\n\n@Component({\n    selector: 'lib-entity',\n    templateUrl: './entity.component.html',\n    styles: [\n    ]\n})\n\nexport class EntityComponent implements OnInit {\n    @Input()\n    dropdownTypeInp: DropdownTypeEnum;\n\n    commonConstant = COMMON_CONSTANT;\n\n    materialFormFieldAppearance = MaterialFormFieldAppearance\n    dropdownTypeEnum = DropdownTypeEnum;\n    FormErrorEnum = FormErrorEnum;\n\n    orgID: any;\n    entityM = [new Entity()];\n    dropdownType: string = this.dropdownTypeEnum.SINGLE_DROPDOWN;\n    allEntityID: any[] = [];\n    totalEntityCount: number = 0;\n\n    entityFC: FormControl = new FormControl('', [Validators.required]);\n    multipleEntityFC: FormControl = new FormControl([], [Validators.required]);\n\n    entitySearchUtil: MatSelectSearchService = new MatSelectSearchService(['name']);\n\n    @Output()\n    emitFilter = new EventEmitter();\n\n    constructor(\n        private storageService: StorageService,\n        private entityService: EntityService\n    ) { }\n\n    ngOnInit(): void {\n        this.orgID = this.storageService.getStorage('currentOrgID');\n\n        this.getEntitiesHavingDevicesByOrgID();\n    }\n\n    ngOnChanges(changes: SimpleChanges): void {\n        if (changes.dropdownTypeInp && this.dropdownTypeInp) {\n            this.dropdownType = this.dropdownTypeInp;\n        }\n    }\n\n    async getEntitiesHavingDevicesByOrgID() {\n        this.entityM = <EntityM[]>await this.entityService.getEntitiesHavingDevicesByOrgID(this.orgID);\n\n        this.entitySearchUtil.entityArr = this.entityM;\n        this.entitySearchUtil.createSubscription();\n\n        this.totalEntityCount = this.entityM.length;\n        this.entityM.forEach(entity => this.allEntityID.push(entity['id']));\n\n        if (this.entityM.length > 0) {\n            this.entityFC.patchValue(this.entityM[0]['id']);\n            this.emitFilter.emit();\n        }\n    }\n\n    onChange(selectedEntity) {\n        this.entityFC.patchValue(selectedEntity);\n        this.emitFilter.emit();\n    }\n\n    selectAllEntities() {\n        if (!this.multipleEntityFC.value.includes(-1)) {\n            this.multipleEntityFC.reset([]);\n            return;\n        }\n        this.multipleEntityFC.setValue([-1, ...this.allEntityID]);\n        this.emitFilter.emit();\n    }\n\n    selectedEntities() {\n        const selected = this.multipleEntityFC.value;\n\n        if (selected.includes(-1)) {\n            selected.shift();\n            this.multipleEntityFC.patchValue(selected);\n        } else if (this.multipleEntityFC.value.length == this.totalEntityCount) {\n            this.allEntityID.splice(0, 0, -1);\n            this.multipleEntityFC.patchValue(this.allEntityID);\n        } else {\n            const filteredSelected = selected.filter(s => s != -1);\n            this.multipleEntityFC.patchValue(filteredSelected);\n        }\n\n        this.emitFilter.emit();\n    }\n\n}\n","<mat-form-field *ngIf=\"dropdownType == dropdownTypeEnum.SINGLE_DROPDOWN\" class=\"matFieldWidth100\"\n    [appearance]=\"materialFormFieldAppearance.FORM_FIELD_APPEARANCE\">\n    <mat-label>Select entity</mat-label>\n    <mat-select (selectionChange)=\"onChange($event.value)\" [formControl]=\"entityFC\" required>\n        <ng-container *ngIf=\"entityM && entityM.length > 0 && entityM[0]['id']; else noDataFound\">\n            <mat-option>\n                <ngx-mat-select-search [formControl]=\"entitySearchUtil.filterFC\" placeholderLabel=\"Search by name\"\n                    noEntriesFoundLabel=\"No matching name found.\">\n                </ngx-mat-select-search>\n            </mat-option>\n            <mat-option *ngFor=\"let entity of entitySearchUtil.filteredEntities | async\" [value]=\"entity.id\">\n                {{ entity.name }}\n            </mat-option>\n        </ng-container>\n        <ng-template #noDataFound>\n            <mat-option disabled>\n                {{ commonConstant.NO_DATA_FOUND }}\n            </mat-option>\n        </ng-template>\n    </mat-select>\n    <mat-error *ngIf=\"entityFC.touched && entityFC.hasError('required')\">\n        {{ FormErrorEnum.REQUIRED }}\n    </mat-error>\n</mat-form-field>\n\n<mat-form-field *ngIf=\"dropdownType == dropdownTypeEnum.MULTIPLE_DROPDOWN\" class=\"matFieldWidth100\"\n    [appearance]=\"materialFormFieldAppearance.FORM_FIELD_APPEARANCE\">\n    <mat-label>Select entity</mat-label>\n\n    <mat-select [formControl]=\"multipleEntityFC\" multiple required>\n        <ng-container *ngIf=\"entityM && entityM.length > 0 && entityM[0]['id']; else noDataOption\">\n            <ngx-mat-select-search [formControl]=\"entitySearchUtil.filterFC\" placeholderLabel=\"Search by name\"\n                noEntriesFoundLabel=\"No matching name found.\">\n            </ngx-mat-select-search>\n            <mat-option [value]=\"-1\" (click)=\"selectAllEntities()\" [hidden]=\"entitySearchUtil.filterFC.value\">\n                Select all\n            </mat-option>\n            <mat-option *ngFor=\"let entity of entitySearchUtil.filteredEntities | async\" [value]=\"entity.id\"\n                (click)=\"selectedEntities()\">\n                {{ entity.name }}\n            </mat-option>\n        </ng-container>\n        <ng-template #noDataOption>\n            <mat-option disabled>\n                {{ commonConstant.NO_DATA_FOUND }}\n            </mat-option>\n        </ng-template>\n    </mat-select>\n    <mat-error *ngIf=\"multipleEntityFC.hasError('required')\">\n        {{ FormErrorEnum.REQUIRED }}\n    </mat-error>\n</mat-form-field>","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\n\nimport { MatInputModule } from '@angular/material/input';\nimport { MatFormFieldModule } from '@angular/material/form-field';\nimport { MatSelectModule } from '@angular/material/select';\n\nimport { NgxMatSelectSearchModule } from 'ngx-mat-select-search';\n\nimport { EntityComponent } from './entity.component';\n\n@NgModule({\n    declarations: [\n        EntityComponent\n    ],\n    imports: [\n        CommonModule,\n        FormsModule,\n        ReactiveFormsModule,\n        MatInputModule,\n        MatSelectModule,\n        MatFormFieldModule,\n        NgxMatSelectSearchModule\n    ],\n    exports: [\n        EntityComponent\n    ]\n})\nexport class EntityModule { }\n","import { Component, EventEmitter, OnInit, Output } from '@angular/core';\nimport { FormControl, Validators } from '@angular/forms';\n\nimport { EntityType, EntityTypeM } from '../../../model/entity.model';\n\nimport { EntityService } from '../../../service/entity.service';\n\n// tsc-library\nimport { StorageService } from '@library/storage-service';\nimport { COMMON_CONSTANT, FormErrorEnum, MatSelectSearchService, MaterialFormFieldAppearance } from '@library/tsc-common';\n// /tsc-library/\n\n@Component({\n    selector: 'lib-entity-type',\n    templateUrl: './entity-type.component.html',\n    styles: [\n    ]\n})\nexport class EntityTypeComponent implements OnInit {\n\n    materialFormFieldAppearance = MaterialFormFieldAppearance;\n    commonConstant = COMMON_CONSTANT;\n\n    FormErrorEnum = FormErrorEnum;\n\n    orgID: any;\n    layoutID: any;\n    entityTypeM = [new EntityType()];\n    entityTypeFC: FormControl = new FormControl('', Validators.required);\n\n    entityTypeSearchUtil: MatSelectSearchService = new MatSelectSearchService(['type']);\n\n    @Output()\n    emitFilter = new EventEmitter();\n\n    constructor(\n        private storageService: StorageService,\n        private entityService: EntityService\n    ) { }\n\n    ngOnInit(): void {\n        this.orgID = this.storageService.getStorage('currentOrgID');\n        this.layoutID = this.storageService.getStorage('layoutID');\n\n        this.getEntityTypeByLayoutID();\n    }\n\n    async getEntityTypeByLayoutID() {\n        this.entityTypeM = <EntityTypeM[]>await this.entityService.getEntityTypeByLayoutID(this.orgID, 'NO');\n\n        this.entityTypeSearchUtil.entityArr = this.entityTypeM;\n        this.entityTypeSearchUtil.createSubscription();\n\n        if (this.entityTypeM && this.entityTypeM.length > 0) {\n            const defaultEntityType = this.entityTypeM[0].type;\n\n            if (defaultEntityType) {\n                this.entityTypeFC.patchValue(defaultEntityType);\n                this.emitFilter.emit();\n            }\n        }\n    }\n\n    onChange(selectedType) {\n        this.entityTypeFC.patchValue(selectedType);\n        this.emitFilter.emit();\n    }\n}\n","<mat-form-field class=\"matFieldWidth100\" [appearance]=\"materialFormFieldAppearance.FORM_FIELD_APPEARANCE\">\n    <mat-label>Select entity type</mat-label>\n    <mat-select (selectionChange)=\"onChange($event.value)\" [formControl]=\"entityTypeFC\" required>\n        <ng-container *ngIf=\"entityTypeM && entityTypeM.length > 0 && entityTypeM?.[0]?.type; else noDataFound\">\n            <mat-option>\n                <ngx-mat-select-search [formControl]=\"entityTypeSearchUtil.filterFC\" placeholderLabel=\"Search by name\"\n                    noEntriesFoundLabel=\"No matching name found.\">\n                </ngx-mat-select-search>\n            </mat-option>\n            <mat-option *ngFor=\"let type of entityTypeSearchUtil.filteredEntities | async\" [value]=\"type.type\">\n                {{ type.type | titlecase }}\n            </mat-option>\n        </ng-container>\n        <ng-template #noDataFound>\n            <mat-option disabled>\n                {{ commonConstant.NO_DATA_FOUND }}\n            </mat-option>\n        </ng-template>\n    </mat-select>\n    <mat-error *ngIf=\"entityTypeFC.touched && entityTypeFC.hasError('required')\">\n        {{ FormErrorEnum.REQUIRED }}\n    </mat-error>\n</mat-form-field>","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\n\nimport { MatInputModule } from '@angular/material/input';\nimport { MatFormFieldModule } from '@angular/material/form-field';\nimport { MatSelectModule } from '@angular/material/select';\n\nimport { NgxMatSelectSearchModule } from 'ngx-mat-select-search';\n\nimport { EntityTypeComponent } from './entity-type.component';\n\n@NgModule({\n    declarations: [\n        EntityTypeComponent\n    ],\n    imports: [\n        CommonModule,\n        FormsModule,\n        ReactiveFormsModule,\n        MatInputModule,\n        MatSelectModule,\n        MatFormFieldModule,\n        NgxMatSelectSearchModule\n    ],\n    exports: [\n        EntityTypeComponent\n    ]\n})\nexport class EntityTypeModule { }\n","import { Inject, Injectable } from '@angular/core';\nimport { HttpClient } from '@angular/common/http';\n\nimport { Observable } from 'rxjs';\n\nimport { UnitM } from '../model/unit.model';\n\n@Injectable({\n    providedIn: 'root'\n})\n\nexport class UnitController {\n\n    constructor(\n        private http: HttpClient,\n        @Inject('environment') private environment: any\n    ) { }\n\n    getUnitByParameterID(orgID, parameterID): Observable<UnitM[]> {\n        return this.http.get<UnitM[]>(`${this.environment.TSC_COMMON_API_URL}organizations/${orgID}/parameters/${parameterID}/unit-type`);\n    }\n}","import { Injectable } from '@angular/core';\n\nimport { Unit, UnitM } from '../model/unit.model';\n\nimport { UnitController } from '../controller/unit.controller';\n\n@Injectable({\n    providedIn: 'root'\n})\n\nexport class UnitService {\n\n    constructor(\n        private unitController: UnitController,\n    ) { }\n\n    async getUnitByParameterID(orgID, parameterID): Promise<UnitM[]> {\n        let unitM: UnitM[];\n        try {\n            unitM = await this.unitController.getUnitByParameterID(orgID, parameterID).toPromise();\n\n            if (unitM) {\n                return unitM;\n            } else {\n                return [new Unit()];\n            }\n        } catch (error) {\n            console.error('Error -', error);\n            return [new Unit()];\n        }\n    }\n}","import { Component, EventEmitter, Input, OnInit, Output, SimpleChanges } from '@angular/core';\nimport { FormControl, Validators } from '@angular/forms';\n\nimport { Unit, UnitM } from '../../../model/unit.model';\n\nimport { UnitService } from '../../../service/unit.service';\n\n// tsc-library\nimport { StorageService } from '@library/storage-service';\nimport { COMMON_CONSTANT, FormErrorEnum, MaterialFormFieldAppearance, MatSelectSearchService } from '@library/tsc-common';\n// /tsc-library/\n\n@Component({\n    selector: 'lib-unit',\n    templateUrl: './unit.component.html',\n    styles: [\n    ]\n})\n\nexport class UnitComponent implements OnInit {\n\n    @Input()\n    selectedParameterID: any;\n\n    COMMON_CONSTANT = COMMON_CONSTANT;\n    MaterialFormFieldAppearance = MaterialFormFieldAppearance;\n\n    FormErrorEnum = FormErrorEnum;\n\n    @Output()\n    emitFilter = new EventEmitter();\n\n    orgID: any;\n\n    unitM = [new Unit()];\n\n    selectedUnitFC: FormControl = new FormControl('', [Validators.required]);\n\n    unitSearchUtil: MatSelectSearchService = new MatSelectSearchService(['name']);\n\n    constructor(\n        private storageService: StorageService,\n        private unitService: UnitService\n    ) { }\n\n    ngOnInit(): void {\n        this.orgID = this.storageService.getStorage('currentOrgID');\n    }\n\n    ngOnChanges(changes: SimpleChanges): void {\n        if (this.selectedParameterID) {\n            if (changes.selectedParameterID) {\n                this.getUnitByParameterID(this.selectedParameterID);\n            }\n        }\n    }\n\n    async getUnitByParameterID(parameterID) {\n        this.unitM = <UnitM[]>await this.unitService.getUnitByParameterID(this.orgID, parameterID);\n\n        this.unitSearchUtil.entityArr = this.unitM;\n        this.unitSearchUtil.createSubscription();\n    }\n\n    unitChange(selectedUnit) {\n        this.selectedUnitFC.patchValue(selectedUnit);\n        this.emitFilter.emit();\n    }\n\n}","<div class=\"row\">\n    <mat-form-field class=\"matFieldWidth100\" [appearance]=\"MaterialFormFieldAppearance.FORM_FIELD_APPEARANCE\">\n        <mat-label>Select unit</mat-label>\n\n        <mat-select (selectionChange)=\"unitChange($event.value)\" [formControl]=\"selectedUnitFC\" required>\n            <ng-container *ngIf=\"unitM && unitM.length > 0 && unitM[0]['id']; else noDataFound\">\n                <mat-option>\n                    <ngx-mat-select-search [formControl]=\"unitSearchUtil.filterFC\" placeholderLabel=\"Search by name\"\n                        noEntriesFoundLabel=\"No matching name found.\">\n                    </ngx-mat-select-search>\n                </mat-option>\n                <mat-option *ngFor=\"let unit of unitSearchUtil.filteredEntities | async\" [value]=\"unit.id\">\n                    {{ unit.name }}\n                </mat-option>\n            </ng-container>\n            <ng-template #noDataFound>\n                <mat-option disabled>\n                    {{ COMMON_CONSTANT.NO_DATA_FOUND }}\n                </mat-option>\n            </ng-template>\n        </mat-select>\n\n        <mat-error *ngIf=\"!selectedParameterID\">\n            Please select parameter first\n        </mat-error>\n        <mat-error *ngIf=\"selectedUnitFC.hasError('required') && selectedParameterID\">\n            {{ FormErrorEnum.REQUIRED }}\n        </mat-error>\n    </mat-form-field>\n</div>","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\n\nimport { MatInputModule } from '@angular/material/input';\nimport { MatSelectModule } from '@angular/material/select';\nimport { MatFormFieldModule } from '@angular/material/form-field';\nimport { NgxMatSelectSearchModule } from 'ngx-mat-select-search';\n\nimport { UnitComponent } from './unit.component';\n\n@NgModule({\n    declarations: [\n        UnitComponent\n    ],\n    imports: [\n        CommonModule,\n        FormsModule,\n        ReactiveFormsModule,\n        MatInputModule,\n        MatSelectModule,\n        MatFormFieldModule,\n        NgxMatSelectSearchModule\n    ],\n    exports: [\n        UnitComponent\n    ]\n})\n\nexport class UnitModule { }\n","import { Component, OnInit } from '@angular/core';\n\nimport { StatusInfo } from '../../../model/device.model';\nimport { EntityLevelConsumption } from '../../../model/entity.model';\nimport { AggregateDataRequest } from '../../../model/aggregate-data.model';\n\nimport { EntityController } from '../../../controller/entity.controller';\nimport { DeviceController } from '../../../controller/device.controller';\n\nimport { AggregateDataService } from '../../../service/aggregate-data.service';\n\n// tsc-library\nimport { DateTimeIntervalEnum, DateService } from '@library/date';\nimport { COMMON_CONSTANT } from '@library/tsc-common';\nimport { StorageService } from '@library/storage-service';\nimport { ApplicationKeyID } from '@library/application-service';\n// /tsc-library/\n\n@Component({\n    selector: 'lib-home',\n    templateUrl: './home.component.html',\n    styleUrls: ['./home.component.scss']\n})\n\nexport class HomeComponent implements OnInit {\n    commonConstant = COMMON_CONSTANT;\n\n    orgID: any;\n    applicationKeyID: any;\n    paramKey: any;\n    label: any;\n    icon;\n\n    outerStrokeColor: any;\n    outerStrokeGradientStopColor: any;\n    innerStrokeColor: any;\n\n    totalConsumptionCircleData: any;\n    consumptionBreakupCircleData: any;\n\n    todayConsumption: any;\n    currentMonthConsumption: any;\n    currentYearConsumption: any;\n    entityConsumption = [new EntityLevelConsumption()];\n    deviceInfoM = new StatusInfo();\n\n    constructor(\n        private storageService: StorageService,\n        private dateService: DateService,\n        private aggregateDataService: AggregateDataService,\n        private entityController: EntityController,\n        private deviceController: DeviceController\n    ) { }\n\n    ngOnInit(): void {\n        this.orgID = this.storageService.getStorage('currentOrgID');\n        this.applicationKeyID = this.storageService.getStorage('applicationKeyID');\n\n        if (this.applicationKeyID == ApplicationKeyID.ENERGY_KEY_ID) {\n            this.label = \"Energy\";\n            this.icon = \"bolt\";\n            this.paramKey = \"engEnergyUsed\";\n            this.outerStrokeColor = \"#fa9200\";\n            this.outerStrokeGradientStopColor = \"#fdd130\";\n            this.innerStrokeColor = \"#fbe2a6\";\n        } else if (this.applicationKeyID == ApplicationKeyID.WATER_KEY_ID) {\n            this.label = \"Water\";\n            this.icon = \"water_drop\";\n            this.paramKey = \"gwFlowTotalizer\";\n            this.outerStrokeColor = \"#4882c2\";\n            this.outerStrokeGradientStopColor = \"#53a9ff\";\n            this.innerStrokeColor = \"#dbe7ff\";\n        }\n\n        this.getTotalConsumption(DateTimeIntervalEnum.CURRENT_DAY)\n            .then(app => {\n                this.todayConsumption = app;\n            })\n\n        this.getTotalConsumption(DateTimeIntervalEnum.CURRENT_MONTH)\n            .then(app => {\n                this.currentMonthConsumption = app;\n                const totalConsumptionValue = this.currentMonthConsumption?.[0]?.['data']?.[0]?.['value'];\n\n                this.totalConsumptionCircleData = {\n                    percent: totalConsumptionValue,\n                    maxPercent: 999999999,\n                    units: this.currentMonthConsumption?.[0]?.unit,\n                    showUnits: true,\n                    radius: 75,\n                    space: 4,\n                    outerStrokeGradient: true,\n                    outerStrokeWidth: 10,\n                    outerStrokeColor: this.outerStrokeColor,\n                    outerStrokeGradientStopColor: this.outerStrokeGradientStopColor,\n                    innerStrokeColor: this.innerStrokeColor,\n                    showBackground: false,\n                    innerStrokeWidth: 5,\n                    showSubtitle: false,\n                    subtitleFormat: false,\n                    startFromZero: false,\n                    animationDuration: 500,\n                    backgroundColor: '#ffffff',\n                }\n            })\n\n        this.getTotalConsumption(DateTimeIntervalEnum.CURRENT_YEAR)\n            .then(app => {\n                this.currentYearConsumption = app;\n            })\n\n        this.getTotalEntitiesConsumption();\n        this.getEntityLevelConsumption();\n        this.getDeviceStatusInfo();\n    }\n\n    async getTotalConsumption(selectedRange) {\n        try {\n            const requestData = new AggregateDataRequest();\n\n            if (selectedRange == DateTimeIntervalEnum.CURRENT_DAY) {\n                requestData.startTime = this.dateService.getStartDateTime(DateTimeIntervalEnum.CURRENT_DAY);\n                requestData.interval = 'day_1';\n            } else if (selectedRange == DateTimeIntervalEnum.CURRENT_MONTH) {\n                requestData.startTime = this.dateService.getStartDateTime(DateTimeIntervalEnum.CURRENT_MONTH);\n                requestData.interval = 'month_1';\n            } else if (selectedRange == DateTimeIntervalEnum.CURRENT_YEAR) {\n                requestData.startTime = this.dateService.getStartDateTime(DateTimeIntervalEnum.CURRENT_YEAR);\n                requestData.interval = 'year_1';\n            }\n\n            requestData.endTime = this.dateService.getEndDateTime(DateTimeIntervalEnum.CURRENT_TIME);\n            requestData.params = [\n                {\n                    name: this.paramKey,\n                    dsAgg: \"sum\",\n                    agg: \"sum\",\n                    source_or_load: \"source\",\n                    sourceLoadType: \"all\"\n                }\n            ];\n            requestData.nullifyParams();\n            requestData.groupAll = true;\n\n            const result = await this.aggregateDataService.getAggregateData(this.orgID, requestData);\n            return result;\n        } catch (error) {\n            console.error(`Error in getTotalConsumption for (${selectedRange})`, error);\n        }\n    }\n\n    async getTotalEntitiesConsumption() {\n        try {\n            let requestData = new AggregateDataRequest();\n\n            requestData.startTime = this.dateService.getStartDateTime(DateTimeIntervalEnum.CURRENT_MONTH);\n            requestData.endTime = this.dateService.getEndDateTime(DateTimeIntervalEnum.CURRENT_TIME);\n            requestData.interval = \"month_1\";\n            requestData.params = [\n                {\n                    name: this.paramKey,\n                    dsAgg: \"sum\",\n                    agg: \"sum\",\n                    source_or_load: \"load\",\n                    sourceLoadType: \"all\"\n                }\n            ];\n            requestData.nullifyParams();\n            requestData.groupAll = true;\n\n            const totalEntitiesConsumData = await this.aggregateDataService.getAggregateData(this.orgID, requestData);\n            const consumptionBreakupValue = totalEntitiesConsumData?.[0]?.['data']?.[0]?.['value'];\n\n            this.consumptionBreakupCircleData = {\n                percent: consumptionBreakupValue,\n                maxPercent: 999999999,\n                units: totalEntitiesConsumData?.[0]?.unit,\n                showUnits: true,\n                radius: 75,\n                space: 4,\n                outerStrokeGradient: true,\n                outerStrokeWidth: 10,\n                outerStrokeColor: this.outerStrokeColor,\n                outerStrokeGradientStopColor: this.outerStrokeGradientStopColor,\n                innerStrokeColor: this.innerStrokeColor,\n                showBackground: false,\n                innerStrokeWidth: 5,\n                showSubtitle: false,\n                subtitleFormat: false,\n                startFromZero: false,\n                animationDuration: 500,\n                backgroundColor: '#ffffff',\n            }\n        } catch (error) {\n            console.error(`Error in getTotalEntitiesConsumption()`, error);\n        }\n    }\n\n    getEntityLevelConsumption() {\n        let requestData = new AggregateDataRequest();\n\n        requestData.startTime = this.dateService.getStartDateTime(DateTimeIntervalEnum.CURRENT_MONTH);\n        requestData.endTime = this.dateService.getEndDateTime(DateTimeIntervalEnum.CURRENT_TIME);\n        requestData.interval = \"month_1\";\n        requestData.params = [\n            {\n                name: this.paramKey,\n                dsAgg: \"sum\",\n                agg: \"sum\",\n                source_or_load: \"load\",\n                sourceLoadType: \"all\"\n            }\n        ];\n        requestData.nullifyParams();\n        requestData.groupAll = false;\n\n        this.entityController.getEntityLevelConsumption(this.orgID, requestData)\n            .subscribe((entityConsumRes: EntityLevelConsumption[]) => {\n                this.entityConsumption = entityConsumRes;\n            },\n                error => {\n                    console.log('error in getEntityLevelConsumption() -', error);\n                });\n    }\n\n    highestConsumptionEntity() {\n        if (this.entityConsumption?.length == 0) {\n            return null;\n        }\n        return this.entityConsumption?.reduce((maxEntity, currentEntity) => {\n            return currentEntity.value > maxEntity.value ? currentEntity : maxEntity;\n        }, this.entityConsumption?.[0]);\n    }\n\n    calculateProgress(entity) {\n        const highestConsumption = this.highestConsumptionEntity();\n        if (!highestConsumption) {\n            return 0;\n        }\n        const progress = (entity.value / highestConsumption.value) * 100;\n        return progress;\n    }\n\n    getDeviceStatusInfo() {\n        this.deviceController.getDeviceStatusInfo(this.orgID)\n            .subscribe((deviceRes: StatusInfo) => {\n                this.deviceInfoM = deviceRes;\n            },\n                error => {\n                    console.log('error in getDeviceStatusInfo() -', error);\n                });\n    }\n\n}","<div class=\"card main-card cardOverwrite h100\">\n    <div class=\"headerContainer\">\n        <div class=\"headerLeftContainer\">\n            <div class=\"pageTitle\">Home</div>\n        </div>\n    </div>\n\n    <div class=\"card-body\">\n        <div class=\"row\">\n            <div class=\"col-sm-6\">\n                <mat-card class=\"cardOverwrite cardBackgroundColor cardHeight\">\n                    <div class=\"row\">\n                        <div class=\"col-sm-12\">\n                            <span class=\"cardTitle\">\n                                Total {{ label }} Consumption\n                            </span>\n                        </div>\n                    </div>\n                    <div class=\"row\">\n                        <div class=\"d-flex align-items-center\">\n                            <div class=\"col-sm-6\">\n                                <span class=\"centerAlign\">\n                                    <circle-progress [options]=\"totalConsumptionCircleData\" [renderOnClick]=\"false\"\n                                        class=\"copy\"></circle-progress>\n                                </span>\n                                <span class=\"centerAlign\">\n                                    This Month\n                                </span>\n                            </div>\n                            <div class=\"col-sm-6 ms-4\">\n                                <div class=\"row\">\n                                    <ng-container *ngTemplateOutlet=\"totalConsumption; context: {\n                                        label: 'Today',\n                                        value: todayConsumption?.[0]?.['data']?.[0]?.['value'],\n                                        unit: todayConsumption?.[0]?.['unit'],\n                                        matCardClass: 'today'\n                                    }\"></ng-container>\n                                </div>\n                                <div class=\"row mt-4\">\n                                    <ng-container *ngTemplateOutlet=\"totalConsumption; context: {\n                                        label: 'This Month',\n                                        value: currentMonthConsumption?.[0]?.['data']?.[0]?.['value'],\n                                        unit: currentMonthConsumption?.[0]?.['unit'],\n                                        matCardClass: 'month'\n                                    }\"></ng-container>\n                                </div>\n                                <div class=\"row mt-4\">\n                                    <ng-container *ngTemplateOutlet=\"totalConsumption; context: {\n                                        label: 'This Year',\n                                        value: currentYearConsumption?.[0]?.['data']?.[0]?.['value'],\n                                        unit: currentYearConsumption?.[0]?.['unit'],\n                                        matCardClass: 'year'\n                                    }\"></ng-container>\n                                </div>\n                            </div>\n                        </div>\n                    </div>\n                </mat-card>\n            </div>\n            <div class=\"col-sm-6\">\n                <mat-card class=\"cardOverwrite cardBackgroundColor cardHeight\">\n                    <div class=\"row\">\n                        <div class=\"col-sm-12\">\n                            <span class=\"cardTitle\">\n                                {{ label }} Consumption Breakup\n                            </span>\n                        </div>\n                    </div>\n                    <div class=\"row\">\n                        <div class=\"d-flex align-items-center\">\n                            <div class=\"col-sm-6\">\n                                <span class=\"centerAlign\">\n                                    <circle-progress [options]=\"consumptionBreakupCircleData\" [renderOnClick]=\"false\"\n                                        class=\"copy\"></circle-progress>\n                                </span>\n                                <span class=\"centerAlign\">\n                                    This Month\n                                </span>\n                            </div>\n                            <div class=\"col-sm-6\">\n                                <div class=\"row\" *ngIf=\"entityConsumption?.[0]?.id\">\n                                    <ng-container *ngTemplateOutlet=\"entityProgress; context: {\n                                        name: entityConsumption[0].name,\n                                        value: entityConsumption[0].value,\n                                        unit: entityConsumption[0].unit,\n                                        entityObj: entityConsumption[0],\n                                        outerProgressBarClass: 'progress1BGColor',\n                                        innerProgressBarClass: 'progress1Color'\n                                    }\"></ng-container>\n                                </div>\n                                <div class=\"row mt-4\" *ngIf=\"entityConsumption?.[1]\">\n                                    <ng-container *ngTemplateOutlet=\"entityProgress; context: {\n                                        name: entityConsumption[1].name,\n                                        value: entityConsumption[1].value,\n                                        unit: entityConsumption[1].unit,\n                                        entityObj: entityConsumption[1],\n                                        outerProgressBarClass: 'progress2BGColor',\n                                        innerProgressBarClass: 'progress2Color'\n                                    }\"></ng-container>\n                                </div>\n                                <div class=\"row mt-4\" *ngIf=\"entityConsumption?.[2]\">\n                                    <ng-container *ngTemplateOutlet=\"entityProgress; context: {\n                                        name: entityConsumption[2].name,\n                                        value: entityConsumption[2].value,\n                                        unit: entityConsumption[2].unit,\n                                        entityObj: entityConsumption[2],\n                                        outerProgressBarClass: 'progress3BGColor',\n                                        innerProgressBarClass: 'progress3Color'\n                                    }\"></ng-container>\n                                </div>\n                                <div class=\"row mt-4\" *ngIf=\"entityConsumption?.[3]\">\n                                    <ng-container *ngTemplateOutlet=\"entityProgress; context: {\n                                        name: entityConsumption[3].name,\n                                        value: entityConsumption[3].value,\n                                        unit: entityConsumption[3].unit,\n                                        entityObj: entityConsumption[3],\n                                        outerProgressBarClass: 'progress4BGColor',\n                                        innerProgressBarClass: 'progress4Color'\n                                    }\"></ng-container>\n                                </div>\n                            </div>\n                        </div>\n                    </div>\n                </mat-card>\n            </div>\n        </div>\n\n        <div class=\"row mt-4\">\n            <div class=\"col-sm-3\">\n                <mat-card class=\"card main-card cardOverwrite card-info\">\n                    <ng-container *ngTemplateOutlet=\"deviceStatus; context: {\n                        label: 'Total devices',\n                        count: deviceInfoM.total\n                    }\"></ng-container>\n                </mat-card>\n            </div>\n            <div class=\"col-sm-3\">\n                <mat-card class=\"card main-card cardOverwrite card-success\">\n                    <ng-container *ngTemplateOutlet=\"deviceStatus; context: {\n                        label: 'Online devices',\n                        count: deviceInfoM.online\n                    }\"></ng-container>\n                </mat-card>\n            </div>\n            <div class=\"col-sm-3\">\n                <mat-card class=\"card main-card cardOverwrite card-warning\">\n                    <ng-container *ngTemplateOutlet=\"deviceStatus; context: {\n                        label: 'Delayed devices',\n                        count: deviceInfoM.delay\n                    }\"></ng-container>\n                </mat-card>\n            </div>\n            <div class=\"col-sm-3\">\n                <mat-card class=\"card main-card cardOverwrite card-danger\">\n                    <ng-container *ngTemplateOutlet=\"deviceStatus; context: {\n                        label: 'Offline devices',\n                        count: deviceInfoM.offline\n                    }\"></ng-container>\n                </mat-card>\n            </div>\n        </div>\n    </div>\n</div>\n\n<ng-template #totalConsumption let-label=\"label\" let-value=\"value\" let-unit=\"unit\" let-matCardClass=\"matCardClass\"\n    let-outerProgressBarClass=\"outerProgressBarClass\" let-innerProgressBarClass=\"innerProgressBarClass\">\n    <div class=\"col-sm-12\">\n        <div class=\"d-flex align-items-center\">\n            <mat-card class=\"card main-card square d-flex justify-content-center me-2\" [class]=\"matCardClass\">\n                <span class=\"material-symbols-outlined\">\n                    {{ icon }}\n                </span>\n            </mat-card>\n            <div class=\"row\">\n                <span>{{ label }}</span><br />\n                <span class=\"text-primary fw-bold\">{{ value ? value : commonConstant.HYPHEN }} <span\n                        class=\"unitSize\">{{ value ? unit : '' }}</span></span>\n            </div>\n        </div>\n    </div>\n</ng-template>\n\n<ng-template #entityProgress let-name=\"name\" let-value=\"value\" let-unit=\"unit\" let-entityObj=\"entityObj\"\n    let-outerProgressBarClass=\"outerProgressBarClass\" let-innerProgressBarClass=\"innerProgressBarClass\">\n    <div class=\"col-sm-12\">\n        <span>\n            {{ name }}\n        </span>\n        <span class=\"float-end text-primary fw-bold\"> {{ value ? value : commonConstant.HYPHEN }}\n            <span class=\"unitSize\"> {{ value ? unit : '' }} </span>\n        </span>\n        <div class=\"progress progressBarRadius\" [class]=\"outerProgressBarClass\">\n            <div class=\"progress-bar progressBarRadius\" [class]=\"innerProgressBarClass\" role=\"progressbar\"\n                [style.width.%]=\"calculateProgress(entityObj)\"></div>\n        </div>\n    </div>\n</ng-template>\n\n<ng-template #deviceStatus let-label=\"label\" let-count=\"count\">\n    <div class=\"row\">\n        <div class=\"col-sm-12\">\n            <span class=\"material-symbols-outlined\">\n                devices\n            </span>\n        </div>\n    </div>\n    <div class=\"row\">\n        <div class=\"col-sm-12 fs-1 fw-bold centerAlign\">\n            {{ count != undefined && count != null ? count : commonConstant.HYPHEN }}\n        </div>\n    </div>\n    <div class=\"row mt-1\">\n        <div class=\"col-sm-12 fs-5 centerAlign\">\n            {{ label }}\n        </div>\n    </div>\n</ng-template>","import { NgModule } from '@angular/core';\nimport { RouterModule, Routes } from '@angular/router';\n\nimport { HomeComponent } from './home.component';\n\nconst routes: Routes = [\n    {\n        path: '',\n        component: HomeComponent\n    }\n];\n\n@NgModule({\n    imports: [RouterModule.forChild(routes)],\n    exports: [RouterModule]\n})\nexport class HomeRoutingModule { }\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\n\nimport { MatCardModule } from '@angular/material/card';\nimport { MatTooltipModule } from '@angular/material/tooltip';\nimport { PerfectScrollbarModule } from 'ngx-perfect-scrollbar';\n\nimport { NgCircleProgressModule } from 'ng-circle-progress';\n\nimport { HomeRoutingModule } from './home-routing.module';\nimport { HomeComponent } from './home.component';\n\n@NgModule({\n    declarations: [\n        HomeComponent\n    ],\n    imports: [\n        CommonModule,\n        HomeRoutingModule,\n        MatCardModule,\n        MatTooltipModule,\n        PerfectScrollbarModule,\n        NgCircleProgressModule.forRoot(),\n    ]\n})\nexport class HomeModule { }\n","import { Inject, Injectable } from '@angular/core';\nimport { HttpClient, HttpHeaders } from '@angular/common/http';\n\nimport { Observable } from 'rxjs';\n\nimport { ShiftM } from '../model/shift.model';\n\n@Injectable({\n    providedIn: 'root'\n})\n\nexport class ShiftController {\n\n    constructor(\n        private http: HttpClient,\n        @Inject('environment') private environment: any\n    ) { }\n\n    getShift(orgID, skipLoader): Observable<ShiftM[]> {\n        let headers = new HttpHeaders().set('skipLoader', skipLoader);\n\n        return this.http.get<ShiftM[]>(`${this.environment.TSC_COMMON_API_URL}organizations/${orgID}/shifts`, { headers: headers });\n    }\n}\n","import { Injectable } from '@angular/core';\n\nimport { Shift, ShiftM } from '../model/shift.model';\n\nimport { ShiftController } from '../controller/shift.controller';\n\n@Injectable({\n    providedIn: 'root'\n})\n\nexport class ShiftService {\n\n    constructor(\n        private shiftController: ShiftController\n    ) { }\n\n    async getShift(orgID, skipLoader): Promise<ShiftM[]> {\n        let shiftM: ShiftM[];\n        try {\n            shiftM = await this.shiftController.getShift(orgID, skipLoader).toPromise();\n\n            if (shiftM) {\n                return shiftM;\n            } else {\n                return [new Shift()];\n            }\n        } catch (error) {\n            console.error('Error -', error);\n            return [new Shift()];\n        }\n    }\n}\n","import { Component, EventEmitter, Input, OnInit, Output, SimpleChanges } from '@angular/core';\nimport { FormControl, Validators } from '@angular/forms';\n\nimport { Shift, ShiftM } from '../../../model/shift.model';\n\nimport { ShiftService } from '../../../service/shift.service';\n\n// tsc-library\nimport { StorageService } from '@library/storage-service';\nimport { COMMON_CONSTANT, FormErrorEnum, MaterialFormFieldAppearance, MatSelectSearchService } from '@library/tsc-common';\n// /tsc-library/\n\n@Component({\n    selector: 'lib-shift',\n    templateUrl: './shift.component.html',\n    styles: [\n    ]\n})\nexport class ShiftComponent implements OnInit {\n\n    @Output()\n    emitFilter = new EventEmitter();\n\n    COMMON_CONSTANT = COMMON_CONSTANT;\n    MaterialFormFieldAppearance = MaterialFormFieldAppearance;\n\n    FormErrorEnum = FormErrorEnum;\n\n    orgID: any;\n\n    shiftM = [new Shift()];\n\n    allShiftID: any[] = [];\n    totalShiftCount: number = 0;\n\n    multiSelectedShiftFC: FormControl = new FormControl([], [Validators.required]);\n\n    shiftSearchUtil: MatSelectSearchService = new MatSelectSearchService(['name']);\n\n    constructor(\n        private storageService: StorageService,\n        private shiftService: ShiftService\n    ) { }\n\n    ngOnInit(): void {\n        this.orgID = this.storageService.getStorage('currentOrgID');\n\n        this.getShift();\n    }\n\n    async getShift() {\n        this.shiftM = <ShiftM[]>await this.shiftService.getShift(this.orgID, 'NO');\n\n        this.shiftSearchUtil.entityArr = this.shiftM;\n        this.shiftSearchUtil.createSubscription();\n\n        this.totalShiftCount = this.shiftM.length;\n        this.shiftM.forEach(shift => this.allShiftID.push(shift['id']));\n        this.emitFilter.emit();\n    }\n\n    selectAllShifts() {\n        if (!this.multiSelectedShiftFC.value.includes(-1)) {\n            this.multiSelectedShiftFC.reset([]);\n            return;\n        }\n        this.multiSelectedShiftFC.setValue([-1, ...this.allShiftID]);\n        this.emitFilter.emit();\n    }\n\n    selectedShift() {\n        const selected = this.multiSelectedShiftFC.value;\n\n        if (selected.includes(-1)) {\n            selected.shift();\n            this.multiSelectedShiftFC.patchValue(selected);\n        } else if (this.multiSelectedShiftFC.value.length == this.totalShiftCount) {\n            this.allShiftID.splice(0, 0, -1);\n            this.multiSelectedShiftFC.patchValue(this.allShiftID);\n        } else {\n            const filteredSelected = selected.filter(s => s != -1);\n            this.multiSelectedShiftFC.patchValue(filteredSelected);\n        }\n        this.emitFilter.emit();\n    }\n\n}\n","<div class=\"row\">\n    <mat-form-field class=\"matFieldWidth100\" [appearance]=\"MaterialFormFieldAppearance.FORM_FIELD_APPEARANCE\">\n        <mat-label>Select shift</mat-label>\n\n        <mat-select [formControl]=\"multiSelectedShiftFC\" multiple required>\n            <ng-container *ngIf=\"shiftM && shiftM.length > 0 && shiftM[0]['id']; else noDataOption\">\n                <mat-option>\n                    <ngx-mat-select-search [formControl]=\"shiftSearchUtil.filterFC\" placeholderLabel=\"Search by name\"\n                        noEntriesFoundLabel=\"No matching name found.\">\n                    </ngx-mat-select-search>\n                </mat-option>\n                <mat-option [value]=\"-1\" (click)=\"selectAllShifts()\">\n                    Select all\n                </mat-option>\n                <mat-option *ngFor=\"let shift of shiftSearchUtil.filteredEntities | async\" [value]=\"shift.id\"\n                    (click)=\"selectedShift()\">\n                    {{ shift.name }}\n                </mat-option>\n            </ng-container>\n            <ng-template #noDataOption>\n                <mat-option disabled>\n                    {{ COMMON_CONSTANT.NO_DATA_FOUND }}\n                </mat-option>\n            </ng-template>\n        </mat-select>\n\n        <mat-error *ngIf=\"multiSelectedShiftFC.hasError('required')\">\n            {{ FormErrorEnum.REQUIRED }}\n        </mat-error>\n    </mat-form-field>\n</div>","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\n\nimport { MatInputModule } from '@angular/material/input';\nimport { MatSelectModule } from '@angular/material/select';\nimport { MatFormFieldModule } from '@angular/material/form-field';\nimport { NgxMatSelectSearchModule } from 'ngx-mat-select-search';\n\nimport { ShiftComponent } from './shift.component';\n\n@NgModule({\n    declarations: [\n        ShiftComponent\n    ],\n    imports: [\n        CommonModule,\n        FormsModule,\n        ReactiveFormsModule,\n        MatInputModule,\n        MatSelectModule,\n        MatFormFieldModule,\n        NgxMatSelectSearchModule\n    ],\n    exports: [\n        ShiftComponent\n    ]\n})\n\nexport class ShiftModule { }\n","import { Component, OnInit } from '@angular/core';\nimport { ActivatedRoute } from '@angular/router';\nimport { MatDialog } from '@angular/material/dialog';\n\nimport * as moment from 'moment';\n\nimport { EntityWithChildrenM, EntityWithChildren, Entity } from '../../../model/entity.model';\n\nimport { EntityDialogComponent } from '../../_shared/dialog/entity/entity.component';\n\nimport { EntityController } from '../../../controller/entity.controller';\nimport { AggregateDataController } from '../../../controller/aggregate-data.controller';\nimport { EntityService } from '../../../service/entity.service';\n\n// tsc-library\nimport { StorageService } from '@library/storage-service';\nimport { COMMON_CONSTANT, FREQUENCY_CONSTANT } from '@library/tsc-common';\nimport { DateTypeEnum, FrequencyEnum } from '@library/date';\nimport { ChartTitle, ChartViewStateEnum, StackBarChart } from '@library/echart';\n// /tsc-library/\n\n@Component({\n    selector: 'app-consumption',\n    templateUrl: './consumption.component.html',\n    styleUrls: ['./consumption.component.scss']\n})\nexport class ConsumptionComponent implements OnInit {\n\n    commonConstant = COMMON_CONSTANT;\n    frequencyConstant = FREQUENCY_CONSTANT;\n    frequencyEnum = FrequencyEnum;\n\n    dateType: any;\n    orgID: any;\n    layoutID: any;\n    entityID: any;\n    entityName: string;\n    applicationKeyID: any;\n    timezone: any;\n    frequency: any[] = [];\n    defaultFrequency: string;\n    startDate: any;\n    endDate: any;\n    interval: any;\n\n    entityM = new Entity();\n    consumptionEntityM = [new EntityWithChildren()];\n\n    viewStateFlag: string = ChartViewStateEnum.LOADING;\n    chartTitle = new ChartTitle();\n    chartData = new StackBarChart();\n\n    constructor(\n        private storageService: StorageService,\n        private activatedRoute: ActivatedRoute,\n        private entityService: EntityService,\n        private entityController: EntityController,\n        private aggregateDataController: AggregateDataController,\n        private dialog: MatDialog,\n    ) { }\n\n    ngOnInit(): void {\n        this.orgID = this.storageService.getStorage('currentOrgID');\n        this.layoutID = this.storageService.getStorage('layoutID');\n        this.applicationKeyID = this.storageService.getStorage('applicationKeyID');\n        this.timezone = this.storageService.getStorage('timezone');\n\n        this.activatedRoute.queryParams\n            .subscribe(queryParam => {\n                this.entityID = queryParam.entityID;\n                if (this.entityID) {\n                    this.getEntityByID(this.entityID);\n                }\n            });\n\n        this.frequency = this.frequencyConstant.filter(frequency => frequency.keyID != 'CUSTOM');\n        this.defaultFrequency = this.frequencyEnum.MONTHLY;\n        this.dateType = DateTypeEnum.EXCLUSIVE;\n\n        this.getConsumptionEntities();\n    }\n\n    async getEntityByID(entityID) {\n        this.entityM = await this.entityService.getEntityByID(this.orgID, this.layoutID, entityID);\n        this.entityName = this.entityM.name;\n    }\n\n    getConsumptionEntities() {\n        this.entityController.getConsumptionEntities(this.orgID)\n            .subscribe((res: EntityWithChildrenM) => {\n                this.consumptionEntityM = [res];\n            },\n                error => {\n                    console.log('error in getConsumptionEntities() - ', error);\n                });\n    }\n\n    dateFilterEmitted(data: any) {\n        this.startDate = data.startDate;\n        this.endDate = data.endDate;\n        let selectedFrequency = data.frequency;\n\n        if (selectedFrequency == this.frequencyEnum.DAILY) {\n            this.interval = \"hour_1\";\n        } else if (selectedFrequency == this.frequencyEnum.MONTHLY) {\n            this.interval = \"day_1\";\n        } else if (selectedFrequency == this.frequencyEnum.YEARLY) {\n            this.interval = \"month_1\";\n        }\n\n        this.getCumulativeConsumption();\n    }\n\n    getCumulativeConsumption() {\n\n        this.viewStateFlag = ChartViewStateEnum.LOADING;\n\n        const requestData = this.createDataRequest();\n\n        this.aggregateDataController.getCumulativeConsumption(this.orgID, requestData)\n            .subscribe((consumptionRes: any) => {\n\n                if (consumptionRes?.records?.length > 0) {\n\n                    this.chartData.metaData = consumptionRes.records.map(record => ({\n                        xAxisSeries: moment(record.date).format(\"YYYY-MM-DD HH:mm:ss\"),\n                        totalData: {\n                            value: record.totalConsumption.value,\n                            unitCode: record.totalConsumption.unit\n                        },\n                        barData: record.paramData.map(param => ({\n                            name: param.label,\n                            value: param.value,\n                            unit: {\n                                code: param.unit\n                            }\n                        }))\n                    }));\n\n                    this.chartData.totalDataLabel = 'Total consumption';\n                    this.chartData.showDataView = true;\n                    this.chartData.showMagicType = true;\n                    this.chartData.showRestore = true;\n                    this.chartData.showDownloadImage = true;\n\n                    this.viewStateFlag = ChartViewStateEnum.HAS_DATA;\n\n                } else {\n                    this.viewStateFlag = ChartViewStateEnum.NO_DATA;\n                }\n            },\n                error => {\n                    this.viewStateFlag = ChartViewStateEnum.NO_DATA;\n\n                    console.log('error in getCumulativeConsumption() -', error);\n                });\n    }\n\n    openEntityDialog() {\n        const dialog = this.dialog.open(EntityDialogComponent,\n            {\n                data: {\n                    entityID: this.entityID,\n                    entityObject: this.consumptionEntityM\n                },\n                width: '50vw',\n                height: '100%',\n                position: { right: '-2px', top: '0px' },\n            });\n        dialog.afterClosed().subscribe((dialogRes) => {\n            if (dialogRes.entityID) {\n                this.entityID = dialogRes.entityID;\n\n                this.getEntityByID(this.entityID);\n                this.getCumulativeConsumption();\n            }\n        })\n    }\n\n    createDataRequest() {\n\n        let requestBody = {};\n\n        requestBody['startTime'] = this.startDate;\n        requestBody['endTime'] = this.endDate;\n        requestBody['interval'] = this.interval;\n        requestBody['entityID'] = this.entityID ? this.entityID : null;\n\n        return requestBody;\n    }\n\n}\n","<div class=\"card main-card cardOverwrite h100\">\n    <div class=\"headerContainer\">\n        <div class=\"headerLeftContainer\">\n            <div class=\"pageTitle\">Consumption Dashboard{{ entityName ? ' - ' + entityName : '' }}</div>\n        </div>\n    </div>\n\n    <div class=\"card-body\">\n        <div class=\"row\">\n            <div class=\"col-sm-8\">\n                <lib-date-filter-two [frequencyInp]=\"frequency\" [defaultFrequencyInp]=\"defaultFrequency\"\n                    [dateTypeInp]=\"dateType\" [showDefaultDurationInp]=\"true\" [timezoneInp]=\"timezone\"\n                    (dateFilterEmitter)=\"dateFilterEmitted($event)\"></lib-date-filter-two>\n            </div>\n            <div class=\"col-sm-4\">\n                <button class=\"btn btn-link selectEntityText mt-2 float-end\" type=\"button\" (click)=\"openEntityDialog()\">\n                    Change entity\n                </button>\n            </div>\n        </div>\n\n        <div class=\"row mt-3\">\n            <div class=\"col-sm-12\">\n                <mat-card class=\"cardOverwrite cardBackgroundColor\">\n                    <div class=\"row\">\n                        <div class=\"col-sm-12\">\n                            <lib-stack-bar [chartTitleInp]=\"chartTitle\" [viewStateInp]=\"viewStateFlag\"\n                                [dataInp]=\"chartData\"></lib-stack-bar>\n                        </div>\n                    </div>\n                </mat-card>\n            </div>\n        </div>\n    </div>\n</div>","import { NgModule } from '@angular/core';\nimport { RouterModule, Routes } from '@angular/router';\n\nimport { ConsumptionComponent } from './consumption.component';\n\nconst routes: Routes = [\n    {\n        path: '',\n        component: ConsumptionComponent\n    }\n];\n\n@NgModule({\n    imports: [RouterModule.forChild(routes)],\n    exports: [RouterModule]\n})\nexport class ConsumptionRoutingModule { }\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { MatCardModule } from '@angular/material/card';\n\nimport { EntityDialogModule } from '../../_shared/dialog/entity/entity.module';\n\nimport { ConsumptionRoutingModule } from './consumption-routing.module';\nimport { ConsumptionComponent } from './consumption.component';\n\n// tsc-library\nimport { DateFilterTwoModule } from '@library/date';\nimport { StackBarModule } from '@library/echart';\n// /tsc-library/\n\n\n@NgModule({\n    declarations: [\n        ConsumptionComponent\n    ],\n    imports: [\n        CommonModule,\n        ConsumptionRoutingModule,\n        EntityDialogModule,\n        DateFilterTwoModule,\n        StackBarModule,\n        MatCardModule\n    ]\n})\nexport class ConsumptionModule { }\n","import { Component, OnInit } from '@angular/core';\n\nimport { AggregateDataRequest } from '../../../model/aggregate-data.model';\n\nimport { AggregateDataService } from '../../../service/aggregate-data.service';\n\n// tsc-library\nimport { StorageService } from '@library/storage-service';\nimport { COMMON_CONSTANT, FREQUENCY_CONSTANT, TSCCommonService } from '@library/tsc-common';\nimport { DateTypeEnum, FrequencyEnum } from '@library/date';\nimport { ApplicationKeyID } from '@library/application-service';\nimport { ChartTitleM, ChartViewStateEnum, DoughnutChart } from '@library/echart';\n// /tsc-library/\n\n@Component({\n    selector: 'lib-consumption-breakup',\n    templateUrl: './consumption-breakup.component.html',\n    styles: [\n    ]\n})\nexport class ConsumptionBreakupDashboardComponent implements OnInit {\n\n    commonConstant = COMMON_CONSTANT;\n    frequencyConstant = FREQUENCY_CONSTANT;\n    frequencyEnum = FrequencyEnum;\n\n    dateType: any;\n    orgID: any;\n    applicationKeyID: any;\n    timezone: any;\n    paramMetric: string;\n    frequency: any[] = [];\n    defaultFrequency: string;\n    startDate: any;\n    endDate: any;\n    selectedFrequency: any;\n    interval: any;\n    orgSourceRes: any;\n    orgConsumedRes: any;\n    showLoader: boolean = true;\n\n    viewStateFlagForSource: string = ChartViewStateEnum.LOADING;\n    viewStateFlagForLoad: string = ChartViewStateEnum.LOADING;\n    chartDataForSource = new DoughnutChart();\n    chartDataForLoad = new DoughnutChart();\n\n    chartTitleForSource: ChartTitleM = {\n        name: 'Sourced',\n        color: 'grey',\n    };\n\n    chartTitleForLoad: ChartTitleM = {\n        name: 'Consumed',\n        color: 'grey',\n    };\n\n    constructor(\n        private storageService: StorageService,\n        private aggregateDataService: AggregateDataService,\n        public tscCommonService: TSCCommonService\n    ) { }\n\n    ngOnInit(): void {\n        this.orgID = this.storageService.getStorage('currentOrgID');\n        this.applicationKeyID = this.storageService.getStorage('applicationKeyID');\n        this.timezone = this.storageService.getStorage('timezone');\n\n        if (this.applicationKeyID == ApplicationKeyID.ENERGY_KEY_ID) {\n            this.paramMetric = \"engEnergyUsed\";\n        } else if (this.applicationKeyID == ApplicationKeyID.WATER_KEY_ID) {\n            this.paramMetric = \"gwFlowTotalizer\";\n        }\n\n        this.frequency = this.frequencyConstant.filter(frequency => frequency.keyID != 'CUSTOM');\n        this.defaultFrequency = this.frequencyEnum.MONTHLY;\n        this.dateType = DateTypeEnum.EXCLUSIVE;\n    }\n\n    dateFilterEmitted(data: any) {\n        this.startDate = data.startDate;\n        this.endDate = data.endDate;\n        let selectedFrequency = data.frequency;\n\n        if (selectedFrequency == this.frequencyEnum.DAILY) {\n            this.interval = \"day_1\";\n        } else if (selectedFrequency == this.frequencyEnum.MONTHLY) {\n            this.interval = \"month_1\";\n        } else if (selectedFrequency == this.frequencyEnum.YEARLY) {\n            this.interval = \"year_1\";\n        }\n\n        this.getOrgLevelSourceConsum(\"source\").then(app => {\n            this.orgSourceRes = app;\n        })\n\n        this.getOrgLevelSourceConsum(\"load\").then(app => {\n            this.orgConsumedRes = app;\n        })\n\n        this.getEntiyLevelConsumption();\n    }\n\n    async getOrgLevelSourceConsum(category: string) {\n        try {\n            const requestData = this.createDataRequest(category, true);\n\n            const result = await this.aggregateDataService.getAggregateData(this.orgID, requestData);\n            return result;\n\n        } catch (error) {\n            console.error(`Error in getOrgLevelSourceConsum(${category})`, error);\n        } finally {\n            this.showLoader = false;\n        }\n    }\n\n    async getEntiyLevelConsumption() {\n        await this.getEntityLevelSourceConsum(\"source\");\n        await this.getEntityLevelSourceConsum(\"load\");\n    }\n\n    async getEntityLevelSourceConsum(category: string) {\n\n        if (category == 'source') {\n            this.viewStateFlagForSource = ChartViewStateEnum.LOADING;\n        } else {\n            this.viewStateFlagForLoad = ChartViewStateEnum.LOADING;\n        }\n\n        try {\n            const requestData = this.createDataRequest(category, false);\n            const result = await this.aggregateDataService.getAggregateData(this.orgID, requestData);\n\n            if (result?.length > 0) {\n                if (result?.every(item => item.data.length == 0)) {\n                    if (category == 'source') {\n                        this.viewStateFlagForSource = ChartViewStateEnum.NO_DATA;\n                    } else {\n                        this.viewStateFlagForLoad = ChartViewStateEnum.NO_DATA;\n                    }\n                } else {\n                    let chartData = new DoughnutChart();\n\n                    chartData = {\n                        showDataView: true,\n                        showRestore: true,\n                        showDownloadImage: true,\n                        metaData: result.map(item => ({\n                            name: item.sourceLoadType,\n                            value: item.data?.[0]?.value,\n                            unit: {\n                                code: item.unit,\n                            },\n                        })),\n                    };\n\n                    if (category == 'source') {\n                        this.chartDataForSource = chartData;\n                        this.viewStateFlagForSource = ChartViewStateEnum.HAS_DATA;\n                    } else {\n                        this.chartDataForLoad = chartData;\n                        this.viewStateFlagForLoad = ChartViewStateEnum.HAS_DATA;\n                    }\n                }\n\n            } else {\n                if (category == 'source') {\n                    this.viewStateFlagForSource = ChartViewStateEnum.NO_DATA;\n                } else {\n                    this.viewStateFlagForLoad = ChartViewStateEnum.NO_DATA;\n                }\n            }\n\n        } catch (error) {\n            if (category == 'source') {\n                this.viewStateFlagForSource = ChartViewStateEnum.NO_DATA;\n            } else {\n                this.viewStateFlagForLoad = ChartViewStateEnum.NO_DATA;\n            }\n\n            console.error(`Error in getEntityLevelSourceConsum(${category})`, error);\n        }\n    }\n\n    createDataRequest(category: string, groupAll: boolean) {\n\n        const requestData = new AggregateDataRequest();\n\n        requestData.startTime = this.startDate;\n        requestData.endTime = this.endDate;\n        requestData.interval = this.interval;\n        requestData.params = [\n            {\n                name: this.paramMetric,\n                dsAgg: \"sum\",\n                agg: \"sum\",\n                source_or_load: category,\n                sourceLoadType: \"all\"\n            }\n        ];\n        requestData.nullifyParams();\n        requestData.groupAll = groupAll;\n\n        return requestData;\n    }\n\n}\n","<div class=\"card main-card cardOverwrite h100\">\n    <div class=\"headerContainer\">\n        <div class=\"headerLeftContainer\">\n            <div class=\"pageTitle\">Consumption Breakup</div>\n        </div>\n    </div>\n\n    <div class=\"card-body\">\n        <div class=\"row\">\n            <div class=\"col-sm-12\">\n                <lib-date-filter-two [frequencyInp]=\"frequency\" [defaultFrequencyInp]=\"defaultFrequency\"\n                    [dateTypeInp]=\"dateType\" [showDefaultDurationInp]=\"true\" [timezoneInp]=\"timezone\"\n                    (dateFilterEmitter)=\"dateFilterEmitted($event)\"></lib-date-filter-two>\n            </div>\n        </div>\n\n        <div class=\"row mt-3\">\n            <div class=\"col-sm-6\">\n                <mat-card class=\"cardOverwrite cardBackgroundColor\">\n                    <ng-container *ngTemplateOutlet=\"sourceConsumTemplate; context: {\n                        value: orgSourceRes?.[0]?.['data']?.[0]?.['value'],\n                        unit: orgSourceRes?.[0]?.['unit'],\n                        label: 'Sourced',\n                        loader: showLoader\n                        }\"></ng-container>\n                </mat-card>\n            </div>\n            <div class=\"col-sm-6\">\n                <mat-card class=\"cardOverwrite cardBackgroundColor\">\n                    <ng-container *ngTemplateOutlet=\"sourceConsumTemplate; context: {\n                        value: orgConsumedRes?.[0]?.['data']?.[0]?.['value'],\n                        unit: orgConsumedRes?.[0]?.['unit'],\n                        label: 'Consumed',\n                        loader: showLoader\n                        }\"></ng-container>\n                </mat-card>\n            </div>\n        </div>\n\n        <div class=\"row mt-3\">\n            <div class=\"col-sm-6\">\n                <mat-card class=\"cardOverwrite cardBackgroundColor\">\n                    <div class=\"row\">\n                        <div class=\"col-sm-12\">\n                            <lib-doughnut [viewStateInp]=\"viewStateFlagForSource\" [chartTitleInp]=\"chartTitleForSource\" [dataInp]=\"chartDataForSource\"></lib-doughnut>\n                        </div>\n                    </div>\n                </mat-card>\n            </div>\n            <div class=\"col-sm-6\">\n                <mat-card class=\"cardOverwrite cardBackgroundColor\">\n                    <div class=\"row\">\n                        <div class=\"col-sm-12\">\n                            <lib-doughnut [viewStateInp]=\"viewStateFlagForLoad\" [chartTitleInp]=\"chartTitleForLoad\" [dataInp]=\"chartDataForLoad\"></lib-doughnut>\n                        </div>\n                    </div>\n                </mat-card>\n            </div>\n        </div>\n    </div>\n</div>\n\n<ng-template #sourceConsumTemplate let-label=\"label\" let-value=\"value\" let-unit=\"unit\" let-loader=\"loader\">\n    <ng-container *ngIf=\"loader; else dataTemplate\">\n        <lib-skeleton-loader [count]=\"1\" [appearance]=\"''\"\n            [theme]=\"{ 'border-radius': '16px', height: '40px', 'background-color': 'rgb(230 232 235)' }\"></lib-skeleton-loader>\n    </ng-container>\n\n    <ng-template #dataTemplate>\n        <div class=\"row\">\n            <div class=\"col-sm-12\">\n                <span class=\"fs-2 fw-bold text-primary\">{{ value ? tscCommonService.formatLargeNumber(value, 'false', 1)\n                    : commonConstant.HYPHEN\n                    }}</span>\n                <span class=\"text-secondary fw-bold\"> {{ value ? unit : '' }} </span>\n            </div>\n        </div>\n        <div class=\"row\">\n            <div class=\"col-sm-12 cardTitle\">\n                {{ label }}\n            </div>\n        </div>\n    </ng-template>\n</ng-template>","import { NgModule } from '@angular/core';\nimport { RouterModule, Routes } from '@angular/router';\n\nimport { ConsumptionBreakupDashboardComponent } from './consumption-breakup.component';\n\nconst routes: Routes = [\n    {\n        path: '',\n        component: ConsumptionBreakupDashboardComponent\n    }\n];\n\n@NgModule({\n    imports: [RouterModule.forChild(routes)],\n    exports: [RouterModule]\n})\nexport class ConsumptionBreakupDashboardRoutingModule { }\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { MatCardModule } from '@angular/material/card';\n\nimport { ConsumptionBreakupDashboardRoutingModule } from './consumption-breakup-routing.module';\nimport { ConsumptionBreakupDashboardComponent } from './consumption-breakup.component';\n\n// tsc-library\nimport { SkeletonModule } from '@library/tsc-common';\nimport { DateFilterTwoModule } from '@library/date';\nimport { DoughnutModule } from '@library/echart';\n// /tsc-library/\n\n\n@NgModule({\n    declarations: [\n        ConsumptionBreakupDashboardComponent\n    ],\n    imports: [\n        CommonModule,\n        ConsumptionBreakupDashboardRoutingModule,\n        DateFilterTwoModule,\n        SkeletonModule,\n        DoughnutModule,\n        MatCardModule\n    ]\n})\nexport class ConsumptionBreakupDashboardModule { }\n","import { Injectable } from '@angular/core';\nimport { MatDialog } from '@angular/material/dialog';\n\nimport { TrendComponent } from '../component/_shared/dialog/trend/trend.component';\n\n@Injectable({\n    providedIn: 'root'\n})\n\nexport class TrendService {\n\n    constructor(\n        private dialog: MatDialog,\n    ) { }\n\n    openDialog(trendData) {\n        let dialogRef;\n        dialogRef = this.dialog.open(TrendComponent, {\n            data: {\n                trendData: trendData\n            },\n            minWidth: '620px',\n            maxWidth: '620px'\n        });\n    }\n}\n","import { Inject, Injectable } from '@angular/core';\nimport { HttpClient, HttpHeaders } from '@angular/common/http';\n\nimport { Observable } from 'rxjs/internal/Observable';\n\nimport { DeviceRecentDataM, OrgRecentDataM } from '../model/recent-data.model';\n\n@Injectable({\n    providedIn: 'root'\n})\nexport class RecentDataController {\n\n    constructor(\n        private http: HttpClient,\n        @Inject('environment') private environment: any\n    ) { }\n\n    getRecentDataWithParam(orgID, requestBody) {\n        let headers = new HttpHeaders().set('skipLoader', 'YES');\n\n        return this.http.post(`${this.environment.TSC_COMMON_API_URL}organizations/${orgID}/data/recent`, requestBody, { headers: headers });\n    }\n\n    getOrgRecentData(orgID, requestBody): Observable<OrgRecentDataM[]> {\n        let headers = new HttpHeaders().set('skipLoader', 'YES');\n\n        return this.http.post<OrgRecentDataM[]>(`${this.environment.TSC_COMMON_API_URL}organizations/${orgID}/layouts/recent-data`, requestBody, { headers: headers });\n    }\n\n    getDeviceRecentData(orgID, requestBody): Observable<DeviceRecentDataM[]> {\n        let headers = new HttpHeaders().set('skipLoader', 'YES');\n\n        return this.http.post<DeviceRecentDataM[]>(`${this.environment.TSC_COMMON_API_URL}organizations/${orgID}/devices/data/recent`, requestBody, { headers: headers });\n    }\n\n}\n","import { Injectable } from '@angular/core';\n\nimport { DeviceRecentData, DeviceRecentDataM, OrgRecentData, OrgRecentDataM } from '../model/recent-data.model';\n\nimport { RecentDataController } from '../controller/recent-data.controller';\n\n@Injectable({\n    providedIn: 'root'\n})\n\nexport class RecentDataService {\n\n    constructor(\n        private recentDataController: RecentDataController\n    ) { }\n\n    async getRecentDataWithParam(orgID, requestBody) {\n        let recentDataWithParam;\n        try {\n            recentDataWithParam = await this.recentDataController.getRecentDataWithParam(orgID, requestBody).toPromise();\n\n            if (recentDataWithParam) {\n                return recentDataWithParam;\n            }\n        } catch (error) {\n            console.error('Error -', error);\n            throw error;\n        }\n    }\n\n    async getOrgRecentData(orgID, requestBody): Promise<OrgRecentDataM[]> {\n        let orgRes;\n        try {\n            orgRes = await this.recentDataController.getOrgRecentData(orgID, requestBody).toPromise();\n\n            if (orgRes) {\n                return orgRes;\n            } else {\n                return [new OrgRecentData()];\n            }\n        } catch (error) {\n            console.error('Error -', error);\n            throw error;\n        }\n    }\n\n    async getDeviceRecentData(orgID, requestBody): Promise<DeviceRecentDataM[]> {\n        let deviceRes;\n        try {\n            deviceRes = await this.recentDataController.getDeviceRecentData(orgID, requestBody).toPromise();\n\n            if (deviceRes) {\n                return deviceRes;\n            } else {\n                return [new DeviceRecentData()];\n            }\n        } catch (error) {\n            console.error('Error -', error);\n            throw error;\n        }\n    }\n\n}","import { Component, ElementRef, OnInit, ViewChild } from '@angular/core';\nimport { FormControl, Validators } from '@angular/forms';\n\nimport { ParameterEntity, EntityType, EntityTypeM } from '../../../model/entity.model';\nimport { OrgRecentData, OrgRecentDataM, RecentDataRequestWithoutParam } from '../../../model/recent-data.model';\n\nimport { EntityService } from '../../../service/entity.service';\nimport { RecentDataService } from '../../../service/recent-data.service';\nimport { TrendService } from '../../../service/trend.service';\n\n// tsc-library\nimport { COMMON_CONSTANT, FormErrorEnum, MatSelectSearchService, MaterialFormFieldAppearance, SearchBarTwoComponent } from '@library/tsc-common';\nimport { StorageService } from '@library/storage-service';\nimport { DateService } from '@library/date';\n// /tsc-library/\n\n@Component({\n    selector: 'lib-entity',\n    templateUrl: './entity.component.html',\n    styleUrls: ['./entity.component.scss']\n})\nexport class EntityDashboardComponent implements OnInit {\n\n    commonConstant = COMMON_CONSTANT;\n    materialFormFieldAppearance = MaterialFormFieldAppearance;\n\n    FormErrorEnum = FormErrorEnum;\n\n    orgID: any;\n    layoutID: any;\n    timezone: any;\n    facilityName: string;\n    isAccordionOpen: boolean = true;\n\n    //loader variable declaration\n    entityTypeLoader: boolean = true;\n    entityDeviceLoader: boolean = false;\n    realTimeDeviceDataLoader: boolean = false;\n\n    entityTypeM = [new EntityType()];\n    entityDeviceM = new ParameterEntity();\n    filteredEntityDeviceM: any[] = [];\n    orgRecentDataM = [new OrgRecentData()];\n\n    entityTypeFC: FormControl = new FormControl('', Validators.required);\n    entityFC: FormControl = new FormControl('', Validators.required);\n\n    entityTypeSearchUtil: MatSelectSearchService = new MatSelectSearchService(['type']);\n\n    @ViewChild('searchBar') searchBar: SearchBarTwoComponent;\n    @ViewChild('scrollContainer') scrollContainer: ElementRef;\n\n    constructor(\n        private storageService: StorageService,\n        private entityService: EntityService,\n        private recentDataService: RecentDataService,\n        public dateService: DateService,\n        private trendService: TrendService\n    ) { }\n\n    ngOnInit(): void {\n        this.orgID = this.storageService.getStorage('currentOrgID');\n        this.layoutID = this.storageService.getStorage('layoutID');\n        this.timezone = this.storageService.getStorage('timezone');\n\n        this.getEntityTypeByLayoutID();\n    }\n\n    async getEntityTypeByLayoutID() {\n        try {\n            this.entityTypeM = <EntityTypeM[]>await this.entityService.getEntityTypeByLayoutID(this.orgID, 'YES');\n\n            this.entityTypeSearchUtil.entityArr = this.entityTypeM;\n            this.entityTypeSearchUtil.createSubscription();\n\n            if (this.entityTypeM && this.entityTypeM.length > 0) {\n                const defaultEntityType = this.entityTypeM[0].type;\n\n                if (defaultEntityType) {\n                    this.entityTypeFC.patchValue(defaultEntityType);\n                    this.getEntitiesWithDevicesByLayoutID(this.entityTypeFC.value);\n                }\n            }\n        } catch (error) {\n            console.error(\"Error in getEntityTypeByLayoutID()\", error);\n        } finally {\n            this.entityTypeLoader = false;\n        }\n    }\n\n    entityTypeChange(selectedType) {\n        this.entityFC.setValue('');\n        this.entityTypeFC.patchValue(selectedType);\n\n        this.orgRecentDataM = [new OrgRecentData()];\n        this.getEntitiesWithDevicesByLayoutID(selectedType);\n    }\n\n    async getEntitiesWithDevicesByLayoutID(entityType) {\n        try {\n            this.entityDeviceLoader = true;\n\n            let requestBody = {\n                'entityType': [entityType]\n            };\n\n            this.entityDeviceM = await this.entityService.getEntitiesWithDevicesByLayoutID(this.orgID, this.layoutID, requestBody, 'YES');\n            this.filteredEntityDeviceM = [this.entityDeviceM];\n\n        } catch (error) {\n            console.error(\"Error in getEntitiesWithDevicesByLayoutID()\", error);\n        } finally {\n            this.entityDeviceLoader = false;\n        }\n    }\n\n    searchFn(value: string) {\n        const searchTerm = value.trim().toLowerCase();\n\n        if (searchTerm.length > 0) {\n            this.filteredEntityDeviceM = this.searchEntities([this.entityDeviceM], searchTerm);\n        } else {\n            this.searchBar.searchClear();\n            this.filteredEntityDeviceM = [this.entityDeviceM];\n        }\n    }\n\n    searchEntities(entities: any[], searchTerm: string): any[] {\n        let results: any[] = [];\n\n        entities.forEach(entity => {\n            if (entity.name.toLowerCase().includes(searchTerm)) {\n                results.push(entity);\n            } else if (entity.children && entity.children.length > 0) {\n                const matchingChildren = this.searchEntities(entity.children, searchTerm);\n                if (matchingChildren.length > 0) {\n                    const parentCopy = Object.assign({}, entity);\n                    parentCopy.children = matchingChildren;\n                    results.push(parentCopy);\n                }\n            }\n        });\n\n        return results;\n    }\n\n    openAccordion() {\n        this.isAccordionOpen = true;\n    }\n\n    closeAccordion() {\n        this.isAccordionOpen = false;\n    }\n\n    isDeviceAttached(entity: any): boolean {\n        return (entity.type == 'FACILITY' || entity.type == 'ENTITY') && entity.children && entity.children.some(child => child.type == 'DEVICE');\n    }\n\n    onEntityDeviceSelection() {\n        const selectedValue = this.entityFC.value;\n        this.realTimeDeviceDataLoader = true;\n        this.getOrgRecentData(selectedValue);\n    }\n\n    getTooltipLabel(entity: any): string {\n        if (entity.type == 'FACILITY') {\n            return 'Facility';\n        } else if (entity.type == 'ENTITY') {\n            return 'Entity';\n        } else if (entity.type == 'DEVICE') {\n            return 'Device';\n        }\n    }\n\n    async getOrgRecentData(selectedValue) {\n        try {\n            let requestBody = new RecentDataRequestWithoutParam();\n\n            requestBody.entityID = selectedValue;\n            requestBody.timezone = this.timezone;\n            requestBody.backscan = 1;\n\n            this.orgRecentDataM = <OrgRecentDataM[]>await this.recentDataService.getOrgRecentData(this.orgID, requestBody);\n        } catch (error) {\n            console.error(\"Error in getOrgRecentData()\", error);\n        } finally {\n            this.realTimeDeviceDataLoader = false;\n        }\n    }\n\n    showTrend(paramMetric, entityID, deviceID) {\n        let requestBody = {\n            paramMetric: paramMetric,\n            entityID: entityID,\n            deviceID: deviceID\n        };\n        this.trendService.openDialog(requestBody);\n    }\n\n}\n","<div class=\"card main-card cardOverwrite h100\">\n    <div class=\"headerContainer\">\n        <div class=\"headerLeftContainer\">\n            <div class=\"pageTitle\">Entity Dashboard</div>\n        </div>\n    </div>\n\n    <div class=\"card-body\">\n        <div class=\"row\">\n            <ng-container *ngIf=\"entityTypeLoader; else showEntityType\">\n                <ng-container *ngTemplateOutlet=\"showLoader; context: { count: 1 }\"></ng-container>\n            </ng-container>\n\n            <ng-template #showEntityType>\n                <div class=\"col-sm-3\">\n                    <mat-form-field class=\"matFieldWidth100\" [appearance]=\"materialFormFieldAppearance.FORM_FIELD_APPEARANCE\">\n                        <mat-label>Select entity type</mat-label>\n                        <mat-select (selectionChange)=\"entityTypeChange($event.value)\" [formControl]=\"entityTypeFC\" required>\n                            <ng-container *ngIf=\"entityTypeM && entityTypeM.length > 0 && entityTypeM?.[0]?.type; else noDataFound\">\n                                <mat-option>\n                                    <ngx-mat-select-search [formControl]=\"entityTypeSearchUtil.filterFC\"\n                                        placeholderLabel=\"Search by name\" noEntriesFoundLabel=\"No matching name found.\">\n                                    </ngx-mat-select-search>\n                                </mat-option>\n                                <mat-option *ngFor=\"let type of entityTypeSearchUtil.filteredEntities | async\"\n                                    [value]=\"type.type\">\n                                    {{ type.type | titlecase }}\n                                </mat-option>\n                            </ng-container>\n                            <ng-template #noDataFound>\n                                <mat-option disabled>\n                                    {{ commonConstant.NO_DATA_FOUND }}\n                                </mat-option>\n                            </ng-template>\n                        </mat-select>\n                        <mat-error *ngIf=\"entityTypeFC.touched && entityTypeFC.hasError('required')\">\n                            {{ FormErrorEnum.REQUIRED }}\n                        </mat-error>\n                    </mat-form-field>\n                </div>\n            </ng-template>\n        </div>\n\n        <div class=\"row mt-2\">\n            <div class=\"col-sm-6\">\n                <mat-accordion>\n                    <mat-expansion-panel class=\"matAccordion\" [expanded]=\"isAccordionOpen\" (opened)=\"openAccordion()\"\n                        (closed)=\"closeAccordion()\">\n                        <mat-expansion-panel-header>\n                            <mat-panel-title>\n                                <div class=\"cardTitle\">\n                                    Select entity\n                                </div>\n                            </mat-panel-title>\n                        </mat-expansion-panel-header>\n\n                        <div class=\"row\">\n                            <div class=\"col-sm-12\">\n                                <lib-search-bar-two class=\"float-end me-3\" #searchBar searchBy=\"name\"\n                                    (emitSearch)=\"searchFn($event)\">\n                                </lib-search-bar-two>\n                            </div>\n                        </div>\n                        \n                        <perfect-scrollbar class=\"scrollHeight\" [config]=\"{useBothWheelAxes: true, suppressScrollX: false, suppressScrollY: false}\" #scrollContainer>\n                            <ng-container *ngIf=\"entityDeviceLoader; else entityDeviceView\">\n                                <div class=\"mt-2\">\n                                    <ng-container *ngTemplateOutlet=\"showLoader; context: { count: 3 }\"></ng-container>\n                                </div>\n                            </ng-container>\n                            <ng-template #entityDeviceView>\n                                <mat-radio-group [formControl]=\"entityFC\" (change)=\"onEntityDeviceSelection()\">\n                                    <div *ngFor=\"let entity of filteredEntityDeviceM\">\n                                        <ng-container *ngTemplateOutlet=\"entityTemplate; context:{ $implicit: entity }\"></ng-container>\n                                    </div>\n\n                                    <ng-template #entityTemplate let-entity>\n                                        <div class=\"ms-3 mt-2\">\n                                            <ng-container *ngIf=\"isDeviceAttached(entity); else entityView\">\n                                                <mat-radio-button class=\"radioBtnLabel me-2\" [value]=\"entity.id\">\n                                                    <span class=\"badge rounded-pill\" [ngClass]=\"{'facility': entity.type == 'FACILITY', 'entity': entity.type == 'ENTITY', 'device': entity.type == 'DEVICE'}\"\n                                                        [matTooltip]=\"getTooltipLabel(entity)\" matTooltipPosition=\"above\">\n                                                        <div class=\"d-flex align-items-center\">\n                                                            <span class=\"material-symbols-outlined me-2\" *ngIf=\"entity.type == 'FACILITY'\">factory</span>\n                                                            <span class=\"material-symbols-outlined me-2\" *ngIf=\"entity.type == 'ENTITY'\">domain</span>\n                                                            <span class=\"material-symbols-outlined me-2\" *ngIf=\"entity.type == 'DEVICE'\">devices</span>\n                                                            {{ entity.name }}\n                                                        </div>\n                                                    </span>\n                                                </mat-radio-button>\n                                            </ng-container>\n\n                                            <ng-template #entityView>\n                                                <span class=\"badge rounded-pill\" [ngClass]=\"{'facility': entity.type == 'FACILITY', 'entity': entity.type == 'ENTITY', 'device': entity.type == 'DEVICE'}\"\n                                                    [matTooltip]=\"getTooltipLabel(entity)\" matTooltipPosition=\"above\">\n                                                    <div class=\"d-flex align-items-center\">\n                                                        <span class=\"material-symbols-outlined me-2\" *ngIf=\"entity.type == 'FACILITY'\">factory</span>\n                                                        <span class=\"material-symbols-outlined me-2\" *ngIf=\"entity.type == 'ENTITY'\">domain</span>\n                                                        <span class=\"material-symbols-outlined me-2\" *ngIf=\"entity.type == 'DEVICE'\">devices</span>\n                                                        {{ entity.name }}\n                                                    </div>\n                                                </span>\n                                            </ng-template>\n                                        </div>\n\n                                        <div *ngIf=\"entity.children && entity.children.length > 0\" class=\"ms-3 mt-2\">\n                                            <ng-container *ngFor=\"let child of entity.children\">\n                                                <ng-container\n                                                    *ngTemplateOutlet=\"entityTemplate; context:{ $implicit: child }\"></ng-container>\n                                            </ng-container>\n                                        </div>\n                                    </ng-template>\n                                </mat-radio-group>\n                                \n                            </ng-template>\n                        </perfect-scrollbar>\n                    </mat-expansion-panel>\n                </mat-accordion>\n            </div>\n\n            <div class=\"col-sm-6\">\n                <mat-card class=\"cardOverwrite cardBackgroundColor cardHeight2\">\n                    <div class=\"row\">\n                        <div class=\"col-sm-12\">\n                            <div class=\"d-flex align-items-center\">\n                                <span class=\"material-symbols-outlined me-3\">\n                                    devices\n                                </span>\n                                <span class=\"cardTitle mt-1\">\n                                    Real time data\n                                </span>\n                            </div>\n                        </div>\n                    </div>\n                    <hr>\n                    <perfect-scrollbar class=\"scrollHeight\">\n                        <ng-container *ngIf=\"realTimeDeviceDataLoader; else realTimeDeviceDataView\">\n                            <ng-container *ngTemplateOutlet=\"showLoader; context: { count: 3 }\"></ng-container>\n                        </ng-container>\n\n                        <ng-template #realTimeDeviceDataView>\n                            <ng-container *ngFor=\"let realTimeData of orgRecentDataM;\">\n                                <ng-container *ngTemplateOutlet=\"parameterSummary; context: {\n                                    device: realTimeData?.deviceData,\n                                    entityID: realTimeData?.entityID\n                                }\"></ng-container>\n                            </ng-container>\n                        </ng-template>\n                    </perfect-scrollbar>\n                </mat-card>\n            </div>\n        </div>\n    </div>\n</div>\n\n<ng-template #parameterSummary let-device=\"device\" let-entityID=\"entityID\">\n    <ng-container *ngFor=\"let deviceData of device;\">\n        <div class=\"row\">\n            <div class=\"col-sm-12\">\n                <div class=\"d-flex align-items-center fw-bold\">\n                    <span class=\"material-symbols-outlined me-1\"\n                        [ngClass]=\"{'text-success': deviceData.status == 'LIVE', 'text-secondary': deviceData.status == 'OFFLINE' || deviceData.status == 'NO_DATA'}\">\n                        devices\n                    </span>\n                    {{ deviceData.name ? deviceData.name : commonConstant.HYPHEN }}\n                </div>\n            </div>\n        </div>\n        <div class=\"row mt-2\" *ngFor=\"let parameterData of deviceData.paramData;\">\n            <div class=\"col-sm-4 text-start text-secondary\">\n                {{ parameterData.label ? parameterData.label : commonConstant.HYPHEN }}\n            </div>\n            <div class=\"col-sm-4 text-center\">\n                <a class=\"text-primary cursorPointer fw-bold\" matTooltip=\"Trend\" matTooltipPosition=\"above\"\n                    (click)=\"showTrend(parameterData?.name, entityID, deviceData?.id)\">\n                    <span> {{ parameterData?.data?.value ? parameterData?.data?.value : commonConstant.HYPHEN }} </span>\n                    <span> {{ parameterData?.data?.value ? parameterData?.unit : '' }} </span>\n                </a>\n            </div>\n            <div class=\"col-sm-4 text-start text-secondary\">\n                {{ dateService.getRelativeTimeAgoLabel(parameterData?.data?.date, timezone) }}\n            </div>\n        </div>\n        <hr>\n    </ng-container>\n</ng-template>\n\n<ng-template #showLoader let-count=\"count\">\n    <lib-skeleton-loader [count]=\"count\" [appearance]=\"''\"\n        [theme]=\"{ 'border-radius': '16px', height: '40px', 'background-color': 'rgb(230 232 235)' }\"></lib-skeleton-loader>\n</ng-template>","import { NgModule } from '@angular/core';\nimport { RouterModule, Routes } from '@angular/router';\n\nimport { EntityDashboardComponent } from './entity.component';\n\nconst routes: Routes = [\n    {\n        path: '',\n        component: EntityDashboardComponent\n    }\n];\n\n@NgModule({\n    imports: [RouterModule.forChild(routes)],\n    exports: [RouterModule]\n})\nexport class EntityDashboardRoutingModule { }\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { ReactiveFormsModule } from '@angular/forms';\n\nimport { MatCardModule } from '@angular/material/card';\nimport { MatFormFieldModule } from '@angular/material/form-field';\nimport { MatInputModule } from '@angular/material/input';\nimport { MatSelectModule } from '@angular/material/select';\nimport { MatButtonToggleModule } from '@angular/material/button-toggle';\nimport { MatExpansionModule } from '@angular/material/expansion';\nimport { MatOptionModule } from '@angular/material/core';\nimport { MatRadioModule } from '@angular/material/radio';\nimport { MatTooltipModule } from '@angular/material/tooltip';\n\nimport { NgxMatSelectSearchModule } from 'ngx-mat-select-search';\nimport { PerfectScrollbarModule } from 'ngx-perfect-scrollbar';\n\nimport { TrendModule } from '../../_shared/dialog/trend/trend.module';\nimport { TrendService } from '../../../service/trend.service';\n\nimport { EntityDashboardComponent } from './entity.component';\nimport { EntityDashboardRoutingModule } from './entity-routing.module';\n\n// tsc-library\nimport { SearchBarTwoModule, SkeletonModule } from '@library/tsc-common';\n// /tsc-library/\n\n@NgModule({\n    declarations: [\n        EntityDashboardComponent\n    ],\n    imports: [\n        CommonModule,\n        EntityDashboardRoutingModule,\n        ReactiveFormsModule,\n        MatCardModule,\n        MatFormFieldModule,\n        MatInputModule,\n        MatSelectModule,\n        MatButtonToggleModule,\n        MatExpansionModule,\n        MatOptionModule,\n        MatRadioModule,\n        MatTooltipModule,\n        NgxMatSelectSearchModule,\n        PerfectScrollbarModule,\n        TrendModule,\n        SkeletonModule,\n        SearchBarTwoModule\n    ],\n    providers: [TrendService]\n})\nexport class EntityDashboardModule { }\n","import { Injectable } from \"@angular/core\";\n\nimport { AlertM } from \"../model/alert.model\";\n\n@Injectable({\n    providedIn: 'root'\n})\n\nexport class AlertService {\n\n    setAlertProperties(alertObject: AlertM, label: string, content: string, type: string, icon: string): AlertM {\n        alertObject.showAlert = true;\n        alertObject.alertLabel = label;\n        alertObject.alertContent = content;\n        alertObject.messageAlertType = type;\n        alertObject.messageAlertIcon = icon;\n\n        return alertObject;\n    }\n\n    resetAlertProperties(alertObject: AlertM): AlertM {\n        alertObject.showAlert = false;\n        alertObject.alertLabel = '';\n        alertObject.alertContent = '';\n        alertObject.messageAlertType = '';\n        alertObject.messageAlertIcon = '';\n\n        return alertObject;\n    }\n}","import { Component, OnInit } from '@angular/core';\nimport { Router } from '@angular/router';\nimport { FormControl, Validators } from '@angular/forms';\n\nimport { DashboardErrorEnum } from '../../../enum/error.enum';\n\nimport { OrgRecentData, OrgRecentDataM, RecentDataRequestWithParam, RecentDataRequestWithoutParam } from '../../../model/recent-data.model';\nimport { Alert, AlertM } from '../../../model/alert.model';\nimport { EntityType, EntityTypeM } from '../../../model/entity.model';\n\nimport { RecentDataService } from '../../../service/recent-data.service';\nimport { TrendService } from '../../../service/trend.service';\nimport { AlertService } from '../../../service/alert.service';\nimport { EntityService } from '../../../service/entity.service';\n\n// tsc-library\nimport { DateService } from '@library/date';\nimport { StorageService } from '@library/storage-service';\nimport { COMMON_CONSTANT, FormErrorEnum, MatSelectSearchService, MaterialFormFieldAppearance, MessageAlertIconEnum, MessageAlertTypeEnum } from '@library/tsc-common';\n// /tsc-library/\n\n@Component({\n    selector: 'app-facility',\n    templateUrl: './facility.component.html',\n    styleUrls: []\n})\n\nexport class FacilityComponent implements OnInit {\n\n    commonConstant = COMMON_CONSTANT;\n    materialFormFieldAppearance = MaterialFormFieldAppearance;\n\n    FormErrorEnum = FormErrorEnum;\n\n    orgID: any;\n    timezone: any;\n    apiTimer: any;\n    entityTypeLoader: boolean = true;\n    facilityDataLoader: boolean = false;\n\n    entityTypeM = [new EntityType()];\n    orgRecentDataM = [new OrgRecentData()];\n    alertObj: AlertM = new Alert();\n\n    last48HrsMeterData: { [deviceID: string]: { [paramName: string]: any } } = {};\n\n    entityTypeFC: FormControl = new FormControl('', Validators.required);\n    entityTypeSearchUtil: MatSelectSearchService = new MatSelectSearchService(['type']);\n\n    constructor(\n        private router: Router,\n        private storageService: StorageService,\n        public dateService: DateService,\n        private entityService: EntityService,\n        private trendService: TrendService,\n        private recentDataService: RecentDataService,\n        private alertService: AlertService,\n    ) { }\n\n    ngOnInit(): void {\n        this.orgID = this.storageService.getStorage('currentOrgID');\n        this.timezone = this.storageService.getStorage('timezone');\n\n        this.getEntityTypeByLayoutID();\n    }\n\n    async getEntityTypeByLayoutID() {\n        try {\n            this.entityTypeM = <EntityTypeM[]>await this.entityService.getEntityTypeByLayoutID(this.orgID, 'YES');\n\n            this.entityTypeSearchUtil.entityArr = this.entityTypeM;\n            this.entityTypeSearchUtil.createSubscription();\n\n            if (this.entityTypeM && this.entityTypeM.length > 0) {\n                const defaultEntityType = this.entityTypeM[0].type;\n\n                if (defaultEntityType) {\n                    this.entityTypeFC.patchValue(defaultEntityType);\n                    this.getOrgRecentData(this.entityTypeFC.value);\n                }\n            }\n        } catch (error) {\n            console.error(\"Error in getEntityTypeByLayoutID()\", error);\n        } finally {\n            this.entityTypeLoader = false;\n        }\n    }\n\n    entityTypeChange(selectedType) {\n\n        // Clear the timer when changing the device\n        clearTimeout(this.apiTimer);\n\n        this.entityTypeFC.patchValue(selectedType);\n\n        this.orgRecentDataM = [new OrgRecentData()];\n        this.getOrgRecentData(selectedType);\n    }\n\n    async getOrgRecentData(entityType) {\n\n        this.facilityDataLoader = true;\n        this.alertService.resetAlertProperties(this.alertObj);\n\n        try {\n            let requestBody = new RecentDataRequestWithoutParam();\n\n            requestBody.timezone = this.timezone;\n            requestBody.entityType = entityType;\n            requestBody.backscan = 1;\n\n            this.orgRecentDataM = <OrgRecentDataM[]>await this.recentDataService.getOrgRecentData(this.orgID, requestBody);\n\n            if (this.orgRecentDataM && this.orgRecentDataM.length == 0) {\n                this.alertService.setAlertProperties(this.alertObj, DashboardErrorEnum.DATA_NOT_FOUND_LABEL, DashboardErrorEnum.DATA_NOT_FOUND_MESSAGE, MessageAlertTypeEnum.WARNING, MessageAlertIconEnum.WARNING_ICON);\n            }\n\n        } catch (error) {\n\n            console.error(`Error in getOrgRecentData()`, error);\n            this.alertService.setAlertProperties(this.alertObj, DashboardErrorEnum.INVALID_ERROR_LABEL, DashboardErrorEnum.INVALID_ERROR_MESSAGE, MessageAlertTypeEnum.DANGER, MessageAlertIconEnum.DANGER_ICON);\n\n        } finally {\n            this.apiTimer = setTimeout(() => {\n                this.getOrgRecentData(entityType);\n            }, 300000);\n            this.facilityDataLoader = false;\n        }\n    }\n\n    async getLast48HrsMeterData(deviceID, paramName) {\n        try {\n            let requestData = new RecentDataRequestWithParam();\n\n            requestData.params = [{ name: paramName }];\n            requestData.deviceID = [deviceID];\n            requestData.backscan = 48;\n            requestData.timezone = this.timezone;\n\n            const result = await this.recentDataService.getRecentDataWithParam(this.orgID, requestData);\n            \n            if (result.length > 0) {\n                if (!this.last48HrsMeterData[deviceID]) {\n                    this.last48HrsMeterData[deviceID] = {};\n                }\n                this.last48HrsMeterData[deviceID][paramName] = result[0];\n            } else {\n                if (!this.last48HrsMeterData[deviceID]) {\n                    this.last48HrsMeterData[deviceID] = {};\n                }\n                this.last48HrsMeterData[deviceID][paramName] = null;\n            }\n\n        } catch (error) {\n            console.error(`Error in getLast48HrsMeterData()`, error);\n        }\n    }\n\n    showEntityConsumption(id) {\n        this.router.navigate(['/analytics-insights/consumption'], { queryParams: { entityID: id } });\n    }\n\n    showTrend(paramMetric, deviceID, entityID) {\n        let requestBody = {\n            paramMetric: paramMetric,\n            deviceID: deviceID,\n            entityID: entityID\n        };\n        this.trendService.openDialog(requestBody);\n    }\n\n    ngOnDestroy(): void {\n        clearTimeout(this.apiTimer);\n    }\n\n}","<div class=\"card main-card cardOverwrite h100\">\n    <div class=\"headerContainer\">\n        <div class=\"headerLeftContainer\">\n            <div class=\"pageTitle\">Facility Dashboard</div>\n        </div>\n    </div>\n\n    <div class=\"card-body\">\n        <div class=\"row\">\n            <ng-container *ngIf=\"entityTypeLoader; else showEntityType\">\n                <ng-container *ngTemplateOutlet=\"showLoader; context: { count: 1 }\"></ng-container>\n            </ng-container>\n\n            <ng-template #showEntityType>\n                <div class=\"col-sm-3\">\n                    <mat-form-field class=\"matFieldWidth100\"\n                        [appearance]=\"materialFormFieldAppearance.FORM_FIELD_APPEARANCE\">\n                        <mat-label>Select entity type</mat-label>\n                        <mat-select (selectionChange)=\"entityTypeChange($event.value)\" [formControl]=\"entityTypeFC\"\n                            required>\n                            <ng-container *ngIf=\"entityTypeM && entityTypeM.length > 0 && entityTypeM?.[0]?.type; else noDataFound\">\n                                <mat-option>\n                                    <ngx-mat-select-search [formControl]=\"entityTypeSearchUtil.filterFC\"\n                                        placeholderLabel=\"Search by name\" noEntriesFoundLabel=\"No matching name found.\">\n                                    </ngx-mat-select-search>\n                                </mat-option>\n                                <mat-option *ngFor=\"let type of entityTypeSearchUtil.filteredEntities | async\"\n                                    [value]=\"type.type\">\n                                    {{ type.type | titlecase }}\n                                </mat-option>\n                            </ng-container>\n                            <ng-template #noDataFound>\n                                <mat-option disabled>\n                                    {{ commonConstant.NO_DATA_FOUND }}\n                                </mat-option>\n                            </ng-template>\n                        </mat-select>\n                        <mat-error *ngIf=\"entityTypeFC.touched && entityTypeFC.hasError('required')\">\n                            {{ FormErrorEnum.REQUIRED }}\n                        </mat-error>\n                    </mat-form-field>\n                </div>\n            </ng-template>\n        </div>\n\n        <div class=\"row mt-2\" *ngIf=\"facilityDataLoader\">\n            <ng-container *ngTemplateOutlet=\"showLoader; context: { count: 3 }\"></ng-container>\n        </div>\n\n        <div class=\"row\">\n            <div class=\"col-sm-12\">\n                <lib-message-alert *ngIf=\"alertObj.showAlert\" [labelInp]=\"alertObj.alertLabel\"\n                    [contentInp]=\"alertObj.alertContent\" [messageAlertTypeInp]=\"alertObj.messageAlertType\"\n                    [messageAlertIconInp]=\"alertObj.messageAlertIcon\">\n                </lib-message-alert>\n            </div>\n        </div>\n\n        <div class=\"row mt-2\" *ngIf=\"orgRecentDataM.length > 0 && orgRecentDataM[0].orgID != null\">\n            <div class=\"col-sm-12 mb-3\" *ngFor=\"let recentRes of orgRecentDataM\">\n                <mat-card class=\"cardOverwrite border\">\n                    <div class=\"row mb-2\">\n                        <div class=\"col-sm-6\">\n                            <div class=\"d-flex align-items-center\">\n                                <span class=\"cardTitle me-2\">{{ recentRes.entityName }}</span>\n                                <span class=\"badge rounded-pill info\">\n                                    {{ recentRes.entityType }}\n                                </span>\n                            </div>\n                        </div>\n                        <div class=\"col-sm-6 text-end\" *ngIf=\"recentRes.entityStatusFlag\">\n                            <a class=\"text-primary cursorPointer\" matTooltip=\"Entity consumption\"\n                                matTooltipPosition=\"below\"\n                                (click)=\"showEntityConsumption(recentRes.entityID)\">\n                                <span class=\"material-symbols-outlined fs-4 fw-bold\">monitoring</span>\n                            </a>\n                        </div>\n                    </div>\n\n                    <div class=\"row\">\n                        <div class=\"col-sm-12\" *ngFor=\"let deviceRes of recentRes.deviceData\">\n                            <div class=\"d-flex align-items-center\">\n                                <span class=\"material-symbols-outlined me-1\"\n                                    [ngClass]=\"{'text-success': deviceRes.status == 'LIVE', 'text-secondary': deviceRes.status == 'OFFLINE' || deviceRes.status == 'NO_DATA'}\">\n                                    devices\n                                </span>\n                                {{ deviceRes.name }}\n                            </div>\n\n                            <div class=\"row mt-2\">\n                                <div class=\"col-sm-4 mb-3\" *ngFor=\"let paramRes of deviceRes.paramData\">\n                                    <mat-card class=\"cardOverwrite cardBackgroundColor\">\n                                            <ng-container *ngTemplateOutlet=\"parameterData; context: {\n                                                duration: last48HrsMeterData[deviceRes.id]?.[paramRes.name]?.data?.date ? dateService.getRelativeTimeAgoLabel(last48HrsMeterData[deviceRes.id][paramRes.name]?.data?.date, timezone) : dateService.getRelativeTimeAgoLabel(paramRes?.data?.date, timezone),\n                                                value: last48HrsMeterData[deviceRes.id]?.[paramRes.name]?.data?.value != null ? last48HrsMeterData[deviceRes.id][paramRes.name]?.data?.value : paramRes?.data?.value,\n                                                unit: paramRes?.unit,\n                                                label: paramRes?.label,\n                                                entityID: recentRes?.entityID,\n                                                deviceID: deviceRes?.id,\n                                                paramName: paramRes?.name,\n                                                paramStatus: paramRes?.status\n                                            }\"></ng-container>\n                                    </mat-card>\n                                </div>\n                            </div>\n                        </div>\n                    </div>\n                </mat-card>\n            </div>\n        </div>\n    </div>\n</div>\n\n<ng-template #parameterData let-duration=\"duration\" let-label=\"label\" let-value=\"value\" let-unit=\"unit\"\n    let-entityID=\"entityID\" let-deviceID=\"deviceID\" let-paramName=\"paramName\" let-paramStatus=\"paramStatus\">\n    <div class=\"row\">\n        <div class=\"col-sm-6 textDurationWithAgoTime\">\n            {{ duration }}\n        </div>\n        <div class=\"col-sm-6 text-end\">\n            <a *ngIf=\"paramStatus == 'OFFLINE'\" class=\"text-secondary cursorPointer me-2\"\n                matTooltip=\"Currently parameter is offline, click here to see data of last 48 hrs.\" matTooltipPosition=\"below\"\n                (click)=\"getLast48HrsMeterData(deviceID, paramName)\">\n                <span class=\"material-symbols-outlined fs-5 fw-bold\">devices</span>\n            </a>\n\n            <a class=\"text-primary cursorPointer\" matTooltip=\"Trend\" matTooltipPosition=\"below\"\n                (click)=\"showTrend(paramName, deviceID, entityID)\">\n                <span class=\"material-symbols-outlined fs-5 fw-bold\">trending_up</span>\n            </a>\n        </div>\n    </div>\n    <div class=\"row mt-3\">\n        <div class=\"col-sm-12 text-center\">\n            <span class=\"fs-1 fw-bold text-primary\">{{ value ? value : commonConstant.HYPHEN }}</span>\n            <span class=\"text-secondary fw-bold\"> {{ value ? unit : '' }} </span>\n        </div>\n    </div>\n    <div class=\"row mt-4 mb-4\">\n        <div class=\"col-sm-12 fs-5 text-center\">\n            {{ label }}\n        </div>\n    </div>\n</ng-template>\n\n<ng-template #showLoader let-count=\"count\">\n    <lib-skeleton-loader [count]=\"count\" [appearance]=\"''\"\n        [theme]=\"{ 'border-radius': '16px', height: '40px', 'background-color': 'rgb(230 232 235)' }\"></lib-skeleton-loader>\n</ng-template>","import { NgModule } from '@angular/core';\nimport { RouterModule, Routes } from '@angular/router';\n\nimport { FacilityComponent } from './facility.component';\n\nconst routes: Routes = [\n    {\n        path: '',\n        component: FacilityComponent\n    }\n];\n\n@NgModule({\n    imports: [RouterModule.forChild(routes)],\n    exports: [RouterModule]\n})\nexport class FacilityRoutingModule { }\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { ReactiveFormsModule } from '@angular/forms';\n\nimport { MatCardModule } from '@angular/material/card';\nimport { MatTooltipModule } from '@angular/material/tooltip';\nimport { MatFormFieldModule } from '@angular/material/form-field';\nimport { MatInputModule } from '@angular/material/input';\nimport { MatSelectModule } from '@angular/material/select';\nimport { MatOptionModule } from '@angular/material/core';\n\nimport { NgxMatSelectSearchModule } from 'ngx-mat-select-search';\n\nimport { TrendModule } from '../../_shared/dialog/trend/trend.module';\nimport { TrendService } from '../../../service/trend.service';\n\nimport { FacilityComponent } from './facility.component';\nimport { FacilityRoutingModule } from './facility-routing.module';\n\n// tsc-library\nimport { MessageAlertModule, SearchBarTwoModule, SkeletonModule } from '@library/tsc-common';\n// /tsc-library/\n\n@NgModule({\n    declarations: [\n        FacilityComponent\n    ],\n    imports: [\n        CommonModule,\n        FacilityRoutingModule,\n        ReactiveFormsModule,\n        MatCardModule,\n        MatTooltipModule,\n        MatFormFieldModule,\n        MatInputModule,\n        MatSelectModule,\n        MatOptionModule,\n        NgxMatSelectSearchModule,\n        TrendModule,\n        SkeletonModule,\n        SearchBarTwoModule,\n        MessageAlertModule\n    ],\n    providers: [TrendService]\n})\nexport class FacilityModule { }\n","import { Inject, Injectable } from '@angular/core';\nimport { HttpClient, HttpParams } from '@angular/common/http';\n\nimport { Observable } from 'rxjs';\n\nimport { DevicesWithEntitiesM } from '../model/device.model';\n\n@Injectable({\n    providedIn: 'root'\n})\n\nexport class EntityDeviceController {\n\n    constructor(\n        private http: HttpClient,\n        @Inject('environment') private environment: any\n    ) { }\n\n    getDevicesWithEntities(orgID, requestBody): Observable<DevicesWithEntitiesM[]> {\n        return this.http.post<DevicesWithEntitiesM[]>(`${this.environment.TSC_COMMON_API_URL}organizations/${orgID}/layouts/entities/devices`, requestBody);\n    }\n\n    getDevicesWithEntitiesByParameter(orgID, paramName): Observable<DevicesWithEntitiesM[]> {\n        let params = new HttpParams();\n        params = params.append('paramName', paramName);\n\n        return this.http.get<DevicesWithEntitiesM[]>(`${this.environment.TSC_COMMON_API_URL}organizations/${orgID}/entities-devices`, { params: params });\n    }\n}\n","import { Injectable } from '@angular/core';\n\nimport { DevicesWithEntities, DevicesWithEntitiesM } from '../model/device.model';\n\nimport { EntityDeviceController } from '../controller/entity-device.controller';\n\n@Injectable({\n    providedIn: 'root'\n})\n\nexport class EntityDeviceService {\n\n    constructor(\n        private entityDeviceController: EntityDeviceController\n    ) { }\n\n    async getDevicesWithEntities(orgID, requestBody): Promise<DevicesWithEntitiesM[]> {\n        let devicesWithEntitiesM: DevicesWithEntitiesM[];\n        try {\n            devicesWithEntitiesM = await this.entityDeviceController.getDevicesWithEntities(orgID, requestBody).toPromise();\n\n            if (devicesWithEntitiesM) {\n                return devicesWithEntitiesM;\n            } else {\n                return [new DevicesWithEntities()];\n            }\n        } catch (error) {\n            console.error('Error -', error);\n            return [new DevicesWithEntities()];\n        }\n    }\n\n    async getDevicesWithEntitiesByParameter(orgID, paramMetric): Promise<DevicesWithEntitiesM[]> {\n        let devicesWithEntitiesM: DevicesWithEntitiesM[];\n        try {\n            devicesWithEntitiesM = await this.entityDeviceController.getDevicesWithEntitiesByParameter(orgID, paramMetric).toPromise();\n\n            if (devicesWithEntitiesM) {\n                return devicesWithEntitiesM;\n            } else {\n                return [new DevicesWithEntities()];\n            }\n        } catch (error) {\n            console.error('Error -', error);\n            return [new DevicesWithEntities()];\n        }\n    }\n\n}","import { Component, OnInit } from '@angular/core';\nimport { FormControl } from '@angular/forms';\n\nimport { DashboardErrorEnum } from '../../../enum/error.enum';\n\nimport { DevicesWithEntities, DevicesWithEntitiesM } from '../../../model/device.model';\nimport { Parameter, ParameterM } from '../../../model/parameter.model';\nimport { Alert, AlertM } from '../../../model/alert.model';\nimport { RecentDataRequestWithParam } from '../../../model/recent-data.model';\n\nimport { RecentDataService } from '../../../service/recent-data.service';\nimport { ParameterService } from '../../../service/parameter.service';\nimport { EntityDeviceService } from '../../../service/entity-device.service';\nimport { AlertService } from '../../../service/alert.service';\nimport { TrendService } from '../../../service/trend.service';\n\n// tsc-library\nimport { StorageService } from '@library/storage-service';\nimport { COMMON_CONSTANT, FormErrorEnum, MatSelectSearchService, MaterialFormFieldAppearance, MessageAlertIconEnum, MessageAlertTypeEnum } from '@library/tsc-common';\nimport { DateService } from '@library/date';\nimport { ApplicationKeyID } from '@library/application-service';\n// /tsc-library/\n\n@Component({\n    selector: 'lib-meter-data',\n    templateUrl: './meter-data.component.html',\n    styles: [\n    ]\n})\nexport class MeterDataDashboardComponent implements OnInit {\n\n    COMMON_CONSTANT = COMMON_CONSTANT;\n\n    MaterialFormFieldAppearance = MaterialFormFieldAppearance;\n    FormErrorEnum = FormErrorEnum;\n\n    orgID: any;\n    applicationKeyID: any;\n    paramMetric: any;\n    entityID: any;\n    timezone: string;\n    meterDataRes: any;\n    last48HrsMeterData: { [key: string]: any } = {};\n    currentParamName: any;\n    apiTimer: any;\n    showAlert: boolean = false;\n    showLoader: boolean = false;\n\n    entityDeviceM = [new DevicesWithEntities()];\n    parameterM = [new Parameter()];\n    alertObj: AlertM = new Alert();\n\n    meterFC: FormControl = new FormControl();\n\n    meterSearchUtil: MatSelectSearchService = new MatSelectSearchService(['name']);\n\n    constructor(\n        private storageService: StorageService,\n        private recentDataService: RecentDataService,\n        private entityDeviceService: EntityDeviceService,\n        private parameterService: ParameterService,\n        private alertService: AlertService,\n        public dateService: DateService,\n        private trendService: TrendService\n    ) { }\n\n    ngOnInit(): void {\n        this.orgID = this.storageService.getStorage('currentOrgID');\n        this.timezone = this.storageService.getStorage('timezone');\n        this.applicationKeyID = this.storageService.getStorage('applicationKeyID');\n\n        if (this.applicationKeyID == ApplicationKeyID.ENERGY_KEY_ID) {\n            this.paramMetric = \"engEnergyUsed\";\n        } else if (this.applicationKeyID == ApplicationKeyID.WATER_KEY_ID) {\n            this.paramMetric = \"gwFlowTotalizer\";\n        }\n\n        this.getDevicesWithEntitiesByParameter();\n    }\n\n    async getDevicesWithEntitiesByParameter() {\n        this.entityDeviceM = <DevicesWithEntitiesM[]>await this.entityDeviceService.getDevicesWithEntitiesByParameter(this.orgID, this.paramMetric);\n\n        this.meterSearchUtil.entityArr = this.entityDeviceM;\n        this.meterSearchUtil.createSubscription();\n\n        if (this.entityDeviceM.length > 0 && this.entityDeviceM?.[0]?.id) {\n            const deviceID = this.entityDeviceM?.[0]?.['devices']?.[0]?.['id'];\n            this.meterFC.patchValue(deviceID);\n\n            this.getParameterList();\n        }\n    }\n\n    meterChange(selectedMeter) {\n        clearTimeout(this.apiTimer);\n        this.showLoader = true;\n\n        this.meterFC.patchValue(selectedMeter);\n        this.getParameterList();\n    }\n\n    getParameterList() {\n        const selectedMeter = this.meterFC.value;\n        this.getParameterByDeviceID(selectedMeter);\n    }\n\n    async getParameterByDeviceID(deviceID) {\n        let requestBody = {};\n        requestBody['deviceID'] = [deviceID];\n\n        this.parameterM = <ParameterM[]>await this.parameterService.getParameterByDeviceID(this.orgID, requestBody);\n\n        if (this.parameterM.length > 0 && this.parameterM?.[0]?.id) {\n            this.getRecentMeterData(deviceID);\n        }\n    }\n\n    async getRecentMeterData(deviceID) {\n\n        this.alertService.resetAlertProperties(this.alertObj);\n\n        try {\n            let requestData = new RecentDataRequestWithParam();\n\n            requestData.params = this.parameterM.map(param => ({ name: param.paramMetric }));\n            requestData.deviceID = [deviceID];\n            requestData.backscan = 1;\n            requestData.timezone = this.timezone;\n\n            this.meterDataRes = await this.recentDataService.getRecentDataWithParam(this.orgID, requestData);\n\n            if (this.meterDataRes?.length == 0) {\n                this.alertService.setAlertProperties(this.alertObj, DashboardErrorEnum.DATA_NOT_FOUND_LABEL, DashboardErrorEnum.DATA_NOT_FOUND_MESSAGE, MessageAlertTypeEnum.WARNING, MessageAlertIconEnum.WARNING_ICON);\n            }\n\n        } catch (error) {\n            console.error(`Error in getRecentMeterData()`, error);\n            this.alertService.setAlertProperties(this.alertObj, DashboardErrorEnum.INVALID_ERROR_LABEL, DashboardErrorEnum.INVALID_ERROR_MESSAGE, MessageAlertTypeEnum.DANGER, MessageAlertIconEnum.DANGER_ICON);\n        } finally {\n            this.apiTimer = setTimeout(() => {\n                this.getRecentMeterData(deviceID);\n            }, 300000);\n            this.showLoader = false;\n        }\n    }\n\n    async getLast48HrsMeterData(paramName) {\n        try {\n            let requestData = new RecentDataRequestWithParam();\n\n            requestData.params = [{ name: paramName }];\n            requestData.deviceID = [this.meterFC.value];\n            requestData.backscan = 48;\n            requestData.timezone = this.timezone;\n\n            const result = await this.recentDataService.getRecentDataWithParam(this.orgID, requestData);\n\n            if (result.length > 0) {\n                this.last48HrsMeterData[paramName] = result[0];\n            } else {\n                this.last48HrsMeterData[paramName] = null;\n            }\n            this.currentParamName = paramName;\n\n        } catch (error) {\n            console.error(`Error in getLast48HrsMeterData()`, error);\n        }\n    }\n\n    showTrend(paramMetric, entityID) {\n        let requestBody = {\n            paramMetric: paramMetric,\n            entityID: entityID,\n            deviceID: this.meterFC.value\n        };\n        this.trendService.openDialog(requestBody);\n    }\n\n    ngOnDestroy(): void {\n        clearTimeout(this.apiTimer);\n    }\n\n}","<div class=\"card main-card cardOverwrite h100\">\n    <div class=\"headerContainer\">\n        <div class=\"headerLeftContainer\">\n            <div class=\"pageTitle\">Meter Data Dashboard</div>\n        </div>\n    </div>\n\n    <div class=\"card-body\">\n        <div class=\"row\">\n            <div class=\"col-sm-3\">\n                <mat-form-field class=\"matFieldWidth100\"\n                    [appearance]=\"MaterialFormFieldAppearance.FORM_FIELD_APPEARANCE\">\n                    <mat-label>Select meter</mat-label>\n                    <mat-select (selectionChange)=\"meterChange($event.value)\" [formControl]=\"meterFC\" required>\n                        <ng-container\n                            *ngIf=\"entityDeviceM && entityDeviceM.length > 0 && entityDeviceM?.[0]?.id; else noDataFound\">\n                            <mat-option>\n                                <ngx-mat-select-search [formControl]=\"meterSearchUtil.filterFC\"\n                                    placeholderLabel=\"Search by entity name\"\n                                    noEntriesFoundLabel=\"No matching name found.\">\n                                </ngx-mat-select-search>\n                            </mat-option>\n                            <mat-optgroup *ngFor=\"let entity of meterSearchUtil.filteredEntities | async\"\n                                [label]=\"entity.name\" [disabled]=\"entity.disabled\">\n                                <mat-option *ngFor=\"let device of entity.devices\" [value]=\"device.id\">\n                                    {{ device.name }}\n                                </mat-option>\n                            </mat-optgroup>\n                        </ng-container>\n                        <ng-template #noDataFound>\n                            <mat-option disabled>\n                                {{ COMMON_CONSTANT.NO_DATA_FOUND }}\n                            </mat-option>\n                        </ng-template>\n                    </mat-select>\n                    <mat-error *ngIf=\"meterFC.touched && meterFC.hasError('required')\">\n                        {{ FormErrorEnum.REQUIRED }}\n                    </mat-error>\n                </mat-form-field>\n            </div>\n        </div>\n\n        <div class=\"row mt-2\">\n            <div class=\"col-sm-12\">\n                <lib-message-alert *ngIf=\"alertObj.showAlert\" [labelInp]=\"alertObj.alertLabel\"\n                    [contentInp]=\"alertObj.alertContent\" [messageAlertTypeInp]=\"alertObj.messageAlertType\"\n                    [messageAlertIconInp]=\"alertObj.messageAlertIcon\">\n                </lib-message-alert>\n            </div>\n        </div>\n\n        <div class=\"row mt-2\">\n            <ng-container *ngIf=\"showLoader; else dataTemplate\">\n                <lib-skeleton-loader [count]=\"3\" [appearance]=\"''\"\n                    [theme]=\"{ 'border-radius': '16px', height: '40px', 'background-color': 'rgb(230 232 235)' }\"></lib-skeleton-loader>\n            </ng-container>\n            <ng-template #dataTemplate>\n                <div class=\"col-sm-4 mb-3\" *ngFor=\"let meterData of meterDataRes\">\n                    <mat-card class=\"cardOverwrite cardBackgroundColor\">\n                        <ng-container *ngTemplateOutlet=\"parameterData; context: {\n                            duration: last48HrsMeterData && last48HrsMeterData[meterData.paramName]?.data?.date ? dateService.getRelativeTimeAgoLabel(last48HrsMeterData[meterData.paramName]?.data?.date, timezone) : dateService.getRelativeTimeAgoLabel(meterData?.data?.date, timezone),\n                            value: last48HrsMeterData && last48HrsMeterData[meterData.paramName]?.data?.value != null ? last48HrsMeterData[meterData.paramName]?.data?.value : meterData?.data?.value,\n                            unit: meterData?.unit,\n                            label: meterData?.paramLabel,\n                            entityID: meterData?.entityID,\n                            paramName: meterData?.paramName,\n                            status: meterData?.status\n                        }\"></ng-container>\n                    </mat-card>\n                </div>\n            </ng-template>\n        </div>\n\n    </div>\n</div>\n\n<ng-template #parameterData let-duration=\"duration\" let-label=\"label\" let-value=\"value\" let-unit=\"unit\"\n    let-entityID=\"entityID\" let-paramName=\"paramName\" let-status=\"status\">\n    <div class=\"row\">\n        <div class=\"col-sm-6 textDurationWithAgoTime\">\n            {{ duration }}\n        </div>\n        <div class=\"col-sm-6 text-end\">\n            <a *ngIf=\"status == 'OFFLINE'\" class=\"text-secondary cursorPointer me-2\"\n                matTooltip=\"Currently parameter is offline, click here to see data of last 48 hrs.\"\n                matTooltipPosition=\"below\" (click)=\"getLast48HrsMeterData(paramName)\">\n                <span class=\"material-symbols-outlined fs-5 fw-bold\">devices</span>\n            </a>\n            <a class=\"text-primary cursorPointer\" matTooltip=\"Trend\" matTooltipPosition=\"below\"\n                (click)=\"showTrend(paramName, entityID)\">\n                <span class=\"material-symbols-outlined fs-5 fw-bold\">trending_up</span>\n            </a>\n        </div>\n    </div>\n    <div class=\"row mt-3\">\n        <div class=\"col-sm-12 text-center\">\n            <span class=\"fs-1 fw-bold text-primary\">{{ value != null && value != undefined ? (value | number: '1.2-2' ||\n                COMMON_CONSTANT.HYPHEN) : COMMON_CONSTANT.HYPHEN }}</span>\n            <span class=\"text-secondary fw-bold\"> {{ value ? unit : '' }} </span>\n        </div>\n    </div>\n    <div class=\"row mt-4 mb-4\">\n        <div class=\"col-sm-12 fs-5 text-center\">\n            {{ label }}\n        </div>\n    </div>\n</ng-template>","import { NgModule } from '@angular/core';\nimport { RouterModule, Routes } from '@angular/router';\n\nimport { MeterDataDashboardComponent } from './meter-data.component';\n\nconst routes: Routes = [\n    {\n        path: '',\n        component: MeterDataDashboardComponent\n    }\n];\n\n@NgModule({\n    imports: [RouterModule.forChild(routes)],\n    exports: [RouterModule]\n})\nexport class MeterDataRoutingModule { }\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\n\nimport { MatCardModule } from '@angular/material/card';\nimport { MatTooltipModule } from '@angular/material/tooltip';\nimport { MatInputModule } from '@angular/material/input';\nimport { MatFormFieldModule } from '@angular/material/form-field';\nimport { MatSelectModule } from '@angular/material/select';\n\nimport { NgxMatSelectSearchModule } from 'ngx-mat-select-search';\n\nimport { TrendModule } from '../../_shared/dialog/trend/trend.module';\nimport { TrendService } from '../../../service/trend.service';\n\nimport { MeterDataRoutingModule } from './meter-data-routing.module';\nimport { MeterDataDashboardComponent } from './meter-data.component';\n\n// tsc-library\nimport { MessageAlertModule, SkeletonModule } from '@library/tsc-common';\n// /tsc-library/\n\n\n@NgModule({\n    declarations: [\n        MeterDataDashboardComponent\n    ],\n    imports: [\n        CommonModule,\n        MeterDataRoutingModule,\n        FormsModule,\n        ReactiveFormsModule,\n        MatCardModule,\n        MatTooltipModule,\n        MatInputModule,\n        MatFormFieldModule,\n        MatSelectModule,\n        NgxMatSelectSearchModule,\n        TrendModule,\n        MessageAlertModule,\n        SkeletonModule\n    ],\n    providers: [TrendService]\n})\nexport class MeterDataDashboardModule { }\n","import { NgModule } from '@angular/core';\nimport { RouterModule, Routes } from '@angular/router';\n\nconst routes: Routes = [];\n\n@NgModule({\n    imports: [RouterModule.forChild(routes)],\n    exports: [RouterModule]\n})\nexport class ParameterTabRoutingModule { }\n","import { Component, OnInit } from '@angular/core';\n\nimport { NavigationEnd, Router } from '@angular/router';\n\n@Component({\n    selector: 'lib-tab',\n    templateUrl: './tab.component.html',\n    styles: [\n    ]\n})\n\nexport class ParameterTabComponent implements OnInit {\n\n    orgID: any;\n    activeLink: any;\n\n    tab: any = [];\n\n    constructor(\n        private router: Router,\n    ) { }\n\n    ngOnInit(): void {\n        this.tab = [\n            {\n                icon: 'stacked_line_chart',\n                label: 'By Entity',\n                routerLink: '/dashboard/all-parameters',\n            },\n            {\n                icon: 'show_chart',\n                label: 'By parameter',\n                routerLink: '/dashboard/single-parameter',\n            }\n        ];\n\n        this.setActiveLink();\n\n        this.router.events.subscribe((val) => {\n            if (val instanceof NavigationEnd) {\n                this.setActiveLink();\n            }\n        });\n    }\n\n    setActiveLink(): void {\n        let currentPath = window.location.pathname;\n\n        for (let i = 0; i < this.tab.length; i++) {\n            if (currentPath.includes(this.tab[i].routerLink)) {\n                this.activeLink = this.tab[i].routerLink;\n                break;\n            }\n        }\n    }\n\n}\n","<div class=\"card main-card cardOverwrite h100\">\n    <div class=\"headerContainer\">\n        <div class=\"headerLeftContainer\">\n            <div class=\"pageTitle\">Parameter Dashboard</div>\n        </div>\n    </div>\n\n    <nav mat-tab-nav-bar>\n        <ng-container *ngFor=\"let tabs of tab; let i = index;\">\n            <a mat-tab-link [routerLink]=\"tabs.routerLink\" (click)=\"activeLink = tabs.routerLink\"\n                [active]=\"activeLink == tabs.routerLink\">\n                <div class=\"d-flex align-items-center\">\n                    <span class=\"material-symbols-outlined me-2\">\n                        {{ tabs.icon }}\n                    </span>\n                    {{ tabs.label }}\n                </div>\n            </a>\n        </ng-container>\n    </nav>\n    <router-outlet></router-outlet>\n\n</div>","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { MatTabsModule } from '@angular/material/tabs';\n\nimport { NgbModule } from '@ng-bootstrap/ng-bootstrap';\n\nimport { ParameterTabRoutingModule } from './tab-routing.module';\nimport { ParameterTabComponent } from './tab.component';\n\n\n@NgModule({\n    declarations: [\n        ParameterTabComponent\n    ],\n    imports: [\n        CommonModule,\n        ParameterTabRoutingModule,\n        MatTabsModule,\n        NgbModule\n    ]\n})\nexport class ParameterTabModule { }\n","import { Component, OnInit, ViewChild } from '@angular/core';\nimport { MatDialog } from '@angular/material/dialog';\n\nimport * as moment from 'moment';\n\nimport { Alert, AlertM } from '../../../../model/alert.model';\nimport { EntityWithChildren, EntityWithChildrenM } from '../../../../model/entity.model';\n\nimport { DashboardErrorEnum, ReportErrorEnum } from '../../../../enum/error.enum';\n\nimport { AggregationDurationComponent } from '../../../dropdown/aggregation-duration/aggregation-duration.component';\nimport { EntityTypeComponent } from '../../../dropdown/entity-type/entity-type.component';\nimport { EntityDialogComponent } from '../../../_shared/dialog/entity/entity.component';\n\nimport { EntityController } from '../../../../controller/entity.controller';\nimport { AggregateDataController } from '../../../../controller/aggregate-data.controller';\n\nimport { AlertService } from '../../../../service/alert.service';\n\n// tsc-library\nimport { StorageService } from '@library/storage-service';\nimport { ButtonLabelEnum, COMMON_CONSTANT, InvalidForm, MATERIAL_CONSTANT, MaterialFormFieldAppearance, MessageAlertIconEnum, MessageAlertTypeEnum } from '@library/tsc-common';\nimport { CUSTOM_RANGE_CONSTANT_EXCLUSIVE_DATE, DateFormatEnum, DateInputComponent, DateInputTypeEnum, DateTypeEnum } from '@library/date';\nimport { ToastrColor, ToastrService } from '@library/toastr-service';\nimport { BasicAreaLineBarChart, ChartTitle, ChartTypeEnum, ChartViewStateEnum } from '@library/echart';\nimport { FormControl, Validators } from '@angular/forms';\n// /tsc-library/\n\n@Component({\n    selector: 'lib-by-entity',\n    templateUrl: './by-entity.component.html',\n    styleUrls: ['./by-entity.component.scss']\n})\nexport class ByEntityComponent implements OnInit {\n\n    materialConstant = MATERIAL_CONSTANT;\n    commonConstant = COMMON_CONSTANT;\n    customRangeConstant = CUSTOM_RANGE_CONSTANT_EXCLUSIVE_DATE;\n\n    materialFormFieldAppearance = MaterialFormFieldAppearance;\n    dateFormatEnum = DateFormatEnum;\n    dateInputTypeEnum = DateInputTypeEnum;\n    dateTypeEnum = DateTypeEnum;\n    buttonLabelEnum = ButtonLabelEnum;\n\n    orgID: any;\n    timezone: string;\n    startDate: string;\n    endDate: string;\n    aggDuration: string;\n    entityType: string;\n    entityID: any;\n    selectEntityType: boolean = false;\n    isViewData: boolean = false;\n    showAlert: boolean = false;\n    showLoader: boolean = false;\n\n    entityByEntityTypeM = [new EntityWithChildren()];\n    alertObj: AlertM = new Alert();\n\n    entityFC: FormControl = new FormControl([], [Validators.required]);\n\n    chartType: string = ChartTypeEnum.BASIC_LINE_CHART;\n    viewStateFlag: string = ChartViewStateEnum.LOADING;\n    chartTitle = new ChartTitle();\n    chartData: BasicAreaLineBarChart[] = [];\n\n    @ViewChild('customDateInput') customDateInput: DateInputComponent;\n    @ViewChild('aggDurationInput') aggDurationInput: AggregationDurationComponent;\n    @ViewChild('entityTypeInput') entityTypeInput: EntityTypeComponent;\n\n    constructor(\n        private storageService: StorageService,\n        private alertService: AlertService,\n        private toastService: ToastrService,\n        private entityController: EntityController,\n        private aggregateDataController: AggregateDataController,\n        private dialog: MatDialog,\n    ) { }\n\n    ngOnInit(): void {\n        this.orgID = this.storageService.getStorage('currentOrgID');\n        this.timezone = this.storageService.getStorage('timezone');\n    }\n\n    dateInpChange() {\n        this.startDate = this.customDateInput.startDateFC.value;\n        this.endDate = this.customDateInput.endDateFC.value;\n    }\n\n    aggDurationInpChange() {\n        this.aggDuration = this.aggDurationInput.aggDurationFC.value;\n    }\n\n    entityTypeInpChange() {\n        this.entityType = this.entityTypeInput.entityTypeFC.value;\n\n        this.entityFC.reset([]);\n        this.getEntitiesByEntityType(this.entityType);\n    }\n\n    getEntitiesByEntityType(entityType) {\n        let requestBody = {};\n        requestBody['entityType'] = [entityType];\n\n        this.entityController.getEntitiesByEntityType(this.orgID, requestBody)\n            .subscribe((res: EntityWithChildrenM) => {\n                this.entityByEntityTypeM = [res];\n            },\n                error => {\n                    console.log('error in getEntitiesByEntityType() - ', error);\n                });\n    }\n\n    openEntityDialog() {\n        if (this.entityType) {\n            const dialog = this.dialog.open(EntityDialogComponent,\n                {\n                    data: {\n                        entityType: this.entityTypeInput.entityTypeFC.value,\n                        entityObject: this.entityByEntityTypeM\n                    },\n                    width: '50vw',\n                    height: '100%',\n                    position: { right: '-2px', top: '0px' },\n                });\n            dialog.afterClosed().subscribe((dialogRes) => {\n                if (dialogRes.entityID) {\n                    this.entityID = dialogRes.entityID;\n                    this.entityFC.patchValue(this.entityID)\n                }\n            })\n        } else {\n            this.selectEntityType = true;\n        }\n    }\n\n    viewEntityParameterData() {\n        this.chartData = [];\n        this.isViewData = true;\n        this.alertService.resetAlertProperties(this.alertObj);\n\n        if (this.isValidInputField()) {\n            this.toastService.openToast(InvalidForm.INVALID_FORM_TITLE, InvalidForm.INVALID_FORM_MESSAGE, ToastrColor.ERROR);\n            return;\n        } \n\n        if (this.startDate == this.endDate) {\n            this.alertService.setAlertProperties(this.alertObj, ReportErrorEnum.INVALID_DATE_LABEL, ReportErrorEnum.INVALID_DATE_MESSAGE, MessageAlertTypeEnum.INFO, MessageAlertIconEnum.INFO_ICON);\n            return;\n        }\n\n        this.showLoader = true;\n\n        try {\n            const requestData = this.createDataRequest();\n\n            this.aggregateDataController.getEntityParameterData(this.orgID, requestData)\n                .subscribe((entityParamRes: any) => {\n\n                    let entityParameterData = entityParamRes?.paramData;\n                    this.showLoader = false;\n\n                    if (entityParameterData && entityParameterData.every(item => item.data.length == 0 )) {\n                        this.alertService.setAlertProperties(this.alertObj, DashboardErrorEnum.DATA_NOT_FOUND_LABEL, DashboardErrorEnum.DATA_NOT_FOUND_MESSAGE, MessageAlertTypeEnum.WARNING, MessageAlertIconEnum.WARNING_ICON);\n                    } else {\n                        this.viewStateFlag = ChartViewStateEnum.HAS_DATA;\n                        this.chartData = [];\n\n                        entityParameterData.forEach((res) => {\n                            if (res.data.length > 0) {\n\n                                const newChartdata: BasicAreaLineBarChart = new BasicAreaLineBarChart();\n\n                                newChartdata.metaData = res.data.map(item => ({\n                                    name: moment(new Date(item.date)).format(\"YYYY-MM-DD HH:mm:ss\"),\n                                    value: item.value\n                                }));\n                                newChartdata.unit = {\n                                    name: '',\n                                    code: res.unit,\n                                };\n                                newChartdata.markLine = [\n                                    {\n                                        label: 'Avg',\n                                        value: res.avgValue,\n                                        color: '#e83e8c'\n                                    },\n                                    {\n                                        label: 'Max',\n                                        value: res.maxValue,\n                                        color: '#e83e8c'\n                                    }\n                                ]\n                                newChartdata.yAxisLabel = res.label + ' (' + res.unit + ')';\n                                newChartdata.yAxisNameGap = 25;\n                                newChartdata.showDataView = true;\n                                newChartdata.showMagicType = true;\n                                newChartdata.showRestore = true;\n                                newChartdata.showDownloadImage = true;\n                                newChartdata.chartTitle = {\n                                    name: res.label,\n                                    color: 'gray'\n                                }\n\n                                this.chartData.push(newChartdata);\n                            }\n                        });\n                    }\n\n                },\n                    error => {\n                        console.log('error in viewParameterData() - ', error);\n                        this.alertService.setAlertProperties(this.alertObj, DashboardErrorEnum.INVALID_ERROR_LABEL, DashboardErrorEnum.INVALID_ERROR_MESSAGE, MessageAlertTypeEnum.DANGER, MessageAlertIconEnum.DANGER_ICON);\n                        throw error;\n                    });\n\n        } catch (error) {\n\n            console.error(`Error in viewEntityParameterData()`, error);\n            this.alertService.setAlertProperties(this.alertObj, DashboardErrorEnum.INVALID_ERROR_LABEL, DashboardErrorEnum.INVALID_ERROR_MESSAGE, MessageAlertTypeEnum.DANGER, MessageAlertIconEnum.DANGER_ICON);\n\n        } finally {\n            this.showLoader = false;\n        }\n    }\n\n    isValidInputField() {\n        const controls = [\n            this.customDateInput.startDateFC,\n            this.aggDurationInput.aggDurationFC,\n            this.entityTypeInput.entityTypeFC,\n            this.entityFC\n        ];\n\n        controls.forEach(control => control.markAsTouched());\n        return controls.some(control => control.invalid);\n    }\n\n    createDataRequest() {\n        const requestData = {};\n\n        requestData['startTime'] = this.startDate;\n        requestData['endTime'] = this.endDate;\n        requestData['interval'] = this.aggDuration;\n        requestData['entityID'] = [this.entityID];\n        requestData['entityType'] = [this.entityTypeInput.entityTypeFC.value];\n\n        return requestData;\n    }\n\n}\n","<div class=\"card main-card cardOverwrite h100\">\n    <div class=\"headerContainer\">\n        <div class=\"headerLeftContainer\">\n            <div class=\"pageTitle\">By Entity</div>\n        </div>\n    </div>\n\n    <div class=\"card-body\">\n        <div class=\"row\">\n            <div class=\"col-sm-3\">\n                <lib-date-input #customDateInput (emitFilter)=\"dateInpChange()\" [materialFieldWidthInp]=\"true\"\n                    [materialFormFieldAppearanceInp]=\"materialFormFieldAppearance.FORM_FIELD_APPEARANCE\" [isMandatoryFieldInp]=\"true\"\n                    [dateInputTypeInp]=\"dateInputTypeEnum.CUSTOM_INPUT\" [dateTypeInp]=\"dateTypeEnum.EXCLUSIVE\"\n                    [showDefaultDurationInp]=\"true\" [showCdrRangeLabelInp]=\"true\" [labelInp]=\"'Select date'\" [timezoneInp]=\"timezone\"\n                    [rangeInp]=\"customRangeConstant\" [showTimeInCDRInp]=\"true\" [showRangeInp]=\"true\"\n                    [cdrFormatInp]=\"'YYYY-MM-DD HH:mm:ss'\"></lib-date-input>\n            </div>\n\n            <div class=\"col-sm-3\">\n                <lib-aggregation-duration #aggDurationInput (emitFilter)=\"aggDurationInpChange()\"></lib-aggregation-duration>\n            </div>\n            \n            <div class=\"col-sm-3\">\n                <lib-entity-type #entityTypeInput (emitFilter)=\"entityTypeInpChange()\"></lib-entity-type>\n            </div>\n\n            <div class=\"col-sm-3\">\n                <button class=\"btn btn-link selectEntityText\" [ngClass]=\"{'mt-2': !selectEntityType || (isViewData && entityFC.value.length == 0)}\" type=\"button\"\n                    (click)=\"openEntityDialog()\">\n                    Select entity *\n                </button>\n                <span class=\"textMatError\" *ngIf=\"selectEntityType\">\n                    <br />\n                    Please select entity type first\n                </span>\n                <span class=\"ms-2 textMatError\" *ngIf=\"!selectEntityType && isViewData && entityFC.value.length == 0\">\n                    <br />\n                    Select entity\n                </span>\n            </div>\n        </div>\n\n        <div class=\"row\">\n            <div class=\"col-sm-12\">\n                <div class=\"float-end\">\n                    <button class=\"btn btn-sm btn-primary\" type=\"button\" (click)=\"viewEntityParameterData()\" matRipple\n                        [matRippleCentered]=\"materialConstant.MAT_RIPPLE_CENTER\">\n                        {{ buttonLabelEnum.READ_BTN_LABEL }}\n                    </button>\n                </div>\n            </div>\n        </div>\n\n        <div class=\"row mt-2\">\n            <div class=\"col-sm-12\">\n                <lib-message-alert *ngIf=\"alertObj.showAlert\" [labelInp]=\"alertObj.alertLabel\"\n                    [contentInp]=\"alertObj.alertContent\" [messageAlertTypeInp]=\"alertObj.messageAlertType\"\n                    [messageAlertIconInp]=\"alertObj.messageAlertIcon\">\n                </lib-message-alert>\n            </div>\n        </div>\n\n        <div class=\"row mt-2\">\n            <ng-container *ngIf=\"showLoader; else dataTemplate\">\n                <lib-skeleton-loader [count]=\"3\" [appearance]=\"''\"\n                    [theme]=\"{ 'border-radius': '16px', height: '40px', 'background-color': 'rgb(230 232 235)' }\"></lib-skeleton-loader>\n            </ng-container>\n\n            <ng-template #dataTemplate>\n                <div class=\"row\" *ngIf=\"chartData.length > 0\">\n                    <div class=\"col-sm-6\" *ngFor=\"let data of chartData\">\n                        <mat-card class=\"cardOverwrite cardBackgroundColor mb-3\">\n                            <lib-basic-area-line-bar [chartTypeInp]=\"chartType\" [chartTitleInp]=\"data.chartTitle\"\n                                [viewStateInp]=\"viewStateFlag\" [dataInp]=\"data\">\n                            </lib-basic-area-line-bar>\n                        </mat-card>\n                    </div>\n                </div>\n            </ng-template>\n        </div>\n    </div>\n</div>","import { NgModule } from '@angular/core';\nimport { RouterModule, Routes } from '@angular/router';\n\nimport { ByEntityComponent } from './by-entity.component';\n\nconst routes: Routes = [\n    {\n        path: '',\n        component: ByEntityComponent\n    }\n];\n\n@NgModule({\n    imports: [RouterModule.forChild(routes)],\n    exports: [RouterModule]\n})\nexport class ByEntityRoutingModule { }\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\n\nimport { MatCardModule } from '@angular/material/card';\nimport { MatRippleModule } from '@angular/material/core';\n\nimport { ByEntityRoutingModule } from './by-entity-routing.module';\nimport { ByEntityComponent } from './by-entity.component';\n\nimport { AggregationDurationModule } from '../../../dropdown/aggregation-duration/aggregation-duration.module';\nimport { EntityTypeModule } from '../../../dropdown/entity-type/entity-type.module';\nimport { EntityDialogModule } from '../../../_shared/dialog/entity/entity.module';\n\n// tsc-library\nimport { DateInputModule } from '@library/date';\nimport { MessageAlertModule, SkeletonModule } from '@library/tsc-common';\nimport { BasicAreaLineBarModule } from '@library/echart';\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\n// /tsc-library/\n\n@NgModule({\n    declarations: [\n        ByEntityComponent\n    ],\n    imports: [\n        CommonModule,\n        ByEntityRoutingModule,\n        FormsModule,\n        ReactiveFormsModule,\n        DateInputModule,\n        AggregationDurationModule,\n        EntityTypeModule,\n        EntityDialogModule,\n        MessageAlertModule,\n        SkeletonModule,\n        BasicAreaLineBarModule,\n        MatCardModule,\n        MatRippleModule\n    ]\n})\nexport class ByEntityModule { }\n","import { Component, OnInit, ViewChild } from '@angular/core';\nimport { FormControl, Validators } from '@angular/forms';\n\nimport * as moment from 'moment';\n\nimport { DashboardErrorEnum, ReportErrorEnum } from '../../../../enum/error.enum';\n\nimport { Parameter, ParameterM } from '../../../../model/parameter.model';\nimport { Alert, AlertM } from '../../../../model/alert.model';\nimport { AggregateDataRequest } from '../../../../model/aggregate-data.model';\n\nimport { AggregationDurationComponent } from '../../../dropdown/aggregation-duration/aggregation-duration.component';\nimport { EntityTypeComponent } from '../../../dropdown/entity-type/entity-type.component';\n\nimport { ParameterController } from '../../../../controller/parameter.controller';\n\nimport { AggregateDataService } from '../../../../service/aggregate-data.service';\nimport { AlertService } from '../../../../service/alert.service';\nimport { ParameterService } from '../../../../service/parameter.service';\n\n// tsc-library\nimport { StorageService } from '@library/storage-service';\nimport { ButtonLabelEnum, COMMON_CONSTANT, FormErrorEnum, InvalidForm, MATERIAL_CONSTANT, MatSelectSearchService, MaterialFormFieldAppearance, MessageAlertIconEnum, MessageAlertTypeEnum, TSCCommonService } from '@library/tsc-common';\nimport { CUSTOM_RANGE_CONSTANT_EXCLUSIVE_DATE, DateFormatEnum, DateInputComponent, DateInputTypeEnum, DateTypeEnum } from '@library/date';\nimport { ToastrColor, ToastrService } from '@library/toastr-service';\nimport { BasicAreaLineBarChart, ChartTitle, ChartTypeEnum, ChartViewStateEnum } from '@library/echart';\n// /tsc-library/\n\n@Component({\n    selector: 'lib-by-parameter',\n    templateUrl: './by-parameter.component.html',\n    styles: [\n    ]\n})\nexport class ByParameterComponent implements OnInit {\n\n    materialConstant = MATERIAL_CONSTANT;\n    commonConstant = COMMON_CONSTANT;\n    customRangeConstant = CUSTOM_RANGE_CONSTANT_EXCLUSIVE_DATE;\n\n    buttonLabelEnum = ButtonLabelEnum;\n    materialFormFieldAppearance = MaterialFormFieldAppearance;\n    dateFormatEnum = DateFormatEnum;\n    dateInputTypeEnum = DateInputTypeEnum;\n    dateTypeEnum = DateTypeEnum;\n    FormErrorEnum = FormErrorEnum;\n\n    orgID: any;\n    timezone: string;\n    startDate: string;\n    endDate: string;\n    aggDuration: string;\n    entityType: string;\n    entityID: any;\n    showAlert: boolean = false;\n    showLoader: boolean = false;\n\n    parameterM = [new Parameter()];\n    parameterByEntityTypeM = [new Parameter()];\n    alertObj: AlertM = new Alert();\n\n    parameterFC: FormControl = new FormControl('', [Validators.required]);\n    parameterSearchUtil: MatSelectSearchService = new MatSelectSearchService(['label']);\n\n    chartType: string = ChartTypeEnum.BASIC_LINE_CHART;\n    viewStateFlag: string = ChartViewStateEnum.LOADING;\n    chartTitle = new ChartTitle();\n    chartData: BasicAreaLineBarChart[] = [];\n\n    @ViewChild('customDateInput') customDateInput: DateInputComponent;\n    @ViewChild('aggDurationInput') aggDurationInput: AggregationDurationComponent;\n    @ViewChild('entityTypeInput') entityTypeInput: EntityTypeComponent;\n\n    constructor(\n        private storageService: StorageService,\n        private alertService: AlertService,\n        private toastService: ToastrService,\n        private parameterController: ParameterController,\n        private parameterService: ParameterService,\n        private aggregateDataService: AggregateDataService,\n        private tscCommonService: TSCCommonService,\n    ) { }\n\n    ngOnInit(): void {\n        this.orgID = this.storageService.getStorage('currentOrgID');\n        this.timezone = this.storageService.getStorage('timezone');\n    }\n\n    async getParameterByLayoutID() {\n        this.parameterM = <ParameterM[]>await this.parameterService.getParameterByLayoutID(this.orgID);\n    }\n\n    dateInpChange() {\n        this.startDate = this.customDateInput.startDateFC.value;\n        this.endDate = this.customDateInput.endDateFC.value;\n    }\n\n    aggDurationInpChange() {\n        this.aggDuration = this.aggDurationInput.aggDurationFC.value;\n    }\n\n    entityTypeInpChange() {\n        this.entityType = this.entityTypeInput.entityTypeFC.value;\n\n        this.getParameterByEntityType(this.entityType);\n    }\n\n    getParameterByEntityType(entityType) {\n        let requestBody = {};\n        requestBody['entityType'] = [entityType];\n\n        this.parameterController.getParameterByEntityType(this.orgID, requestBody)\n            .subscribe((res: ParameterM[]) => {\n                this.parameterByEntityTypeM = res;\n\n                this.parameterSearchUtil.entityArr = this.parameterByEntityTypeM;\n                this.parameterSearchUtil.createSubscription();\n            },\n                error => {\n                    console.log('error in getParameterByEntityType() - ', error);\n                });\n    }\n\n    onParameterChange(selectedParameter) {\n        this.parameterFC.patchValue(selectedParameter);\n    }\n\n    async viewParameterData() {\n        this.chartData = [];\n        this.alertService.resetAlertProperties(this.alertObj);\n\n        if (this.isValidInputField()) {\n            this.toastService.openToast(InvalidForm.INVALID_FORM_TITLE, InvalidForm.INVALID_FORM_MESSAGE, ToastrColor.ERROR);\n            return;\n        }\n\n        if (this.startDate == this.endDate) {\n            this.alertService.setAlertProperties(this.alertObj, ReportErrorEnum.INVALID_DATE_LABEL, ReportErrorEnum.INVALID_DATE_MESSAGE, MessageAlertTypeEnum.INFO, MessageAlertIconEnum.INFO_ICON);\n            return;\n        }\n\n        this.showLoader = true;\n\n        try {\n            const requestData = this.createDataRequest();\n            const aggregateRes = await this.aggregateDataService.getAggregateData(this.orgID, requestData);\n\n            this.showLoader = false;\n\n            if (aggregateRes && aggregateRes.every(item => item.data.length == 0 )) {\n                this.alertService.setAlertProperties(this.alertObj, DashboardErrorEnum.DATA_NOT_FOUND_LABEL, DashboardErrorEnum.DATA_NOT_FOUND_MESSAGE, MessageAlertTypeEnum.WARNING, MessageAlertIconEnum.WARNING_ICON);\n            } else {\n                this.viewStateFlag = ChartViewStateEnum.HAS_DATA;\n                this.chartData = [];\n\n                aggregateRes.forEach((res) => {\n                    if (res.data.length > 0) {\n\n                        const newChartdata: BasicAreaLineBarChart = new BasicAreaLineBarChart();\n\n                        newChartdata.metaData = res.data.map(item => ({\n                            name: moment(new Date(item.date)).format(\"YYYY-MM-DD HH:mm:ss\"),\n                            value: item.value\n                        }));\n                        newChartdata.unit = {\n                            name: '',\n                            code: res.unit,\n                        };\n                        newChartdata.yAxisLabel = res.paramLabel + ' (' + res.unit + ')';\n                        newChartdata.showDataView = true;\n                        newChartdata.showMagicType = true;\n                        newChartdata.showRestore = true;\n                        newChartdata.showDownloadImage = true;\n                        newChartdata.chartTitle = {\n                            name: res.entityName,\n                            color: 'gray'\n                        }\n\n                        this.chartData.push(newChartdata);\n                    }\n                });\n            }\n\n        } catch (error) {\n\n            console.error(`Error in getAggregateData()`, error);\n            this.alertService.setAlertProperties(this.alertObj, DashboardErrorEnum.INVALID_ERROR_LABEL, DashboardErrorEnum.INVALID_ERROR_MESSAGE, MessageAlertTypeEnum.DANGER, MessageAlertIconEnum.DANGER_ICON);\n\n        } finally {\n            this.showLoader = false;\n        }\n    }\n\n    isValidInputField() {\n        const controls = [\n            this.customDateInput.startDateFC,\n            this.aggDurationInput.aggDurationFC,\n            this.entityTypeInput.entityTypeFC,\n            this.parameterFC\n        ];\n\n        controls.forEach(control => control.markAsTouched());\n        return controls.some(control => control.invalid);\n    }\n\n    createDataRequest() {\n\n        const requestData = new AggregateDataRequest();\n\n        const isCounterParameter = this.getCounterParameter(this.parameterFC.value);\n\n        requestData.startTime = this.startDate;\n        requestData.endTime = this.endDate;\n        requestData.interval = this.aggDuration;\n        requestData.entityType = this.entityTypeInput.entityTypeFC.value;\n        requestData.params = [\n            {\n                name: this.parameterFC.value,\n                dsAgg: \"avg\",\n                agg: \"avg\",\n                sourceLoadType: isCounterParameter ? \"all\" : null,\n                source_or_load: isCounterParameter ? \"source\" : null,\n            }\n        ];\n        requestData.nullifyParams();\n\n        return requestData;\n    }\n\n    getCounterParameter(paramMetricValue) {\n        const parameter = this.tscCommonService.getUniqueObject(this.parameterM, 'isCounter', paramMetricValue);\n        return parameter ? parameter.isCounter : false;\n    }\n\n}","<div class=\"card main-card cardOverwrite h100\">\n    <div class=\"headerContainer\">\n        <div class=\"headerLeftContainer\">\n            <div class=\"pageTitle\">By Parameter</div>\n        </div>\n    </div>\n\n    <div class=\"card-body\">\n        <div class=\"row\">\n            <div class=\"col-sm-3\">\n                <lib-date-input #customDateInput (emitFilter)=\"dateInpChange()\" [materialFieldWidthInp]=\"true\"\n                    [materialFormFieldAppearanceInp]=\"materialFormFieldAppearance.FORM_FIELD_APPEARANCE\"\n                    [isMandatoryFieldInp]=\"true\" [dateInputTypeInp]=\"dateInputTypeEnum.CUSTOM_INPUT\"\n                    [dateTypeInp]=\"dateTypeEnum.EXCLUSIVE\" [showDefaultDurationInp]=\"true\" [showCdrRangeLabelInp]=\"true\"\n                    [labelInp]=\"'Select date'\" [timezoneInp]=\"timezone\" [rangeInp]=\"customRangeConstant\"\n                    [showTimeInCDRInp]=\"true\" [showRangeInp]=\"true\"\n                    [cdrFormatInp]=\"'YYYY-MM-DD HH:mm:ss'\"></lib-date-input>\n            </div>\n\n            <div class=\"col-sm-3\">\n                <lib-aggregation-duration #aggDurationInput\n                    (emitFilter)=\"aggDurationInpChange()\"></lib-aggregation-duration>\n            </div>\n\n            <div class=\"col-sm-3\">\n                <lib-entity-type #entityTypeInput (emitFilter)=\"entityTypeInpChange()\"></lib-entity-type>\n            </div>\n\n            <div class=\"col-sm-3\">\n                <mat-form-field class=\"matFieldWidth100\"\n                    [appearance]=\"materialFormFieldAppearance.FORM_FIELD_APPEARANCE\">\n                    <mat-label>Select parameter</mat-label>\n                    <mat-select (selectionChange)=\"onParameterChange($event.value)\" [formControl]=\"parameterFC\"\n                        required>\n                        <ng-container\n                            *ngIf=\"parameterByEntityTypeM && parameterByEntityTypeM.length > 0 && parameterByEntityTypeM[0]['id']; else noDataFound\">\n                            <mat-option>\n                                <ngx-mat-select-search [formControl]=\"parameterSearchUtil.filterFC\"\n                                    placeholderLabel=\"Search by name\" noEntriesFoundLabel=\"No matching name found.\">\n                                </ngx-mat-select-search>\n                            </mat-option>\n                            <mat-option *ngFor=\"let parameter of parameterSearchUtil.filteredEntities | async\"\n                                [value]=\"parameter.paramMetric\">\n                                {{ parameter.label }}\n                            </mat-option>\n                        </ng-container>\n                        <ng-template #noDataFound>\n                            <mat-option disabled>\n                                {{ commonConstant.NO_DATA_FOUND }}\n                            </mat-option>\n                        </ng-template>\n                    </mat-select>\n                    <mat-error *ngIf=\"!entityType\">\n                        Please select entity type first\n                    </mat-error>\n                    <mat-error *ngIf=\"parameterFC.touched && parameterFC.hasError('required') && entityType\">\n                        {{ FormErrorEnum.REQUIRED }}\n                    </mat-error>\n                </mat-form-field>\n            </div>\n        </div>\n\n        <div class=\"row\">\n            <div class=\"col-sm-12\">\n                <div class=\"float-end\">\n                    <button class=\"btn btn-sm btn-primary\" type=\"button\" (click)=\"viewParameterData()\" matRipple\n                        [matRippleCentered]=\"materialConstant.MAT_RIPPLE_CENTER\">\n                        {{ buttonLabelEnum.READ_BTN_LABEL }}\n                    </button>\n                </div>\n            </div>\n        </div>\n\n        <div class=\"row mt-2\">\n            <div class=\"col-sm-12\">\n                <lib-message-alert *ngIf=\"alertObj.showAlert\" [labelInp]=\"alertObj.alertLabel\"\n                    [contentInp]=\"alertObj.alertContent\" [messageAlertTypeInp]=\"alertObj.messageAlertType\"\n                    [messageAlertIconInp]=\"alertObj.messageAlertIcon\">\n                </lib-message-alert>\n            </div>\n        </div>\n\n        <div class=\"row mt-2\">\n            <ng-container *ngIf=\"showLoader; else dataTemplate\">\n                <lib-skeleton-loader [count]=\"3\" [appearance]=\"''\"\n                    [theme]=\"{ 'border-radius': '16px', height: '40px', 'background-color': 'rgb(230 232 235)' }\"></lib-skeleton-loader>\n            </ng-container>\n\n            <ng-template #dataTemplate>\n                <div class=\"row\" *ngIf=\"chartData.length > 0\">\n                    <div class=\"col-sm-6\" *ngFor=\"let data of chartData\">\n                        <mat-card class=\"cardOverwrite cardBackgroundColor mb-3\">\n                            <lib-basic-area-line-bar [chartTypeInp]=\"chartType\" [chartTitleInp]=\"data.chartTitle\"\n                                [viewStateInp]=\"viewStateFlag\" [dataInp]=\"data\">\n                            </lib-basic-area-line-bar>\n                        </mat-card>\n                    </div>\n                </div>\n            </ng-template>\n        </div>\n\n    </div>\n</div>","import { NgModule } from '@angular/core';\nimport { RouterModule, Routes } from '@angular/router';\n\nimport { ByParameterComponent } from './by-parameter.component';\n\nconst routes: Routes = [\n    {\n        path: '',\n        component: ByParameterComponent\n    }\n];\n\n@NgModule({\n    imports: [RouterModule.forChild(routes)],\n    exports: [RouterModule]\n})\nexport class ByParameterRoutingModule { }\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\n\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\n\nimport { MatCardModule } from '@angular/material/card';\nimport { MatInputModule } from '@angular/material/input';\nimport { MatFormFieldModule } from '@angular/material/form-field';\nimport { MatSelectModule } from '@angular/material/select';\nimport { MatRippleModule } from '@angular/material/core';\n\nimport { NgxMatSelectSearchModule } from 'ngx-mat-select-search';\n\nimport { ByParameterRoutingModule } from './by-parameter-routing.module';\nimport { ByParameterComponent } from './by-parameter.component';\n\nimport { AggregationDurationModule } from '../../../dropdown/aggregation-duration/aggregation-duration.module';\nimport { EntityTypeModule } from '../../../dropdown/entity-type/entity-type.module';\n\n// tsc-library\nimport { DateInputModule } from '@library/date';\nimport { MessageAlertModule, SkeletonModule } from '@library/tsc-common';\nimport { BasicAreaLineBarModule } from '@library/echart';\n// /tsc-library/\n\n@NgModule({\n    declarations: [\n        ByParameterComponent\n    ],\n    imports: [\n        CommonModule,\n        ByParameterRoutingModule,\n        DateInputModule,\n        AggregationDurationModule,\n        EntityTypeModule,\n        MessageAlertModule,\n        SkeletonModule,\n        BasicAreaLineBarModule,\n        FormsModule,\n        ReactiveFormsModule,\n        MatCardModule,\n        MatInputModule,\n        MatFormFieldModule,\n        MatSelectModule,\n        MatRippleModule,\n        NgxMatSelectSearchModule\n    ]\n})\nexport class ByParameterModule { }\n","import { Component, EventEmitter, Input, OnInit, Output, SimpleChanges } from '@angular/core';\nimport { FormControl } from '@angular/forms';\n\nimport { LIST_CONSTANT } from '../../../../constant/list.constant';\n\n@Component({\n    selector: 'lib-source-load',\n    templateUrl: './source-load.component.html',\n    styles: [\n    ]\n})\nexport class SourceLoadComponent implements OnInit {\n\n    @Input()\n    defaultCategoryInp: string;\n\n    listConstant = LIST_CONSTANT;\n\n    categoryFC = new FormControl(\"source\");\n\n    @Output()\n    emitFilter = new EventEmitter();\n\n    constructor() { }\n\n    ngOnInit(): void {\n    }\n\n    ngOnChanges(changes: SimpleChanges): void {\n        if (changes.defaultCategoryInp && this.defaultCategoryInp) {\n            this.categoryFC.patchValue(this.defaultCategoryInp);\n        }\n    }\n\n    ngAfterViewInit() {\n        this.emitFilter.emit();\n    }\n\n    categoryChange(selectedCategory) {\n        this.categoryFC.patchValue(selectedCategory);\n        this.emitFilter.emit();\n    }\n\n}\n","<mat-button-toggle-group class=\"matBtnFilter\" [formControl]=\"categoryFC\" (change)=\"categoryChange(categoryFC.value)\">\n    <mat-button-toggle *ngFor=\"let category of listConstant.SOURCE_LOAD\" value=\"{{ category.value }}\">\n        {{ category.label }}\n    </mat-button-toggle>\n</mat-button-toggle-group>","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { ReactiveFormsModule, FormsModule } from '@angular/forms';\n\nimport { MatInputModule } from '@angular/material/input';\nimport { MatButtonToggleModule } from '@angular/material/button-toggle';\n\nimport { SourceLoadComponent } from './source-load.component';\n\n@NgModule({\n    declarations: [\n        SourceLoadComponent\n    ],\n    imports: [\n        CommonModule,\n        FormsModule,\n        ReactiveFormsModule,\n        MatInputModule,\n        MatButtonToggleModule\n    ],\n    exports: [\n        SourceLoadComponent\n    ]\n})\nexport class SourceLoadModule { }\n","import { Inject, Injectable } from \"@angular/core\";\n\nimport { HttpClient, HttpResponse } from \"@angular/common/http\";\n\nimport * as moment from 'moment';\n\nimport { ReportErrorEnum } from \"../enum/error.enum\";\nimport { Alert, AlertM } from \"../model/alert.model\";\n\nimport { AlertService } from \"./alert.service\";\n\n// tsc-library\nimport { COMMON_CONSTANT, MessageAlertIconEnum, MessageAlertTypeEnum } from \"@library/tsc-common\";\nimport { DateService } from \"@library/date\";\n// /tsc-library/\n\n@Injectable({\n    providedIn: 'root'\n})\n\nexport class ReportService {\n\n    reportAlertObj: AlertM = new Alert();\n\n    constructor(\n        private http: HttpClient,\n        private dateService: DateService,\n        private alertService: AlertService,\n        @Inject('environment') private environment: any\n    ) { }\n\n    extractTimestamp(dataInp) {\n        if (!dataInp) {\n            return [];\n        }\n\n        const allTimestamp = dataInp.reduce((timestamps, dataValues) => {\n            if (dataValues && dataValues.data) {\n                dataValues.data.forEach(entry => {\n                    if (entry && entry.date) {\n                        timestamps.add(entry.date);\n                    }\n                });\n            }\n            return timestamps;\n        }, new Set<string>());\n\n        return Array.from(allTimestamp).sort();\n    }\n\n    populateTable(timestamp, dataInp, format): any[] {\n        return timestamp.map((time, index) => ({\n            index: index + 1,\n            time: this.dateService.formatDate(time, format),\n            data: dataInp.map(aggregation => {\n                const matchingEntry = aggregation.data.find(entry => entry.date == time);\n                return matchingEntry ? matchingEntry.value : COMMON_CONSTANT.HYPHEN;\n            })\n        }));\n    }\n\n    async downloadReport(orgID, requestData) {\n        const url = `${this.environment.TSC_COMMON_API_URL}public/organizations/${orgID}/report`;\n\n        try {\n            const response: HttpResponse<Blob> = await this.http.post(url, requestData, { observe: 'response', responseType: 'blob' }).toPromise();\n\n            if (response && response.body) {\n                const blob = new Blob([response.body], { type: response.headers.get('Content-Type') });\n                const downloadLink = document.createElement('a');\n                const currentDate = moment().format('DD MMM YYYY HH:mm');\n                downloadLink.href = window.URL.createObjectURL(blob);\n                downloadLink.download = requestData.reportName + \"_\" + currentDate + \".\" + requestData.reportFormat;\n                document.body.appendChild(downloadLink);\n                downloadLink.click();\n                document.body.removeChild(downloadLink);\n            } else {\n                this.alertService.setAlertProperties(this.reportAlertObj, ReportErrorEnum.DATA_NOT_FOUND_LABEL, ReportErrorEnum.DATA_NOT_FOUND_MESSAGE, MessageAlertTypeEnum.WARNING, MessageAlertIconEnum.WARNING_ICON);\n            }\n        } catch (error) {\n            this.alertService.setAlertProperties(this.reportAlertObj, ReportErrorEnum.INVALID_ERROR_LABEL, ReportErrorEnum.INVALID_ERROR_MESSAGE, MessageAlertTypeEnum.DANGER, MessageAlertIconEnum.DANGER_ICON);\n        }\n    }\n\n    async downloadConsumptionReport(orgID, requestData) {\n        const url = `${this.environment.TSC_COMMON_API_URL}organizations/${orgID}/meter-report`;\n\n        try {\n            const response: HttpResponse<Blob> = await this.http.post(url, requestData, { observe: 'response', responseType: 'blob' }).toPromise();\n\n            if (response && response.body) {\n                const blob = new Blob([response.body], { type: response.headers.get('Content-Type') });\n                const downloadLink = document.createElement('a');\n                const currentDate = moment().format('DD MMM YYYY HH:mm');\n                downloadLink.href = window.URL.createObjectURL(blob);\n                downloadLink.download = requestData.reportName + \"_\" + currentDate + \".\" + requestData.reportFormat;\n                document.body.appendChild(downloadLink);\n                downloadLink.click();\n                document.body.removeChild(downloadLink);\n            } else {\n                this.alertService.setAlertProperties(this.reportAlertObj, ReportErrorEnum.DATA_NOT_FOUND_LABEL, ReportErrorEnum.DATA_NOT_FOUND_MESSAGE, MessageAlertTypeEnum.WARNING, MessageAlertIconEnum.WARNING_ICON);\n            }\n        } catch (error) {\n            this.alertService.setAlertProperties(this.reportAlertObj, ReportErrorEnum.INVALID_ERROR_LABEL, ReportErrorEnum.INVALID_ERROR_MESSAGE, MessageAlertTypeEnum.DANGER, MessageAlertIconEnum.DANGER_ICON);\n        }\n    }\n\n}","import { Component, OnInit, ViewChild } from '@angular/core';\nimport { Router } from '@angular/router';\nimport { FormControl, Validators } from '@angular/forms';\n\nimport { ReportErrorEnum } from '../../../enum/error.enum';\nimport { DropdownTypeEnum } from '../../../enum/dropdown.enum';\n\nimport { ConsumptionParameterM } from '../../../model/parameter.model';\nimport { AggregateDataRequest } from '../../../model/aggregate-data.model';\nimport { Alert, AlertM } from '../../../model/alert.model';\nimport { DownloadReportRequest } from '../../../model/report.model';\n\nimport { SourceLoadComponent } from '../../_shared/filter/source-load/source-load.component';\nimport { AggregationDurationComponent } from '../../dropdown/aggregation-duration/aggregation-duration.component';\nimport { EntityComponent } from '../../dropdown/entity/entity.component';\n\nimport { AggregateDataService } from '../../../service/aggregate-data.service';\nimport { ParameterService } from '../../../service/parameter.service';\nimport { ReportService } from '../../../service/report.service';\nimport { AlertService } from '../../../service/alert.service';\n\n// tsc-library\nimport { CUSTOM_RANGE_CONSTANT_EXCLUSIVE_DATE, DateFormatEnum, DateInputComponent, DateInputTypeEnum, DateTypeEnum } from '@library/date';\nimport { StorageService } from '@library/storage-service';\nimport { ToastrColor, ToastrService } from '@library/toastr-service';\nimport { ButtonLabelEnum, COMMON_CONSTANT, FormErrorEnum, InvalidForm, MATERIAL_CONSTANT, MaterialFormFieldAppearance, MessageAlertIconEnum, MessageAlertTypeEnum, TSCCommonService } from '@library/tsc-common';\nimport { ApplicationKeyID } from '@library/application-service';\n// /tsc-library/\n\n@Component({\n    selector: 'lib-breakup',\n    templateUrl: './breakup.component.html',\n    styles: [\n    ]\n})\nexport class BreakupReportComponent implements OnInit {\n\n    MATERIAL_CONSTANT = MATERIAL_CONSTANT;\n    COMMON_CONSTANT = COMMON_CONSTANT;\n    CUSTOM_RANGE_CONSTANT = CUSTOM_RANGE_CONSTANT_EXCLUSIVE_DATE;\n\n    MaterialFormFieldAppearance = MaterialFormFieldAppearance;\n    ButtonLabelEnum = ButtonLabelEnum;\n    DropdownTypeEnum = DropdownTypeEnum;\n    DateFormatEnum = DateFormatEnum;\n    DateInputTypeEnum = DateInputTypeEnum;\n    DateTypeEnum = DateTypeEnum;\n    FormErrorEnum = FormErrorEnum;\n\n    pageTitle: string;\n\n    orgID: any;\n    applicationKeyID: string;\n    consumptionParamM: any;\n    paramMetric: any;\n    timezone: string;\n    startDate: string;\n    endDate: string;\n    aggDuration: string;\n    category: string;\n    entityID: any;\n\n    timestamp: any;\n    renderTable: any;\n    reportData: any;\n\n    showAlert: boolean = false;\n    showLoader: boolean = false;\n\n    reportAlertObj: AlertM = new Alert();\n\n    parameterFC: FormControl = new FormControl('', [Validators.required]);\n\n    @ViewChild('sourceLoadInput') sourceLoadInput: SourceLoadComponent;\n    @ViewChild('customDateInput') customDateInput: DateInputComponent;\n    @ViewChild('aggDurationInput') aggDurationInput: AggregationDurationComponent;\n    @ViewChild('entityInput') entityInput: EntityComponent;\n\n    constructor(\n        private router: Router,\n        private storageService: StorageService,\n        private toastService: ToastrService,\n        private parameterService: ParameterService,\n        private aggregateDataService: AggregateDataService,\n        private reportService: ReportService,\n        private alertService: AlertService,\n        private tscCommonService: TSCCommonService,\n    ) { }\n\n    ngOnInit(): void {\n        this.orgID = this.storageService.getStorage('currentOrgID');\n        this.timezone = this.storageService.getStorage('timezone');\n        this.applicationKeyID = this.storageService.getStorage('applicationKeyID');\n\n        if (this.applicationKeyID == ApplicationKeyID.ENERGY_KEY_ID) {\n            this.pageTitle = \"Energy Breakup Report\";\n        } else if (this.applicationKeyID == ApplicationKeyID.WATER_KEY_ID) {\n            this.pageTitle = \"Water Breakup Report\";\n        }\n\n        this.getConsumptionParameter();\n    }\n\n    async getConsumptionParameter() {\n        const consumptionParamM = <ConsumptionParameterM>await this.parameterService.getConsumptionParameter(this.orgID);\n\n        this.consumptionParamM = consumptionParamM.consumptionParameter;\n    }\n\n    sourceLoadInpChange() {\n        this.category = this.sourceLoadInput.categoryFC.value;\n\n        this.alertService.resetAlertProperties(this.reportAlertObj);\n    }\n\n    dateInpChange() {\n        this.startDate = this.customDateInput.startDateFC.value;\n        this.endDate = this.customDateInput.endDateFC.value;\n\n        this.alertService.resetAlertProperties(this.reportAlertObj);\n    }\n\n    aggDurationInpChange() {\n        this.aggDuration = this.aggDurationInput.aggDurationFC.value;\n\n        this.alertService.resetAlertProperties(this.reportAlertObj);\n    }\n\n    entityInpChange() {\n        this.entityID = this.entityInput.multipleEntityFC.value;\n\n        this.alertService.resetAlertProperties(this.reportAlertObj);\n    }\n\n    async viewReport() {\n\n        this.alertService.resetAlertProperties(this.reportAlertObj);\n\n        if (this.isValidInputField()) {\n            this.toastService.openToast(InvalidForm.INVALID_FORM_TITLE, InvalidForm.INVALID_FORM_MESSAGE, ToastrColor.ERROR);\n            return;\n        }\n\n        if (this.startDate == this.endDate) {\n            this.alertService.setAlertProperties(this.reportAlertObj, ReportErrorEnum.INVALID_DATE_LABEL, ReportErrorEnum.INVALID_DATE_MESSAGE, MessageAlertTypeEnum.INFO, MessageAlertIconEnum.INFO_ICON);\n            return;\n        }\n\n        this.showLoader = true;\n\n        try {\n            const requestData = this.createDataRequest();\n\n            this.reportData = await this.aggregateDataService.getAggregateData(this.orgID, requestData);\n\n            if (this.reportData?.length > 0 && !this.reportData?.every(item => item.data.length == 0)) {\n                this.timestamp = this.reportService.extractTimestamp(this.reportData);\n                this.renderTable = this.reportService.populateTable(this.timestamp, this.reportData, this.DateFormatEnum.DATE_TIME);\n            } else {\n                this.alertService.setAlertProperties(this.reportAlertObj, ReportErrorEnum.DATA_NOT_FOUND_LABEL, ReportErrorEnum.DATA_NOT_FOUND_MESSAGE, MessageAlertTypeEnum.WARNING, MessageAlertIconEnum.WARNING_ICON);\n            }\n\n        } catch (error) {\n            console.error(\"Error in viewReport()\", error);\n            this.alertService.setAlertProperties(this.reportAlertObj, ReportErrorEnum.INVALID_ERROR_LABEL, ReportErrorEnum.INVALID_ERROR_MESSAGE, MessageAlertTypeEnum.DANGER, MessageAlertIconEnum.DANGER_ICON);\n        } finally {\n            this.showLoader = false;\n        }\n    }\n\n    createDataRequest() {\n\n        if (this.entityID?.length > 0) {\n            this.entityID = this.tscCommonService.removeSelectAllID(this.entityID);\n        }\n\n        const requestData = new AggregateDataRequest();\n\n        requestData.startTime = this.startDate;\n        requestData.endTime = this.endDate;\n        requestData.interval = this.aggDuration;\n        requestData.entityID = this.entityID;\n        requestData.params = [\n            {\n                name: this.parameterFC.value,\n                dsAgg: \"sum\",\n                agg: \"sum\",\n                source_or_load: this.category,\n                sourceLoadType: 'all'\n            }\n        ];\n        requestData.nullifyParams();\n\n        return requestData;\n    }\n\n    async downloadReport(format: string) {\n        this.alertService.resetAlertProperties(this.reportAlertObj);\n\n        if (this.isValidInputField()) {\n            this.toastService.openToast(InvalidForm.INVALID_FORM_TITLE, InvalidForm.INVALID_FORM_MESSAGE, ToastrColor.ERROR);\n            return;\n        }\n\n        if (this.startDate == this.endDate) {\n            this.alertService.setAlertProperties(this.reportAlertObj, ReportErrorEnum.INVALID_DATE_LABEL, ReportErrorEnum.INVALID_DATE_MESSAGE, MessageAlertTypeEnum.INFO, MessageAlertIconEnum.INFO_ICON);\n            return;\n        }\n\n        this.showLoader = true;\n\n        try {\n            const requestData = new DownloadReportRequest();\n\n            requestData.request = this.createDataRequest();\n            requestData.reportName = this.pageTitle;\n            requestData.reportFormat = format;\n\n            await this.reportService.downloadReport(this.orgID, requestData);\n\n        } catch (error) {\n            console.error(\"Error in downloadReport()\", error);\n        } finally {\n            this.showLoader = false;\n        }\n    }\n\n    isValidInputField() {\n        const controls = [\n            this.customDateInput.startDateFC,\n            this.aggDurationInput.aggDurationFC,\n            this.entityInput.multipleEntityFC,\n            this.parameterFC\n        ];\n\n        controls.forEach(control => control.markAsTouched());\n        return controls.some(control => control.invalid);\n    }\n\n    scheduleReport(value) {\n        if (value) {\n            const applicationName = this.applicationKeyID == ApplicationKeyID.WATER_KEY_ID ? 'water' : 'energy';\n            this.router.navigate([`schedule-report/${applicationName}-breakup`]);\n        }\n    }\n\n}","<div class=\"card main-card cardOverwrite h100\">\n    <div class=\"headerContainer\">\n        <div class=\"headerLeftContainer\">\n            <div class=\"pageTitle\">{{ pageTitle }}</div>\n        </div>\n        <div class=\"headerRightContainer\">\n            <div class=\"headerRightContainerInner\">\n                <mat-slide-toggle (change)=\"scheduleReport($event.checked)\">Schedule report</mat-slide-toggle>\n            </div>\n        </div>\n    </div>\n\n    <div class=\"card-body\">\n        <div class=\"row\">\n            <div class=\"col-sm-4\">\n                <lib-source-load #sourceLoadInput (emitFilter)=\"sourceLoadInpChange()\"></lib-source-load>\n            </div>\n        </div>\n\n        <div class=\"row mt-3\">\n            <div class=\"col-sm-3\">\n                <lib-date-input #customDateInput (emitFilter)=\"dateInpChange()\" [materialFieldWidthInp]=\"true\"\n                    [materialFormFieldAppearanceInp]=\"MaterialFormFieldAppearance.FORM_FIELD_APPEARANCE\"\n                    [isMandatoryFieldInp]=\"true\" [dateInputTypeInp]=\"DateInputTypeEnum.CUSTOM_INPUT\"\n                    [dateTypeInp]=\"DateTypeEnum.EXCLUSIVE\" [showDefaultDurationInp]=\"true\" [showCdrRangeLabelInp]=\"true\"\n                    [labelInp]=\"'Select date'\" [timezoneInp]=\"timezone\" [rangeInp]=\"CUSTOM_RANGE_CONSTANT\" [showTimeInCDRInp]=\"true\"\n                    [showRangeInp]=\"true\" [cdrFormatInp]=\"'YYYY-MM-DD HH:mm:ss'\"></lib-date-input>\n            </div>\n\n            <div class=\"col-sm-3\">\n                <lib-aggregation-duration #aggDurationInput\n                    (emitFilter)=\"aggDurationInpChange()\"></lib-aggregation-duration>\n            </div>\n\n            <div class=\"col-sm-3\">\n                <lib-entity #entityInput [dropdownTypeInp]=\"DropdownTypeEnum.MULTIPLE_DROPDOWN\"\n                    (emitFilter)=\"entityInpChange()\"></lib-entity>\n            </div>\n\n            <div class=\"col-sm-3\">\n                <mat-form-field class=\"matFieldWidth100\" [appearance]=\"MaterialFormFieldAppearance.FORM_FIELD_APPEARANCE\">\n                    <mat-label>Select consumption parameter</mat-label>\n\n                    <mat-select [formControl]=\"parameterFC\" required>\n                        <ng-container\n                            *ngIf=\"consumptionParamM && consumptionParamM.length > 0 && consumptionParamM[0]['id']; else noConsumptionParamM\">\n                            <mat-option *ngFor=\"let param of consumptionParamM\" [value]=\"param.paramMetric\" (click)=\"selectedParameters()\">\n                                {{ param.label }}\n                            </mat-option>\n                        </ng-container>\n\n                        <ng-template #noConsumptionParamM>\n                            <mat-option disabled>\n                                {{ COMMON_CONSTANT.NO_DATA_FOUND }}\n                            </mat-option>\n                        </ng-template>\n                    </mat-select>\n\n                    <mat-error *ngIf=\"parameterFC.hasError('required')\">\n                        {{ FormErrorEnum.REQUIRED }}\n                    </mat-error>\n                </mat-form-field>\n            </div>\n        </div>\n\n        <div class=\"row\">\n            <div class=\"col-sm-12\">\n                <div class=\"float-end\">\n                    <button class=\"btn btn-sm btn-primary\" type=\"button\" (click)=\"viewReport()\" matRipple\n                        [matRippleCentered]=\"MATERIAL_CONSTANT.MAT_RIPPLE_CENTER\">\n                        {{ ButtonLabelEnum.READ_BTN_LABEL }}\n                    </button>\n                    <lib-download-report (fileTypeEmitted)=\"downloadReport($event)\"></lib-download-report>\n                </div>\n            </div>\n        </div>\n\n        <div class=\"row\">\n            <div class=\"col-sm-12\">\n                <lib-message-alert *ngIf=\"reportAlertObj.showAlert\" [labelInp]=\"reportAlertObj.alertLabel\"\n                    [contentInp]=\"reportAlertObj.alertContent\" [messageAlertTypeInp]=\"reportAlertObj.messageAlertType\"\n                    [messageAlertIconInp]=\"reportAlertObj.messageAlertIcon\">\n                </lib-message-alert>\n            </div>\n        </div>\n\n        <div class=\"row\">\n            <div class=\"centerAlign\">\n                <lib-skeleton-loader *ngIf=\"showLoader\" [count]=\"3\" [appearance]=\"'circle'\"\n                    [theme]=\"{ height: '15px', width: '15px', 'background-color': '#e7ebf3' }\"></lib-skeleton-loader>\n            </div>\n        </div>\n\n        <div class=\"row mt-3\" *ngIf=\"renderTable && renderTable.length > 0\">\n            <div class=\"overflowX customScrollBar\">\n                <table class=\"table\">\n                    <tbody>\n                        <tr class=\"tableHeader\">\n                            <td class=\"fw-bold\"> Sr. No. </td>\n                            <td align=\"center\" class=\"fw-bold\"> Time </td>\n                            <ng-container *ngFor=\"let data of reportData; let i = index\">\n                                <td align=\"center\" class=\"fw-bold\">\n                                    {{ data.entityName }}<br />\n                                    {{ data.paramLabel }} ({{ data.unit }}) ({{ data.dsAgg }})\n                                </td>\n                            </ng-container>\n                        </tr>\n                    </tbody>\n                    <tbody>\n                        <tr *ngFor=\"let row of renderTable\">\n                            <td>{{ row.index }}</td>\n                            <td align=\"center\" class=\"colWidthContainingDateTime\">{{ row.time }}</td>\n                            <td align=\"center\" *ngFor=\"let value of row.data\">{{ value ? value : commonConstant.HYPHEN\n                                }}\n                            </td>\n                        </tr>\n                    </tbody>\n                </table>\n            </div>\n        </div>\n    </div>\n</div>","import { NgModule } from '@angular/core';\nimport { RouterModule, Routes } from '@angular/router';\n\nimport { BreakupReportComponent } from './breakup.component';\n\nconst routes: Routes = [\n    {\n        path: '',\n        component: BreakupReportComponent\n    }\n];\n\n@NgModule({\n    imports: [RouterModule.forChild(routes)],\n    exports: [RouterModule]\n})\nexport class BreakupReportRoutingModule { }\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\n\nimport {\n    FormsModule,\n    ReactiveFormsModule\n} from '@angular/forms';\n\nimport { MatFormFieldModule } from '@angular/material/form-field';\nimport { MatSelectModule } from '@angular/material/select';\nimport { MatTableModule } from '@angular/material/table';\nimport { MatRippleModule } from '@angular/material/core';\nimport { MatSlideToggleModule } from '@angular/material/slide-toggle';\n\nimport { SourceLoadModule } from '../../_shared/filter/source-load/source-load.module';\nimport { AggregationDurationModule } from '../../dropdown/aggregation-duration/aggregation-duration.module';\nimport { EntityModule } from '../../dropdown/entity/entity.module';\nimport { DownloadReportModule } from '../../_shared/download-report/download-report.module';\n\nimport { BreakupReportRoutingModule } from './breakup-routing.module';\nimport { BreakupReportComponent } from './breakup.component';\n\n// tsc-library\nimport { DateInputModule } from '@library/date';\nimport { MessageAlertModule, SkeletonModule } from '@library/tsc-common';\n// /tsc-library/\n\n\n@NgModule({\n    declarations: [\n        BreakupReportComponent\n    ],\n    imports: [\n        CommonModule,\n        BreakupReportRoutingModule,\n\n        FormsModule,\n        ReactiveFormsModule,\n\n        MatFormFieldModule,\n        MatSelectModule,\n        MatTableModule,\n        MatRippleModule,\n        MatSlideToggleModule,\n\n        SourceLoadModule,\n        AggregationDurationModule,\n        EntityModule,\n        DownloadReportModule,\n\n        DateInputModule,\n        MessageAlertModule,\n        SkeletonModule\n    ]\n})\nexport class BreakupReportModule { }\n","import { Component, OnInit, ViewChild } from '@angular/core';\nimport { Router } from '@angular/router';\nimport { FormBuilder, FormGroup, Validators } from '@angular/forms';\n\nimport { ReportErrorEnum } from '../../../enum/error.enum';\n\nimport { Alert, AlertM } from '../../../model/alert.model';\nimport { MeterData, MeterDataI } from '../../../model/aggregate-data.model';\n\nimport { AggregateDataService } from '../../../service/aggregate-data.service';\nimport { AlertService } from '../../../service/alert.service';\nimport { ReportService } from '../../../service/report.service';\n\n// tsc-library\nimport { ButtonLabelEnum, COMMON_CONSTANT, FileTypeEnum, FormErrorEnum, InvalidForm, MATERIAL_CONSTANT, MaterialFormFieldAppearance, MessageAlertIconEnum, MessageAlertTypeEnum } from '@library/tsc-common';\nimport { DateFormatEnum, DateInputComponent, DateInputTypeEnum, DateTypeEnum } from '@library/date';\nimport { StorageService } from '@library/storage-service';\nimport { ToastrColor, ToastrService } from '@library/toastr-service';\n// /tsc-library/\n\n@Component({\n    selector: 'lib-cgwa',\n    templateUrl: './cgwa.component.html',\n    styles: [\n    ]\n})\nexport class CgwaReportComponent implements OnInit {\n\n    MATERIAL_CONSTANT = MATERIAL_CONSTANT;\n    COMMON_CONSTANT = COMMON_CONSTANT;\n\n    MaterialFormFieldAppearance = MaterialFormFieldAppearance;\n    ButtonLabelEnum = ButtonLabelEnum;\n    DateFormatEnum = DateFormatEnum;\n    DateInputTypeEnum = DateInputTypeEnum;\n    DateTypeEnum = DateTypeEnum;\n    FileTypeEnum = FileTypeEnum;\n    FormErrorEnum = FormErrorEnum;\n\n    orgID: any;\n    timezone: string;\n\n    reportData = [new MeterData()];\n    showAlert: boolean = false;\n    showLoader: boolean = false;\n\n    reportAlertObj: AlertM = new Alert();\n\n    reportFG: FormGroup;\n\n    @ViewChild('monthDateInput') monthDateInput: DateInputComponent;\n\n    constructor(\n        private router: Router,\n        private formBuilder: FormBuilder,\n        private storageService: StorageService,\n        private toastService: ToastrService,\n        private alertService: AlertService,\n        private aggregateDataService: AggregateDataService,\n        private reportService: ReportService\n    ) { }\n\n    ngOnInit(): void {\n        this.orgID = this.storageService.getStorage('currentOrgID');\n        this.timezone = this.storageService.getStorage('timezone');\n\n        this.reportFGInit();\n    }\n\n    reportFGInit() {\n        this.reportFG = this.formBuilder.group({\n            startDate: [, Validators.required],\n            endDate: [, Validators.required],\n            sourceConsumer: this.formBuilder.group({\n                type: ['SOURCE', Validators.required],\n                keyID: ['BOREWELL', Validators.required]\n            }),\n            params: this.formBuilder.array([this.createParamsGroup()]),\n            interval: [, Validators.required]\n        });\n    }\n\n    createParamsGroup() {\n        return this.formBuilder.group({\n            name: ['gwFlowTotalizer', Validators.required],\n            dsAgg: ['sum', Validators.required],\n            agg: ['sum', Validators.required]\n        });\n    }\n\n    dateInpChange() {\n        let startDate = this.monthDateInput.startDateFC.value;\n        let endDate = this.monthDateInput.endDateFC.value;\n\n        this.reportFG.get('startDate').patchValue(startDate);\n        this.reportFG.get('endDate').patchValue(endDate);\n    }\n\n    reportSubmit() {\n\n        this.alertService.resetAlertProperties(this.reportAlertObj);\n\n        if (this.reportFG.invalid) {\n            console.log('Invalid form:', this.reportFG.value);\n            this.toastService.openToast(InvalidForm.INVALID_FORM_TITLE, InvalidForm.INVALID_FORM_MESSAGE, ToastrColor.ERROR);\n            return;\n        } else {\n            this.showLoader = true;\n            this.alertService.resetAlertProperties(this.reportAlertObj);\n            this.viewReport();\n        }\n    }\n\n    async viewReport() {\n        try {\n            const result = <MeterDataI[]>await this.aggregateDataService.getMeterAggregateDataForReport(this.orgID, this.reportFG.value);\n\n            if (result && result.length > 0 && result[0]['date']) {\n                this.reportData = result;\n            } else {\n                this.alertService.setAlertProperties(this.reportAlertObj, ReportErrorEnum.DATA_NOT_FOUND_LABEL, ReportErrorEnum.DATA_NOT_FOUND_MESSAGE, MessageAlertTypeEnum.WARNING, MessageAlertIconEnum.WARNING_ICON);\n            }\n\n        } catch (error) {\n            console.error(\"Error in viewReport()\", error);\n            this.alertService.setAlertProperties(this.reportAlertObj, ReportErrorEnum.INVALID_ERROR_LABEL, ReportErrorEnum.INVALID_ERROR_MESSAGE, MessageAlertTypeEnum.DANGER, MessageAlertIconEnum.DANGER_ICON);\n        } finally {\n            this.showLoader = false;\n        }\n    }\n\n    async downloadReport(format: string) {\n        this.alertService.resetAlertProperties(this.reportAlertObj);\n\n        if (this.reportFG.invalid) {\n            console.log('Invalid form:', this.reportFG.value);\n            this.reportFG.markAllAsTouched();\n            this.toastService.openToast(InvalidForm.INVALID_FORM_TITLE, InvalidForm.INVALID_FORM_MESSAGE, ToastrColor.ERROR);\n            return;\n        }\n\n        this.showLoader = true;\n\n        try {\n            const requestData = {};\n\n            requestData['request'] = this.reportFG.value;\n            requestData['reportName'] = 'CGWA Report';\n            requestData['reportFormat'] = format;\n\n            await this.reportService.downloadConsumptionReport(this.orgID, requestData);\n\n        } catch (error) {\n            console.error(\"Error in downloadConsumptionReport()\", error);\n        } finally {\n            this.showLoader = false;\n        }\n    }\n\n    errorHandling = (formGroup: FormGroup, controlPath: string, error: string): boolean => {\n        return formGroup.get(controlPath).hasError(error);\n    }\n\n    scheduleReport(value) {\n        if (value) {\n            this.router.navigate([`schedule-report/cgwa`]);\n        }\n    }\n\n}","<div class=\"card main-card cardOverwrite h100\">\n    <div class=\"headerContainer\">\n        <div class=\"headerLeftContainer\">\n            <div class=\"pageTitle\">CGWA Report</div>\n        </div>\n        <div class=\"headerRightContainer\">\n            <div class=\"headerRightContainerInner\">\n                <mat-slide-toggle (change)=\"scheduleReport($event.checked)\">Schedule report</mat-slide-toggle>\n            </div>\n        </div>\n    </div>\n\n    <div class=\"card-body\">\n        <form [formGroup]=\"reportFG\" (ngSubmit)=\"reportSubmit()\">\n            <div class=\"row\">\n                <div class=\"col-sm-3\">\n                    <lib-date-input #monthDateInput (emitFilter)=\"dateInpChange()\" [materialFieldWidthInp]=\"true\"\n                        [materialFormFieldAppearanceInp]=\"MaterialFormFieldAppearance.FORM_FIELD_APPEARANCE\"\n                        [isMandatoryFieldInp]=\"true\" [dateInputTypeInp]=\"DateInputTypeEnum.MONTH_INPUT\"\n                        [dateTypeInp]=\"DateTypeEnum.EXCLUSIVE\" [showDefaultDurationInp]=\"true\"\n                        [labelInp]=\"'Select date'\" [timezoneInp]=\"timezone\"></lib-date-input>\n                </div>\n\n                <div class=\"col-sm-3\">\n                    <mat-form-field class=\"matFieldWidth100\"\n                        [appearance]=\"MaterialFormFieldAppearance.FORM_FIELD_APPEARANCE\">\n                        <mat-label>Select aggregation duration</mat-label>\n                        <mat-select formControlName=\"interval\" required>\n                            <mat-option [value]=\"'DAILY'\">Daily</mat-option>\n                            <mat-option [value]=\"'MONTHLY'\">Monthly</mat-option>\n                        </mat-select>\n                        <mat-error *ngIf=\"errorHandling(reportFG, 'interval', 'required')\">\n                            {{ FormErrorEnum.REQUIRED }}\n                        </mat-error>\n                    </mat-form-field>\n                </div>\n            </div>\n\n            <button class=\"d-none\" type=\"submit\" #formSubmitBtn></button>\n        </form>\n\n        <div class=\"row\">\n            <div class=\"col-sm-12\">\n                <div class=\"float-end\">\n                    <button class=\"btn btn-sm btn-primary\" (click)=\"formSubmitBtn.click()\" matRipple\n                        [matRippleCentered]=\"MATERIAL_CONSTANT.MAT_RIPPLE_CENTER\">\n                        {{ ButtonLabelEnum.READ_BTN_LABEL }}\n                    </button>\n                    <lib-download-report [excludeFileTypeInp]=\"FileTypeEnum.CSV\" (fileTypeEmitted)=\"downloadReport($event)\"></lib-download-report>\n                </div>\n            </div>\n        </div>\n\n        <div class=\"row mt-3\">\n            <div class=\"col-sm-12\">\n                <lib-message-alert *ngIf=\"reportAlertObj.showAlert\" [labelInp]=\"reportAlertObj.alertLabel\"\n                    [contentInp]=\"reportAlertObj.alertContent\" [messageAlertTypeInp]=\"reportAlertObj.messageAlertType\"\n                    [messageAlertIconInp]=\"reportAlertObj.messageAlertIcon\">\n                </lib-message-alert>\n            </div>\n        </div>\n\n        <div class=\"row mt-3\">\n            <div class=\"centerAlign\">\n                <lib-skeleton-loader *ngIf=\"showLoader\" [count]=\"3\" [appearance]=\"'circle'\"\n                    [theme]=\"{ height: '15px', width: '15px', 'background-color': '#e7ebf3' }\"></lib-skeleton-loader>\n            </div>\n        </div>\n\n        <div class=\"row mt-3\" *ngIf=\"reportData && reportData.length > 0 && reportData[0].date\">\n            <table class=\"table\">\n                <tbody>\n                    <tr class=\"tableHeader\">\n                        <td align=\"center\" class=\"fw-bold\"> Date </td>\n                        <td align=\"center\" class=\"fw-bold\"> Meter name </td>\n                        <td align=\"center\" class=\"fw-bold\"> Parameter name </td>\n                        <td align=\"center\" class=\"fw-bold\"> Meter start reading </td>\n                        <td align=\"center\" class=\"fw-bold\"> Meter end reading </td>\n                        <td align=\"center\" class=\"fw-bold\"> Consumption </td>\n                    </tr>\n                </tbody>\n                <tbody>\n                    <tr *ngFor=\"let data of reportData; let i = index\">\n                        <td align=\"center\" class=\"colWidthContainingDateTime\">{{ row?.date | date: 'dd-MMM-yyyy\n                            HH:mm:ss' }}</td>\n                        <td align=\"center\">{{ row?.meterName }}</td>\n                        <td align=\"center\">{{ row?.parameterName }}</td>\n                        <td align=\"center\">{{ row?.meterStartReading }}</td>\n                        <td align=\"center\">{{ row?.meterEndReading }}</td>\n                        <td align=\"center\">{{ row?.meterConsumption }}</td>\n                    </tr>\n                </tbody>\n            </table>\n        </div>\n    </div>\n</div>","import { NgModule } from '@angular/core';\nimport { RouterModule, Routes } from '@angular/router';\n\nimport { CgwaReportComponent } from './cgwa.component';\n\nconst routes: Routes = [\n    {\n        path: '',\n        component: CgwaReportComponent\n    }\n];\n\n@NgModule({\n    imports: [RouterModule.forChild(routes)],\n    exports: [RouterModule]\n})\n\nexport class CgwaReportRoutingModule { }\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\n\nimport {\n    FormsModule,\n    ReactiveFormsModule\n} from '@angular/forms';\n\nimport { MatFormFieldModule } from '@angular/material/form-field';\nimport { MatSelectModule } from '@angular/material/select';\nimport { MatTableModule } from '@angular/material/table';\nimport { MatRippleModule } from '@angular/material/core';\nimport { MatSlideToggleModule } from '@angular/material/slide-toggle';\n\nimport { DownloadReportModule } from '../../_shared/download-report/download-report.module';\n\nimport { CgwaReportRoutingModule } from './cgwa-routing.module';\nimport { CgwaReportComponent } from './cgwa.component';\n\n// tsc-library\nimport { DateInputModule } from '@library/date';\nimport { MessageAlertModule, SkeletonModule } from '@library/tsc-common';\n// /tsc-library/\n\n@NgModule({\n    declarations: [\n        CgwaReportComponent\n    ],\n    imports: [\n        CommonModule,\n        CgwaReportRoutingModule,\n\n        FormsModule,\n        ReactiveFormsModule,\n\n        MatFormFieldModule,\n        MatSelectModule,\n        MatTableModule,\n        MatRippleModule,\n        MatSlideToggleModule,\n\n        DownloadReportModule,\n\n        DateInputModule,\n        MessageAlertModule,\n        SkeletonModule\n    ]\n})\nexport class CgwaReportModule { }\n","import { Component, OnInit, ViewChild } from '@angular/core';\n\nimport { ReportErrorEnum } from '../../../enum/error.enum';\nimport { DropdownTypeEnum } from '../../../enum/dropdown.enum';\n\nimport { AggregateDataRequest } from '../../../model/aggregate-data.model';\nimport { Alert, AlertM } from '../../../model/alert.model';\nimport { DownloadReportRequest } from '../../../model/report.model';\n\nimport { SourceLoadComponent } from '../../_shared/filter/source-load/source-load.component';\nimport { AggregationDurationComponent } from '../../dropdown/aggregation-duration/aggregation-duration.component';\nimport { EntityComponent } from '../../dropdown/entity/entity.component';\n\nimport { AggregateDataService } from '../../../service/aggregate-data.service';\nimport { ReportService } from '../../../service/report.service';\nimport { AlertService } from '../../../service/alert.service';\n\n// tsc-library\nimport { CUSTOM_RANGE_CONSTANT_EXCLUSIVE_DATE, DateFormatEnum, DateInputComponent, DateInputTypeEnum, DateTypeEnum } from '@library/date';\nimport { StorageService } from '@library/storage-service';\nimport { ToastrColor, ToastrService } from '@library/toastr-service';\nimport { ButtonLabelEnum, COMMON_CONSTANT, InvalidForm, MATERIAL_CONSTANT, MaterialFormFieldAppearance, MessageAlertIconEnum, MessageAlertTypeEnum, TSCCommonService } from '@library/tsc-common';\nimport { ApplicationKeyID } from '@library/application-service';\n// /tsc-library/\n\n@Component({\n    selector: 'lib-consumption-breakup',\n    templateUrl: './consumption-breakup.component.html',\n    styles: [\n    ]\n})\n\nexport class ConsumptionBreakupComponent implements OnInit {\n\n    materialConstant = MATERIAL_CONSTANT;\n    commonConstant = COMMON_CONSTANT;\n    customRangeConstant = CUSTOM_RANGE_CONSTANT_EXCLUSIVE_DATE;\n\n    materialFormFieldAppearance = MaterialFormFieldAppearance;\n    buttonLabelEnum = ButtonLabelEnum;\n    dropdownTypeEnum = DropdownTypeEnum;\n    dateFormatEnum = DateFormatEnum;\n    dateInputTypeEnum = DateInputTypeEnum;\n    dateTypeEnum = DateTypeEnum;\n\n    orgID: any;\n    applicationKeyID: any;\n    paramMetric: any;\n    timezone: string;\n    category: string;\n    startDate: string;\n    endDate: string;\n    aggDuration: string;\n    entityID: any;\n    timestamp: any;\n    renderTable: any;\n    reportData: any;\n    showAlert: boolean = false;\n    showLoader: boolean = false;\n\n    reportAlertObj: AlertM = new Alert();\n\n    @ViewChild('sourceLoadInput') sourceLoadInput: SourceLoadComponent;\n    @ViewChild('customDateInput') customDateInput: DateInputComponent;\n    @ViewChild('aggDurationInput') aggDurationInput: AggregationDurationComponent;\n    @ViewChild('entityInput') entityInput: EntityComponent;\n\n    constructor(\n        private storageService: StorageService,\n        private toastService: ToastrService,\n        private tscCommonService: TSCCommonService,\n        private aggregateDataService: AggregateDataService,\n        private reportService: ReportService,\n        private alertService: AlertService\n    ) { }\n\n    ngOnInit(): void {\n        this.orgID = this.storageService.getStorage('currentOrgID');\n        this.timezone = this.storageService.getStorage('timezone');\n        this.applicationKeyID = this.storageService.getStorage('applicationKeyID');\n\n        if (this.applicationKeyID == ApplicationKeyID.ENERGY_KEY_ID) {\n            this.paramMetric = \"engEnergyUsed\";\n        } else if (this.applicationKeyID == ApplicationKeyID.WATER_KEY_ID) {\n            this.paramMetric = \"gwFlowTotalizer\";\n        }\n    }\n\n    sourceLoadInpChange() {\n        this.category = this.sourceLoadInput.categoryFC.value;\n    }\n\n    dateInpChange() {\n        this.startDate = this.customDateInput.startDateFC.value;\n        this.endDate = this.customDateInput.endDateFC.value;\n\n        this.alertService.resetAlertProperties(this.reportAlertObj);\n    }\n\n    aggDurationInpChange() {\n        this.aggDuration = this.aggDurationInput.aggDurationFC.value;\n\n        this.alertService.resetAlertProperties(this.reportAlertObj);\n    }\n\n    entityInpChange() {\n        this.entityID = this.entityInput.multipleEntityFC.value;\n\n        this.alertService.resetAlertProperties(this.reportAlertObj);\n    }\n\n    async viewReport() {\n\n        this.alertService.resetAlertProperties(this.reportAlertObj);\n\n        if (this.isValidInputField()) {\n            this.toastService.openToast(InvalidForm.INVALID_FORM_TITLE, InvalidForm.INVALID_FORM_MESSAGE, ToastrColor.ERROR);\n            return;\n        }\n\n        if (this.startDate == this.endDate) {\n            this.alertService.setAlertProperties(this.reportAlertObj, ReportErrorEnum.INVALID_DATE_LABEL, ReportErrorEnum.INVALID_DATE_MESSAGE, MessageAlertTypeEnum.INFO, MessageAlertIconEnum.INFO_ICON);\n            return;\n        }\n\n        this.showLoader = true;\n\n        try {\n            const requestData = this.createDataRequest();\n\n            this.reportData = await this.aggregateDataService.getAggregateData(this.orgID, requestData);\n\n            if (this.reportData?.length > 0 && !this.reportData?.every(item => item.data.length == 0)) {\n                this.timestamp = this.reportService.extractTimestamp(this.reportData);\n                this.renderTable = this.reportService.populateTable(this.timestamp, this.reportData, this.dateFormatEnum.DATE_TIME);\n            } else {\n                this.alertService.setAlertProperties(this.reportAlertObj, ReportErrorEnum.DATA_NOT_FOUND_LABEL, ReportErrorEnum.DATA_NOT_FOUND_MESSAGE, MessageAlertTypeEnum.WARNING, MessageAlertIconEnum.WARNING_ICON);\n            }\n\n        } catch (error) {\n            console.error(\"Error in viewReport()\", error);\n            this.alertService.setAlertProperties(this.reportAlertObj, ReportErrorEnum.INVALID_ERROR_LABEL, ReportErrorEnum.INVALID_ERROR_MESSAGE, MessageAlertTypeEnum.DANGER, MessageAlertIconEnum.DANGER_ICON);\n        } finally {\n            this.showLoader = false;\n        }\n    }\n\n    createDataRequest() {\n\n        if (this.entityID?.length > 0) {\n            this.entityID = this.tscCommonService.removeSelectAllID(this.entityID);\n        }\n\n        const requestData = new AggregateDataRequest();\n\n        requestData.startTime = this.startDate;\n        requestData.endTime = this.endDate;\n        requestData.interval = this.aggDuration;\n        requestData.entityID = this.entityID;\n        requestData.params = [\n            {\n                name: this.paramMetric,\n                dsAgg: \"sum\",\n                agg: \"sum\",\n                source_or_load: this.category,\n                sourceLoadType: 'all'\n            }\n        ];\n        requestData.nullifyParams();\n\n        return requestData;\n    }\n\n    async downloadReport(format: string) {\n        this.alertService.resetAlertProperties(this.reportAlertObj);\n\n        if (this.isValidInputField()) {\n            this.toastService.openToast(InvalidForm.INVALID_FORM_TITLE, InvalidForm.INVALID_FORM_MESSAGE, ToastrColor.ERROR);\n            return;\n        }\n\n        if (this.startDate == this.endDate) {\n            this.alertService.setAlertProperties(this.reportAlertObj, ReportErrorEnum.INVALID_DATE_LABEL, ReportErrorEnum.INVALID_DATE_MESSAGE, MessageAlertTypeEnum.INFO, MessageAlertIconEnum.INFO_ICON);\n            return;\n        }\n\n        this.showLoader = true;\n\n        try {\n            const requestData = new DownloadReportRequest();\n\n            requestData.request = this.createDataRequest();\n            requestData.reportName = 'Consumption Breakup Report';\n            requestData.reportFormat = format;\n\n            await this.reportService.downloadReport(this.orgID, requestData);\n\n        } catch (error) {\n            console.error(\"Error in downloadReport()\", error);\n        } finally {\n            this.showLoader = false;\n        }\n    }\n\n    isValidInputField() {\n        const controls = [\n            this.customDateInput.startDateFC,\n            this.aggDurationInput.aggDurationFC,\n            this.entityInput.multipleEntityFC,\n        ];\n\n        controls.forEach(control => control.markAsTouched());\n        return controls.some(control => control.invalid);\n    }\n\n}","<div class=\"card main-card cardOverwrite h100\">\n    <div class=\"headerContainer\">\n        <div class=\"headerLeftContainer\">\n            <div class=\"pageTitle\">Consumption Breakup Report</div>\n        </div>\n    </div>\n\n    <div class=\"card-body\">\n        <div class=\"row\">\n            <div class=\"col-sm-4\">\n                <lib-source-load #sourceLoadInput (emitFilter)=\"sourceLoadInpChange()\"></lib-source-load>\n            </div>\n        </div>\n\n        <div class=\"row mt-3\">\n            <div class=\"col-sm-3\">\n                <lib-date-input #customDateInput (emitFilter)=\"dateInpChange()\" [materialFieldWidthInp]=\"true\"\n                    [materialFormFieldAppearanceInp]=\"materialFormFieldAppearance.FORM_FIELD_APPEARANCE\"\n                    [isMandatoryFieldInp]=\"true\" [dateInputTypeInp]=\"dateInputTypeEnum.CUSTOM_INPUT\"\n                    [dateTypeInp]=\"dateTypeEnum.EXCLUSIVE\" [showDefaultDurationInp]=\"true\" [showCdrRangeLabelInp]=\"true\"\n                    [labelInp]=\"'Select date'\" [timezoneInp]=\"timezone\" [rangeInp]=\"customRangeConstant\" [showTimeInCDRInp]=\"true\"\n                    [showRangeInp]=\"true\" [cdrFormatInp]=\"'YYYY-MM-DD HH:mm:ss'\"></lib-date-input>\n            </div>\n\n            <div class=\"col-sm-3\">\n                <lib-aggregation-duration #aggDurationInput\n                    (emitFilter)=\"aggDurationInpChange()\"></lib-aggregation-duration>\n            </div>\n\n            <div class=\"col-sm-3\">\n                <lib-entity #entityInput [dropdownTypeInp]=\"dropdownTypeEnum.MULTIPLE_DROPDOWN\"\n                    (emitFilter)=\"entityInpChange()\"></lib-entity>\n            </div>\n        </div>\n\n        <div class=\"row\">\n            <div class=\"col-sm-12\">\n                <div class=\"float-end\">\n                    <button class=\"btn btn-sm btn-primary\" type=\"button\" (click)=\"viewReport()\" matRipple\n                        [matRippleCentered]=\"materialConstant.MAT_RIPPLE_CENTER\">\n                        {{ buttonLabelEnum.READ_BTN_LABEL }}\n                    </button>\n                    <lib-download-report (fileTypeEmitted)=\"downloadReport($event)\"></lib-download-report>\n                </div>\n            </div>\n        </div>\n\n        <div class=\"row\">\n            <div class=\"col-sm-12\">\n                <lib-message-alert *ngIf=\"reportAlertObj.showAlert\" [labelInp]=\"reportAlertObj.alertLabel\"\n                    [contentInp]=\"reportAlertObj.alertContent\" [messageAlertTypeInp]=\"reportAlertObj.messageAlertType\"\n                    [messageAlertIconInp]=\"reportAlertObj.messageAlertIcon\">\n                </lib-message-alert>\n            </div>\n        </div>\n\n        <div class=\"row\">\n            <div class=\"centerAlign\">\n                <lib-skeleton-loader *ngIf=\"showLoader\" [count]=\"3\" [appearance]=\"'circle'\"\n                    [theme]=\"{ height: '15px', width: '15px', 'background-color': '#e7ebf3' }\"></lib-skeleton-loader>\n            </div>\n        </div>\n\n        <div class=\"row mt-3\" *ngIf=\"renderTable && renderTable.length > 0\">\n            <div class=\"overflowX customScrollBar\">\n                <table class=\"table\">\n                    <tbody>\n                        <tr class=\"tableHeader\">\n                            <td class=\"fw-bold\"> Sr. No. </td>\n                            <td align=\"center\" class=\"fw-bold\"> Time </td>\n                            <ng-container *ngFor=\"let data of reportData; let i = index\">\n                                <td align=\"center\" class=\"fw-bold\">\n                                    {{ data.entityName }}<br />\n                                    {{ data.paramLabel }} ({{ data.unit }}) ({{ data.dsAgg }})\n                                </td>\n                            </ng-container>\n                        </tr>\n                    </tbody>\n                    <tbody>\n                        <tr *ngFor=\"let row of renderTable\">\n                            <td>{{ row.index }}</td>\n                            <td align=\"center\" class=\"colWidthContainingDateTime\">{{ row.time }}</td>\n                            <td align=\"center\" *ngFor=\"let value of row.data\">{{ value ? value : commonConstant.HYPHEN\n                                }}\n                            </td>\n                        </tr>\n                    </tbody>\n                </table>\n            </div>\n        </div>\n    </div>\n</div>","import { NgModule } from '@angular/core';\nimport { RouterModule, Routes } from '@angular/router';\n\nimport { ConsumptionBreakupComponent } from './consumption-breakup.component';\n\nconst routes: Routes = [\n    {\n        path: '',\n        component: ConsumptionBreakupComponent\n    }\n];\n\n@NgModule({\n    imports: [RouterModule.forChild(routes)],\n    exports: [RouterModule]\n})\nexport class ConsumptionBreakupRoutingModule { }\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\n\nimport { MatTableModule } from '@angular/material/table';\nimport { MatRippleModule } from '@angular/material/core';\n\nimport { SourceLoadModule } from '../../_shared/filter/source-load/source-load.module';\nimport { AggregationDurationModule } from '../../dropdown/aggregation-duration/aggregation-duration.module';\nimport { EntityModule } from '../../dropdown/entity/entity.module';\nimport { DownloadReportModule } from '../../_shared/download-report/download-report.module';\n\nimport { ConsumptionBreakupRoutingModule } from './consumption-breakup-routing.module';\nimport { ConsumptionBreakupComponent } from './consumption-breakup.component';\n\n// tsc-library\nimport { DateInputModule } from '@library/date';\nimport { MessageAlertModule, SkeletonModule } from '@library/tsc-common';\n// /tsc-library/\n\n@NgModule({\n    declarations: [\n        ConsumptionBreakupComponent\n    ],\n    imports: [\n        CommonModule,\n        ConsumptionBreakupRoutingModule,\n        SourceLoadModule,\n        DateInputModule,\n        AggregationDurationModule,\n        EntityModule,\n        DownloadReportModule,\n        SkeletonModule,\n        MessageAlertModule,\n        MatTableModule,\n        MatRippleModule\n    ]\n})\nexport class ConsumptionBreakupModule { }\n","import { StaticI } from \"@library/tsc-common\";\n\nexport interface SourceConsumerPageM {\n    id: number;\n    name: string;\n    utilitySourceName: string;\n    type: string;\n}\n\nexport class SourceConsumerPage implements SourceConsumerPageM {\n    id;\n    name;\n    utilitySourceName;\n    type;\n}\n\nexport interface SourceM {\n    id: number;\n    name: string;\n    utilitySourceID: number;\n    typeID: number[];\n}\n\nexport class Source implements SourceM {\n    id;\n    name;\n    utilitySourceID;\n    typeID;\n}\n\nexport interface ConsumerM {\n    id: number;\n    name: string;\n    utilitySourceID: number;\n    type: number;\n}\n\nexport class Consumer implements ConsumerM {\n    id;\n    name;\n    utilitySourceID;\n    type;\n}\n\nexport interface UtilitySourceTypeM {\n    utilitySource: Array<{\n        id: number;\n        name: string;\n        keyID: string;\n        type: StaticI[];\n    }>\n}\n\nexport class UtilitySourceType implements UtilitySourceTypeM {\n    utilitySource;\n}\n\nexport interface SourceConsumerConfigureM {\n    sourceTypeConfigured: boolean;\n    consumerTypeConfigured: boolean;\n}\n\nexport class SourceConsumerConfigure implements SourceConsumerConfigureM {\n    sourceTypeConfigured;\n    consumerTypeConfigured;\n}","import { Inject, Injectable } from '@angular/core';\n\nimport {\n    HttpClient,\n    HttpParams\n} from '@angular/common/http';\n\nimport { Observable } from 'rxjs';\n\nimport { SourceConsumerConfigureM, SourceConsumerPageM, SourceM, UtilitySourceTypeM } from '../model/source-consumer.model';\n\n// tsc-library\nimport { PageM, StaticI } from '@library/tsc-common';\n// /tsc-library/\n\n@Injectable({\n    providedIn: 'root'\n})\n\nexport class SourceController {\n\n    constructor(\n        private http: HttpClient,\n        @Inject('environment') private environment: any\n    ) { }\n\n    createSourceType(orgID, source) {\n        return this.http.post(`${this.environment.TSC_COMMON_API_URL}organizations/${orgID}/sources-types`, source);\n    }\n\n    getSourceTypeByID(orgID, sourceID): Observable<SourceM> {\n        return this.http.get<SourceM>(`${this.environment.TSC_COMMON_API_URL}organizations/${orgID}/sources-types/${sourceID}`);\n    }\n\n    updateSourceType(orgID, sourceID, source) {\n        return this.http.patch(`${this.environment.TSC_COMMON_API_URL}organizations/${orgID}/sources-types/${sourceID}`, source);\n    }\n\n    deleteSourceType(orgID, sourceID) {\n        return this.http.delete(`${this.environment.TSC_COMMON_API_URL}organizations/${orgID}/sources-types/${sourceID}`);\n    }\n\n    getSourceTypeByPage(pageNo: number, pageSize: number, sortBy: string, orderBy: string, searchValue, filterArr, orgID): Observable<PageM<SourceConsumerPageM>> {\n        let params = new HttpParams();\n\n        params = params.append('pageNo', pageNo);\n        params = params.append('pageSize', pageSize);\n        params = params.append('sortBy', sortBy);\n        params = params.append('orderBy', orderBy);\n\n        if (searchValue) {\n            params = params.append('searchBy', searchValue);\n        }\n\n        filterArr.forEach(filter => params = params.append('filter', filter));\n\n        return this.http.get<PageM<SourceConsumerPageM>>(`${this.environment.TSC_COMMON_API_URL}organizations/${orgID}/sources-types/page`, { params: params });\n    }\n\n    getUtilitySourceAndType(orgID): Observable<UtilitySourceTypeM> {\n        return this.http.get<UtilitySourceTypeM>(`${this.environment.TSC_COMMON_API_URL}organizations/${orgID}/utility-sources-types`);\n    }\n\n    getSourceConsumerType(orgID, type): Observable<StaticI[]> {\n        return this.http.post<StaticI[]>(`${this.environment.TSC_COMMON_API_URL}organizations/${orgID}/sources-consumers-type`, type);\n    }\n\n    getSourceConsumerConfig(orgID): Observable<SourceConsumerConfigureM> {\n        return this.http.get<SourceConsumerConfigureM>(`${this.environment.TSC_COMMON_API_URL}organizations/${orgID}/sources-consumers-configure`);\n    }\n\n}\n","import { Injectable } from '@angular/core';\n\nimport { UtilitySourceType, UtilitySourceTypeM } from '../model/source-consumer.model';\n\nimport { SourceController } from '../controller/source.controller';\n\n// tsc-library\nimport { Static, StaticI } from '@library/tsc-common';\n// /tsc-library/\n\n@Injectable({\n    providedIn: 'root'\n})\n\nexport class SourceService {\n\n    constructor(\n        private sourceController: SourceController\n    ) { }\n\n    async getUtilitySourceAndType(orgID): Promise<UtilitySourceTypeM> {\n        let utlitySourceType: UtilitySourceTypeM;\n        try {\n            utlitySourceType = await this.sourceController.getUtilitySourceAndType(orgID).toPromise();\n\n            if (utlitySourceType) {\n                return utlitySourceType;\n            } else {\n                return new UtilitySourceType();\n            }\n        } catch (error) {\n            console.error('Error -', error);\n            return new UtilitySourceType();\n        }\n    }\n\n    async getSourceConsumerType(orgID, type): Promise<StaticI[]> {\n        let sourceLoadType: StaticI[];\n        try {\n            sourceLoadType = await this.sourceController.getSourceConsumerType(orgID, type).toPromise();\n\n            if (sourceLoadType) {\n                return sourceLoadType;\n            } else {\n                return [new Static()];\n            }\n        } catch (error) {\n            console.error('Error -', error);\n            return [new Static()];\n        }\n    }\n\n}\n","import { Component, OnInit, ViewChild } from '@angular/core';\nimport { Router } from '@angular/router';\nimport { FormBuilder, FormGroup, Validators } from '@angular/forms';\n\nimport { ReportErrorEnum } from '../../../enum/error.enum';\n\nimport { ConsumptionParameterM } from '../../../model/parameter.model';\nimport { Alert, AlertM } from '../../../model/alert.model';\nimport { MeterData, MeterDataI } from '../../../model/aggregate-data.model';\n\nimport { SourceService } from '../../../service/source.service';\nimport { ParameterService } from '../../../service/parameter.service';\nimport { AggregateDataService } from '../../../service/aggregate-data.service';\nimport { AlertService } from '../../../service/alert.service';\nimport { ReportService } from '../../../service/report.service';\n\n// tsc-library\nimport { ButtonLabelEnum, COMMON_CONSTANT, FileTypeEnum, FormErrorEnum, InvalidForm, MATERIAL_CONSTANT, MaterialFormFieldAppearance, MessageAlertIconEnum, MessageAlertTypeEnum, Static, StaticI } from '@library/tsc-common';\nimport { DateFormatEnum, DateInputComponent, DateInputTypeEnum, DateTypeEnum } from '@library/date';\nimport { StorageService } from '@library/storage-service';\nimport { ToastrColor, ToastrService } from '@library/toastr-service';\nimport { ApplicationKeyID } from '@library/application-service';\n// /tsc-library/\n\n@Component({\n    selector: 'lib-consumption',\n    templateUrl: './consumption.component.html',\n    styles: [\n    ]\n})\nexport class ConsumptionReportComponent implements OnInit {\n\n    MATERIAL_CONSTANT = MATERIAL_CONSTANT;\n    COMMON_CONSTANT = COMMON_CONSTANT;\n\n    MaterialFormFieldAppearance = MaterialFormFieldAppearance;\n    ButtonLabelEnum = ButtonLabelEnum;\n    DateFormatEnum = DateFormatEnum;\n    DateInputTypeEnum = DateInputTypeEnum;\n    DateTypeEnum = DateTypeEnum;\n    FileTypeEnum = FileTypeEnum;\n    FormErrorEnum = FormErrorEnum;\n\n    pageTitle: string;\n\n    orgID: any;\n    timezone: string;\n    applicationKeyID: string;\n\n    reportData = [new MeterData()];\n    showAlert: boolean = false;\n    showLoader: boolean = false;\n\n    sourceConsumerType = [new Static()];\n    consumptionParamM: any;\n    reportAlertObj: AlertM = new Alert();\n\n    reportFG: FormGroup;\n\n    @ViewChild('monthDateInput') monthDateInput: DateInputComponent;\n\n    constructor(\n        private router: Router,\n        private formBuilder: FormBuilder,\n        private storageService: StorageService,\n        private toastService: ToastrService,\n        private alertService: AlertService,\n        private sourceService: SourceService,\n        private parameterService: ParameterService,\n        private aggregateDataService: AggregateDataService,\n        private reportService: ReportService\n    ) { }\n\n    ngOnInit(): void {\n        this.orgID = this.storageService.getStorage('currentOrgID');\n        this.timezone = this.storageService.getStorage('timezone');\n        this.applicationKeyID = this.storageService.getStorage('applicationKeyID');\n\n        if (this.applicationKeyID == ApplicationKeyID.ENERGY_KEY_ID) {\n            this.pageTitle = \"Energy Consumption Report\";\n        } else if (this.applicationKeyID == ApplicationKeyID.WATER_KEY_ID) {\n            this.pageTitle = \"Water Consumption Report\";\n        }\n\n        this.reportFGInit();\n\n        if (this.reportFG.get('sourceConsumer.type').value == 'SOURCE') {\n            this.getSourceConsumerType('source');\n        } else {\n            this.getSourceConsumerType('load');\n        }\n\n        this.getConsumptionParameter();\n    }\n\n    reportFGInit() {\n        this.reportFG = this.formBuilder.group({\n            startDate: [, Validators.required],\n            endDate: [, Validators.required],\n            sourceConsumer: this.formBuilder.group({\n                type: ['SOURCE', Validators.required],\n                keyID: [, Validators.required]\n            }),\n            params: this.formBuilder.group({\n                name: ['', Validators.required],\n                dsAgg: ['sum', Validators.required],\n                agg: ['sum', Validators.required]\n            }),\n            interval: [, Validators.required]\n        });\n\n        this.reportFG.get('sourceConsumer.type').valueChanges.subscribe(async (value) => {\n            if (value == 'SOURCE') {\n                this.getSourceConsumerType('source');\n            } else if (value == 'CONSUMER') {\n                this.getSourceConsumerType('load');\n            }\n        });\n    }\n\n    async getSourceConsumerType(sourceConsumerType) {\n        const requestData = {\n            type: sourceConsumerType\n        };\n\n        this.sourceConsumerType = <StaticI[]>await this.sourceService.getSourceConsumerType(this.orgID, requestData);\n    }\n\n    dateInpChange() {\n        let startDate = this.monthDateInput.startDateFC.value;\n        let endDate = this.monthDateInput.endDateFC.value;\n\n        this.reportFG.get('startDate').patchValue(startDate);\n        this.reportFG.get('endDate').patchValue(endDate);\n    }\n\n    async getConsumptionParameter() {\n        const consumptionParamM = <ConsumptionParameterM>await this.parameterService.getConsumptionParameter(this.orgID);\n\n        this.consumptionParamM = consumptionParamM.consumptionParameter;\n    }\n\n    reportSubmit() {\n        const formValue = this.reportFG.value;\n        const modifiedValue = {\n            ...formValue,\n            params: [formValue.params]\n        };\n\n        this.alertService.resetAlertProperties(this.reportAlertObj);\n\n        if (this.reportFG.invalid) {\n            console.log('Invalid form:', this.reportFG.value);\n            this.toastService.openToast(InvalidForm.INVALID_FORM_TITLE, InvalidForm.INVALID_FORM_MESSAGE, ToastrColor.ERROR);\n            return;\n        } else {\n            this.showLoader = true;\n            this.alertService.resetAlertProperties(this.reportAlertObj);\n            this.viewReport(modifiedValue);\n        }\n    }\n\n    async viewReport(modifiedValue) {\n        try {\n            const result = <MeterDataI[]>await this.aggregateDataService.getMeterAggregateDataForReport(this.orgID, modifiedValue);\n\n            if (result && result.length > 0 && result[0]['date']) {\n                this.reportData = result;\n            } else {\n                this.alertService.setAlertProperties(this.reportAlertObj, ReportErrorEnum.DATA_NOT_FOUND_LABEL, ReportErrorEnum.DATA_NOT_FOUND_MESSAGE, MessageAlertTypeEnum.WARNING, MessageAlertIconEnum.WARNING_ICON);\n            }\n\n        } catch (error) {\n            console.error(\"Error in viewReport()\", error);\n            this.alertService.setAlertProperties(this.reportAlertObj, ReportErrorEnum.INVALID_ERROR_LABEL, ReportErrorEnum.INVALID_ERROR_MESSAGE, MessageAlertTypeEnum.DANGER, MessageAlertIconEnum.DANGER_ICON);\n        } finally {\n            this.showLoader = false;\n        }\n    }\n\n    async downloadReport(format: string) {\n        const formValue = this.reportFG.value;\n        const modifiedValue = {\n            ...formValue,\n            params: [formValue.params]\n        };\n\n        this.alertService.resetAlertProperties(this.reportAlertObj);\n\n        if (this.reportFG.invalid) {\n            console.log('Invalid form:', this.reportFG.value);\n            this.reportFG.markAllAsTouched();\n            this.toastService.openToast(InvalidForm.INVALID_FORM_TITLE, InvalidForm.INVALID_FORM_MESSAGE, ToastrColor.ERROR);\n            return;\n        }\n\n        this.showLoader = true;\n\n        try {\n            const requestData = {};\n\n            requestData['request'] = modifiedValue;\n            requestData['reportName'] = 'Consumption Report';\n            requestData['reportFormat'] = format;\n\n            await this.reportService.downloadConsumptionReport(this.orgID, requestData);\n\n        } catch (error) {\n            console.error(\"Error in downloadConsumptionReport()\", error);\n        } finally {\n            this.showLoader = false;\n        }\n    }\n\n    errorHandling = (formGroup: FormGroup, controlPath: string, error: string): boolean => {\n        return formGroup.get(controlPath).hasError(error);\n    }\n\n    scheduleReport(value) {\n        if (value) {\n            const applicationName = this.applicationKeyID == ApplicationKeyID.WATER_KEY_ID ? 'water' : 'energy';\n            this.router.navigate([`schedule-report/${applicationName}-consumption`]);\n        }\n    }\n\n}","<div class=\"card main-card cardOverwrite h100\">\n    <div class=\"headerContainer\">\n        <div class=\"headerLeftContainer\">\n            <div class=\"pageTitle\">{{ pageTitle }}</div>\n        </div>\n        <div class=\"headerRightContainer\">\n            <div class=\"headerRightContainerInner\">\n                <mat-slide-toggle (change)=\"scheduleReport($event.checked)\">Schedule report</mat-slide-toggle>\n            </div>\n        </div>\n    </div>\n\n    <div class=\"card-body\">\n        <form [formGroup]=\"reportFG\" (ngSubmit)=\"reportSubmit()\">\n            <div class=\"row\">\n                <div formGroupName=\"sourceConsumer\">\n                    <div class=\"col-sm-3\">\n                        <mat-button-toggle-group class=\"matBtnFilter\" formControlName=\"type\">\n                            <mat-button-toggle [value]=\"'SOURCE'\">Source</mat-button-toggle>\n                            <mat-button-toggle [value]=\"'CONSUMER'\">Consumer</mat-button-toggle>\n                        </mat-button-toggle-group>\n                        <mat-error class=\"textMatError ms-1\"\n                            *ngIf=\"errorHandling(reportFG, 'sourceConsumer.type', 'required')\">\n                            {{ FormErrorEnum.REQUIRED }}\n                        </mat-error>\n                    </div>\n                </div>\n            </div>\n\n            <div class=\"row mt-3\">\n                <div class=\"col-sm-3\">\n                    <lib-date-input #monthDateInput (emitFilter)=\"dateInpChange()\" [materialFieldWidthInp]=\"true\"\n                        [materialFormFieldAppearanceInp]=\"MaterialFormFieldAppearance.FORM_FIELD_APPEARANCE\"\n                        [isMandatoryFieldInp]=\"true\" [dateInputTypeInp]=\"DateInputTypeEnum.MONTH_INPUT\"\n                        [dateTypeInp]=\"DateTypeEnum.EXCLUSIVE\" [showDefaultDurationInp]=\"true\"\n                        [labelInp]=\"'Select date'\" [timezoneInp]=\"timezone\"></lib-date-input>\n                </div>\n\n                <div class=\"col-sm-3\">\n                    <mat-form-field class=\"matFieldWidth100\"\n                        [appearance]=\"MaterialFormFieldAppearance.FORM_FIELD_APPEARANCE\">\n                        <mat-label>Select aggregation</mat-label>\n                        <mat-select formControlName=\"interval\" required>\n                            <mat-option [value]=\"'DAILY'\">Daily</mat-option>\n                            <mat-option [value]=\"'MONTHLY'\">Monthly</mat-option>\n                        </mat-select>\n                        <mat-error *ngIf=\"errorHandling(reportFG, 'interval', 'required')\">\n                            {{ FormErrorEnum.REQUIRED }}\n                        </mat-error>\n                    </mat-form-field>\n                </div>\n\n\n                <div class=\"col-sm-3\">\n                    <div formGroupName=\"sourceConsumer\">\n                        <mat-form-field class=\"matFieldWidth100\"\n                            [appearance]=\"MaterialFormFieldAppearance.FORM_FIELD_APPEARANCE\">\n                            <mat-label> Select {{ reportFG.get('sourceConsumer.type').value == 'SOURCE' ? 'source' :\n                                'consumer' }} type</mat-label>\n\n                            <mat-select formControlName=\"keyID\" required>\n                                <ng-container\n                                    *ngIf=\"sourceConsumerType && sourceConsumerType.length > 0 && sourceConsumerType[0]['id']; else noSourceConsumerType\">\n                                    <mat-option *ngFor=\"let type of sourceConsumerType\" [value]=\"type.keyID\">\n                                        {{ type.name }}\n                                    </mat-option>\n                                </ng-container>\n\n                                <ng-template #noSourceConsumerType>\n                                    <mat-option disabled>\n                                        {{ COMMON_CONSTANT.NO_DATA_FOUND }}\n                                    </mat-option>\n                                </ng-template>\n                            </mat-select>\n\n                            <mat-error *ngIf=\"errorHandling(reportFG, 'sourceConsumer.keyID', 'required')\">\n                                {{ FormErrorEnum.REQUIRED }}\n                            </mat-error>\n                        </mat-form-field>\n                    </div>\n                </div>\n\n                <div class=\"col-sm-3\">\n                    <div formGroupName=\"params\">\n                        <mat-form-field class=\"matFieldWidth100\" [appearance]=\"MaterialFormFieldAppearance.FORM_FIELD_APPEARANCE\">\n                            <mat-label>Select consumption parameter</mat-label>\n\n                            <mat-select formControlName=\"name\" required>\n                                <ng-container\n                                    *ngIf=\"consumptionParamM && consumptionParamM.length > 0 && consumptionParamM[0]['id']; else noConsumptionParamM\">\n                                    <mat-option *ngFor=\"let param of consumptionParamM\" [value]=\"param.paramMetric\">\n                                        {{ param.label }}\n                                    </mat-option>\n                                </ng-container>\n\n                                <ng-template #noConsumptionParamM>\n                                    <mat-option disabled>\n                                        {{ COMMON_CONSTANT.NO_DATA_FOUND }}\n                                    </mat-option>\n                                </ng-template>\n                            </mat-select>\n\n                            <mat-error *ngIf=\"errorHandling(reportFG, 'params.name', 'required')\">\n                                {{ FormErrorEnum.REQUIRED }}\n                            </mat-error>\n                        </mat-form-field>\n                    </div>\n                </div>\n            </div>\n\n            <button class=\"d-none\" type=\"submit\" #formSubmitBtn></button>\n        </form>\n\n        <div class=\"row\">\n            <div class=\"col-sm-12\">\n                <div class=\"float-end\">\n                    <button class=\"btn btn-sm btn-primary\" (click)=\"formSubmitBtn.click()\" matRipple\n                        [matRippleCentered]=\"MATERIAL_CONSTANT.MAT_RIPPLE_CENTER\">\n                        {{ ButtonLabelEnum.READ_BTN_LABEL }}\n                    </button>\n                    <lib-download-report [excludeFileTypeInp]=\"FileTypeEnum.CSV\" (fileTypeEmitted)=\"downloadReport($event)\"></lib-download-report>\n                </div>\n            </div>\n        </div>\n\n        <div class=\"row mt-3\">\n            <div class=\"col-sm-12\">\n                <lib-message-alert *ngIf=\"reportAlertObj.showAlert\" [labelInp]=\"reportAlertObj.alertLabel\"\n                    [contentInp]=\"reportAlertObj.alertContent\" [messageAlertTypeInp]=\"reportAlertObj.messageAlertType\"\n                    [messageAlertIconInp]=\"reportAlertObj.messageAlertIcon\">\n                </lib-message-alert>\n            </div>\n        </div>\n\n        <div class=\"row mt-3\">\n            <div class=\"centerAlign\">\n                <lib-skeleton-loader *ngIf=\"showLoader\" [count]=\"3\" [appearance]=\"'circle'\"\n                    [theme]=\"{ height: '15px', width: '15px', 'background-color': '#e7ebf3' }\"></lib-skeleton-loader>\n            </div>\n        </div>\n\n        <div class=\"row mt-3\" *ngIf=\"reportData && reportData.length > 0 && reportData[0].date\">\n            <table class=\"table\">\n                <tbody>\n                    <tr class=\"tableHeader\">\n                        <td align=\"center\" class=\"fw-bold\"> Date </td>\n                        <td align=\"center\" class=\"fw-bold\"> Meter name </td>\n                        <td align=\"center\" class=\"fw-bold\"> Parameter name </td>\n                        <td align=\"center\" class=\"fw-bold\"> Meter start reading </td>\n                        <td align=\"center\" class=\"fw-bold\"> Meter end reading </td>\n                        <td align=\"center\" class=\"fw-bold\"> Consumption </td>\n                    </tr>\n                </tbody>\n                <tbody>\n                    <tr *ngFor=\"let data of reportData; let i = index\">\n                        <td align=\"center\" class=\"colWidthContainingDateTime\">{{ row?.date | date: 'dd-MMM-yyyy\n                            HH:mm:ss' }}</td>\n                        <td align=\"center\">{{ row?.meterName }}</td>\n                        <td align=\"center\">{{ row?.parameterName }}</td>\n                        <td align=\"center\">{{ row?.meterStartReading }}</td>\n                        <td align=\"center\">{{ row?.meterEndReading }}</td>\n                        <td align=\"center\">{{ row?.meterConsumption }}</td>\n                    </tr>\n                </tbody>\n            </table>\n        </div>\n    </div>\n</div>","import { NgModule } from '@angular/core';\nimport { RouterModule, Routes } from '@angular/router';\n\nimport { ConsumptionReportComponent } from './consumption.component';\n\nconst routes: Routes = [\n    {\n        path: '',\n        component: ConsumptionReportComponent\n    }\n];\n\n@NgModule({\n    imports: [RouterModule.forChild(routes)],\n    exports: [RouterModule]\n})\nexport class ConsumptionReportRoutingModule { }\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\n\nimport {\n    FormsModule,\n    ReactiveFormsModule\n} from '@angular/forms';\n\nimport { MatFormFieldModule } from '@angular/material/form-field';\nimport { MatSelectModule } from '@angular/material/select';\nimport { MatTableModule } from '@angular/material/table';\nimport { MatRippleModule } from '@angular/material/core';\nimport { MatButtonToggleModule } from '@angular/material/button-toggle';\nimport { MatSlideToggleModule } from '@angular/material/slide-toggle';\n\nimport { NgxMatSelectSearchModule } from 'ngx-mat-select-search';\n\nimport { DownloadReportModule } from '../../_shared/download-report/download-report.module';\n\nimport { ConsumptionReportRoutingModule } from './consumption-routing.module';\nimport { ConsumptionReportComponent } from './consumption.component';\n\n// tsc-library\nimport { DateInputModule } from '@library/date';\nimport { MessageAlertModule, SkeletonModule } from '@library/tsc-common';\n// /tsc-library/\n\n@NgModule({\n    declarations: [\n        ConsumptionReportComponent\n    ],\n    imports: [\n        CommonModule,\n        ConsumptionReportRoutingModule,\n\n        FormsModule,\n        ReactiveFormsModule,\n\n        MatFormFieldModule,\n        MatSelectModule,\n        MatTableModule,\n        MatRippleModule,\n        MatButtonToggleModule,\n        MatSlideToggleModule,\n\n        NgxMatSelectSearchModule,\n\n        DownloadReportModule,\n\n        DateInputModule,\n        MessageAlertModule,\n        SkeletonModule\n    ]\n})\nexport class ConsumptionReportModule { }\n","export interface DataAvailabilityM {\n    id: number;\n    date: string\n    entityName: string;\n    deviceName: string;\n    parameterName: string;\n    avgValue: number;\n    minValue: number;\n    maxValue: number;\n    dataAvailability: number;\n}\n\nexport class DataAvailability implements DataAvailabilityM {\n    id;\n    date;\n    entityName;\n    deviceName;\n    parameterName;\n    avgValue;\n    minValue;\n    maxValue;\n    dataAvailability;\n}","import { Inject, Injectable } from '@angular/core';\nimport { HttpClient, HttpHeaders } from '@angular/common/http';\n\nimport { Observable } from 'rxjs';\n\nimport { DataAvailabilityM } from '../model/data-availability.model';\n\n@Injectable({\n    providedIn: 'root'\n})\n\nexport class DataAvailabilityController {\n\n    constructor(\n        private http: HttpClient,\n        @Inject('environment') private environment: any\n    ) { }\n\n    getDataAvailability(orgID, requestBody): Observable<DataAvailabilityM[]> {\n        let headers = new HttpHeaders().set('skipLoader', 'YES');\n\n        return this.http.post<DataAvailabilityM[]>(`${this.environment.TSC_COMMON_API_URL}organizations/${orgID}/data-availability`, requestBody, { headers: headers });\n    }\n\n}\n","import { Component, OnInit, ViewChild } from '@angular/core';\nimport { FormControl, Validators } from '@angular/forms';\n\nimport { DropdownTypeEnum } from '../../../enum/dropdown.enum';\nimport { ReportErrorEnum } from '../../../enum/error.enum';\n\nimport { Alert, AlertM } from '../../../model/alert.model';\nimport { DownloadReportRequest } from '../../../model/report.model';\nimport { DataAvailability, DataAvailabilityM } from '../../../model/data-availability.model';\n\nimport { EntityComponent } from '../../dropdown/entity/entity.component';\nimport { DeviceComponent } from '../../dropdown/device/device.component';\nimport { ParamMetricComponent } from '../../dropdown/param-metric/param-metric.component';\n\nimport { DataAvailabilityController } from '../../../controller/data-availability.controller';\n\nimport { ReportService } from '../../../service/report.service';\nimport { AlertService } from '../../../service/alert.service';\n\n// tsc-library\nimport { DateFormatEnum, DateInputTypeEnum, DateTypeEnum, DateService, FrequencyEnum } from '@library/date';\nimport { StorageService } from '@library/storage-service';\nimport { ToastrColor, ToastrService } from '@library/toastr-service';\nimport { ButtonLabelEnum, COMMON_CONSTANT, FREQUENCY_CONSTANT, FormErrorEnum, InvalidForm, MATERIAL_CONSTANT, MaterialFormFieldAppearance, MessageAlertIconEnum, MessageAlertTypeEnum, TSCCommonService } from '@library/tsc-common';\n// /tsc-library/\n\n@Component({\n    selector: 'lib-data-availability',\n    templateUrl: './data-availability.component.html',\n    styles: [\n    ]\n})\nexport class DataAvailabilityReportComponent implements OnInit {\n\n    materialConstant = MATERIAL_CONSTANT;\n    commonConstant = COMMON_CONSTANT;\n    frequencyConstant = FREQUENCY_CONSTANT;\n\n    materialFormFieldAppearance = MaterialFormFieldAppearance;\n    buttonLabelEnum = ButtonLabelEnum;\n    dropdownTypeEnum = DropdownTypeEnum;\n    dateFormatEnum = DateFormatEnum;\n    dateInputTypeEnum = DateInputTypeEnum;\n    dateTypeEnum = DateTypeEnum;\n    frequencyEnum = FrequencyEnum;\n    FormErrorEnum = FormErrorEnum;\n\n    orgID: any;\n    timezone: string;\n    startDate: string;\n    endDate: string;\n    entityID: any;\n    deviceID: any;\n    parameterList: any[] = [];\n    timestamp: any;\n    renderTable: any;\n    dayDifference: any;\n    showAlert: boolean = false;\n    showLoader: boolean = false;\n    format = DateFormatEnum.DATE_TIME;\n\n    dateType: any;\n    frequency: any[] = [];\n    defaultFrequency: string;\n    selectedFrequency: string;\n\n    dataAvailabilityM = [new DataAvailability()];\n\n    reportAlertObj: AlertM = new Alert();\n\n    aggDurationFC: FormControl = new FormControl('day_1', [Validators.required]);\n\n    @ViewChild('entityInput') entityInput: EntityComponent;\n    @ViewChild('deviceInput') deviceInput: DeviceComponent;\n    @ViewChild('paramInput') paramInput: ParamMetricComponent;\n\n    constructor(\n        private storageService: StorageService,\n        private toastService: ToastrService,\n        private tscCommonService: TSCCommonService,\n        private dataAvailabilityController: DataAvailabilityController,\n        public dateService: DateService,\n        private reportService: ReportService,\n        private alertService: AlertService\n    ) { }\n\n    ngOnInit(): void {\n        this.orgID = this.storageService.getStorage('currentOrgID');\n        this.timezone = this.storageService.getStorage('timezone');\n\n        this.frequency = this.frequencyConstant.filter(frequency => frequency.keyID != 'CUSTOM' && frequency.keyID != 'YEARLY');\n        this.defaultFrequency = this.frequencyEnum.DAILY;\n        this.dateType = DateTypeEnum.EXCLUSIVE;\n    }\n\n    dateFilterEmitted(data: any) {\n        this.startDate = data.startDate;\n        this.endDate = data.endDate;\n        this.selectedFrequency = data.frequency;\n\n        this.alertService.resetAlertProperties(this.reportAlertObj);\n    }\n\n    aggDurationChange(selectedAD) {\n        this.aggDurationFC.patchValue(selectedAD);\n\n        this.alertService.resetAlertProperties(this.reportAlertObj);\n    }\n\n    entityInpChange() {\n        this.entityID = this.entityInput.entityFC.value;\n\n        this.paramInput?.parameterFC.reset();\n        this.paramInput?.parameterFC.updateValueAndValidity();\n\n        this.alertService.resetAlertProperties(this.reportAlertObj);\n    }\n\n    deviceInpChange() {\n        this.deviceID = this.deviceInput.deviceFC.value;\n\n        this.paramInput?.parameterFC.reset();\n        this.paramInput?.parameterFC.updateValueAndValidity();\n\n        this.alertService.resetAlertProperties(this.reportAlertObj);\n    }\n\n    paramInpChange() {\n        let paramMetric = this.paramInput?.parameterFC.value;\n\n        if (paramMetric.length > 0) {\n            this.parameterList = this.tscCommonService.removeSelectAllID(paramMetric);\n        }\n\n        this.alertService.resetAlertProperties(this.reportAlertObj);\n    }\n\n    async viewReport() {\n\n        this.alertService.resetAlertProperties(this.reportAlertObj);\n\n        if (this.isValidInputField()) {\n            this.toastService.openToast(InvalidForm.INVALID_FORM_TITLE, InvalidForm.INVALID_FORM_MESSAGE, ToastrColor.ERROR);\n            return;\n        }\n\n        if (this.startDate == this.endDate) {\n            this.alertService.setAlertProperties(this.reportAlertObj, ReportErrorEnum.INVALID_DATE_LABEL, ReportErrorEnum.INVALID_DATE_MESSAGE, MessageAlertTypeEnum.INFO, MessageAlertIconEnum.INFO_ICON);\n            return;\n        }\n\n        try {\n            this.showLoader = true;\n            const requestData = this.createDataRequest();\n\n            this.dataAvailabilityController.getDataAvailability(this.orgID, requestData)\n                .subscribe((res: DataAvailabilityM[]) => {\n                    if (res?.length > 0) {\n                        this.dataAvailabilityM = res;\n                    } else {\n                        this.alertService.setAlertProperties(this.reportAlertObj, ReportErrorEnum.DATA_NOT_FOUND_LABEL, ReportErrorEnum.DATA_NOT_FOUND_MESSAGE, MessageAlertTypeEnum.WARNING, MessageAlertIconEnum.WARNING_ICON);\n                    }\n                },\n                    error => {\n                        console.log('error in getDataAvailability() - ', error);\n                        throw error;\n                    });\n\n        } catch (error) {\n            console.error(\"Error in viewReport()\", error);\n            this.alertService.setAlertProperties(this.reportAlertObj, ReportErrorEnum.INVALID_ERROR_LABEL, ReportErrorEnum.INVALID_ERROR_MESSAGE, MessageAlertTypeEnum.DANGER, MessageAlertIconEnum.DANGER_ICON);\n        } finally {\n            this.showLoader = false;\n        }\n    }\n\n    async downloadReport(format: string) {\n        this.alertService.resetAlertProperties(this.reportAlertObj);\n\n        if (this.isValidInputField()) {\n            this.toastService.openToast(InvalidForm.INVALID_FORM_TITLE, InvalidForm.INVALID_FORM_MESSAGE, ToastrColor.ERROR);\n            return;\n        }\n\n        if (this.startDate == this.endDate) {\n            this.alertService.setAlertProperties(this.reportAlertObj, ReportErrorEnum.INVALID_DATE_LABEL, ReportErrorEnum.INVALID_DATE_MESSAGE, MessageAlertTypeEnum.INFO, MessageAlertIconEnum.INFO_ICON);\n            return;\n        }\n\n        try {\n            this.showLoader = true;\n            const requestData = new DownloadReportRequest();\n\n            requestData.request = this.createDataRequest();\n            requestData.reportName = 'Data Availability Report';\n            requestData.reportFormat = format;\n\n            await this.reportService.downloadReport(this.orgID, requestData);\n\n        } catch (error) {\n            console.error(\"Error in downloadReport()\", error);\n        } finally {\n            this.showLoader = false;\n        }\n    }\n\n    createDataRequest() {\n        let parameter;\n\n        if (this.paramInput.parameterFC.value?.length > 0) {\n            parameter = this.tscCommonService.removeSelectAllID(this.paramInput.parameterFC.value);\n        }\n\n        let requestData = {};\n\n        requestData['startTime'] = this.startDate;\n        requestData['endTime'] = this.endDate;\n        requestData['interval'] = this.aggDurationFC.value;\n        requestData['entityID'] = this.entityInput.entityFC.value;\n        requestData['deviceID'] = this.deviceInput.deviceFC.value;\n        requestData['parameters'] = parameter;\n\n        return requestData;\n    }\n\n    isValidInputField() {\n        const controls = [\n            this.entityInput.entityFC,\n            this.deviceInput.deviceFC,\n            this.paramInput.parameterFC\n        ];\n\n        controls.forEach(control => control.markAsTouched());\n        return controls.some(control => control.invalid);\n    }\n\n}","<div class=\"card main-card cardOverwrite h100\">\n    <div class=\"headerContainer\">\n        <div class=\"headerLeftContainer\">\n            <div class=\"pageTitle\">Data Availability Report</div>\n        </div>\n    </div>\n\n    <div class=\"card-body\">\n        <div class=\"row\">\n            <div class=\"col-sm-12\">\n                <lib-date-filter-two [frequencyInp]=\"frequency\" [defaultFrequencyInp]=\"defaultFrequency\"\n                    [dateTypeInp]=\"dateType\" [showDefaultDurationInp]=\"true\" [timezoneInp]=\"timezone\"\n                    (dateFilterEmitter)=\"dateFilterEmitted($event)\"></lib-date-filter-two>\n            </div>\n        </div>\n\n        <div class=\"row mt-3\">\n            <div class=\"col-sm-3\">\n                <mat-form-field class=\"matFieldWidth100\"\n                    [appearance]=\"materialFormFieldAppearance.FORM_FIELD_APPEARANCE\">\n                    <mat-label>Select aggregation duration</mat-label>\n                    <mat-select (selectionChange)=\"aggDurationChange($event.value)\" [formControl]=\"aggDurationFC\"\n                        required>\n                        <mat-option [value]=\"'day_1'\">\n                            Daily\n                        </mat-option>\n                        <mat-option [value]=\"'month_1'\" *ngIf=\"selectedFrequency == 'MONTHLY'\">\n                            Monthly\n                        </mat-option>\n                    </mat-select>\n                    <mat-error *ngIf=\"aggDurationFC.touched && aggDurationFC.hasError('required')\">\n                        {{ FormErrorEnum.REQUIRED }}\n                    </mat-error>\n                </mat-form-field>\n            </div>\n\n            <div class=\"col-sm-3\">\n                <lib-entity #entityInput (emitFilter)=\"entityInpChange()\"></lib-entity>\n            </div>\n\n            <div class=\"col-sm-3\">\n                <lib-device #deviceInput [dropdownTypeInp]=\"dropdownTypeEnum.SINGLE_DROPDOWN\" [entityInp]=\"entityID\"\n                    (emitFilter)=\"deviceInpChange()\"></lib-device>\n            </div>\n\n            <div class=\"col-sm-3\">\n                <lib-param-metric #paramInput [deviceInp]=\"deviceID\" (emitFilter)=\"paramInpChange()\"></lib-param-metric>\n            </div>\n        </div>\n\n        <div class=\"row\">\n            <div class=\"col-sm-12\">\n                <div class=\"float-end\">\n                    <button class=\"btn btn-sm btn-primary\" type=\"button\" (click)=\"viewReport()\" matRipple\n                        [matRippleCentered]=\"materialConstant.MAT_RIPPLE_CENTER\">\n                        {{ buttonLabelEnum.READ_BTN_LABEL }}\n                    </button>\n                    <lib-download-report (fileTypeEmitted)=\"downloadReport($event)\"></lib-download-report>\n                </div>\n            </div>\n        </div>\n\n        <div class=\"row\">\n            <div class=\"col-sm-12\">\n                <lib-message-alert *ngIf=\"reportAlertObj.showAlert\" [labelInp]=\"reportAlertObj.alertLabel\"\n                    [contentInp]=\"reportAlertObj.alertContent\" [messageAlertTypeInp]=\"reportAlertObj.messageAlertType\"\n                    [messageAlertIconInp]=\"reportAlertObj.messageAlertIcon\">\n                </lib-message-alert>\n            </div>\n        </div>\n\n        <div class=\"row\">\n            <div class=\"centerAlign\">\n                <lib-skeleton-loader *ngIf=\"showLoader\" [count]=\"3\" [appearance]=\"'circle'\"\n                    [theme]=\"{ height: '15px', width: '15px', 'background-color': '#e7ebf3' }\"></lib-skeleton-loader>\n            </div>\n        </div>\n\n        <div class=\"row mt-3\" *ngIf=\"dataAvailabilityM && dataAvailabilityM?.length > 0 && dataAvailabilityM[0]?.deviceName\">\n            <div class=\"overflowX customScrollBar\">\n                <table class=\"table\">\n                    <tbody>\n                        <tr class=\"tableHeader\">\n                            <td class=\"fw-bold\"> Sr. No. </td>\n                            <td align=\"center\" class=\"fw-bold\"> Time </td>\n                            <td align=\"center\" class=\"fw-bold\"> Entity </td>\n                            <td align=\"center\" class=\"fw-bold\"> Device </td>\n                            <td align=\"center\" class=\"fw-bold\"> Parameter </td>\n                            <td align=\"center\" class=\"fw-bold\"> Min value </td>\n                            <td align=\"center\" class=\"fw-bold\"> Max value </td>\n                            <td align=\"center\" class=\"fw-bold\"> Avg value </td>\n                            <td align=\"center\" class=\"fw-bold\"> Data availability (%) </td>\n                        </tr>\n                    </tbody>\n                    <tbody>\n                        <tr *ngFor=\"let data of dataAvailabilityM; let i = index\">\n                            <td>{{ i + 1 }}</td>\n                            <td align=\"center\" class=\"colWidthContainingDateTime\">{{ dateService.formatDate(data.date, this.format) }}</td>\n                            <td align=\"center\">{{ data.entityName }}</td>\n                            <td align=\"center\">{{ data.deviceName }}</td>\n                            <td align=\"center\">{{ data.parameterName }}</td>\n                            <td align=\"center\">{{ data.minValue }}</td>\n                            <td align=\"center\">{{ data.maxValue }}</td>\n                            <td align=\"center\">{{ data.avgValue }}</td>\n                            <td align=\"center\">{{ data.dataAvailability }}</td>\n                        </tr>\n                    </tbody>\n                </table>\n            </div>\n        </div>\n    </div>\n</div>","import { NgModule } from '@angular/core';\nimport { RouterModule, Routes } from '@angular/router';\n\nimport { DataAvailabilityReportComponent } from './data-availability.component';\n\nconst routes: Routes = [\n    {\n        path: '',\n        component: DataAvailabilityReportComponent\n    }\n];\n\n@NgModule({\n    imports: [RouterModule.forChild(routes)],\n    exports: [RouterModule]\n})\n\nexport class DataAvailabilityReportRoutingModule { }\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\n\nimport { MatRippleModule } from '@angular/material/core';\nimport { MatInputModule } from '@angular/material/input';\nimport { MatFormFieldModule } from '@angular/material/form-field';\nimport { MatSelectModule } from '@angular/material/select';\nimport { MatTableModule } from '@angular/material/table';\n\nimport { EntityModule } from '../../dropdown/entity/entity.module';\nimport { DeviceModule } from '../../dropdown/device/device.module';\nimport { ParamMetricModule } from '../../dropdown/param-metric/param-metric.module';\nimport { DownloadReportModule } from '../../_shared/download-report/download-report.module';\n\nimport { DataAvailabilityReportRoutingModule } from './data-availability-routing.module';\nimport { DataAvailabilityReportComponent } from './data-availability.component';\n\n// tsc-library\nimport { DateFilterTwoModule } from '@library/date';\nimport { MessageAlertModule, SkeletonModule } from '@library/tsc-common';\n// /tsc-library/\n\n@NgModule({\n    declarations: [\n        DataAvailabilityReportComponent\n    ],\n    imports: [\n        CommonModule,\n        DataAvailabilityReportRoutingModule,\n        DateFilterTwoModule,\n        FormsModule,\n        ReactiveFormsModule,\n        EntityModule,\n        DeviceModule,\n        ParamMetricModule,\n        DownloadReportModule,\n        SkeletonModule,\n        MessageAlertModule,\n        MatTableModule,\n        MatInputModule,\n        MatFormFieldModule,\n        MatSelectModule,\n        MatRippleModule,\n    ]\n})\nexport class DataAvailabilityReportModule { }\n","import { Component, OnInit, ViewChild } from '@angular/core';\nimport { FormControl } from '@angular/forms';\n\nimport { ReportErrorEnum } from '../../../enum/error.enum';\n\nimport { AggregateDataRequest } from '../../../model/aggregate-data.model';\nimport { DevicesWithEntities, DevicesWithEntitiesM } from '../../../model/device.model';\nimport { Alert, AlertM } from '../../../model/alert.model';\nimport { DownloadReportRequest } from '../../../model/report.model';\n\nimport { AggregationDurationComponent } from '../../dropdown/aggregation-duration/aggregation-duration.component';\nimport { ParamMetricComponent } from '../../dropdown/param-metric/param-metric.component';\n\nimport { EntityDeviceService } from '../../../service/entity-device.service';\nimport { AggregateDataService } from '../../../service/aggregate-data.service';\nimport { ReportService } from '../../../service/report.service';\nimport { AlertService } from '../../../service/alert.service';\n\n// tsc-library\nimport { CUSTOM_RANGE_CONSTANT_EXCLUSIVE_DATE, DateFormatEnum, DateInputComponent, DateInputTypeEnum, DateTypeEnum } from '@library/date';\nimport { StorageService } from '@library/storage-service';\nimport { ToastrColor, ToastrService } from '@library/toastr-service';\nimport { ButtonLabelEnum, COMMON_CONSTANT, FormErrorEnum, InvalidForm, MATERIAL_CONSTANT, MatSelectSearchService, MaterialFormFieldAppearance, MessageAlertIconEnum, MessageAlertTypeEnum, TSCCommonService } from '@library/tsc-common';\nimport { ApplicationKeyID } from '@library/application-service';\n// /tsc-library/\n\n@Component({\n    selector: 'lib-meter',\n    templateUrl: './meter.component.html',\n    styles: [\n    ]\n})\nexport class MeterReportComponent implements OnInit {\n\n    materialConstant = MATERIAL_CONSTANT;\n    commonConstant = COMMON_CONSTANT;\n    customRangeConstant = CUSTOM_RANGE_CONSTANT_EXCLUSIVE_DATE;\n\n    materialFormFieldAppearance = MaterialFormFieldAppearance;\n    buttonLabelEnum = ButtonLabelEnum;\n    dateFormatEnum = DateFormatEnum;\n    dateInputTypeEnum = DateInputTypeEnum;\n    dateTypeEnum = DateTypeEnum;\n    FormErrorEnum = FormErrorEnum;\n\n    orgID: any;\n    applicationKeyID: any;\n    paramMetric: any;\n    timezone: string;\n    startDate: string;\n    endDate: string;\n    aggDuration: string;\n    entityID: any;\n    parameterList: any[] = [];\n    timestamp: any;\n    renderTable: any;\n    reportData: any;\n    showAlert: boolean = false;\n    showLoader: boolean = false;\n\n    entityDeviceM = [new DevicesWithEntities()];\n    reportAlertObj: AlertM = new Alert();\n\n    meterFC: FormControl = new FormControl();\n\n    meterSearchUtil: MatSelectSearchService = new MatSelectSearchService(['name']);\n\n    @ViewChild('customDateInput') customDateInput: DateInputComponent;\n    @ViewChild('aggDurationInput') aggDurationInput: AggregationDurationComponent;\n    @ViewChild('paramInput') paramInput: ParamMetricComponent;\n\n    constructor(\n        private storageService: StorageService,\n        private toastService: ToastrService,\n        private tscCommonService: TSCCommonService,\n        private entityDeviceService: EntityDeviceService,\n        private aggregateDataService: AggregateDataService,\n        private reportService: ReportService,\n        private alertService: AlertService\n    ) { }\n\n    ngOnInit(): void {\n        this.orgID = this.storageService.getStorage('currentOrgID');\n        this.timezone = this.storageService.getStorage('timezone');\n        this.applicationKeyID = this.storageService.getStorage('applicationKeyID');\n\n        if (this.applicationKeyID == ApplicationKeyID.ENERGY_KEY_ID) {\n            this.paramMetric = \"engEnergyUsed\";\n        } else if (this.applicationKeyID == ApplicationKeyID.WATER_KEY_ID) {\n            this.paramMetric = \"gwFlowTotalizer\";\n        }\n\n        this.getDevicesWithEntitiesByParameter();\n    }\n\n    async getDevicesWithEntitiesByParameter() {\n        this.entityDeviceM = <DevicesWithEntitiesM[]>await this.entityDeviceService.getDevicesWithEntitiesByParameter(this.orgID, this.paramMetric);\n\n        this.meterSearchUtil.entityArr = this.entityDeviceM;\n        this.meterSearchUtil.createSubscription();\n\n        if (this.entityDeviceM.length > 0 && this.entityDeviceM?.[0]?.id) {\n            const deviceID = this.entityDeviceM?.[0]?.['devices']?.[0]?.['id'];\n            this.meterFC.patchValue(deviceID);\n            this.entityID = this.getEntityIDByDeviceID(deviceID);\n        }\n    }\n\n    meterChange(selectedMeter) {\n        this.paramInput?.parameterFC.reset();\n        this.paramInput?.parameterFC.updateValueAndValidity();\n\n        this.meterFC.patchValue(selectedMeter);\n        this.entityID = this.getEntityIDByDeviceID(selectedMeter);\n    }\n\n    getEntityIDByDeviceID(deviceID) {\n        for (const entity of this.entityDeviceM) {\n            for (const device of entity.devices) {\n                if (device.id == deviceID) {\n                    return entity.id;\n                }\n            }\n        }\n        return null;\n    }\n\n    dateInpChange() {\n        this.startDate = this.customDateInput.startDateFC.value;\n        this.endDate = this.customDateInput.endDateFC.value;\n\n        this.alertService.resetAlertProperties(this.reportAlertObj);\n\n    }\n\n    aggDurationInpChange() {\n        this.aggDuration = this.aggDurationInput.aggDurationFC.value;\n\n        this.alertService.resetAlertProperties(this.reportAlertObj);\n\n    }\n\n    paramInpChange() {\n        let paramMetric = this.paramInput?.parameterFC.value;\n\n        if (paramMetric.length > 0) {\n            this.parameterList = this.tscCommonService.removeSelectAllID(paramMetric);\n        }\n\n        this.alertService.resetAlertProperties(this.reportAlertObj);\n\n    }\n\n    async viewReport() {\n\n        this.alertService.resetAlertProperties(this.reportAlertObj);\n\n        if (this.isValidInputField()) {\n            this.toastService.openToast(InvalidForm.INVALID_FORM_TITLE, InvalidForm.INVALID_FORM_MESSAGE, ToastrColor.ERROR);\n            return;\n        }\n\n        if (this.startDate == this.endDate) {\n            this.alertService.setAlertProperties(this.reportAlertObj, ReportErrorEnum.INVALID_DATE_LABEL, ReportErrorEnum.INVALID_DATE_MESSAGE, MessageAlertTypeEnum.INFO, MessageAlertIconEnum.INFO_ICON);\n            return;\n        }\n\n        this.showLoader = true;\n\n        try {\n            const requestData = this.createDataRequest();\n\n            this.reportData = await this.aggregateDataService.getAggregateData(this.orgID, requestData);\n\n            if (this.reportData?.length > 0 && !this.reportData?.every(item => item.data.length == 0) ) {\n                this.timestamp = this.reportService.extractTimestamp(this.reportData);\n                this.renderTable = this.reportService.populateTable(this.timestamp, this.reportData, this.dateFormatEnum.DATE_TIME);\n            } else {\n                this.alertService.setAlertProperties(this.reportAlertObj, ReportErrorEnum.DATA_NOT_FOUND_LABEL, ReportErrorEnum.DATA_NOT_FOUND_MESSAGE, MessageAlertTypeEnum.WARNING, MessageAlertIconEnum.WARNING_ICON);\n            }\n\n        } catch (error) {\n            console.error(\"Error in viewReport()\", error);\n            this.alertService.setAlertProperties(this.reportAlertObj, ReportErrorEnum.INVALID_ERROR_LABEL, ReportErrorEnum.INVALID_ERROR_MESSAGE, MessageAlertTypeEnum.DANGER, MessageAlertIconEnum.DANGER_ICON);\n        } finally {\n            this.showLoader = false;\n        }\n    }\n\n    async downloadReport(format: string) {\n        this.alertService.resetAlertProperties(this.reportAlertObj);\n\n        if (this.isValidInputField()) {\n            this.toastService.openToast(InvalidForm.INVALID_FORM_TITLE, InvalidForm.INVALID_FORM_MESSAGE, ToastrColor.ERROR);\n            return;\n        }\n\n        if (this.startDate == this.endDate) {\n            this.alertService.setAlertProperties(this.reportAlertObj, ReportErrorEnum.INVALID_DATE_LABEL, ReportErrorEnum.INVALID_DATE_MESSAGE, MessageAlertTypeEnum.INFO, MessageAlertIconEnum.INFO_ICON);\n            return;\n        }\n\n        this.showLoader = true;\n\n        try {\n\n            const requestData = new DownloadReportRequest();\n\n            requestData.request = this.createDataRequest();\n            requestData.reportName = 'Meter Report';\n            requestData.reportFormat = format;\n\n            await this.reportService.downloadReport(this.orgID, requestData);\n\n        } catch (error) {\n            console.error(\"Error in downloadReport()\", error);\n        } finally {\n            this.showLoader = false;\n        }\n    }\n\n    createDataRequest() {\n\n        const requestData = new AggregateDataRequest();\n\n        requestData.startTime = this.startDate;\n        requestData.endTime = this.endDate;\n        requestData.interval = this.aggDuration;\n        requestData.entityID = [this.entityID];\n        requestData.deviceID = [this.meterFC.value];\n        requestData.params = [];\n        for (const paramMetric of this.parameterList) {\n            requestData.params.push({\n                name: paramMetric,\n                dsAgg: \"avg\",\n                agg: \"avg\"\n            });\n        }\n        requestData.nullifyParams();\n\n        return requestData;\n    }\n\n    isValidInputField() {\n        const controls = [\n            this.customDateInput.startDateFC,\n            this.aggDurationInput.aggDurationFC,\n            this.meterFC,\n            this.paramInput.parameterFC\n        ];\n\n        controls.forEach(control => control.markAsTouched());\n        return controls.some(control => control.invalid);\n    }\n\n}\n","<div class=\"card main-card cardOverwrite h100\">\n    <div class=\"headerContainer\">\n        <div class=\"headerLeftContainer\">\n            <div class=\"pageTitle\">Meter Report</div>\n        </div>\n    </div>\n\n    <div class=\"card-body\">\n        <div class=\"row\">\n            <div class=\"col-sm-3\">\n                <lib-date-input #customDateInput (emitFilter)=\"dateInpChange()\" [materialFieldWidthInp]=\"true\"\n                    [materialFormFieldAppearanceInp]=\"materialFormFieldAppearance.FORM_FIELD_APPEARANCE\"\n                    [isMandatoryFieldInp]=\"true\" [dateInputTypeInp]=\"dateInputTypeEnum.CUSTOM_INPUT\"\n                    [dateTypeInp]=\"dateTypeEnum.EXCLUSIVE\" [showDefaultDurationInp]=\"true\" [showCdrRangeLabelInp]=\"true\"\n                    [labelInp]=\"'Select date'\" [timezoneInp]=\"timezone\" [rangeInp]=\"customRangeConstant\" [showTimeInCDRInp]=\"true\"\n                    [showRangeInp]=\"true\" [cdrFormatInp]=\"'YYYY-MM-DD HH:mm:ss'\"></lib-date-input>\n            </div>\n\n            <div class=\"col-sm-3\">\n                <lib-aggregation-duration #aggDurationInput\n                    (emitFilter)=\"aggDurationInpChange()\"></lib-aggregation-duration>\n            </div>\n\n            <div class=\"col-sm-3\">\n                <mat-form-field class=\"matFieldWidth100\" [appearance]=\"materialFormFieldAppearance.FORM_FIELD_APPEARANCE\">\n                    <mat-label>Select meter</mat-label>\n                    <mat-select (selectionChange)=\"meterChange($event.value)\" [formControl]=\"meterFC\" required>\n                        <ng-container *ngIf=\"entityDeviceM && entityDeviceM.length > 0 && entityDeviceM?.[0]?.id; else noDataFound\">\n                            <mat-option>\n                                <ngx-mat-select-search [formControl]=\"meterSearchUtil.filterFC\" placeholderLabel=\"Search by entity name\"\n                                    noEntriesFoundLabel=\"No matching name found.\">\n                                </ngx-mat-select-search>\n                            </mat-option>\n                            <mat-optgroup *ngFor=\"let entity of meterSearchUtil.filteredEntities | async\" [label]=\"entity.name\"\n                                [disabled]=\"entity.disabled\">\n                                <mat-option *ngFor=\"let device of entity.devices\" [value]=\"device.id\">\n                                    {{ device.name }}\n                                </mat-option>\n                            </mat-optgroup>\n                        </ng-container>\n                        <ng-template #noDataFound>\n                            <mat-option disabled>\n                                {{ commonConstant.NO_DATA_FOUND }}\n                            </mat-option>\n                        </ng-template>\n                    </mat-select>\n                    <mat-error *ngIf=\"meterFC.touched && meterFC.hasError('required')\">\n                        {{ FormErrorEnum.REQUIRED }}\n                    </mat-error>\n                </mat-form-field>\n            </div>\n\n            <div class=\"col-sm-3\">\n                <lib-param-metric #paramInput [deviceInp]=\"meterFC.value\" (emitFilter)=\"paramInpChange()\"></lib-param-metric>\n            </div>\n        </div>\n\n        <div class=\"row\">\n            <div class=\"col-sm-12\">\n                <div class=\"float-end\">\n                    <button class=\"btn btn-sm btn-primary\" type=\"button\" (click)=\"viewReport()\" matRipple\n                        [matRippleCentered]=\"materialConstant.MAT_RIPPLE_CENTER\">\n                        {{ buttonLabelEnum.READ_BTN_LABEL }}\n                    </button>\n                    <lib-download-report (fileTypeEmitted)=\"downloadReport($event)\"></lib-download-report>\n                </div>\n            </div>\n        </div>\n\n        <div class=\"row\">\n            <div class=\"col-sm-12\">\n                <lib-message-alert *ngIf=\"reportAlertObj.showAlert\" [labelInp]=\"reportAlertObj.alertLabel\"\n                    [contentInp]=\"reportAlertObj.alertContent\" [messageAlertTypeInp]=\"reportAlertObj.messageAlertType\"\n                    [messageAlertIconInp]=\"reportAlertObj.messageAlertIcon\">\n                </lib-message-alert>\n            </div>\n        </div>\n\n        <div class=\"row\">\n            <div class=\"centerAlign\">\n                <lib-skeleton-loader *ngIf=\"showLoader\" [count]=\"3\" [appearance]=\"'circle'\"\n                    [theme]=\"{ height: '15px', width: '15px', 'background-color': '#e7ebf3' }\"></lib-skeleton-loader>\n            </div>\n        </div>\n\n        <div class=\"row mt-3\" *ngIf=\"renderTable && renderTable.length > 0\">\n            <div class=\"overflowX customScrollBar\">\n                <table class=\"table\">\n                    <tbody>\n                        <tr class=\"tableHeader\">\n                            <td class=\"fw-bold\"> Sr. No. </td>\n                            <td align=\"center\" class=\"fw-bold\"> Time </td>\n                            <ng-container *ngFor=\"let data of reportData; let i = index\">\n                                <td align=\"center\" class=\"fw-bold\">\n                                    {{ data.paramLabel }} ({{ data.unit }}) ({{ data.dsAgg }})\n                                </td>\n                            </ng-container>\n                        </tr>\n                    </tbody>\n                    <tbody>\n                        <tr *ngFor=\"let row of renderTable\">\n                            <td>{{ row.index }}</td>\n                            <td align=\"center\" class=\"colWidthContainingDateTime\">{{ row.time }}</td>\n                            <td align=\"center\" *ngFor=\"let value of row.data\">{{ value ? value : commonConstant.HYPHEN\n                                }}\n                            </td>\n                        </tr>\n                    </tbody>\n                </table>\n            </div>\n        </div>\n    </div>\n</div>","import { NgModule } from '@angular/core';\nimport { RouterModule, Routes } from '@angular/router';\n\nimport { MeterReportComponent } from './meter.component';\n\nconst routes: Routes = [\n    {\n        path: '',\n        component: MeterReportComponent\n    }\n];\n\n@NgModule({\n  imports: [RouterModule.forChild(routes)],\n  exports: [RouterModule]\n})\nexport class MeterReportRoutingModule { }\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\n\nimport { MatInputModule } from '@angular/material/input';\nimport { MatFormFieldModule } from '@angular/material/form-field';\nimport { MatSelectModule } from '@angular/material/select';\nimport { MatTableModule } from '@angular/material/table';\nimport { MatRippleModule } from '@angular/material/core';\n\nimport { NgxMatSelectSearchModule } from 'ngx-mat-select-search';\n\nimport { AggregationDurationModule } from '../../dropdown/aggregation-duration/aggregation-duration.module';\nimport { ParamMetricModule } from '../../dropdown/param-metric/param-metric.module';\nimport { DownloadReportModule } from '../../_shared/download-report/download-report.module';\n\nimport { MeterReportRoutingModule } from './meter-routing.module';\nimport { MeterReportComponent } from './meter.component';\n\n// tsc-library\nimport { DateInputModule } from '@library/date';\nimport { MessageAlertModule, SkeletonModule } from '@library/tsc-common';\n// /tsc-library/\n\n@NgModule({\n    declarations: [\n        MeterReportComponent\n    ],\n    imports: [\n        CommonModule,\n        MeterReportRoutingModule,\n        FormsModule,\n        ReactiveFormsModule,\n        DateInputModule,\n        AggregationDurationModule,\n        ParamMetricModule,\n        DownloadReportModule,\n        MessageAlertModule,\n        SkeletonModule,\n        NgxMatSelectSearchModule,\n        MatInputModule,\n        MatFormFieldModule,\n        MatSelectModule,\n        MatTableModule,\n        MatRippleModule\n    ]\n})\nexport class MeterReportModule { }\n","import { Component, OnInit, ViewChild } from '@angular/core';\n\nimport { DropdownTypeEnum } from '../../../enum/dropdown.enum';\nimport { ReportErrorEnum } from '../../../enum/error.enum';\n\nimport { AggregateDataRequest } from '../../../model/aggregate-data.model';\nimport { Parameter, ParameterM } from '../../../model/parameter.model';\nimport { Alert, AlertM } from '../../../model/alert.model';\nimport { DownloadReportRequest } from '../../../model/report.model';\n\nimport { AggregationDurationComponent } from '../../dropdown/aggregation-duration/aggregation-duration.component';\nimport { EntityComponent } from '../../dropdown/entity/entity.component';\nimport { DeviceComponent } from '../../dropdown/device/device.component';\nimport { ParamMetricComponent } from '../../dropdown/param-metric/param-metric.component';\nimport { AggregationComponent } from '../../dropdown/aggregation/aggregation.component';\n\nimport { AggregateDataService } from '../../../service/aggregate-data.service';\nimport { ParameterService } from '../../../service/parameter.service';\nimport { ReportService } from '../../../service/report.service';\nimport { AlertService } from '../../../service/alert.service';\n\n// tsc-library\nimport { CUSTOM_RANGE_CONSTANT_EXCLUSIVE_DATE, DateFormatEnum, DateInputComponent, DateInputTypeEnum, DateTypeEnum } from '@library/date';\nimport { StorageService } from '@library/storage-service';\nimport { ToastrColor, ToastrService } from '@library/toastr-service';\nimport { ButtonLabelEnum, COMMON_CONSTANT, InvalidForm, MATERIAL_CONSTANT, MaterialFormFieldAppearance, MessageAlertIconEnum, MessageAlertTypeEnum, TSCCommonService } from '@library/tsc-common';\n// /tsc-library/\n\n@Component({\n    selector: 'lib-parameter',\n    templateUrl: './parameter.component.html',\n    styles: [\n    ]\n})\nexport class ParameterReportComponent implements OnInit {\n\n    materialConstant = MATERIAL_CONSTANT;\n    commonConstant = COMMON_CONSTANT;\n    customRangeConstant = CUSTOM_RANGE_CONSTANT_EXCLUSIVE_DATE;\n\n    materialFormFieldAppearance = MaterialFormFieldAppearance;\n    buttonLabelEnum = ButtonLabelEnum;\n    dropdownTypeEnum = DropdownTypeEnum;\n    dateFormatEnum = DateFormatEnum;\n    dateInputTypeEnum = DateInputTypeEnum;\n    dateTypeEnum = DateTypeEnum;\n\n    orgID: any;\n    timezone: string;\n    startDate: string;\n    endDate: string;\n    aggDuration: string;\n    entityID: any;\n    deviceID: any;\n    parameterList: any;\n    timestamp: any;\n    renderTable: any;\n    reportData: any;\n    paramMetric: any[] = [];\n    metricListArray: any[] = [];\n    showAlert: boolean = false;\n    showLoader: boolean = false;\n\n    parameterM = [new Parameter()];\n    reportAlertObj: AlertM = new Alert();\n\n    @ViewChild('customDateInput') customDateInput: DateInputComponent;\n    @ViewChild('aggDurationInput') aggDurationInput: AggregationDurationComponent;\n    @ViewChild('entityInput') entityInput: EntityComponent;\n    @ViewChild('deviceInput') deviceInput: DeviceComponent;\n    @ViewChild('paramInput') paramInput: ParamMetricComponent;\n    @ViewChild('aggInput') aggInput: AggregationComponent;\n\n    constructor(\n        private storageService: StorageService,\n        private toastService: ToastrService,\n        private tscCommonService: TSCCommonService,\n        private aggregateDataService: AggregateDataService,\n        private parameterService: ParameterService,\n        private reportService: ReportService,\n        private alertService: AlertService\n    ) { }\n\n    ngOnInit(): void {\n        this.orgID = this.storageService.getStorage('currentOrgID');\n        this.timezone = this.storageService.getStorage('timezone');\n\n        this.getParameterByLayoutID();\n    }\n\n    async getParameterByLayoutID() {\n        this.parameterM = <ParameterM[]>await this.parameterService.getParameterByLayoutID(this.orgID);\n    }\n\n    dateInpChange() {\n        this.startDate = this.customDateInput.startDateFC.value;\n        this.endDate = this.customDateInput.endDateFC.value;\n\n        this.alertService.resetAlertProperties(this.reportAlertObj);\n    }\n\n    aggDurationInpChange() {\n        this.aggDuration = this.aggDurationInput.aggDurationFC.value;\n\n        this.alertService.resetAlertProperties(this.reportAlertObj);\n    }\n\n    entityInpChange() {\n        this.entityID = this.entityInput.entityFC.value;\n\n        this.alertService.resetAlertProperties(this.reportAlertObj);\n    }\n\n    deviceInpChange() {\n        this.deviceID = this.deviceInput.deviceFC.value;\n\n        this.alertService.resetAlertProperties(this.reportAlertObj);\n    }\n\n    paramInpChange() {\n        this.paramMetric = this.paramInput?.parameterFC.value;\n\n        if (this.paramMetric?.length > 0) {\n            this.parameterList = this.tscCommonService.removeSelectAllID(this.paramMetric);\n        }\n\n        this.alertService.resetAlertProperties(this.reportAlertObj);\n    }\n\n    aggInpChange(dsAgg?: any, metric?: any) {\n        const metricList: any[] = [];\n\n        if (dsAgg) {\n            dsAgg.forEach(aggregation => {\n                const metricObject = {\n                    name: metric,\n                    dsAgg: aggregation,\n                    agg: \"avg\"\n                };\n                metricList.push(metricObject);\n            });\n        }\n\n        this.metricListArray = this.metricListArray.filter(entry => entry.name != metric);\n\n        this.metricListArray.push(...metricList);\n    }\n\n    async viewReport() {\n\n        this.alertService.resetAlertProperties(this.reportAlertObj);\n\n        if (this.isValidInputField()) {\n            this.toastService.openToast(InvalidForm.INVALID_FORM_TITLE, InvalidForm.INVALID_FORM_MESSAGE, ToastrColor.ERROR);\n            return;\n        }\n\n        if (this.startDate == this.endDate) {\n            this.alertService.setAlertProperties(this.reportAlertObj, ReportErrorEnum.INVALID_DATE_LABEL, ReportErrorEnum.INVALID_DATE_MESSAGE, MessageAlertTypeEnum.INFO, MessageAlertIconEnum.INFO_ICON);\n            return;\n        }\n\n        this.showLoader = true;\n\n        try {\n            const requestData = this.createDataRequest();\n\n            this.reportData = await this.aggregateDataService.getAggregateData(this.orgID, requestData);\n\n            if (this.reportData?.length > 0 && !this.reportData?.every(item => item.data.length == 0)) {\n                this.timestamp = this.reportService.extractTimestamp(this.reportData);\n                this.renderTable = this.reportService.populateTable(this.timestamp, this.reportData, this.dateFormatEnum.DATE_TIME);\n            } else {\n                this.alertService.setAlertProperties(this.reportAlertObj, ReportErrorEnum.DATA_NOT_FOUND_LABEL, ReportErrorEnum.DATA_NOT_FOUND_MESSAGE, MessageAlertTypeEnum.WARNING, MessageAlertIconEnum.WARNING_ICON);\n            }\n\n        } catch (error) {\n            console.error(\"Error in viewReport()\", error);\n            this.alertService.setAlertProperties(this.reportAlertObj, ReportErrorEnum.INVALID_ERROR_LABEL, ReportErrorEnum.INVALID_ERROR_MESSAGE, MessageAlertTypeEnum.DANGER, MessageAlertIconEnum.DANGER_ICON);\n        } finally {\n            this.showLoader = false;\n        }\n    }\n\n    async downloadReport(format: string) {\n        this.alertService.resetAlertProperties(this.reportAlertObj);\n\n        if (this.isValidInputField()) {\n            this.toastService.openToast(InvalidForm.INVALID_FORM_TITLE, InvalidForm.INVALID_FORM_MESSAGE, ToastrColor.ERROR);\n            return;\n        }\n\n        if (this.startDate == this.endDate) {\n            this.alertService.setAlertProperties(this.reportAlertObj, ReportErrorEnum.INVALID_DATE_LABEL, ReportErrorEnum.INVALID_DATE_MESSAGE, MessageAlertTypeEnum.INFO, MessageAlertIconEnum.INFO_ICON);\n            return;\n        }\n\n        this.showLoader = true;\n\n        try {\n            const requestData = new DownloadReportRequest();\n\n            requestData.request = this.createDataRequest();\n            requestData.reportName = 'Parameter Report';\n            requestData.reportFormat = format;\n\n            await this.reportService.downloadReport(this.orgID, requestData);\n\n        } catch (error) {\n            console.error(\"Error in downloadReport()\", error);\n        } finally {\n            this.showLoader = false;\n        }\n    }\n\n    createDataRequest() {\n\n        const filteredMetricListArray = this.metricListArray.filter(metric => this.parameterList.includes(metric.name));\n\n        const requestData = new AggregateDataRequest();\n\n        requestData.startTime = this.startDate;\n        requestData.endTime = this.endDate;\n        requestData.interval = this.aggDuration;\n        requestData.entityID = [this.entityID];\n        requestData.deviceID = [this.deviceID];\n        requestData.params = [];\n        requestData.params.push(\n            ...filteredMetricListArray.map(metric => ({\n                name: metric.name,\n                dsAgg: metric.dsAgg,\n                agg: metric.agg,\n            }))\n        );\n        requestData.nullifyParams();\n\n        return requestData;\n    }\n\n    isValidInputField() {\n        const controls = [\n            this.customDateInput.startDateFC,\n            this.aggDurationInput.aggDurationFC,\n            this.entityInput.entityFC,\n            this.deviceInput.deviceFC,\n            this.paramInput.parameterFC\n        ];\n\n        controls.forEach(control => control.markAsTouched());\n        return controls.some(control => control.invalid);\n    }\n\n    getParameterLabel(paramMetricValue) {\n        const parameter = this.tscCommonService.getUniqueObject(this.parameterM, 'paramMetric', paramMetricValue);\n        return parameter ? parameter.label : '';\n    }\n\n}","<div class=\"card main-card cardOverwrite h100\">\n    <div class=\"headerContainer\">\n        <div class=\"headerLeftContainer\">\n            <div class=\"pageTitle\">Parameter Report</div>\n        </div>\n    </div>\n\n    <div class=\"card-body\">\n        <div class=\"row\">\n            <div class=\"col-sm-3\">\n                <lib-date-input #customDateInput (emitFilter)=\"dateInpChange()\" [materialFieldWidthInp]=\"true\"\n                    [materialFormFieldAppearanceInp]=\"materialFormFieldAppearance.FORM_FIELD_APPEARANCE\"\n                    [isMandatoryFieldInp]=\"true\" [dateInputTypeInp]=\"dateInputTypeEnum.CUSTOM_INPUT\"\n                    [dateTypeInp]=\"dateTypeEnum.EXCLUSIVE\" [showDefaultDurationInp]=\"true\" [showCdrRangeLabelInp]=\"true\"\n                    [labelInp]=\"'Select date'\" [timezoneInp]=\"timezone\" [rangeInp]=\"customRangeConstant\"\n                    [showTimeInCDRInp]=\"true\" [showRangeInp]=\"true\"\n                    [cdrFormatInp]=\"'YYYY-MM-DD HH:mm:ss'\"></lib-date-input>\n            </div>\n\n            <div class=\"col-sm-3\">\n                <lib-aggregation-duration #aggDurationInput\n                    (emitFilter)=\"aggDurationInpChange()\"></lib-aggregation-duration>\n            </div>\n\n            <div class=\"col-sm-3\">\n                <lib-entity #entityInput (emitFilter)=\"entityInpChange()\"></lib-entity>\n            </div>\n\n            <div class=\"col-sm-3\">\n                <lib-device #deviceInput [dropdownTypeInp]=\"dropdownTypeEnum.SINGLE_DROPDOWN\" [entityInp]=\"entityID\"\n                    (emitFilter)=\"deviceInpChange()\"></lib-device>\n            </div>\n        </div>\n\n        <div class=\"row\">\n            <div class=\"col-sm-3\">\n                <lib-param-metric #paramInput [deviceInp]=\"deviceID\" (emitFilter)=\"paramInpChange()\"></lib-param-metric>\n            </div>\n            <div class=\"col-sm-9 mt-4\">\n                <div class=\"float-end\">\n                    <button class=\"btn btn-sm btn-primary\" type=\"button\" (click)=\"viewReport()\" matRipple\n                        [matRippleCentered]=\"materialConstant.MAT_RIPPLE_CENTER\">\n                        {{ buttonLabelEnum.READ_BTN_LABEL }}\n                    </button>\n                    <lib-download-report (fileTypeEmitted)=\"downloadReport($event)\"></lib-download-report>\n                </div>\n            </div>\n        </div>\n\n        <div class=\"row\" *ngIf=\"paramMetric && paramMetric.length > 0\">\n            <table class=\"table\">\n                <tbody>\n                    <tr class=\"tableHeader\">\n                        <td align=\"center\" class=\"fw-bold\"> Metric </td>\n                        <td align=\"center\" class=\"fw-bold\"> Aggregation </td>\n                    </tr>\n                </tbody>\n                <tbody>\n                    <tr *ngFor=\"let metric of parameterList; let i = index\">\n                        <td align=\"center\">\n                            <div class=\"mt-4\">\n                                {{ getParameterLabel(metric) }}\n                            </div>\n                        </td>\n                        <td align=\"center\">\n                            <div class=\"col-sm-6 mt-3\">\n                                <lib-aggregation #aggInput\n                                    (emitFilter)=\"aggInpChange(aggInput.aggregationFC.value, metric)\"></lib-aggregation>\n                            </div>\n                        </td>\n                    </tr>\n                </tbody>\n            </table>\n        </div>\n\n        <div class=\"row\">\n            <div class=\"col-sm-12\">\n                <lib-message-alert *ngIf=\"reportAlertObj.showAlert\" [labelInp]=\"reportAlertObj.alertLabel\"\n                    [contentInp]=\"reportAlertObj.alertContent\" [messageAlertTypeInp]=\"reportAlertObj.messageAlertType\"\n                    [messageAlertIconInp]=\"reportAlertObj.messageAlertIcon\">\n                </lib-message-alert>\n            </div>\n        </div>\n\n        <div class=\"row\">\n            <div class=\"centerAlign\">\n                <lib-skeleton-loader *ngIf=\"showLoader\" [count]=\"3\" [appearance]=\"'circle'\"\n                    [theme]=\"{ height: '15px', width: '15px', 'background-color': '#e7ebf3' }\"></lib-skeleton-loader>\n            </div>\n        </div>\n\n        <div class=\"row mt-3\" *ngIf=\"renderTable && renderTable.length > 0\">\n            <div class=\"overflowX customScrollBar\">\n                <table class=\"table\">\n                    <tbody>\n                        <tr class=\"tableHeader\">\n                            <td class=\"fw-bold\"> Sr. No. </td>\n                            <td align=\"center\" class=\"fw-bold\"> Time </td>\n                            <ng-container *ngFor=\"let data of reportData; let i = index\">\n                                <td align=\"center\" class=\"fw-bold\">\n                                    {{ data.paramLabel }} ({{ data.unit }}) ({{ data.dsAgg }})\n                                </td>\n                            </ng-container>\n                        </tr>\n                    </tbody>\n                    <tbody>\n                        <tr *ngFor=\"let row of renderTable\">\n                            <td>{{ row.index }}</td>\n                            <td align=\"center\" class=\"colWidthContainingDateTime\">{{ row.time }}</td>\n                            <td align=\"center\" *ngFor=\"let value of row.data\">{{ value ? value : commonConstant.HYPHEN\n                                }}\n                            </td>\n                        </tr>\n                    </tbody>\n                </table>\n            </div>\n        </div>\n    </div>\n</div>","import { NgModule } from '@angular/core';\nimport { RouterModule, Routes } from '@angular/router';\n\nimport { ParameterReportComponent } from './parameter.component';\n\nconst routes: Routes = [\n    {\n        path: '',\n        component: ParameterReportComponent\n    }\n];\n\n@NgModule({\n    imports: [RouterModule.forChild(routes)],\n    exports: [RouterModule]\n})\n\nexport class ParameterReportRoutingModule { }\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\n\nimport { MatTableModule } from '@angular/material/table';\nimport { MatRippleModule } from '@angular/material/core';\n\nimport { AggregationDurationModule } from '../../dropdown/aggregation-duration/aggregation-duration.module';\nimport { EntityModule } from '../../dropdown/entity/entity.module';\nimport { DeviceModule } from '../../dropdown/device/device.module';\nimport { ParamMetricModule } from '../../dropdown/param-metric/param-metric.module';\nimport { AggregationModule } from '../../dropdown/aggregation/aggregation.module';\nimport { DownloadReportModule } from '../../_shared/download-report/download-report.module';\n\nimport { ParameterReportRoutingModule } from './parameter-routing.module';\nimport { ParameterReportComponent } from './parameter.component';\n\n// tsc-library\nimport { DateInputModule } from '@library/date';\nimport { MessageAlertModule, SkeletonModule } from '@library/tsc-common';\n// /tsc-library/\n\n@NgModule({\n    declarations: [\n        ParameterReportComponent\n    ],\n    imports: [\n        CommonModule,\n        ParameterReportRoutingModule,\n        DateInputModule,\n        AggregationDurationModule,\n        EntityModule,\n        DeviceModule,\n        ParamMetricModule,\n        AggregationModule,\n        SkeletonModule,\n        MessageAlertModule,\n        DownloadReportModule,\n        MatTableModule,\n        MatRippleModule\n    ]\n})\nexport class ParameterReportModule { }\n","import { Component, OnInit, ViewChild } from '@angular/core';\n\nimport { DropdownTypeEnum } from '../../../enum/dropdown.enum';\nimport { ReportErrorEnum } from '../../../enum/error.enum';\n\nimport { Parameter, ParameterM } from '../../../model/parameter.model';\nimport { Alert, AlertM } from '../../../model/alert.model';\nimport { AggregateDataRequest } from '../../../model/aggregate-data.model';\nimport { DownloadReportRequest } from '../../../model/report.model';\n\nimport { EntityComponent } from '../../dropdown/entity/entity.component';\nimport { DeviceComponent } from '../../dropdown/device/device.component';\n\nimport { AggregateDataService } from '../../../service/aggregate-data.service';\nimport { ParameterService } from '../../../service/parameter.service';\nimport { ReportService } from '../../../service/report.service';\nimport { AlertService } from '../../../service/alert.service';\n\n// tsc-library\nimport { CUSTOM_RANGE_CONSTANT_EXCLUSIVE_DATE, DateFormatEnum, DateInputComponent, DateInputTypeEnum, DateTypeEnum } from '@library/date';\nimport { StorageService } from '@library/storage-service';\nimport { ToastrColor, ToastrService } from '@library/toastr-service';\nimport { ButtonLabelEnum, COMMON_CONSTANT, InvalidForm, MATERIAL_CONSTANT, MaterialFormFieldAppearance, MessageAlertIconEnum, MessageAlertTypeEnum } from '@library/tsc-common';\n// /tsc-library/\n\n\n@Component({\n    selector: 'lib-raw-data',\n    templateUrl: './raw-data.component.html',\n    styles: [\n    ]\n})\nexport class RawDataReportComponent implements OnInit {\n\n    materialConstant = MATERIAL_CONSTANT;\n    commonConstant = COMMON_CONSTANT;\n    customRangeConstant = CUSTOM_RANGE_CONSTANT_EXCLUSIVE_DATE;\n\n    materialFormFieldAppearance = MaterialFormFieldAppearance;\n    buttonLabelEnum = ButtonLabelEnum;\n    dropdownTypeEnum = DropdownTypeEnum;\n    dateFormatEnum = DateFormatEnum;\n    dateInputTypeEnum = DateInputTypeEnum;\n    dateTypeEnum = DateTypeEnum;\n\n    orgID: any;\n    timezone: string;\n    startDate: string;\n    endDate: string;\n    entityID: any;\n    deviceID: any;\n    dayDifference: any;\n    timestamp: any;\n    renderTable: any;\n    reportData: any;\n    showAlert: boolean = false;\n    showLoader: boolean = false;\n\n    parameterM = [new Parameter()];\n    reportAlertObj: AlertM = new Alert();\n\n    @ViewChild('customDateInput') customDateInput: DateInputComponent;\n    @ViewChild('entityInput') entityInput: EntityComponent;\n    @ViewChild('deviceInput') deviceInput: DeviceComponent;\n\n    constructor(\n        private storageService: StorageService,\n        private toastService: ToastrService,\n        private aggregateDataService: AggregateDataService,\n        private parameterService: ParameterService,\n        private reportService: ReportService,\n        private alertService: AlertService\n    ) { }\n\n    ngOnInit(): void {\n        this.orgID = this.storageService.getStorage('currentOrgID');\n        this.timezone = this.storageService.getStorage('timezone');\n    }\n\n    dateInpChange() {\n        this.startDate = this.customDateInput.startDateFC.value;\n        this.endDate = this.customDateInput.endDateFC.value;\n\n        this.alertService.resetAlertProperties(this.reportAlertObj);\n    }\n\n    entityInpChange() {\n        this.entityID = this.entityInput.entityFC.value;\n\n        this.alertService.resetAlertProperties(this.reportAlertObj);\n    }\n\n    deviceInpChange() {\n        this.deviceID = this.deviceInput.deviceFC.value;\n\n        if (this.deviceID) {\n            this.getParameterByDeviceID(this.deviceID);\n        }\n\n        this.alertService.resetAlertProperties(this.reportAlertObj);\n    }\n\n    async getParameterByDeviceID(deviceID) {\n        let requestBody = {};\n        requestBody['deviceID'] = [deviceID];\n\n        this.parameterM = <ParameterM[]>await this.parameterService.getParameterByDeviceID(this.orgID, requestBody);\n    }\n\n    async viewReport() {\n\n        this.alertService.resetAlertProperties(this.reportAlertObj);\n\n        if (!this.parameterM || this.parameterM.length == 0 || !this.parameterM[0]['id']) {\n            await this.getParameterByDeviceID(this.deviceID);\n        }\n\n        if (this.isValidInputField()) {\n            this.toastService.openToast(InvalidForm.INVALID_FORM_TITLE, InvalidForm.INVALID_FORM_MESSAGE, ToastrColor.ERROR);\n            return;\n        }\n\n        if (this.startDate == this.endDate) {\n            this.alertService.setAlertProperties(this.reportAlertObj, ReportErrorEnum.INVALID_DATE_LABEL, ReportErrorEnum.INVALID_DATE_MESSAGE, MessageAlertTypeEnum.INFO, MessageAlertIconEnum.INFO_ICON);\n            return;\n        }\n\n        this.dayDifference = this.getTimeDifference(this.startDate, this.endDate);\n\n        if (this.dayDifference <= 1) {\n\n            try {\n                this.showLoader = true;\n\n                const requestData = this.createDataRequest();\n\n                this.reportData = await this.aggregateDataService.getAggregateData(this.orgID, requestData);\n\n                if (this.reportData?.length > 0 && !this.reportData?.every(item => item.data.length == 0)) {\n                    this.timestamp = this.reportService.extractTimestamp(this.reportData);\n                    this.renderTable = this.reportService.populateTable(this.timestamp, this.reportData, this.dateFormatEnum.DATE_TIME);\n                } else {\n                    this.alertService.setAlertProperties(this.reportAlertObj, ReportErrorEnum.DATA_NOT_FOUND_LABEL, ReportErrorEnum.DATA_NOT_FOUND_MESSAGE, MessageAlertTypeEnum.WARNING, MessageAlertIconEnum.WARNING_ICON);\n                }\n\n            } catch (error) {\n                console.error(\"Error in viewReport()\", error);\n                this.alertService.setAlertProperties(this.reportAlertObj, ReportErrorEnum.INVALID_ERROR_LABEL, ReportErrorEnum.INVALID_ERROR_MESSAGE, MessageAlertTypeEnum.DANGER, MessageAlertIconEnum.DANGER_ICON);\n            } finally {\n                this.showLoader = false;\n            }\n\n        } else {\n            this.alertService.setAlertProperties(this.reportAlertObj, ReportErrorEnum.TIME_EXCEEDED_LABEL, ReportErrorEnum.HOUR_24_TIME_EXCEEDED_MESSAGE, MessageAlertTypeEnum.INFO, MessageAlertIconEnum.INFO_ICON);\n        }\n\n    }\n\n    async downloadReport(format: string) {\n        this.alertService.resetAlertProperties(this.reportAlertObj);\n\n        if (!this.parameterM || this.parameterM.length == 0 || !this.parameterM[0]['id']) {\n            await this.getParameterByDeviceID(this.deviceID);\n        }\n\n        if (this.isValidInputField()) {\n            this.toastService.openToast(InvalidForm.INVALID_FORM_TITLE, InvalidForm.INVALID_FORM_MESSAGE, ToastrColor.ERROR);\n            return;\n        }\n\n        if (this.startDate == this.endDate) {\n            this.alertService.setAlertProperties(this.reportAlertObj, ReportErrorEnum.INVALID_DATE_LABEL, ReportErrorEnum.INVALID_DATE_MESSAGE, MessageAlertTypeEnum.INFO, MessageAlertIconEnum.INFO_ICON);\n            return;\n        }\n\n        this.dayDifference = this.getTimeDifference(this.startDate, this.endDate);\n\n        if (this.dayDifference <= 1) {\n            try {\n                const requestData = new DownloadReportRequest();\n\n                requestData.request = this.createDataRequest();\n                requestData.reportName = 'Parameter Report';\n                requestData.reportFormat = format;\n\n                await this.reportService.downloadReport(this.orgID, requestData);\n\n            } catch (error) {\n                console.error(\"Error in downloadReport()\", error);\n            } finally {\n                this.showLoader = false;\n            }\n        } else {\n            this.alertService.setAlertProperties(this.reportAlertObj, ReportErrorEnum.TIME_EXCEEDED_LABEL, ReportErrorEnum.HOUR_24_TIME_EXCEEDED_MESSAGE, MessageAlertTypeEnum.INFO, MessageAlertIconEnum.INFO_ICON);\n        }\n    }\n\n    createDataRequest() {\n        const requestData = new AggregateDataRequest();\n\n        requestData.startTime = this.startDate;\n        requestData.endTime = this.endDate;\n        requestData.interval = \"raw\";\n        requestData.entityID = [this.entityID];\n        requestData.deviceID = [this.deviceID];\n\n        requestData.params = this.parameterM.map(param => ({\n            name: param.paramMetric,\n            dsAgg: 'avg',\n            agg: 'avg'\n        }));\n        requestData.nullifyParams();\n\n        return requestData;\n    }\n\n    isValidInputField() {\n        const controls = [\n            this.customDateInput.startDateFC,\n            this.entityInput.entityFC,\n            this.deviceInput.deviceFC,\n        ];\n\n        controls.forEach(control => control.markAsTouched());\n        return controls.some(control => control.invalid);\n    }\n\n    getTimeDifference(startTime: string, endTime: string): number {\n        const date1 = new Date(startTime).getTime();\n        const date2 = new Date(endTime).getTime();\n        const diffTime = Math.abs(date2 - date1);\n        const diffDays = Math.ceil(diffTime / (1000 * 60 * 60 * 24));\n        return diffDays;\n    }\n\n}\n","<div class=\"card main-card cardOverwrite h100\">\n    <div class=\"headerContainer\">\n        <div class=\"headerLeftContainer\">\n            <div class=\"pageTitle\">Raw Data Report</div>\n        </div>\n    </div>\n\n    <div class=\"card-body\">\n        <div class=\"row\">\n            <div class=\"col-sm-3\">\n                <lib-date-input #customDateInput (emitFilter)=\"dateInpChange()\" [materialFieldWidthInp]=\"true\"\n                    [materialFormFieldAppearanceInp]=\"materialFormFieldAppearance.FORM_FIELD_APPEARANCE\"\n                    [isMandatoryFieldInp]=\"true\" [dateInputTypeInp]=\"dateInputTypeEnum.CUSTOM_INPUT\"\n                    [dateTypeInp]=\"dateTypeEnum.EXCLUSIVE\" [showDefaultDurationInp]=\"true\" [showCdrRangeLabelInp]=\"true\"\n                    [labelInp]=\"'Select date'\" [timezoneInp]=\"timezone\" [rangeInp]=\"customRangeConstant\"\n                    [showTimeInCDRInp]=\"true\" [showRangeInp]=\"true\"\n                    [cdrFormatInp]=\"'YYYY-MM-DD HH:mm:ss'\"></lib-date-input>\n            </div>\n\n            <div class=\"col-sm-3\">\n                <lib-entity #entityInput (emitFilter)=\"entityInpChange()\"></lib-entity>\n            </div>\n\n            <div class=\"col-sm-3\">\n                <lib-device #deviceInput [dropdownTypeInp]=\"dropdownTypeEnum.SINGLE_DROPDOWN\" [entityInp]=\"entityID\"\n                    (emitFilter)=\"deviceInpChange()\"></lib-device>\n            </div>\n            <div class=\"col-sm-3 mt-3\">\n                <div class=\"float-end\">\n                    <button class=\"btn btn-sm btn-primary\" type=\"button\" (click)=\"viewReport()\" matRipple\n                        [matRippleCentered]=\"materialConstant.MAT_RIPPLE_CENTER\">\n                        {{ buttonLabelEnum.READ_BTN_LABEL }}\n                    </button>\n                    <lib-download-report (fileTypeEmitted)=\"downloadReport($event)\"></lib-download-report>\n                </div>\n            </div>\n        </div>\n\n        <div class=\"row\">\n            <div class=\"col-sm-12\">\n                <lib-message-alert *ngIf=\"reportAlertObj.showAlert\" [labelInp]=\"reportAlertObj.alertLabel\"\n                    [contentInp]=\"reportAlertObj.alertContent\" [messageAlertTypeInp]=\"reportAlertObj.messageAlertType\"\n                    [messageAlertIconInp]=\"reportAlertObj.messageAlertIcon\">\n                </lib-message-alert>\n            </div>\n        </div>\n\n        <div class=\"row\">\n            <div class=\"centerAlign\">\n                <lib-skeleton-loader *ngIf=\"showLoader\" [count]=\"3\" [appearance]=\"'circle'\"\n                    [theme]=\"{ height: '15px', width: '15px', 'background-color': '#e7ebf3' }\"></lib-skeleton-loader>\n            </div>\n        </div>\n\n        <div class=\"row mt-3\" *ngIf=\"renderTable && renderTable.length > 0\">\n            <div class=\"overflowX customScrollBar\">\n                <table class=\"table\">\n                    <tbody>\n                        <tr class=\"tableHeader\">\n                            <td class=\"fw-bold\"> Sr. No. </td>\n                            <td align=\"center\" class=\"fw-bold\"> Time </td>\n                            <ng-container *ngFor=\"let data of reportData; let i = index\">\n                                <td align=\"center\" class=\"fw-bold\">\n                                    {{ data.paramLabel }} ({{ data.unit }}) ({{ data.dsAgg }})\n                                </td>\n                            </ng-container>\n                        </tr>\n                    </tbody>\n                    <tbody>\n                        <tr *ngFor=\"let row of renderTable\">\n                            <td>{{ row.index }}</td>\n                            <td align=\"center\" class=\"colWidthContainingDateTime\">{{ row.time }}</td>\n                            <td align=\"center\" *ngFor=\"let value of row.data\">{{ value ? value : commonConstant.HYPHEN\n                                }}\n                            </td>\n                        </tr>\n                    </tbody>\n                </table>\n            </div>\n        </div>\n    </div>\n</div>","import { NgModule } from '@angular/core';\nimport { RouterModule, Routes } from '@angular/router';\n\nimport { RawDataReportComponent } from './raw-data.component';\n\nconst routes: Routes = [\n    {\n        path: '',\n        component: RawDataReportComponent\n    }\n];\n\n@NgModule({\n    imports: [RouterModule.forChild(routes)],\n    exports: [RouterModule]\n})\n\nexport class RawDataReportRoutingModule { }\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\n\nimport { MatTableModule } from '@angular/material/table';\nimport { MatRippleModule } from '@angular/material/core';\n\nimport { EntityModule } from '../../dropdown/entity/entity.module';\nimport { DeviceModule } from '../../dropdown/device/device.module';\nimport { DownloadReportModule } from '../../_shared/download-report/download-report.module';\n\nimport { RawDataReportRoutingModule } from './raw-data-routing.module';\nimport { RawDataReportComponent } from './raw-data.component';\n\n// tsc-library\nimport { DateInputModule } from '@library/date';\nimport { MessageAlertModule, SkeletonModule } from '@library/tsc-common';\n// /tsc-library/\n\n@NgModule({\n    declarations: [\n        RawDataReportComponent\n    ],\n    imports: [\n        CommonModule,\n        RawDataReportRoutingModule,\n        DateInputModule,\n        EntityModule,\n        DeviceModule,\n        DownloadReportModule,\n        SkeletonModule,\n        MessageAlertModule,\n        MatTableModule,\n        MatRippleModule\n    ]\n})\nexport class RawDataReportModule { }\n","import { Component, OnInit, ViewChild } from '@angular/core';\nimport { Router } from '@angular/router';\n\nimport { FormControl, Validators } from '@angular/forms';\n\nimport { ReportErrorEnum } from '../../../enum/error.enum';\n\nimport { ConsumptionParameterM } from '../../../model/parameter.model';\nimport { AggregateDataRequest } from '../../../model/aggregate-data.model';\nimport { Alert, AlertM } from '../../../model/alert.model';\nimport { DownloadReportRequest } from '../../../model/report.model';\n\nimport { AggregationDurationComponent } from '../../dropdown/aggregation-duration/aggregation-duration.component';\n\nimport { ParameterService } from '../../../service/parameter.service';\nimport { AggregateDataService } from '../../../service/aggregate-data.service';\nimport { ReportService } from '../../../service/report.service';\nimport { AlertService } from '../../../service/alert.service';\n\n// tsc-library\nimport { CUSTOM_RANGE_CONSTANT_EXCLUSIVE_DATE, DateFormatEnum, DateInputComponent, DateInputTypeEnum, DateTypeEnum } from '@library/date';\nimport { StorageService } from '@library/storage-service';\nimport { ToastrColor, ToastrService } from '@library/toastr-service';\nimport { ButtonLabelEnum, COMMON_CONSTANT, FormErrorEnum, InvalidForm, MATERIAL_CONSTANT, MaterialFormFieldAppearance, MessageAlertIconEnum, MessageAlertTypeEnum, TSCCommonService } from '@library/tsc-common';\nimport { ApplicationKeyID } from '@library/application-service';\n// /tsc-library/\n\n@Component({\n    selector: 'lib-sourcing',\n    templateUrl: './sourcing.component.html',\n    styles: [\n    ]\n})\nexport class SourcingReportComponent implements OnInit {\n\n    MATERIAL_CONSTANT = MATERIAL_CONSTANT;\n    COMMON_CONSTANT = COMMON_CONSTANT;\n    CUSTOM_RANGE_CONSTANT = CUSTOM_RANGE_CONSTANT_EXCLUSIVE_DATE;\n\n    MaterialFormFieldAppearance = MaterialFormFieldAppearance;\n    ButtonLabelEnum = ButtonLabelEnum;\n    DateFormatEnum = DateFormatEnum;\n    DateInputTypeEnum = DateInputTypeEnum;\n    DateTypeEnum = DateTypeEnum;\n    FormErrorEnum = FormErrorEnum;\n\n    pageTitle: string;\n\n    orgID: any;\n    applicationKeyID: any;\n    consumptionParamM: any;\n    paramMetric: any;\n    timezone: string;\n    startDate: string;\n    endDate: string;\n    aggDuration: string;\n\n    allParameterID: any[] = [];\n    parameterList: any[] = [];\n    totalParameterCount: number = 0;\n\n    timestamp: any;\n    renderTable: any;\n    reportData: any;\n\n    showAlert: boolean = false;\n    showLoader: boolean = false;\n\n    reportAlertObj: AlertM = new Alert();\n\n    parameterFC: FormControl = new FormControl([], [Validators.required]);\n\n    @ViewChild('customDateInput') customDateInput: DateInputComponent;\n    @ViewChild('aggDurationInput') aggDurationInput: AggregationDurationComponent;\n\n    constructor(\n        private router: Router,\n        private storageService: StorageService,\n        private toastService: ToastrService,\n        private aggregateDataService: AggregateDataService,\n        private parameterService: ParameterService,\n        private reportService: ReportService,\n        private alertService: AlertService,\n        private tscCommonService: TSCCommonService,\n    ) { }\n\n    ngOnInit(): void {\n        this.orgID = this.storageService.getStorage('currentOrgID');\n        this.timezone = this.storageService.getStorage('timezone');\n        this.applicationKeyID = this.storageService.getStorage('applicationKeyID');\n\n        const applicationName = this.applicationKeyID == ApplicationKeyID.WATER_KEY_ID ? 'Water' : 'Energy';\n        this.pageTitle = `${applicationName} Sourcing Report`;\n\n        this.getConsumptionParameter();\n    }\n\n    async getConsumptionParameter() {\n        const consumptionParamM = <ConsumptionParameterM>await this.parameterService.getConsumptionParameter(this.orgID);\n\n        this.consumptionParamM = consumptionParamM.consumptionParameter;\n\n        this.totalParameterCount = this.consumptionParamM.length;\n        this.consumptionParamM.forEach(parameter => this.allParameterID.push(parameter['paramMetric']));\n    }\n\n    dateInpChange() {\n        this.startDate = this.customDateInput.startDateFC.value;\n        this.endDate = this.customDateInput.endDateFC.value;\n\n        this.alertService.resetAlertProperties(this.reportAlertObj);\n    }\n\n    aggDurationInpChange() {\n        this.aggDuration = this.aggDurationInput.aggDurationFC.value;\n\n        this.alertService.resetAlertProperties(this.reportAlertObj);\n    }\n\n    selectAllParameters() {\n        if (!this.parameterFC.value.includes(-1)) {\n            this.parameterFC.reset([]);\n            return;\n        }\n        this.parameterFC.setValue([-1, ...this.allParameterID]);\n\n        this.paramInpChange();\n    }\n\n    selectedParameters() {\n        const selected = this.parameterFC.value;\n\n        if (selected.includes(-1)) {\n            selected.shift();\n            this.parameterFC.patchValue(selected);\n        } else if (this.parameterFC.value.length == this.totalParameterCount) {\n            this.allParameterID.splice(0, 0, -1);\n            this.parameterFC.patchValue(this.allParameterID);\n        } else {\n            const filteredSelected = selected.filter(s => s != -1);\n            this.parameterFC.patchValue(filteredSelected);\n        }\n\n        this.paramInpChange();\n    }\n\n    paramInpChange() {\n        let paramMetric = this.parameterFC.value;\n\n        if (paramMetric.length > 0) {\n            this.parameterList = this.tscCommonService.removeSelectAllID(paramMetric);\n        }\n\n        this.alertService.resetAlertProperties(this.reportAlertObj);\n    }\n\n    async viewReport() {\n\n        this.alertService.resetAlertProperties(this.reportAlertObj);\n\n        if (this.isValidInputField()) {\n            this.toastService.openToast(InvalidForm.INVALID_FORM_TITLE, InvalidForm.INVALID_FORM_MESSAGE, ToastrColor.ERROR);\n            return;\n        }\n\n        if (this.startDate == this.endDate) {\n            this.alertService.setAlertProperties(this.reportAlertObj, ReportErrorEnum.INVALID_DATE_LABEL, ReportErrorEnum.INVALID_DATE_MESSAGE, MessageAlertTypeEnum.INFO, MessageAlertIconEnum.INFO_ICON);\n            return;\n        }\n\n        this.showLoader = true;\n\n        try {\n            const requestData = this.createDataRequest();\n\n            this.reportData = await this.aggregateDataService.getAggregateData(this.orgID, requestData);\n\n            if (this.reportData?.length > 0 && !this.reportData?.every(item => item.data.length == 0)) {\n                this.timestamp = this.reportService.extractTimestamp(this.reportData);\n                this.renderTable = this.reportService.populateTable(this.timestamp, this.reportData, this.DateFormatEnum.DATE_TIME);\n            } else {\n                this.alertService.setAlertProperties(this.reportAlertObj, ReportErrorEnum.DATA_NOT_FOUND_LABEL, ReportErrorEnum.DATA_NOT_FOUND_MESSAGE, MessageAlertTypeEnum.WARNING, MessageAlertIconEnum.WARNING_ICON);\n            }\n\n        } catch (error) {\n            console.error(\"Error in viewReport()\", error);\n            this.alertService.setAlertProperties(this.reportAlertObj, ReportErrorEnum.INVALID_ERROR_LABEL, ReportErrorEnum.INVALID_ERROR_MESSAGE, MessageAlertTypeEnum.DANGER, MessageAlertIconEnum.DANGER_ICON);\n        } finally {\n            this.showLoader = false;\n        }\n    }\n\n    async downloadReport(format: string) {\n        this.alertService.resetAlertProperties(this.reportAlertObj);\n\n        if (this.isValidInputField()) {\n            this.toastService.openToast(InvalidForm.INVALID_FORM_TITLE, InvalidForm.INVALID_FORM_MESSAGE, ToastrColor.ERROR);\n            return;\n        }\n\n        if (this.startDate == this.endDate) {\n            this.alertService.setAlertProperties(this.reportAlertObj, ReportErrorEnum.INVALID_DATE_LABEL, ReportErrorEnum.INVALID_DATE_MESSAGE, MessageAlertTypeEnum.INFO, MessageAlertIconEnum.INFO_ICON);\n            return;\n        }\n\n        this.showLoader = true;\n\n        try {\n            const requestData = new DownloadReportRequest();\n\n            requestData.request = this.createDataRequest();\n            requestData.reportName = this.pageTitle;\n            requestData.reportFormat = format;\n\n            await this.reportService.downloadReport(this.orgID, requestData);\n\n        } catch (error) {\n            console.error(\"Error in downloadReport()\", error);\n        } finally {\n            this.showLoader = false;\n        }\n    }\n\n    createDataRequest() {\n\n        let parameter;\n\n        if (this.parameterFC.value?.length > 0) {\n            parameter = this.tscCommonService.removeSelectAllID(this.parameterFC.value);\n        }\n\n        const requestData = new AggregateDataRequest();\n\n        requestData.startTime = this.startDate;\n        requestData.endTime = this.endDate;\n        requestData.interval = this.aggDuration;\n        requestData.params = parameter.map(param => ({\n            name: param,\n            dsAgg: \"sum\",\n            agg: \"sum\",\n            source_or_load: \"source\",\n            sourceLoadType: 'all'\n        }));\n        requestData.nullifyParams();\n\n        return requestData;\n    }\n\n    isValidInputField() {\n        const controls = [\n            this.customDateInput.startDateFC,\n            this.aggDurationInput.aggDurationFC,\n            this.parameterFC\n        ];\n\n        controls.forEach(control => control.markAsTouched());\n        return controls.some(control => control.invalid);\n    }\n\n    scheduleReport(value) {\n        if (value) {\n            const applicationName = this.applicationKeyID == ApplicationKeyID.WATER_KEY_ID ? 'water' : 'energy';\n            this.router.navigate([`schedule-report/${applicationName}-sourcing`]);\n        }\n    }\n\n}\n","<div class=\"card main-card cardOverwrite h100\">\n    <div class=\"headerContainer\">\n        <div class=\"headerLeftContainer\">\n            <div class=\"pageTitle\">{{ pageTitle }}</div>\n        </div>\n        <div class=\"headerRightContainer\">\n            <div class=\"headerRightContainerInner\">\n                <mat-slide-toggle (change)=\"scheduleReport($event.checked)\">Schedule report</mat-slide-toggle>\n            </div>\n        </div>\n    </div>\n\n    <div class=\"card-body\">\n        <div class=\"row\">\n            <div class=\"col-sm-3\">\n                <lib-date-input #customDateInput (emitFilter)=\"dateInpChange()\" [materialFieldWidthInp]=\"true\"\n                    [materialFormFieldAppearanceInp]=\"MaterialFormFieldAppearance.FORM_FIELD_APPEARANCE\"\n                    [isMandatoryFieldInp]=\"true\" [dateInputTypeInp]=\"DateInputTypeEnum.CUSTOM_INPUT\"\n                    [dateTypeInp]=\"DateTypeEnum.EXCLUSIVE\" [showDefaultDurationInp]=\"true\" [showCdrRangeLabelInp]=\"true\"\n                    [labelInp]=\"'Select date'\" [timezoneInp]=\"timezone\" [rangeInp]=\"CUSTOM_RANGE_CONSTANT\" [showTimeInCDRInp]=\"true\"\n                    [showRangeInp]=\"true\" [cdrFormatInp]=\"'YYYY-MM-DD HH:mm:ss'\"></lib-date-input>\n            </div>\n\n            <div class=\"col-sm-3\">\n                <lib-aggregation-duration #aggDurationInput\n                    (emitFilter)=\"aggDurationInpChange()\"></lib-aggregation-duration>\n            </div>\n\n            <div class=\"col-sm-3\">\n                <mat-form-field class=\"matFieldWidth100\" [appearance]=\"MaterialFormFieldAppearance.FORM_FIELD_APPEARANCE\">\n                    <mat-label>Select consumption parameter</mat-label>\n\n                    <mat-select [formControl]=\"parameterFC\" multiple required>\n                        <ng-container\n                            *ngIf=\"consumptionParamM && consumptionParamM.length > 0 && consumptionParamM[0]['id']; else noConsumptionParamM\">\n                            <mat-option [value]=\"-1\" (click)=\"selectAllParameters()\">\n                                Select all\n                            </mat-option>\n                            <mat-option *ngFor=\"let param of consumptionParamM\" [value]=\"param.paramMetric\" (click)=\"selectedParameters()\">\n                                {{ param.label }}\n                            </mat-option>\n                        </ng-container>\n\n                        <ng-template #noConsumptionParamM>\n                            <mat-option disabled>\n                                {{ COMMON_CONSTANT.NO_DATA_FOUND }}\n                            </mat-option>\n                        </ng-template>\n                    </mat-select>\n\n                    <mat-error *ngIf=\"parameterFC.hasError('required')\">\n                        {{ FormErrorEnum.REQUIRED }}\n                    </mat-error>\n                </mat-form-field>\n            </div>\n        </div>\n\n        <div class=\"row\">\n            <div class=\"col-sm-12\">\n                <div class=\"float-end\">\n                    <button class=\"btn btn-sm btn-primary\" type=\"button\" (click)=\"viewReport()\" matRipple\n                        [matRippleCentered]=\"MATERIAL_CONSTANT.MAT_RIPPLE_CENTER\">\n                        {{ ButtonLabelEnum.READ_BTN_LABEL }}\n                    </button>\n                    <lib-download-report (fileTypeEmitted)=\"downloadReport($event)\"></lib-download-report>\n                </div>\n            </div>\n        </div>\n\n        <div class=\"row\">\n            <div class=\"col-sm-12\">\n                <lib-message-alert *ngIf=\"reportAlertObj.showAlert\" [labelInp]=\"reportAlertObj.alertLabel\"\n                    [contentInp]=\"reportAlertObj.alertContent\" [messageAlertTypeInp]=\"reportAlertObj.messageAlertType\"\n                    [messageAlertIconInp]=\"reportAlertObj.messageAlertIcon\">\n                </lib-message-alert>\n            </div>\n        </div>\n\n        <div class=\"row\">\n            <div class=\"centerAlign\">\n                <lib-skeleton-loader *ngIf=\"showLoader\" [count]=\"3\" [appearance]=\"'circle'\"\n                    [theme]=\"{ height: '15px', width: '15px', 'background-color': '#e7ebf3' }\"></lib-skeleton-loader>\n            </div>\n        </div>\n\n        <div class=\"row mt-3\" *ngIf=\"renderTable && renderTable.length > 0\">\n            <div class=\"overflowX customScrollBar\">\n                <table class=\"table\">\n                    <tbody>\n                        <tr class=\"tableHeader\">\n                            <td class=\"fw-bold\"> Sr. No. </td>\n                            <td align=\"center\" class=\"fw-bold\"> Time </td>\n                            <ng-container *ngFor=\"let data of reportData; let i = index\">\n                                <td align=\"center\" class=\"fw-bold\">\n                                    {{ data.entityName }}<br />\n                                    {{ data.paramLabel }} ({{ data.unit }}) ({{ data.dsAgg }})\n                                </td>\n                            </ng-container>\n                        </tr>\n                    </tbody>\n                    <tbody>\n                        <tr *ngFor=\"let row of renderTable\">\n                            <td>{{ row.index }}</td>\n                            <td align=\"center\" class=\"colWidthContainingDateTime\">{{ row.time }}</td>\n                            <td align=\"center\" *ngFor=\"let value of row.data\">{{ value ? value : COMMON_CONSTANT.HYPHEN\n                                }}\n                            </td>\n                        </tr>\n                    </tbody>\n                </table>\n            </div>\n        </div>\n    </div>\n</div>","import { NgModule } from '@angular/core';\nimport { RouterModule, Routes } from '@angular/router';\n\nimport { SourcingReportComponent } from './sourcing.component';\n\nconst routes: Routes = [\n    {\n        path: '',\n        component: SourcingReportComponent\n    }\n];\n\n@NgModule({\n    imports: [RouterModule.forChild(routes)],\n    exports: [RouterModule]\n})\nexport class SourcingReportRoutingModule { }\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\n\nimport {\n    FormsModule,\n    ReactiveFormsModule\n} from '@angular/forms';\n\nimport { MatFormFieldModule } from '@angular/material/form-field';\nimport { MatSelectModule } from '@angular/material/select';\nimport { MatTableModule } from '@angular/material/table';\nimport { MatRippleModule } from '@angular/material/core';\nimport { MatSlideToggleModule } from '@angular/material/slide-toggle';\n\nimport { AggregationDurationModule } from '../../dropdown/aggregation-duration/aggregation-duration.module';\nimport { DownloadReportModule } from '../../_shared/download-report/download-report.module';\n\nimport { SourcingReportRoutingModule } from './sourcing-routing.module';\nimport { SourcingReportComponent } from './sourcing.component';\n\n// tsc-library\nimport { DateInputModule } from '@library/date';\nimport { MessageAlertModule, SkeletonModule } from '@library/tsc-common';\n// /tsc-library/\n\n@NgModule({\n    declarations: [\n        SourcingReportComponent\n    ],\n    imports: [\n        CommonModule,\n        SourcingReportRoutingModule,\n\n        FormsModule,\n        ReactiveFormsModule,\n\n        MatFormFieldModule,\n        MatSelectModule,\n        MatTableModule,\n        MatRippleModule,\n        MatSlideToggleModule,\n\n        AggregationDurationModule,\n        DownloadReportModule,\n\n        DateInputModule,\n        MessageAlertModule,\n        SkeletonModule\n    ]\n})\nexport class SourcingReportModule { }\n","import { Component, OnInit, ViewChild } from '@angular/core';\n\nimport { ReportErrorEnum } from '../../../enum/error.enum';\n\nimport { AggregateDataRequest } from '../../../model/aggregate-data.model';\nimport { Alert, AlertM } from '../../../model/alert.model';\nimport { DownloadReportRequest } from '../../../model/report.model';\n\nimport { SourceLoadComponent } from '../../_shared/filter/source-load/source-load.component';\nimport { AggregationDurationComponent } from '../../dropdown/aggregation-duration/aggregation-duration.component';\n\nimport { AggregateDataService } from '../../../service/aggregate-data.service';\nimport { ReportService } from '../../../service/report.service';\nimport { AlertService } from '../../../service/alert.service';\n\n// tsc-library\nimport { CUSTOM_RANGE_CONSTANT_EXCLUSIVE_DATE, DateFormatEnum, DateInputComponent, DateInputTypeEnum, DateTypeEnum } from '@library/date';\nimport { StorageService } from '@library/storage-service';\nimport { ToastrColor, ToastrService } from '@library/toastr-service';\nimport { ButtonLabelEnum, COMMON_CONSTANT, InvalidForm, MATERIAL_CONSTANT, MaterialFormFieldAppearance, MessageAlertIconEnum, MessageAlertTypeEnum } from '@library/tsc-common';\nimport { ApplicationKeyID } from '@library/application-service';\n// /tsc-library/\n\n@Component({\n    selector: 'lib-usage-across-facility',\n    templateUrl: './usage-across-facility.component.html',\n    styles: [\n    ]\n})\n\nexport class UsageAcrossFacilityComponent implements OnInit {\n\n    materialConstant = MATERIAL_CONSTANT;\n    commonConstant = COMMON_CONSTANT;\n    customRangeConstant = CUSTOM_RANGE_CONSTANT_EXCLUSIVE_DATE;\n\n    materialFormFieldAppearance = MaterialFormFieldAppearance;\n    buttonLabelEnum = ButtonLabelEnum;\n    dateFormatEnum = DateFormatEnum;\n    dateInputTypeEnum = DateInputTypeEnum;\n    dateTypeEnum = DateTypeEnum;\n\n    orgID: any;\n    applicationKeyID: any;\n    paramMetric: any;\n    timezone: string;\n    category: string;\n    startDate: string;\n    endDate: string;\n    aggDuration: string;\n    timestamp: any;\n    renderTable: any;\n    reportData: any;\n    showAlert: boolean = false;\n    showLoader: boolean = false;\n\n    reportAlertObj: AlertM = new Alert();\n\n    @ViewChild('sourceLoadInput') sourceLoadInput: SourceLoadComponent;\n    @ViewChild('customDateInput') customDateInput: DateInputComponent;\n    @ViewChild('aggDurationInput') aggDurationInput: AggregationDurationComponent;\n\n    constructor(\n        private storageService: StorageService,\n        private toastService: ToastrService,\n        private aggregateDataService: AggregateDataService,\n        private reportService: ReportService,\n        private alertService: AlertService\n    ) { }\n\n    ngOnInit(): void {\n        this.orgID = this.storageService.getStorage('currentOrgID');\n        this.timezone = this.storageService.getStorage('timezone');\n        this.applicationKeyID = this.storageService.getStorage('applicationKeyID');\n\n        if (this.applicationKeyID == ApplicationKeyID.ENERGY_KEY_ID) {\n            this.paramMetric = \"engEnergyUsed\";\n        } else if (this.applicationKeyID == ApplicationKeyID.WATER_KEY_ID) {\n            this.paramMetric = \"gwFlowTotalizer\";\n        }\n    }\n\n    sourceLoadInpChange() {\n        this.category = this.sourceLoadInput.categoryFC.value;\n\n        this.alertService.resetAlertProperties(this.reportAlertObj);\n    }\n\n    dateInpChange() {\n        this.startDate = this.customDateInput.startDateFC.value;\n        this.endDate = this.customDateInput.endDateFC.value;\n\n        this.alertService.resetAlertProperties(this.reportAlertObj);\n    }\n\n    aggDurationInpChange() {\n        this.aggDuration = this.aggDurationInput.aggDurationFC.value;\n\n        this.alertService.resetAlertProperties(this.reportAlertObj);\n    }\n\n    async viewReport() {\n\n        this.alertService.resetAlertProperties(this.reportAlertObj);\n\n        if (this.isValidInputField()) {\n            this.toastService.openToast(InvalidForm.INVALID_FORM_TITLE, InvalidForm.INVALID_FORM_MESSAGE, ToastrColor.ERROR);\n            return;\n        }\n\n        if (this.startDate == this.endDate) {\n            this.alertService.setAlertProperties(this.reportAlertObj, ReportErrorEnum.INVALID_DATE_LABEL, ReportErrorEnum.INVALID_DATE_MESSAGE, MessageAlertTypeEnum.INFO, MessageAlertIconEnum.INFO_ICON);\n            return;\n        }\n\n        this.showLoader = true;\n\n        try {\n            const requestData = this.createDataRequest();\n\n            this.reportData = await this.aggregateDataService.getAggregateData(this.orgID, requestData);\n\n            if (this.reportData?.length > 0 && !this.reportData?.every(item => item.data.length == 0)) {\n                this.timestamp = this.reportService.extractTimestamp(this.reportData);\n                this.renderTable = this.reportService.populateTable(this.timestamp, this.reportData, this.dateFormatEnum.DATE_TIME);\n            } else {\n                this.alertService.setAlertProperties(this.reportAlertObj, ReportErrorEnum.DATA_NOT_FOUND_LABEL, ReportErrorEnum.DATA_NOT_FOUND_MESSAGE, MessageAlertTypeEnum.WARNING, MessageAlertIconEnum.WARNING_ICON);\n            }\n\n        } catch (error) {\n            console.error(\"Error in viewReport()\", error);\n            this.alertService.setAlertProperties(this.reportAlertObj, ReportErrorEnum.INVALID_ERROR_LABEL, ReportErrorEnum.INVALID_ERROR_MESSAGE, MessageAlertTypeEnum.DANGER, MessageAlertIconEnum.DANGER_ICON);\n        } finally {\n            this.showLoader = false;\n        }\n    }\n\n    async downloadReport(format: string) {\n        this.alertService.resetAlertProperties(this.reportAlertObj);\n\n        if (this.isValidInputField()) {\n            this.toastService.openToast(InvalidForm.INVALID_FORM_TITLE, InvalidForm.INVALID_FORM_MESSAGE, ToastrColor.ERROR);\n            return;\n        }\n\n        if (this.startDate == this.endDate) {\n            this.alertService.setAlertProperties(this.reportAlertObj, ReportErrorEnum.INVALID_DATE_LABEL, ReportErrorEnum.INVALID_DATE_MESSAGE, MessageAlertTypeEnum.INFO, MessageAlertIconEnum.INFO_ICON);\n            return;\n        }\n\n        this.showLoader = true;\n\n        try {\n            const requestData = new DownloadReportRequest();\n\n            requestData.request = this.createDataRequest();\n            requestData.reportName = 'Usage Across Facility Report';\n            requestData.reportFormat = format;\n\n            await this.reportService.downloadReport(this.orgID, requestData);\n\n        } catch (error) {\n            console.error(\"Error in downloadReport()\", error);\n        } finally {\n            this.showLoader = false;\n        }\n    }\n\n    createDataRequest() {\n\n        const requestData = new AggregateDataRequest();\n\n        requestData.startTime = this.startDate;\n        requestData.endTime = this.endDate;\n        requestData.interval = this.aggDuration;\n        requestData.params = [\n            {\n                name: this.paramMetric,\n                dsAgg: \"sum\",\n                agg: \"sum\",\n                source_or_load: this.category,\n                sourceLoadType: 'all'\n            }\n        ];\n        requestData.nullifyParams();\n\n        return requestData;\n    }\n\n    isValidInputField() {\n        const controls = [\n            this.customDateInput.startDateFC,\n            this.aggDurationInput.aggDurationFC\n        ];\n\n        controls.forEach(control => control.markAsTouched());\n        return controls.some(control => control.invalid);\n    }\n\n}\n","<div class=\"card main-card cardOverwrite h100\">\n    <div class=\"headerContainer\">\n        <div class=\"headerLeftContainer\">\n            <div class=\"pageTitle\">Usage Across Facility Report</div>\n        </div>\n    </div>\n\n    <div class=\"card-body\">\n        <div class=\"row\">\n            <div class=\"col-sm-4\">\n                <lib-source-load #sourceLoadInput (emitFilter)=\"sourceLoadInpChange()\"></lib-source-load>\n            </div>\n        </div>\n\n        <div class=\"row mt-3\">\n            <div class=\"col-sm-3\">\n                <lib-date-input #customDateInput (emitFilter)=\"dateInpChange()\" [materialFieldWidthInp]=\"true\"\n                    [materialFormFieldAppearanceInp]=\"materialFormFieldAppearance.FORM_FIELD_APPEARANCE\"\n                    [isMandatoryFieldInp]=\"true\" [dateInputTypeInp]=\"dateInputTypeEnum.CUSTOM_INPUT\"\n                    [dateTypeInp]=\"dateTypeEnum.EXCLUSIVE\" [showDefaultDurationInp]=\"true\" [showCdrRangeLabelInp]=\"true\"\n                    [labelInp]=\"'Select date'\" [timezoneInp]=\"timezone\" [rangeInp]=\"customRangeConstant\" [showTimeInCDRInp]=\"true\"\n                    [showRangeInp]=\"true\" [cdrFormatInp]=\"'YYYY-MM-DD HH:mm:ss'\"></lib-date-input>\n            </div>\n\n            <div class=\"col-sm-3\">\n                <lib-aggregation-duration #aggDurationInput\n                    (emitFilter)=\"aggDurationInpChange()\"></lib-aggregation-duration>\n            </div>\n        </div>\n\n        <div class=\"row\">\n            <div class=\"col-sm-12\">\n                <div class=\"float-end\">\n                    <button class=\"btn btn-sm btn-primary\" type=\"button\" (click)=\"viewReport()\" matRipple\n                        [matRippleCentered]=\"materialConstant.MAT_RIPPLE_CENTER\">\n                        {{ buttonLabelEnum.READ_BTN_LABEL }}\n                    </button>\n                    <lib-download-report (fileTypeEmitted)=\"downloadReport($event)\"></lib-download-report>\n                </div>\n            </div>\n        </div>\n\n        <div class=\"row\">\n            <div class=\"col-sm-12\">\n                <lib-message-alert *ngIf=\"reportAlertObj.showAlert\" [labelInp]=\"reportAlertObj.alertLabel\"\n                    [contentInp]=\"reportAlertObj.alertContent\" [messageAlertTypeInp]=\"reportAlertObj.messageAlertType\"\n                    [messageAlertIconInp]=\"reportAlertObj.messageAlertIcon\">\n                </lib-message-alert>\n            </div>\n        </div>\n\n        <div class=\"row\">\n            <div class=\"centerAlign\">\n                <lib-skeleton-loader *ngIf=\"showLoader\" [count]=\"3\" [appearance]=\"'circle'\"\n                    [theme]=\"{ height: '15px', width: '15px', 'background-color': '#e7ebf3' }\"></lib-skeleton-loader>\n            </div>\n        </div>\n\n        <div class=\"row mt-3\" *ngIf=\"renderTable && renderTable.length > 0\">\n            <div class=\"overflowX customScrollBar\">\n                <table class=\"table\">\n                    <tbody>\n                        <tr class=\"tableHeader\">\n                            <td class=\"fw-bold\"> Sr. No. </td>\n                            <td align=\"center\" class=\"fw-bold\"> Time </td>\n                            <ng-container *ngFor=\"let data of reportData; let i = index\">\n                                <td align=\"center\" class=\"fw-bold\">\n                                    {{ data.entityName }}<br />\n                                    {{ data.paramLabel }} ({{ data.unit }}) ({{ data.dsAgg }})\n                                </td>\n                            </ng-container>\n                        </tr>\n                    </tbody>\n                    <tbody>\n                        <tr *ngFor=\"let row of renderTable\">\n                            <td>{{ row.index }}</td>\n                            <td align=\"center\" class=\"colWidthContainingDateTime\">{{ row.time }}</td>\n                            <td align=\"center\" *ngFor=\"let value of row.data\">{{ value ? value : commonConstant.HYPHEN\n                                }}\n                            </td>\n                        </tr>\n                    </tbody>\n                </table>\n            </div>\n        </div>\n    </div>\n</div>","import { NgModule } from '@angular/core';\nimport { RouterModule, Routes } from '@angular/router';\n\nimport { UsageAcrossFacilityComponent } from './usage-across-facility.component';\n\nconst routes: Routes = [\n    {\n        path: '',\n        component: UsageAcrossFacilityComponent\n    }\n];\n\n@NgModule({\n    imports: [RouterModule.forChild(routes)],\n    exports: [RouterModule]\n})\nexport class UsageAcrossFacilityRoutingModule { }\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\n\nimport { MatTableModule } from '@angular/material/table';\nimport { MatRippleModule } from '@angular/material/core';\n\nimport { SourceLoadModule } from '../../_shared/filter/source-load/source-load.module';\nimport { AggregationDurationModule } from '../../dropdown/aggregation-duration/aggregation-duration.module';\nimport { DownloadReportModule } from '../../_shared/download-report/download-report.module';\n\nimport { UsageAcrossFacilityRoutingModule } from './usage-across-facility-routing.module';\nimport { UsageAcrossFacilityComponent } from './usage-across-facility.component';\n\n// tsc-library\nimport { DateInputModule } from '@library/date';\nimport { MessageAlertModule, SkeletonModule } from '@library/tsc-common';\n// /tsc-library/\n\n@NgModule({\n    declarations: [\n        UsageAcrossFacilityComponent\n    ],\n    imports: [\n        CommonModule,\n        UsageAcrossFacilityRoutingModule,\n        SourceLoadModule,\n        DateInputModule,\n        AggregationDurationModule,\n        DownloadReportModule,\n        SkeletonModule,\n        MessageAlertModule,\n        MatTableModule,\n        MatRippleModule\n    ]\n})\nexport class UsageAcrossFacilityModule { }\n","import { Component, OnInit } from '@angular/core';\nimport { FormBuilder, FormControl, FormGroup, Validators } from '@angular/forms';\n\nimport { MatChipInputEvent } from '@angular/material/chips';\n\nimport { COMMA, ENTER } from '@angular/cdk/keycodes';\n\nimport { map } from 'rxjs/operators';\n\n// tsc-library\nimport { StorageService } from '@library/storage-service';\nimport { User, UserContext, UserM, UserService } from '@library/user-service';\nimport { MaterialFormFieldAppearance, FormErrorEnum, TSCCommonService, MatSelectSearchService, COMMON_CONSTANT, MATERIAL_CONSTANT } from '@library/tsc-common';\n// /tsc-library/\n\n@Component({\n    selector: 'lib-configuration',\n    templateUrl: './configuration.component.html',\n    styleUrls: ['./configuration.component.scss'],\n})\nexport class ScheduleReportConfigurationComponent implements OnInit {\n\n    COMMON_CONSTANT = COMMON_CONSTANT;\n    MATERIAL_CONSTANT = MATERIAL_CONSTANT;\n\n    FormErrorEnum = FormErrorEnum;\n    MaterialFormFieldAppearance = MaterialFormFieldAppearance;\n\n    orgID: any;\n    scheduleReportFG: FormGroup;\n    scheduleReportID: any;\n\n    userContext = UserContext.ROOT_ORG_USER;\n\n    userM = [new User()];\n    rootOrgUserM = [new User()];\n    currentOrgUserM = [new User()];\n    allUserID: any[] = [];\n    totalUserCount: number = 0;\n\n    intervalList = [\n        { label: 'Daily', value: 'DAILY' },\n        { label: 'Weekly', value: 'WEEKLY' },\n        { label: 'Monthly', value: 'MONTHLY' }\n    ];\n\n    frequencyList = [\n        { label: 'Daily', value: 'DAILY' },\n        { label: 'Weekly', value: 'WEEKLY' },\n        { label: 'Monthly', value: 'MONTHLY' }\n    ];\n\n    frequencyInfoLabel: string = 'Report will be sent at 6:00 a.m.';\n\n    userFC: FormControl = new FormControl(true, Validators.required);\n    userSearchUtil: MatSelectSearchService = new MatSelectSearchService(['firstName', 'lastName', 'email']);\n\n    selectable = true;\n    removable = true;\n    addOnBlur = true;\n    readonly separatorKeysCodes = [ENTER, COMMA] as const;\n\n    inputPlaceholder = \"email1@domain.com, email2@domain.com\";\n\n    constructor(\n        private formBuilder: FormBuilder,\n\n        // tsc-library\n        private storageService: StorageService,\n        public tscCommonService: TSCCommonService,\n        private userService: UserService,\n        // /tsc-library/\n    ) { }\n\n    ngOnInit(): void {\n        this.orgID = this.storageService.getStorage('currentOrgID');\n\n        this.initializeUsers();\n        this.scheduleReportFGInit();\n    }\n\n    scheduleReportFGInit() {\n        this.scheduleReportFG = this.formBuilder.group({\n            name: [, Validators.required],\n            dataInterval: [, Validators.required],\n            frequency: [, Validators.required],\n            userChoice: [UserContext.ROOT_ORG_USER],\n            userID: [[], Validators.required],\n            otherUserEmail: [[]],\n            status: ['ACTIVE', Validators.required],\n            reportFormat: [, Validators.required],\n        });\n\n        this.scheduleReportFG.get('dataInterval').valueChanges.subscribe(value => {\n            switch (value) {\n                case 'DAILY':\n                    this.frequencyList = [{ label: \"Daily\", value: \"DAILY\" }];\n                    this.frequencyInfoLabel = 'Report will be sent on daily basis at 6:00 a.m.';\n                    break;\n                case 'WEEKLY':\n                    this.frequencyList = [\n                        { label: \"Daily\", value: \"DAILY\" },\n                        { label: \"Weekly\", value: \"WEEKLY\" }\n                    ];\n                    this.frequencyInfoLabel = 'Report will be sent on weekly basis at 6:00 a.m. on Monday';\n                    break;\n                case 'MONTHLY':\n                    this.frequencyList = [\n                        { label: \"Daily\", value: \"DAILY\" },\n                        { label: \"Weekly\", value: \"WEEKLY\" },\n                        { label: \"Monthly\", value: \"MONTHLY\" }\n                    ];\n                    this.frequencyInfoLabel = 'Report will be sent on monthly basis at 6:00 a.m. on first day of month';\n                    break;\n                default:\n                    break;\n            }\n        });\n    }\n\n    async initializeUsers() {\n        await this.getUsersByOrgID();\n        await this.getCurrentOrgUserAccess();\n    }\n\n    async getUsersByOrgID() {\n        this.rootOrgUserM = <UserM[]>await this.userService.getUsersByOrgID(this.orgID);\n\n        this.userM = this.rootOrgUserM;\n        this.userSearchUtil.entityArr = this.userM;\n        this.userSearchUtil.createSubscription();\n\n        this.totalUserCount = this.userM.length;\n        this.userM.forEach(user => this.allUserID.push(user['id']));\n    }\n\n    async getCurrentOrgUserAccess() {\n        this.currentOrgUserM = <UserM[]>await this.userService.getCurrentOrgUserAccess(this.orgID);\n    }\n\n    userContextChange() {\n        if (this.userFC.value) {\n            this.userContext = UserContext.ROOT_ORG_USER;\n            this.userM = this.rootOrgUserM;\n            this.scheduleReportFG.get('userChoice').setValue(this.userContext);\n        } else {\n            this.userContext = UserContext.CURRENT_ORG_USER;\n            this.userM = this.currentOrgUserM;\n            this.scheduleReportFG.get('userChoice').setValue(this.userContext);\n        }\n\n        this.allUserID = [];\n\n        this.userSearchUtil.entityArr = this.userM;\n        this.userSearchUtil.createSubscription();\n\n        this.totalUserCount = this.userM.length;\n        this.userM.forEach(user => this.allUserID.push(user['id']));\n\n        this.scheduleReportFG.get('userID').setValue([]);\n    }\n\n    selectUser() {\n        const selected = this.scheduleReportFG.get('userID').value;\n        if (selected.includes(-1)) {\n            selected.shift();\n            this.scheduleReportFG.get('userID').patchValue(selected);\n        } else if (this.scheduleReportFG.get('userID').value.length == this.totalUserCount) {\n            this.allUserID.splice(0, 0, -1);\n            this.scheduleReportFG.get('userID').patchValue(this.allUserID);\n        } else {\n            const filteredSelected = selected.filter(s => s != -1);\n            this.scheduleReportFG.get('userID').patchValue(filteredSelected);\n        }\n    }\n\n    selectAllUsers() {\n        if (!this.scheduleReportFG.get('userID').value.includes(-1)) {\n            this.scheduleReportFG.get('userID').reset([]);\n            return;\n        }\n        this.scheduleReportFG.get('userID').setValue([-1, ...this.allUserID]);\n    }\n\n    onInput() {\n        this.inputPlaceholder = '';\n    }\n\n    get otherUserEmail() {\n        return this.scheduleReportFG.get('otherUserEmail');\n    }\n\n    add(event: MatChipInputEvent): void {\n        const value = (event.value || '').trim();\n        if (value) {\n            const emails = value.split(',').map(email => email.trim());\n            const validEmails = emails.filter(email => this.tscCommonService.isValidEmail(email));\n            if (validEmails.length > 0) {\n                this.otherUserEmail.patchValue(this.otherUserEmail.value.concat(validEmails));\n            }\n        }\n        event.chipInput!.clear();\n    }\n\n    removeEmail(email): void {\n        const index = this.otherUserEmail.value.indexOf(email);\n        if (index >= 0) {\n            const emails = [...this.otherUserEmail.value];\n            emails.splice(index, 1);\n            this.otherUserEmail.setValue(emails);\n        }\n    }\n\n    onStatusChange(event) {\n        const newStatus = event.checked ? 'ACTIVE' : 'INACTIVE';\n        this.scheduleReportFG.get('status').setValue(newStatus);\n    }\n\n    errorHandling = (formGroup: FormGroup, controlPath: string, error: string): boolean => {\n        return formGroup.get(controlPath).hasError(error);\n    }\n\n}\n","<mat-card class=\"border cardOverwrite\">\n    <form [formGroup]=\"scheduleReportFG\">\n        <div class=\"row\">\n            <div class=\"col-sm-6\">\n                <span class=\"cardTitle\">\n                    Scheduler configuration\n                </span>\n            </div>\n            <div class=\"col-sm-6 centerAlignVertical justify-content-end\">\n                <span class=\"me-2\"> Inactive </span>\n                <mat-slide-toggle [checked]=\"scheduleReportFG.get('status').value == 'ACTIVE'\"\n                    (change)=\"onStatusChange($event)\"></mat-slide-toggle>\n                <span class=\"ms-2\"> Active </span>\n            </div>\n            <div class=\"col-sm-12 centerAlignVertical justify-content-end\">\n                <mat-error class=\"textMatError\" *ngIf=\"errorHandling(scheduleReportFG, 'status', 'required')\">\n                    {{ FormErrorEnum.REQUIRED }}\n                </mat-error>\n            </div>\n        </div>\n\n        <div class=\"row mt-2\">\n            <div class=\"row\">\n                <div class=\"col-sm-4\">\n                    <mat-form-field class=\"matFieldWidth100\"\n                        [appearance]=\"MaterialFormFieldAppearance.FORM_FIELD_APPEARANCE\">\n                        <mat-label class=\"formLabel\">Schedule report name</mat-label>\n                        <input class=\"formPlaceholder\" type=\"text\" placeholder=\"Schedule report name\" matInput\n                            formControlName=\"name\" required />\n                        <mat-error *ngIf=\"errorHandling(scheduleReportFG, 'name', 'required')\">\n                            {{ FormErrorEnum.REQUIRED }}\n                        </mat-error>\n                    </mat-form-field>\n                </div>\n\n                <div class=\"col-sm-4\">\n                    <mat-form-field class=\"matFieldWidth100\"\n                        [appearance]=\"MaterialFormFieldAppearance.FORM_FIELD_APPEARANCE\">\n                        <mat-label>Select data interval</mat-label>\n                        <mat-select formControlName=\"dataInterval\" required>\n                            <mat-option *ngFor=\"let interval of intervalList\" [value]=\"interval.value\">\n                                {{ interval.label }}\n                            </mat-option>\n                        </mat-select>\n                        <mat-error *ngIf=\"errorHandling(scheduleReportFG, 'dataInterval', 'required')\">\n                            {{ FormErrorEnum.REQUIRED }}\n                        </mat-error>\n                    </mat-form-field>\n                </div>\n\n                <div class=\"col-sm-4\">\n                    <mat-form-field class=\"matFieldWidth100\"\n                        [appearance]=\"MaterialFormFieldAppearance.FORM_FIELD_APPEARANCE\">\n                        <mat-label>Select frequency</mat-label>\n                        <mat-select formControlName=\"frequency\" required>\n                            <mat-option *ngFor=\"let frequency of frequencyList\" [value]=\"frequency.value\">\n                                {{ frequency.label }}\n                            </mat-option>\n                        </mat-select>\n                        <mat-hint>{{ frequencyInfoLabel }}</mat-hint>\n                        <mat-error *ngIf=\"errorHandling(scheduleReportFG, 'frequency', 'required')\">\n                            {{ FormErrorEnum.REQUIRED }}\n                        </mat-error>\n                    </mat-form-field>\n                </div>\n            </div>\n\n            <div class=\"row enabledToggle\">\n                <div class=\"col-sm-4 d-flex justify-content-start centerAlignVertical\">\n                    <span class=\"me-2\"> Current org users </span>\n                    <mat-slide-toggle [formControl]=\"userFC\" (change)=\"userContextChange()\"></mat-slide-toggle>\n                    <span class=\"ms-2\"> All users </span>\n                </div>\n            </div>\n\n            <div class=\"row mt-2\">\n                <div class=\"col-sm-4\">\n                    <mat-form-field class=\"matFieldWidth100\"\n                        [appearance]=\"MaterialFormFieldAppearance.FORM_FIELD_APPEARANCE\">\n                        <mat-label>Select user</mat-label>\n                        <mat-select formControlName=\"userID\" multiple required>\n\n                            <ng-container *ngIf=\"userM && userM.length > 0 && userM[0]['id']; else noUserFound\">\n                                <mat-option>\n                                    <ngx-mat-select-search [formControl]=\"userSearchUtil.filterFC\"\n                                        placeholderLabel=\"Search by name/email\"\n                                        noEntriesFoundLabel=\"No matching name/email found.\">\n                                    </ngx-mat-select-search>\n                                </mat-option>\n                                <mat-option [value]=\"-1\" (click)=\"selectAllUsers()\"\n                                    [hidden]=\"userSearchUtil.filterFC.value\">\n                                    Select all\n                                </mat-option>\n                                <mat-option *ngFor=\"let user of userSearchUtil.filteredEntities | async\"\n                                    [value]=\"user.id\" (click)=\"selectUser()\">\n                                    {{ user?.email }}\n                                </mat-option>\n                            </ng-container>\n\n                            <ng-template #noUserFound>\n                                <mat-option disabled>\n                                    {{ COMMON_CONSTANT.NO_DATA_FOUND }}\n                                </mat-option>\n                            </ng-template>\n                        </mat-select>\n                        <mat-error *ngIf=\"errorHandling(scheduleReportFG, 'userID', 'required')\">\n                            {{ FormErrorEnum.REQUIRED }}\n                        </mat-error>\n                    </mat-form-field>\n                </div>\n                <div class=\"col-sm-4\">\n                    <mat-form-field class=\"matFieldWidth100\"\n                        [appearance]=\"MaterialFormFieldAppearance.FORM_FIELD_APPEARANCE\">\n                        <mat-label>Enter other user email</mat-label>\n                        <mat-chip-list #chipList>\n                            <mat-chip *ngFor=\"let email of otherUserEmail.value\" [removable]=\"removable\"\n                                (removed)=\"removeEmail(email)\">\n                                {{ email }}\n                                <mat-icon matChipRemove *ngIf=\"removable\">cancel</mat-icon>\n                            </mat-chip>\n                            <input [placeholder]=\"inputPlaceholder\" [matChipInputFor]=\"chipList\"\n                                [matChipInputSeparatorKeyCodes]=\"separatorKeysCodes\" [matChipInputAddOnBlur]=\"addOnBlur\"\n                                (matChipInputTokenEnd)=\"add($event)\" (input)=\"onInput()\">\n                        </mat-chip-list>\n                    </mat-form-field>\n                </div>\n            </div>\n\n            <div class=\"row\">\n                <div class=\"col-sm-6\">\n                    <div class=\"radioBtnField\">\n                        <div class=\"radioBtnGroupLabel\"> Select report format * </div>\n                        <mat-radio-group formControlName=\"reportFormat\">\n                            <div class=\"row my-1\">\n                                <div class=\"col-sm-6\">\n                                    <mat-radio-button class=\"radioBtnLabel\" [value]=\"'PDF'\">\n                                        pdf\n                                    </mat-radio-button>\n                                </div>\n                                <div class=\"col-sm-6\">\n                                    <mat-radio-button class=\"radioBtnLabel\" [value]=\"'XLSX'\">\n                                        xlsx\n                                    </mat-radio-button>\n                                </div>\n                                <mat-error class=\"textMatError ms-1 mt-1\"\n                                    *ngIf=\"errorHandling(scheduleReportFG, 'reportFormat', 'required')\">\n                                    {{ FormErrorEnum.REQUIRED }}\n                                </mat-error>\n                            </div>\n                        </mat-radio-group>\n                    </div>\n                </div>\n            </div>\n        </div>\n    </form>\n</mat-card>","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\n\nimport {\n    FormsModule,\n    ReactiveFormsModule\n} from '@angular/forms';\n\nimport { MatCardModule } from '@angular/material/card';\nimport { MatButtonModule } from '@angular/material/button';\nimport { MatFormFieldModule } from '@angular/material/form-field';\nimport { MatIconModule } from '@angular/material/icon';\nimport { MatInputModule } from '@angular/material/input';\nimport { MatSelectModule } from '@angular/material/select';\nimport { MatTooltipModule } from '@angular/material/tooltip';\nimport { MatOptionModule } from '@angular/material/core';\nimport { MatRadioModule } from '@angular/material/radio';\nimport { MatSlideToggleModule } from '@angular/material/slide-toggle';\nimport { MatChipsModule } from '@angular/material/chips';\n\nimport { NgxMatSelectSearchModule } from 'ngx-mat-select-search';\n\nimport { ScheduleReportConfigurationComponent } from './configuration.component';\n\n@NgModule({\n    declarations: [\n        ScheduleReportConfigurationComponent\n    ],\n    imports: [\n        CommonModule,\n\n        FormsModule,\n        ReactiveFormsModule,\n\n        MatCardModule,\n        MatButtonModule,\n        MatFormFieldModule,\n        MatIconModule,\n        MatInputModule,\n        MatSelectModule,\n        MatTooltipModule,\n        MatOptionModule,\n        MatRadioModule,\n        MatSlideToggleModule,\n        MatChipsModule,\n\n        NgxMatSelectSearchModule\n    ],\n    exports: [\n        ScheduleReportConfigurationComponent\n    ]\n})\nexport class ScheduleReportConfigurationModule { }\n","export interface ScheduleReportI {\n    reportConfig: {\n        reportType: string;\n        entityType: string;\n        deviceID: number[];\n        entityID: number[];\n        sourceConsumer: {\n            type: string;\n            keyID: string;\n        },\n        paramMetric: string[];\n    };\n    schedulerConfig: {\n        name: string;\n        dataInterval: string;\n        frequency: string;\n        userChoice: string;\n        userID: number[];\n        otherUserEmail: string[];\n        status: string;\n        reportFormat: string;\n    };\n}\n\nexport class ScheduleReport implements ScheduleReportI {\n    reportConfig = {\n        reportType: '',\n        deviceID: [],\n        entityType: '',\n        entityID: [],\n        sourceConsumer: {\n            type: '',\n            keyID: '',\n        },\n        paramMetric: [],\n    };\n    schedulerConfig = {\n        name: '',\n        dataInterval: '',\n        frequency: '',\n        userChoice: '',\n        userID: [],\n        otherUserEmail: [],\n        status: '',\n        reportFormat: '',\n    };\n}\n\nexport interface ScheduleReportPageI {\n    id: number;\n    name: string;\n    type: string;\n    recipients: Array<{\n        id: number,\n        firstName: string,\n        lastName: string,\n        email: string,\n        profileImgUrl: string\n    }>;\n    frequency: string;\n    scheduledBy: {\n        id: number,\n        firstName: string,\n        lastName: string,\n        email: string,\n        profileImgUrl: string\n    };\n    status: string;\n}\n\nexport class ScheduleReportPage implements ScheduleReportPageI {\n    id = null;\n    name = '';\n    type = '';\n    recipients = [];\n    frequency = '';\n    scheduledBy = {\n        id: null,\n        firstName: '',\n        lastName: '',\n        email: '',\n        profileImgUrl: ''\n    };\n    status = '';\n}","import { Inject, Injectable } from '@angular/core';\nimport { HttpClient, HttpParams } from '@angular/common/http';\n\nimport { Observable } from 'rxjs';\n\nimport { ScheduleReportI, ScheduleReportPageI } from '../model/schedule-report.model';\n\n// tsc-library\nimport { PageM } from '@library/tsc-common';\n// /tsc-library/\n\n@Injectable({\n    providedIn: 'root'\n})\n\nexport class ScheduleReportController {\n\n    constructor(\n        private http: HttpClient,\n        @Inject('environment') private environment: any\n    ) { }\n\n    createScheduleReport(orgID, scheduleReport) {\n        return this.http.post(`${this.environment.TSC_COMMON_API_URL}organizations/${orgID}/schedule-reports`, scheduleReport);\n    }\n\n    getScheduleReportByID(orgID, scheduleReportID): Observable<ScheduleReportI> {\n        return this.http.get<ScheduleReportI>(`${this.environment.TSC_COMMON_API_URL}organizations/${orgID}/schedule-reports/${scheduleReportID}`);\n    }\n\n    updateScheduleReport(orgID, scheduleReportID, scheduleReport) {\n        return this.http.patch(`${this.environment.TSC_COMMON_API_URL}organizations/${orgID}/schedule-reports/${scheduleReportID}`, scheduleReport);\n    }\n\n    getScheduleReportByPage(pageNo: number, pageSize: number, sortBy: string, orderBy: string, searchValue, filterArr, orgID): Observable<PageM<ScheduleReportPageI>> {\n        let params = new HttpParams();\n\n        params = params.append('pageNo', pageNo);\n        params = params.append('pageSize', pageSize);\n        params = params.append('sortBy', sortBy);\n        params = params.append('orderBy', orderBy);\n\n        if (searchValue) {\n            params = params.append('searchBy', searchValue);\n        }\n\n        filterArr.forEach(filter => params = params.append('filter', filter));\n\n        return this.http.get<PageM<ScheduleReportPageI>>(`${this.environment.TSC_COMMON_API_URL}organizations/${orgID}/schedule-reports/page`, { params: params });\n    }\n\n    deleteScheduledReport(orgID, scheduleReportID) {\n        return this.http.delete(`${this.environment.TSC_COMMON_API_URL}organizations/${orgID}/schedule-reports/${scheduleReportID}`);\n    }\n\n    updateReportStatusByID(orgID, scheduleReportID, status) {\n        return this.http.patch(`${this.environment.TSC_COMMON_API_URL}organizations/${orgID}/schedule-reports/${scheduleReportID}/status`, status);\n    }\n}","import { Component, ElementRef, OnInit, ViewChild } from '@angular/core';\nimport { FormControl, Validators } from '@angular/forms';\nimport { Router } from '@angular/router';\n\nimport { MatDialog } from '@angular/material/dialog';\nimport { MatSort } from '@angular/material/sort';\nimport { MatPaginator } from '@angular/material/paginator';\n\nimport { merge, fromEvent, of as observableOf } from 'rxjs';\nimport { map, startWith, switchMap, catchError } from \"rxjs/operators\";\n\nimport { faCaretDown, faPlus } from '@fortawesome/free-solid-svg-icons';\n\nimport { LIST_CONSTANT } from '../../../../constant/list.constant';\n\nimport { ScheduleReportTypeEnum } from '../../../../enum/schedule-report.enum';\n\nimport { ScheduleReportPage, ScheduleReportPageI } from '../../../../model/schedule-report.model';\n\nimport { ScheduleReportController } from '../../../../controller/schedule-report.controller';\n\n// tsc-library\nimport {\n    MATERIAL_CONSTANT,\n    TABLE_CONSTANT,\n    ButtonTooltipEnum,\n    SearchBarOneComponent,\n    FormAction,\n    COMMON_CONSTANT,\n    DialogOneComponent,\n    DialogOneEnum,\n    FunnelFilterComponent,\n    PageM,\n    DialogResponseEnum,\n    StatusService,\n    ButtonLabelEnum,\n    ImageService\n} from '@library/tsc-common';\nimport { StorageService } from '@library/storage-service';\nimport { ApplicationKeyID } from '@library/application-service';\nimport { ProfileImg, UserService } from '@library/user-service';\n// /tsc-library/\n\n@Component({\n    selector: 'lib-page',\n    templateUrl: './page.component.html',\n    styleUrls: ['./page.component.scss']\n})\nexport class ScheduleReportPageComponent implements OnInit {\n\n    faPlus = faPlus;\n    faCaretDown = faCaretDown;\n\n    MATERIAL_CONSTANT = MATERIAL_CONSTANT;\n    TABLE_CONSTANT = TABLE_CONSTANT;\n    COMMON_CONSTANT = COMMON_CONSTANT;\n\n    ButtonTooltipEnum = ButtonTooltipEnum;\n    DialogResponseEnum = DialogResponseEnum;\n    FormAction = FormAction;\n    ProfileImg = ProfileImg;\n\n    searchByPlaceHolder: string = 'report name';\n\n    orgID: any;\n    applicationKeyID: string;\n    applicationName: string;\n    reportType: any[] = [];\n\n    dataSource = [new ScheduleReportPage()];\n    dataSourceLength: number = 0;\n    displayedColumn: string[] = ['id', 'name', 'type', 'recipients', 'frequency', 'scheduledBy', 'status', 'option'];\n\n    searchFlag: boolean = false;\n    searchValue: string;\n    searchFC = new FormControl('', Validators.required);\n\n    reportTypeFlag: boolean = false;\n    reportTypeFC: FormControl = new FormControl(['all']);\n    filterArr: Array<string> = [];\n    totalReportTypeCount: number = 0;\n\n    recipientUserList: any[] = [];\n\n    @ViewChild('sort') sort: MatSort;\n    @ViewChild('paginator') paginator: MatPaginator;\n    @ViewChild('refreshBtn') refreshBtn: ElementRef;\n    @ViewChild('searchBar') searchBar: SearchBarOneComponent;\n    @ViewChild('typeSelect') typeSelect: FunnelFilterComponent;\n\n    constructor(\n        private dialog: MatDialog,\n        private router: Router,\n        private scheduleReportController: ScheduleReportController,\n\n        // tsc-library\n        private storageService: StorageService,\n        public statusService: StatusService,\n        public userService: UserService,\n        public imageService: ImageService\n        // /tsc-library/\n    ) { }\n\n    ngOnInit(): void {\n        this.orgID = this.storageService.getStorage('currentOrgID');\n        this.applicationKeyID = this.storageService.getStorage('applicationKeyID');\n        this.applicationName = this.applicationKeyID == ApplicationKeyID.WATER_KEY_ID ? 'water' : 'energy';\n\n        if (this.applicationKeyID == ApplicationKeyID.ENERGY_KEY_ID) {\n            this.reportType = LIST_CONSTANT.ENERGY_APP_SCHEDULE_REPORT_TYPE;\n            this.totalReportTypeCount = this.reportType.length;\n        } else if (this.applicationKeyID == ApplicationKeyID.WATER_KEY_ID) {\n            this.reportType = LIST_CONSTANT.WATER_APP_SCHEDULE_REPORT_TYPE;\n            this.totalReportTypeCount = this.reportType.length;\n        }\n    }\n\n    ngAfterViewInit() {\n        merge(\n            this.sort.sortChange,\n            this.typeSelect.multi,\n            fromEvent(this.refreshBtn.nativeElement, 'click')\n        ).pipe(\n            startWith({}),\n            switchMap((): any => {\n\n                this.filterArr = [];\n\n                if (this.searchFlag) {\n                    var searchValue = 'name:' + this.searchValue;\n                }\n\n                if (this.reportTypeFlag) {\n                    let selectedReportType = this.reportTypeFC.value.length - 1;\n                    if (selectedReportType == this.totalReportTypeCount) {\n                        this.reportTypeFlag = false;\n                    } else {\n                        this.filterArr.push('reportType:' + this.reportTypeFC.value);\n                    }\n                }\n\n                return this.scheduleReportController.getScheduleReportByPage(\n                    this.paginator.pageIndex,\n                    this.paginator.pageSize,\n                    this.sort.active,\n                    this.sort.direction,\n                    searchValue,\n                    this.filterArr,\n                    this.orgID,\n                ).pipe(catchError(() => observableOf(null)));\n            }),\n            map((response: PageM<ScheduleReportPageI>): any => {\n                if (response == null) {\n                    this.dataSourceLength = 0;\n                    return [];\n                }\n\n                this.dataSourceLength = response.totalCount;\n                return response.records;\n            })\n        ).subscribe((dataSource) => {\n            this.dataSource = dataSource;\n        });\n    }\n\n    searchFn(value: string) {\n        this.searchFlag = true;\n        this.searchValue = value;\n\n        if (value.length == 0) {\n            this.resetSearch();\n        }\n\n        this.refreshBtn.nativeElement.click();\n    }\n\n    resetSearch() {\n        this.searchFlag = false;\n        this.searchBar.searchClear();\n    }\n\n    showAllRecipient(userList) {\n        this.recipientUserList = [];\n\n        userList.forEach(user => {\n            let metric = {\n                profileImg: user.profileImgUrl || this.userService.defaultImage(\n                    (user.firstName ? user.firstName + ' ' : '') + (user.lastName ? user.lastName : ''),\n                    ProfileImg.PROFILE_IMAGE_DROPDOWN_NAME_VIEW),\n                name: (user.firstName ? user.firstName + ' ' + (user.lastName ? user.lastName : '') : ''),\n            };\n            this.recipientUserList.push(metric);\n        });\n    }\n\n    openDeleteDialog(scheduleReport) {\n\n        const dialog = this.dialog.open(DialogOneComponent, {\n            minWidth: '450px',\n            maxWidth: '450px',\n            data: {\n                type: DialogOneEnum.DELETE,\n                icon: 'dangerous',\n                header: 'Delete schedule report?',\n                body: '<b>' + scheduleReport.name + '</b>' + ' will be deleted permanently.</br></br>Are you sure you want to continue?',\n                buttonOne: ButtonLabelEnum.CANCEL_BTN_LABEL,\n                buttonTwo: ButtonLabelEnum.DELETE_BTN_LABEL\n            }\n        });\n        dialog.afterClosed().subscribe(res => {\n            if (res) {\n                this.deleteScheduledReport(scheduleReport.id);\n            }\n        })\n    }\n\n    deleteScheduledReport(scheduleReportID) {\n        this.scheduleReportController.deleteScheduledReport(this.orgID, scheduleReportID).subscribe((deleteRes) => {\n            if (deleteRes) {\n                this.refreshBtn.nativeElement.click();\n            }\n        });\n    }\n\n    updateReportStatusByID(scheduleReport) {\n        let newStatus = scheduleReport.status == 'ACTIVE' ? 'INACTIVE' : 'ACTIVE';\n\n        let requestBody = {\n            status: newStatus\n        }\n\n        this.scheduleReportController.updateReportStatusByID(this.orgID, scheduleReport.id, requestBody)\n            .subscribe(response => {\n                if (response) {\n                    this.refreshBtn.nativeElement.click();\n                }\n            }, error => {\n                console.log('error in updateReportStatusByID -', error);\n            })\n    }\n\n    goToReportPage(reportType) {\n        switch (reportType) {\n            case ScheduleReportTypeEnum.SOURCING_REPORT:\n                this.router.navigate([`schedule-report/${this.applicationName}-sourcing`]);\n                break;\n            case ScheduleReportTypeEnum.CONSUMPTION_REPORT:\n                this.router.navigate([`schedule-report/${this.applicationName}-consumption`]);\n                break;\n            case ScheduleReportTypeEnum.BREAKUP_REPORT:\n                this.router.navigate([`schedule-report/${this.applicationName}-breakup`]);\n                break;\n            case ScheduleReportTypeEnum.CGWA_REPORT:\n                this.router.navigate([`schedule-report/cgwa`]);\n                break;\n            case ScheduleReportTypeEnum.TEMPERATURE_REPORT:\n                this.router.navigate([`schedule-report/temperature`]);\n                break;\n        }\n    }\n\n    updateScheduledReport(scheduleReport) {\n        switch (scheduleReport.type) {\n            case ScheduleReportTypeEnum.SOURCING_REPORT:\n                this.router.navigate([`schedule-report/${scheduleReport.id}/${this.applicationName}-sourcing/update`]);\n                break;\n            case ScheduleReportTypeEnum.CONSUMPTION_REPORT:\n                this.router.navigate([`schedule-report/${scheduleReport.id}/${this.applicationName}-consumption/update`]);\n                break;\n            case ScheduleReportTypeEnum.BREAKUP_REPORT:\n                this.router.navigate([`schedule-report/${scheduleReport.id}/${this.applicationName}-breakup/update`]);\n                break;\n            case ScheduleReportTypeEnum.CGWA_REPORT:\n                this.router.navigate([`schedule-report/${scheduleReport.id}/cgwa/update`]);\n                break;\n            case ScheduleReportTypeEnum.TEMPERATURE_REPORT:\n                this.router.navigate([`schedule-report/${scheduleReport.id}/temperature/update`]);\n                break;\n        }\n    }\n\n    getReportTypeLabel(type) {\n        let reportLabel: string;\n        let applicationName = this.applicationKeyID == ApplicationKeyID.WATER_KEY_ID ? 'Water' : 'Energy';\n\n        switch (type) {\n            case ScheduleReportTypeEnum.SOURCING_REPORT:\n                reportLabel = `${applicationName} Sourcing Report`;\n                break;\n            case ScheduleReportTypeEnum.CONSUMPTION_REPORT:\n                reportLabel = `${applicationName} Consumption Report`;\n                break;\n            case ScheduleReportTypeEnum.BREAKUP_REPORT:\n                reportLabel = `${applicationName} Breakup Report`;\n                break;\n            case ScheduleReportTypeEnum.CGWA_REPORT:\n                reportLabel = `CGWA Report`;\n                break;\n            case ScheduleReportTypeEnum.TEMPERATURE_REPORT:\n                reportLabel = `Temperature Report`;\n                break;\n        }\n\n        return reportLabel;\n    }\n\n    getFrequencyLabel(type) {\n        let frequencyLabel: string;\n\n        switch (type) {\n            case 'DAILY':\n                frequencyLabel = 'Daily';\n                break;\n            case 'WEEKLY':\n                frequencyLabel = 'Weekly';\n                break;\n            case 'MONTHLY':\n                frequencyLabel = 'Monthly';\n                break;\n        }\n\n        return frequencyLabel;\n    }\n\n}\n","<div class=\"card cardOverwrite h100\">\n    <div class=\"headerContainer\">\n        <div class=\"headerLeftContainer\">\n            <div class=\"pageTitle\">Schedule Report</div>\n            <div class=\"pageSubtitle\"></div>\n        </div>\n\n        <div class=\"headerRightContainer\">\n            <div class=\"headerRightContainerInner\">\n                <lib-search-bar-one class=\"me-3\" #searchBar [searchBy]=\"searchByPlaceHolder\"\n                    (emitSearch)=\"searchFn($event)\"></lib-search-bar-one>\n\n                <button class=\"btn btn-sm btn-light refreshBtn centerAlign me-3 py-1\" #refreshBtn matRipple\n                    [matRippleCentered]=\"MATERIAL_CONSTANT.MAT_RIPPLE_CENTER\" matTooltipPosition=\"below\"\n                    [matTooltip]=\"ButtonTooltipEnum.REFRESH\">\n                    <span class=\"material-symbols-outlined text-secondary\">\n                        refresh\n                    </span>\n                </button>\n\n                <div class=\"btn-group\" ngbDropdown placement=\"bottom-right\">\n                    <button type=\"button\" ngbDropdownToggle class=\"hideDropdownIcon btn btn-sm btn-success\">\n                        <fa-icon [icon]=\"faPlus\" class=\"me-1\"></fa-icon>Schedule report\n                        <fa-icon [icon]=\"faCaretDown\" class=\"ms-2\"></fa-icon>\n                    </button>\n                    <div ngbDropdownMenu>\n                        <a class=\"dropdown-item mt-1\" *ngFor=\"let type of reportType\" (click)=\"goToReportPage(type.value)\">\n                            {{ type.label }}\n                        </a>\n                    </div>\n                </div>\n            </div>\n        </div>\n    </div>\n\n    <div class=\"overflowX customScrollBar\">\n        <table class=\"w-100\" mat-table matSort #sort=\"matSort\" matSortActive=\"name\" matSortDirection=\"asc\"\n            matSortDisableClear [dataSource]=\"dataSource\">\n\n            <ng-container matColumnDef=\"id\">\n                <th class=\"columnWidth1\" mat-header-cell *matHeaderCellDef>ID</th>\n                <td class=\"columnWidth1\" mat-cell *matCellDef=\"let row\">{{ row.id }}</td>\n            </ng-container>\n\n            <ng-container matColumnDef=\"name\">\n                <th class=\"px-4 columnWidth2\" mat-header-cell *matHeaderCellDef mat-sort-header disableClear>Name</th>\n                <td class=\"px-4 columnWidth2\" mat-cell *matCellDef=\"let row\" matTooltipPosition=\"above\"\n                    [matTooltip]=\"(row?.name.length > 20 ? row?.name : '')\" matTooltipClass=\"nameTooltip\">\n                    {{ (row.name ? row.name : COMMON_CONSTANT.HYPHEN) | dotdotdot:20 }}\n                </td>\n            </ng-container>\n\n            <ng-container matColumnDef=\"type\">\n                <th class=\"px-4 columnWidth2\" mat-header-cell *matHeaderCellDef>\n                    <funnel-filter #typeSelect header=\"Report type\" type=\"multi\" [entityList]=\"reportType\" value=\"value\" view=\"label\"\n                        [selectFC]=\"reportTypeFC\" [active]=\"reportTypeFlag\" selectAllLabel=\"All report type\"\n                        (multi)=\"reportTypeFlag = true;\">\n                    </funnel-filter>\n                </th>\n                <td class=\"px-4 columnWidth2\" mat-cell *matCellDef=\"let row\">\n                    {{ getReportTypeLabel(row.type) }}\n                </td>\n            </ng-container>\n\n            <ng-container matColumnDef=\"recipients\">\n                <th class=\"columnWidth1\" mat-header-cell *matHeaderCellDef>Recipients</th>\n                <td class=\"columnWidth1\" mat-cell *matCellDef=\"let row\">\n                    <ng-container *ngFor=\"let user of row.recipients.slice(0,3); let i = index\">\n                        <img class=\"multipleProfileImg rounded-circle border\"\n                            [src]=\"imageService.getProfileImageUrl(user, ProfileImg.PROFILE_IMAGE_DROPDOWN_NAME_VIEW)\" alt=\"profile-image\"\n                            #tooltip=\"matTooltip\" matTooltipPosition=\"above\"\n                            [matTooltip]=\"row.recipients.length != 1 ? (user?.firstName ? user?.firstName + ' ' + (user?.lastName ? user?.lastName : '') : '') : ''\"\n                            matTooltipClass=\"nameTooltip\" />\n\n                        <span *ngIf=\"row.recipients.length == 1\">\n                            {{ user.firstName }} {{user.lastName }}\n                        </span>\n                    </ng-container>\n                    <button *ngIf=\"imageService.getCountForCircleDisplay(row.recipients) >= 1\" [matMenuTriggerFor]=\"menu\"\n                        class=\"btn btn-sm rounded-circle countCircleBtn\" (click)=\"showAllRecipient(row.recipients)\">\n                        {{ imageService.getCountForCircleDisplay(row.recipients) }}\n                    </button>\n                    <mat-menu #menu=\"matMenu\">\n                        <button mat-menu-item *ngFor=\"let recipient of recipientUserList\">\n                            <img class=\"multipleProfileImg rounded-circle border me-1\" [src]=\"recipient.profileImg\">\n                            {{ recipient.name }}\n                        </button>\n                    </mat-menu>\n                </td>\n            </ng-container>\n\n            <ng-container matColumnDef=\"frequency\">\n                <th class=\"columnWidth1\" mat-header-cell *matHeaderCellDef>Frequency</th>\n                <td class=\"columnWidth1\" mat-cell *matCellDef=\"let row\">\n                    {{ getFrequencyLabel(row.frequency) }}\n                </td>\n            </ng-container>\n\n            <ng-container matColumnDef=\"scheduledBy\">\n                <th class=\"columnWidth1\" mat-header-cell *matHeaderCellDef>Scheduled by</th>\n                <td class=\"columnWidth1\" mat-cell *matCellDef=\"let row\">\n                    <img class=\"rounded-circle border profileImageDropdownView\"\n                        [src]=\"row?.scheduledBy?.profileImgUrl || userService.defaultImage(row?.scheduledBy?.firstName + ' ', ProfileImg.PROFILE_IMAGE_DROPDOWN_NAME_VIEW)\"\n                        alt=\"profile img\">\n                    <span matTooltipPosition=\"above\"\n                        [matTooltip]=\"(row?.scheduledBy?.firstName + ' ' + row?.scheduledBy?.lastName).length > 12 ? row?.scheduledBy?.firstName + ' ' + row?.scheduledBy?.lastName : ''\"\n                        matTooltipClass=\"nameTooltip\">\n                        {{ (row?.scheduledBy?.firstName ? row?.scheduledBy?.firstName + ' ' + row?.scheduledBy?.lastName :\n                        COMMON_CONSTANT.HYPHEN)| dotdotdot:12 }}\n                    </span>\n                </td>\n            </ng-container>\n\n            <ng-container matColumnDef=\"status\">\n                <th class=\"columnWidth1\" mat-header-cell *matHeaderCellDef>Status</th>\n                <td class=\"columnWidth1\" mat-cell *matCellDef=\"let row\"\n                    [ngClass]=\"statusService.getStatusClass(row.status)\">{{\n                    row.status ? statusService.getStatusValue(row.status) : COMMON_CONSTANT.HYPHEN }}</td>\n            </ng-container>\n\n            <ng-container matColumnDef=\"option\">\n                <th class=\"columnWidth1\" mat-header-cell *matHeaderCellDef></th>\n                <td class=\"columnWidth1\" mat-cell *matCellDef=\"let row\">\n                    <div class=\"centerAlignVertical\">\n\n                        <button type=\"button\" class=\"iconBtn centerAlign text-primary updateIconHover\"\n                            (click)=\"updateScheduledReport(row)\" matRipple\n                            [matRippleCentered]=\"MATERIAL_CONSTANT.MAT_RIPPLE_CENTER\" matTooltipPosition=\"below\"\n                            [matTooltip]=\"ButtonTooltipEnum.UPDATE\">\n                            <span class=\"material-symbols-outlined icon\">\n                                edit\n                            </span>\n                        </button>\n\n                        <button type=\"button\" class=\"iconBtn centerAlign text-danger deleteIconHover cursorPointer\"\n                            matTooltipPosition=\"below\" [matTooltip]=\"ButtonTooltipEnum.DELETE\" matRipple\n                            [matRippleCentered]=\"MATERIAL_CONSTANT.MAT_RIPPLE_CENTER\" (click)=\"openDeleteDialog(row)\">\n                            <span class=\"material-symbols-outlined icon\">\n                                delete\n                            </span>\n                        </button>\n\n                        <mat-slide-toggle class=\"ms-3\" [checked]=\"row.status == 'ACTIVE'\"\n                            (change)=\"updateReportStatusByID(row)\"></mat-slide-toggle>\n                    </div>\n                </td>\n            </ng-container>\n\n            <tr mat-header-row *matHeaderRowDef=\"displayedColumn\"></tr>\n            <tr mat-row *matRowDef=\"let row; columns: displayedColumn;\" class=\"dataRow\"></tr>\n\n            <tr class=\"mat-row\" *matNoDataRow>\n                <td class=\"mat-cell text-center\" [attr.colspan]=\"displayedColumn.length\">\n                    {{ TABLE_CONSTANT.TABLE_NO_DATA }}\n                </td>\n            </tr>\n        </table>\n    </div>\n\n    <mat-paginator class=\"roundedBorder\" showFirstLastButtons #paginator [length]=\"dataSourceLength\"\n        [pageSize]=\"TABLE_CONSTANT.DEFAULT_PAGE_SIZE\" [pageSizeOptions]=\"TABLE_CONSTANT.PAGE_SIZE_OPTION\">\n    </mat-paginator>\n</div>","import { NgModule } from '@angular/core';\nimport { RouterModule, Routes } from '@angular/router';\n\nimport { ScheduleReportPageComponent } from './page.component';\n\nconst routes: Routes = [\n    {\n        path: '',\n        component: ScheduleReportPageComponent\n    }\n];\n\n@NgModule({\n    imports: [RouterModule.forChild(routes)],\n    exports: [RouterModule]\n})\nexport class ScheduleReportPageRoutingModule { }\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\n\nimport { FormsModule } from '@angular/forms';\nimport { ReactiveFormsModule } from '@angular/forms';\n\nimport { MatRippleModule } from '@angular/material/core';\nimport { MatTableModule } from '@angular/material/table';\nimport { MatSortModule } from '@angular/material/sort';\nimport { MatTooltipModule } from '@angular/material/tooltip';\nimport { MatDialogModule } from '@angular/material/dialog';\nimport { MatPaginatorModule } from '@angular/material/paginator';\nimport { MatSlideToggleModule } from '@angular/material/slide-toggle';\nimport { MatMenuModule } from '@angular/material/menu';\n\nimport { NgbModule } from '@ng-bootstrap/ng-bootstrap';\nimport { FontAwesomeModule } from '@fortawesome/angular-fontawesome';\n\nimport { ScheduleReportPageRoutingModule } from './page-routing.module';\nimport { ScheduleReportPageComponent } from './page.component';\n\n// tsc-library\nimport { SearchBarOneModule, FunnelFilterModule, EllipsisPipeModule } from '@library/tsc-common';\n// /tsc-library/\n\n@NgModule({\n    declarations: [\n        ScheduleReportPageComponent\n    ],\n    imports: [\n        CommonModule,\n        ScheduleReportPageRoutingModule,\n\n        FormsModule,\n        ReactiveFormsModule,\n\n        MatRippleModule,\n        MatTableModule,\n        MatSortModule,\n        MatTooltipModule,\n        MatDialogModule,\n        MatPaginatorModule,\n        MatSlideToggleModule,\n        MatMenuModule,\n\n        NgbModule,\n        FontAwesomeModule,\n\n        SearchBarOneModule,\n        FunnelFilterModule,\n        EllipsisPipeModule\n    ]\n})\nexport class ScheduleReportPageModule { }\n","import { Injectable } from '@angular/core';\n\nimport { ScheduleReport, ScheduleReportI } from '../model/schedule-report.model';\n\nimport { ScheduleReportController } from '../controller/schedule-report.controller';\n\n@Injectable({\n    providedIn: 'root'\n})\n\nexport class ScheduleReportService {\n\n    constructor(\n        private scheduleReportController: ScheduleReportController\n    ) { }\n\n    async getScheduleReportByID(orgID, scheduleReportID): Promise<ScheduleReportI> {\n        let scheduleReportI: ScheduleReportI;\n        try {\n            scheduleReportI = await this.scheduleReportController.getScheduleReportByID(orgID, scheduleReportID).toPromise();\n\n            if (scheduleReportI) {\n                return scheduleReportI;\n            } else {\n                return new ScheduleReport();\n            }\n        } catch (error) {\n            console.error('Error -', error);\n            return new ScheduleReport();\n        }\n    }\n\n}\n","import { Component, OnInit, ViewChild } from '@angular/core';\nimport { FormBuilder, FormGroup, Validators } from '@angular/forms';\nimport { ActivatedRoute, Router } from '@angular/router';\n\nimport { isEqual } from 'lodash';\n\nimport { DropdownTypeEnum } from '../../../enum/dropdown.enum';\nimport { ScheduleReportTypeEnum } from '../../../enum/schedule-report.enum';\n\nimport { ConsumptionParameterM } from '../../../model/parameter.model';\nimport { ScheduleReport, ScheduleReportI } from '../../../model/schedule-report.model';\n\nimport { ScheduleReportController } from '../../../controller/schedule-report.controller';\n\nimport { ParameterService } from '../../../service/parameter.service';\nimport { ScheduleReportService } from '../../../service/schedule-report.service';\n\nimport { EntityComponent } from '../../dropdown/entity/entity.component';\nimport { ScheduleReportConfigurationComponent } from '../_shared/configuration/configuration.component';\n\n// tsc-library\nimport { ResponseM, MaterialFormFieldAppearance, InvalidForm, ButtonLabelEnum, FormAction, FormErrorEnum, TSCCommonService, COMMON_CONSTANT, MATERIAL_CONSTANT, ButtonTooltipEnum } from '@library/tsc-common';\nimport { ToastrColor, ToastrService } from '@library/toastr-service';\nimport { StorageService } from '@library/storage-service';\nimport { ApplicationKeyID } from '@library/application-service';\n// /tsc-library/\n\n@Component({\n    selector: 'lib-breakup',\n    templateUrl: './breakup.component.html',\n    styles: [\n    ]\n})\nexport class ScheduleReportBreakupComponent implements OnInit {\n\n    COMMON_CONSTANT = COMMON_CONSTANT;\n    MATERIAL_CONSTANT = MATERIAL_CONSTANT;\n\n    FormAction = FormAction;\n    FormErrorEnum = FormErrorEnum;\n    ButtonLabelEnum = ButtonLabelEnum;\n    ButtonTooltipEnum = ButtonTooltipEnum;\n    DropdownTypeEnum = DropdownTypeEnum;\n    MaterialFormFieldAppearance = MaterialFormFieldAppearance;\n    ApplicationKeyID = ApplicationKeyID;\n\n    orgID: any;\n    applicationKeyID: any;\n    consumptionParamM: any;\n\n    scheduleBreakupReportFG: FormGroup;\n    modifiedFG: any;\n    scheduleReportID: any;\n\n    action: string;\n    pageTitle: string;\n    isEqual: boolean = true;\n    initialObject: any;\n\n    scheduleReportI = new ScheduleReport();\n\n    @ViewChild('entityInput') entityInput: EntityComponent;\n    @ViewChild('schedulerConfigInput') schedulerConfigInput: ScheduleReportConfigurationComponent;\n\n    constructor(\n        private activatedRoute: ActivatedRoute,\n        private router: Router,\n        private formBuilder: FormBuilder,\n        private scheduleReportController: ScheduleReportController,\n        private parameterService: ParameterService,\n        private scheduleReportService: ScheduleReportService,\n\n        // tsc-library\n        private storageService: StorageService,\n        public tscCommonService: TSCCommonService,\n        private toastrService: ToastrService,\n        // /tsc-library/\n    ) { }\n\n    ngOnInit(): void {\n        this.orgID = this.storageService.getStorage('currentOrgID');\n        this.applicationKeyID = this.storageService.getStorage('applicationKeyID');\n\n        this.scheduleBreakupReportFGInit();\n        this.getConsumptionParameter();\n\n        this.activatedRoute.data.subscribe(data => {\n            this.action = data.action;\n            this.setPageTitle();\n        });\n\n        this.activatedRoute.params.subscribe(params => {\n            if (this.action == FormAction.UPDATE) {\n                this.scheduleReportID = params.scheduleReportID;\n                this.getScheduleReportByID(this.scheduleReportID);\n            }\n        });\n    }\n\n    setPageTitle() {\n        const applicationName = this.applicationKeyID == ApplicationKeyID.WATER_KEY_ID ? 'Water' : 'Energy';\n\n        if (this.action == FormAction.CREATE) {\n            this.pageTitle = `Schedule ${applicationName} Breakup Report`;\n        } else if (this.action == FormAction.UPDATE) {\n            this.pageTitle = `Update Scheduled ${applicationName} Breakup Report`;\n        }\n    }\n\n    scheduleBreakupReportFGInit() {\n        this.scheduleBreakupReportFG = this.formBuilder.group({\n            reportConfig: this.formBuilder.group({\n                reportType: [ScheduleReportTypeEnum.BREAKUP_REPORT, Validators.required],\n                deviceID: [[]],\n                entityType: [],\n                entityID: [[], Validators.required],\n                sourceConsumer: this.formBuilder.group({\n                    type: ['SOURCE', Validators.required],\n                    keyID: []\n                }),\n                paramMetric: [, Validators.required],\n            }),\n            schedulerConfig: this.formBuilder.group({\n                name: [, Validators.required],\n                dataInterval: [, Validators.required],\n                frequency: [, Validators.required],\n                userChoice: [, Validators.required],\n                userID: [[], Validators.required],\n                otherUserEmail: [[]],\n                status: [, Validators.required],\n                reportFormat: [, Validators.required],\n            })\n        });\n    }\n\n    async getConsumptionParameter() {\n        const consumptionParamM = <ConsumptionParameterM>await this.parameterService.getConsumptionParameter(this.orgID);\n\n        this.consumptionParamM = consumptionParamM.consumptionParameter;\n    }\n\n    entityInpChange() {\n        let entityID = this.entityInput.multipleEntityFC.value;\n        this.scheduleBreakupReportFG.get('reportConfig').get('entityID').patchValue(entityID);\n    }\n\n    patchSchedulerConfigInput() {\n        this.scheduleBreakupReportFG.get('schedulerConfig').patchValue(this.schedulerConfigInput.scheduleReportFG.value)\n    }\n\n    getValidFormData() {\n        this.patchSchedulerConfigInput();\n\n        let entityID = this.tscCommonService.removeSelectAllID(this.scheduleBreakupReportFG.get('reportConfig').get('entityID').value);\n        this.scheduleBreakupReportFG.get('reportConfig').get('entityID').patchValue(entityID);\n\n        let userID = this.tscCommonService.removeSelectAllID(this.scheduleBreakupReportFG.get('schedulerConfig').get('userID').value);\n        this.scheduleBreakupReportFG.get('schedulerConfig').get('userID').patchValue(userID);\n\n        let paramsArray = [\n            {\n                name: this.scheduleBreakupReportFG.get('reportConfig').get('paramMetric').value,\n                dsAgg: 'sum',\n                agg: 'sum'\n            }\n        ]\n\n        const reportConfigFG = this.scheduleBreakupReportFG.get('reportConfig').value;\n        const schedulerConfigFG = this.scheduleBreakupReportFG.get('schedulerConfig').value;\n        const { paramMetric, ...reportConfigWithoutParamMetric } = reportConfigFG;\n\n        this.modifiedFG = {\n            reportConfig: {\n                ...reportConfigWithoutParamMetric,\n                params: paramsArray\n            },\n            schedulerConfig: {\n                ...schedulerConfigFG\n            }\n        };\n    }\n\n    scheduleReportSubmit() {\n        this.patchSchedulerConfigInput();\n\n        if (this.schedulerConfigInput.scheduleReportFG.invalid) {\n            this.schedulerConfigInput.scheduleReportFG.markAllAsTouched();\n        }\n\n        if (this.scheduleBreakupReportFG.invalid) {\n            console.log('Invalid form:', this.scheduleBreakupReportFG.value);\n            this.toastrService.openToast(InvalidForm.INVALID_FORM_TITLE, InvalidForm.INVALID_FORM_MESSAGE, ToastrColor.ERROR);\n            return;\n        } else {\n            this.getValidFormData();\n\n            if (this.action == FormAction.CREATE) {\n                this.createScheduleReport();\n            } else if (this.action == FormAction.UPDATE) {\n                this.updateScheduleReport();\n            }\n        }\n    }\n\n    createScheduleReport() {\n        this.scheduleReportController.createScheduleReport(this.orgID, this.modifiedFG).subscribe((res: ResponseM) => {\n\n            this.router.navigate([`schedule-report/page`]);\n\n        }, error => {\n            console.log('error in createScheduleReport -', error);\n        });\n    }\n\n    async getScheduleReportByID(scheduleReportID) {\n        this.scheduleReportI = <ScheduleReportI>await this.scheduleReportService.getScheduleReportByID(this.orgID, scheduleReportID);\n\n        this.patchScheduleReport(this.scheduleReportI);\n    }\n\n    patchScheduleReport(scheduleReportI: ScheduleReportI) {\n        this.scheduleBreakupReportFG.patchValue({\n            reportConfig: scheduleReportI.reportConfig,\n            schedulerConfig: scheduleReportI.schedulerConfig\n        });\n\n        this.entityInput.multipleEntityFC.patchValue(scheduleReportI.reportConfig.entityID);\n        this.scheduleBreakupReportFG.get('reportConfig').get('paramMetric').patchValue(scheduleReportI.reportConfig.paramMetric[0]);\n        this.schedulerConfigInput.scheduleReportFG.patchValue(scheduleReportI.schedulerConfig);\n\n        this.initialObject = {\n            breakupReportConfig: this.scheduleBreakupReportFG.value,\n            schedulerConfig: this.schedulerConfigInput.scheduleReportFG.value\n        };\n\n        this.isValidUpdateForm();\n    }\n\n    isValidUpdateForm() {\n        this.schedulerConfigInput.scheduleReportFG.valueChanges.subscribe(() => {\n            this.checkEquality();\n        });\n\n        this.scheduleBreakupReportFG.valueChanges.subscribe(() => {\n            this.checkEquality();\n        });\n    }\n\n    checkEquality() {\n        const currentValues = {\n            breakupReportConfig: this.scheduleBreakupReportFG.value,\n            schedulerConfig: this.schedulerConfigInput.scheduleReportFG.value\n        };\n        this.isEqual = isEqual(this.initialObject, currentValues);\n    }\n\n    updateScheduleReport() {\n        this.scheduleReportController.updateScheduleReport(this.orgID, this.scheduleReportID, this.modifiedFG).subscribe((res: ResponseM) => {\n\n            this.tscCommonService.back();\n\n        }, error => {\n            console.log('error in updateScheduleReport -', error);\n        })\n    }\n\n    errorHandling = (formGroup: FormGroup, controlPath: string, error: string): boolean => {\n        return formGroup.get(controlPath).hasError(error);\n    }\n\n}\n","<div class=\"card main-card cardOverwrite h100\">\n    <div class=\"headerContainer\">\n        <div class=\"headerLeftContainer\">\n            <div class=\"pageTitle\">{{ pageTitle }}</div>\n            <div class=\"pageSubtitle\"></div>\n        </div>\n    </div>\n\n    <div class=\"card-body\">\n        <form [formGroup]=\"scheduleBreakupReportFG\" (ngSubmit)=\"scheduleReportSubmit()\">\n            <div class=\"row\">\n                <div class=\"col-sm-12\">\n                    <mat-card class=\"border cardOverwrite\">\n                        <div class=\"cardTitle\">\n                            Report configuration\n                        </div>\n                        <div class=\"row mt-2\">\n                            <div formGroupName=\"reportConfig\">\n                                <div formGroupName=\"sourceConsumer\">\n                                    <div class=\"col-sm-6\">\n                                        <div class=\"radioBtnField\">\n                                            <div class=\"radioBtnGroupLabel\"> You want to schedule {{ applicationKeyID == ApplicationKeyID.WATER_KEY_ID ?\n                                                'water' : 'energy'}} breakup report for? * </div>\n                                            <mat-radio-group formControlName=\"type\">\n                                                <div class=\"row my-1\">\n                                                    <div class=\"col-sm-6\">\n                                                        <mat-radio-button class=\"radioBtnLabel\" [value]=\"'SOURCE'\">\n                                                            Source\n                                                        </mat-radio-button>\n                                                    </div>\n                                                    <div class=\"col-sm-6\">\n                                                        <mat-radio-button class=\"radioBtnLabel\" [value]=\"'CONSUMER'\">\n                                                            Consumer\n                                                        </mat-radio-button>\n                                                    </div>\n                                                    <mat-error class=\"textMatError ms-1 mt-1\"\n                                                        *ngIf=\"errorHandling(scheduleBreakupReportFG, 'reportConfig.sourceConsumer.type', 'required')\">\n                                                        {{ FormErrorEnum.REQUIRED }}\n                                                    </mat-error>\n                                                </div>\n                                            </mat-radio-group>\n                                        </div>\n                                    </div>\n                                </div>\n                            </div>\n                        </div>\n\n                        <div class=\"row mt-3\">\n                            <div class=\"col-sm-3\">\n                                <lib-entity #entityInput [dropdownTypeInp]=\"DropdownTypeEnum.MULTIPLE_DROPDOWN\"\n                                    (emitFilter)=\"entityInpChange()\"></lib-entity>\n                            </div>\n                        \n                            <div class=\"col-sm-3\">\n                                <div formGroupName=\"reportConfig\">\n                                    <mat-form-field class=\"matFieldWidth100\" [appearance]=\"MaterialFormFieldAppearance.FORM_FIELD_APPEARANCE\">\n                                        <mat-label>Select consumption parameter</mat-label>\n                                        <mat-select formControlName=\"paramMetric\" required>\n                                            <ng-container\n                                                *ngIf=\"consumptionParamM && consumptionParamM.length > 0 && consumptionParamM[0]['id']; else noConsumptionParamM\">\n                                                <mat-option *ngFor=\"let param of consumptionParamM\" [value]=\"param.paramMetric\">\n                                                    {{ param.label }}\n                                                </mat-option>\n                                            </ng-container>\n\n                                            <ng-template #noConsumptionParamM>\n                                                <mat-option disabled>\n                                                    {{ COMMON_CONSTANT.NO_DATA_FOUND }}\n                                                </mat-option>\n                                            </ng-template>\n                                        </mat-select>\n                                        <mat-error *ngIf=\"errorHandling(scheduleBreakupReportFG, 'reportConfig.paramMetric', 'required')\">\n                                            {{ FormErrorEnum.REQUIRED }}\n                                        </mat-error>\n                                    </mat-form-field>\n                                </div>\n                            </div>\n                        </div>\n                    </mat-card>\n                </div>\n            </div>\n\n            <div class=\"row mt-3\">\n                <div class=\"col-sm-12\">\n                    <lib-configuration #schedulerConfigInput></lib-configuration>\n                </div>\n            </div>\n            \n            <button class=\"d-none\" type=\"submit\" #formSubmitBtn></button>\n\n            <div class=\"row mt-3\">\n                <div class=\"col-sm-12\">\n                    <div class=\"float-end\">\n                        <button class=\"btn btn-sm btn-secondary me-2\" type=\"button\" (click)=\"tscCommonService.back()\">\n                            {{ ButtonLabelEnum.CANCEL_BTN_LABEL }}\n                        </button>\n\n                        <button class=\"btn btn-sm btn-success\" [ngClass]=\"{\n                                            'btn-success' : action == FormAction.CREATE,\n                                            'btn-primary' : action == FormAction.UPDATE,\n                                            'disabled' : action == FormAction.UPDATE && isEqual\n                                        }\" type=\"submit\">{{ action ==\n                            FormAction.CREATE ? 'Schedule' :\n                            ButtonLabelEnum.UPDATE_BTN_LABEL }}\n                        </button>\n                    </div>\n                </div>\n            </div>\n        </form>\n    </div>\n</div>","import { NgModule } from '@angular/core';\nimport { RouterModule, Routes } from '@angular/router';\n\nimport { ScheduleReportBreakupComponent } from './breakup.component';\n\nconst routes: Routes = [\n    {\n        path: '',\n        component: ScheduleReportBreakupComponent\n    }\n];\n\n@NgModule({\n    imports: [RouterModule.forChild(routes)],\n    exports: [RouterModule]\n})\nexport class ScheduleReportBreakupRoutingModule { }\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\n\nimport {\n    FormsModule,\n    ReactiveFormsModule\n} from '@angular/forms';\n\nimport { MatCardModule } from '@angular/material/card';\nimport { MatFormFieldModule } from '@angular/material/form-field';\nimport { MatSelectModule } from '@angular/material/select';\nimport { MatRadioModule } from '@angular/material/radio';\n\nimport { EntityModule } from '../../dropdown/entity/entity.module';\n\nimport { ScheduleReportConfigurationModule } from '../_shared/configuration/configuration.module';\n\nimport { ScheduleReportBreakupRoutingModule } from './breakup-routing.module';\nimport { ScheduleReportBreakupComponent } from './breakup.component';\n\n\n@NgModule({\n    declarations: [\n        ScheduleReportBreakupComponent\n    ],\n    imports: [\n        CommonModule,\n        ScheduleReportBreakupRoutingModule,\n\n        EntityModule,\n        ScheduleReportConfigurationModule,\n\n        FormsModule,\n        ReactiveFormsModule,\n\n        MatCardModule,\n        MatFormFieldModule,\n        MatSelectModule,\n        MatRadioModule\n    ]\n})\nexport class ScheduleReportBreakupModule { }\n","import { Component, OnInit, ViewChild } from '@angular/core';\nimport { FormBuilder, FormGroup, Validators } from '@angular/forms';\nimport { ActivatedRoute, Router } from '@angular/router';\n\nimport { isEqual } from 'lodash';\n\nimport { ScheduleReportTypeEnum } from '../../../enum/schedule-report.enum';\n\nimport { ScheduleReport, ScheduleReportI } from '../../../model/schedule-report.model';\n\nimport { ScheduleReportController } from '../../../controller/schedule-report.controller';\n\nimport { ScheduleReportService } from '../../../service/schedule-report.service';\n\nimport { ScheduleReportConfigurationComponent } from '../_shared/configuration/configuration.component';\n\n// tsc-library\nimport { ResponseM, MaterialFormFieldAppearance, InvalidForm, ButtonLabelEnum, FormAction, FormErrorEnum, TSCCommonService, COMMON_CONSTANT, MATERIAL_CONSTANT, ButtonTooltipEnum } from '@library/tsc-common';\nimport { ToastrColor, ToastrService } from '@library/toastr-service';\nimport { StorageService } from '@library/storage-service';\n// /tsc-library/\n\n@Component({\n    selector: 'lib-cgwa',\n    templateUrl: './cgwa.component.html',\n    styles: [\n    ]\n})\nexport class ScheduleReportCgwaComponent implements OnInit {\n\n    COMMON_CONSTANT = COMMON_CONSTANT;\n    MATERIAL_CONSTANT = MATERIAL_CONSTANT;\n\n    FormAction = FormAction;\n    FormErrorEnum = FormErrorEnum;\n    ButtonLabelEnum = ButtonLabelEnum;\n    ButtonTooltipEnum = ButtonTooltipEnum;\n    MaterialFormFieldAppearance = MaterialFormFieldAppearance;\n\n    orgID: any;\n\n    scheduleCgwaReportFG: FormGroup;\n    modifiedFG: any;\n    scheduleReportID: any;\n\n    action: string;\n    pageTitle: string;\n    isEqual: boolean = true;\n    initialObject: any;\n\n    scheduleReportI = new ScheduleReport();\n\n    @ViewChild('schedulerConfigInput') schedulerConfigInput: ScheduleReportConfigurationComponent;\n\n    constructor(\n        private activatedRoute: ActivatedRoute,\n        private router: Router,\n        private formBuilder: FormBuilder,\n        private scheduleReportController: ScheduleReportController,\n        private scheduleReportService: ScheduleReportService,\n\n        // tsc-library\n        private storageService: StorageService,\n        public tscCommonService: TSCCommonService,\n        private toastrService: ToastrService,\n        // /tsc-library/\n    ) { }\n\n    ngOnInit(): void {\n        this.orgID = this.storageService.getStorage('currentOrgID');\n\n        this.scheduleCgwaReportFGInit();\n\n        this.activatedRoute.data.subscribe(data => {\n            this.action = data.action;\n            this.setPageTitle();\n        });\n\n        this.activatedRoute.params.subscribe(params => {\n            if (this.action == FormAction.UPDATE) {\n                this.scheduleReportID = params.scheduleReportID;\n                this.getScheduleReportByID(this.scheduleReportID);\n            }\n        });\n\n    }\n\n    setPageTitle() {\n        if (this.action == FormAction.CREATE) {\n            this.pageTitle = `Schedule CGWA Report`;\n        } else if (this.action == FormAction.UPDATE) {\n            this.pageTitle = `Update Scheduled CGWA Report`;\n        }\n    }\n\n    scheduleCgwaReportFGInit() {\n        this.scheduleCgwaReportFG = this.formBuilder.group({\n            reportConfig: this.formBuilder.group({\n                reportType: [ScheduleReportTypeEnum.CGWA_REPORT, Validators.required],\n                deviceID: [[]],\n                entityType: [],\n                entityID: [[]],\n                sourceConsumer: this.formBuilder.group({\n                    type: ['SOURCE', Validators.required],\n                    keyID: ['BOREWELL', Validators.required]\n                }),\n                paramMetric: ['gwFlowTotalizer', Validators.required],\n            }),\n            schedulerConfig: this.formBuilder.group({\n                name: [, Validators.required],\n                dataInterval: [, Validators.required],\n                frequency: [, Validators.required],\n                userChoice: [, Validators.required],\n                userID: [[], Validators.required],\n                otherUserEmail: [[]],\n                status: [, Validators.required],\n                reportFormat: [, Validators.required],\n            })\n        });\n    }\n\n    patchSchedulerConfigInput() {\n        this.scheduleCgwaReportFG.get('schedulerConfig').patchValue(this.schedulerConfigInput.scheduleReportFG.value)\n    }\n\n    getValidFormData() {\n        this.patchSchedulerConfigInput();\n\n        let userID = this.tscCommonService.removeSelectAllID(this.scheduleCgwaReportFG.get('schedulerConfig').get('userID').value);\n        this.scheduleCgwaReportFG.get('schedulerConfig').get('userID').patchValue(userID);\n\n        let paramsArray = [\n            {\n                name: this.scheduleCgwaReportFG.get('reportConfig').get('paramMetric').value,\n                dsAgg: 'sum',\n                agg: 'sum'\n            }\n        ]\n\n        const reportConfigFG = this.scheduleCgwaReportFG.get('reportConfig').value;\n        const schedulerConfigFG = this.scheduleCgwaReportFG.get('schedulerConfig').value;\n        const { paramMetric, ...reportConfigWithoutParamMetric } = reportConfigFG;\n\n        this.modifiedFG = {\n            reportConfig: {\n                ...reportConfigWithoutParamMetric,\n                params: paramsArray\n            },\n            schedulerConfig: {\n                ...schedulerConfigFG\n            }\n        };\n    }\n\n    scheduleReportSubmit() {\n        this.patchSchedulerConfigInput();\n\n        if (this.schedulerConfigInput.scheduleReportFG.invalid) {\n            this.schedulerConfigInput.scheduleReportFG.markAllAsTouched();\n        }\n\n        if (this.scheduleCgwaReportFG.invalid) {\n            console.log('Invalid form:', this.scheduleCgwaReportFG.value);\n            this.toastrService.openToast(InvalidForm.INVALID_FORM_TITLE, InvalidForm.INVALID_FORM_MESSAGE, ToastrColor.ERROR);\n            return;\n        } else {\n            this.getValidFormData();\n\n            if (this.action == FormAction.CREATE) {\n                this.createScheduleReport();\n            } else if (this.action == FormAction.UPDATE) {\n                this.updateScheduleReport();\n            }\n        }\n    }\n\n    createScheduleReport() {\n        this.scheduleReportController.createScheduleReport(this.orgID, this.modifiedFG).subscribe((res: ResponseM) => {\n\n            this.router.navigate([`schedule-report/page`]);\n\n        }, error => {\n            console.log('error in createScheduleReport -', error);\n        });\n    }\n\n    async getScheduleReportByID(scheduleReportID) {\n        this.scheduleReportI = <ScheduleReportI>await this.scheduleReportService.getScheduleReportByID(this.orgID, scheduleReportID);\n\n        this.patchScheduleReport(this.scheduleReportI);\n    }\n\n    patchScheduleReport(scheduleReportI: ScheduleReportI) {\n        this.scheduleCgwaReportFG.patchValue({\n            reportConfig: scheduleReportI.reportConfig,\n            schedulerConfig: scheduleReportI.schedulerConfig\n        });\n\n        this.schedulerConfigInput.scheduleReportFG.patchValue(scheduleReportI.schedulerConfig);\n\n        this.initialObject = {\n            cgwaReportConfig: this.scheduleCgwaReportFG.value,\n            schedulerConfig: this.schedulerConfigInput.scheduleReportFG.value\n        };\n\n        this.isValidUpdateForm();\n    }\n\n    isValidUpdateForm() {\n        this.schedulerConfigInput.scheduleReportFG.valueChanges.subscribe(() => {\n            this.checkEquality();\n        });\n\n        this.scheduleCgwaReportFG.valueChanges.subscribe(() => {\n            this.checkEquality();\n        });\n    }\n\n    checkEquality() {\n        const currentValues = {\n            cgwaReportConfig: this.scheduleCgwaReportFG.value,\n            schedulerConfig: this.schedulerConfigInput.scheduleReportFG.value\n        };\n        this.isEqual = isEqual(this.initialObject, currentValues);\n    }\n\n    updateScheduleReport() {\n        this.scheduleReportController.updateScheduleReport(this.orgID, this.scheduleReportID, this.modifiedFG).subscribe((res: ResponseM) => {\n\n            this.tscCommonService.back();\n\n        }, error => {\n            console.log('error in updateScheduleReport -', error);\n        })\n    }\n\n    errorHandling = (formGroup: FormGroup, controlPath: string, error: string): boolean => {\n        return formGroup.get(controlPath).hasError(error);\n    }\n\n}\n","<div class=\"card main-card cardOverwrite h100\">\n    <div class=\"headerContainer\">\n        <div class=\"headerLeftContainer\">\n            <div class=\"pageTitle\">{{ pageTitle }}</div>\n            <div class=\"pageSubtitle\"></div>\n        </div>\n    </div>\n\n    <div class=\"card-body\">\n        <form [formGroup]=\"scheduleCgwaReportFG\" (ngSubmit)=\"scheduleReportSubmit()\">\n            <div class=\"row\">\n                <div class=\"col-sm-12\">\n                    <mat-card class=\"border cardOverwrite\">\n                        <div class=\"cardTitle\">\n                            Report configuration\n                        </div>\n\n                        <div class=\"row mt-2\">\n                            <div class=\"col-sm-6\">\n                                <div class=\"row\">\n                                    <div class=\"col-sm-4\">\n                                        Source type\n                                    </div>\n                                    <div class=\"col-sm-6 fw-bold\">\n                                        Borewell\n                                    </div>\n                                </div>\n                            </div>\n                        </div>\n\n                        <div class=\"row mt-2\">\n                            <div class=\"col-sm-6\">\n                                <div class=\"row\">\n                                    <div class=\"col-sm-4\">\n                                        Consumption parameter\n                                    </div>\n                                    <div class=\"col-sm-6 fw-bold\">\n                                        Water consumption\n                                    </div>\n                                </div>\n                            </div>\n                        </div>\n                    </mat-card>\n                </div>\n            </div>\n\n            <div class=\"row mt-3\">\n                <div class=\"col-sm-12\">\n                    <lib-configuration #schedulerConfigInput></lib-configuration>\n                </div>\n            </div>\n\n            <button class=\"d-none\" type=\"submit\" #formSubmitBtn></button>\n\n            <div class=\"row mt-3\">\n                <div class=\"col-sm-12\">\n                    <div class=\"float-end\">\n                        <button class=\"btn btn-sm btn-secondary me-2\" type=\"button\" (click)=\"tscCommonService.back()\">\n                            {{ ButtonLabelEnum.CANCEL_BTN_LABEL }}\n                        </button>\n\n                        <button class=\"btn btn-sm btn-success\" [ngClass]=\"{\n                                            'btn-success' : action == FormAction.CREATE,\n                                            'btn-primary' : action == FormAction.UPDATE,\n                                            'disabled' : action == FormAction.UPDATE && isEqual\n                                        }\" type=\"submit\">{{ action ==\n                            FormAction.CREATE ? 'Schedule' :\n                            ButtonLabelEnum.UPDATE_BTN_LABEL }}\n                        </button>\n                    </div>\n                </div>\n            </div>\n        </form>\n    </div>\n</div>","import { NgModule } from '@angular/core';\nimport { RouterModule, Routes } from '@angular/router';\n\nimport { ScheduleReportCgwaComponent } from './cgwa.component';\n\nconst routes: Routes = [\n    {\n        path: '',\n        component: ScheduleReportCgwaComponent\n    }\n];\n\n@NgModule({\n    imports: [RouterModule.forChild(routes)],\n    exports: [RouterModule]\n})\nexport class ScheduleReportCgwaRoutingModule { }\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\n\nimport {\n    FormsModule,\n    ReactiveFormsModule\n} from '@angular/forms';\n\nimport { MatCardModule } from '@angular/material/card';\nimport { MatFormFieldModule } from '@angular/material/form-field';\nimport { MatSelectModule } from '@angular/material/select';\n\nimport { ScheduleReportConfigurationModule } from '../_shared/configuration/configuration.module';\n\nimport { ScheduleReportCgwaRoutingModule } from './cgwa-routing.module';\nimport { ScheduleReportCgwaComponent } from './cgwa.component';\n\n\n@NgModule({\n    declarations: [\n        ScheduleReportCgwaComponent\n    ],\n    imports: [\n        CommonModule,\n        ScheduleReportCgwaRoutingModule,\n\n        ScheduleReportConfigurationModule,\n\n        FormsModule,\n        ReactiveFormsModule,\n\n        MatCardModule,\n        MatFormFieldModule,\n        MatSelectModule\n    ]\n})\nexport class ScheduleReportCgwaModule { }\n","import { Component, OnInit, ViewChild } from '@angular/core';\nimport { FormBuilder, FormGroup, Validators } from '@angular/forms';\nimport { ActivatedRoute, Router } from '@angular/router';\n\nimport { isEqual } from 'lodash';\n\nimport { ScheduleReportTypeEnum } from '../../../enum/schedule-report.enum';\n\nimport { ConsumptionParameterM } from '../../../model/parameter.model';\nimport { ScheduleReport, ScheduleReportI } from '../../../model/schedule-report.model';\n\nimport { ScheduleReportController } from '../../../controller/schedule-report.controller';\n\nimport { SourceService } from '../../../service/source.service';\nimport { ParameterService } from '../../../service/parameter.service';\nimport { ScheduleReportService } from '../../../service/schedule-report.service';\n\nimport { ScheduleReportConfigurationComponent } from '../_shared/configuration/configuration.component';\n\n// tsc-library\nimport { ResponseM, MaterialFormFieldAppearance, InvalidForm, ButtonLabelEnum, FormAction, FormErrorEnum, TSCCommonService, COMMON_CONSTANT, MATERIAL_CONSTANT, ButtonTooltipEnum, Static, StaticI } from '@library/tsc-common';\nimport { ToastrColor, ToastrService } from '@library/toastr-service';\nimport { StorageService } from '@library/storage-service';\nimport { ApplicationKeyID } from '@library/application-service';\n// /tsc-library/\n\n@Component({\n    selector: 'lib-consumption',\n    templateUrl: './consumption.component.html',\n    styles: [\n    ]\n})\nexport class ScheduleReportConsumptionComponent implements OnInit {\n\n    COMMON_CONSTANT = COMMON_CONSTANT;\n    MATERIAL_CONSTANT = MATERIAL_CONSTANT;\n\n    FormAction = FormAction;\n    FormErrorEnum = FormErrorEnum;\n    ButtonLabelEnum = ButtonLabelEnum;\n    ButtonTooltipEnum = ButtonTooltipEnum;\n    MaterialFormFieldAppearance = MaterialFormFieldAppearance;\n    ApplicationKeyID = ApplicationKeyID;\n\n    orgID: any;\n    applicationKeyID: any;\n    consumptionParamM: any;\n    sourceConsumerType = [new Static()];\n\n    scheduleConsumptionReportFG: FormGroup;\n    modifiedFG: any;\n    scheduleReportID: any;\n\n    action: string;\n    pageTitle: string;\n    isEqual: boolean = true;\n    initialObject: any;\n\n    scheduleReportI = new ScheduleReport();\n\n    @ViewChild('schedulerConfigInput') schedulerConfigInput: ScheduleReportConfigurationComponent;\n\n    constructor(\n        private activatedRoute: ActivatedRoute,\n        private router: Router,\n        private formBuilder: FormBuilder,\n        private scheduleReportController: ScheduleReportController,\n        private sourceService: SourceService,\n        private parameterService: ParameterService,\n        private scheduleReportService: ScheduleReportService,\n\n        // tsc-library\n        private storageService: StorageService,\n        public tscCommonService: TSCCommonService,\n        private toastrService: ToastrService,\n        // /tsc-library/\n    ) { }\n\n    ngOnInit(): void {\n        this.orgID = this.storageService.getStorage('currentOrgID');\n        this.applicationKeyID = this.storageService.getStorage('applicationKeyID');\n\n        this.scheduleConsumptionReportFGInit();\n        this.getConsumptionParameter();\n\n        this.activatedRoute.data.subscribe(data => {\n            this.action = data.action;\n            this.setPageTitle();\n        });\n\n        this.activatedRoute.params.subscribe(params => {\n            if (this.action == FormAction.UPDATE) {\n                this.scheduleReportID = params.scheduleReportID;\n                this.getScheduleReportByID(this.scheduleReportID);\n            }\n        });\n\n        if (this.scheduleConsumptionReportFG.get('reportConfig').get('sourceConsumer.type').value == 'SOURCE') {\n            this.getSourceConsumerType('source');\n        } else {\n            this.getSourceConsumerType('load');\n        }\n    }\n\n    setPageTitle() {\n        const applicationName = this.applicationKeyID == ApplicationKeyID.WATER_KEY_ID ? 'Water' : 'Energy';\n\n        if (this.action == FormAction.CREATE) {\n            this.pageTitle = `Schedule ${applicationName} Consumption Report`;\n        } else if (this.action == FormAction.UPDATE) {\n            this.pageTitle = `Update Scheduled ${applicationName} Consumption Report`;\n        }\n    }\n\n    scheduleConsumptionReportFGInit() {\n        this.scheduleConsumptionReportFG = this.formBuilder.group({\n            reportConfig: this.formBuilder.group({\n                reportType: [ScheduleReportTypeEnum.CONSUMPTION_REPORT, Validators.required],\n                deviceID: [[]],\n                entityType: [],\n                entityID: [[]],\n                sourceConsumer: this.formBuilder.group({\n                    type: ['SOURCE', Validators.required],\n                    keyID: [, Validators.required]\n                }),\n                paramMetric: [, Validators.required],\n            }),\n            schedulerConfig: this.formBuilder.group({\n                name: [, Validators.required],\n                dataInterval: [, Validators.required],\n                frequency: [, Validators.required],\n                userChoice: [, Validators.required],\n                userID: [[], Validators.required],\n                otherUserEmail: [[]],\n                status: [, Validators.required],\n                reportFormat: [, Validators.required],\n            })\n        });\n\n        this.scheduleConsumptionReportFG.get('reportConfig').get('sourceConsumer.type').valueChanges.subscribe((value) => {\n            if (value == 'SOURCE') {\n                this.getSourceConsumerType('source');\n            } else if (value == 'CONSUMER') {\n                this.getSourceConsumerType('load');\n            }\n        });\n    }\n\n    async getSourceConsumerType(sourceConsumerType) {\n        const requestData = {\n            type: sourceConsumerType\n        };\n\n        this.sourceConsumerType = <StaticI[]>await this.sourceService.getSourceConsumerType(this.orgID, requestData);\n    }\n\n    async getConsumptionParameter() {\n        const consumptionParamM = <ConsumptionParameterM>await this.parameterService.getConsumptionParameter(this.orgID);\n\n        this.consumptionParamM = consumptionParamM.consumptionParameter;\n    }\n\n    patchSchedulerConfigInput() {\n        this.scheduleConsumptionReportFG.get('schedulerConfig').patchValue(this.schedulerConfigInput.scheduleReportFG.value)\n    }\n\n    getValidFormData() {\n        this.patchSchedulerConfigInput();\n\n        let userID = this.tscCommonService.removeSelectAllID(this.scheduleConsumptionReportFG.get('schedulerConfig').get('userID').value);\n        this.scheduleConsumptionReportFG.get('schedulerConfig').get('userID').patchValue(userID);\n\n        let paramsArray = [\n            {\n                name: this.scheduleConsumptionReportFG.get('reportConfig').get('paramMetric').value,\n                dsAgg: 'sum',\n                agg: 'sum'\n            }\n        ]\n\n        const reportConfigFG = this.scheduleConsumptionReportFG.get('reportConfig').value;\n        const schedulerConfigFG = this.scheduleConsumptionReportFG.get('schedulerConfig').value;\n        const { paramMetric, ...reportConfigWithoutParamMetric } = reportConfigFG;\n\n        this.modifiedFG = {\n            reportConfig: {\n                ...reportConfigWithoutParamMetric,\n                params: paramsArray\n            },\n            schedulerConfig: {\n                ...schedulerConfigFG\n            }\n        };\n    }\n\n    scheduleReportSubmit() {\n        this.patchSchedulerConfigInput();\n\n        if (this.schedulerConfigInput.scheduleReportFG.invalid) {\n            this.schedulerConfigInput.scheduleReportFG.markAllAsTouched();\n        }\n\n        if (this.scheduleConsumptionReportFG.invalid) {\n            console.log('Invalid form:', this.scheduleConsumptionReportFG.value);\n            this.toastrService.openToast(InvalidForm.INVALID_FORM_TITLE, InvalidForm.INVALID_FORM_MESSAGE, ToastrColor.ERROR);\n            return;\n        } else {\n            this.getValidFormData();\n\n            if (this.action == FormAction.CREATE) {\n                this.createScheduleReport();\n            } else if (this.action == FormAction.UPDATE) {\n                this.updateScheduleReport();\n            }\n        }\n    }\n\n    createScheduleReport() {\n        this.scheduleReportController.createScheduleReport(this.orgID, this.modifiedFG).subscribe((res: ResponseM) => {\n\n            this.router.navigate([`schedule-report/page`]);\n\n        }, error => {\n            console.log('error in createScheduleReport -', error);\n        });\n    }\n\n    async getScheduleReportByID(scheduleReportID) {\n        this.scheduleReportI = <ScheduleReportI>await this.scheduleReportService.getScheduleReportByID(this.orgID, scheduleReportID);\n\n        this.patchScheduleReport(this.scheduleReportI);\n    }\n\n    patchScheduleReport(scheduleReportI: ScheduleReportI) {\n\n        this.scheduleConsumptionReportFG.patchValue({\n            reportConfig: scheduleReportI.reportConfig,\n            schedulerConfig: scheduleReportI.schedulerConfig\n        });\n\n        this.scheduleConsumptionReportFG.get('reportConfig').get('paramMetric').patchValue(scheduleReportI.reportConfig.paramMetric[0]);\n        this.schedulerConfigInput.scheduleReportFG.patchValue(scheduleReportI.schedulerConfig);\n\n        this.initialObject = {\n            consumptionReportConfig: this.scheduleConsumptionReportFG.value,\n            schedulerConfig: this.schedulerConfigInput.scheduleReportFG.value\n        };\n\n        this.isValidUpdateForm();\n    }\n\n    isValidUpdateForm() {\n        this.schedulerConfigInput.scheduleReportFG.valueChanges.subscribe(() => {\n            this.checkEquality();\n        });\n\n        this.scheduleConsumptionReportFG.valueChanges.subscribe(() => {\n            this.checkEquality();\n        });\n    }\n\n    checkEquality() {\n        const currentValues = {\n            consumptionReportConfig: this.scheduleConsumptionReportFG.value,\n            schedulerConfig: this.schedulerConfigInput.scheduleReportFG.value\n        };\n        this.isEqual = isEqual(this.initialObject, currentValues);\n    }\n\n    updateScheduleReport() {\n        this.scheduleReportController.updateScheduleReport(this.orgID, this.scheduleReportID, this.modifiedFG).subscribe((res: ResponseM) => {\n\n            this.tscCommonService.back();\n\n        }, error => {\n            console.log('error in updateScheduleReport -', error);\n        })\n    }\n\n    errorHandling = (formGroup: FormGroup, controlPath: string, error: string): boolean => {\n        return formGroup.get(controlPath).hasError(error);\n    }\n\n}\n","<div class=\"card main-card cardOverwrite h100\">\n    <div class=\"headerContainer\">\n        <div class=\"headerLeftContainer\">\n            <div class=\"pageTitle\">{{ pageTitle }}</div>\n            <div class=\"pageSubtitle\"></div>\n        </div>\n    </div>\n\n    <div class=\"card-body\">\n        <form [formGroup]=\"scheduleConsumptionReportFG\" (ngSubmit)=\"scheduleReportSubmit()\">\n            <div class=\"row\">\n                <div class=\"col-sm-12\">\n                    <mat-card class=\"border cardOverwrite\">\n                        <div class=\"cardTitle\">\n                            Report configuration\n                        </div>\n                        <div class=\"row mt-2\">\n                            <div formGroupName=\"reportConfig\">\n                                <div formGroupName=\"sourceConsumer\">\n                                    <div class=\"col-sm-6\">\n                                        <div class=\"radioBtnField\">\n                                            <div class=\"radioBtnGroupLabel\"> You want to schedule {{ applicationKeyID == ApplicationKeyID.WATER_KEY_ID ?\n                                                'water' : 'energy'}} consumption report for? * </div>\n                                            <mat-radio-group formControlName=\"type\">\n                                                <div class=\"row my-1\">\n                                                    <div class=\"col-sm-6\">\n                                                        <mat-radio-button class=\"radioBtnLabel\" [value]=\"'SOURCE'\">\n                                                            Source\n                                                        </mat-radio-button>\n                                                    </div>\n                                                    <div class=\"col-sm-6\">\n                                                        <mat-radio-button class=\"radioBtnLabel\" [value]=\"'CONSUMER'\">\n                                                            Consumer\n                                                        </mat-radio-button>\n                                                    </div>\n                                                    <mat-error class=\"textMatError ms-1 mt-1\"\n                                                        *ngIf=\"errorHandling(scheduleConsumptionReportFG, 'reportConfig.sourceConsumer.type', 'required')\">\n                                                        {{ FormErrorEnum.REQUIRED }}\n                                                    </mat-error>\n                                                </div>\n                                            </mat-radio-group>\n                                        </div>\n                                    </div>\n                                </div>\n                            </div>\n                        </div>\n\n                        <div class=\"row mt-3\">\n                            <div class=\"col-sm-3\">\n                                <div formGroupName=\"reportConfig\">\n                                    <div formGroupName=\"sourceConsumer\">\n                                        <mat-form-field class=\"matFieldWidth100\" [appearance]=\"MaterialFormFieldAppearance.FORM_FIELD_APPEARANCE\">\n                                            <mat-label> Select {{\n                                                scheduleConsumptionReportFG.get('reportConfig').get('sourceConsumer.type').value\n                                                == 'SOURCE' ? 'source' :\n                                                'consumer' }} type</mat-label>\n\n                                            <mat-select formControlName=\"keyID\" required>\n                                                <ng-container\n                                                    *ngIf=\"sourceConsumerType && sourceConsumerType.length > 0 && sourceConsumerType[0]['id']; else noSourceConsumerType\">\n                                                    <mat-option *ngFor=\"let type of sourceConsumerType\" [value]=\"type.keyID\">\n                                                        {{ type.name }}\n                                                    </mat-option>\n                                                </ng-container>\n\n                                                <ng-template #noSourceConsumerType>\n                                                    <mat-option disabled>\n                                                        {{ COMMON_CONSTANT.NO_DATA_FOUND }}\n                                                    </mat-option>\n                                                </ng-template>\n                                            </mat-select>\n\n                                            <mat-error\n                                                *ngIf=\"errorHandling(scheduleConsumptionReportFG, 'reportConfig.sourceConsumer.keyID', 'required')\">\n                                                {{ FormErrorEnum.REQUIRED }}\n                                            </mat-error>\n                                        </mat-form-field>\n                                    </div>\n                                </div>\n                            </div>\n\n                            <div class=\"col-sm-3\">\n                                <div formGroupName=\"reportConfig\">\n                                    <mat-form-field class=\"matFieldWidth100\"\n                                        [appearance]=\"MaterialFormFieldAppearance.FORM_FIELD_APPEARANCE\">\n                                        <mat-label>Select consumption parameter</mat-label>\n                                        <mat-select formControlName=\"paramMetric\" required>\n                                            <ng-container\n                                                *ngIf=\"consumptionParamM && consumptionParamM.length > 0 && consumptionParamM[0]['id']; else noConsumptionParamM\">\n                                                <mat-option *ngFor=\"let param of consumptionParamM\"\n                                                    [value]=\"param.paramMetric\">\n                                                    {{ param.label }}\n                                                </mat-option>\n                                            </ng-container>\n\n                                            <ng-template #noConsumptionParamM>\n                                                <mat-option disabled>\n                                                    {{ COMMON_CONSTANT.NO_DATA_FOUND }}\n                                                </mat-option>\n                                            </ng-template>\n                                        </mat-select>\n                                        <mat-error\n                                            *ngIf=\"errorHandling(scheduleConsumptionReportFG, 'reportConfig.paramMetric', 'required')\">\n                                            {{ FormErrorEnum.REQUIRED }}\n                                        </mat-error>\n                                    </mat-form-field>\n                                </div>\n                            </div>\n                        </div>\n                    </mat-card>\n                </div>\n            </div>\n\n            <div class=\"row mt-3\">\n                <div class=\"col-sm-12\">\n                    <lib-configuration #schedulerConfigInput></lib-configuration>\n                </div>\n            </div>\n\n            <button class=\"d-none\" type=\"submit\" #formSubmitBtn></button>\n\n            <div class=\"row mt-3\">\n                <div class=\"col-sm-12\">\n                    <div class=\"float-end\">\n                        <button class=\"btn btn-sm btn-secondary me-2\" type=\"button\" (click)=\"tscCommonService.back()\">\n                            {{ ButtonLabelEnum.CANCEL_BTN_LABEL }}\n                        </button>\n\n                        <button class=\"btn btn-sm btn-success\" [ngClass]=\"{\n                                            'btn-success' : action == FormAction.CREATE,\n                                            'btn-primary' : action == FormAction.UPDATE,\n                                            'disabled' : action == FormAction.UPDATE && isEqual\n                                        }\" type=\"submit\">{{ action ==\n                            FormAction.CREATE ? 'Schedule' :\n                            ButtonLabelEnum.UPDATE_BTN_LABEL }}\n                        </button>\n                    </div>\n                </div>\n            </div>\n        </form>\n    </div>\n</div>","import { NgModule } from '@angular/core';\nimport { RouterModule, Routes } from '@angular/router';\n\nimport { ScheduleReportConsumptionComponent } from './consumption.component';\n\nconst routes: Routes = [\n    {\n        path: '',\n        component: ScheduleReportConsumptionComponent\n    }\n];\n\n@NgModule({\n    imports: [RouterModule.forChild(routes)],\n    exports: [RouterModule]\n})\nexport class ScheduleReportConsumptionRoutingModule { }\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\n\nimport {\n    FormsModule,\n    ReactiveFormsModule\n} from '@angular/forms';\n\nimport { MatCardModule } from '@angular/material/card';\nimport { MatFormFieldModule } from '@angular/material/form-field';\nimport { MatSelectModule } from '@angular/material/select';\nimport { MatRadioModule } from '@angular/material/radio';\n\nimport { ScheduleReportConfigurationModule } from '../_shared/configuration/configuration.module';\n\nimport { ScheduleReportConsumptionRoutingModule } from './consumption-routing.module';\nimport { ScheduleReportConsumptionComponent } from './consumption.component';\n\n\n@NgModule({\n    declarations: [\n        ScheduleReportConsumptionComponent\n    ],\n    imports: [\n        CommonModule,\n        ScheduleReportConsumptionRoutingModule,\n\n        ScheduleReportConfigurationModule,\n\n        FormsModule,\n        ReactiveFormsModule,\n\n        MatCardModule,\n        MatFormFieldModule,\n        MatSelectModule,\n        MatRadioModule\n    ]\n})\nexport class ScheduleReportConsumptionModule { }\n","import { Component, OnInit, ViewChild } from '@angular/core';\nimport { FormBuilder, FormGroup, Validators } from '@angular/forms';\nimport { ActivatedRoute, Router } from '@angular/router';\n\nimport { isEqual } from 'lodash';\n\nimport { ScheduleReportTypeEnum } from '../../../enum/schedule-report.enum';\n\nimport { ConsumptionParameterM } from '../../../model/parameter.model';\nimport { ScheduleReport, ScheduleReportI } from '../../../model/schedule-report.model';\n\nimport { ScheduleReportController } from '../../../controller/schedule-report.controller';\n\nimport { ParameterService } from '../../../service/parameter.service';\nimport { ScheduleReportService } from '../../../service/schedule-report.service';\n\nimport { ScheduleReportConfigurationComponent } from '../_shared/configuration/configuration.component';\n\n// tsc-library\nimport { ResponseM, MaterialFormFieldAppearance, InvalidForm, ButtonLabelEnum, FormAction, FormErrorEnum, TSCCommonService, COMMON_CONSTANT, MATERIAL_CONSTANT, ButtonTooltipEnum } from '@library/tsc-common';\nimport { ToastrColor, ToastrService } from '@library/toastr-service';\nimport { StorageService } from '@library/storage-service';\nimport { ApplicationKeyID } from '@library/application-service';\n// /tsc-library/\n\n@Component({\n    selector: 'lib-sourcing',\n    templateUrl: './sourcing.component.html',\n    styles: [\n    ]\n})\nexport class ScheduleReportSourcingComponent implements OnInit {\n\n    COMMON_CONSTANT = COMMON_CONSTANT;\n    MATERIAL_CONSTANT = MATERIAL_CONSTANT;\n\n    FormAction = FormAction;\n    FormErrorEnum = FormErrorEnum;\n    ButtonLabelEnum = ButtonLabelEnum;\n    ButtonTooltipEnum = ButtonTooltipEnum;\n    MaterialFormFieldAppearance = MaterialFormFieldAppearance;\n\n    orgID: any;\n    applicationKeyID: any;\n    consumptionParamM: any;\n\n    scheduleSourcingReportFG: FormGroup;\n    modifiedFG: any;\n    scheduleReportID: any;\n\n    allParameterID: any[] = [];\n    totalParameterCount: number = 0;\n\n    action: string;\n    pageTitle: string;\n    isEqual: boolean = true;\n    initialObject: any;\n\n    scheduleReportI = new ScheduleReport();\n\n    @ViewChild('schedulerConfigInput') schedulerConfigInput: ScheduleReportConfigurationComponent;\n\n    constructor(\n        private activatedRoute: ActivatedRoute,\n        private router: Router,\n        private formBuilder: FormBuilder,\n        private scheduleReportController: ScheduleReportController,\n        private parameterService: ParameterService,\n        private scheduleReportService: ScheduleReportService,\n\n        // tsc-library\n        private storageService: StorageService,\n        public tscCommonService: TSCCommonService,\n        private toastrService: ToastrService,\n        // /tsc-library/\n    ) { }\n\n    ngOnInit(): void {\n        this.orgID = this.storageService.getStorage('currentOrgID');\n        this.applicationKeyID = this.storageService.getStorage('applicationKeyID');\n\n        this.scheduleSourcingReportFGInit();\n        this.getConsumptionParameter();\n\n        this.activatedRoute.data.subscribe(data => {\n            this.action = data.action;\n            this.setPageTitle();\n        });\n\n        this.activatedRoute.params.subscribe(params => {\n            if (this.action == FormAction.UPDATE) {\n                this.scheduleReportID = params.scheduleReportID;\n\n                this.getScheduleReportByID(this.scheduleReportID);\n            }\n        });\n    }\n\n    setPageTitle() {\n        const applicationName = this.applicationKeyID == ApplicationKeyID.WATER_KEY_ID ? 'Water' : 'Energy';\n\n        if (this.action == FormAction.CREATE) {\n            this.pageTitle = `Schedule ${applicationName} Sourcing Report`;\n        } else if (this.action == FormAction.UPDATE) {\n            this.pageTitle = `Update Scheduled ${applicationName} Sourcing  Report`;\n        }\n    }\n\n    scheduleSourcingReportFGInit() {\n        this.scheduleSourcingReportFG = this.formBuilder.group({\n            reportConfig: this.formBuilder.group({\n                reportType: [ScheduleReportTypeEnum.SOURCING_REPORT, Validators.required],\n                deviceID: [[]],\n                entityType: [],\n                entityID: [[]],\n                sourceConsumer: this.formBuilder.group({\n                    type: ['SOURCE'],\n                    keyID: []\n                }),\n                paramMetric: [[], Validators.required],\n            }),\n            schedulerConfig: this.formBuilder.group({\n                name: [, Validators.required],\n                dataInterval: [, Validators.required],\n                frequency: [, Validators.required],\n                userChoice: [, Validators.required],\n                userID: [[], Validators.required],\n                otherUserEmail: [[]],\n                status: [, Validators.required],\n                reportFormat: [, Validators.required],\n            })\n        });\n    }\n\n    async getConsumptionParameter() {\n        const consumptionParamM = <ConsumptionParameterM>await this.parameterService.getConsumptionParameter(this.orgID);\n        this.consumptionParamM = consumptionParamM.consumptionParameter;\n\n        this.totalParameterCount = this.consumptionParamM.length;\n        this.consumptionParamM.forEach(parameter => this.allParameterID.push(parameter['paramMetric']));\n    }\n\n    selectAllParameters() {\n        if (!this.scheduleSourcingReportFG.get('reportConfig').get('paramMetric').value.includes(-1)) {\n            this.scheduleSourcingReportFG.get('reportConfig').get('paramMetric').reset([]);\n            return;\n        }\n        this.scheduleSourcingReportFG.get('reportConfig').get('paramMetric').setValue([-1, ...this.allParameterID]);\n    }\n\n    selectedParameters() {\n        const selected = this.scheduleSourcingReportFG.get('reportConfig').get('paramMetric').value;\n\n        if (selected.includes(-1)) {\n            selected.shift();\n            this.scheduleSourcingReportFG.get('reportConfig').get('paramMetric').patchValue(selected);\n        } else if (this.scheduleSourcingReportFG.get('reportConfig').get('paramMetric').value.length == this.totalParameterCount) {\n            this.allParameterID.splice(0, 0, -1);\n            this.scheduleSourcingReportFG.get('reportConfig').get('paramMetric').patchValue(this.allParameterID);\n        } else {\n            const filteredSelected = selected.filter(s => s != -1);\n            this.scheduleSourcingReportFG.get('paramMetric').patchValue(filteredSelected);\n        }\n    }\n\n    patchSchedulerConfigInput() {\n        this.scheduleSourcingReportFG.get('schedulerConfig').patchValue(this.schedulerConfigInput.scheduleReportFG.value)\n    }\n\n    getValidFormData() {\n        this.patchSchedulerConfigInput();\n\n        let userID = this.tscCommonService.removeSelectAllID(this.scheduleSourcingReportFG.get('schedulerConfig').get('userID').value);\n        this.scheduleSourcingReportFG.get('schedulerConfig').get('userID').patchValue(userID);\n\n        let paramMetrics = this.tscCommonService.removeSelectAllID(this.scheduleSourcingReportFG.get('reportConfig').get('paramMetric').value);\n        let paramsArray = paramMetrics.map(paramName => ({\n            name: paramName,\n            dsAgg: 'sum',\n            agg: 'sum'\n        }));\n\n        const reportConfigFG = this.scheduleSourcingReportFG.get('reportConfig').value;\n        const schedulerConfigFG = this.scheduleSourcingReportFG.get('schedulerConfig').value;\n        const { paramMetric, ...reportConfigWithoutParamMetric } = reportConfigFG;\n\n        this.modifiedFG = {\n            reportConfig: {\n                ...reportConfigWithoutParamMetric,\n                params: paramsArray\n            },\n            schedulerConfig: {\n                ...schedulerConfigFG\n            }\n        };\n    }\n\n    scheduleReportSubmit() {\n        this.patchSchedulerConfigInput();\n\n        if (this.schedulerConfigInput.scheduleReportFG.invalid) {\n            this.schedulerConfigInput.scheduleReportFG.markAllAsTouched();\n        }\n\n        if (this.scheduleSourcingReportFG.invalid) {\n            console.log('Invalid form:', this.scheduleSourcingReportFG.value);\n            this.toastrService.openToast(InvalidForm.INVALID_FORM_TITLE, InvalidForm.INVALID_FORM_MESSAGE, ToastrColor.ERROR);\n            return;\n        } else {\n            this.getValidFormData();\n\n            if (this.action == FormAction.CREATE) {\n                this.createScheduleReport();\n            } else if (this.action == FormAction.UPDATE) {\n                this.updateScheduleReport();\n            }\n        }\n    }\n\n    createScheduleReport() {\n        this.scheduleReportController.createScheduleReport(this.orgID, this.modifiedFG).subscribe((res: ResponseM) => {\n\n            this.router.navigate([`schedule-report/page`]);\n\n        }, error => {\n            console.log('error in createScheduleReport -', error);\n        });\n    }\n\n    async getScheduleReportByID(scheduleReportID) {\n        this.scheduleReportI = <ScheduleReportI>await this.scheduleReportService.getScheduleReportByID(this.orgID, scheduleReportID);\n\n        this.patchScheduleReport(this.scheduleReportI);\n    }\n\n    patchScheduleReport(scheduleReportI: ScheduleReportI) {\n        this.scheduleSourcingReportFG.patchValue({\n            reportConfig: scheduleReportI.reportConfig,\n            schedulerConfig: scheduleReportI.schedulerConfig\n        });\n\n        this.schedulerConfigInput.scheduleReportFG.patchValue(scheduleReportI.schedulerConfig);\n\n        this.initialObject = {\n            sourcingReportConfig: this.scheduleSourcingReportFG.value,\n            schedulerConfig: this.schedulerConfigInput.scheduleReportFG.value\n        };\n\n        this.isValidUpdateForm();\n    }\n\n    isValidUpdateForm() {\n        this.schedulerConfigInput.scheduleReportFG.valueChanges.subscribe(() => {\n            this.checkEquality();\n        });\n\n        this.scheduleSourcingReportFG.valueChanges.subscribe(() => {\n            this.checkEquality();\n        });\n    }\n\n    checkEquality() {\n        const currentValues = {\n            sourcingReportConfig: this.scheduleSourcingReportFG.value,\n            schedulerConfig: this.schedulerConfigInput.scheduleReportFG.value\n        };\n        this.isEqual = isEqual(this.initialObject, currentValues);\n    }\n\n    updateScheduleReport() {\n        this.scheduleReportController.updateScheduleReport(this.orgID, this.scheduleReportID, this.modifiedFG).subscribe((res: ResponseM) => {\n\n            this.tscCommonService.back();\n\n        }, error => {\n            console.log('error in updateScheduleReport -', error);\n        })\n    }\n\n    errorHandling = (formGroup: FormGroup, controlPath: string, error: string): boolean => {\n        return formGroup.get(controlPath).hasError(error);\n    }\n\n}","<div class=\"card main-card cardOverwrite h100\">\n    <div class=\"headerContainer\">\n        <div class=\"headerLeftContainer\">\n            <div class=\"pageTitle\">{{ pageTitle }}</div>\n            <div class=\"pageSubtitle\"></div>\n        </div>\n    </div>\n\n    <div class=\"card-body\">\n        <form [formGroup]=\"scheduleSourcingReportFG\" (ngSubmit)=\"scheduleReportSubmit()\">\n            <div class=\"row\">\n                <div class=\"col-sm-12\">\n                    <mat-card class=\"border cardOverwrite\">\n                        <div class=\"cardTitle\">\n                            Report configuration\n                        </div>\n                        <div class=\"row mt-2\">\n                            <div class=\"col-sm-3\">\n                                <div formGroupName=\"reportConfig\">\n                                    <mat-form-field class=\"matFieldWidth100\" [appearance]=\"MaterialFormFieldAppearance.FORM_FIELD_APPEARANCE\">\n                                        <mat-label>Select consumption parameter</mat-label>\n                                        <mat-select formControlName=\"paramMetric\" multiple required>\n                                            <ng-container\n                                                *ngIf=\"consumptionParamM && consumptionParamM.length > 0 && consumptionParamM[0]['id']; else noConsumptionParamM\">\n                                                <mat-option [value]=\"-1\" (click)=\"selectAllParameters()\">\n                                                    Select all\n                                                </mat-option>\n                                                <mat-option *ngFor=\"let param of consumptionParamM\" [value]=\"param.paramMetric\"\n                                                    (click)=\"selectedParameters()\">\n                                                    {{ param.label }}\n                                                </mat-option>\n                                            </ng-container>\n                                            <ng-template #noConsumptionParamM>\n                                                <mat-option disabled>\n                                                    {{ COMMON_CONSTANT.NO_DATA_FOUND }}\n                                                </mat-option>\n                                            </ng-template>\n                                        </mat-select>\n                                        <mat-error *ngIf=\"errorHandling(scheduleSourcingReportFG, 'reportConfig.paramMetric', 'required')\">\n                                            {{ FormErrorEnum.REQUIRED }}\n                                        </mat-error>\n                                    </mat-form-field>\n                                </div>\n                            </div>\n                        </div>\n                    </mat-card>\n                </div>\n            </div>\n\n            <div class=\"row mt-3\">\n                <div class=\"col-sm-12\">\n                    <lib-configuration #schedulerConfigInput></lib-configuration>\n                </div>\n            </div>\n            \n            <button class=\"d-none\" type=\"submit\" #formSubmitBtn></button>\n\n            <div class=\"row mt-3\">\n                <div class=\"col-sm-12\">\n                    <div class=\"float-end\">\n                        <button class=\"btn btn-sm btn-secondary me-2\" type=\"button\" (click)=\"tscCommonService.back()\">\n                            {{ ButtonLabelEnum.CANCEL_BTN_LABEL }}\n                        </button>\n\n                        <button class=\"btn btn-sm btn-success\" [ngClass]=\"{\n                                            'btn-success' : action == FormAction.CREATE,\n                                            'btn-primary' : action == FormAction.UPDATE,\n                                            'disabled' : action == FormAction.UPDATE && isEqual\n                                        }\" type=\"submit\">{{ action ==\n                            FormAction.CREATE ? 'Schedule' :\n                            ButtonLabelEnum.UPDATE_BTN_LABEL }}\n                        </button>\n                    </div>\n                </div>\n            </div>\n        </form>\n    </div>\n</div>","import { NgModule } from '@angular/core';\nimport { RouterModule, Routes } from '@angular/router';\n\nimport { ScheduleReportSourcingComponent } from './sourcing.component';\n\nconst routes: Routes = [\n    {\n        path: '',\n        component: ScheduleReportSourcingComponent\n    }\n];\n\n@NgModule({\n    imports: [RouterModule.forChild(routes)],\n    exports: [RouterModule]\n})\nexport class ScheduleReportSourcingRoutingModule { }\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\n\nimport {\n    FormsModule,\n    ReactiveFormsModule\n} from '@angular/forms';\n\nimport { MatCardModule } from '@angular/material/card';\nimport { MatFormFieldModule } from '@angular/material/form-field';\nimport { MatSelectModule } from '@angular/material/select';\n\nimport { ScheduleReportConfigurationModule } from '../_shared/configuration/configuration.module';\n\nimport { ScheduleReportSourcingRoutingModule } from './sourcing-routing.module';\nimport { ScheduleReportSourcingComponent } from './sourcing.component';\n\n\n@NgModule({\n    declarations: [\n        ScheduleReportSourcingComponent\n    ],\n    imports: [\n        CommonModule,\n        ScheduleReportSourcingRoutingModule,\n\n        ScheduleReportConfigurationModule,\n\n        FormsModule,\n        ReactiveFormsModule,\n        MatCardModule,\n        MatFormFieldModule,\n        MatSelectModule\n    ]\n})\nexport class ScheduleReportSourcingModule { }","import { Component, OnInit, ViewChild } from '@angular/core';\nimport { FormBuilder, FormGroup, Validators } from '@angular/forms';\nimport { ActivatedRoute, Router } from '@angular/router';\n\nimport { isEqual } from 'lodash';\n\nimport { Entity, EntityM } from '../../../model/entity.model';\n\nimport { ScheduleReportTypeEnum } from '../../../enum/schedule-report.enum';\nimport { ScheduleReport, ScheduleReportI } from '../../../model/schedule-report.model';\n\nimport { ScheduleReportController } from '../../../controller/schedule-report.controller';\n\nimport { ScheduleReportService } from '../../../service/schedule-report.service';\n\nimport { ScheduleReportConfigurationComponent } from '../_shared/configuration/configuration.component';\n\nimport { EntityService } from '../../../service/entity.service';\n\n// tsc-library\nimport { ResponseM, MaterialFormFieldAppearance, InvalidForm, ButtonLabelEnum, FormAction, FormErrorEnum, TSCCommonService, COMMON_CONSTANT, MATERIAL_CONSTANT, ButtonTooltipEnum } from '@library/tsc-common';\nimport { ToastrColor, ToastrService } from '@library/toastr-service';\nimport { StorageService } from '@library/storage-service';\n// /tsc-library/\n\n@Component({\n    selector: 'lib-temperature',\n    templateUrl: './temperature.component.html',\n    styleUrls: ['./temperature.component.scss']\n})\nexport class ScheduleReportTemperatureComponent implements OnInit {\n\n    COMMON_CONSTANT = COMMON_CONSTANT;\n    MATERIAL_CONSTANT = MATERIAL_CONSTANT;\n\n    FormAction = FormAction;\n    FormErrorEnum = FormErrorEnum;\n    ButtonLabelEnum = ButtonLabelEnum;\n    ButtonTooltipEnum = ButtonTooltipEnum;\n    MaterialFormFieldAppearance = MaterialFormFieldAppearance;\n\n    orgID: any;\n\n    entityM = [new Entity()];\n    entityType: any[] = [];\n    allEntityID: any[] = [];\n    totalEntityCount: number = 0;\n    entities: any[] = [];\n\n    scheduleTemperatureReportFG: FormGroup;\n    modifiedFG: any;\n    scheduleReportID: any;\n\n    action: string;\n    pageTitle: string;\n    isEqual: boolean = true;\n    initialObject: any;\n\n    scheduleReportI = new ScheduleReport();\n\n    @ViewChild('schedulerConfigInput') schedulerConfigInput: ScheduleReportConfigurationComponent;\n\n    constructor(\n        private activatedRoute: ActivatedRoute,\n        private router: Router,\n        private formBuilder: FormBuilder,\n        private scheduleReportController: ScheduleReportController,\n        private entityService: EntityService,\n        private scheduleReportService: ScheduleReportService,\n\n        // tsc-library\n        private storageService: StorageService,\n        public tscCommonService: TSCCommonService,\n        private toastrService: ToastrService,\n        // /tsc-library/\n    ) { }\n\n    ngOnInit(): void {\n        this.orgID = this.storageService.getStorage('currentOrgID');\n\n        this.getEntitiesByParamMetric();\n        this.scheduleTemperatureReportFGInit();\n\n        this.activatedRoute.data.subscribe(data => {\n            this.action = data.action;\n            this.setPageTitle();\n        });\n\n        this.activatedRoute.params.subscribe(params => {\n            if (this.action == FormAction.UPDATE) {\n                this.scheduleReportID = params.scheduleReportID;\n                this.getScheduleReportByID(this.scheduleReportID);\n            }\n        });\n    }\n\n    setPageTitle() {\n        if (this.action == FormAction.CREATE) {\n            this.pageTitle = `Schedule Temperature Report`;\n        } else if (this.action == FormAction.UPDATE) {\n            this.pageTitle = `Update Scheduled Temperature Report`;\n        }\n    }\n\n    scheduleTemperatureReportFGInit() {\n        this.scheduleTemperatureReportFG = this.formBuilder.group({\n            reportConfig: this.formBuilder.group({\n                reportType: [ScheduleReportTypeEnum.TEMPERATURE_REPORT, Validators.required],\n                deviceID: [[]],\n                entityType: [, Validators.required],\n                entityID: [[], Validators.required],\n                sourceConsumer: this.formBuilder.group({\n                    type: [],\n                    keyID: []\n                }),\n                paramMetric: [['engTemperature'], Validators.required],\n            }),\n            schedulerConfig: this.formBuilder.group({\n                name: [, Validators.required],\n                dataInterval: [, Validators.required],\n                frequency: [, Validators.required],\n                userChoice: [, Validators.required],\n                userID: [[], Validators.required],\n                otherUserEmail: [[]],\n                status: [, Validators.required],\n                reportFormat: [, Validators.required],\n            })\n        });\n    }\n\n    async getEntitiesByParamMetric() {\n        this.entityM = <EntityM[]>await this.entityService.getEntitiesByParamMetric(this.orgID, \"engTemperature\");\n        this.getDistictEntityType();\n    }\n\n    getDistictEntityType() {\n        const distinctTypes = Array.from(new Set(this.entityM.map(item => item.type)));\n        this.entityType = distinctTypes.map(value => ({ value }));\n    }\n\n    async entityTypeChange(entityType) {\n        this.scheduleTemperatureReportFG.get('reportConfig').get('entityID').reset();\n        this.allEntityID = [];\n\n        this.entities = await this.getEntitiesByType(entityType);\n        this.totalEntityCount = this.entities.length;\n        this.entities.forEach(entity => this.allEntityID.push(entity['id']));\n\n        if (this.action == FormAction.UPDATE && this.scheduleTemperatureReportFG) {\n            this.scheduleTemperatureReportFG.patchValue({\n                'reportConfig.entityID': this.allEntityID\n            });\n        }\n    }\n\n    async getEntitiesByType(type) {\n        const filteredEntities = this.entityM.filter(entity => entity.type == type);\n        return filteredEntities;\n    }\n\n    selectAllEntities() {\n        if (!this.scheduleTemperatureReportFG.get('reportConfig').get('entityID').value.includes(-1)) {\n            this.scheduleTemperatureReportFG.get('reportConfig').get('entityID').reset([]);\n            return;\n        }\n        this.scheduleTemperatureReportFG.get('reportConfig').get('entityID').setValue([-1, ...this.allEntityID]);\n    }\n\n    selectedEntity() {\n        const selected = this.scheduleTemperatureReportFG.get('reportConfig').get('entityID').value;\n\n        if (selected.includes(-1)) {\n            selected.shift();\n            this.scheduleTemperatureReportFG.get('reportConfig').get('entityID').patchValue(selected);\n        } else if (this.scheduleTemperatureReportFG.get('reportConfig').get('entityID').value.length == this.totalEntityCount) {\n            this.allEntityID.splice(0, 0, -1);\n            this.scheduleTemperatureReportFG.get('reportConfig').get('entityID').patchValue(this.allEntityID);\n        } else {\n            const filteredSelected = selected.filter(s => s != -1);\n            this.scheduleTemperatureReportFG.get('reportConfig').get('entityID').patchValue(filteredSelected);\n        }\n    }\n\n    patchSchedulerConfigInput() {\n        this.scheduleTemperatureReportFG.get('schedulerConfig').patchValue(this.schedulerConfigInput.scheduleReportFG.value)\n    }\n\n    getValidFormData() {\n        this.patchSchedulerConfigInput();\n\n        let entityID = this.tscCommonService.removeSelectAllID(this.scheduleTemperatureReportFG.get('reportConfig').get('entityID').value);\n        this.scheduleTemperatureReportFG.get('reportConfig').get('entityID').patchValue(entityID);\n\n        let userID = this.tscCommonService.removeSelectAllID(this.scheduleTemperatureReportFG.get('schedulerConfig').get('userID').value);\n        this.scheduleTemperatureReportFG.get('schedulerConfig').get('userID').patchValue(userID);\n\n        let paramMetrics = this.scheduleTemperatureReportFG.get('reportConfig').get('paramMetric').value;\n        let paramsArray = paramMetrics.map(paramName => ({\n            name: paramName,\n            dsAgg: 'avg',\n            agg: 'avg'\n        }));\n\n        const reportConfigFG = this.scheduleTemperatureReportFG.get('reportConfig').value;\n        const schedulerConfigFG = this.scheduleTemperatureReportFG.get('schedulerConfig').value;\n        const { paramMetric, ...reportConfigWithoutParamMetric } = reportConfigFG;\n\n        this.modifiedFG = {\n            reportConfig: {\n                ...reportConfigWithoutParamMetric,\n                params: paramsArray\n            },\n            schedulerConfig: {\n                ...schedulerConfigFG\n            }\n        };\n    }\n\n    scheduleReportSubmit() {\n        this.patchSchedulerConfigInput();\n\n        if (this.schedulerConfigInput.scheduleReportFG.invalid) {\n            this.schedulerConfigInput.scheduleReportFG.markAllAsTouched();\n        }\n\n        if (this.scheduleTemperatureReportFG.invalid) {\n            console.log('Invalid form:', this.scheduleTemperatureReportFG.value);\n            this.toastrService.openToast(InvalidForm.INVALID_FORM_TITLE, InvalidForm.INVALID_FORM_MESSAGE, ToastrColor.ERROR);\n            return;\n        } else {\n            this.getValidFormData();\n\n            if (this.action == FormAction.CREATE) {\n                this.createScheduleReport();\n            } else if (this.action == FormAction.UPDATE) {\n                this.updateScheduleReport();\n            }\n        }\n    }\n\n    createScheduleReport() {\n        this.scheduleReportController.createScheduleReport(this.orgID, this.modifiedFG).subscribe((res: ResponseM) => {\n\n            this.router.navigate([`schedule-report/page`]);\n\n        }, error => {\n            console.log('error in createScheduleReport -', error);\n        });\n    }\n\n    async getScheduleReportByID(scheduleReportID) {\n        this.scheduleReportI = <ScheduleReportI>await this.scheduleReportService.getScheduleReportByID(this.orgID, scheduleReportID);\n\n        this.patchScheduleReport(this.scheduleReportI);\n    }\n\n    async patchScheduleReport(scheduleReportI: ScheduleReportI) {\n        await this.getEntitiesByParamMetric();\n        await this.entityTypeChange(this.scheduleReportI.reportConfig.entityType);\n\n        this.scheduleTemperatureReportFG.patchValue({\n            reportConfig: scheduleReportI.reportConfig,\n            schedulerConfig: scheduleReportI.schedulerConfig\n        });\n\n        this.schedulerConfigInput.scheduleReportFG.patchValue(scheduleReportI.schedulerConfig);\n\n        this.initialObject = {\n            temperatureReportConfig: this.scheduleTemperatureReportFG.value,\n            schedulerConfig: this.schedulerConfigInput.scheduleReportFG.value\n        };\n\n        this.isValidUpdateForm();\n    }\n\n    isValidUpdateForm() {\n        this.schedulerConfigInput.scheduleReportFG.valueChanges.subscribe(() => {\n            this.checkEquality();\n        });\n\n        this.scheduleTemperatureReportFG.valueChanges.subscribe(() => {\n            this.checkEquality();\n        });\n    }\n\n    checkEquality() {\n        const currentValues = {\n            temperatureReportConfig: this.scheduleTemperatureReportFG.value,\n            schedulerConfig: this.schedulerConfigInput.scheduleReportFG.value\n        };\n        this.isEqual = isEqual(this.initialObject, currentValues);\n    }\n\n    updateScheduleReport() {\n        this.scheduleReportController.updateScheduleReport(this.orgID, this.scheduleReportID, this.modifiedFG).subscribe((res: ResponseM) => {\n\n            this.tscCommonService.back();\n\n        }, error => {\n            console.log('error in updateScheduleReport -', error);\n        })\n    }\n\n    errorHandling = (formGroup: FormGroup, controlPath: string, error: string): boolean => {\n        return formGroup.get(controlPath).hasError(error);\n    }\n\n}","<div class=\"card main-card cardOverwrite h100\">\n    <div class=\"headerContainer\">\n        <div class=\"headerLeftContainer\">\n            <div class=\"pageTitle\">{{ pageTitle }}</div>\n            <div class=\"pageSubtitle\"></div>\n        </div>\n    </div>\n\n    <div class=\"card-body\">\n        <form [formGroup]=\"scheduleTemperatureReportFG\" (ngSubmit)=\"scheduleReportSubmit()\">\n            <div class=\"row\">\n                <div class=\"col-sm-12\">\n                    <mat-card class=\"border cardOverwrite\">\n                        <div class=\"cardTitle\">\n                            Report configuration\n                        </div>\n                        <div class=\"row mt-2\">\n                            <div class=\"col-sm-3\">\n                                <div formGroupName=\"reportConfig\">\n                                    <mat-form-field class=\"matFieldWidth100\" [appearance]=\"MaterialFormFieldAppearance.FORM_FIELD_APPEARANCE\">\n                                        <mat-label> Select entity type </mat-label>\n                                        <mat-select formControlName=\"entityType\" (selectionChange)=\"entityTypeChange($event.value)\" required>\n                                            <ng-container *ngIf=\"entityType && entityType.length > 0 && entityType?.[0]?.['value']; else noEntityType\">\n                                                <mat-option *ngFor=\"let type of entityType\" [value]=\"type.value\">\n                                                    {{ type.value }}\n                                                </mat-option>\n                                            </ng-container>\n                                            <ng-template #noEntityType>\n                                                <mat-option disabled>\n                                                    {{ COMMON_CONSTANT.NO_DATA_FOUND }}\n                                                </mat-option>\n                                            </ng-template>\n                                        </mat-select>\n                                        <mat-error *ngIf=\"errorHandling(scheduleTemperatureReportFG, 'reportConfig.entityType', 'required')\">\n                                            {{ FormErrorEnum.REQUIRED }}\n                                        </mat-error>\n                                    </mat-form-field>\n                                </div>\n                            </div>\n                    \n                            <div class=\"col-sm-3\">\n                                <div formGroupName=\"reportConfig\">\n                                    <mat-form-field class=\"mat-field-width-100\" [appearance]=\"MaterialFormFieldAppearance.FORM_FIELD_APPEARANCE\">\n                                        <mat-label>Select entity</mat-label>\n                                        <mat-select formControlName=\"entityID\" multiple required>\n                                            <ng-container *ngIf=\"entities && entities.length > 0 && entities[0]['id']; else noEntityFound\">\n                                                <mat-option [value]=\"-1\" (click)=\"selectAllEntities()\">\n                                                    Select all\n                                                </mat-option>\n                                                <mat-option *ngFor=\"let entity of entities\" [value]=\"entity.id\" (click)=\"selectedEntity()\">\n                                                    {{ entity.name }}\n                                                </mat-option>\n                                            </ng-container>\n                                            <ng-template #noEntityFound>\n                                                <mat-option disabled>\n                                                    {{ COMMON_CONSTANT.NO_DATA_FOUND }}\n                                                </mat-option>\n                                            </ng-template>\n                                        </mat-select>\n                                        <mat-error *ngIf=\"errorHandling(scheduleTemperatureReportFG, 'reportConfig.entityID', 'required')\">\n                                            {{ FormErrorEnum.REQUIRED }}\n                                        </mat-error>\n                                    </mat-form-field>\n                                </div>\n                            </div>\n                        </div>\n                    </mat-card>\n                </div>\n            </div>\n\n            <div class=\"row mt-3\">\n                <div class=\"col-sm-12\">\n                    <lib-configuration #schedulerConfigInput></lib-configuration>\n                </div>\n            </div>\n            \n            <button class=\"d-none\" type=\"submit\" #formSubmitBtn></button>\n\n            <div class=\"row mt-3\">\n                <div class=\"col-sm-12\">\n                    <div class=\"float-end\">\n                        <button class=\"btn btn-sm btn-secondary me-2\" type=\"button\" (click)=\"tscCommonService.back()\">\n                            {{ ButtonLabelEnum.CANCEL_BTN_LABEL }}\n                        </button>\n\n                        <button class=\"btn btn-sm btn-success\" [ngClass]=\"{\n                                            'btn-success' : action == FormAction.CREATE,\n                                            'btn-primary' : action == FormAction.UPDATE,\n                                            'disabled' : action == FormAction.UPDATE && isEqual\n                                        }\" type=\"submit\">{{ action ==\n                            FormAction.CREATE ? 'Schedule' :\n                            ButtonLabelEnum.UPDATE_BTN_LABEL }}\n                        </button>\n                    </div>\n                </div>\n            </div>\n        </form>\n    </div>\n</div>","import { NgModule } from '@angular/core';\nimport { RouterModule, Routes } from '@angular/router';\n\nimport { ScheduleReportTemperatureComponent } from './temperature.component';\n\nconst routes: Routes = [\n    {\n        path: '',\n        component: ScheduleReportTemperatureComponent\n    }\n];\n\n@NgModule({\n    imports: [RouterModule.forChild(routes)],\n    exports: [RouterModule]\n})\nexport class ScheduleReportTemperatureRoutingModule { }\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\n\nimport {\n    FormsModule,\n    ReactiveFormsModule\n} from '@angular/forms';\n\nimport { MatCardModule } from '@angular/material/card';\nimport { MatFormFieldModule } from '@angular/material/form-field';\nimport { MatSelectModule } from '@angular/material/select';\nimport { MatButtonToggleModule } from '@angular/material/button-toggle';\n\nimport { ScheduleReportConfigurationModule } from '../_shared/configuration/configuration.module';\n\nimport { ScheduleReportTemperatureRoutingModule } from './temperature-routing.module';\nimport { ScheduleReportTemperatureComponent } from './temperature.component';\n\n\n@NgModule({\n    declarations: [\n        ScheduleReportTemperatureComponent\n    ],\n    imports: [\n        CommonModule,\n        ScheduleReportTemperatureRoutingModule,\n\n        ScheduleReportConfigurationModule,\n\n        FormsModule,\n        ReactiveFormsModule,\n\n        MatCardModule,\n        MatFormFieldModule,\n        MatSelectModule,\n        MatButtonToggleModule\n    ]\n})\nexport class ScheduleReportTemperatureModule { }\n","import { Component, Inject, OnInit } from '@angular/core';\n\nimport { FormBuilder, FormGroup, Validators } from '@angular/forms';\nimport { MatDialogRef, MAT_DIALOG_DATA } from '@angular/material/dialog';\n\nimport { isEqual } from 'lodash';\n\nimport { Entity, EntityType, EntityTypeM } from '../../../../../model/entity.model';\n\nimport { EntityController } from '../../../../../controller/entity.controller';\n\nimport { EntityService } from '../../../../../service/entity.service';\n\n// tsc-library\nimport { InvalidForm, ResponseM, MatSelectSearchService, MaterialFormFieldAppearance, ButtonLabelEnum, DialogEnum, FormErrorEnum } from '@library/tsc-common';\nimport { StorageService } from '@library/storage-service';\nimport { ToastrService, ToastrColor } from '@library/toastr-service';\n// /tsc-library/\n\n@Component({\n    selector: 'lib-entity',\n    templateUrl: './entity.component.html',\n    styleUrls: []\n})\nexport class CreateUpdateEntityComponent implements OnInit {\n\n    MaterialFormFieldAppearance = MaterialFormFieldAppearance;\n    ButtonLabelEnum = ButtonLabelEnum;\n    DialogEnum = DialogEnum;\n    FormErrorEnum = FormErrorEnum;\n\n    title: string = 'Create';\n    action: string = 'create';\n\n    orgID: any;\n    layoutID: any;\n    entityID: any;\n    isNewEntityTypeSelected: boolean = false;\n    isEqual: boolean = false;\n    initialObject: any;\n\n    entityM: Entity;\n    entityTypeM = [new EntityType()];\n\n    entityFG: FormGroup;\n    entityTypeSearchUtil: MatSelectSearchService = new MatSelectSearchService(['type']);\n\n    constructor(\n        private storageService: StorageService,\n        private toastService: ToastrService,\n        private entityService: EntityService,\n        private entityController: EntityController,\n        private entityFB: FormBuilder,\n        public dialogRef: MatDialogRef<CreateUpdateEntityComponent>,\n        @Inject(MAT_DIALOG_DATA) public data\n    ) {\n        this.action = data['action'];\n        this.entityID = data['entityID'];\n        this.layoutID = data['layoutID']\n        this.dialogRef.disableClose = true;\n    }\n\n    ngOnInit(): void {\n        this.orgID = this.storageService.getStorage('currentOrgID');\n\n        this.getEntityType();\n        this.entityFGInit();\n\n        if (this.action == 'update') {\n            this.title = 'Update';\n            this.getEntityByID();\n        }\n        this.entityFG.valueChanges.subscribe(() => { this.isEqual = isEqual(this.initialObject, this.entityFG.getRawValue()); });\n    }\n\n    async getEntityType() {\n        this.entityTypeM = <EntityTypeM[]>await this.entityService.getEntityTypeByLayoutID(this.orgID, 'NO');\n\n        this.entityTypeSearchUtil.entityArr = this.entityTypeM;\n        this.entityTypeSearchUtil.createSubscription();\n    }\n\n    entityFGInit() {\n        this.entityFG = this.entityFB.group({\n            name: ['', Validators.required],\n            type: ['', Validators.required]\n        });\n    }\n\n    createNewType() {\n        this.isNewEntityTypeSelected = true;\n        this.entityFG.get('type').reset();\n    }\n\n    getEntityByID() {\n        this.entityController.getEntityByID(this.orgID, this.layoutID, this.entityID).subscribe((entityRes) => {\n            this.entityM = entityRes;\n            this.patchEntity(this.entityM);\n        })\n    }\n\n    patchEntity(entity) {\n        this.entityFG.patchValue({\n            name: entity['name'],\n            type: entity['type']\n        });\n        this.isEqual = true;\n    }\n\n    addEntity() {\n        if (this.entityFG.invalid) {\n            this.entityFG.markAllAsTouched();\n            this.toastService.openToast(InvalidForm.INVALID_FORM_TITLE, InvalidForm.INVALID_FORM_MESSAGE, ToastrColor.ERROR);\n            return;\n        }\n\n        this.entityController.createEntity(this.orgID, this.layoutID, this.entityID, this.entityFG.value)\n            .subscribe((addEntityRes: ResponseM) => {\n                this.dialogRef.close(DialogEnum.SUCCESS_DR);\n            },\n                error => {\n                    console.log('error in addEntity - ', error);\n                });\n    }\n\n    updateEntity() {\n        if (this.entityFG.invalid) {\n            this.entityFG.markAllAsTouched();\n            this.toastService.openToast(InvalidForm.INVALID_FORM_TITLE, InvalidForm.INVALID_FORM_MESSAGE, ToastrColor.ERROR);\n            return;\n        }\n        this.entityController.updateEntity(this.orgID, this.layoutID, this.entityID, this.entityFG.value)\n            .subscribe((addEntityRes: ResponseM) => {\n                this.dialogRef.close(DialogEnum.SUCCESS_DR);\n            },\n                error => {\n                    console.log('error in updateEntity - ', error);\n                });\n    }\n\n    public errorHandling = (control: string, error: string) => {\n        return this.entityFG.controls[control].hasError(error);\n    }\n\n}\n","<div mat-dialog-title>\n    <strong class=\"dialogTitle\">\n        {{ title }} Entity\n    </strong>\n    <button mat-icon-button mat-dialog-close cdkFocusInitial class=\"float-end matDialogClose\" matTooltip=\"Close\"\n        matTooltipPosition=\"before\">\n        <span class=\"material-symbols-outlined\" [mat-dialog-close]=\"DialogEnum.CLOSE_DR\">\n            close\n        </span>\n    </button>\n</div>\n\n<div class=\"matDialogContent\" mat-dialog-content>\n    <form [formGroup]=\"entityFG\">\n        <div class=\"row\">\n            <div class=\"col-sm-6\">\n                <mat-form-field class=\"matFieldWidth100\" [appearance]=\"MaterialFormFieldAppearance.FORM_FIELD_APPEARANCE\">\n                    <mat-label class=\"formLabel\">Name</mat-label>\n                    <input matInput placeholder=\"Name\" type=\"text\" formControlName=\"name\" required />\n                    <mat-error *ngIf=\"errorHandling('name', 'required')\">\n                        {{ FormErrorEnum.REQUIRED }}\n                    </mat-error>\n                </mat-form-field>\n            </div>\n\n            <div class=\"col-sm-6\" *ngIf=\"!isNewEntityTypeSelected\">\n                <mat-form-field class=\"matFieldWidth100\" [appearance]=\"MaterialFormFieldAppearance.FORM_FIELD_APPEARANCE\">\n                    <mat-label>Select type</mat-label>\n                    <mat-select formControlName=\"type\" required>\n                        <mat-option>\n                            <ngx-mat-select-search [formControl]=\"entityTypeSearchUtil.filterFC\" placeholderLabel=\"Search by name\"\n                                noEntriesFoundLabel=\"No matching type found.\">\n                            </ngx-mat-select-search>\n                        </mat-option>\n                        <mat-option *ngFor=\"let entity of entityTypeSearchUtil.filteredEntities | async\" [value]=\"entity.type\">\n                            {{ entity.type }}\n                        </mat-option>\n\n                        <div class=\"row m-0 stickyDropdownMenuItem\">\n                            <div class=\"col-sm-12 text-primary cursorPointer\" (click)=\"createNewType()\">\n                                Create new type\n                            </div>\n                        </div>\n                    </mat-select>\n                    <mat-error *ngIf=\"errorHandling('type', 'required')\">\n                        {{ FormErrorEnum.REQUIRED }}\n                    </mat-error>\n                </mat-form-field>\n            </div>\n\n            <div class=\"col-sm-6\" *ngIf=\"isNewEntityTypeSelected\">\n                <mat-form-field class=\"matFieldWidth100\" [appearance]=\"MaterialFormFieldAppearance.FORM_FIELD_APPEARANCE\">\n                    <mat-label class=\"formLabel\">Type</mat-label>\n                    <input matInput placeholder=\"Type\" type=\"text\" formControlName=\"type\" required />\n                    <mat-error *ngIf=\"errorHandling('type', 'required')\">\n                        {{ FormErrorEnum.REQUIRED }}\n                    </mat-error>\n                </mat-form-field>\n\n                <span class=\"mt-2 text-primary cursorPointer\" (click)=\"isNewEntityTypeSelected = false\">\n                    <small>Select type *</small>\n                </span>\n            </div>\n        </div>\n    </form>\n</div>\n\n<div mat-dialog-footer align=\"end\">\n    <div [ngSwitch]=\"action\" class=\"d-inline\">\n        <button *ngSwitchCase=\"'create'\" type=\"button\" class=\"btn btn-sm btn-success\" (click)=\"addEntity()\">\n            {{ ButtonLabelEnum.CREATE_BTN_LABEL }}\n        </button>\n        <button *ngSwitchCase=\"'update'\" type=\"button\" class=\"btn btn-sm btn-success\" [ngClass]=\"{'disabled': isEqual}\"\n            (click)=\"updateEntity()\">\n            {{ ButtonLabelEnum.UPDATE_BTN_LABEL }}\n        </button>\n        <button *ngSwitchDefault class=\"d-none\"></button>\n    </div>\n</div>","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\n\nimport { MatIconModule } from '@angular/material/icon';\nimport { MatButtonModule } from '@angular/material/button';\nimport { MatInputModule } from '@angular/material/input';\nimport { MatTooltipModule } from '@angular/material/tooltip';\nimport { MatFormFieldModule } from '@angular/material/form-field';\nimport { MatDialogModule } from '@angular/material/dialog';\nimport { MatSelectModule } from '@angular/material/select';\n\nimport { NgxMatSelectSearchModule } from 'ngx-mat-select-search';\n\nimport { CreateUpdateEntityComponent } from './entity.component';\n\n@NgModule({\n    declarations: [\n        CreateUpdateEntityComponent\n    ],\n    imports: [\n        CommonModule,\n        FormsModule,\n        ReactiveFormsModule,\n        MatIconModule,\n        MatFormFieldModule,\n        MatButtonModule,\n        MatInputModule,\n        MatTooltipModule,\n        MatDialogModule,\n        MatSelectModule,\n        NgxMatSelectSearchModule\n    ]\n})\nexport class CreateUpdateEntityModule { }\n","import { Component, Inject, OnInit } from '@angular/core';\nimport { FormBuilder, FormGroup, Validators } from '@angular/forms';\nimport { MatDialogRef, MAT_DIALOG_DATA } from '@angular/material/dialog';\n\nimport { isEqual } from 'lodash';\n\n// tsc-library\nimport { InvalidForm, ResponseM, MaterialFormFieldAppearance, ButtonLabelEnum, DialogEnum, FormErrorEnum } from '@library/tsc-common';\nimport { StorageService } from '@library/storage-service';\nimport { ToastrService, ToastrColor } from '@library/toastr-service';\nimport { Layout, LayoutController, LayoutService } from '@library/layout-service';\n// /tsc-library/\n\n@Component({\n    selector: 'lib-layout',\n    templateUrl: './layout.component.html',\n    styles: [\n    ]\n})\nexport class CreateUpdateLayoutComponent implements OnInit {\n\n    MaterialFormFieldAppearance = MaterialFormFieldAppearance;\n    ButtonLabelEnum = ButtonLabelEnum;\n    DialogEnum = DialogEnum;\n    FormErrorEnum = FormErrorEnum;\n\n    title: string = 'Create';\n    action: string = 'create';\n\n    orgID: any;\n    layoutID: any;\n    maxLength = 200;\n\n    layoutFG: FormGroup;\n\n    layout = new Layout();\n\n    isEqual: boolean = false;\n    initialObject: any;\n\n    constructor(\n        public dialogRef: MatDialogRef<CreateUpdateLayoutComponent>,\n        @Inject(MAT_DIALOG_DATA) public data,\n        private storageService: StorageService,\n        private layoutFB: FormBuilder,\n        private toastService: ToastrService,\n        private layoutController: LayoutController,\n        private layoutService: LayoutService,\n    ) {\n        this.action = data['action'];\n        this.layoutID = data['layoutID'];\n        this.dialogRef.disableClose = true;\n    }\n\n    ngOnInit(): void {\n        this.orgID = this.storageService.getStorage('currentOrgID')\n\n        this.layoutInit();\n\n        if (this.action == 'update') {\n            this.title = 'Update';\n            this.getLayoutByID();\n        }\n        this.layoutFG.valueChanges.subscribe(() => { this.isEqual = isEqual(this.initialObject, this.layoutFG.getRawValue()); });\n    }\n\n    layoutInit() {\n        this.layoutFG = this.layoutFB.group({\n            name: ['', [Validators.required]],\n            description: []\n        });\n    }\n\n    async getLayoutByID() {\n        this.layout = await this.layoutService.getLayoutByID(this.orgID, this.layoutID);\n        this.patchLayout(this.layout);\n    }\n\n    patchLayout(layout) {\n        this.layoutFG.patchValue({\n            name: layout['name'],\n            description: layout['description']\n        });\n        this.isEqual = true;\n    }\n\n    createLayout() {\n        if (this.layoutFG.invalid) {\n            this.layoutFG.markAllAsTouched();\n            this.toastService.openToast(InvalidForm.INVALID_FORM_TITLE, InvalidForm.INVALID_FORM_MESSAGE, ToastrColor.ERROR);\n            return;\n        }\n\n        this.layoutController.createLayout(this.orgID, this.layoutFG.value)\n            .subscribe((layoutCreateRes: ResponseM) => {\n                this.dialogRef.close({\n                    result: DialogEnum.SUCCESS_DR,\n                    layoutID: layoutCreateRes.response.id\n                })\n            },\n                error => {\n                    console.log('error in createLayout() - ', error);\n                });\n    }\n\n    updateLayout() {\n        if (this.layoutFG.invalid) {\n            this.layoutFG.markAllAsTouched();\n            this.toastService.openToast(InvalidForm.INVALID_FORM_TITLE, InvalidForm.INVALID_FORM_MESSAGE, ToastrColor.ERROR);\n            return;\n        }\n        this.layoutController.updateLayout(this.orgID, this.layoutID, this.layoutFG.value)\n            .subscribe((updateLayoutRes: ResponseM) => {\n                this.dialogRef.close({ result: DialogEnum.SUCCESS_DR, layoutID: null })\n            },\n                error => {\n                    console.log('error in updateLayout() - ', error);\n                });\n    }\n\n    public errorHandling = (control: string, error: string) => {\n        return this.layoutFG.controls[control].hasError(error);\n    }\n\n}\n","<div mat-dialog-title>\n    <strong class=\"dialogTitle\">\n        {{ title }} layout\n    </strong>\n    <button mat-icon-button mat-dialog-close cdkFocusInitial class=\"float-end matDialogClose\" matTooltip=\"Close\"\n        matTooltipPosition=\"before\">\n        <span class=\"material-symbols-outlined\" [mat-dialog-close]=\"DialogEnum.CLOSE_DR\">\n            close\n        </span>\n    </button>\n</div>\n\n<div class=\"matDialogContent\" mat-dialog-content>\n    <form [formGroup]=\"layoutFG\">\n        <div class=\"row\">\n            <div class=\"col-sm-6\">\n                <mat-form-field class=\"matFieldWidth100\" [appearance]=\"MaterialFormFieldAppearance.FORM_FIELD_APPEARANCE\">\n                    <mat-label class=\"formLabel\">Name</mat-label>\n                    <input matInput placeholder=\"Layout Name\" type=\"text\" formControlName=\"name\" required/>\n                    <mat-error *ngIf=\"errorHandling('name', 'required')\">\n                        {{ FormErrorEnum.REQUIRED }}\n                    </mat-error>\n                </mat-form-field>\n            </div>\n            <div class=\"col-sm-6\">\n                <mat-form-field class=\"matFieldWidth100\" [appearance]=\"MaterialFormFieldAppearance.FORM_FIELD_APPEARANCE\">\n                    <mat-label class=\"formLabel\">Description</mat-label>\n                    <input class=\"formPlaceholder\" matInput formControlName=\"description\" [maxlength]=\"maxLength\"\n                        #input />\n                    <mat-hint>Total number of character remaining: {{input.value.length}}\n                        /{{ maxLength }}</mat-hint>\n                </mat-form-field>\n            </div>\n        </div>\n    </form>\n</div>\n\n<div mat-dialog-footer align=\"end\">\n    <div [ngSwitch]=\"action\" class=\"d-inline\">\n        <button *ngSwitchCase=\"'create'\" type=\"button\" class=\"btn btn-sm btn-success\" (click)=\"createLayout()\">\n            {{ ButtonLabelEnum.CREATE_BTN_LABEL }}\n        </button>\n        <button *ngSwitchCase=\"'update'\" type=\"button\" class=\"btn btn-sm btn-success\" [ngClass]=\"{'disabled': isEqual}\"\n            (click)=\"updateLayout()\">\n            {{ ButtonLabelEnum.UPDATE_BTN_LABEL }}\n        </button>\n        <button *ngSwitchDefault class=\"d-none\"></button>\n    </div>\n</div>","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\n\nimport { MatIconModule } from '@angular/material/icon';\nimport { MatButtonModule } from '@angular/material/button';\nimport { MatInputModule } from '@angular/material/input';\nimport { MatTooltipModule } from '@angular/material/tooltip';\nimport { MatFormFieldModule } from '@angular/material/form-field';\nimport { MatDialogModule } from '@angular/material/dialog';\nimport { MatSelectModule } from '@angular/material/select';\n\nimport { CreateUpdateLayoutComponent } from './layout.component';\n\n@NgModule({\n    declarations: [\n        CreateUpdateLayoutComponent\n    ],\n    imports: [\n        CommonModule,\n        FormsModule,\n        ReactiveFormsModule,\n        MatIconModule,\n        MatFormFieldModule,\n        MatButtonModule,\n        MatInputModule,\n        MatTooltipModule,\n        MatDialogModule,\n        MatSelectModule\n    ]\n})\nexport class CreateUpdateLayoutModule { }\n","import { Component, Inject, OnInit } from '@angular/core';\nimport { FormArray, FormBuilder, FormGroup, Validators } from '@angular/forms';\nimport { MAT_DIALOG_DATA, MatDialogRef } from '@angular/material/dialog';\n\nimport { isEqual } from 'lodash';\n\nimport { Parameter, ParameterM } from '../../../../../model/parameter.model';\n\nimport { DeviceController } from '../../../../../controller/device.controller';\n\nimport { SourceService } from '../../../../../service/source.service';\nimport { ParameterService } from '../../../../../service/parameter.service';\n\n// tsc-library\nimport { InvalidForm, MaterialFormFieldAppearance, ButtonLabelEnum, DialogEnum, FormAction, PageTitleEnum, ResponseM, Static, StaticI, FormErrorEnum, COMMON_CONSTANT, TSCCommonService } from '@library/tsc-common';\nimport { StorageService } from '@library/storage-service';\nimport { ToastrService, ToastrColor, ToastrTitle } from '@library/toastr-service';\n// /tsc-library/\n\n@Component({\n    selector: 'lib-source-load',\n    templateUrl: './source-load.component.html',\n    styles: [\n    ]\n})\nexport class SourceLoadComponent implements OnInit {\n\n    COMMON_CONSTANT = COMMON_CONSTANT;\n\n    MaterialFormFieldAppearance = MaterialFormFieldAppearance;\n    ButtonLabelEnum = ButtonLabelEnum;\n    DialogEnum = DialogEnum;\n    FormActionEnum = FormAction;\n    PageTitleEnum = PageTitleEnum;\n    FormErrorEnum = FormErrorEnum;\n\n    orgID: any;\n    layoutID: any;\n    entityID: any;\n    deviceInfo: any;\n    deviceParameter: any;\n    updateFromDialog: any;\n    action: any;\n    intialObject: any;\n    isEqual: boolean = true;\n    desiredMappingArray: any[];\n\n    parameterM = [new Parameter()];\n    paramLabel: any;\n\n    sourceType = [new Static()];\n    loadType = [new Static()];\n\n    infoMessage: string = 'Include source or load category and their type when mapping devices for type meters!';\n    warningMessage: string = 'Please add either source or load type when mapping devices for every parameter!';\n\n    sourceLoadFG: FormGroup;\n\n    constructor(\n        public dialogRef: MatDialogRef<SourceLoadComponent>,\n        @Inject(MAT_DIALOG_DATA) public data,\n        private sourceLoadFB: FormBuilder,\n        private deviceController: DeviceController,\n        private sourceService: SourceService,\n        private storageService: StorageService,\n        private toastrService: ToastrService,\n        private parameterService: ParameterService,\n        private tscCommonService: TSCCommonService,\n    ) {\n        this.layoutID = data['layoutID'];\n        this.entityID = data['entityID'];\n        this.deviceInfo = data['deviceInfo'];\n        this.deviceParameter = data['deviceInfo']['parameter'];\n        this.updateFromDialog = data['updateFromDialog'];\n        this.dialogRef.disableClose = true;\n    }\n\n    ngOnInit(): void {\n        this.orgID = this.storageService.getStorage('currentOrgID');\n\n        this.getParameterByOrgID();\n\n        this.getSourceConsumerType(\"source\")\n            .then(app => {\n                this.sourceType = app;\n            })\n\n        this.getSourceConsumerType(\"consumer\")\n            .then(app => {\n                this.loadType = app;\n            })\n\n        this.sourceLoadFGInit();\n        this.deviceParameter.forEach(param => {\n            this.addParameterToFormArray(param);\n        });\n\n        if (this.deviceInfo && this.deviceInfo.mappingRecords && this.deviceInfo.mappingRecords.length == 0) {\n            this.action = FormAction.ADD;\n        } else {\n            this.action = FormAction.UPDATE;\n            this.desiredMappingArray = this.makeDesiredMappingArray();\n            this.patchSourceLoadFG();\n            this.updateFormControlsState();\n        }\n\n        this.intialObject = this.sourceLoadFG.value;\n\n        this.sourceLoadFG.valueChanges.subscribe(() => {\n\n            this.isEqual = isEqual(this.intialObject, this.sourceLoadFG.value);\n\n            if (this.action == FormAction.UPDATE) {\n                this.updateDesiredMappingArray();\n            }\n        });\n    }\n\n    async getParameterByOrgID() {\n        this.parameterM = <ParameterM[]>await this.parameterService.getParameterByOrgID(this.orgID);\n    }\n\n    getParameterLabel(paramID) {\n        const parameter = this.tscCommonService.getUniqueObject(this.parameterM, 'id', paramID);\n        return parameter ? parameter.label : '';\n    }\n\n    async getSourceConsumerType(type: string): Promise<StaticI[]> {\n        const requestData = {\n            type: type\n        };\n\n        const result = await this.sourceService.getSourceConsumerType(this.orgID, requestData);\n        return result;\n    }\n\n    sourceLoadFGInit() {\n        this.sourceLoadFG = this.sourceLoadFB.group({\n            parameterMappingRecord: this.sourceLoadFB.array([])\n        });\n    }\n\n    addParameterToFormArray(param: any) {\n        const parameterFG = this.sourceLoadFB.group({\n            parameterID: [param.id],\n            isSource: [false],\n            sourceType: [{ value: '', disabled: true }, Validators.required],\n            isLoad: [false],\n            loadType: [{ value: '', disabled: true }, Validators.required]\n        });\n        this.parameterMappingRecordFA.push(parameterFG);\n    }\n\n    get parameterMappingRecordFA(): FormArray {\n        return this.sourceLoadFG.get('parameterMappingRecord') as FormArray;\n    }\n\n    addSourceType(event: any, index: number) {\n        const isSource = this.parameterMappingRecordFA.at(index).get('isSource');\n        isSource.setValue(event.checked);\n\n        const sourceTypeControl = this.parameterMappingRecordFA.at(index).get('sourceType');\n        if (isSource.value) {\n            sourceTypeControl.enable();\n            sourceTypeControl.setValidators([Validators.required]);\n        } else {\n            sourceTypeControl.disable();\n            sourceTypeControl.clearValidators();\n            sourceTypeControl.reset('');\n        }\n\n        sourceTypeControl.updateValueAndValidity();\n    }\n\n    addLoadType(event: any, index: number) {\n        const isLoad = this.parameterMappingRecordFA.at(index).get('isLoad');\n        isLoad.setValue(event.checked);\n\n        const loadTypeControl = this.parameterMappingRecordFA.at(index).get('loadType');\n        if (isLoad.value) {\n            loadTypeControl.enable();\n            loadTypeControl.setValidators([Validators.required]);\n        } else {\n            loadTypeControl.disable();\n            loadTypeControl.clearValidators();\n            loadTypeControl.reset('');\n        }\n\n        loadTypeControl.updateValueAndValidity();\n    }\n\n    makeDesiredMappingArray(): any[] {\n        const mappingArray: any[] = [];\n\n        if (this.action == FormAction.ADD) {\n            this.parameterMappingRecordFA.controls.forEach((parameter, index) => {\n                const parameterID = parameter.get('parameterID').value;\n                const mapping = [];\n\n                const isSource = parameter.get('isSource').value;\n                const sourceType = parameter.get('sourceType').value || '';\n                if (isSource) {\n                    mapping.push({\n                        mappingID: null,\n                        type: 'SOURCE',\n                        value: sourceType\n                    });\n                }\n\n                const isLoad = parameter.get('isLoad').value;\n                const loadType = parameter.get('loadType').value || '';\n                if (isLoad) {\n                    mapping.push({\n                        mappingID: null,\n                        type: 'LOAD',\n                        value: loadType\n                    });\n                }\n\n                if (mapping.length > 0) {\n                    mappingArray.push({\n                        parameterID: parameterID,\n                        mapping: mapping\n                    });\n                }\n            });\n        } else if (this.action == FormAction.UPDATE) {\n            if (this.deviceInfo.mappingRecords) {\n                this.deviceInfo.mappingRecords.forEach((record) => {\n                    const parameterID = record.parameterID;\n                    const mapping = record.mapping?.map((mapping) => {\n                        return {\n                            mappingID: mapping.mappingID || null,\n                            type: mapping.type || '',\n                            value: mapping.value || ''\n                        };\n                    }) || [];\n\n                    mappingArray.push({\n                        parameterID: parameterID,\n                        mapping: mapping\n                    });\n                });\n            }\n        }\n        return mappingArray;\n    }\n\n    patchSourceLoadFG() {\n        this.desiredMappingArray.forEach((mappingObject) => {\n            const parameterID = mappingObject.parameterID;\n            const parameterFormControl = this.parameterMappingRecordFA.controls.find(formControl => formControl.get('parameterID').value == parameterID);\n            if (parameterFormControl) {\n                const mapping = mappingObject.mapping;\n                const isSource = mapping.some(value => value.type == 'SOURCE');\n                const isLoad = mapping.some(value => value.type == 'LOAD');\n                const sourceType = mapping.find(value => value.type == 'SOURCE')?.value || '';\n                const loadType = mapping.find(value => value.type == 'LOAD')?.value || '';\n\n                parameterFormControl.patchValue({\n                    isSource,\n                    isLoad,\n                    sourceType,\n                    loadType\n                });\n            }\n        });\n    }\n\n    updateFormControlsState() {\n        this.parameterMappingRecordFA.controls.forEach((parameter, index) => {\n            const isSource = parameter.get('isSource').value;\n            const sourceTypeControl = parameter.get('sourceType');\n            if (isSource) {\n                sourceTypeControl.enable();\n                sourceTypeControl.setValidators([Validators.required]);\n            } else {\n                sourceTypeControl.disable();\n                sourceTypeControl.clearValidators();\n                sourceTypeControl.reset('');\n            }\n            sourceTypeControl.updateValueAndValidity();\n\n            const isLoad = parameter.get('isLoad').value;\n            const loadTypeControl = parameter.get('loadType');\n            if (isLoad) {\n                loadTypeControl.enable();\n                loadTypeControl.setValidators([Validators.required]);\n            } else {\n                loadTypeControl.disable();\n                loadTypeControl.clearValidators();\n                loadTypeControl.reset('');\n            }\n            loadTypeControl.updateValueAndValidity();\n        });\n    }\n\n    updateDesiredMappingArray(): any[] {\n        const mappingArray: any[] = [];\n\n        this.parameterMappingRecordFA.controls.forEach((parameter) => {\n            const parameterID = parameter.get('parameterID').value;\n            const mapping = [];\n\n            const isSource = parameter.get('isSource').value;\n            const sourceType = parameter.get('sourceType').value || '';\n            if (isSource) {\n                mapping.push({\n                    mappingID: null,\n                    type: 'SOURCE',\n                    value: sourceType\n                });\n            }\n\n            const isLoad = parameter.get('isLoad').value;\n            const loadType = parameter.get('loadType').value || '';\n            if (isLoad) {\n                mapping.push({\n                    mappingID: null,\n                    type: 'LOAD',\n                    value: loadType\n                });\n            }\n\n            if (mapping.length > 0) {\n                mappingArray.push({\n                    parameterID: parameterID,\n                    mapping: mapping\n                });\n            }\n        });\n\n        return mappingArray;\n    }\n\n    validateSourceOrLoad() {\n        const formControls = this.parameterMappingRecordFA.controls;\n\n        const validFormControls = formControls.filter(control => {\n            const isSource = control.get('isSource').value;\n            const isLoad = control.get('isLoad').value;\n\n            return isSource || isLoad;\n        });\n\n        if (validFormControls.length == formControls.length) {\n            return true;\n        } else {\n            this.toastrService.openToast(ToastrTitle.WARNING, this.warningMessage, ToastrColor.WARNING);\n            return false;\n        }\n    }\n\n    sourceLoadSubmit() {\n\n        if (this.validateSourceOrLoad()) {\n            if (this.updateFromDialog == true) {\n                this.desiredMappingArray = this.updateDesiredMappingArray();\n\n                if (this.desiredMappingArray.length == 0) {\n                    this.toastrService.openToast(ToastrTitle.WARNING, this.warningMessage, ToastrColor.WARNING);\n                } else {\n                    if (this.sourceLoadFG.invalid) {\n                        this.sourceLoadFG.markAllAsTouched();\n                        this.toastrService.openToast(InvalidForm.INVALID_FORM_TITLE, InvalidForm.INVALID_FORM_MESSAGE, ToastrColor.ERROR);\n                        return;\n                    }\n\n                    this.deviceController.updateSourceLoad(this.orgID, this.layoutID, this.entityID, this.deviceInfo.id, this.desiredMappingArray).subscribe((updateRes: ResponseM) => {\n                        this.dialogRef.close({\n                            result: DialogEnum.SUCCESS_DR,\n                            action: FormAction.UPDATE\n                        })\n                    },\n                        error => {\n                            console.log('error in updateSourceLoad() - ', error);\n                        });\n                }\n            } else {\n                if (this.action == FormAction.ADD) {\n                    this.desiredMappingArray = this.makeDesiredMappingArray();\n                } else if (this.action == FormAction.UPDATE) {\n                    this.desiredMappingArray = this.updateDesiredMappingArray();\n\n                    if (this.desiredMappingArray.length == 0) {\n                        this.toastrService.openToast(ToastrTitle.INFO, this.infoMessage, ToastrColor.INFO);\n                    }\n                }\n\n                if (this.sourceLoadFG.invalid) {\n                    this.sourceLoadFG.markAllAsTouched();\n                    this.toastrService.openToast(InvalidForm.INVALID_FORM_TITLE, InvalidForm.INVALID_FORM_MESSAGE, ToastrColor.ERROR);\n                    return;\n                }\n\n                this.dialogRef.close({\n                    result: DialogEnum.SUCCESS_DR,\n                    sourceLoadMappingRes: this.desiredMappingArray\n                })\n            }\n        }\n    }\n\n    cancel() {\n        if (this.updateFromDialog == true) {\n            if (this.updateDesiredMappingArray().length == 0) {\n                this.toastrService.openToast(ToastrTitle.WARNING, this.warningMessage, ToastrColor.WARNING);\n            } else {\n                this.dialogRef.close({\n                    result: DialogEnum.SUCCESS_DR,\n                    action: FormAction.CANCEL\n                })\n            }\n        } else {\n            if (this.action == FormAction.ADD) {\n                this.toastrService.openToast(ToastrTitle.INFO, this.infoMessage, ToastrColor.INFO);\n            }\n\n            let sourceLoadMappingRes = this.action == FormAction.ADD ? [] : this.makeDesiredMappingArray();\n\n            this.dialogRef.close({\n                result: DialogEnum.CLOSE_DR,\n                sourceLoadMappingRes: sourceLoadMappingRes\n            })\n        }\n    }\n\n}","<div mat-dialog-title>\n    <strong class=\"dialogTitle\">\n        {{ action == FormActionEnum.ADD ? PageTitleEnum.ADD : PageTitleEnum.UPDATE }} Source/Consumer\n    </strong>\n</div>\n<div class=\"matDialogContent\" mat-dialog-content>\n    <form [formGroup]=\"sourceLoadFG\">\n        <ng-container formArrayName=\"parameterMappingRecord\">\n            <div class=\"row\">\n                <div class=\"col-sm-12 mb-3\" *ngFor=\"let param of parameterMappingRecordFA.controls; let i = index\">\n                    <ng-container [formGroupName]=\"i\">\n                        <mat-card class=\"border card cardOverwrite\">\n                            <div class=\"cardTitle\">\n                                {{ getParameterLabel(param.get('parameterID').value) }}\n                            </div>\n                            <div class=\"row mt-2\">\n                                <div class=\"col-sm-4\">\n                                    <mat-checkbox (change)=\"addSourceType($event, i)\" formControlName=\"isSource\">Source</mat-checkbox>\n                                </div>\n                                <div class=\"col-sm-8\">\n                                    <mat-form-field class=\"matFieldWidth100\" [appearance]=\"MaterialFormFieldAppearance.FORM_FIELD_APPEARANCE\">\n                                        <mat-label>Select source type</mat-label>\n\n                                        <mat-select formControlName=\"sourceType\" [disabled]=\"!parameterMappingRecordFA.controls[i].get('isSource').value\"\n                                            required>\n                                            <ng-container *ngIf=\"sourceType && sourceType.length > 0 && sourceType[0]['id']; else noSourceType\">\n                                                <mat-option *ngFor=\"let type of sourceType\" [value]=\"type.id\">\n                                                    {{ type.name }}\n                                                </mat-option>\n                                            </ng-container>\n                                            <ng-template #noSourceType>\n                                                <mat-option disabled>\n                                                    {{ COMMON_CONSTANT.NO_DATA_FOUND }}\n                                                </mat-option>\n                                            </ng-template>\n                                        </mat-select>\n\n                                        <mat-error *ngIf=\"this.parameterMappingRecordFA.controls[i].get('sourceType').hasError('required')\">\n                                            {{ FormErrorEnum.REQUIRED }}\n                                        </mat-error>\n                                    </mat-form-field>\n                                </div>\n                                </div>\n                            <div class=\"row mt-2\">\n                                <div class=\"col-sm-4\">\n                                    <mat-checkbox (change)=\"addLoadType($event, i)\" formControlName=\"isLoad\">Load</mat-checkbox>\n                                </div>\n                                <div class=\"col-sm-8\">\n                                    <mat-form-field class=\"matFieldWidth100\" [appearance]=\"MaterialFormFieldAppearance.FORM_FIELD_APPEARANCE\">\n                                        <mat-label>Select consumer type</mat-label>\n\n                                        <mat-select formControlName=\"loadType\" [disabled]=\"!parameterMappingRecordFA.controls[i].get('isLoad').value\"\n                                            required>\n                                            <ng-container *ngIf=\"loadType && loadType.length > 0 && loadType[0]['id']; else noLoadType\">\n                                                <mat-option *ngFor=\"let type of loadType\" [value]=\"type.id\">\n                                                    {{ type.name }}\n                                                </mat-option>\n                                            </ng-container>\n                                            <ng-template #noLoadType>\n                                                <mat-option disabled>\n                                                    {{ COMMON_CONSTANT.NO_DATA_FOUND }}\n                                                </mat-option>\n                                            </ng-template>\n                                        </mat-select>\n\n                                        <mat-error *ngIf=\"this.parameterMappingRecordFA.controls[i].get('loadType').hasError('required')\">\n                                            {{ FormErrorEnum.REQUIRED }}\n                                        </mat-error>\n                                    </mat-form-field>\n                                </div>\n                            </div>\n                        </mat-card>\n                    </ng-container>\n                </div>\n            </div>\n        </ng-container>\n    </form>\n</div>\n<div mat-dialog-footer align=\"end\">\n    <button class=\"btn btn-sm btn-secondary me-2\" type=\"button\" (click)=\"cancel()\">\n        {{ ButtonLabelEnum.CANCEL_BTN_LABEL }}\n    </button>\n    <button class=\"btn btn-sm btn-success\" type=\"submit\" [ngClass]=\"{'disabled': isEqual}\" (click)=\"sourceLoadSubmit()\">\n        {{ action == FormActionEnum.ADD ? ButtonLabelEnum.ADD_BTN_LABEL : ButtonLabelEnum.UPDATE_BTN_LABEL }}\n    </button>\n</div>","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\n\nimport { MatCardModule } from '@angular/material/card';\nimport { MatIconModule } from '@angular/material/icon';\nimport { MatButtonModule } from '@angular/material/button';\nimport { MatInputModule } from '@angular/material/input';\nimport { MatTooltipModule } from '@angular/material/tooltip';\nimport { MatFormFieldModule } from '@angular/material/form-field';\nimport { MatDialogModule } from '@angular/material/dialog';\nimport { MatSelectModule } from '@angular/material/select';\nimport { MatCheckboxModule } from '@angular/material/checkbox';\n\nimport { SourceLoadComponent } from './source-load.component';\n\n@NgModule({\n    declarations: [\n        SourceLoadComponent\n    ],\n    imports: [\n        CommonModule,\n        FormsModule,\n        ReactiveFormsModule,\n        MatCardModule,\n        MatIconModule,\n        MatFormFieldModule,\n        MatButtonModule,\n        MatInputModule,\n        MatTooltipModule,\n        MatDialogModule,\n        MatSelectModule,\n        MatCheckboxModule\n    ]\n})\nexport class SourceLoadModule { }","import { Component, ElementRef, OnInit, ViewChild } from '@angular/core';\nimport { Router } from '@angular/router';\n\nimport { MatSort } from '@angular/material/sort';\nimport { MatPaginator } from '@angular/material/paginator';\nimport { MatDialog } from '@angular/material/dialog';\n\nimport { merge, fromEvent, of as observableOf } from 'rxjs';\nimport { map, startWith, switchMap, catchError } from \"rxjs/operators\";\n\nimport { faPlus, faEllipsisV } from '@fortawesome/free-solid-svg-icons';\n\nimport { CreateUpdateLayoutComponent } from '../_dialog/create-update/layout/layout.component';\n\n// tsc-library\nimport { StorageService } from '@library/storage-service';\nimport { CommonEvent, DialogEnum, DialogOneComponent, DialogOneEnum, PageM, SearchBarOneComponent, TABLE_CONSTANT, ButtonLabelEnum } from '@library/tsc-common';\nimport { LayoutM, LayoutController } from '@library/layout-service';\n// /tsc-library/\n\n@Component({\n    selector: 'app-page',\n    templateUrl: './page.component.html',\n    styleUrls: ['./page.component.scss']\n})\n\nexport class PageComponent implements OnInit {\n    TABLE_CONSTANT = TABLE_CONSTANT;\n    ButtonLabelEnum = ButtonLabelEnum;\n\n    faPlus = faPlus;\n    faEllipsisV = faEllipsisV;\n\n    orgID: any;\n    displayedColumn: string[] = ['id', 'name', 'description', 'option'];\n    resultLength: number = 0;\n    dataSource: any[] = [];\n    searchFlag: boolean = false;\n    searchValue: string;\n    searchArr: any[] = [];\n\n    @ViewChild('sort') sort: MatSort;\n    @ViewChild('paginator') paginator: MatPaginator;\n    @ViewChild('refreshBtn') refreshBtn: ElementRef;\n    @ViewChild('searchBar') searchBar: SearchBarOneComponent;\n\n    constructor(\n        private router: Router,\n        private storageService: StorageService,\n        private layoutController: LayoutController,\n        private commonEvent: CommonEvent,\n        private dialog: MatDialog,\n    ) { }\n\n    ngOnInit(): void {\n        this.orgID = this.storageService.getStorage('currentOrgID');\n    }\n\n    ngAfterViewInit() {\n        merge(\n            this.paginator.page,\n            this.sort.sortChange,\n            fromEvent(this.refreshBtn.nativeElement, 'click')\n        ).pipe(\n            startWith({}),\n            switchMap((): any => {\n                this.searchArr = [];\n                if (this.searchFlag) {\n                    this.searchArr.push('name:' + this.searchValue)\n                }\n\n                return this.layoutController.getLayoutByPage(\n                    this.paginator.pageIndex,\n                    this.paginator.pageSize,\n                    this.sort.active,\n                    this.sort.direction,\n                    this.searchArr,\n                    this.orgID\n                ).pipe(catchError(() => observableOf(null)));\n            }),\n            map((response: PageM<LayoutM>): any => {\n                if (response == null) {\n                    this.resultLength = 0;\n                    return [];\n                }\n                this.resultLength = response[\"totalCount\"];\n                return response[\"records\"];\n            })\n        ).subscribe((dataSource) => {\n            this.dataSource = dataSource;\n        });\n    }\n\n    searchFn(value: string) {\n        this.searchFlag = true;\n        this.searchValue = value;\n        if (value.length == 0) {\n            this.resetSearch();\n        } else {\n            this.paginator.pageIndex = 0;\n        }\n        this.refreshBtn.nativeElement.click();\n    }\n\n    resetSearch() {\n        this.searchFlag = false;\n        this.searchBar.searchClear();\n    }\n\n    navigateToViewPage(id) {\n        this.router.navigate([`layout/${id}/list`]);\n    }\n\n    openCreateUpdateLayoutDialog(action, layoutID) {\n        let dialogRef;\n        if (action == 'create') {\n            dialogRef = this.dialog.open(CreateUpdateLayoutComponent, {\n                data: {\n                    action: action\n                },\n                minWidth: '550px',\n                maxWidth: '550px'\n            });\n            dialogRef.afterClosed().subscribe((dialogRes) => {\n                if (dialogRes.result == DialogEnum.SUCCESS_DR) {\n                    // Emit the layoutChange event\n                    this.commonEvent.layoutChange.next('YES');\n\n                    this.router.navigate([`layout/${dialogRes.layoutID}/list`]);\n                }\n            })\n        } else {\n            dialogRef = this.dialog.open(CreateUpdateLayoutComponent, {\n                data: {\n                    action: action,\n                    layoutID: layoutID\n                },\n                minWidth: '550px',\n                maxWidth: '550px'\n            });\n            dialogRef.afterClosed().subscribe((dialogRes) => {\n                if (dialogRes.result == DialogEnum.SUCCESS_DR) {\n                    // Emit the layoutChange event\n                    this.commonEvent.layoutChange.next('YES');\n\n                    window.location.reload();\n                }\n            })\n        }\n    }\n\n    openDeleteLayoutDialog(layoutID, layoutName) {\n        const dialog = this.dialog.open(DialogOneComponent, {\n            minWidth: '450px',\n            maxWidth: '450px',\n            data: {\n                type: DialogOneEnum.DELETE,\n                icon: 'dangerous',\n                header: 'Delete layout?',\n                body: '<b>' + layoutName + '</b>' + ' will be deleted permanently.</br></br>Are you sure you want to continue?',\n                buttonOne: ButtonLabelEnum.CANCEL_BTN_LABEL,\n                buttonTwo: ButtonLabelEnum.DELETE_BTN_LABEL\n            }\n        });\n        dialog.afterClosed().subscribe(res => {\n            if (res) {\n                this.deleteLayout(layoutID);\n            }\n        })\n    }\n\n    deleteLayout(layoutID) {\n        this.layoutController.deleteLayout(this.orgID, layoutID).subscribe((deleteRes) => {\n            // Emit the layoutChange event\n            this.commonEvent.layoutChange.next('YES');\n\n            this.refreshBtn.nativeElement.click();\n        });\n    }\n}","<div class=\"card main-card cardOverwrite h100\">\n    <div class=\"headerContainer\">\n        <div class=\"headerLeftContainer\">\n            <div class=\"pageTitle\">Layout</div>\n        </div>\n        <div class=\"headerRightContainer\">\n            <div class=\"headerRightContainerInner\">\n                <lib-search-bar-one class=\"me-3\" #searchBar searchBy=\"name\" (emitSearch)=\"searchFn($event)\">\n                </lib-search-bar-one>\n                <a class=\"btn btn-sm btn-success btnBase\" matRipple (click)=\"openCreateUpdateLayoutDialog('create', null)\">\n                    <fa-icon [icon]=\"faPlus\"></fa-icon>&nbsp; Layout\n                </a>\n            </div>\n        </div>\n    </div>\n\n    <button #refreshBtn class=\"d-none\"></button>\n\n    <table mat-table [dataSource]=\"dataSource\" #sort=\"matSort\" matSort matSortActive=\"id\" matSortDirection=\"asc\"\n        matSortDisableClear>\n\n        <ng-container matColumnDef=\"id\">\n            <th class=\"columnWidth1 px-3\" mat-header-cell *matHeaderCellDef mat-sort-header disableClear>\n                ID\n            </th>\n            <td class=\"columnWidth1\" mat-cell *matCellDef=\"let row\" (click)=\"navigateToViewPage(row['id'])\">\n                {{ row['id'] }}\n            </td>\n        </ng-container>\n\n        <ng-container matColumnDef=\"name\">\n            <th class=\"columnWidth2 px-3\" mat-header-cell *matHeaderCellDef> Name </th>\n            <td class=\"columnWidth2 px-3\" mat-cell *matCellDef=\"let row\"\n                [matTooltip]=\"row?.['name']?.length>24? row['name']: ''\" matTooltipPosition=\"above\"\n                matTooltipClass=\"nameTooltip\" (click)=\"navigateToViewPage(row['id'])\">\n                {{ row?.['name'] | dotdotdot:24 }}\n            </td>\n        </ng-container>\n\n        <ng-container matColumnDef=\"description\">\n            <th class=\"columnWidth2 px-3\" mat-header-cell *matHeaderCellDef> Description </th>\n            <td class=\"columnWidth2 px-3\" mat-cell *matCellDef=\"let row\"\n                [matTooltip]=\"row?.['description']?.length>24? row['description']: ''\" matTooltipPosition=\"above\"\n                matTooltipClass=\"nameTooltip\" (click)=\"navigateToViewPage(row['id'])\">\n                {{ row?.['description'] | dotdotdot:24 }}\n            </td>\n        </ng-container>\n\n        <ng-container matColumnDef=\"option\">\n            <th class=\"columnWidth3\" mat-header-cell *matHeaderCellDef> Action </th>\n            <td class=\"columnWidth3 text-center\" mat-cell *matCellDef=\"let row\">\n                <div class=\"d-flex align-items-center\">\n                    <div class=\"btn-group\" ngbDropdown placement=\"left\">\n                        <button type=\"button\" ngbDropdownToggle class=\"dropdown-after dropdownAfter btn\">\n                            <fa-icon [icon]=\"faEllipsisV\"></fa-icon>\n                        </button>\n                        <div ngbDropdownMenu>\n                            <button class=\"dropdown-item\" (click)=\"openCreateUpdateLayoutDialog('update', row.id)\">\n                                {{ ButtonLabelEnum.UPDATE_BTN_LABEL }}\n                            </button>\n                            <!-- <button class=\"btn btn-outline-danger rounded-0 dropdown-item\" (click)=\"openDeleteLayoutDialog(row.id, row.name)\">\n                                {{ ButtonLabelEnum.DELETE_BTN_LABEL }}\n                            </button> -->\n                        </div>\n                    </div>\n                </div>\n            </td>\n        </ng-container>\n\n        <tr mat-header-row *matHeaderRowDef=\"displayedColumn\"></tr>\n        <tr mat-row *matRowDef=\"let row; columns: displayedColumn;\" class=\"data-row\"></tr>\n\n        <tr class=\"mat-row\" *matNoDataRow>\n            <td class=\"mat-cell text-center\" [attr.colspan]=\"displayedColumn.length\">\n                {{ TABLE_CONSTANT.TABLE_NO_DATA }}\n            </td>\n        </tr>\n    </table>\n\n    <mat-paginator #paginator class=\"roundedBorder\" showFirstLastButtons [length]=\"resultLength\"\n        [pageSize]=\"TABLE_CONSTANT.DEFAULT_PAGE_SIZE\" [pageSizeOptions]=\"TABLE_CONSTANT.PAGE_SIZE_OPTION\">\n    </mat-paginator>\n</div>","import { NgModule } from '@angular/core';\nimport { RouterModule, Routes } from '@angular/router';\n\nimport { PageComponent } from './page.component';\n\nconst routes: Routes = [\n    {\n        path: '',\n        component: PageComponent\n    }\n];\n\n@NgModule({\n    imports: [RouterModule.forChild(routes)],\n    exports: [RouterModule]\n})\nexport class PageRoutingModule { }","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\n\nimport { MatIconModule } from '@angular/material/icon';\nimport { MatButtonModule } from '@angular/material/button';\nimport { MatRippleModule } from '@angular/material/core';\nimport { MatTableModule } from '@angular/material/table';\nimport { MatPaginatorModule } from '@angular/material/paginator';\nimport { MatSortModule } from '@angular/material/sort';\nimport { MatDialogModule } from '@angular/material/dialog';\nimport { MatTooltipModule } from '@angular/material/tooltip';\n\nimport { NgbModule } from '@ng-bootstrap/ng-bootstrap';\nimport { FontAwesomeModule } from '@fortawesome/angular-fontawesome';\n\nimport { PageRoutingModule } from './page-routing.module';\nimport { PageComponent } from './page.component';\n\n// tsc-library\nimport { SearchBarOneModule, EllipsisPipeModule } from '@library/tsc-common';\n// /tsc-library/\n\n\n@NgModule({\n    declarations: [\n        PageComponent\n    ],\n    imports: [\n        CommonModule,\n        PageRoutingModule,\n        SearchBarOneModule,\n        EllipsisPipeModule,\n        NgbModule,\n        FontAwesomeModule,\n        MatIconModule,\n        MatButtonModule,\n        MatRippleModule,\n        MatTableModule,\n        MatPaginatorModule,\n        MatSortModule,\n        MatDialogModule,\n        MatTooltipModule\n    ]\n})\nexport class PageModule { }\n","import { Component, OnInit } from '@angular/core';\nimport { ActivatedRoute } from '@angular/router';\n\nimport { EChartsOption } from 'echarts';\n\nimport { ParameterEntity, ParameterEntityM } from '../../../model/entity.model';\n\nimport { EntityService } from '../../../service/entity.service';\n\n// tsc-library\nimport { StorageService } from '@library/storage-service';\n// /tsc-library/\n\n@Component({\n    selector: 'app-chart',\n    templateUrl: './chart.component.html',\n    styles: [\n    ]\n})\nexport class ChartComponent implements OnInit {\n\n    orgID: any;\n    layoutID: any;\n\n    entityDeviceM = new ParameterEntity();\n\n    allowUpdateEntityTree: boolean = false;\n    chartDataOption: EChartsOption;\n\n    constructor(\n        private activatedRoute: ActivatedRoute,\n        private storageService: StorageService,\n        private entityService: EntityService,\n    ) { }\n\n    ngOnInit(): void {\n        this.orgID = this.storageService.getStorage('currentOrgID');\n\n        this.activatedRoute.parent.parent.paramMap.subscribe((params) => {\n            this.layoutID = params.get('layoutID');\n\n            this.getEntitiesWithDevicesByLayoutID();\n        });\n    }\n\n    async getEntitiesWithDevicesByLayoutID() {\n        let requestBody = {\n            'entityType': ['ALL']\n        };\n\n        this.entityDeviceM = <ParameterEntityM>await this.entityService.getEntitiesWithDevicesByLayoutID(this.orgID, this.layoutID, requestBody, 'NO');\n\n        if (this.entityDeviceM) {\n            this.drawChart();\n        }\n    }\n\n    drawChart() {\n        const convertNode = (node) => ({\n            name: node.name,\n            children: node.children ? node.children.map(convertNode) : [],\n            type: node.type\n        });\n        const chartData = convertNode(this.entityDeviceM);\n\n        this.chartDataOption = {\n            tooltip: {\n                trigger: 'item',\n                triggerOn: 'mousemove'\n            },\n            series: [\n                {\n                    type: 'tree',\n                    id: 0,\n                    name: 'Device',\n                    data: [chartData],\n                    top: '10%',\n                    left: '15%',\n                    bottom: '2%',\n                    right: '15%',\n                    symbolSize: 7,\n                    edgeShape: 'polyline',\n                    edgeForkPosition: '63%',\n                    initialTreeDepth: 999999,\n                    lineStyle: {\n                        width: 2\n                    },\n                    label: {\n                        backgroundColor: '#fff',\n                        position: 'left',\n                        verticalAlign: 'middle',\n                        align: 'right'\n                    },\n                    leaves: {\n                        label: {\n                            position: 'right',\n                            verticalAlign: 'middle',\n                            align: 'left',\n                            // color: 'green',\n                        }\n                    },\n                    emphasis: {\n                        focus: 'descendant'\n                    },\n                    expandAndCollapse: true,\n                    animationDuration: 550,\n                    animationDurationUpdate: 750\n                }\n            ]\n        }\n\n    }\n\n}\n","<div class=\"card main-card cardOverwrite h100\">\n    <div class=\"card-body\">\n        <div class=\"row\">\n            <div class=\"col-sm-12\">\n                <div echarts [options]=\"chartDataOption\"></div>\n            </div>\n        </div>\n    </div>\n</div>","import { NgModule } from '@angular/core';\nimport { RouterModule, Routes } from '@angular/router';\n\nimport { ChartComponent } from './chart.component';\n\nconst routes: Routes = [\n    {\n        path: '',\n        component: ChartComponent\n    }\n];\n\n@NgModule({\n    imports: [RouterModule.forChild(routes)],\n    exports: [RouterModule]\n})\nexport class ChartRoutingModule { }\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\n\nimport { NgxEchartsModule } from 'ngx-echarts';\n\nimport { ChartRoutingModule } from './chart-routing.module';\nimport { ChartComponent } from './chart.component';\n\n@NgModule({\n    declarations: [\n        ChartComponent\n    ],\n    imports: [\n        CommonModule,\n        ChartRoutingModule,\n        NgxEchartsModule.forRoot({\n            echarts: () => import('echarts')\n        })\n    ]\n})\nexport class ChartModule { }","import { Component, OnInit } from '@angular/core';\nimport { ActivatedRoute, Router } from '@angular/router';\nimport { MatDialog } from '@angular/material/dialog';\n\nimport { ParameterEntity } from '../../../model/entity.model';\n\nimport { CreateUpdateEntityComponent } from '../_dialog/create-update/entity/entity.component';\n\nimport { EntityController } from '../../../controller/entity.controller';\n\n// tsc-library\nimport { StorageService } from '@library/storage-service';\nimport { ButtonLabelEnum, DialogEnum, DialogOneComponent, DialogOneEnum, ResponseM } from '@library/tsc-common';\n// /tsc-library/\n\n@Component({\n    selector: 'app-list',\n    templateUrl: './list.component.html',\n    styles: [\n    ]\n})\nexport class ListComponent implements OnInit {\n\n    orgID: any;\n    layoutID: any;\n\n    entities = [new ParameterEntity()];\n\n    constructor(\n        private router: Router,\n        private activatedRoute: ActivatedRoute,\n        private storageService: StorageService,\n        private entityController: EntityController,\n        private dialog: MatDialog,\n    ) { }\n\n    ngOnInit(): void {\n        this.orgID = this.storageService.getStorage('currentOrgID');\n\n        this.activatedRoute.parent.parent.paramMap.subscribe((params) => {\n            this.layoutID = params.get('layoutID');\n\n            this.getEntitiesByLayoutID();\n        });\n    }\n\n    getEntitiesByLayoutID() {\n        this.entityController.getEntitiesByLayoutID(this.orgID, this.layoutID)\n            .subscribe((entityTreeRes: any) => {\n                this.entities = entityTreeRes;\n            },\n                error => {\n                    console.log('error in getEntitiesByLayoutID() -', error);\n                });\n    }\n\n    hasContent(entity: any): boolean {\n        return entity && entity.children && entity.children.length > 0;\n    }\n\n    mapDevice(entityID) {\n        this.router.navigate([`layout/${this.layoutID}/entity/${entityID}/map-device/add`]);\n    }\n\n    viewMappedDevice(entityID) {\n        this.router.navigate([`layout/${this.layoutID}/entity/${entityID}/map-device/view`]);\n    }\n\n    openEntityDialog(entityID, action) {\n        const dialog = this.dialog.open(CreateUpdateEntityComponent,\n            {\n                data: {\n                    action: action,\n                    entityID: entityID,\n                    layoutID: this.layoutID,\n                },\n                minWidth: '500px',\n                maxWidth: '500px',\n            });\n        dialog.afterClosed()\n            .subscribe((result) => {\n                if (result == DialogEnum.SUCCESS_DR) {\n                    this.getEntitiesByLayoutID();\n                }\n            })\n    }\n\n    openDeleteDialog(entityID, entityName) {\n        const dialog = this.dialog.open(DialogOneComponent, {\n            minWidth: '450px',\n            maxWidth: '450px',\n            data: {\n                type: DialogOneEnum.DELETE,\n                icon: 'dangerous',\n                header: 'Delete entity?',\n                body: 'This will delete the entity <b>' + entityName + '</b> and all its children entities.</br></br>Are you sure you want to continue?',\n                buttonOne: ButtonLabelEnum.CANCEL_BTN_LABEL,\n                buttonTwo: ButtonLabelEnum.DELETE_BTN_LABEL\n            }\n        });\n        dialog.afterClosed().subscribe(res => {\n            if (res) {\n                this.deleteEntity(entityID);\n            }\n        })\n    }\n\n    deleteEntity(entityID) {\n        this.entityController.deleteEntity(this.orgID, this.layoutID, entityID).subscribe((deleteRes: ResponseM) => {\n            this.getEntitiesByLayoutID();\n        });\n    }\n\n}\n","<div class=\"card main-card cardOverwrite h100\">\n    <div class=\"card-body\">\n        <div class=\"row\">\n            <div class=\"col-sm-12\">\n                <!-- template call for entityTemplate -->\n                <mat-accordion>\n                    <ng-container *ngFor=\"let entity of entities\">\n                        <ng-container *ngTemplateOutlet=\"entityTemplate; \n                            context: {\n                                entity: entity,\n                                panelTitleClass: 'fw-bold',\n                                expansionPanelClass : 'cardBackgroundColor',\n                                expanded: hasContent(entity),\n                                allowUpdateDelete: false\n                            }\">\n                        </ng-container>\n                    </ng-container>\n                </mat-accordion>\n                <!-- /template call for entityTemplate/ -->\n\n                <!-- template for recursive entity -->\n                <ng-template #entityTemplate let-entity=\"entity\" let-panelTitleClass=\"panelTitleClass\"\n                    let-expansionPanelClass=\"expansionPanelClass\" let-expanded=\"expanded\" let-allowUpdateDelete=\"allowUpdateDelete\">\n                    <mat-expansion-panel class=\"mt-2 cardOverwrite\" [class]=\"expansionPanelClass\" [expanded]=\"expanded\"\n                        [disabled]=\"!hasContent(entity)\" [hideToggle]=\"!hasContent(entity)\">\n\n                        <mat-expansion-panel-header class=\"matAccRightAlignedHeader\">\n                            <mat-panel-title>\n                                <div class=\"d-flex align-items-center\">\n                                    <span [class]=\"panelTitleClass\">\n                                        {{ entity.name }}\n                                    </span> <span class=\"badge rounded-pill info ms-2\">\n                                        {{ entity.type }}\n                                    </span>\n                                </div>\n                            </mat-panel-title>\n                            <mat-panel-description class=\"float-end\">\n                                <span class=\"material-symbols-outlined text-primary me-3\" #tooltip=\"matTooltip\" matTooltipPosition=\"above\"\n                                    matTooltipClass=\"nameTooltip\" matTooltip=\"Add entity\"\n                                    (click)=\"openEntityDialog(entity.id, 'create'); $event.stopPropagation()\">\n                                    add_circle\n                                </span>\n                                <span class=\"material-symbols-outlined text-primary me-3\" #tooltip=\"matTooltip\" matTooltipPosition=\"above\"\n                                    matTooltipClass=\"nameTooltip\" matTooltip=\"Map device\" (click)=\"mapDevice(entity.id); $event.stopPropagation()\">\n                                    devices\n                                </span>\n                                <span class=\"material-symbols-outlined text-secondary me-3\" #tooltip=\"matTooltip\"\n                                    matTooltipPosition=\"above\" matTooltipClass=\"nameTooltip\" matTooltip=\"View mapped device\"\n                                    (click)=\"viewMappedDevice(entity.id); $event.stopPropagation()\">\n                                    visibility\n                                </span>\n                                <span class=\"material-symbols-outlined text-secondary me-3\" *ngIf=\"allowUpdateDelete\" #tooltip=\"matTooltip\"\n                                    matTooltipPosition=\"above\" matTooltipClass=\"nameTooltip\" matTooltip=\"Edit entity\"\n                                    (click)=\"openEntityDialog(entity.id, 'update'); $event.stopPropagation()\">\n                                    edit_square\n                                </span>\n                                <span class=\"material-symbols-outlined text-danger me-3\" *ngIf=\"allowUpdateDelete\" #tooltip=\"matTooltip\"\n                                    matTooltipPosition=\"above\" matTooltipClass=\"nameTooltip\" matTooltip=\"Delete entity\"\n                                    (click)=\"openDeleteDialog(entity.id, entity.name); $event.stopPropagation()\">\n                                    delete\n                                </span>\n                            </mat-panel-description>\n                        </mat-expansion-panel-header>\n\n                        <ng-container *ngIf=\"entity.children && entity.children.length > 0\">\n                            <ng-container *ngFor=\"let child of entity.children\">\n                                <ng-container *ngTemplateOutlet=\"entityTemplate; \n                                        context:{ \n                                            entity: child,\n                                            panelTitleClass: 'text-dark',\n                                            expansionPanelClass : 'border',\n                                            expanded: 'false',\n                                            allowUpdateDelete: true\n                                        }\">\n                                </ng-container>\n                            </ng-container>\n                        </ng-container>\n\n                    </mat-expansion-panel>\n                </ng-template>\n                <!-- /template for recursive entity/ -->\n            </div>\n        </div>\n    </div>\n</div>","import { NgModule } from '@angular/core';\nimport { RouterModule, Routes } from '@angular/router';\n\nimport { ListComponent } from './list.component';\n\nconst routes: Routes = [\n    {\n        path: '',\n        component: ListComponent\n    }\n];\n\n@NgModule({\n    imports: [RouterModule.forChild(routes)],\n    exports: [RouterModule]\n})\nexport class ListRoutingModule { }\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\n\nimport { MatCardModule } from '@angular/material/card';\nimport { MatIconModule } from '@angular/material/icon';\nimport { MatFormFieldModule } from '@angular/material/form-field';\nimport { MatButtonModule } from '@angular/material/button';\nimport { MatTooltipModule } from '@angular/material/tooltip';\nimport { MatDialogModule } from '@angular/material/dialog';\nimport { MatExpansionModule } from '@angular/material/expansion';\n\nimport { CreateUpdateEntityModule } from '../_dialog/create-update/entity/entity.module';\n\nimport { ListRoutingModule } from './list-routing.module';\nimport { ListComponent } from './list.component';\n\n@NgModule({\n    declarations: [\n        ListComponent\n    ],\n    imports: [\n        CommonModule,\n        ListRoutingModule,\n        CreateUpdateEntityModule,\n        FormsModule,\n        ReactiveFormsModule,\n        MatCardModule,\n        MatIconModule,\n        MatFormFieldModule,\n        MatButtonModule,\n        MatTooltipModule,\n        MatDialogModule,\n        MatExpansionModule\n    ]\n})\nexport class ListModule { }\n","import { NgModule } from '@angular/core';\nimport { RouterModule, Routes } from '@angular/router';\n\nconst routes: Routes = [];\n\n@NgModule({\n    imports: [RouterModule.forChild(routes)],\n    exports: [RouterModule]\n})\nexport class TabRoutingModule { }\n","import { Component, OnInit } from '@angular/core';\nimport { ActivatedRoute, NavigationEnd, Router } from '@angular/router';\n\n// tsc-library\nimport { StorageService } from '@library/storage-service';\nimport { Layout, LayoutM, LayoutService } from '@library/layout-service';\n// /tsc-library/\n\n@Component({\n    selector: 'app-tab',\n    templateUrl: './tab.component.html',\n    styles: [\n    ]\n})\nexport class TabComponent implements OnInit {\n\n    orgID: any;\n    layoutID: any;\n    activeLink: any;\n\n    layoutM = new Layout();\n\n    tab: any = [];\n\n    constructor(\n        private router: Router,\n        private activatedRoute: ActivatedRoute,\n        private storageService: StorageService,\n        private layoutService: LayoutService\n    ) { }\n\n    ngOnInit(): void {\n        this.orgID = this.storageService.getStorage('currentOrgID');\n\n        this.activatedRoute.paramMap.subscribe((params) => {\n            this.layoutID = params.get('layoutID');\n\n            this.getLayoutByID();\n\n            this.tab = [\n                {\n                    icon: 'list',\n                    label: 'List Representation',\n                    routerLink: `/layout/${this.layoutID}/list`\n                },\n                {\n                    icon: 'grid_view',\n                    label: 'Chart Representation',\n                    routerLink: `/layout/${this.layoutID}/chart`\n                }\n            ];\n\n            this.setActiveLink();\n        });\n\n        this.router.events.subscribe((val) => {\n            if (val instanceof NavigationEnd) {\n                this.setActiveLink();\n            }\n        });\n    }\n\n    async getLayoutByID() {\n        this.layoutM = <LayoutM>await this.layoutService.getLayoutByID(this.orgID, this.layoutID);\n    }\n\n    setActiveLink(): void {\n        let currentPath = window.location.pathname;\n\n        for (let i = 0; i < this.tab.length; i++) {\n            if (currentPath.includes(this.tab[i].routerLink)) {\n                this.activeLink = this.tab[i].routerLink;\n                break;\n            }\n        }\n    }\n\n}\n","<div class=\"card main-card cardOverwrite h100\">\n    <div class=\"headerContainer\">\n        <div class=\"headerLeftContainer\">\n            <div class=\"pageTitle\">Layout <span *ngIf=\"layoutM\">\n                    - ({{ layoutM?.name }})\n                </span></div>\n        </div>\n    </div>\n\n    <nav mat-tab-nav-bar>\n        <ng-container *ngFor=\"let tabs of tab; let i = index;\">\n            <a mat-tab-link [routerLink]=\"tabs.routerLink\" (click)=\"activeLink = tabs.routerLink\"\n                [active]=\"activeLink == tabs.routerLink\">\n                <div class=\"d-flex align-items-center\">\n                    <span class=\"material-symbols-outlined me-2\">\n                        {{ tabs.icon }}\n                    </span>\n                    {{ tabs.label }}\n                </div>\n            </a>\n        </ng-container>\n    </nav>\n    <router-outlet></router-outlet>\n\n</div>","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { MatTabsModule } from '@angular/material/tabs';\n\nimport { NgbModule } from '@ng-bootstrap/ng-bootstrap';\n\nimport { TabRoutingModule } from './tab-routing.module';\nimport { TabComponent } from './tab.component';\n\n@NgModule({\n    declarations: [\n        TabComponent\n    ],\n    imports: [\n        CommonModule,\n        TabRoutingModule,\n        NgbModule,\n        MatTabsModule,\n    ]\n})\nexport class TabModule { }\n","import { Component, ElementRef, OnInit, ViewChild } from '@angular/core';\nimport { ActivatedRoute } from '@angular/router';\nimport { FormArray, FormBuilder, FormGroup } from '@angular/forms';\n\nimport { MatPaginator } from '@angular/material/paginator';\nimport { MatSort } from '@angular/material/sort';\nimport { MatDialog } from '@angular/material/dialog';\n\nimport { isEqual } from 'lodash';\n\nimport { merge, fromEvent, of as observableOf } from 'rxjs';\nimport { catchError, filter, map, startWith, switchMap, tap } from 'rxjs/operators';\n\nimport { Entity } from '../../../../model/entity.model';\nimport { DeviceMappingM } from '../../../../model/device.model';\nimport { SourceConsumerConfigure, SourceConsumerConfigureM } from '../../../../model/source-consumer.model';\n\nimport { SourceLoadComponent } from '../../_dialog/create-update/source-load/source-load.component';\n\nimport { DeviceController } from '../../../../controller/device.controller';\nimport { SourceController } from '../../../../controller/source.controller';\n\nimport { EntityService } from '../../../../service/entity.service';\n\n// tsc-library\nimport { StorageService } from '@library/storage-service';\nimport { ButtonLabelEnum, DialogOneComponent, DialogOneEnum, PageM, ResponseM, SearchBarOneComponent, TABLE_CONSTANT, TSCCommonService } from '@library/tsc-common';\n// /tsc-library/\n\n@Component({\n    selector: 'app-add',\n    templateUrl: './add.component.html',\n    styleUrls: ['./add.component.scss']\n})\nexport class AddComponent implements OnInit {\n\n    TABLE_CONSTANT = TABLE_CONSTANT;\n    ButtonLabelEnum = ButtonLabelEnum;\n\n    orgID: any;\n    layoutID: any;\n    entityID: any;\n    searchValue: string;\n    intialObject: any;\n    redirectUrl: string;\n    searchArr: any[] = [];\n    dataSource: any[] = [];\n    searchFlag: boolean = false;\n    resultLength: number = 0;\n    isEqual: boolean = true;\n    showEdit: boolean = false;\n    allowBackendCall: boolean = true;\n    entityM = new Entity();\n    sourceConsumerConfiguredM = new SourceConsumerConfigure();\n\n    initialMappingRecords: { [id: number]: any[] } = {};\n\n    displayedColumn: string[] = ['mapDevice', 'id', 'name', 'make', 'model', 'type'];\n\n    deviceMappingFG: FormGroup;\n\n    @ViewChild('sort') sort: MatSort;\n    @ViewChild('paginator') paginator: MatPaginator;\n    @ViewChild('refreshBtn') refreshBtn: ElementRef;\n    @ViewChild('searchBar') searchBar: SearchBarOneComponent;\n\n    constructor(\n        private activatedRoute: ActivatedRoute,\n        private storageService: StorageService,\n        private tscCommonService: TSCCommonService,\n        private entityService: EntityService,\n        private deviceController: DeviceController,\n        private sourceController: SourceController,\n        private deviceMappingFB: FormBuilder,\n        private dialog: MatDialog\n    ) { }\n\n    ngOnInit(): void {\n        this.orgID = this.storageService.getStorage('currentOrgID');\n\n        this.activatedRoute.params.subscribe((param) => {\n            this.layoutID = param.layoutID;\n            this.entityID = param.entityID;\n\n            this.getEntityByID();\n        })\n\n        this.getSourceConsumerConfig();\n        this.deviceMappingInit();\n    }\n\n    getSourceConsumerConfig() {\n        this.sourceController.getSourceConsumerConfig(this.orgID).subscribe((res: SourceConsumerConfigureM) => {\n            this.sourceConsumerConfiguredM = res;\n            this.redirectUrl = this.getRedirectUrl();\n        },\n            error => console.log('Error:', error)\n        );\n    }\n\n    getRedirectUrl() {\n        if (!this.sourceConsumerConfiguredM.sourceTypeConfigured) {\n            return 'preference/source/create';\n        }\n\n        if (!this.sourceConsumerConfiguredM.consumerTypeConfigured) {\n            return 'preference/consumer/create';\n        }\n\n        return 'preference/source/page';\n    }\n\n    async getEntityByID() {\n        this.entityM = await this.entityService.getEntityByID(this.orgID, this.layoutID, this.entityID);\n    }\n\n    deviceMappingInit() {\n        this.deviceMappingFG = this.deviceMappingFB.group({\n            deviceRecords: this.deviceMappingFB.array([])\n        });\n    }\n\n    get deviceRecords() {\n        return this.deviceMappingFG.get('deviceRecords') as FormArray;\n    }\n\n    ngAfterViewInit() {\n        merge(\n            this.paginator.page,\n            this.sort.sortChange,\n            fromEvent(this.refreshBtn.nativeElement, 'click')\n        ).pipe(\n            startWith({}),\n            filter(() => this.handleBackendTrigger()),\n            switchMap(() => this.getUnmappedDevice())\n        ).subscribe();\n    }\n\n    getUnmappedDevice() {\n\n        this.deviceMappingFG.valueChanges.subscribe(() => {\n            this.isEqual = isEqual(this.intialObject, this.deviceMappingFG.value);\n        });\n\n        this.searchArr = [];\n        if (this.searchFlag) {\n            this.searchArr.push('name:' + this.searchValue)\n        }\n\n        return this.deviceController.getUnMappedDevices(\n            this.paginator.pageIndex,\n            this.paginator.pageSize,\n            this.sort.active,\n            this.sort.direction,\n            this.searchArr,\n            this.orgID,\n            this.layoutID,\n            this.entityID,\n        ).pipe(\n            catchError(() => observableOf(null)),\n            map((response: PageM<DeviceMappingM>) => {\n                if (response == null) {\n                    this.resultLength = 0;\n                    return [];\n                }\n                this.resultLength = response[\"totalCount\"];\n                return response[\"records\"];\n            }),\n            tap((dataSource) => {\n                this.dataSource = dataSource;\n\n                this.deviceMappingFG.reset();\n                this.deviceRecords.clear();\n\n                dataSource.forEach((record, index) => {\n                    this.deviceRecords.push(this.deviceMappingFB.group({\n                        id: [record.id],\n                        isDeviceMapped: [false],\n                        type: [record.type],\n                        parameter: [record.parameter],\n                        mappingRecords: this.deviceMappingFB.array([])\n                    }));\n                });\n\n                this.intialObject = this.deviceMappingFG.value;\n                this.isEqual = true;\n\n            })\n        );\n    }\n\n    handleBackendTrigger(): boolean {\n        if (this.intialObject != undefined && !isEqual(this.intialObject, this.deviceMappingFG.value)) {\n            this.openConfirmationDialog();\n            return false;\n        }\n        return true;\n    }\n\n    openConfirmationDialog() {\n        const dialog = this.dialog.open(DialogOneComponent, {\n            minWidth: '450px',\n            maxWidth: '450px',\n            data: {\n                type: DialogOneEnum.CONFIRMATION,\n                icon: 'warning',\n                header: 'Confirm?',\n                body: 'Changes made will not be saved. Are you sure you want to proceed?',\n                buttonOne: ButtonLabelEnum.NO_BTN_LABEL,\n                buttonTwo: ButtonLabelEnum.YES_BTN_LABEL\n            }\n        });\n        dialog.afterClosed().subscribe(res => {\n            this.allowBackendCall = res;\n            if (this.allowBackendCall == true) {\n                this.deviceMappingFG.reset();\n                this.getUnmappedDevice().subscribe();\n            } else {\n                this.searchBar.searchClear();\n            }\n        })\n    }\n\n    searchFn(value: string) {\n        this.searchFlag = true;\n        this.searchValue = value;\n        if (value.length == 0) {\n            this.resetSearch();\n        } else {\n            this.paginator.pageIndex = 0;\n        }\n        this.refreshBtn.nativeElement.click();\n    }\n\n    resetSearch() {\n        this.searchFlag = false;\n        this.searchBar.searchClear();\n    }\n\n    onCheckboxChange(index: number, isChecked: boolean) {\n        const deviceGroup = this.deviceRecords.at(index);\n        deviceGroup.get('isDeviceMapped').setValue(isChecked);\n\n        if (isChecked) {\n            if (deviceGroup.get('isDeviceMapped').value && deviceGroup.get('type').value == 'METER' && deviceGroup.get('parameter').value.length > 0) {\n                this.openSourceLoadDialog(deviceGroup.value);\n            }\n        } else {\n            const mappingRecordsArray = deviceGroup.get('mappingRecords') as FormArray;\n            mappingRecordsArray.clear();\n        }\n    }\n\n    openSourceLoadDialog(device) {\n        const dialog = this.dialog.open(SourceLoadComponent,\n            {\n                data: {\n                    deviceInfo: device,\n                    entityID: this.entityID\n                },\n                minWidth: '40vw',\n                maxWidth: '40vw',\n                height: '100%',\n                position: { right: '-2px', top: '0px' },\n            });\n        dialog.afterClosed()\n            .subscribe((dialogRes) => {\n                const deviceIndex = this.findIndexByDeviceID(device.id);\n\n                if (dialogRes && dialogRes.sourceLoadMappingRes) {\n                    if (deviceIndex != -1) {\n                        const deviceRecordsControl = this.deviceMappingFG.get('deviceRecords') as FormArray;\n                        const mappingRecordsControl = deviceRecordsControl.at(deviceIndex).get('mappingRecords') as FormArray;\n                        mappingRecordsControl.clear();\n\n                        dialogRes.sourceLoadMappingRes.forEach(mappingItem => {\n                            const parameterID = mappingItem.parameterID;\n                            const mappings = mappingItem.mapping.map(mapping => {\n                                return this.deviceMappingFB.group(mapping);\n                            });\n\n                            const mappingGroup = this.deviceMappingFB.group({\n                                parameterID,\n                                mapping: this.deviceMappingFB.array(mappings)\n                            });\n\n                            mappingRecordsControl.push(mappingGroup);\n                        });\n\n                    }\n                }\n\n                if (dialogRes && dialogRes.sourceLoadMappingRes.length == 0) {\n                    if (deviceIndex != -1) {\n                        const isDeviceMappedControl = this.deviceMappingFG.get('deviceRecords')['controls'][deviceIndex].get('isDeviceMapped');\n                        isDeviceMappedControl.setValue(false);\n                    }\n                }\n            })\n    }\n\n    findIndexByDeviceID(id) {\n        return this.deviceMappingFG.get('deviceRecords')['controls']\n            .findIndex((d: any) => d.value.id == id);\n    }\n\n    saveDeviceMapping() {\n        const deviceRecordsArray = this.deviceMappingFG.get('deviceRecords') as FormArray;\n\n        deviceRecordsArray.controls.forEach((deviceGroup: FormGroup) => {\n            const isDeviceMapped = deviceGroup.get('isDeviceMapped').value;\n            const type = deviceGroup.get('type').value;\n            const mappingRecordsControl = deviceGroup.get('mappingRecords') as FormArray;\n\n            if (type == 'METER' && !isDeviceMapped) {\n                mappingRecordsControl.clear();\n            }\n\n            deviceGroup.removeControl('parameter');\n        });\n\n        this.deviceController.saveDeviceMapping(this.orgID, this.layoutID, this.entityID, this.deviceMappingFG.getRawValue()).subscribe((mappedDevicesRes: ResponseM) => {\n            this.tscCommonService.back();\n        },\n            error => {\n                console.log('error in saveDeviceMapping() - ', error);\n            });\n    }\n\n}","<div class=\"card main-card cardOverwrite h100\">\n    <div class=\"headerContainer\">\n        <div class=\"headerLeftContainer\">\n            <div class=\"pageTitle\">Map Devices <span *ngIf=\"entityM\">\n                    - ({{ entityM?.name }})\n                </span></div>\n        </div>\n        <div class=\"headerRightContainer\">\n            <div class=\"headerRightContainerInner\">\n                <lib-search-bar-one class=\"me-3\" #searchBar searchBy=\"device name\" (emitSearch)=\"searchFn($event)\">\n                </lib-search-bar-one>\n                <a [routerLink]=\"'/layout/' + layoutID + '/entity/' + entityID + '/map-device/view'\">View mapped devices</a>\n            </div>\n        </div>\n    </div>\n\n    <button #refreshBtn class=\"d-none\"></button>\n\n    <form [formGroup]=\"deviceMappingFG\">\n        <div class=\"overflowX customScrollBar w-100\">\n            <table mat-table class=\"w-100\" [dataSource]=\"dataSource\" #sort=\"matSort\" matSort matSortActive=\"name\"\n                matSortDirection=\"asc\" matSortDisableClear>\n\n                <ng-container matColumnDef=\"mapDevice\">\n                    <th class=\"columnWidth1\" mat-header-cell *matHeaderCellDef> Map device </th>\n                    <td class=\"columnWidth1\" mat-cell *matCellDef=\"let row; let i = index\">\n                        <div class=\"d-flex align-items-center\">\n                            <mat-checkbox [formControl]=\"deviceRecords?.at(i)?.get('isDeviceMapped')\"\n                                [disabled]=\"row.type == 'METER' && (!sourceConsumerConfiguredM.sourceTypeConfigured || !sourceConsumerConfiguredM.consumerTypeConfigured)\"\n                                (change)=\"onCheckboxChange(i, $event.checked)\"></mat-checkbox>\n\n                            <span\n                                *ngIf=\"row.type == 'METER' && (!sourceConsumerConfiguredM.sourceTypeConfigured || !sourceConsumerConfiguredM.consumerTypeConfigured)\"\n                                [popover]=\"infoPopover\" popoverPlacement=\"right\" [popoverOnHover]=\"false\" [popoverAnimation]=\"true\">\n                                <span class=\"material-symbols-outlined fontSize cursorPointer mt-2 ms-2\">\n                                    info\n                                </span>\n                            </span>\n\n                            <popover-content #infoPopover [animation]=\"true\" [closeOnClickOutside]=\"true\">\n                                <span>Click <a [href]=\"redirectUrl\">here </a>to set preferences</span>\n                            </popover-content>\n\n                            <span *ngIf=\"deviceRecords?.at(i)?.get('mappingRecords').length > 0\"\n                                class=\"material-symbols-outlined text-secondary fontSize cursorPointer ms-5\" #tooltip=\"matTooltip\"\n                                matTooltipPosition=\"above\" matTooltipClass=\"nameTooltip\" matTooltip=\"Update source/consumer\"\n                                (click)=\"this.openSourceLoadDialog(deviceRecords?.at(i).value)\">\n                                edit_square\n                            </span>\n                        </div>\n                    </td>\n                </ng-container>\n\n                <ng-container matColumnDef=\"id\">\n                    <th class=\"columnWidth2\" mat-header-cell *matHeaderCellDef>\n                        Device ID\n                    </th>\n                    <td class=\"columnWidth2\" mat-cell *matCellDef=\"let row\">\n                        {{ row['id'] }}\n                    </td>\n                </ng-container>\n\n                <ng-container matColumnDef=\"name\">\n                    <th class=\"columnWidth3\" mat-header-cell *matHeaderCellDef mat-sort-header disableClear> Name </th>\n                    <td class=\"columnWidth3\" mat-cell *matCellDef=\"let row\"> <span\n                            [matTooltip]=\"row?.['name']?.length>24? row['name']: ''\" matTooltipPosition=\"above\"\n                            matTooltipClass=\"nameTooltip\">\n                            {{ row.name | dotdotdot:24 }}\n                        </span>\n                        <button [cdkCopyToClipboard]=\"row.name\" matSuffix mat-icon-button type=\"button\">\n                            <span class=\"material-symbols-outlined fs-5\" mat-raised-button matTooltipPosition=\"right\"\n                                matTooltip=\"copy\">\n                                content_copy\n                            </span>\n                        </button>\n                    </td>\n                </ng-container>\n\n                <ng-container matColumnDef=\"make\">\n                    <th class=\"columnWidth4\" mat-header-cell *matHeaderCellDef> Make </th>\n                    <td class=\"columnWidth4\" mat-cell *matCellDef=\"let row\"\n                        [matTooltip]=\"row?.['make']?.length>15? row['make']: ''\" matTooltipPosition=\"above\"\n                        matTooltipClass=\"nameTooltip\">\n                        {{ row?.['make'] | dotdotdot:15 }}\n                    </td>\n                </ng-container>\n\n                <ng-container matColumnDef=\"model\">\n                    <th class=\"columnWidth4\" mat-header-cell *matHeaderCellDef> Model </th>\n                    <td class=\"columnWidth4\" mat-cell *matCellDef=\"let row\"\n                        [matTooltip]=\"row?.['model']?.length>15? row['model']: ''\" matTooltipPosition=\"above\"\n                        matTooltipClass=\"nameTooltip\">\n                        {{ row?.['model'] | dotdotdot:15 }}\n                    </td>\n                </ng-container>\n\n                <ng-container matColumnDef=\"type\">\n                    <th class=\"columnWidth4\" mat-header-cell *matHeaderCellDef> Type </th>\n                    <td class=\"columnWidth4\" mat-cell *matCellDef=\"let row\">\n                        {{ row.type | titlecase }}\n                    </td>\n                </ng-container>\n\n                <tr mat-header-row *matHeaderRowDef=\"displayedColumn; sticky: true\"></tr>\n                <tr mat-row *matRowDef=\"let row; columns: displayedColumn;\"></tr>\n\n                <tr class=\"mat-row\" *matNoDataRow>\n                    <td class=\"mat-cell text-center\" [attr.colspan]=\"displayedColumn.length\">\n                        {{ TABLE_CONSTANT.TABLE_NO_DATA }}\n                    </td>\n                </tr>\n            </table>\n        </div>\n\n        <mat-paginator #paginator class=\"roundedBorder\" showFirstLastButtons [length]=\"resultLength\"\n            [pageSize]=\"TABLE_CONSTANT.DEFAULT_PAGE_SIZE\" [pageSizeOptions]=\"TABLE_CONSTANT.PAGE_SIZE_OPTION\">\n        </mat-paginator>\n    </form>\n\n    <div align=\"end\">\n        <button type=\"submit\" class=\"btn btn-sm btn-success me-3 mb-2\" [ngClass]=\"{'disabled': isEqual}\"\n            (click)=\"saveDeviceMapping()\">\n            {{ ButtonLabelEnum.SAVE_BTN_LABEL }}\n        </button>\n    </div>\n\n</div>","import { NgModule } from '@angular/core';\nimport { RouterModule, Routes } from '@angular/router';\n\nimport { AddComponent } from './add.component';\n\nconst routes: Routes = [\n    {\n        path: '',\n        component: AddComponent\n    }\n];\n\n@NgModule({\n    imports: [RouterModule.forChild(routes)],\n    exports: [RouterModule]\n})\nexport class AddRoutingModule { }\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\n\nimport { MatIconModule } from '@angular/material/icon';\nimport { MatButtonModule } from '@angular/material/button';\nimport { MatRippleModule } from '@angular/material/core';\nimport { MatTableModule } from '@angular/material/table';\nimport { MatPaginatorModule } from '@angular/material/paginator';\nimport { MatDialogModule } from '@angular/material/dialog';\nimport { MatTooltipModule } from '@angular/material/tooltip';\nimport { MatCheckboxModule } from '@angular/material/checkbox';\nimport { MatCardModule } from '@angular/material/card';\nimport { MatSortModule } from '@angular/material/sort';\nimport { ClipboardModule } from '@angular/cdk/clipboard';\nimport { PopoverModule } from \"ngx-smart-popover\";\n\nimport { SourceLoadModule } from '../../_dialog/create-update/source-load/source-load.module';\n\nimport { AddRoutingModule } from './add-routing.module';\nimport { AddComponent } from './add.component';\n\n// tsc-library\nimport { SearchBarOneModule } from '@library/tsc-common';\nimport { EllipsisPipeModule } from '@library/tsc-common';\n// /tsc-library/\n\n@NgModule({\n    declarations: [\n        AddComponent\n    ],\n    imports: [\n        CommonModule,\n        AddRoutingModule,\n        SourceLoadModule,\n        FormsModule,\n        ReactiveFormsModule,\n        MatCardModule,\n        MatIconModule,\n        MatButtonModule,\n        MatRippleModule,\n        MatTableModule,\n        MatSortModule,\n        MatPaginatorModule,\n        MatDialogModule,\n        MatTooltipModule,\n        MatCheckboxModule,\n        SearchBarOneModule,\n        EllipsisPipeModule,\n        ClipboardModule,\n        PopoverModule\n    ]\n})\nexport class AddModule { }\n","import { Component, ElementRef, OnInit, ViewChild } from '@angular/core';\nimport { ActivatedRoute } from '@angular/router';\n\nimport { MatDialog } from '@angular/material/dialog';\nimport { MatPaginator } from '@angular/material/paginator';\nimport { SelectionModel } from '@angular/cdk/collections';\n\nimport { merge, fromEvent, of as observableOf } from 'rxjs';\nimport { catchError, map, startWith, switchMap } from 'rxjs/operators';\n\nimport { Entity } from '../../../../model/entity.model';\nimport { DeviceMappingM } from '../../../../model/device.model';\n\nimport { SourceLoadComponent } from '../../_dialog/create-update/source-load/source-load.component';\n\nimport { DeviceController } from '../../../../controller/device.controller';\nimport { EntityService } from '../../../../service/entity.service';\n\n// tsc-library\nimport { StorageService } from '@library/storage-service';\nimport { ButtonLabelEnum, DialogEnum, DialogOneComponent, DialogOneEnum, FormAction, PageM, SearchBarOneComponent, TABLE_CONSTANT } from '@library/tsc-common';\n// /tsc-library/\n\n@Component({\n    selector: 'app-view',\n    templateUrl: './view.component.html',\n    styleUrls: ['./view.component.scss']\n})\nexport class ViewComponent implements OnInit {\n\n    TABLE_CONSTANT = TABLE_CONSTANT;\n\n    orgID: any;\n    layoutID: any;\n    entityID: any;\n    filter: string;\n    searchValue: string;\n    searchArr: any[] = [];\n    dataSource: any[] = [];\n    searchFlag: boolean = false;\n    resultLength: number = 0;\n\n    displayedColumn: string[] = ['checkbox', 'body', 'delete'];\n\n    allDeviceIDs: any = [];\n    selection = new SelectionModel(true, []);\n\n    entityM = new Entity();\n\n    @ViewChild('paginator') paginator: MatPaginator;\n    @ViewChild('refreshBtn') refreshBtn: ElementRef;\n    @ViewChild('searchBar') searchBar: SearchBarOneComponent;\n\n    constructor(\n        private activatedRoute: ActivatedRoute,\n        private storageService: StorageService,\n        private deviceController: DeviceController,\n        private entityService: EntityService,\n        private dialog: MatDialog\n    ) { }\n\n    ngOnInit(): void {\n        this.orgID = this.storageService.getStorage('currentOrgID');\n\n        this.activatedRoute.params.subscribe((param) => {\n            this.layoutID = param.layoutID;\n            this.entityID = param.entityID;\n\n            this.getEntityByID();\n        })\n    }\n\n    async getEntityByID() {\n        this.entityM = await this.entityService.getEntityByID(this.orgID, this.layoutID, this.entityID);\n    }\n\n    ngAfterViewInit() {\n\n        this.selection.clear();\n\n        merge(\n            this.paginator.page,\n            fromEvent(this.refreshBtn.nativeElement, 'click')\n        ).pipe(\n            startWith({}),\n            switchMap((): any => {\n\n                this.searchArr = [];\n                if (this.searchFlag) {\n                    this.searchArr.push('name:' + this.searchValue)\n                }\n\n                return this.deviceController.getMappedDevices(\n                    this.paginator.pageIndex,\n                    this.paginator.pageSize,\n                    this.searchArr,\n                    this.orgID,\n                    this.layoutID,\n                    this.entityID,\n                ).pipe(catchError(() => observableOf(null)));\n            }),\n            map((response: PageM<DeviceMappingM>): any => {\n                if (response == null) {\n                    this.resultLength = 0;\n                    return [];\n                }\n                this.resultLength = response[\"totalCount\"];\n                return response[\"records\"];\n            })\n        ).subscribe((dataSource) => {\n            this.dataSource = dataSource;\n\n            dataSource.forEach((record) => {\n                this.allDeviceIDs.push(record.id);\n            });\n        });\n    }\n\n    searchFn(value: string) {\n        this.searchFlag = true;\n        this.searchValue = value;\n        if (value.length == 0) {\n            this.resetSearch();\n        } else {\n            this.paginator.pageIndex = 0;\n        }\n        this.refreshBtn.nativeElement.click();\n    }\n\n    resetSearch() {\n        this.searchFlag = false;\n        this.searchBar.searchClear();\n    }\n\n    selectAll() {\n        if (this.isAllSelected()) {\n            this.selection.clear();\n            return;\n        }\n        this.selection.select(...this.allDeviceIDs);\n    }\n\n    isAllSelected() {\n        const selected = this.selection.selected.length;\n        const numRows = this.dataSource.length;\n        return selected == numRows;\n    }\n\n    openSourceLoadDialog(device) {\n        const dialog = this.dialog.open(SourceLoadComponent,\n            {\n                data: {\n                    deviceInfo: device,\n                    layoutID: this.layoutID,\n                    entityID: this.entityID,\n                    updateFromDialog: true\n                },\n                minWidth: '600px',\n                maxWidth: '600px',\n            });\n        dialog.afterClosed()\n            .subscribe((dialogRes) => {\n                if (dialogRes && dialogRes.result == DialogEnum.SUCCESS_DR && dialogRes.action == FormAction.UPDATE) {\n                    this.refreshBtn.nativeElement.click();\n                }\n            })\n    }\n\n    openDeleteDialog(actionType, id?: number, name?: string) {\n\n        let entityName = this.entityM.name;\n        let bodyText: string;\n\n        if (actionType == 'BULK_DELETE' && !this.isAllSelected()) {\n            bodyText = 'From <b>' + entityName + '</b> entity, mapping of devices <b> ' + this.selection.selected.join(', ') + '</b>' + ' will be removed.</br></br>Are you sure you want to continue?';\n        } else if (actionType == 'BULK_DELETE' && this.isAllSelected()) {\n            bodyText = 'From <b>' + entityName + '</b> entity, all mapped devices will be removed.</br></br>Are you sure you want to continue?';\n        }\n        else {\n            bodyText = 'From <b>' + entityName + '</b> entity, mapping of device <b> ' + name + '</b>' + ' will be removed.</br></br>Are you sure you want to continue?';\n        }\n\n        const dialog = this.dialog.open(DialogOneComponent, {\n            minWidth: '450px',\n            maxWidth: '450px',\n            data: {\n                type: DialogOneEnum.DELETE,\n                icon: 'dangerous',\n                header: 'Delete device mapping?',\n                body: bodyText,\n                buttonOne: ButtonLabelEnum.CANCEL_BTN_LABEL,\n                buttonTwo: ButtonLabelEnum.DELETE_BTN_LABEL\n            }\n        });\n        dialog.afterClosed().subscribe(res => {\n            if (res) {\n                if (actionType == 'BULK_DELETE' && !this.isAllSelected()) {\n                    this.deleteDeviceMapping(this.selection.selected);\n                } else if (actionType == 'BULK_DELETE' && this.isAllSelected()) {\n                    this.deleteDeviceMapping(this.allDeviceIDs);\n                }\n                else {\n                    this.deleteDeviceMapping(id);\n                }\n            }\n        })\n    }\n\n    deleteDeviceMapping(deviceID) {\n        this.deviceController.deleteDeviceMapping(this.orgID, this.layoutID, this.entityID, deviceID).subscribe((deleteRes) => {\n            this.refreshBtn.nativeElement.click();\n        });\n    }\n\n}\n","<div class=\"card main-card cardOverwrite h100\">\n    <div class=\"headerContainer\">\n        <div class=\"headerLeftContainer\">\n            <div class=\"pageTitle\">View Mapped Devices <span *ngIf=\"entityM\">\n                    - ({{ entityM?.name }})\n                </span></div>\n        </div>\n\n        <div class=\"headerRightContainer\">\n            <div class=\"headerRightContainerInner\">\n                <lib-search-bar-one class=\"me-2\" #searchBar searchBy=\"device name\" (emitSearch)=\"searchFn($event)\">\n                </lib-search-bar-one>\n                <div class=\"me-2 btn-group\" ngbDropdown placement=\"bottom-right\">\n                    <button type=\"button\" ngbDropdownToggle class=\"btn btn-sm btn-primary\"\n                        [ngClass]=\"{'disableButton': selection.selected.length == 0}\"\n                        [disabled]=\"selection.selected.length == 0\">\n                        Bulk action\n                    </button>\n                    <div ngbDropdownMenu>\n                        <button class=\"btn btn-outline-danger rounded-0 dropdown-item\"\n                            (click)=\"openDeleteDialog('BULK_DELETE')\">\n                            Delete\n                        </button>\n                    </div>\n                </div>\n                <a [routerLink]=\"'/layout/' + layoutID + '/entity/' + entityID + '/map-device/add'\">Map devices</a>\n            </div>\n        </div>\n    </div>\n\n    <button #refreshBtn class=\"d-none\"></button>\n\n    <table mat-table [dataSource]=\"dataSource\">\n\n        <ng-container matColumnDef=\"checkbox\">\n            <th class=\"columnWidth1\" mat-header-cell *matHeaderCellDef>\n                <mat-checkbox (change)=\"$event ? selectAll() : null\"\n                    [checked]=\"selection.hasValue() && isAllSelected()\" [disabled]=\"dataSource.length == 0\">\n                    Select all\n                </mat-checkbox>\n            </th>\n            <td class=\"px-3 columnWidth1\" mat-cell *matCellDef=\"let row; let i = index;\" class=\"text-start\">\n                <mat-checkbox (change)=\"$event ? selection.toggle(row.id) : null\"\n                    [checked]=\"selection.isSelected(row.id)\"></mat-checkbox>\n            </td>\n        </ng-container>\n\n        <ng-container matColumnDef=\"body\">\n            <th mat-header-cell *matHeaderCellDef></th>\n            <td class=\"px-3\" mat-cell *matCellDef=\"let row\">\n                <div class=\"pt-3 pb-3\">\n\n                    <div class=\"row\">\n                        <div class=\"col-sm-12\">\n                            <mat-card class=\"card main-card border cardOverwrite\">\n                                <div class=\"row\">\n                                    <div class=\"col-sm-12\">\n                                        <span class=\"card-title sectionTitle\">\n                                            Devices\n                                        </span>\n                                    </div>\n                                </div>\n                                <div class=\"row pt-2\">\n                                    <div class=\"col-sm-6\">\n                                        <div class=\"row\">\n                                            <div class=\"col-sm-3\">\n                                                ID\n                                            </div>\n                                            <div class=\"col-sm-8 fw-bold\">\n                                                {{ row.id }}\n                                            </div>\n                                        </div>\n                                    </div>\n                                    <div class=\"col-sm-6\">\n                                        <div class=\"row\">\n                                            <div class=\"col-sm-3\">\n                                                Name\n                                            </div>\n                                            <div class=\"col-sm-8 fw-bold\"\n                                                [matTooltip]=\"row?.['name']?.length>20? row['name']: ''\"\n                                                matTooltipPosition=\"above\" matTooltipClass=\"nameTooltip\">\n                                                {{ row.name | dotdotdot:20 }}\n                                            </div>\n                                        </div>\n                                    </div>\n                                </div>\n                                <div class=\"row pt-2\">\n                                    <div class=\"col-sm-6\">\n                                        <div class=\"row\">\n                                            <div class=\"col-sm-3\">\n                                                Make\n                                            </div>\n                                            <div class=\"col-sm-8 fw-bold\">\n                                                {{ row.make }}\n                                            </div>\n                                        </div>\n                                    </div>\n                                    <div class=\"col-sm-6\">\n                                        <div class=\"row\">\n                                            <div class=\"col-sm-3\">\n                                                Model\n                                            </div>\n                                            <div class=\"col-sm-8 fw-bold\">\n                                                {{ row.model }}\n                                            </div>\n                                        </div>\n                                    </div>\n                                </div>\n                                <div class=\"row pt-2\">\n                                    <div class=\"col-sm-6\">\n                                        <div class=\"row\">\n                                            <div class=\"col-sm-3\">\n                                                Type\n                                            </div>\n                                            <div class=\"col-sm-8 fw-bold\">\n                                                {{ row.type | titlecase }}\n                                            </div>\n                                        </div>\n                                    </div>\n                                </div>\n                            </mat-card>\n                        </div>\n                    </div>\n\n                    <div class=\"row pt-3\" *ngIf=\"row.mappingRecords && row.mappingRecords.length > 0\">\n                        <div class=\"col-sm-12\">\n                            <mat-card class=\"card main-card border cardOverwrite\">\n                                <div class=\"row\">\n                                    <div class=\"col-sm-6\">\n                                        <span class=\"card-title sectionTitle\">\n                                            Device property\n                                        </span>\n                                    </div>\n                                    <div class=\"col-sm-6\">\n                                        <span class=\"material-symbols-outlined text-secondary float-end cursorPointer\"\n                                            matTooltipPosition=\"above\" matTooltip=\"Edit\"\n                                            (click)=\"openSourceLoadDialog(row)\">\n                                            edit_square\n                                        </span>\n                                    </div>\n                                </div>\n\n                                <div class=\"row pt-2\">\n                                    <div class=\"col-sm-6\" *ngFor=\"let mapping of row.mappingRecords\">\n                                        Parameter Name: <span class=\"fw-bold\">\n                                            {{ mapping?.parameterName }}\n                                        </span>\n\n                                        <div *ngFor=\"let sourceLoad of mapping?.mapping\">\n                                            <div class=\"row mt-2\">\n                                                <div class=\"col-sm-3\" *ngIf=\"sourceLoad?.type == 'SOURCE'\">\n                                                    Source\n                                                </div>\n                                                <div class=\"col-sm-3\" *ngIf=\"sourceLoad?.type == 'LOAD'\">\n                                                    Load\n                                                </div>\n                                                <div class=\"col-sm-6\">\n                                                    <span class=\"fw-bold\">{{ sourceLoad?.name }}</span>\n                                                </div>\n                                            </div>\n                                        </div>\n                                    </div>\n                                </div>\n                            </mat-card>\n                        </div>\n                    </div>\n                </div>\n\n            </td>\n        </ng-container>\n\n        <ng-container matColumnDef=\"delete\">\n            <th class=\"columnWidth2\" mat-header-cell *matHeaderCellDef></th>\n            <td class=\"columnWidth2\" mat-cell *matCellDef=\"let row\">\n                <span class=\"material-symbols-outlined text-danger float-end\"\n                    [ngClass]=\"{'text-danger cursorPointer': selection.selected.length == 0, 'text-secondary': selection.selected.length > 0}\"\n                    matTooltipPosition=\"above\" [matTooltip]=\"selection.selected.length == 0 ? 'Remove mapping': ''\"\n                    (click)=\"selection.selected.length == 0 && openDeleteDialog('SINGLE_DELETE', row.id, row.name)\">\n                    delete\n                </span>\n            </td>\n        </ng-container>\n\n        <tr mat-header-row *matHeaderRowDef=\"displayedColumn; sticky: true\"></tr>\n        <tr mat-row *matRowDef=\"let row; columns: displayedColumn;\"></tr>\n\n        <tr class=\"mat-row\" *matNoDataRow>\n            <td class=\"mat-cell text-center\" [attr.colspan]=\"displayedColumn.length\">\n                {{ TABLE_CONSTANT.TABLE_NO_DATA }}\n            </td>\n        </tr>\n    </table>\n\n    <mat-paginator #paginator class=\"roundedBorder\" showFirstLastButtons [length]=\"resultLength\"\n        [pageSize]=\"TABLE_CONSTANT.DEFAULT_PAGE_SIZE\" [pageSizeOptions]=\"TABLE_CONSTANT.PAGE_SIZE_OPTION\">\n    </mat-paginator>\n</div>","import { NgModule } from '@angular/core';\nimport { RouterModule, Routes } from '@angular/router';\nimport { ViewComponent } from './view.component';\n\nconst routes: Routes = [\n    {\n        path: '',\n        component: ViewComponent\n    }\n];\n\n@NgModule({\n    imports: [RouterModule.forChild(routes)],\n    exports: [RouterModule]\n})\nexport class ViewRoutingModule { }\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\n\nimport { MatIconModule } from '@angular/material/icon';\nimport { MatButtonModule } from '@angular/material/button';\nimport { MatRippleModule } from '@angular/material/core';\nimport { MatTableModule } from '@angular/material/table';\nimport { MatPaginatorModule } from '@angular/material/paginator';\nimport { MatDialogModule } from '@angular/material/dialog';\nimport { MatTooltipModule } from '@angular/material/tooltip';\nimport { MatCheckboxModule } from '@angular/material/checkbox';\nimport { MatCardModule } from '@angular/material/card';\n\nimport { NgbModule } from '@ng-bootstrap/ng-bootstrap';\n\nimport { SourceLoadModule } from '../../_dialog/create-update/source-load/source-load.module';\n\nimport { ViewRoutingModule } from './view-routing.module';\nimport { ViewComponent } from './view.component';\n\n// tsc-library\nimport { SearchBarOneModule } from '@library/tsc-common';\nimport { EllipsisPipeModule } from '@library/tsc-common';\n// /tsc-library/\n\n@NgModule({\n    declarations: [\n        ViewComponent\n    ],\n    imports: [\n        NgbModule,\n        CommonModule,\n        ViewRoutingModule,\n        SourceLoadModule,\n        MatCardModule,\n        MatIconModule,\n        MatButtonModule,\n        MatRippleModule,\n        MatTableModule,\n        MatPaginatorModule,\n        MatDialogModule,\n        MatTooltipModule,\n        MatCheckboxModule,\n        SearchBarOneModule,\n        EllipsisPipeModule\n    ]\n})\nexport class ViewModule { }\n","import { Inject, Injectable } from '@angular/core';\n\nimport {\n    HttpClient,\n    HttpParams\n} from '@angular/common/http';\n\nimport { Observable } from 'rxjs';\n\nimport { SourceConsumerPageM, ConsumerM } from '../model/source-consumer.model';\n\n// tsc-library\nimport { PageM } from '@library/tsc-common';\n// /tsc-library/\n\n@Injectable({\n    providedIn: 'root'\n})\n\nexport class ConsumerController {\n\n    constructor(\n        private http: HttpClient,\n        @Inject('environment') private environment: any\n    ) { }\n\n    createConsumerType(orgID, consumer) {\n        return this.http.post(`${this.environment.TSC_COMMON_API_URL}organizations/${orgID}/consumers-types`, consumer);\n    }\n\n    getConsumerTypeByID(orgID, consumerID): Observable<ConsumerM> {\n        return this.http.get<ConsumerM>(`${this.environment.TSC_COMMON_API_URL}organizations/${orgID}/consumers-types/${consumerID}`);\n    }\n\n    updateConsumerType(orgID, consumerID, consumer) {\n        return this.http.patch(`${this.environment.TSC_COMMON_API_URL}organizations/${orgID}/consumers-types/${consumerID}`, consumer);\n    }\n\n    deleteConsumerType(orgID, consumerID) {\n        return this.http.delete(`${this.environment.TSC_COMMON_API_URL}organizations/${orgID}/consumers-types/${consumerID}`);\n    }\n\n    getConsumerTypeByPage(pageNo: number, pageSize: number, sortBy: string, orderBy: string, searchValue, filterArr, orgID): Observable<PageM<SourceConsumerPageM>> {\n        let params = new HttpParams();\n\n        params = params.append('pageNo', pageNo);\n        params = params.append('pageSize', pageSize);\n        params = params.append('sortBy', sortBy);\n        params = params.append('orderBy', orderBy);\n\n        if (searchValue) {\n            params = params.append('searchBy', searchValue);\n        }\n\n        filterArr.forEach(filter => params = params.append('filter', filter));\n\n        return this.http.get<PageM<SourceConsumerPageM>>(`${this.environment.TSC_COMMON_API_URL}organizations/${orgID}/consumers-types/page`, { params: params });\n    }\n\n}\n","import { Component, ElementRef, Inject, OnInit, Renderer2, ViewChild } from '@angular/core';\nimport { FormBuilder, FormGroup, Validators } from '@angular/forms';\n\nimport {\n    MAT_DIALOG_DATA,\n    MatDialogRef\n} from '@angular/material/dialog';\n\nimport { isEqual } from 'lodash';\n\nimport { ConsumerM, UtilitySourceTypeM } from '../../../../../model/source-consumer.model';\n\nimport { ConsumerController } from '../../../../../controller/consumer.controller';\n\nimport { SourceService } from '../../../../../service/source.service';\n\n// tsc-library\nimport { MaterialFormFieldAppearance, ButtonLabelEnum, FormAction, PageTitleEnum, FormErrorEnum, TSCCommonService, ResponseM, InvalidForm, COMMON_CONSTANT, Static, DialogResponseEnum, ButtonTooltipEnum, MATERIAL_CONSTANT } from '@library/tsc-common';\nimport { StorageService } from '@library/storage-service';\nimport { ToastrColor, ToastrService } from '@library/toastr-service';\n// /tsc-library/\n\n@Component({\n    selector: 'lib-create-update',\n    templateUrl: './create-update.component.html',\n    styles: [\n    ]\n})\nexport class ConsumerCreateUpdateComponent implements OnInit {\n\n    COMMON_CONSTANT = COMMON_CONSTANT;\n    MATERIAL_CONSTANT = MATERIAL_CONSTANT;\n\n    FormAction = FormAction;\n    FormErrorEnum = FormErrorEnum;\n    ButtonLabelEnum = ButtonLabelEnum;\n    ButtonTooltipEnum = ButtonTooltipEnum;\n    PageTitleEnum = PageTitleEnum;\n    MaterialFormFieldAppearance = MaterialFormFieldAppearance;\n\n    orgID: any;\n    consumerID: any;\n    action: string;\n    isEqual: boolean = true;\n    intialObject: any;\n\n    utilitySourceTypeM: any;\n\n    consumerM: ConsumerM;\n    consumerFG: FormGroup;\n\n    pageTitle: string = 'Consumer type';\n\n    @ViewChild('header') header: ElementRef;\n    @ViewChild('footer') footer: ElementRef;\n    @ViewChild('body') body: ElementRef;\n\n    constructor(\n        @Inject(MAT_DIALOG_DATA) public data,\n        private dialogRef: MatDialogRef<ConsumerCreateUpdateComponent>,\n        private renderer: Renderer2,\n        private formBuilder: FormBuilder,\n        private storageService: StorageService,\n        private toastrService: ToastrService,\n        public tscCommonService: TSCCommonService,\n        private sourceService: SourceService,\n        private consumerController: ConsumerController,\n    ) {\n        this.action = data.action;\n        this.consumerID = data.consumerID;\n    }\n\n    ngOnInit(): void {\n        this.orgID = this.storageService.getStorage('currentOrgID');\n\n        this.getUtilitySourceAndType();\n        this.consumerFGInit();\n\n        if (this.action == FormAction.UPDATE) {\n            this.getConsumerTypeByID(this.consumerID);\n        }\n    }\n\n    ngAfterViewInit() {\n        this.heightHandler();\n    }\n\n    heightHandler(): void {\n        const headerHeight = this.header.nativeElement.offsetHeight;\n        const footerHeight = this.footer.nativeElement.offsetHeight;\n        const offsetHeight = 'calc(100vh - ' + (headerHeight + footerHeight + 24) + 'px)';\n\n        this.renderer.setStyle(this.body.nativeElement, 'height', offsetHeight);\n        this.renderer.setStyle(this.body.nativeElement, 'max-height', offsetHeight);\n    }\n\n    async getUtilitySourceAndType() {\n        const result = <UtilitySourceTypeM>await this.sourceService.getUtilitySourceAndType(this.orgID);\n        this.utilitySourceTypeM = result.utilitySource;\n    }\n\n    consumerFGInit() {\n        this.consumerFG = this.formBuilder.group({\n            name: [, [Validators.required]],\n            utilitySourceID: [, [Validators.required]],\n            type: [, [Validators.required]]\n        });\n    }\n\n    consumerSubmit() {\n        if (this.consumerFG.invalid) {\n            this.toastrService.openToast(InvalidForm.INVALID_FORM_TITLE, InvalidForm.INVALID_FORM_MESSAGE, ToastrColor.ERROR);\n            return;\n        } else {\n            if (this.action == FormAction.CREATE) {\n                this.createConsumerType();\n            } else if (this.action == FormAction.UPDATE) {\n                this.updateConsumerType();\n            }\n        }\n    }\n\n    createConsumerType() {\n        this.consumerController.createConsumerType(this.orgID, this.consumerFG.value).subscribe((res: ResponseM) => {\n\n            let result;\n            result = {\n                status: DialogResponseEnum.SUCCESS,\n            }\n\n            this.dialogRef.close(result);\n\n        }, error => {\n            console.log('error in createConsumerType -', error);\n        });\n    }\n\n    getConsumerTypeByID(consumerID) {\n        this.consumerController.getConsumerTypeByID(this.orgID, consumerID).subscribe((res: ConsumerM) => {\n            this.consumerM = res;\n            this.patchConsumer(this.consumerM);\n        }, error => {\n            console.log('error in getConsumerTypeByID -', error);\n        });\n    }\n\n    patchConsumer(consumer: ConsumerM) {\n        this.consumerFG.patchValue(consumer);\n\n        this.intialObject = this.consumerFG.value;\n\n        this.consumerFG.valueChanges.subscribe(() => {\n            this.isEqual = isEqual(this.intialObject, this.consumerFG.value);\n        });\n\n    }\n\n    updateConsumerType() {\n        this.consumerController.updateConsumerType(this.orgID, this.consumerID, this.consumerFG.value).subscribe((res: ResponseM) => {\n\n            let result;\n            result = {\n                status: DialogResponseEnum.SUCCESS,\n            }\n\n            this.dialogRef.close(result);\n\n        }, error => {\n            console.log('error in updateConsumerType -', error);\n        })\n    }\n\n    errorHandling = (formGroup: FormGroup, controlPath: string, error: string): boolean => {\n        return formGroup.get(controlPath).hasError(error);\n    }\n\n}\n","<div class=\"headerContainer p-0\" #header>\n    <div class=\"headerLeftContainer\">\n        <div class=\"pageTitle\">{{ action == FormAction.CREATE ? PageTitleEnum.CREATE :\n            PageTitleEnum.UPDATE }} {{ pageTitle }}</div>\n    </div>\n\n    <div class=\"headerRightContainer\">\n        <div class=\"headerRightContainerInner\">\n            <button class=\"btn btn-sm centerAlign py-1 iconBtn\" matRipple\n                [matRippleCentered]=\"MATERIAL_CONSTANT.MAT_RIPPLE_CENTER\" matTooltipPosition=\"below\"\n                [matTooltip]=\"ButtonTooltipEnum.CLOSE\" mat-dialog-close>\n                <span class=\"material-symbols-outlined\">\n                    close\n                </span>\n            </button>\n        </div>\n    </div>\n</div>\n\n<mat-dialog-content class=\"mat-typography customScrollBar pt-2\" #body>\n    <form [formGroup]=\"consumerFG\" (ngSubmit)=\"consumerSubmit()\">\n\n        <div class=\"row\">\n            <div class=\"col-sm-12\">\n                <mat-form-field class=\"matFieldWidth100\"\n                    [appearance]=\"MaterialFormFieldAppearance.FORM_FIELD_APPEARANCE\">\n                    <mat-label class=\"formLabel\">Name</mat-label>\n                    <input class=\"formPlaceholder\" type=\"text\" placeholder=\"Name\" matInput formControlName=\"name\"\n                        required />\n                    <mat-error *ngIf=\"errorHandling(consumerFG, 'name', 'required')\">\n                        {{ FormErrorEnum.REQUIRED }}\n                    </mat-error>\n                </mat-form-field>\n            </div>\n        </div>\n\n        <div class=\"row\">\n            <div class=\"col-sm-12\">\n                <mat-form-field class=\"matFieldWidth100\" [appearance]=\"MaterialFormFieldAppearance.FORM_FIELD_APPEARANCE\">\n                    <mat-label>Select utility source</mat-label>\n                    <mat-select formControlName=\"utilitySourceID\" required>\n                        <ng-container\n                            *ngIf=\"utilitySourceTypeM && utilitySourceTypeM.length > 0 && utilitySourceTypeM[0]['id']; else noUtilitySource\">\n                            <mat-option *ngFor=\"let utilitySource of utilitySourceTypeM\" [value]=\"utilitySource.id\">\n                                {{ utilitySource.name }}\n                            </mat-option>\n                        </ng-container>\n                        <ng-template #noUtilitySource>\n                            <mat-option disabled>\n                                {{ COMMON_CONSTANT.NO_DATA_FOUND }}\n                            </mat-option>\n                        </ng-template>\n                    </mat-select>\n                \n                    <mat-error *ngIf=\"errorHandling(consumerFG, 'utilitySourceID', 'required')\">\n                        {{ FormErrorEnum.REQUIRED }}\n                    </mat-error>\n                </mat-form-field>\n            </div>\n        </div>\n\n        <div class=\"row\">\n            <div class=\"col-sm-12\">\n                <mat-form-field class=\"matFieldWidth100\" [appearance]=\"MaterialFormFieldAppearance.FORM_FIELD_APPEARANCE\">\n                    <mat-label class=\"formLabel\">Type</mat-label>\n                    <input class=\"formPlaceholder\" type=\"text\" placeholder=\"Type\" matInput formControlName=\"type\" required\n                        pattern=\"{{ COMMON_CONSTANT.SPECIAL_CHARACTERS_PATTERN }}\" />\n                    <mat-error *ngIf=\"errorHandling(consumerFG, 'type', 'required')\">\n                        {{ FormErrorEnum.REQUIRED }}\n                    </mat-error>\n                    <mat-error *ngIf=\"errorHandling(consumerFG, 'type', 'pattern')\">\n                        {{ FormErrorEnum.PATTERN }}\n                    </mat-error>\n                </mat-form-field>\n            </div>\n        </div>\n\n        <button class=\"d-none\" type=\"submit\" #formSubmitBtn></button>\n    </form>\n</mat-dialog-content>\n\n<div class=\"tscDialogFooter\" #footer>\n    <button class=\"btn btn-sm btn-success\" [ngClass]=\"{'disabled': isEqual && action == FormAction.UPDATE}\"\n        (click)=\"formSubmitBtn.click()\" matRipple [matRippleCentered]=\"MATERIAL_CONSTANT.MAT_RIPPLE_CENTER\"\n        matTooltipPosition=\"below\" [matTooltip]=\"ButtonTooltipEnum.NO_CHANGE\"> {{\n        tscCommonService.getButtonLabel(action) }}</button>\n    <button class=\"btn btn-sm btn-secondary me-2\" mat-dialog-close matRipple\n        [matRippleCentered]=\"MATERIAL_CONSTANT.MAT_RIPPLE_CENTER\">Cancel</button>\n</div>","import { Component, ElementRef, OnInit, ViewChild } from '@angular/core';\nimport { FormControl, Validators } from '@angular/forms';\n\nimport { MatSort } from '@angular/material/sort';\nimport { MatDialog } from '@angular/material/dialog';\nimport { MatPaginator } from '@angular/material/paginator';\n\nimport { merge, fromEvent, of as observableOf } from 'rxjs';\nimport { map, startWith, switchMap, catchError } from \"rxjs/operators\";\n\nimport {\n    faPlus,\n    faEllipsisV\n} from '@fortawesome/free-solid-svg-icons';\n\nimport { SourceConsumerPage, SourceConsumerPageM, UtilitySourceTypeM } from '../../../../model/source-consumer.model';\n\nimport { ConsumerController } from '../../../../controller/consumer.controller';\n\nimport { SourceService } from '../../../../service/source.service';\n\nimport { ConsumerCreateUpdateComponent } from '../../_dialog/consumer/create-update/create-update.component';\n\n// tsc-library\nimport {\n    MATERIAL_CONSTANT,\n    TABLE_CONSTANT,\n    ButtonTooltipEnum,\n    ButtonLabelEnum,\n    SearchBarOneComponent,\n    FormAction,\n    COMMON_CONSTANT,\n    DialogOneComponent,\n    DialogOneEnum,\n    PageM,\n    DialogResponseEnum,\n    FunnelFilterComponent,\n} from '@library/tsc-common';\nimport { StorageService } from '@library/storage-service';\n// /tsc-library/\n\n@Component({\n    selector: 'lib-page',\n    templateUrl: './page.component.html',\n    styles: [\n    ]\n})\nexport class ConsumerPageComponent implements OnInit {\n\n    faPlus = faPlus;\n    faEllipsisV = faEllipsisV;\n\n    MATERIAL_CONSTANT = MATERIAL_CONSTANT;\n    TABLE_CONSTANT = TABLE_CONSTANT;\n    COMMON_CONSTANT = COMMON_CONSTANT;\n\n    ButtonTooltipEnum = ButtonTooltipEnum;\n    FormAction = FormAction;\n\n    searchByPlaceHolder: string = 'consumer name';\n\n    orgID: any;\n    utilitySourceI: any;\n    dataSource = [new SourceConsumerPage()];\n    dataSourceLength: number = 0;\n    displayedColumn: string[] = ['id', 'name', 'utilitySourceName', 'type', 'option'];\n    searchFlag: boolean = false;\n    searchValue: string;\n    searchFC = new FormControl('', Validators.required);\n\n    utilitySource: boolean = false;\n    utilitySourceFC: FormControl = new FormControl();\n    filterArr: Array<string> = [];\n\n    @ViewChild('sort') sort: MatSort;\n    @ViewChild('paginator') paginator: MatPaginator;\n    @ViewChild('refreshBtn') refreshBtn: ElementRef;\n    @ViewChild('searchBar') searchBar: SearchBarOneComponent;\n    @ViewChild('typeSelect') typeSelect: FunnelFilterComponent;\n\n    constructor(\n        private dialog: MatDialog,\n        private storageService: StorageService,\n        private sourceService: SourceService,\n        private consumerController: ConsumerController\n    ) { }\n\n    ngOnInit(): void {\n        this.orgID = this.storageService.getStorage('currentOrgID');\n\n        this.getUtilitySourceAndType();\n    }\n\n    async getUtilitySourceAndType() {\n        const result = <UtilitySourceTypeM>await this.sourceService.getUtilitySourceAndType(this.orgID);\n        const allKey = {\n            \"id\": 0,\n            \"name\": \"All\",\n            \"keyID\": \"ALL\",\n            \"type\": []\n        }\n        result.utilitySource.unshift(allKey);\n        this.utilitySourceI = result.utilitySource;\n    }\n\n    ngAfterViewInit() {\n        merge(\n            this.sort.sortChange,\n            this.typeSelect.mono,\n            fromEvent(this.refreshBtn.nativeElement, 'click')\n        ).pipe(\n            startWith({}),\n            switchMap((): any => {\n\n                this.filterArr = [];\n\n                if (this.searchFlag) {\n                    var searchValue = 'name:' + this.searchValue;\n                }\n\n                if (this.utilitySource) {\n                    if (this.utilitySourceFC.value == 'ALL') {\n                        this.utilitySource = false;\n                    } else {\n                        this.filterArr.push('utilitySource:' + this.utilitySourceFC.value);\n                    }\n                }\n\n                return this.consumerController.getConsumerTypeByPage(\n                    this.paginator.pageIndex,\n                    this.paginator.pageSize,\n                    this.sort.active,\n                    this.sort.direction,\n                    searchValue,\n                    this.filterArr,\n                    this.orgID,\n                ).pipe(catchError(() => observableOf(null)));\n            }),\n            map((response: PageM<SourceConsumerPageM>): any => {\n                if (response == null) {\n                    this.dataSourceLength = 0;\n                    return [];\n                }\n\n                this.dataSourceLength = response.totalCount;\n                return response.records;\n            })\n        ).subscribe((dataSource) => {\n            this.dataSource = dataSource;\n        });\n    }\n\n    searchFn(value: string) {\n        this.searchFlag = true;\n        this.searchValue = value;\n\n        if (value.length == 0) {\n            this.resetSearch();\n        }\n\n        this.refreshBtn.nativeElement.click();\n    }\n\n    resetSearch() {\n        this.searchFlag = false;\n        this.searchBar.searchClear();\n    }\n\n    createConsumer(action: string) {\n        const dialogRef = this.dialog.open(ConsumerCreateUpdateComponent,\n            {\n                height: '100vh',\n                width: '600px',\n                position: { right: '-2px', top: '0px' },\n                disableClose: true,\n                panelClass: 'matDialogContainerOverride',\n                data: {\n                    action: action\n                }\n            });\n\n        dialogRef.afterClosed()\n            .subscribe((result) => {\n                if (result.status == DialogResponseEnum.SUCCESS) {\n                    this.refreshBtn.nativeElement.click();\n                }\n            });\n    }\n\n    updateConsumer = (action, row) => {\n        const dialogRef = this.dialog.open(ConsumerCreateUpdateComponent,\n            {\n                height: '100vh',\n                width: '600px',\n                position: { right: '-2px', top: '0px' },\n                disableClose: true,\n                panelClass: 'matDialogContainerOverride',\n                data: {\n                    action: action,\n                    consumerID: row.id\n                }\n            });\n\n        dialogRef.afterClosed()\n            .subscribe((result) => {\n                if (result.status == DialogResponseEnum.SUCCESS) {\n                    this.refreshBtn.nativeElement.click();\n                }\n            });\n    }\n\n    openDeleteDialog(consumer) {\n\n        const dialog = this.dialog.open(DialogOneComponent, {\n            minWidth: '450px',\n            maxWidth: '450px',\n            data: {\n                type: DialogOneEnum.DELETE,\n                icon: 'dangerous',\n                header: 'Delete consumer type?',\n                body: '<b>' + consumer.name + '</b>' + ' will be deleted permanently.</br></br>Are you sure you want to continue?',\n                buttonOne: ButtonLabelEnum.CANCEL_BTN_LABEL,\n                buttonTwo: ButtonLabelEnum.DELETE_BTN_LABEL\n            }\n        });\n        dialog.afterClosed().subscribe(res => {\n            if (res) {\n                this.deleteConsumerType(consumer.id);\n            }\n        })\n    }\n\n    deleteConsumerType(consumerID) {\n        this.consumerController.deleteConsumerType(this.orgID, consumerID).subscribe((deleteRes) => {\n            if (deleteRes) {\n                this.refreshBtn.nativeElement.click();\n            }\n        });\n    }\n\n}\n","<div class=\"card cardOverwrite h100\">\n    <div class=\"headerContainer\">\n        <div class=\"headerLeftContainer\">\n            <div class=\"pageTitle\">Consumer type</div>\n            <div class=\"pageSubtitle\"></div>\n        </div>\n\n        <div class=\"headerRightContainer\">\n            <div class=\"headerRightContainerInner\">\n                <lib-search-bar-one class=\"me-3\" #searchBar [searchBy]=\"searchByPlaceHolder\"\n                    (emitSearch)=\"searchFn($event)\"></lib-search-bar-one>\n\n                <button class=\"btn btn-sm btn-light refreshBtn centerAlign me-3 py-1\" #refreshBtn matRipple\n                    [matRippleCentered]=\"MATERIAL_CONSTANT.MAT_RIPPLE_CENTER\" matTooltipPosition=\"below\"\n                    [matTooltip]=\"ButtonTooltipEnum.REFRESH\">\n                    <span class=\"material-symbols-outlined text-secondary\">\n                        refresh\n                    </span>\n                </button>\n\n                <button type=\"button\" class=\"btn btn-sm btn-success\" (click)=\"createConsumer(FormAction.CREATE)\" matRipple\n                    [matRippleCentered]=\"MATERIAL_CONSTANT.MAT_RIPPLE_CENTER\" matTooltipPosition=\"below\"\n                    [matTooltip]=\"ButtonTooltipEnum.CREATE\">\n                    <fa-icon [icon]=\"faPlus\" class=\"me-1\"></fa-icon>Consumer type\n                </button>\n            </div>\n        </div>\n    </div>\n\n    <table class=\"w-100\" mat-table matSort #sort=\"matSort\" matSortActive=\"name\" matSortDirection=\"asc\"\n        matSortDisableClear [dataSource]=\"dataSource\">\n\n        <ng-container matColumnDef=\"id\">\n            <th mat-header-cell *matHeaderCellDef>ID</th>\n            <td mat-cell *matCellDef=\"let row\">{{ row.id }}</td>\n        </ng-container>\n\n        <ng-container matColumnDef=\"name\">\n            <th class=\"px-4\" mat-header-cell *matHeaderCellDef mat-sort-header disableClear>Name</th>\n            <td class=\"px-4\" mat-cell *matCellDef=\"let row\">\n                {{ row.name ? row.name : COMMON_CONSTANT.HYPHEN }}\n            </td>\n        </ng-container>\n\n        <ng-container matColumnDef=\"utilitySourceName\">\n            <th mat-header-cell *matHeaderCellDef>\n                <funnel-filter #typeSelect header=\"Utility source\" type=\"mono\" value=\"keyID\" [entityList]=\"utilitySourceI\"\n                    view=\"name\" [selectFC]=\"utilitySourceFC\" [active]=\"utilitySource\" (mono)=\"utilitySource = true;\">\n                </funnel-filter>\n            </th>\n            <td mat-cell *matCellDef=\"let row\">\n                {{ row.utilitySourceName ? row.utilitySourceName : COMMON_CONSTANT.HYPHEN }}\n            </td>\n        </ng-container>\n\n        <ng-container matColumnDef=\"type\">\n            <th mat-header-cell *matHeaderCellDef>Type</th>\n            <td mat-cell *matCellDef=\"let row\">\n                {{ row.type ? row.type : COMMON_CONSTANT.HYPHEN }}\n            </td>\n        </ng-container>\n\n        <ng-container matColumnDef=\"option\">\n            <th mat-header-cell *matHeaderCellDef></th>\n            <td mat-cell *matCellDef=\"let row\">\n                <div class=\"centerAlignVertical\">\n\n                    <button type=\"button\" class=\"iconBtn centerAlign text-primary updateIconHover\"\n                        (click)=\"updateConsumer(FormAction.UPDATE, row)\" matRipple [matRippleCentered]=\"MATERIAL_CONSTANT.MAT_RIPPLE_CENTER\"\n                        matTooltipPosition=\"below\" [matTooltip]=\"ButtonTooltipEnum.UPDATE\">\n                        <span class=\"material-symbols-outlined icon\">\n                            edit\n                        </span>\n                    </button>\n\n                    <a class=\"iconBtn centerAlign text-danger deleteIconHover cursorPointer\" matTooltipPosition=\"below\"\n                        [matTooltip]=\"ButtonTooltipEnum.DELETE\" matRipple\n                        [matRippleCentered]=\"MATERIAL_CONSTANT.MAT_RIPPLE_CENTER\" (click)=\"openDeleteDialog(row)\">\n                        <span class=\"material-symbols-outlined icon\">\n                            delete\n                        </span>\n                    </a>\n                </div>\n            </td>\n        </ng-container>\n\n        <tr mat-header-row *matHeaderRowDef=\"displayedColumn\"></tr>\n        <tr mat-row *matRowDef=\"let row; columns: displayedColumn;\" class=\"dataRow\"></tr>\n\n        <tr class=\"mat-row\" *matNoDataRow>\n            <td class=\"mat-cell text-center\" [attr.colspan]=\"displayedColumn.length\">\n                {{ TABLE_CONSTANT.TABLE_NO_DATA }}\n            </td>\n        </tr>\n    </table>\n\n    <mat-paginator class=\"roundedBorder\" showFirstLastButtons #paginator [length]=\"dataSourceLength\"\n        [pageSize]=\"TABLE_CONSTANT.DEFAULT_PAGE_SIZE\" [pageSizeOptions]=\"TABLE_CONSTANT.PAGE_SIZE_OPTION\">\n    </mat-paginator>\n</div>","import { NgModule } from '@angular/core';\nimport { RouterModule, Routes } from '@angular/router';\n\nimport { ConsumerPageComponent } from './page.component';\n\nconst routes: Routes = [\n    {\n        path: '',\n        component: ConsumerPageComponent\n    }\n];\n\n@NgModule({\n    imports: [RouterModule.forChild(routes)],\n    exports: [RouterModule]\n})\nexport class ConsumerPageRoutingModule { }\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\n\nimport { FormsModule } from '@angular/forms';\nimport { ReactiveFormsModule } from '@angular/forms';\n\nimport { MatRippleModule } from '@angular/material/core';\nimport { MatTableModule } from '@angular/material/table';\nimport { MatSortModule } from '@angular/material/sort';\nimport { MatTooltipModule } from '@angular/material/tooltip';\nimport { MatDialogModule } from '@angular/material/dialog';\nimport { MatPaginatorModule } from '@angular/material/paginator';\n\nimport { NgbModule } from '@ng-bootstrap/ng-bootstrap';\nimport { FontAwesomeModule } from '@fortawesome/angular-fontawesome';\n\nimport { ConsumerPageRoutingModule } from './page-routing.module';\nimport { ConsumerPageComponent } from './page.component';\n\n// tsc-library\nimport { SearchBarOneModule, FunnelFilterModule } from '@library/tsc-common';\n// /tsc-library/\n\n@NgModule({\n    declarations: [\n        ConsumerPageComponent\n    ],\n    imports: [\n        CommonModule,\n        ConsumerPageRoutingModule,\n\n        FormsModule,\n        ReactiveFormsModule,\n\n        MatRippleModule,\n        MatTableModule,\n        MatSortModule,\n        MatTooltipModule,\n        MatDialogModule,\n        MatPaginatorModule,\n\n        NgbModule,\n        FontAwesomeModule,\n\n        SearchBarOneModule,\n        FunnelFilterModule\n    ]\n})\nexport class ConsumerPageModule { }\n","import { Component, ElementRef, Inject, OnInit, Renderer2, ViewChild } from '@angular/core';\nimport { FormBuilder, FormGroup, Validators } from '@angular/forms';\n\nimport {\n    MAT_DIALOG_DATA,\n    MatDialogRef\n} from '@angular/material/dialog';\n\nimport { isEqual } from 'lodash';\n\nimport { SourceM, UtilitySourceTypeM } from '../../../../../model/source-consumer.model';\n\nimport { SourceController } from '../../../../../controller/source.controller';\n\nimport { SourceService } from '../../../../../service/source.service';\n\n// tsc-library\nimport { MaterialFormFieldAppearance, ButtonLabelEnum, FormAction, PageTitleEnum, FormErrorEnum, TSCCommonService, ResponseM, InvalidForm, COMMON_CONSTANT, Static, DialogResponseEnum, ButtonTooltipEnum, MATERIAL_CONSTANT } from '@library/tsc-common';\nimport { StorageService } from '@library/storage-service';\nimport { ToastrColor, ToastrService } from '@library/toastr-service';\n// /tsc-library/\n\n@Component({\n    selector: 'lib-create-update',\n    templateUrl: './create-update.component.html',\n    styles: [\n    ]\n})\nexport class SourceCreateUpdateComponent implements OnInit {\n\n    COMMON_CONSTANT = COMMON_CONSTANT;\n    MATERIAL_CONSTANT = MATERIAL_CONSTANT;\n\n    FormAction = FormAction;\n    FormErrorEnum = FormErrorEnum;\n    ButtonLabelEnum = ButtonLabelEnum;\n    ButtonTooltipEnum = ButtonTooltipEnum;\n    PageTitleEnum = PageTitleEnum;\n    MaterialFormFieldAppearance = MaterialFormFieldAppearance;\n\n    pageTitle: string = 'Source type';\n\n    orgID: any;\n    sourceID: any;\n    action: string;\n    isEqual: boolean = true;\n    intialObject: any;\n\n    utilitySourceTypeM: any;\n    allSourceTypeID: any[] = [];\n    totalSourceTypeCount: number = 0;\n    utilitySourceI = [new Static()];\n    sourceType = [new Static()];\n    sourceM: SourceM;\n    sourceFG: FormGroup;\n\n    @ViewChild('header') header: ElementRef;\n    @ViewChild('footer') footer: ElementRef;\n    @ViewChild('body') body: ElementRef;\n\n    constructor(\n        @Inject(MAT_DIALOG_DATA) public data,\n        private dialogRef: MatDialogRef<SourceCreateUpdateComponent>,\n        private renderer: Renderer2,\n        private formBuilder: FormBuilder,\n        private storageService: StorageService,\n        private toastrService: ToastrService,\n        public tscCommonService: TSCCommonService,\n        private sourceController: SourceController,\n        private sourceService: SourceService\n    ) {\n        this.action = data.action;\n        this.sourceID = data.sourceID;\n    }\n\n    ngOnInit(): void {\n        this.orgID = this.storageService.getStorage('currentOrgID');\n\n        this.getUtilitySourceAndType();\n        this.sourceFGInit();\n\n        if (this.action == FormAction.UPDATE) {\n            this.getSourceTypeByID(this.sourceID);\n        }\n    }\n\n    ngAfterViewInit() {\n        this.heightHandler();\n    }\n\n    heightHandler(): void {\n        const headerHeight = this.header.nativeElement.offsetHeight;\n        const footerHeight = this.footer.nativeElement.offsetHeight;\n        const offsetHeight = 'calc(100vh - ' + (headerHeight + footerHeight + 24) + 'px)';\n\n        this.renderer.setStyle(this.body.nativeElement, 'height', offsetHeight);\n        this.renderer.setStyle(this.body.nativeElement, 'max-height', offsetHeight);\n    }\n\n    async getUtilitySourceAndType() {\n        const result = <UtilitySourceTypeM>await this.sourceService.getUtilitySourceAndType(this.orgID);\n        this.utilitySourceTypeM = result.utilitySource;\n    }\n\n    sourceFGInit() {\n        this.sourceFG = this.formBuilder.group({\n            name: [, [Validators.required]],\n            utilitySourceID: [, [Validators.required]],\n            typeID: [, [Validators.required]]\n        });\n    }\n\n    onUtilitySourceChange(utilitySourceID: number) {\n        const selectedUtilitySource = this.utilitySourceTypeM.find(source => source.id == utilitySourceID);\n        if (selectedUtilitySource) {\n            this.sourceType = selectedUtilitySource.type;\n        } else {\n            this.sourceType = [];\n        }\n    }\n\n    sourceSubmit() {\n\n        if (this.sourceFG.invalid) {\n            this.toastrService.openToast(InvalidForm.INVALID_FORM_TITLE, InvalidForm.INVALID_FORM_MESSAGE, ToastrColor.ERROR);\n            return;\n        } else {\n            if (this.action == FormAction.CREATE) {\n                this.createSourceType();\n            } else if (this.action == FormAction.UPDATE) {\n                this.updateSourceType();\n            }\n        }\n    }\n\n    createSourceType() {\n        this.sourceController.createSourceType(this.orgID, this.sourceFG.value).subscribe((res: ResponseM) => {\n\n            let result;\n            result = {\n                status: DialogResponseEnum.SUCCESS,\n            }\n\n            this.dialogRef.close(result);\n\n        }, error => {\n            console.log('error in createSourceType -', error);\n        });\n    }\n\n    getSourceTypeByID(sourceID) {\n        this.sourceController.getSourceTypeByID(this.orgID, sourceID).subscribe((res: SourceM) => {\n            this.sourceM = res;\n            this.patchSource(this.sourceM);\n        }, error => {\n            console.log('error in getSourceTypeByID -', error);\n        });\n    }\n\n    patchSource(source: SourceM) {\n        this.sourceFG.patchValue(source);\n\n        this.onUtilitySourceChange(source.utilitySourceID);\n\n        this.intialObject = this.sourceFG.value;\n\n        this.sourceFG.valueChanges.subscribe(() => {\n            this.isEqual = isEqual(this.intialObject, this.sourceFG.value);\n        });\n\n    }\n\n    updateSourceType() {\n        this.sourceController.updateSourceType(this.orgID, this.sourceID, this.sourceFG.value).subscribe((res: ResponseM) => {\n\n            let result;\n            result = {\n                status: DialogResponseEnum.SUCCESS,\n            }\n\n            this.dialogRef.close(result);\n\n        }, error => {\n            console.log('error in updateSourceType -', error);\n        })\n    }\n\n    errorHandling = (formGroup: FormGroup, controlPath: string, error: string): boolean => {\n        return formGroup.get(controlPath).hasError(error);\n    }\n\n}","<div class=\"headerContainer p-0\" #header>\n    <div class=\"headerLeftContainer\">\n        <div class=\"pageTitle\">{{ action == FormAction.CREATE ? PageTitleEnum.CREATE :\n            PageTitleEnum.UPDATE }} {{ pageTitle }}</div>\n    </div>\n\n    <div class=\"headerRightContainer\">\n        <div class=\"headerRightContainerInner\">\n            <button class=\"btn btn-sm centerAlign py-1 iconBtn\" matRipple\n                [matRippleCentered]=\"MATERIAL_CONSTANT.MAT_RIPPLE_CENTER\" matTooltipPosition=\"below\"\n                [matTooltip]=\"ButtonTooltipEnum.CLOSE\" mat-dialog-close>\n                <span class=\"material-symbols-outlined\">\n                    close\n                </span>\n            </button>\n        </div>\n    </div>\n</div>\n\n<mat-dialog-content class=\"mat-typography customScrollBar pt-2\" #body>\n    <form [formGroup]=\"sourceFG\" (ngSubmit)=\"sourceSubmit()\">\n\n        <div class=\"row\">\n            <div class=\"col-sm-12\">\n                <mat-form-field class=\"matFieldWidth100\"\n                    [appearance]=\"MaterialFormFieldAppearance.FORM_FIELD_APPEARANCE\">\n                    <mat-label class=\"formLabel\">Name</mat-label>\n                    <input class=\"formPlaceholder\" type=\"text\" placeholder=\"Source name\" matInput formControlName=\"name\"\n                        required />\n                    <mat-error *ngIf=\"errorHandling(sourceFG, 'name', 'required')\">\n                        {{ FormErrorEnum.REQUIRED }}\n                    </mat-error>\n                </mat-form-field>\n            </div>\n        </div>\n\n        <div class=\"row\">\n            <div class=\"col-sm-12\">\n                <mat-form-field class=\"matFieldWidth100\" [appearance]=\"MaterialFormFieldAppearance.FORM_FIELD_APPEARANCE\">\n                    <mat-label>Select utility source</mat-label>\n\n                    <mat-select formControlName=\"utilitySourceID\" (selectionChange)=\"onUtilitySourceChange($event.value)\" required>\n                        <ng-container\n                            *ngIf=\"utilitySourceTypeM && utilitySourceTypeM.length > 0 && utilitySourceTypeM[0]['id']; else noUtilitySource\">\n                            <mat-option *ngFor=\"let utilitySource of utilitySourceTypeM\" [value]=\"utilitySource.id\">\n                                {{ utilitySource.name }}\n                            </mat-option>\n                        </ng-container>\n                        <ng-template #noUtilitySource>\n                            <mat-option disabled>\n                                {{ COMMON_CONSTANT.NO_DATA_FOUND }}\n                            </mat-option>\n                        </ng-template>\n                    </mat-select>\n\n                    <mat-error *ngIf=\"errorHandling(sourceFG, 'utilitySourceID', 'required')\">\n                        {{ FormErrorEnum.REQUIRED }}\n                    </mat-error>\n                </mat-form-field>\n            </div>\n        </div>\n\n        <div class=\"row\">\n            <div class=\"col-sm-12\">\n                <mat-form-field class=\"matFieldWidth100\" [appearance]=\"MaterialFormFieldAppearance.FORM_FIELD_APPEARANCE\">\n                    <mat-label>Select utility source type</mat-label>\n\n                    <mat-select formControlName=\"typeID\" required>\n                        <ng-container *ngIf=\"sourceType && sourceType.length > 0 && sourceType[0]['id']; else noSourceType\">\n                            <mat-option *ngFor=\"let type of sourceType\" [value]=\"type.id\">\n                                {{ type.name }}\n                            </mat-option>\n                        </ng-container>\n                        <ng-template #noSourceType>\n                            <mat-option disabled>\n                                {{ COMMON_CONSTANT.NO_DATA_FOUND }}\n                            </mat-option>\n                        </ng-template>\n                    </mat-select>\n\n                    <mat-error *ngIf=\"errorHandling(sourceFG, 'typeID', 'required')\">\n                        {{ FormErrorEnum.REQUIRED }}\n                    </mat-error>\n                </mat-form-field>\n            </div>\n        </div>\n\n        <button class=\"d-none\" type=\"submit\" #formSubmitBtn></button>\n    </form>\n</mat-dialog-content>\n\n<div class=\"tscDialogFooter\" #footer>\n    <button class=\"btn btn-sm btn-success\" [ngClass]=\"{'disabled': isEqual && action == FormAction.UPDATE}\"\n        (click)=\"formSubmitBtn.click()\" matRipple [matRippleCentered]=\"MATERIAL_CONSTANT.MAT_RIPPLE_CENTER\"\n        matTooltipPosition=\"below\" [matTooltip]=\"ButtonTooltipEnum.NO_CHANGE\"> {{\n        tscCommonService.getButtonLabel(action) }}</button>\n    <button class=\"btn btn-sm btn-secondary me-2\" mat-dialog-close matRipple\n        [matRippleCentered]=\"MATERIAL_CONSTANT.MAT_RIPPLE_CENTER\">Cancel</button>\n</div>","import { NgModule } from '@angular/core';\nimport { RouterModule, Routes } from '@angular/router';\n\nimport { SourceCreateUpdateComponent } from './create-update.component';\n\nconst routes: Routes = [\n    {\n        path: '',\n        component: SourceCreateUpdateComponent\n    }\n];\n\n@NgModule({\n    imports: [RouterModule.forChild(routes)],\n    exports: [RouterModule]\n})\nexport class SourceCreateUpdateRoutingModule { }\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\n\nimport {\n    FormsModule,\n    ReactiveFormsModule\n} from '@angular/forms';\n\nimport { MatButtonModule } from '@angular/material/button';\nimport { MatFormFieldModule } from '@angular/material/form-field';\nimport { MatIconModule } from '@angular/material/icon';\nimport { MatInputModule } from '@angular/material/input';\nimport { MatSelectModule } from '@angular/material/select';\nimport { MatTooltipModule } from '@angular/material/tooltip';\nimport { MatOptionModule } from '@angular/material/core';\nimport { MatRippleModule } from '@angular/material/core';\nimport { MatDialogModule } from '@angular/material/dialog';\n\nimport { NgbModule } from '@ng-bootstrap/ng-bootstrap';\n\nimport { SourceCreateUpdateRoutingModule } from './create-update-routing.module';\nimport { SourceCreateUpdateComponent } from './create-update.component';\n\n\n@NgModule({\n    declarations: [\n        SourceCreateUpdateComponent\n    ],\n    imports: [\n        CommonModule,\n        SourceCreateUpdateRoutingModule,\n\n        FormsModule,\n        ReactiveFormsModule,\n\n        MatIconModule,\n        MatInputModule,\n        MatSelectModule,\n        MatTooltipModule,\n        MatOptionModule,\n        MatFormFieldModule,\n        MatButtonModule,\n        MatRippleModule,\n        MatDialogModule,\n\n        NgbModule\n    ]\n})\nexport class SourceCreateUpdateModule { }\n","import { NgModule } from '@angular/core';\nimport { RouterModule, Routes } from '@angular/router';\n\nimport { ConsumerCreateUpdateComponent } from './create-update.component';\n\nconst routes: Routes = [\n    {\n        path: '',\n        component: ConsumerCreateUpdateComponent\n    }\n];\n\n@NgModule({\n    imports: [RouterModule.forChild(routes)],\n    exports: [RouterModule]\n})\nexport class ConsumerCreateUpdateRoutingModule { }\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\n\nimport {\n    FormsModule,\n    ReactiveFormsModule\n} from '@angular/forms';\n\nimport { MatButtonModule } from '@angular/material/button';\nimport { MatFormFieldModule } from '@angular/material/form-field';\nimport { MatIconModule } from '@angular/material/icon';\nimport { MatInputModule } from '@angular/material/input';\nimport { MatSelectModule } from '@angular/material/select';\nimport { MatTooltipModule } from '@angular/material/tooltip';\nimport { MatOptionModule } from '@angular/material/core';\nimport { MatRippleModule } from '@angular/material/core';\nimport { MatDialogModule } from '@angular/material/dialog';\n\nimport { NgbModule } from '@ng-bootstrap/ng-bootstrap';\n\nimport { ConsumerCreateUpdateRoutingModule } from './create-update-routing.module';\nimport { ConsumerCreateUpdateComponent } from './create-update.component';\n\n\n@NgModule({\n    declarations: [\n        ConsumerCreateUpdateComponent\n    ],\n    imports: [\n        CommonModule,\n        ConsumerCreateUpdateRoutingModule,\n\n        FormsModule,\n        ReactiveFormsModule,\n\n        MatIconModule,\n        MatInputModule,\n        MatSelectModule,\n        MatTooltipModule,\n        MatOptionModule,\n        MatFormFieldModule,\n        MatButtonModule,\n        MatRippleModule,\n        MatDialogModule,\n\n        NgbModule\n    ]\n})\nexport class ConsumerCreateUpdateModule { }\n","import { Component, ElementRef, OnInit, ViewChild } from '@angular/core';\nimport { FormControl, Validators } from '@angular/forms';\n\nimport { MatSort } from '@angular/material/sort';\nimport { MatDialog } from '@angular/material/dialog';\nimport { MatPaginator } from '@angular/material/paginator';\n\nimport { merge, fromEvent, of as observableOf } from 'rxjs';\nimport { map, startWith, switchMap, catchError } from \"rxjs/operators\";\n\nimport {\n    faPlus,\n    faEllipsisV\n} from '@fortawesome/free-solid-svg-icons';\n\nimport { SourceConsumerPage, SourceConsumerPageM, UtilitySourceTypeM } from '../../../../model/source-consumer.model';\n\nimport { SourceController } from '../../../../controller/source.controller';\n\nimport { SourceService } from '../../../../service/source.service';\n\nimport { SourceCreateUpdateComponent } from '../../_dialog/source/create-update/create-update.component';\n\n// tsc-library\nimport {\n    MATERIAL_CONSTANT,\n    TABLE_CONSTANT,\n    ButtonTooltipEnum,\n    ButtonLabelEnum,\n    SearchBarOneComponent,\n    FormAction,\n    COMMON_CONSTANT,\n    DialogOneComponent,\n    DialogOneEnum,\n    FunnelFilterComponent,\n    PageM,\n    DialogResponseEnum\n} from '@library/tsc-common';\nimport { StorageService } from '@library/storage-service';\n// /tsc-library/\n\n@Component({\n    selector: 'lib-page',\n    templateUrl: './page.component.html',\n    styles: [\n    ]\n})\nexport class SourcePageComponent implements OnInit {\n\n    faPlus = faPlus;\n    faEllipsisV = faEllipsisV;\n\n    MATERIAL_CONSTANT = MATERIAL_CONSTANT;\n    TABLE_CONSTANT = TABLE_CONSTANT;\n    COMMON_CONSTANT = COMMON_CONSTANT;\n\n    ButtonTooltipEnum = ButtonTooltipEnum;\n    DialogResponseEnum = DialogResponseEnum;\n    FormAction = FormAction;\n\n    searchByPlaceHolder: string = 'source name';\n\n    orgID: any;\n    utilitySourceI: any;\n    dataSource = [new SourceConsumerPage()];\n    dataSourceLength: number = 0;\n    displayedColumn: string[] = ['id', 'name', 'utilitySourceName', 'type', 'option'];\n    searchFlag: boolean = false;\n    searchValue: string;\n    searchFC = new FormControl('', Validators.required);\n\n    utilitySource: boolean = false;\n    utilitySourceFC: FormControl = new FormControl();\n    filterArr: Array<string> = [];\n\n    @ViewChild('sort') sort: MatSort;\n    @ViewChild('paginator') paginator: MatPaginator;\n    @ViewChild('refreshBtn') refreshBtn: ElementRef;\n    @ViewChild('searchBar') searchBar: SearchBarOneComponent;\n    @ViewChild('typeSelect') typeSelect: FunnelFilterComponent;\n\n    constructor(\n        private dialog: MatDialog,\n        private storageService: StorageService,\n        private sourceController: SourceController,\n        private sourceService: SourceService\n    ) { }\n\n    ngOnInit(): void {\n        this.orgID = this.storageService.getStorage('currentOrgID');\n\n        this.getUtilitySourceAndType();\n    }\n\n    async getUtilitySourceAndType() {\n        const result = <UtilitySourceTypeM>await this.sourceService.getUtilitySourceAndType(this.orgID);\n        const allKey = {\n            \"id\": 0,\n            \"name\": \"All\",\n            \"keyID\": \"ALL\",\n            \"type\": []\n        }\n        result.utilitySource.unshift(allKey);\n        this.utilitySourceI = result.utilitySource;\n    }\n\n    ngAfterViewInit() {\n        merge(\n            this.sort.sortChange,\n            this.typeSelect.mono,\n            fromEvent(this.refreshBtn.nativeElement, 'click')\n        ).pipe(\n            startWith({}),\n            switchMap((): any => {\n\n                this.filterArr = [];\n\n                if (this.searchFlag) {\n                    var searchValue = 'name:' + this.searchValue;\n                }\n\n                if (this.utilitySource) {\n                    if (this.utilitySourceFC.value == 'ALL') {\n                        this.utilitySource = false;\n                    } else {\n                        this.filterArr.push('utilitySource:' + this.utilitySourceFC.value);\n                    }\n                }\n\n                return this.sourceController.getSourceTypeByPage(\n                    this.paginator.pageIndex,\n                    this.paginator.pageSize,\n                    this.sort.active,\n                    this.sort.direction,\n                    searchValue,\n                    this.filterArr,\n                    this.orgID,\n                ).pipe(catchError(() => observableOf(null)));\n            }),\n            map((response: PageM<SourceConsumerPageM>): any => {\n                if (response == null) {\n                    this.dataSourceLength = 0;\n                    return [];\n                }\n\n                this.dataSourceLength = response.totalCount;\n                return response.records;\n            })\n        ).subscribe((dataSource) => {\n            this.dataSource = dataSource;\n        });\n    }\n\n    searchFn(value: string) {\n        this.searchFlag = true;\n        this.searchValue = value;\n\n        if (value.length == 0) {\n            this.resetSearch();\n        }\n\n        this.refreshBtn.nativeElement.click();\n    }\n\n    resetSearch() {\n        this.searchFlag = false;\n        this.searchBar.searchClear();\n    }\n\n    createSource(action: string) {\n        const dialogRef = this.dialog.open(SourceCreateUpdateComponent,\n            {\n                height: '100vh',\n                width: '600px',\n                position: { right: '-2px', top: '0px' },\n                disableClose: true,\n                panelClass: 'matDialogContainerOverride',\n                data: {\n                    action: action\n                }\n            });\n\n        dialogRef.afterClosed()\n            .subscribe((result) => {\n                if (result.status == DialogResponseEnum.SUCCESS) {\n                    this.refreshBtn.nativeElement.click();\n                }\n            });\n    }\n\n    updateSource = (action, row) => {\n        const dialogRef = this.dialog.open(SourceCreateUpdateComponent,\n            {\n                height: '100vh',\n                width: '600px',\n                position: { right: '-2px', top: '0px' },\n                disableClose: true,\n                panelClass: 'matDialogContainerOverride',\n                data: {\n                    action: action,\n                    sourceID: row.id\n                }\n            });\n\n        dialogRef.afterClosed()\n            .subscribe((result) => {\n                if (result.status == DialogResponseEnum.SUCCESS) {\n                    this.refreshBtn.nativeElement.click();\n                }\n            });\n    }\n\n    openDeleteDialog(source) {\n\n        const dialog = this.dialog.open(DialogOneComponent, {\n            minWidth: '450px',\n            maxWidth: '450px',\n            data: {\n                type: DialogOneEnum.DELETE,\n                icon: 'dangerous',\n                header: 'Delete source type?',\n                body: '<b>' + source.name + '</b>' + ' will be deleted permanently.</br></br>Are you sure you want to continue?',\n                buttonOne: ButtonLabelEnum.CANCEL_BTN_LABEL,\n                buttonTwo: ButtonLabelEnum.DELETE_BTN_LABEL\n            }\n        });\n        dialog.afterClosed().subscribe(res => {\n            if (res) {\n                this.deleteSourceType(source.id);\n            }\n        })\n    }\n\n    deleteSourceType(sourceID) {\n        this.sourceController.deleteSourceType(this.orgID, sourceID).subscribe((deleteRes) => {\n            if (deleteRes) {\n                this.refreshBtn.nativeElement.click();\n            }\n        });\n    }\n\n}\n","<div class=\"card cardOverwrite h100\">\n    <div class=\"headerContainer\">\n        <div class=\"headerLeftContainer\">\n            <div class=\"pageTitle\">Source type</div>\n            <div class=\"pageSubtitle\"></div>\n        </div>\n\n        <div class=\"headerRightContainer\">\n            <div class=\"headerRightContainerInner\">\n                <lib-search-bar-one class=\"me-3\" #searchBar [searchBy]=\"searchByPlaceHolder\"\n                    (emitSearch)=\"searchFn($event)\"></lib-search-bar-one>\n\n                <button class=\"btn btn-sm btn-light refreshBtn centerAlign me-3 py-1\" #refreshBtn matRipple\n                    [matRippleCentered]=\"MATERIAL_CONSTANT.MAT_RIPPLE_CENTER\" matTooltipPosition=\"below\"\n                    [matTooltip]=\"ButtonTooltipEnum.REFRESH\">\n                    <span class=\"material-symbols-outlined text-secondary\">\n                        refresh\n                    </span>\n                </button>\n\n                <button type=\"button\" class=\"btn btn-sm btn-success\" (click)=\"createSource(FormAction.CREATE)\" matRipple\n                    [matRippleCentered]=\"MATERIAL_CONSTANT.MAT_RIPPLE_CENTER\" matTooltipPosition=\"below\"\n                    [matTooltip]=\"ButtonTooltipEnum.CREATE\">\n                    <fa-icon [icon]=\"faPlus\" class=\"me-1\"></fa-icon>Source type\n                </button>\n            </div>\n        </div>\n    </div>\n\n    <table class=\"w-100\" mat-table matSort #sort=\"matSort\" matSortActive=\"name\" matSortDirection=\"asc\"\n        matSortDisableClear [dataSource]=\"dataSource\">\n\n        <ng-container matColumnDef=\"id\">\n            <th mat-header-cell *matHeaderCellDef>ID</th>\n            <td mat-cell *matCellDef=\"let row\">{{ row.id }}</td>\n        </ng-container>\n\n        <ng-container matColumnDef=\"name\">\n            <th class=\"px-4\" mat-header-cell *matHeaderCellDef mat-sort-header disableClear>Name</th>\n            <td class=\"px-4\" mat-cell *matCellDef=\"let row\">\n                {{ row.name ? row.name : COMMON_CONSTANT.HYPHEN }}\n            </td>\n        </ng-container>\n\n        <ng-container matColumnDef=\"utilitySourceName\">\n            <th mat-header-cell *matHeaderCellDef>\n                <funnel-filter #typeSelect header=\"Utility source\" type=\"mono\" value=\"keyID\"\n                    [entityList]=\"utilitySourceI\" view=\"name\" [selectFC]=\"utilitySourceFC\" [active]=\"utilitySource\"\n                    (mono)=\"utilitySource = true;\">\n                </funnel-filter>\n            </th>\n            <td mat-cell *matCellDef=\"let row\">\n                {{ row.utilitySourceName ? row.utilitySourceName : COMMON_CONSTANT.HYPHEN }}\n            </td>\n        </ng-container>\n\n        <ng-container matColumnDef=\"type\">\n            <th class=\"px-4\" mat-header-cell *matHeaderCellDef>Utility source type</th>\n            <td class=\"px-4\" mat-cell *matCellDef=\"let row\">\n                {{ row.type ? row.type : COMMON_CONSTANT.HYPHEN }}\n            </td>\n        </ng-container>\n\n        <ng-container matColumnDef=\"option\">\n            <th mat-header-cell *matHeaderCellDef></th>\n            <td mat-cell *matCellDef=\"let row\">\n                <div class=\"centerAlignVertical\">\n\n                    <button type=\"button\" class=\"iconBtn centerAlign text-primary updateIconHover\"\n                        (click)=\"updateSource(FormAction.UPDATE, row)\" matRipple\n                        [matRippleCentered]=\"MATERIAL_CONSTANT.MAT_RIPPLE_CENTER\" matTooltipPosition=\"below\"\n                        [matTooltip]=\"ButtonTooltipEnum.UPDATE\">\n                        <span class=\"material-symbols-outlined icon\">\n                            edit\n                        </span>\n                    </button>\n\n                    <a class=\"iconBtn centerAlign text-danger deleteIconHover cursorPointer\" matTooltipPosition=\"below\"\n                        [matTooltip]=\"ButtonTooltipEnum.DELETE\" matRipple\n                        [matRippleCentered]=\"MATERIAL_CONSTANT.MAT_RIPPLE_CENTER\" (click)=\"openDeleteDialog(row)\">\n                        <span class=\"material-symbols-outlined icon\">\n                            delete\n                        </span>\n                    </a>\n                </div>\n            </td>\n        </ng-container>\n\n        <tr mat-header-row *matHeaderRowDef=\"displayedColumn\"></tr>\n        <tr mat-row *matRowDef=\"let row; columns: displayedColumn;\" class=\"dataRow\"></tr>\n\n        <tr class=\"mat-row\" *matNoDataRow>\n            <td class=\"mat-cell text-center\" [attr.colspan]=\"displayedColumn.length\">\n                {{ TABLE_CONSTANT.TABLE_NO_DATA }}\n            </td>\n        </tr>\n    </table>\n\n    <mat-paginator class=\"roundedBorder\" showFirstLastButtons #paginator [length]=\"dataSourceLength\"\n        [pageSize]=\"TABLE_CONSTANT.DEFAULT_PAGE_SIZE\" [pageSizeOptions]=\"TABLE_CONSTANT.PAGE_SIZE_OPTION\">\n    </mat-paginator>\n</div>","import { NgModule } from '@angular/core';\nimport { RouterModule, Routes } from '@angular/router';\n\nimport { SourcePageComponent } from './page.component';\n\nconst routes: Routes = [\n    {\n        path: '',\n        component: SourcePageComponent\n    }\n];\n\n@NgModule({\n    imports: [RouterModule.forChild(routes)],\n    exports: [RouterModule]\n})\nexport class SourcePageRoutingModule { }\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\n\nimport { FormsModule } from '@angular/forms';\nimport { ReactiveFormsModule } from '@angular/forms';\n\nimport { MatRippleModule } from '@angular/material/core';\nimport { MatTableModule } from '@angular/material/table';\nimport { MatSortModule } from '@angular/material/sort';\nimport { MatTooltipModule } from '@angular/material/tooltip';\nimport { MatDialogModule } from '@angular/material/dialog';\nimport { MatPaginatorModule } from '@angular/material/paginator';\n\nimport { NgbModule } from '@ng-bootstrap/ng-bootstrap';\nimport { FontAwesomeModule } from '@fortawesome/angular-fontawesome';\n\nimport { SourcePageRoutingModule } from './page-routing.module';\nimport { SourcePageComponent } from './page.component';\n\n// tsc-library\nimport { SearchBarOneModule, FunnelFilterModule } from '@library/tsc-common';\n// /tsc-library/\n\n@NgModule({\n    declarations: [\n        SourcePageComponent\n    ],\n    imports: [\n        CommonModule,\n        SourcePageRoutingModule,\n\n        FormsModule,\n        ReactiveFormsModule,\n\n        MatRippleModule,\n        MatTableModule,\n        MatSortModule,\n        MatTooltipModule,\n        MatDialogModule,\n        MatPaginatorModule,\n\n        NgbModule,\n        FontAwesomeModule,\n\n        SearchBarOneModule,\n        FunnelFilterModule\n    ]\n})\nexport class SourcePageModule { }\n","import { Component, OnInit } from '@angular/core';\nimport { FormArray, FormBuilder, FormControl, FormGroup, Validators } from '@angular/forms';\n\nimport { SelectionModel } from '@angular/cdk/collections';\n\nimport { isEqual } from 'lodash';\n\nimport { ConsumptionParameterM, SavedConsumptionParameterM } from '../../../../model/parameter.model';\nimport { SourceConsumerConfigure, SourceConsumerConfigureM } from '../../../../model/source-consumer.model';\n\nimport { ParameterController } from '../../../../controller/parameter.controller';\nimport { SourceController } from '../../../../controller/source.controller';\n\nimport { ParameterService } from '../../../../service/parameter.service';\n\n// tsc-library\nimport { MaterialFormFieldAppearance, ButtonLabelEnum, FormAction, PageTitleEnum, FormErrorEnum, TSCCommonService, InvalidForm, COMMON_CONSTANT, MatSelectSearchService, MessageAlertIconEnum, MessageAlertTypeEnum, ResponseM } from '@library/tsc-common';\nimport { StorageService } from '@library/storage-service';\nimport { ToastrColor, ToastrService } from '@library/toastr-service';\n// /tsc-library/\n\n@Component({\n    selector: 'lib-add-update',\n    templateUrl: './add-update.component.html',\n    styles: [\n    ]\n})\nexport class ConsumptionParamAddUpdateComponent implements OnInit {\n\n    COMMON_CONSTANT = COMMON_CONSTANT;\n\n    FormAction = FormAction;\n    FormErrorEnum = FormErrorEnum;\n    ButtonLabelEnum = ButtonLabelEnum;\n    PageTitleEnum = PageTitleEnum;\n    MessageAlertIconEnum = MessageAlertIconEnum;\n    MessageAlertTypeEnum = MessageAlertTypeEnum;\n    MaterialFormFieldAppearance = MaterialFormFieldAppearance;\n\n    orgID: any;\n    isEqual: boolean = true;\n    initialObject: any;\n\n    consumptionParamM: any;\n    consumptionParamFG: FormGroup;\n\n    sourceConsumerConfiguredM = new SourceConsumerConfigure();\n\n    allConsumptionParamID: any[] = [];\n    selection = new SelectionModel(true, []);\n\n    dependentConsumParamSearchUtil: MatSelectSearchService[] = [];\n\n    constructor(\n        private formBuilder: FormBuilder,\n        private storageService: StorageService,\n        private toastrService: ToastrService,\n        public tscCommonService: TSCCommonService,\n        private sourceController: SourceController,\n        private parameterController: ParameterController,\n        private parameterService: ParameterService\n    ) { }\n\n    ngOnInit(): void {\n        this.orgID = this.storageService.getStorage('currentOrgID');\n\n        this.getSourceConsumerConfig();\n        this.consumptionParamFGInit();\n    }\n\n    getSourceConsumerConfig() {\n        this.sourceController.getSourceConsumerConfig(this.orgID).subscribe((res: SourceConsumerConfigureM) => {\n            this.sourceConsumerConfiguredM = res;\n            this.getConsumptionParameter();\n        },\n            error => console.log('Error:', error)\n        );\n    }\n\n    getConsumptionParameter() {\n        this.consumptionParamFG.valueChanges.subscribe(() => { this.isEqual = isEqual(this.initialObject, this.consumptionParamFG.getRawValue()); });\n\n        this.parameterController.getConsumptionParameter(this.orgID).subscribe((response: ConsumptionParameterM) => {\n            if (response) {\n                this.consumptionParamM = response.consumptionParameter;\n\n                this.consumptionParamM.forEach((parameter) => {\n                    this.allConsumptionParamID.push(parameter);\n                    this.consumptionParameterFA.push(this.newConsumptionParameterFG(parameter.id));\n\n                    let searchUtility = new MatSelectSearchService(['label']);\n                    searchUtility.entityArr = parameter.dependentParameter;\n                    searchUtility.createSubscription();\n                    this.dependentConsumParamSearchUtil.push(searchUtility);\n\n                    this.initialObject = this.consumptionParamFG.value;\n                    this.isEqual = true;\n                });\n\n                this.getSavedConsumptionParameter();\n            }\n        }, error => {\n            console.log('error in getConsumptionParameter -', error);\n        });\n    }\n\n    consumptionParamFGInit() {\n        this.consumptionParamFG = this.formBuilder.group({\n            consumptionParameter: this.formBuilder.array([])\n        });\n    }\n\n    get consumptionParameterFA(): FormArray {\n        return this.consumptionParamFG.get('consumptionParameter') as FormArray;\n    }\n\n    async getSavedConsumptionParameter() {\n        const param = <SavedConsumptionParameterM[]>await this.parameterService.getSavedConsumptionParameter(this.orgID);\n        this.patchConsumptionParam(param)\n    }\n\n    patchConsumptionParam(param) {\n        this.consumptionParameterFA.controls.forEach(control => {\n            param.forEach(element => {\n                this.selection.select(element['aggregateParamID'])\n                if (element['aggregateParamID'] == control.value['aggregateParamID'])\n                    control.get('dependentParameterID').patchValue(element['dependentParameterID'])\n            });\n        });\n    }\n\n    selectAll() {\n        if (this.isAllSelected()) {\n            this.consumptionParameterFA.controls.forEach(control => {\n                const id = control.get('aggregateParamID').value;\n                this.selection.deselect(id);\n            });\n            return;\n        }\n        this.consumptionParameterFA.controls.forEach(control => {\n            const id = control.get('aggregateParamID').value;\n            this.selection.select(id);\n        });\n    }\n\n    isAllSelected() {\n        const selected = this.selection.selected.length;\n        const numRows = this.consumptionParamM.length;\n        return selected == numRows;\n    }\n\n    newConsumptionParameterFG(parameterID): FormGroup {\n        return this.formBuilder.group({\n            aggregateParamID: [parameterID],\n            dependentParameterID: [[], Validators.required]\n        });\n    }\n\n    selectAllDependentParam(index: number) {\n        const dependentParamFG = this.consumptionParameterFA.at(index) as FormGroup;\n        const dependentParamFC = dependentParamFG.get('dependentParameterID') as FormArray;\n\n        if (!dependentParamFC.value.includes(-1)) {\n            dependentParamFC.reset([]);\n            return;\n        }\n\n        const parameter = this.consumptionParamM[index];\n        const parameterDependentIDs = parameter.dependentParameter.map(depParam => depParam.id);\n\n        dependentParamFC.setValue([-1, ...parameterDependentIDs]);\n    }\n\n\n    selectDependentParam(index: number) {\n        const dependentParamFG = this.consumptionParameterFA.at(index) as FormGroup;\n        const dependentParamFC = dependentParamFG.get('dependentParameterID') as FormControl;\n\n        const selected = dependentParamFC.value;\n\n        const parameter = this.consumptionParamM[index];\n        const parameterDependentIDs = parameter.dependentParameter.map(depParam => depParam.id);\n        const totalDepParamCount = parameterDependentIDs.length;\n\n        if (selected.includes(-1)) {\n            selected.shift();\n            dependentParamFC.patchValue(selected);\n        } else if (dependentParamFC.value.length == totalDepParamCount) {\n            parameterDependentIDs.splice(0, 0, -1);\n            dependentParamFC.patchValue(parameterDependentIDs);\n        } else {\n            const filteredSelected = selected.filter(s => s != -1);\n            dependentParamFC.patchValue(filteredSelected);\n        }\n    }\n\n    consumptionParameterSubmit() {\n        const consumptionParameter = this.consumptionParamFG.value.consumptionParameter.map(param => {\n            const dependentParameterID = param.dependentParameterID.includes(-1)\n                ? param.dependentParameterID.filter(id => id != -1)\n                : param.dependentParameterID;\n\n            return { ...param, dependentParameterID };\n        });\n\n        if (this.consumptionParamFG.invalid) {\n            this.consumptionParamFG.markAllAsTouched();\n            this.toastrService.openToast(InvalidForm.INVALID_FORM_TITLE, InvalidForm.INVALID_FORM_TITLE, ToastrColor.ERROR);\n            return;\n        }\n\n        this.parameterController.saveConsumptionParameter(this.orgID, consumptionParameter).subscribe((res: ResponseM) => {\n            this.getConsumptionParameter();\n        }, error => {\n            console.log('error in saveConsumptionParameter -', error);\n        });\n    }\n\n    toggleField(index, parameterID) {\n        if (this.selection.isSelected(parameterID)) {\n            this.consumptionParameterFA.controls[index].enable();\n            return false;\n        } else {\n            this.consumptionParameterFA.controls[index].disable();\n            return true;\n        }\n    }\n\n    hasError = (control: string, error: string) => {\n        return this.consumptionParamFG.get(control).hasError(error);\n    }\n\n}\n","<div class=\"card main-card cardOverwrite h100\">\n    <div class=\"headerContainer\">\n        <div class=\"headerLeftContainer\">\n            <div class=\"pageTitle\">Add Consumption Parameter</div>\n            <div class=\"pageSubtitle\"></div>\n        </div>\n    </div>\n\n    <div class=\"card-body\">\n        <ng-container *ngIf=\"sourceConsumerConfiguredM?.sourceTypeConfigured; else notSourceType\">\n            <ng-container\n                *ngIf=\"consumptionParamM && consumptionParamM.length > 0 && consumptionParamM[0]['id']; else noComsumptionParamFound\">\n                <div class=\"row\">\n                    <div class=\"col-sm-12 mb-3\">\n                        <lib-message-alert [labelInp]=\"'Info'\"\n                            [contentInp]=\"'Adding consumption parameters will impact your data.'\"\n                            [messageAlertTypeInp]=\"MessageAlertTypeEnum.INFO\"\n                            [messageAlertIconInp]=\"MessageAlertIconEnum.INFO_ICON\">\n                        </lib-message-alert>\n                    </div>\n                </div>\n                <form [formGroup]=\"consumptionParamFG\" (ngSubmit)=\"consumptionParameterSubmit()\">\n                    <ng-container formArrayName=\"consumptionParameter\">\n                        <div class=\"row\">\n                            <div class=\"col-sm-12\">\n                                <table class=\"table\">\n                                    <tbody>\n                                        <tr class=\"tableHeader\">\n                                            <td><mat-checkbox (change)=\"$event ? selectAll() : null\"\n                                                    [checked]=\"selection.hasValue() && isAllSelected()\"\n                                                    [disabled]=\"consumptionParamM.length == 0 || consumptionParamM[0]['id'] == null\">\n                                                    Select all\n                                                </mat-checkbox></td>\n                                            <td align=\"center\" class=\"fw-bold\"> Consumption Parameter </td>\n                                            <td align=\"center\" class=\"fw-bold\"> Dependent Parameter </td>\n                                        </tr>\n                                    </tbody>\n                                    <tbody>\n                                        <tr *ngFor=\"let parameter of consumptionParamM; let i = index\">\n                                            <ng-container [formGroupName]=\"i\">\n                                                <td>\n                                                    <mat-checkbox\n                                                        (change)=\"$event ? selection.toggle(parameter.id) : null\"\n                                                        [checked]=\"selection.isSelected(parameter.id)\"></mat-checkbox>\n                                                </td>\n                                                <td align=\"center\">\n                                                    <div class=\"mt-4\">\n                                                        {{ parameter.label }}\n                                                    </div>\n                                                </td>\n                                                <td align=\"center\">\n                                                    <div class=\"row pt-2\">\n                                                        <div class=\"col-sm-8\">\n                                                            <mat-form-field class=\"matFieldWidth100\" [appearance]=\"MaterialFormFieldAppearance.FORM_FIELD_APPEARANCE\">\n                                                                <mat-label>Select dependent parameter</mat-label>\n\n                                                                <mat-select formControlName=\"dependentParameterID\" [disabled]=\"toggleField(i, parameter.id)\"\n                                                                    (selectionChange)=\"selection.select(parameter.id)\" multiple required>\n                                                                    <ng-container *ngIf=\"dependentConsumParamSearchUtil[i]['filteredEntities']; else noDependentParamFound\">\n                                                                        <ngx-mat-select-search [formControl]=\"dependentConsumParamSearchUtil[i].filterFC\"\n                                                                            placeholderLabel=\"Search by name\" noEntriesFoundLabel=\"No matching name found.\">\n                                                                        </ngx-mat-select-search>\n                                                                        <mat-option [value]=\"-1\" (click)=\"selectAllDependentParam(i)\"\n                                                                            [hidden]=\"dependentConsumParamSearchUtil[i].filterFC.value\">\n                                                                            Select all\n                                                                        </mat-option>\n                                                                        <mat-option *ngFor=\"let param of dependentConsumParamSearchUtil[i]['filteredEntities'] | async\"\n                                                                            [value]=\"param.id\" (click)=\"selectDependentParam(i)\">\n                                                                            {{ param.label }}\n                                                                        </mat-option>\n                                                                    </ng-container>\n                                                                    <ng-template #noDependentParamFound>\n                                                                        <mat-option disabled>\n                                                                            {{ COMMON_CONSTANT.NO_DATA_FOUND }}\n                                                                        </mat-option>\n                                                                    </ng-template>\n                                                                </mat-select>\n\n                                                                <mat-error *ngIf=\"this.consumptionParameterFA.controls[i].get('dependentParameterID').hasError('required')\">\n                                                                    {{ FormErrorEnum.REQUIRED }}\n                                                                </mat-error>\n                                                            </mat-form-field>\n                                                        </div>\n                                                    </div>\n                                                </td>\n                                            </ng-container>\n                                        </tr>\n                                    </tbody>\n                                </table>\n                            </div>\n                        </div>\n                    </ng-container>\n\n                    <button class=\"d-none\" type=\"submit\" #formSubmitBtn></button>\n\n                    <div class=\"row mt-2\">\n                        <div class=\"col-sm-12\">\n                            <div class=\"float-end\">\n                                <button class=\"btn btn-sm btn-secondary me-2\" type=\"button\"\n                                    (click)=\"tscCommonService.back()\">\n                                    {{ ButtonLabelEnum.CANCEL_BTN_LABEL }}\n                                </button>\n\n                                <button class=\"btn btn-sm btn-success\" [ngClass]=\"{'disabled' : isEqual}\"\n                                    type=\"submit\">{{\n                                    ButtonLabelEnum.SAVE_BTN_LABEL }}\n                                </button>\n                            </div>\n                        </div>\n                    </div>\n                </form>\n            </ng-container>\n            <ng-template #noComsumptionParamFound>\n                <lib-message-alert [labelInp]=\"'Not found!'\" [contentInp]=\"'No consumption parameter found.'\"\n                    [messageAlertTypeInp]=\"MessageAlertTypeEnum.DANGER\"\n                    [messageAlertIconInp]=\"MessageAlertIconEnum.DANGER_ICON\">\n                </lib-message-alert>\n            </ng-template>\n        </ng-container>\n        <ng-template #notSourceType>\n            <lib-message-alert [labelInp]=\"'Info'\"\n                [contentInp]=\"'Source type not set. Please set source type first to add consumption parameters'\"\n                [messageAlertTypeInp]=\"MessageAlertTypeEnum.INFO\"\n                [messageAlertIconInp]=\"MessageAlertIconEnum.INFO_ICON\">\n            </lib-message-alert>\n        </ng-template>\n    </div>\n</div>","import { NgModule } from '@angular/core';\nimport { RouterModule, Routes } from '@angular/router';\n\nimport { ConsumptionParamAddUpdateComponent } from './add-update.component';\n\nconst routes: Routes = [\n    {\n        path: '',\n        component: ConsumptionParamAddUpdateComponent\n    }\n];\n\n@NgModule({\n    imports: [RouterModule.forChild(routes)],\n    exports: [RouterModule]\n})\nexport class ConsumptionParamAddUpdateRoutingModule { }\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\n\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\n\nimport { MatButtonModule } from '@angular/material/button';\nimport { MatFormFieldModule } from '@angular/material/form-field';\nimport { MatInputModule } from '@angular/material/input';\nimport { MatSelectModule } from '@angular/material/select';\nimport { MatCheckboxModule } from '@angular/material/checkbox';\nimport { MatIconModule } from '@angular/material/icon';\nimport { MatTooltipModule } from '@angular/material/tooltip';\nimport { MatOptionModule } from '@angular/material/core';\nimport { MatRippleModule } from '@angular/material/core';\nimport { MatTableModule } from '@angular/material/table';\n\nimport { NgxMatSelectSearchModule } from 'ngx-mat-select-search';\n\nimport { ConsumptionParamAddUpdateRoutingModule } from './add-update-routing.module';\nimport { ConsumptionParamAddUpdateComponent } from './add-update.component';\n\n// tsc-library\nimport { MessageAlertModule } from '@library/tsc-common';\n// /tsc-library/\n\n@NgModule({\n    declarations: [\n        ConsumptionParamAddUpdateComponent\n    ],\n    imports: [\n        CommonModule,\n        ConsumptionParamAddUpdateRoutingModule,\n\n        FormsModule,\n        ReactiveFormsModule,\n\n        MatIconModule,\n        MatInputModule,\n        MatSelectModule,\n        MatTooltipModule,\n        MatOptionModule,\n        MatFormFieldModule,\n        MatButtonModule,\n        MatRippleModule,\n        MatCheckboxModule,\n        MatTableModule,\n\n        NgxMatSelectSearchModule,\n        MessageAlertModule\n    ]\n})\nexport class ConsumptionParamAddUpdateModule { }\n","import { Injectable } from '@angular/core';\nimport { HttpRequest, HttpHandler, HttpEvent, HttpInterceptor } from '@angular/common/http';\n\nimport { Observable } from 'rxjs';\n\n// tsc-library\nimport { StorageService } from \"@library/storage-service\";\n// /tsc-library/\n\n@Injectable()\n\nexport class Interceptor implements HttpInterceptor {\n\n    constructor(\n        private storageService: StorageService,\n    ) { }\n\n    intercept(request: HttpRequest<any>, next: HttpHandler): Observable<HttpEvent<any>> {\n        let layoutID = this.storageService.getStorage('layoutID');\n\n        request = request.clone({\n            setHeaders: { layoutID: `${layoutID}` }\n        });\n\n        return next.handle(request).pipe(\n        )\n    }\n\n}\n","import { Inject, Injectable } from '@angular/core';\nimport { HttpClient, HttpParams } from '@angular/common/http';\n\nimport { Observable } from 'rxjs';\n\nimport { MakeModelI } from '../model/make-model.model';\n\n@Injectable({\n    providedIn: 'root'\n})\n\nexport class MakeModelController {\n\n    constructor(\n        private http: HttpClient,\n        @Inject('environment') private environment: any\n    ) { }\n\n    getMake(type): Observable<MakeModelI[]> {\n        let params = new HttpParams();\n\n        params = params.append('type', type);\n\n        return this.http.get<MakeModelI[]>(`${this.environment.TSC_COMMON_API_URL}make`, { params: params });\n    }\n\n    getModel(makeID, type): Observable<MakeModelI[]> {\n        let params = new HttpParams();\n        params = params.append('type', type);\n\n        return this.http.get<MakeModelI[]>(`${this.environment.TSC_COMMON_API_URL}make/${makeID}/model`, { params: params });\n    }\n\n}\n","import { Inject, Injectable } from '@angular/core';\nimport { HttpClient, HttpParams } from '@angular/common/http';\n\nimport { Observable } from 'rxjs';\n\nimport { StatusInfoM } from '../model/device.model';\nimport { RegulatorTypeI, RegulatorsEntitiesI } from '../model/regulator.model';\n\n@Injectable({\n    providedIn: 'root'\n})\n\nexport class RegulatorController {\n\n    constructor(\n        private http: HttpClient,\n        @Inject('environment') private environment: any\n    ) { }\n\n    getRegulatorStatusInfo(orgID): Observable<StatusInfoM> {\n        return this.http.get<StatusInfoM>(`${this.environment.TSC_COMMON_API_URL}organizations/${orgID}/regulators/status`);\n    }\n\n    getRegulatorsType(orgID): Observable<RegulatorTypeI[]> {\n        return this.http.get<RegulatorTypeI[]>(`${this.environment.TSC_COMMON_API_URL}organizations/${orgID}/regulators/type`);\n    }\n\n    getRegulatorsEntities(regulatorTypeFilterArr, orgID): Observable<RegulatorsEntitiesI[]> {\n        let params = new HttpParams();\n        regulatorTypeFilterArr.forEach(filter => params = params.append('filter', filter));\n\n        return this.http.get<RegulatorsEntitiesI[]>(`${this.environment.TSC_COMMON_API_URL}organizations/${orgID}/dashboard/regulators-entities`, { params: params });\n    }\n}\n","import { Injectable } from '@angular/core';\n\nimport { MakeModel, MakeModelI } from '../model/make-model.model';\n\nimport { MakeModelController } from '../controller/make-model.controller';\n\n@Injectable({\n    providedIn: 'root'\n})\n\nexport class MakeModelService {\n\n    constructor(\n        private makeModelController: MakeModelController\n    ) { }\n\n    async getMake(type): Promise<MakeModelI[]> {\n        let makeI: MakeModelI[];\n        try {\n            makeI = await this.makeModelController.getMake(type).toPromise();\n\n            if (makeI) {\n                return makeI;\n            } else {\n                return [new MakeModel()];\n            }\n        } catch (error) {\n            console.error('Error -', error);\n            return [new MakeModel()];\n        }\n    }\n\n    async getModel(makeID, type): Promise<MakeModelI[]> {\n        let modelI: MakeModelI[];\n        try {\n            modelI = await this.makeModelController.getModel(makeID, type).toPromise();\n\n            if (modelI) {\n                return modelI;\n            } else {\n                return [new MakeModel()];\n            }\n        } catch (error) {\n            console.error('Error -', error);\n            return [new MakeModel()];\n        }\n    }\n}\n","/*\n * Public API Surface of tsc-lite\n */\n\nexport * from './lib/tsc-lite.service';\nexport * from './lib/tsc-lite.component';\nexport * from './lib/tsc-lite.module';\n\n\nexport * from './lib/tsc/constant/list.constant';\nexport * from './lib/tsc/enum/error.enum';\nexport * from './lib/tsc/enum/schedule-report.enum';\n\nexport * from './lib/tsc/model/alert.model';\nexport * from './lib/tsc/model/parameter.model';\nexport * from './lib/tsc/model/entity.model';\nexport * from './lib/tsc/model/device.model';\nexport * from './lib/tsc/model/unit.model';\nexport * from './lib/tsc/model/shift.model';\nexport * from './lib/tsc/model/recent-data.model';\nexport * from './lib/tsc/model/alert.model';\nexport * from './lib/tsc/model/report.model';\nexport * from './lib/tsc/model/aggregate-data.model';\nexport * from './lib/tsc/model/recent-data.model';\nexport * from './lib/tsc/model/make-model.model';\nexport * from './lib/tsc/model/regulator.model';\n\n\nexport * from './lib/tsc/guard/resolve.guard';\n\n\nexport * from './lib/tsc/component/_shared/dialog/trend/trend.module';\nexport * from './lib/tsc/component/_shared/dialog/trend/trend.component';\n\nexport * from './lib/tsc/component/_shared/dialog/entity/entity.module';\nexport * from './lib/tsc/component/_shared/dialog/entity/entity.component';\n\nexport * from './lib/tsc/component/_shared/download-report/download-report.module';\nexport * from './lib/tsc/component/_shared/download-report/download-report.component';\n\nexport * from './lib/tsc/component/_shared/static-page/layout-not-found/layout-not-found.module';\nexport * from './lib/tsc/component/_shared/static-page/layout-not-found/layout-not-found.component';\n\nexport * from './lib/tsc/component/_shared/static-page/tsc-restrict/tsc-restrict.module';\nexport * from './lib/tsc/component/_shared/static-page/tsc-restrict/tsc-restrict.component';\n\nexport * from './lib/tsc/component/authorization/success/success.component';\n\nexport * from './lib/tsc/component/dropdown/aggregation/aggregation.module';\nexport * from './lib/tsc/component/dropdown/aggregation/aggregation.component';\n\nexport * from './lib/tsc/component/dropdown/aggregation-duration/aggregation-duration.module';\nexport * from './lib/tsc/component/dropdown/aggregation-duration/aggregation-duration.component';\n\nexport * from './lib/tsc/component/dropdown/param-metric/param-metric.module';\nexport * from './lib/tsc/component/dropdown/param-metric/param-metric.component';\n\nexport * from './lib/tsc/component/dropdown/parameter/parameter.module';\nexport * from './lib/tsc/component/dropdown/parameter/parameter.component';\n\nexport * from './lib/tsc/component/dropdown/device/device.module';\nexport * from './lib/tsc/component/dropdown/device/device.component';\n\nexport * from './lib/tsc/component/dropdown/entity/entity.module';\nexport * from './lib/tsc/component/dropdown/entity/entity.component';\n\nexport * from './lib/tsc/component/dropdown/entity-type/entity-type.module';\nexport * from './lib/tsc/component/dropdown/entity-type/entity-type.component';\n\nexport * from './lib/tsc/component/dropdown/unit/unit.module';\nexport * from './lib/tsc/component/dropdown/unit/unit.component';\n\nexport * from './lib/tsc/component/landing-page/home/home.module';\nexport * from './lib/tsc/component/landing-page/home/home.component';\n\nexport * from './lib/tsc/component/dropdown/shift/shift.module';\nexport * from './lib/tsc/component/dropdown/shift/shift.component';\n\nexport * from './lib/tsc/component/dashboard/consumption/consumption.module';\nexport * from './lib/tsc/component/dashboard/consumption/consumption.component';\n\nexport * from './lib/tsc/component/dashboard/consumption-breakup/consumption-breakup.module';\nexport * from './lib/tsc/component/dashboard/consumption-breakup/consumption-breakup.component';\n\nexport * from './lib/tsc/component/dashboard/entity/entity.module';\nexport * from './lib/tsc/component/dashboard/entity/entity.component';\n\nexport * from './lib/tsc/component/dashboard/facility/facility.module';\nexport * from './lib/tsc/component/dashboard/facility/facility.component';\n\nexport * from './lib/tsc/component/dashboard/meter-data/meter-data.module';\nexport * from './lib/tsc/component/dashboard/meter-data/meter-data.component';\n\nexport * from './lib/tsc/component/dashboard/parameter/tab/tab.module';\nexport * from './lib/tsc/component/dashboard/parameter/tab/tab.component';\n\nexport * from './lib/tsc/component/dashboard/parameter/by-entity/by-entity.module';\nexport * from './lib/tsc/component/dashboard/parameter/by-entity/by-entity.component';\n\nexport * from './lib/tsc/component/dashboard/parameter/by-parameter/by-parameter.module';\nexport * from './lib/tsc/component/dashboard/parameter/by-parameter/by-parameter.component';\n\n\nexport * from './lib/tsc/component/report/breakup/breakup.module';\nexport * from './lib/tsc/component/report/breakup/breakup.component';\n\nexport * from './lib/tsc/component/report/cgwa/cgwa.module';\nexport * from './lib/tsc/component/report/cgwa/cgwa.component';\n\nexport * from './lib/tsc/component/report/consumption-breakup/consumption-breakup.module';\nexport * from './lib/tsc/component/report/consumption-breakup/consumption-breakup.component';\n\nexport * from './lib/tsc/component/report/consumption/consumption.module';\nexport * from './lib/tsc/component/report/consumption/consumption.component';\n\nexport * from './lib/tsc/component/report/data-availability/data-availability.module';\nexport * from './lib/tsc/component/report/data-availability/data-availability.component';\n\nexport * from './lib/tsc/component/report/meter/meter.module';\nexport * from './lib/tsc/component/report/meter/meter.component';\n\nexport * from './lib/tsc/component/report/parameter/parameter.module';\nexport * from './lib/tsc/component/report/parameter/parameter.component';\n\nexport * from './lib/tsc/component/report/raw-data/raw-data.module';\nexport * from './lib/tsc/component/report/raw-data/raw-data.component';\n\nexport * from './lib/tsc/component/report/sourcing/sourcing.module';\nexport * from './lib/tsc/component/report/sourcing/sourcing.component';\n\nexport * from './lib/tsc/component/report/usage-across-facility/usage-across-facility.module';\nexport * from './lib/tsc/component/report/usage-across-facility/usage-across-facility.component';\n\n\nexport * from './lib/tsc/component/schedule-report/_shared/configuration/configuration.module';\nexport * from './lib/tsc/component/schedule-report/_shared/configuration/configuration.component';\n\nexport * from './lib/tsc/component/schedule-report/_shared/page/page.module';\nexport * from './lib/tsc/component/schedule-report/_shared/page/page.component';\n\nexport * from './lib/tsc/component/schedule-report/breakup/breakup.module';\nexport * from './lib/tsc/component/schedule-report/breakup/breakup.component';\n\nexport * from './lib/tsc/component/schedule-report/cgwa/cgwa.module';\nexport * from './lib/tsc/component/schedule-report/cgwa/cgwa.component';\n\nexport * from './lib/tsc/component/schedule-report/consumption/consumption.module';\nexport * from './lib/tsc/component/schedule-report/consumption/consumption.component';\n\nexport * from './lib/tsc/component/schedule-report/sourcing/sourcing.module';\nexport * from './lib/tsc/component/schedule-report/sourcing/sourcing.component';\n\nexport * from './lib/tsc/component/schedule-report/temperature/temperature.module';\nexport * from './lib/tsc/component/schedule-report/temperature/temperature.component';\n\nexport * from './lib/tsc/component/layout/_dialog/create-update/entity/entity.module';\nexport * from './lib/tsc/component/layout/_dialog/create-update/entity/entity.component';\n\nexport * from './lib/tsc/component/layout/_dialog/create-update/layout/layout.module';\nexport * from './lib/tsc/component/layout/_dialog/create-update/layout/layout.component';\n\nexport * from './lib/tsc/component/layout/_dialog/create-update/source-load/source-load.module';\nexport * from './lib/tsc/component/layout/_dialog/create-update/source-load/source-load.component';\n\nexport * from './lib/tsc/component/layout/page/page.module';\nexport * from './lib/tsc/component/layout/page/page.component';\n\nexport * from './lib/tsc/component/layout/chart/chart.module';\nexport * from './lib/tsc/component/layout/chart/chart.component';\n\nexport * from './lib/tsc/component/layout/list/list.module';\nexport * from './lib/tsc/component/layout/list/list.component';\n\nexport * from './lib/tsc/component/layout/tab/tab.module';\nexport * from './lib/tsc/component/layout/tab/tab.component';\n\nexport * from './lib/tsc/component/layout/map-device/add/add.module';\nexport * from './lib/tsc/component/layout/map-device/add/add.component';\n\nexport * from './lib/tsc/component/layout/map-device/view/view.module';\nexport * from './lib/tsc/component/layout/map-device/view/view.component';\n\nexport * from './lib/tsc/component/preferences/consumer/page/page.module';\nexport * from './lib/tsc/component/preferences/consumer/page/page.component';\n\nexport * from './lib/tsc/component/preferences/_dialog/source/create-update/create-update.module';\nexport * from './lib/tsc/component/preferences/_dialog/source/create-update/create-update.component';\n\nexport * from './lib/tsc/component/preferences/_dialog/consumer/create-update/create-update.module';\nexport * from './lib/tsc/component/preferences/_dialog/consumer/create-update/create-update.component';\n\nexport * from './lib/tsc/component/preferences/source/page/page.module';\nexport * from './lib/tsc/component/preferences/source/page/page.component';\n\nexport * from './lib/tsc/component/preferences/consumption-parameter/add-update/add-update.module';\nexport * from './lib/tsc/component/preferences/consumption-parameter/add-update/add-update.component';\n\n\nexport * from './lib/tsc/interceptor/interceptor';\n\n\nexport * from './lib/tsc/controller/parameter.controller';\nexport * from './lib/tsc/controller/entity.controller';\nexport * from './lib/tsc/controller/device.controller';\nexport * from './lib/tsc/controller/unit.controller';\nexport * from './lib/tsc/controller/shift.controller';\nexport * from './lib/tsc/controller/recent-data.controller';\nexport * from './lib/tsc/controller/aggregate-data.controller';\nexport * from './lib/tsc/controller/data-availability.controller';\nexport * from './lib/tsc/controller/schedule-report.controller';\nexport * from './lib/tsc/controller/make-model.controller';\nexport * from './lib/tsc/controller/regulator.controller';\n\n\nexport * from './lib/tsc/service/alert.service';\nexport * from './lib/tsc/service/parameter.service';\nexport * from './lib/tsc/service/entity.service';\nexport * from './lib/tsc/service/device.service';\nexport * from './lib/tsc/service/entity-device.service';\nexport * from './lib/tsc/service/unit.service';\nexport * from './lib/tsc/service/shift.service';\nexport * from './lib/tsc/service/recent-data.service';\nexport * from './lib/tsc/service/aggregate-data.service';\nexport * from './lib/tsc/service/trend.service';\nexport * from './lib/tsc/service/report.service';\nexport * from './lib/tsc/service/schedule-report.service';\nexport * from './lib/tsc/service/make-model.service';\n","/**\n * Generated bundle index. Do not edit.\n */\n\nexport * from './public-api';\n"],"names":["i0","Injectable","Component","NgModule","ReportErrorEnum","DashboardErrorEnum","ScheduleReportTypeEnum","Inject","map","catchError","i1","i2","i3.ParameterController","i1.ParameterController","HttpHeaders","i1.AggregateDataController","MaterialFormFieldAppearance","DateTimeIntervalEnum","DialogEnum","ChartTypeEnum","ChartViewStateEnum","ChartTitle","BasicAreaLineBarChart","FormControl","Validators","moment","MAT_DIALOG_DATA","i3.ParameterService","i4.AggregateDataService","i5","i6","i7","i8","i9","i10","i11","i12","i13","i14","CommonModule","BasicAreaLineBarModule","ReactiveFormsModule","MatDialogModule","MatButtonModule","MatInputModule","MatFormFieldModule","MatSelectModule","MatTooltipModule","i3","i4","FormsModule","MatRadioModule","MatIconModule","MATERIAL_CONSTANT","FileTypeEnum","EventEmitter","Input","Output","NgbModule","MatRippleModule","i2.ParameterService","Layout","FormErrorEnum","NgxMatSelectSearchModule","COMMON_CONSTANT","MatSelectSearchService","HttpParams","i1.DeviceController","i2.DeviceService","i1.EntityController","i2.EntityService","i1.UnitController","i2.UnitService","ApplicationKeyID","i3.AggregateDataService","i4.EntityController","i5.DeviceController","routes","RouterModule","MatCardModule","PerfectScrollbarModule","NgCircleProgressModule","i1.ShiftController","i2.ShiftService","FREQUENCY_CONSTANT","FrequencyEnum","StackBarChart","DateTypeEnum","i3.EntityService","i5.AggregateDataController","DateFilterTwoModule","StackBarModule","DoughnutChart","i2.AggregateDataService","SkeletonModule","DoughnutModule","i1.RecentDataController","i3.RecentDataService","i5.TrendService","i15","i16","i17","ViewChild","MatButtonToggleModule","MatExpansionModule","MatOptionModule","SearchBarTwoModule","MessageAlertTypeEnum","MessageAlertIconEnum","i4.EntityService","i6.RecentDataService","i7.AlertService","MessageAlertModule","i1.EntityDeviceController","i2.RecentDataService","i3.EntityDeviceService","i4.ParameterService","i5.AlertService","i7.TrendService","NavigationEnd","MatTabsModule","CUSTOM_RANGE_CONSTANT_EXCLUSIVE_DATE","DateFormatEnum","DateInputTypeEnum","ButtonLabelEnum","InvalidForm","ToastrColor","i2.AlertService","i8.AggregationDurationComponent","i9.EntityTypeComponent","DateInputModule","i4.ParameterController","i5.ParameterService","i6.AggregateDataService","i9.AggregationDurationComponent","i10.EntityTypeComponent","i18","SourceLoadComponent","SourceLoadModule","i5.AggregateDataService","i6.ReportService","i10.SourceLoadComponent","i12.AggregationDurationComponent","i13.EntityComponent","i17.DownloadReportComponent","i19","MatTableModule","MatSlideToggleModule","i7.ReportService","i13.DownloadReportComponent","i5.ReportService","i6.AlertService","i7.SourceLoadComponent","i10.EntityComponent","i11.DownloadReportComponent","Static","i1.SourceController","i6.SourceService","i7.ParameterService","i8.AggregateDataService","i9.ReportService","i16.DownloadReportComponent","i4.DataAvailabilityController","i11.EntityComponent","i12.DeviceComponent","i13.ParamMetricComponent","i14.DownloadReportComponent","i4.EntityDeviceService","i14.ParamMetricComponent","i15.DownloadReportComponent","i11.DeviceComponent","i12.ParamMetricComponent","i14.AggregationComponent","i8.EntityComponent","i9.DeviceComponent","i10.DownloadReportComponent","i11.AggregationDurationComponent","i4.ReportService","i6.SourceLoadComponent","i9.DownloadReportComponent","UserContext","User","ENTER","COMMA","MatChipsModule","faPlus","faCaretDown","TABLE_CONSTANT","ButtonTooltipEnum","DialogResponseEnum","FormAction","ProfileImg","merge","fromEvent","startWith","switchMap","observableOf","DialogOneComponent","DialogOneEnum","i3.ScheduleReportController","MatSortModule","MatPaginatorModule","MatMenuModule","FontAwesomeModule","SearchBarOneModule","FunnelFilterModule","EllipsisPipeModule","i1.ScheduleReportController","isEqual","i5.ScheduleReportService","i15.ScheduleReportConfigurationComponent","i4.ScheduleReportService","i9.ScheduleReportConfigurationComponent","i4.SourceService","i6.ScheduleReportService","i13.ScheduleReportConfigurationComponent","PageTitleEnum","ToastrTitle","i3.DeviceController","MatCheckboxModule","faEllipsisV","NgxEchartsModule","i3.EntityController","filter","tap","i6.SourceController","ClipboardModule","PopoverModule","SelectionModel","i7.ConsumerController","i3.SourceService","i4.ConsumerController","i7.SourceService","i3.SourceController","i5.SourceController","i6.ParameterController","i1.MakeModelController"],"mappings":"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"}