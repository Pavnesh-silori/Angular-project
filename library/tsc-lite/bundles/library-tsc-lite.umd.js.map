{"version":3,"file":"library-tsc-lite.umd.js","sources":["../../../projects/library/tsc-lite/src/lib/tsc-lite.service.ts","../../../projects/library/tsc-lite/src/lib/tsc-lite.component.ts","../../../projects/library/tsc-lite/src/lib/tsc-lite.module.ts","../../../projects/library/tsc-lite/src/lib/tsc/constant/list.constant.ts","../../../projects/library/tsc-lite/src/lib/tsc/model/parameter.model.ts","../../../projects/library/tsc-lite/src/lib/tsc/model/entity.model.ts","../../../projects/library/tsc-lite/src/lib/tsc/model/device.model.ts","../../../projects/library/tsc-lite/src/lib/tsc/model/unit.model.ts","../../../projects/library/tsc-lite/src/lib/tsc/model/shift.model.ts","../../../projects/library/tsc-lite/src/lib/tsc/model/recent-data.model.ts","../../../projects/library/tsc-lite/src/lib/tsc/model/alert.model.ts","../../../node_modules/tslib/tslib.es6.mjs","../../../projects/library/tsc-lite/src/lib/tsc/model/aggregate-data.model.ts","../../../projects/library/tsc-lite/src/lib/tsc/controller/parameter.controller.ts","../../../projects/library/tsc-lite/src/lib/tsc/service/parameter.service.ts","../../../projects/library/tsc-lite/src/lib/tsc/controller/aggregate-data.controller.ts","../../../projects/library/tsc-lite/src/lib/tsc/service/aggregate-data.service.ts","../../../projects/library/tsc-lite/src/lib/tsc/component/_shared/dialog/trend/trend.component.ts","../../../projects/library/tsc-lite/src/lib/tsc/component/_shared/dialog/trend/trend.component.html","../../../projects/library/tsc-lite/src/lib/tsc/component/_shared/dialog/trend/trend.module.ts","../../../projects/library/tsc-lite/src/lib/tsc/component/dropdown/aggregation/aggregation.component.ts","../../../projects/library/tsc-lite/src/lib/tsc/component/dropdown/aggregation/aggregation.component.html","../../../projects/library/tsc-lite/src/lib/tsc/component/dropdown/aggregation/aggregation.module.ts","../../../projects/library/tsc-lite/src/lib/tsc/component/dropdown/aggregation-duration/aggregation-duration.component.ts","../../../projects/library/tsc-lite/src/lib/tsc/component/dropdown/aggregation-duration/aggregation-duration.component.html","../../../projects/library/tsc-lite/src/lib/tsc/component/dropdown/aggregation-duration/aggregation-duration.module.ts","../../../projects/library/tsc-lite/src/lib/tsc/component/dropdown/param-metric/param-metric.component.ts","../../../projects/library/tsc-lite/src/lib/tsc/component/dropdown/param-metric/param-metric.component.html","../../../projects/library/tsc-lite/src/lib/tsc/component/dropdown/param-metric/param-metric.module.ts","../../../projects/library/tsc-lite/src/lib/tsc/component/dropdown/parameter/parameter.component.ts","../../../projects/library/tsc-lite/src/lib/tsc/component/dropdown/parameter/parameter.component.html","../../../projects/library/tsc-lite/src/lib/tsc/component/dropdown/parameter/parameter.module.ts","../../../projects/library/tsc-lite/src/lib/tsc/enum/dropdown.enum.ts","../../../projects/library/tsc-lite/src/lib/tsc/controller/device.controller.ts","../../../projects/library/tsc-lite/src/lib/tsc/service/device.service.ts","../../../projects/library/tsc-lite/src/lib/tsc/component/dropdown/device/device.component.ts","../../../projects/library/tsc-lite/src/lib/tsc/component/dropdown/device/device.component.html","../../../projects/library/tsc-lite/src/lib/tsc/component/dropdown/device/device.module.ts","../../../projects/library/tsc-lite/src/lib/tsc/controller/entity.controller.ts","../../../projects/library/tsc-lite/src/lib/tsc/service/entity.service.ts","../../../projects/library/tsc-lite/src/lib/tsc/component/dropdown/entity/entity.component.ts","../../../projects/library/tsc-lite/src/lib/tsc/component/dropdown/entity/entity.component.html","../../../projects/library/tsc-lite/src/lib/tsc/component/dropdown/entity/entity.module.ts","../../../projects/library/tsc-lite/src/lib/tsc/controller/unit.controller.ts","../../../projects/library/tsc-lite/src/lib/tsc/service/unit.service.ts","../../../projects/library/tsc-lite/src/lib/tsc/component/dropdown/unit/unit.component.ts","../../../projects/library/tsc-lite/src/lib/tsc/component/dropdown/unit/unit.component.html","../../../projects/library/tsc-lite/src/lib/tsc/component/dropdown/unit/unit.module.ts","../../../projects/library/tsc-lite/src/lib/tsc/component/landing-page/home/home.component.ts","../../../projects/library/tsc-lite/src/lib/tsc/component/landing-page/home/home.component.html","../../../projects/library/tsc-lite/src/lib/tsc/component/landing-page/home/home-routing.module.ts","../../../projects/library/tsc-lite/src/lib/tsc/component/landing-page/home/home.module.ts","../../../projects/library/tsc-lite/src/lib/tsc/controller/shift.controller.ts","../../../projects/library/tsc-lite/src/lib/tsc/service/shift.service.ts","../../../projects/library/tsc-lite/src/lib/tsc/component/dropdown/shift/shift.component.ts","../../../projects/library/tsc-lite/src/lib/tsc/component/dropdown/shift/shift.component.html","../../../projects/library/tsc-lite/src/lib/tsc/component/dropdown/shift/shift.module.ts","../../../projects/library/tsc-lite/src/lib/tsc/component/dashboard/balance/balance.component.ts","../../../projects/library/tsc-lite/src/lib/tsc/component/dashboard/balance/balance.component.html","../../../projects/library/tsc-lite/src/lib/tsc/component/dashboard/balance/balance-routing.module.ts","../../../projects/library/tsc-lite/src/lib/tsc/component/dashboard/balance/balance.module.ts","../../../projects/library/tsc-lite/src/lib/tsc/component/dashboard/consumption/consumption.component.ts","../../../projects/library/tsc-lite/src/lib/tsc/component/dashboard/consumption/consumption.component.html","../../../projects/library/tsc-lite/src/lib/tsc/component/dashboard/consumption/consumption-routing.module.ts","../../../projects/library/tsc-lite/src/lib/tsc/component/dashboard/consumption/consumption.module.ts","../../../projects/library/tsc-lite/src/lib/tsc/component/dashboard/consumption-breakup/consumption-breakup.component.ts","../../../projects/library/tsc-lite/src/lib/tsc/component/dashboard/consumption-breakup/consumption-breakup.component.html","../../../projects/library/tsc-lite/src/lib/tsc/component/dashboard/consumption-breakup/consumption-breakup-routing.module.ts","../../../projects/library/tsc-lite/src/lib/tsc/component/dashboard/consumption-breakup/consumption-breakup.module.ts","../../../projects/library/tsc-lite/src/lib/tsc/controller/recent-data.controller.ts","../../../projects/library/tsc-lite/src/lib/tsc/service/recent-data.service.ts","../../../projects/library/tsc-lite/src/lib/tsc/service/trend.service.ts","../../../projects/library/tsc-lite/src/lib/tsc/component/dashboard/entity/entity.component.ts","../../../projects/library/tsc-lite/src/lib/tsc/component/dashboard/entity/entity.component.html","../../../projects/library/tsc-lite/src/lib/tsc/component/dashboard/entity/entity-routing.module.ts","../../../projects/library/tsc-lite/src/lib/tsc/component/dashboard/entity/entity.module.ts","../../../projects/library/tsc-lite/src/lib/tsc/enum/error.enum.ts","../../../projects/library/tsc-lite/src/lib/tsc/service/alert.service.ts","../../../projects/library/tsc-lite/src/lib/tsc/component/dashboard/facility/facility.component.ts","../../../projects/library/tsc-lite/src/lib/tsc/component/dashboard/facility/facility.component.html","../../../projects/library/tsc-lite/src/lib/tsc/component/dashboard/facility/facility-routing.module.ts","../../../projects/library/tsc-lite/src/lib/tsc/component/dashboard/facility/facility.module.ts","../../../projects/library/tsc-lite/src/lib/tsc/controller/entity-device.controller.ts","../../../projects/library/tsc-lite/src/lib/tsc/service/entity-device.service.ts","../../../projects/library/tsc-lite/src/lib/tsc/component/dashboard/meter-data/meter-data.component.ts","../../../projects/library/tsc-lite/src/lib/tsc/component/dashboard/meter-data/meter-data.component.html","../../../projects/library/tsc-lite/src/lib/tsc/component/dashboard/meter-data/meter-data-routing.module.ts","../../../projects/library/tsc-lite/src/lib/tsc/component/dashboard/meter-data/meter-data.module.ts","../../../projects/library/tsc-lite/src/lib/tsc/component/report/cgwa/cgwa.component.ts","../../../projects/library/tsc-lite/src/lib/tsc/component/report/cgwa/cgwa.component.html","../../../projects/library/tsc-lite/src/lib/tsc/component/report/cgwa/cgwa-routing.module.ts","../../../projects/library/tsc-lite/src/lib/tsc/component/report/cgwa/cgwa.module.ts","../../../projects/library/tsc-lite/src/lib/tsc/service/report.service.ts","../../../projects/library/tsc-lite/src/lib/tsc/component/_shared/filter/source-load/source-load.component.ts","../../../projects/library/tsc-lite/src/lib/tsc/component/_shared/filter/source-load/source-load.component.html","../../../projects/library/tsc-lite/src/lib/tsc/component/report/consumption-breakup/consumption-breakup.component.ts","../../../projects/library/tsc-lite/src/lib/tsc/component/report/consumption-breakup/consumption-breakup.component.html","../../../projects/library/tsc-lite/src/lib/tsc/component/report/consumption-breakup/consumption-breakup-routing.module.ts","../../../projects/library/tsc-lite/src/lib/tsc/component/_shared/filter/source-load/source-load.module.ts","../../../projects/library/tsc-lite/src/lib/tsc/component/report/consumption-breakup/consumption-breakup.module.ts","../../../projects/library/tsc-lite/src/lib/tsc/component/report/data-availability/data-availability.component.ts","../../../projects/library/tsc-lite/src/lib/tsc/component/report/data-availability/data-availability.component.html","../../../projects/library/tsc-lite/src/lib/tsc/component/report/data-availability/data-availability-routing.module.ts","../../../projects/library/tsc-lite/src/lib/tsc/component/report/data-availability/data-availability.module.ts","../../../projects/library/tsc-lite/src/lib/tsc/component/report/meter/meter.component.ts","../../../projects/library/tsc-lite/src/lib/tsc/component/report/meter/meter.component.html","../../../projects/library/tsc-lite/src/lib/tsc/component/report/meter/meter-routing.module.ts","../../../projects/library/tsc-lite/src/lib/tsc/component/report/meter/meter.module.ts","../../../projects/library/tsc-lite/src/lib/tsc/component/report/parameter/parameter.component.ts","../../../projects/library/tsc-lite/src/lib/tsc/component/report/parameter/parameter.component.html","../../../projects/library/tsc-lite/src/lib/tsc/component/report/parameter/parameter-routing.module.ts","../../../projects/library/tsc-lite/src/lib/tsc/component/report/parameter/parameter.module.ts","../../../projects/library/tsc-lite/src/lib/tsc/component/report/raw-data/raw-data.component.ts","../../../projects/library/tsc-lite/src/lib/tsc/component/report/raw-data/raw-data.component.html","../../../projects/library/tsc-lite/src/lib/tsc/component/report/raw-data/raw-data-routing.module.ts","../../../projects/library/tsc-lite/src/lib/tsc/component/report/raw-data/raw-data.module.ts","../../../projects/library/tsc-lite/src/lib/tsc/component/report/derived-parameter/derived-parameter.component.ts","../../../projects/library/tsc-lite/src/lib/tsc/component/report/derived-parameter/derived-parameter.component.html","../../../projects/library/tsc-lite/src/lib/tsc/component/report/derived-parameter/derived-parameter-routing.module.ts","../../../projects/library/tsc-lite/src/lib/tsc/component/report/derived-parameter/derived-parameter.module.ts","../../../projects/library/tsc-lite/src/lib/tsc/component/report/usage-across-facility/usage-across-facility.component.ts","../../../projects/library/tsc-lite/src/lib/tsc/component/report/usage-across-facility/usage-across-facility.component.html","../../../projects/library/tsc-lite/src/lib/tsc/component/report/usage-across-facility/usage-across-facility-routing.module.ts","../../../projects/library/tsc-lite/src/lib/tsc/component/report/usage-across-facility/usage-across-facility.module.ts","../../../projects/library/tsc-lite/src/lib/tsc/component/layout/layout-routing.module.ts","../../../projects/library/tsc-lite/src/lib/tsc/component/layout/layout.module.ts","../../../projects/library/tsc-lite/src/lib/tsc/enum/button.enum.ts","../../../projects/library/tsc-lite/src/lib/tsc/controller/layout.controller.ts","../../../projects/library/tsc-lite/src/lib/tsc/component/layout/page/page.component.ts","../../../projects/library/tsc-lite/src/lib/tsc/component/layout/page/page.component.html","../../../projects/library/tsc-lite/src/lib/tsc/component/layout/page/page-routing.module.ts","../../../projects/library/tsc-lite/src/lib/tsc/component/layout/page/page.module.ts","../../../projects/library/tsc-lite/src/public-api.ts","../../../projects/library/tsc-lite/src/library-tsc-lite.ts"],"sourcesContent":["import { Injectable } from '@angular/core';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class TscLiteService {\n\n  constructor() { }\n}\n","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'lib-tsc-lite',\n  template: `\n    <p>\n      tsc-lite works!\n    </p>\n  `,\n  styles: [\n  ]\n})\nexport class TscLiteComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit(): void {\n  }\n\n}\n","import { ModuleWithProviders, NgModule } from '@angular/core';\n\nimport { TscLiteComponent } from './tsc-lite.component';\n\n@NgModule({\n    declarations: [\n        TscLiteComponent,\n    ],\n    imports: [\n    ],\n    exports: [\n        TscLiteComponent\n    ]\n})\n\nexport class TscLiteModule {\n    static forRoot(environment: any): ModuleWithProviders<TscLiteModule> {\n        return {\n            ngModule: TscLiteModule,\n            providers: [\n                { provide: 'environment', useValue: environment }\n            ]\n        };\n    }\n}","export const LIST_CONSTANT = {\n\n    CONDITION: [\n        {\n            label: '>= (Greater or Equal)',\n            value: 'GTE'\n        },\n        {\n            label: '<= (Less or Equal)',\n            value: 'LTE'\n        },\n        {\n            label: '= (Equal)',\n            value: 'EQUAL'\n        },\n        {\n            label: '> (Greater than)',\n            value: 'GREATER'\n        },\n        {\n            label: '< (Less than)',\n            value: 'LESS'\n        },\n        {\n            label: 'between',\n            value: 'BETWEEN'\n        }\n    ],\n\n    EMAIL_FREQUENCY: [\n        {\n            label: \"Never\",\n            value: \"NEVER\"\n        },\n        {\n            label: \"24 Hrs\",\n            value: \"HOURS_24\"\n        },\n        {\n            label: \"12 Hrs\",\n            value: \"HOURS_12\"\n        },\n        {\n            label: \"6 Hrs\",\n            value: \"HOURS_6\"\n        },\n        {\n            label: \"4 Hrs\",\n            value: \"HOURS_4\"\n        }\n    ],\n\n    SMS_FREQUENCY: [\n        {\n            label: \"Never\",\n            value: \"NEVER\"\n        },\n        {\n            label: \"24 Hrs\",\n            value: \"HOURS_24\"\n        },\n        {\n            label: \"12 Hrs\",\n            value: \"HOURS_12\"\n        }\n    ],\n\n    ESCALATION_FREQUENCY: [\n        {\n            label: \"Day\",\n            value: \"DAY\"\n        },\n        {\n            label: \"Hour\",\n            value: \"HOUR\"\n        },\n        {\n            label: \"Min\",\n            value: \"MIN\"\n        }\n    ],\n\n    ALERT_RULE_FREQUENCY: [\n        {\n            label: 'Instant',\n            value: 'INSTANT'\n        },\n        {\n            label: \"Daily(Today)\",\n            value: \"DAILY_TODAY\"\n        },\n        {\n            label: \"Daily(Yesterday)\",\n            value: \"DAILY_YESTERDAY\"\n        },\n        {\n            label: \"Monthly(Current month)\",\n            value: \"MONTHLY_CURRENT\"\n        },\n        {\n            label: \"Monthly(Last month)\",\n            value: \"MONTHLY_LAST\"\n        },\n        {\n            label: \"Hourly(Current hour)\",\n            value: \"HOURLY_CURRENT\"\n        },\n        {\n            label: \"Hourly(Last hour)\",\n            value: \"HOURLY_LAST\"\n        }\n    ],\n\n    TREND_DATE_RANGE: [\n        {\n            label: \"Last 24 hrs\",\n            value: \"LAST_24_HRS\"\n        },\n        {\n            label: \"Last 7 days\",\n            value: \"LAST_7_DAYS\"\n        },\n        {\n            label: \"Last 30 days\",\n            value: \"LAST_30_DAYS\"\n        }\n    ],\n\n    AGGREGATION_DURATION: [] = [\n        {\n            label: \"15 minutes\",\n            value: \"min_15\"\n\n        },\n        {\n            label: \"30 minutes\",\n            value: \"min_30\"\n        },\n        {\n            label: \"Hourly\",\n            value: \"hour_1\"\n        },\n        {\n            label: \"12 hours\",\n            value: \"hour_12\"\n        },\n        {\n            label: \"Daily\",\n            value: \"day_1\"\n        },\n        {\n            label: \"Monthly\",\n            value: \"month_1\"\n        }\n    ],\n\n    AGGREGATION: [] = [\n        {\n            label: 'Absolute Average',\n            value: 'avgabs'\n        },\n        {\n            label: 'Absolute Maximum',\n            value: 'maxabs'\n        },\n        {\n            label: 'Absolute Minimum',\n            value: 'minabs'\n        },\n        {\n            label: 'Absolute Sum',\n            value: 'sumabs'\n        },\n        {\n            label: 'Average',\n            value: 'avg'\n        },\n        {\n            label: 'Count',\n            value: 'count'\n        },\n        {\n            label: 'First',\n            value: 'first'\n        },\n        {\n            label: 'Last',\n            value: 'last'\n        },\n        {\n            label: 'Maximum',\n            value: 'max'\n        },\n        {\n            label: 'Minimum',\n            value: 'min'\n        },\n        {\n            label: 'Sum',\n            value: 'sum'\n        }\n    ],\n\n    DOWNLOAD_TYPE: [] = [\n        {\n            label: \"pdf\",\n            value: \"PDF\"\n        },\n        {\n            label: \"csv\",\n            value: \"CSV\"\n        },\n        {\n            label: \"xlsx\",\n            value: \"XLSX\"\n        }\n    ],\n\n    SOURCE_LOAD: [] = [\n        {\n            label: \"Source\",\n            value: \"source\"\n        },\n        {\n            label: \"Load\",\n            value: \"load\"\n        }\n    ]\n\n}","export interface ParameterM {\n    id: number;\n    name: string;\n    type: string;\n    label: string;\n    unit: string;\n    paramMetric: string;\n    isCounter: boolean;\n}\n\nexport class Parameter implements ParameterM {\n    id;\n    name;\n    type;\n    label;\n    unit;\n    paramMetric;\n    isCounter;\n}","export interface EntityM {\n    id: number;\n    name: string;\n    type: string;\n}\n\nexport class Entity implements EntityM {\n    id;\n    name;\n    type;\n}\n\nexport interface ChildEntity {\n    id: number;\n    name: string;\n    type: string;\n    children: ChildEntity[];\n}\n\nexport interface EntityTreeM {\n    id: number;\n    name: string;\n    type: string;\n    isParameterExists: boolean;\n    children: ChildEntity[];\n}\n\nexport class EntityTree implements EntityTreeM {\n    id;\n    name;\n    type;\n    isParameterExists;\n    children;\n}\n\nexport interface EntityLevelConsumptionM {\n    id: number;\n    name: string;\n    value: number;\n    unit: string;\n}\n\nexport class EntityLevelConsumption implements EntityLevelConsumptionM {\n    id;\n    name;\n    value;\n    unit;\n}\n\nexport interface EntityTypeM {\n    type: string;\n}\n\nexport class EntityType implements EntityTypeM {\n    type;\n}","export interface DeviceM {\n    id: number;\n    name: string;\n    sourceOrLoad: string;\n    sourceLoadType: string;\n    status: string;\n}\n\nexport class Device implements DeviceM {\n    id;\n    name;\n    sourceOrLoad;\n    sourceLoadType;\n    status;\n}\n\nexport interface DeviceModel {\n    id: number;\n    name: string;\n    sourceOrLoad: string;\n    sourceLoadType: string;\n}\n\nexport interface DevicesWithEntitiesM {\n    id: number;\n    name: string;\n    type: string;\n    devices: DeviceModel[];\n}\n\nexport class DevicesWithEntities implements DevicesWithEntitiesM {\n    id;\n    name;\n    type;\n    devices;\n}\n\nexport interface DeviceInfoM {\n    total: number;\n    online: number;\n    delay: number;\n    offline: number;\n}\n\nexport class DeviceInfo implements DeviceInfoM {\n    total;\n    online;\n    delay;\n    offline;\n}\n\n","export interface UnitM {\n    id: number;\n    name: string;\n    type: string;\n}\n\nexport class Unit implements UnitM {\n    id;\n    name;\n    type;\n}","export interface ShiftM {\n    id: number;\n    name: string;\n    keyID: string;\n    startTime: string;\n    endTime: string;\n}\n\nexport class Shift implements ShiftM {\n    id;\n    name;\n    keyID;\n    startTime;\n    endTime;\n}","export interface RecentDataRequestWithParamM {\n    params: Array<{\n        name: string;\n    }>,\n    deviceID: number[];\n    includeDescendants: boolean;\n    timezone: string;\n    entityType: string;\n    backscan: number;\n}\n\nexport class RecentDataRequestWithParam implements RecentDataRequestWithParamM {\n    params = null;\n    deviceID = null;\n    includeDescendants = false;\n    timezone = null;\n    entityType = null;\n    backscan = null;\n}\n\nexport interface RecentDataRequestWithoutParamM {\n    deviceID: number[];\n    entityID: number[];\n    includeDescendants: boolean;\n    timezone: string;\n    entityType: string;\n    backscan: number;\n}\n\nexport class RecentDataRequestWithoutParam implements RecentDataRequestWithoutParamM {\n    deviceID = null;\n    entityID = null;\n    includeDescendants = false;\n    timezone = null;\n    entityType = null;\n    backscan = null;\n}\n\nexport interface ParamData {\n    name: string;\n    label: string;\n    unit: string;\n    data: {\n        date: string;\n        value: number;\n    };\n}\n\nexport interface DeviceData {\n    deviceID: number;\n    deviceName: string;\n    paramData: ParamData[];\n}\n\nexport interface OrgRecentDataM {\n    orgID: number;\n    entityID: number;\n    entityName: string;\n    deviceData: DeviceData[];\n}\n\nexport class OrgRecentData implements OrgRecentDataM {\n    orgID;\n    entityID;\n    entityName;\n    deviceData;\n}","export interface AlertM {\n    showAlert: boolean;\n    alertLabel: string;\n    alertContent: string;\n    messageAlertType: string;\n    messageAlertIcon: string;\n}\n\nexport class Alert implements AlertM {\n    showAlert = false;\n    alertLabel = '';\n    alertContent = '';\n    messageAlertType = '';\n    messageAlertIcon = '';\n}","/******************************************************************************\nCopyright (c) Microsoft Corporation.\n\nPermission to use, copy, modify, and/or distribute this software for any\npurpose with or without fee is hereby granted.\n\nTHE SOFTWARE IS PROVIDED \"AS IS\" AND THE AUTHOR DISCLAIMS ALL WARRANTIES WITH\nREGARD TO THIS SOFTWARE INCLUDING ALL IMPLIED WARRANTIES OF MERCHANTABILITY\nAND FITNESS. IN NO EVENT SHALL THE AUTHOR BE LIABLE FOR ANY SPECIAL, DIRECT,\nINDIRECT, OR CONSEQUENTIAL DAMAGES OR ANY DAMAGES WHATSOEVER RESULTING FROM\nLOSS OF USE, DATA OR PROFITS, WHETHER IN AN ACTION OF CONTRACT, NEGLIGENCE OR\nOTHER TORTIOUS ACTION, ARISING OUT OF OR IN CONNECTION WITH THE USE OR\nPERFORMANCE OF THIS SOFTWARE.\n***************************************************************************** */\n/* global Reflect, Promise, SuppressedError, Symbol */\n\nvar extendStatics = function(d, b) {\n  extendStatics = Object.setPrototypeOf ||\n      ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\n      function (d, b) { for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p]; };\n  return extendStatics(d, b);\n};\n\nexport function __extends(d, b) {\n  if (typeof b !== \"function\" && b !== null)\n      throw new TypeError(\"Class extends value \" + String(b) + \" is not a constructor or null\");\n  extendStatics(d, b);\n  function __() { this.constructor = d; }\n  d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n}\n\nexport var __assign = function() {\n  __assign = Object.assign || function __assign(t) {\n      for (var s, i = 1, n = arguments.length; i < n; i++) {\n          s = arguments[i];\n          for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p)) t[p] = s[p];\n      }\n      return t;\n  }\n  return __assign.apply(this, arguments);\n}\n\nexport function __rest(s, e) {\n  var t = {};\n  for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0)\n      t[p] = s[p];\n  if (s != null && typeof Object.getOwnPropertySymbols === \"function\")\n      for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) {\n          if (e.indexOf(p[i]) < 0 && Object.prototype.propertyIsEnumerable.call(s, p[i]))\n              t[p[i]] = s[p[i]];\n      }\n  return t;\n}\n\nexport function __decorate(decorators, target, key, desc) {\n  var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\n  if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\n  else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n  return c > 3 && r && Object.defineProperty(target, key, r), r;\n}\n\nexport function __param(paramIndex, decorator) {\n  return function (target, key) { decorator(target, key, paramIndex); }\n}\n\nexport function __esDecorate(ctor, descriptorIn, decorators, contextIn, initializers, extraInitializers) {\n  function accept(f) { if (f !== void 0 && typeof f !== \"function\") throw new TypeError(\"Function expected\"); return f; }\n  var kind = contextIn.kind, key = kind === \"getter\" ? \"get\" : kind === \"setter\" ? \"set\" : \"value\";\n  var target = !descriptorIn && ctor ? contextIn[\"static\"] ? ctor : ctor.prototype : null;\n  var descriptor = descriptorIn || (target ? Object.getOwnPropertyDescriptor(target, contextIn.name) : {});\n  var _, done = false;\n  for (var i = decorators.length - 1; i >= 0; i--) {\n      var context = {};\n      for (var p in contextIn) context[p] = p === \"access\" ? {} : contextIn[p];\n      for (var p in contextIn.access) context.access[p] = contextIn.access[p];\n      context.addInitializer = function (f) { if (done) throw new TypeError(\"Cannot add initializers after decoration has completed\"); extraInitializers.push(accept(f || null)); };\n      var result = (0, decorators[i])(kind === \"accessor\" ? { get: descriptor.get, set: descriptor.set } : descriptor[key], context);\n      if (kind === \"accessor\") {\n          if (result === void 0) continue;\n          if (result === null || typeof result !== \"object\") throw new TypeError(\"Object expected\");\n          if (_ = accept(result.get)) descriptor.get = _;\n          if (_ = accept(result.set)) descriptor.set = _;\n          if (_ = accept(result.init)) initializers.unshift(_);\n      }\n      else if (_ = accept(result)) {\n          if (kind === \"field\") initializers.unshift(_);\n          else descriptor[key] = _;\n      }\n  }\n  if (target) Object.defineProperty(target, contextIn.name, descriptor);\n  done = true;\n};\n\nexport function __runInitializers(thisArg, initializers, value) {\n  var useValue = arguments.length > 2;\n  for (var i = 0; i < initializers.length; i++) {\n      value = useValue ? initializers[i].call(thisArg, value) : initializers[i].call(thisArg);\n  }\n  return useValue ? value : void 0;\n};\n\nexport function __propKey(x) {\n  return typeof x === \"symbol\" ? x : \"\".concat(x);\n};\n\nexport function __setFunctionName(f, name, prefix) {\n  if (typeof name === \"symbol\") name = name.description ? \"[\".concat(name.description, \"]\") : \"\";\n  return Object.defineProperty(f, \"name\", { configurable: true, value: prefix ? \"\".concat(prefix, \" \", name) : name });\n};\n\nexport function __metadata(metadataKey, metadataValue) {\n  if (typeof Reflect === \"object\" && typeof Reflect.metadata === \"function\") return Reflect.metadata(metadataKey, metadataValue);\n}\n\nexport function __awaiter(thisArg, _arguments, P, generator) {\n  function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\n  return new (P || (P = Promise))(function (resolve, reject) {\n      function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\n      function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\n      function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\n      step((generator = generator.apply(thisArg, _arguments || [])).next());\n  });\n}\n\nexport function __generator(thisArg, body) {\n  var _ = { label: 0, sent: function() { if (t[0] & 1) throw t[1]; return t[1]; }, trys: [], ops: [] }, f, y, t, g;\n  return g = { next: verb(0), \"throw\": verb(1), \"return\": verb(2) }, typeof Symbol === \"function\" && (g[Symbol.iterator] = function() { return this; }), g;\n  function verb(n) { return function (v) { return step([n, v]); }; }\n  function step(op) {\n      if (f) throw new TypeError(\"Generator is already executing.\");\n      while (g && (g = 0, op[0] && (_ = 0)), _) try {\n          if (f = 1, y && (t = op[0] & 2 ? y[\"return\"] : op[0] ? y[\"throw\"] || ((t = y[\"return\"]) && t.call(y), 0) : y.next) && !(t = t.call(y, op[1])).done) return t;\n          if (y = 0, t) op = [op[0] & 2, t.value];\n          switch (op[0]) {\n              case 0: case 1: t = op; break;\n              case 4: _.label++; return { value: op[1], done: false };\n              case 5: _.label++; y = op[1]; op = [0]; continue;\n              case 7: op = _.ops.pop(); _.trys.pop(); continue;\n              default:\n                  if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) { _ = 0; continue; }\n                  if (op[0] === 3 && (!t || (op[1] > t[0] && op[1] < t[3]))) { _.label = op[1]; break; }\n                  if (op[0] === 6 && _.label < t[1]) { _.label = t[1]; t = op; break; }\n                  if (t && _.label < t[2]) { _.label = t[2]; _.ops.push(op); break; }\n                  if (t[2]) _.ops.pop();\n                  _.trys.pop(); continue;\n          }\n          op = body.call(thisArg, _);\n      } catch (e) { op = [6, e]; y = 0; } finally { f = t = 0; }\n      if (op[0] & 5) throw op[1]; return { value: op[0] ? op[1] : void 0, done: true };\n  }\n}\n\nexport var __createBinding = Object.create ? (function(o, m, k, k2) {\n  if (k2 === undefined) k2 = k;\n  var desc = Object.getOwnPropertyDescriptor(m, k);\n  if (!desc || (\"get\" in desc ? !m.__esModule : desc.writable || desc.configurable)) {\n      desc = { enumerable: true, get: function() { return m[k]; } };\n  }\n  Object.defineProperty(o, k2, desc);\n}) : (function(o, m, k, k2) {\n  if (k2 === undefined) k2 = k;\n  o[k2] = m[k];\n});\n\nexport function __exportStar(m, o) {\n  for (var p in m) if (p !== \"default\" && !Object.prototype.hasOwnProperty.call(o, p)) __createBinding(o, m, p);\n}\n\nexport function __values(o) {\n  var s = typeof Symbol === \"function\" && Symbol.iterator, m = s && o[s], i = 0;\n  if (m) return m.call(o);\n  if (o && typeof o.length === \"number\") return {\n      next: function () {\n          if (o && i >= o.length) o = void 0;\n          return { value: o && o[i++], done: !o };\n      }\n  };\n  throw new TypeError(s ? \"Object is not iterable.\" : \"Symbol.iterator is not defined.\");\n}\n\nexport function __read(o, n) {\n  var m = typeof Symbol === \"function\" && o[Symbol.iterator];\n  if (!m) return o;\n  var i = m.call(o), r, ar = [], e;\n  try {\n      while ((n === void 0 || n-- > 0) && !(r = i.next()).done) ar.push(r.value);\n  }\n  catch (error) { e = { error: error }; }\n  finally {\n      try {\n          if (r && !r.done && (m = i[\"return\"])) m.call(i);\n      }\n      finally { if (e) throw e.error; }\n  }\n  return ar;\n}\n\n/** @deprecated */\nexport function __spread() {\n  for (var ar = [], i = 0; i < arguments.length; i++)\n      ar = ar.concat(__read(arguments[i]));\n  return ar;\n}\n\n/** @deprecated */\nexport function __spreadArrays() {\n  for (var s = 0, i = 0, il = arguments.length; i < il; i++) s += arguments[i].length;\n  for (var r = Array(s), k = 0, i = 0; i < il; i++)\n      for (var a = arguments[i], j = 0, jl = a.length; j < jl; j++, k++)\n          r[k] = a[j];\n  return r;\n}\n\nexport function __spreadArray(to, from, pack) {\n  if (pack || arguments.length === 2) for (var i = 0, l = from.length, ar; i < l; i++) {\n      if (ar || !(i in from)) {\n          if (!ar) ar = Array.prototype.slice.call(from, 0, i);\n          ar[i] = from[i];\n      }\n  }\n  return to.concat(ar || Array.prototype.slice.call(from));\n}\n\nexport function __await(v) {\n  return this instanceof __await ? (this.v = v, this) : new __await(v);\n}\n\nexport function __asyncGenerator(thisArg, _arguments, generator) {\n  if (!Symbol.asyncIterator) throw new TypeError(\"Symbol.asyncIterator is not defined.\");\n  var g = generator.apply(thisArg, _arguments || []), i, q = [];\n  return i = {}, verb(\"next\"), verb(\"throw\"), verb(\"return\"), i[Symbol.asyncIterator] = function () { return this; }, i;\n  function verb(n) { if (g[n]) i[n] = function (v) { return new Promise(function (a, b) { q.push([n, v, a, b]) > 1 || resume(n, v); }); }; }\n  function resume(n, v) { try { step(g[n](v)); } catch (e) { settle(q[0][3], e); } }\n  function step(r) { r.value instanceof __await ? Promise.resolve(r.value.v).then(fulfill, reject) : settle(q[0][2], r); }\n  function fulfill(value) { resume(\"next\", value); }\n  function reject(value) { resume(\"throw\", value); }\n  function settle(f, v) { if (f(v), q.shift(), q.length) resume(q[0][0], q[0][1]); }\n}\n\nexport function __asyncDelegator(o) {\n  var i, p;\n  return i = {}, verb(\"next\"), verb(\"throw\", function (e) { throw e; }), verb(\"return\"), i[Symbol.iterator] = function () { return this; }, i;\n  function verb(n, f) { i[n] = o[n] ? function (v) { return (p = !p) ? { value: __await(o[n](v)), done: false } : f ? f(v) : v; } : f; }\n}\n\nexport function __asyncValues(o) {\n  if (!Symbol.asyncIterator) throw new TypeError(\"Symbol.asyncIterator is not defined.\");\n  var m = o[Symbol.asyncIterator], i;\n  return m ? m.call(o) : (o = typeof __values === \"function\" ? __values(o) : o[Symbol.iterator](), i = {}, verb(\"next\"), verb(\"throw\"), verb(\"return\"), i[Symbol.asyncIterator] = function () { return this; }, i);\n  function verb(n) { i[n] = o[n] && function (v) { return new Promise(function (resolve, reject) { v = o[n](v), settle(resolve, reject, v.done, v.value); }); }; }\n  function settle(resolve, reject, d, v) { Promise.resolve(v).then(function(v) { resolve({ value: v, done: d }); }, reject); }\n}\n\nexport function __makeTemplateObject(cooked, raw) {\n  if (Object.defineProperty) { Object.defineProperty(cooked, \"raw\", { value: raw }); } else { cooked.raw = raw; }\n  return cooked;\n};\n\nvar __setModuleDefault = Object.create ? (function(o, v) {\n  Object.defineProperty(o, \"default\", { enumerable: true, value: v });\n}) : function(o, v) {\n  o[\"default\"] = v;\n};\n\nexport function __importStar(mod) {\n  if (mod && mod.__esModule) return mod;\n  var result = {};\n  if (mod != null) for (var k in mod) if (k !== \"default\" && Object.prototype.hasOwnProperty.call(mod, k)) __createBinding(result, mod, k);\n  __setModuleDefault(result, mod);\n  return result;\n}\n\nexport function __importDefault(mod) {\n  return (mod && mod.__esModule) ? mod : { default: mod };\n}\n\nexport function __classPrivateFieldGet(receiver, state, kind, f) {\n  if (kind === \"a\" && !f) throw new TypeError(\"Private accessor was defined without a getter\");\n  if (typeof state === \"function\" ? receiver !== state || !f : !state.has(receiver)) throw new TypeError(\"Cannot read private member from an object whose class did not declare it\");\n  return kind === \"m\" ? f : kind === \"a\" ? f.call(receiver) : f ? f.value : state.get(receiver);\n}\n\nexport function __classPrivateFieldSet(receiver, state, value, kind, f) {\n  if (kind === \"m\") throw new TypeError(\"Private method is not writable\");\n  if (kind === \"a\" && !f) throw new TypeError(\"Private accessor was defined without a setter\");\n  if (typeof state === \"function\" ? receiver !== state || !f : !state.has(receiver)) throw new TypeError(\"Cannot write private member to an object whose class did not declare it\");\n  return (kind === \"a\" ? f.call(receiver, value) : f ? f.value = value : state.set(receiver, value)), value;\n}\n\nexport function __classPrivateFieldIn(state, receiver) {\n  if (receiver === null || (typeof receiver !== \"object\" && typeof receiver !== \"function\")) throw new TypeError(\"Cannot use 'in' operator on non-object\");\n  return typeof state === \"function\" ? receiver === state : state.has(receiver);\n}\n\nexport function __addDisposableResource(env, value, async) {\n  if (value !== null && value !== void 0) {\n    if (typeof value !== \"object\" && typeof value !== \"function\") throw new TypeError(\"Object expected.\");\n    var dispose;\n    if (async) {\n        if (!Symbol.asyncDispose) throw new TypeError(\"Symbol.asyncDispose is not defined.\");\n        dispose = value[Symbol.asyncDispose];\n    }\n    if (dispose === void 0) {\n        if (!Symbol.dispose) throw new TypeError(\"Symbol.dispose is not defined.\");\n        dispose = value[Symbol.dispose];\n    }\n    if (typeof dispose !== \"function\") throw new TypeError(\"Object not disposable.\");\n    env.stack.push({ value: value, dispose: dispose, async: async });\n  }\n  else if (async) {\n    env.stack.push({ async: true });\n  }\n  return value;\n}\n\nvar _SuppressedError = typeof SuppressedError === \"function\" ? SuppressedError : function (error, suppressed, message) {\n  var e = new Error(message);\n  return e.name = \"SuppressedError\", e.error = error, e.suppressed = suppressed, e;\n};\n\nexport function __disposeResources(env) {\n  function fail(e) {\n    env.error = env.hasError ? new _SuppressedError(e, env.error, \"An error was suppressed during disposal.\") : e;\n    env.hasError = true;\n  }\n  function next() {\n    while (env.stack.length) {\n      var rec = env.stack.pop();\n      try {\n        var result = rec.dispose && rec.dispose.call(rec.value);\n        if (rec.async) return Promise.resolve(result).then(next, function(e) { fail(e); return next(); });\n      }\n      catch (e) {\n          fail(e);\n      }\n    }\n    if (env.hasError) throw env.error;\n  }\n  return next();\n}\n\nexport default {\n  __extends,\n  __assign,\n  __rest,\n  __decorate,\n  __param,\n  __metadata,\n  __awaiter,\n  __generator,\n  __createBinding,\n  __exportStar,\n  __values,\n  __read,\n  __spread,\n  __spreadArrays,\n  __spreadArray,\n  __await,\n  __asyncGenerator,\n  __asyncDelegator,\n  __asyncValues,\n  __makeTemplateObject,\n  __importStar,\n  __importDefault,\n  __classPrivateFieldGet,\n  __classPrivateFieldSet,\n  __classPrivateFieldIn,\n  __addDisposableResource,\n  __disposeResources,\n};\n","export interface AggregateDataRequestM {\n    interval: string;\n    entityType: string;\n    shiftKey: string;\n    deviceID: number[];\n    entityID: number[];\n    params: Array<{\n        name: string;\n        dsAgg: string;\n        agg: string;\n        source_or_load: string;\n        sourceLoadType: string;\n    }>;\n    showImmediateChildOnly: boolean;\n    groupAll: boolean;\n    startTime: string;\n    endTime: string;\n}\n\nexport class AggregateDataRequest implements AggregateDataRequestM {\n    interval = null;\n    entityType = null;\n    shiftKey = null;\n    deviceID = null;\n    entityID = null;\n    params = null;\n    showImmediateChildOnly = false;\n    groupAll = false;\n    startTime = null;\n    endTime = null;\n\n    nullifyParams() {\n        this.params?.forEach(param => {\n            param.name = param.name || null;\n            param.dsAgg = param.dsAgg || null;\n            param.agg = param.agg || null;\n            param.source_or_load = param.source_or_load || null;\n            param.sourceLoadType = param.sourceLoadType || null;\n        });\n    }\n}","import { Inject, Injectable } from '@angular/core';\nimport { HttpClient } from '@angular/common/http';\n\nimport { Observable } from 'rxjs';\n\nimport { ParameterM } from '../model/parameter.model';\n\n@Injectable({\n    providedIn: 'root'\n})\n\nexport class ParameterController {\n\n    constructor(\n        private http: HttpClient,\n        @Inject('environment') private environment: any\n    ) { }\n\n    getParameterByLayoutID(orgID): Observable<ParameterM[]> {\n        // return this.http.get<ParameterM[]>(`${this.environment.TSC_COMMON_API_URL}organizations/${orgID}/layouts/parameters`);\n        return this.http.get<ParameterM[]>(`${this.environment.MOCK_SERVER}parameter`);\n    }\n\n    getParameterByDeviceID(orgID, requestBody): Observable<ParameterM[]> {\n        // return this.http.post<ParameterM[]>(`${this.environment.TSC_COMMON_API_URL}organizations/${orgID}/devices/parameters`, requestBody);\n        return this.http.get<ParameterM[]>(`${this.environment.MOCK_SERVER}parameter`);\n    }\n\n    getDerivedParameterByLayoutID(orgID): Observable<ParameterM[]> {\n        // return this.http.get<ParameterM[]>(`${this.environment.TSC_COMMON_API_URL}organizations/${orgID}/layouts/derived/parameters`);\n        return this.http.get<ParameterM[]>(`${this.environment.MOCK_SERVER}parameter`);\n    }\n}\n","import { Injectable } from '@angular/core';\n\nimport { Parameter, ParameterM } from '../model/parameter.model';\n\nimport { ParameterController } from '../controller/parameter.controller';\n\n// tsc-library\nimport { StorageService } from '@library/storage-service';\n// /tsc-library/\n\n@Injectable({\n    providedIn: 'root'\n})\n\nexport class ParameterService {\n\n    constructor(\n        private parameterController: ParameterController,\n        private storageService: StorageService,\n    ) { }\n\n    async getParameterByLayoutID(orgID): Promise<ParameterM[]> {\n        let parameterM: ParameterM[];\n        try {\n            parameterM = await this.parameterController.getParameterByLayoutID(orgID).toPromise();\n\n            if (parameterM) {\n                return parameterM;\n            } else {\n                return [new Parameter()];\n            }\n        } catch (error) {\n            console.error('Error -', error);\n            return [new Parameter()];\n        }\n    }\n\n    async getParameterByDeviceID(orgID, requestBody): Promise<ParameterM[]> {\n        let parameterM: ParameterM[];\n        try {\n            parameterM = await this.parameterController.getParameterByDeviceID(orgID, requestBody).toPromise();\n\n            if (parameterM) {\n                return parameterM;\n            } else {\n                return [new Parameter()];\n            }\n        } catch (error) {\n            console.error('Error -', error);\n            return [new Parameter()];\n        }\n    }\n\n    async getDerivedParameterByLayoutID(orgID): Promise<ParameterM[]> {\n        let derivedParameterM: ParameterM[];\n        try {\n            derivedParameterM = await this.parameterController.getDerivedParameterByLayoutID(orgID).toPromise();\n\n            if (derivedParameterM) {\n                return derivedParameterM;\n            } else {\n                return [new Parameter()];\n            }\n        } catch (error) {\n            console.error('Error -', error);\n            return [new Parameter()];\n        }\n    }\n\n}","import { Inject, Injectable } from '@angular/core';\nimport { HttpClient } from '@angular/common/http';\n\n@Injectable({\n    providedIn: 'root'\n})\nexport class AggregateDataController {\n\n    constructor(\n        private http: HttpClient,\n        @Inject('environment') private environment: any\n    ) { }\n\n    getAggregateData(orgID, requestBody) {\n        return this.http.post(`${this.environment.TSC_COMMON_API_URL}organizations/${orgID}/data/aggregate`, requestBody);\n    }\n\n}\n","import { Injectable } from '@angular/core';\n\nimport { AggregateDataController } from '../controller/aggregate-data.controller';\n\n@Injectable({\n    providedIn: 'root'\n})\n\nexport class AggregateDataService {\n\n    constructor(\n        private aggregateDataController: AggregateDataController\n    ) { }\n\n    async getAggregateData(orgID, requestBody) {\n        let aggregatedData;\n        try {\n            aggregatedData = await this.aggregateDataController.getAggregateData(orgID, requestBody).toPromise();\n\n            if (aggregatedData) {\n                return aggregatedData;\n            }\n        } catch (error) {\n            console.error('Error -', error);\n            throw error;\n        }\n    }\n\n}","import { Component, Inject, OnInit } from '@angular/core';\n\nimport { FormControl, Validators } from '@angular/forms';\n\nimport { MAT_DIALOG_DATA, MatDialog, MatDialogRef } from '@angular/material/dialog';\n\nimport { EChartsOption } from 'echarts';\n\nimport { LIST_CONSTANT } from '../../../../constant/list.constant';\n\nimport { AggregateDataRequest } from '../../../../model/aggregate-data.model';\nimport { Parameter, ParameterM } from '../../../../model/parameter.model';\n\nimport { ParameterService } from '../../../../service/parameter.service';\nimport { AggregateDataService } from '../../../../service/aggregate-data.service';\n\n// tsc-library\nimport { COMMON_CONSTANT, DialogEnum, LOADING_GRAPHIC, MaterialFormFieldAppearance, NO_DATA_GRAPHIC, TSCCommonService } from '@library/tsc-common';\nimport { DateService, DateTimeIntervalEnum } from '@library/date';\nimport { StorageService } from '@library/storage-service';\nimport * as moment from 'moment';\n// /tsc-library/\n\n@Component({\n    selector: 'lib-trend',\n    templateUrl: './trend.component.html',\n    styles: [\n    ]\n})\n\nexport class TrendComponent implements OnInit {\n\n    //TODO: SOMYA AGRAWAL, remove all chart dependency once chart library completed..\n\n    listConstant = LIST_CONSTANT;\n\n    materialFormFieldAppearance = MaterialFormFieldAppearance;\n    dateTimeIntervalEnum = DateTimeIntervalEnum;\n    dialogEnum = DialogEnum;\n\n    orgID: any;\n    trendData: any;\n    startTime: any;\n    endTime: any;\n    interval: any;\n    paramLabel: any;\n    noDataOption: any;\n    renderFlag: string = 'LOADING';\n    chartDataOption: EChartsOption;\n\n    parameterM = [new Parameter()];\n\n    dateRangeFC: FormControl = new FormControl('LAST_24_HRS', Validators.required);\n\n    constructor(\n        private dialogRef: MatDialogRef<TrendComponent>,\n        @Inject(MAT_DIALOG_DATA) public data,\n        private storageService: StorageService,\n        private dateService: DateService,\n        private parameterService: ParameterService,\n        private aggregateDataService: AggregateDataService,\n        private tscCommonService: TSCCommonService,\n        private dialog: MatDialog\n    ) {\n        this.trendData = data['trendData'];\n    }\n\n    ngOnInit(): void {\n        this.orgID = this.storageService.getStorage('currentOrgID');\n\n        this.dateRangeChange(this.dateRangeFC.value);\n\n        this.noDataOption = {\n            title: {\n                padding: [7, 0, 0, 20],\n            },\n            graphic: NO_DATA_GRAPHIC,\n            xAxis: { show: false },\n            yAxis: { show: false },\n        };\n\n        this.getParameterByLayoutID();\n    }\n\n    async getParameterByLayoutID() {\n        this.parameterM = <ParameterM[]>await this.parameterService.getParameterByLayoutID(this.orgID);\n    }\n\n    dateRangeChange(selectedDateRange) {\n        this.renderFlag = 'LOADING';\n\n        this.startTime = this.dateService.getStartDateTime(selectedDateRange);\n\n        switch (selectedDateRange) {\n            case DateTimeIntervalEnum.LAST_24_HRS:\n                this.endTime = this.dateService.getEndDateTime(DateTimeIntervalEnum.CURRENT_TIME);\n                this.interval = 'min_15';\n                break;\n\n            case DateTimeIntervalEnum.LAST_7_DAYS:\n                this.endTime = this.dateService.getEndDateTime(DateTimeIntervalEnum.CURRENT_DAY);\n                this.interval = 'hour_1';\n                break;\n\n            case DateTimeIntervalEnum.LAST_30_DAYS:\n                this.endTime = this.dateService.getEndDateTime(DateTimeIntervalEnum.CURRENT_DAY);\n                this.interval = 'day_1';\n                break;\n            default:\n                this.endTime = null;\n                this.interval = null;\n                break;\n        }\n\n        this.chartDataCheck();\n        this.getTrendData();\n    }\n\n    chartDataCheck() {\n        if (this.renderFlag == 'LOADING') {\n            this.chartDataOption = LOADING_GRAPHIC;\n        } else if (this.renderFlag == 'DATA') {\n            this.drawChart();\n        } else {\n            this.chartDataOption = this.noDataOption;\n        }\n    }\n\n    getCounterParameter(paramMetricValue) {\n        const parameter = this.tscCommonService.getUniqueObject(this.parameterM, 'isCounter', paramMetricValue);\n        return parameter ? parameter.isCounter : false;\n    }\n\n    async getTrendData() {\n        this.renderFlag = 'LOADING';\n\n        try {\n            let requestData = new AggregateDataRequest();\n\n            const isCounterParameter = this.getCounterParameter(this.trendData?.paramMetric);\n\n            requestData.interval = this.interval;\n            requestData.entityID = this.trendData?.entityID ? [this.trendData.entityID] : null;\n            requestData.deviceID = this.trendData?.deviceID ? [this.trendData.deviceID] : null;\n            requestData.entityType = this.trendData?.entityType;\n\n            requestData.params = [\n                {\n                    name: this.trendData.paramMetric,\n                    dsAgg: \"avg\",\n                    agg: \"avg\",\n                    ourceLoadType: isCounterParameter ? \"all\" : null,\n                    source_or_load: isCounterParameter ? \"source\" : null,\n                }\n            ];\n            requestData.nullifyParams();\n\n            requestData.startTime = this.startTime;\n            requestData.endTime = this.endTime;\n\n            this.trendData = await this.aggregateDataService.getAggregateData(this.orgID, requestData);\n\n            if (this.trendData?.[0]?.data.length > 0) {\n                this.paramLabel = this.trendData?.[0].paramLabel;\n                this.renderFlag = 'DATA';\n            } else {\n                this.renderFlag = 'NO_DATA';\n            }\n\n            this.chartDataCheck();\n        } catch (error) {\n            console.error(`Error in getTrendData()`, error);\n        }\n\n    }\n\n    drawChart() {\n        const value = this.trendData?.[0].data.map(item => item.value);\n        const unit = this.trendData?.[0].unit;\n\n        let formattedDatesForXAxis;\n\n        if (this.dateRangeFC.value == DateTimeIntervalEnum.LAST_24_HRS) {\n            formattedDatesForXAxis = this.trendData?.[0].data.map(item => {\n                const date = new Date(item.date);\n                return moment(date).format(\"HH:mm\");\n            });\n        } else {\n            formattedDatesForXAxis = this.trendData?.[0].data.map(item => {\n                const date = new Date(item.date);\n                return moment(date).format(\"YYYY-MM-DD HH:mm:ss\");\n            });\n        }\n\n        const formattedDatesForTooltip = this.trendData?.[0].data.map(item => {\n            const date = new Date(item.date);\n            return moment(date).format(\"YYYY-MM-DD HH:mm:ss\");\n        });\n\n        this.chartDataOption = {\n            toolbox: {\n                feature: {\n                    dataView: { show: true, readOnly: true },\n                    saveAsImage: { show: true }\n                }\n            },\n            tooltip: {\n                trigger: 'axis',\n                axisPointer: {\n                    type: 'shadow'\n                },\n                formatter: function (params) {\n                    const dataIndex = params[0].dataIndex;\n                    let tooltip = '';\n                    tooltip += formattedDatesForTooltip[dataIndex] + '<br />';\n\n                    params.forEach(function (param) {\n                        tooltip += 'Value: <b><span style=\"float: right; margin-left:15px;\">' + (param.value != null ? (param.value) + ' ' + unit : COMMON_CONSTANT.HYPHEN) + '</span></b>';\n                    });\n                    return tooltip;\n                }\n            },\n            dataZoom: [\n                {\n                    type: 'slider',\n                    filterMode: 'none'\n                },\n                {\n                    type: 'inside',\n                    filterMode: 'none'\n                }\n            ],\n            xAxis: {\n                type: 'category',\n                boundaryGap: false,\n                data: formattedDatesForXAxis\n            },\n            yAxis: {\n                type: 'value',\n                name: this.trendData?.[0].paramLabel + ' (' + this.trendData?.[0].unit + ')',\n                nameLocation: 'middle',\n                nameGap: 40\n            },\n            series: [\n                {\n                    data: value,\n                    type: 'line',\n                    areaStyle: {}\n                }\n            ]\n        }\n    }\n\n}\n","<div mat-dialog-title>\n    <strong class=\"dialogTitle\">\n        {{ paramLabel }} Trend\n    </strong>\n    <button mat-icon-button mat-dialog-close cdkFocusInitial class=\"float-end matDialogClose\" matTooltip=\"Close\"\n        matTooltipPosition=\"before\">\n        <span class=\"material-symbols-outlined\" [mat-dialog-close]=\"dialogEnum.CLOSE_DR\">\n            close\n        </span>\n    </button>\n</div>\n<div class=\"matDialogContent\" mat-dialog-content>\n    <div class=\"row\">\n        <div class=\"col-sm-6\">\n            <mat-form-field class=\"mat-field-width-100\" [appearance]=\"materialFormFieldAppearance.FORM_FIELD_APPEARANCE\">\n                <mat-label>Select daterange</mat-label>\n                <mat-select (selectionChange)=\"dateRangeChange($event.value)\" [formControl]=\"dateRangeFC\">\n                    <mat-option disabled>Select daterange</mat-option>\n                    <mat-option *ngFor=\"let daterange of listConstant.TREND_DATE_RANGE\" [value]=\"daterange.value\">\n                        {{ daterange.label }}\n                    </mat-option>\n                </mat-select>\n            </mat-form-field>\n        </div>\n    </div>\n    <div class=\"row\">\n        <div echarts [options]=\"chartDataOption\"></div>\n    </div>\n</div>","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\n\nimport { TrendComponent } from './trend.component';\n\nimport { ReactiveFormsModule } from '@angular/forms';\n\nimport { MatDialogModule } from '@angular/material/dialog';\nimport { MatButtonModule } from '@angular/material/button';\nimport { MatInputModule } from '@angular/material/input';\nimport { MatFormFieldModule } from '@angular/material/form-field';\nimport { MatSelectModule } from '@angular/material/select';\nimport { MatTooltipModule } from '@angular/material/tooltip';\n\nimport { NgxEchartsModule } from 'ngx-echarts';\n\n@NgModule({\n    declarations: [\n        TrendComponent\n    ],\n    imports: [\n        CommonModule,\n        ReactiveFormsModule,\n        MatDialogModule,\n        MatButtonModule,\n        MatInputModule,\n        MatFormFieldModule,\n        MatSelectModule,\n        MatTooltipModule,\n        NgxEchartsModule.forRoot({\n            echarts: () => import('echarts')\n        }),\n    ]\n})\nexport class TrendModule { }\n","import { Component, EventEmitter, OnInit, Output } from '@angular/core';\n\nimport { FormControl, Validators } from '@angular/forms';\n\nimport { LIST_CONSTANT } from '../../../constant/list.constant';\n\n// tsc-library\nimport { MaterialFormFieldAppearance } from '@library/tsc-common';\n// /tsc-library/\n\n@Component({\n    selector: 'lib-aggregation',\n    templateUrl: './aggregation.component.html',\n    styles: [\n    ]\n})\nexport class AggregationComponent implements OnInit {\n\n    listConstant = LIST_CONSTANT;\n    materialFormFieldAppearance = MaterialFormFieldAppearance;\n\n    allAggregationIDs: any[] = [];\n    totalAggregationCount: number = 0;\n    aggregationFC: FormControl = new FormControl(['avg'], [Validators.required]);\n\n    @Output()\n    emitFilter = new EventEmitter();\n\n    constructor() { }\n\n    ngOnInit(): void {\n        let aggregationList = this.listConstant.AGGREGATION;\n\n        this.totalAggregationCount = aggregationList.length;\n        aggregationList.forEach(aggregation => this.allAggregationIDs.push(aggregation['value']));\n    }\n\n    ngAfterViewInit() {\n        this.emitFilter.emit();\n    }\n\n    selectAllAggregation() {\n        if (!this.aggregationFC.value.includes(-1)) {\n            this.aggregationFC.reset([]);\n            return;\n        }\n        this.aggregationFC.setValue([-1, ...this.allAggregationIDs]);\n        this.emitFilter.emit();\n    }\n\n    selectedAggregation() {\n        const selected = this.aggregationFC.value;\n\n        if (selected.includes(-1)) {\n            selected.shift();\n            this.aggregationFC.patchValue(selected);\n        } else if (this.aggregationFC.value.length == this.totalAggregationCount) {\n            this.allAggregationIDs.splice(0, 0, -1);\n            this.aggregationFC.patchValue(this.allAggregationIDs);\n        } else {\n            const filteredSelected = selected.filter(s => s != -1);\n            this.aggregationFC.patchValue(filteredSelected);\n        }\n\n        this.emitFilter.emit();\n    }\n\n}\n","<mat-form-field class=\"matFieldWidth100\" [appearance]=\"materialFormFieldAppearance.FORM_FIELD_APPEARANCE\">\n    <mat-label>Select aggregation</mat-label>\n    <mat-select [formControl]=\"aggregationFC\" multiple required>\n        <mat-option [value]=\"-1\" (click)=\"selectAllAggregation()\">\n            Select all\n        </mat-option>\n        <mat-option *ngFor=\"let aggregation of listConstant.AGGREGATION\" [value]=\"aggregation.value\"\n            (click)=\"selectedAggregation()\">\n            {{ aggregation.label }}\n        </mat-option>\n    </mat-select>\n    <mat-error *ngIf=\"aggregationFC.touched && aggregationFC.hasError('required')\">\n        Select aggregation\n    </mat-error>\n</mat-form-field>","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\n\nimport { AggregationComponent } from './aggregation.component';\n\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\n\nimport { MatInputModule } from '@angular/material/input';\nimport { MatFormFieldModule } from '@angular/material/form-field';\nimport { MatSelectModule } from '@angular/material/select';\n\nimport { NgxMatSelectSearchModule } from 'ngx-mat-select-search';\n\n@NgModule({\n    declarations: [\n        AggregationComponent\n    ],\n    imports: [\n        CommonModule,\n        FormsModule,\n        ReactiveFormsModule,\n        MatInputModule,\n        MatSelectModule,\n        MatFormFieldModule,\n        NgxMatSelectSearchModule\n    ],\n    exports: [\n        AggregationComponent\n    ]\n})\nexport class AggregationModule { }\n","import { Component, EventEmitter, OnInit, Output } from '@angular/core';\n\nimport { FormControl, Validators } from '@angular/forms';\n\nimport { LIST_CONSTANT } from '../../../constant/list.constant';\n\n// tsc-library\nimport { MaterialFormFieldAppearance } from '@library/tsc-common';\n// /tsc-library/\n\n@Component({\n    selector: 'lib-aggregation-duration',\n    templateUrl: './aggregation-duration.component.html',\n    styles: [\n    ]\n})\n\nexport class AggregationDurationComponent implements OnInit {\n\n    listConstant = LIST_CONSTANT;\n    materialFormFieldAppearance = MaterialFormFieldAppearance;\n\n    aggDurationFC: FormControl = new FormControl('min_15', [Validators.required]);\n\n    @Output()\n    emitFilter = new EventEmitter();\n\n    constructor() { }\n\n    ngOnInit(): void {\n    }\n\n    ngAfterViewInit() {\n        this.emitFilter.emit();\n    }\n\n    onChange(selectedAD) {\n        this.aggDurationFC.patchValue(selectedAD);\n        this.emitFilter.emit();\n    }\n\n}\n","<mat-form-field class=\"matFieldWidth100\" [appearance]=\"materialFormFieldAppearance.FORM_FIELD_APPEARANCE\">\n    <mat-label>Select aggregation duration</mat-label>\n    <mat-select (selectionChange)=\"onChange($event.value)\" [formControl]=\"aggDurationFC\" required>\n        <mat-option *ngFor=\"let duration of listConstant.AGGREGATION_DURATION\" [value]=\"duration.value\">\n            {{ duration.label }}\n        </mat-option>\n    </mat-select>\n    <mat-error *ngIf=\"aggDurationFC.touched && aggDurationFC.hasError('required')\">\n        Select aggregation duration\n    </mat-error>\n</mat-form-field>","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\n\nimport { AggregationDurationComponent } from './aggregation-duration.component';\n\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\n\nimport { MatInputModule } from '@angular/material/input';\nimport { MatFormFieldModule } from '@angular/material/form-field';\nimport { MatSelectModule } from '@angular/material/select';\n\nimport { NgxMatSelectSearchModule } from 'ngx-mat-select-search';\n\n@NgModule({\n    declarations: [\n        AggregationDurationComponent\n    ],\n    imports: [\n        CommonModule,\n        FormsModule,\n        ReactiveFormsModule,\n        MatInputModule,\n        MatSelectModule,\n        MatFormFieldModule,\n        NgxMatSelectSearchModule\n    ],\n    exports: [\n        AggregationDurationComponent\n    ]\n})\nexport class AggregationDurationModule { }\n","import { Component, EventEmitter, Input, OnInit, Output, SimpleChanges } from '@angular/core';\n\nimport { FormControl, Validators } from '@angular/forms';\n\nimport { Parameter, ParameterM } from '../../../model/parameter.model';\n\nimport { ParameterService } from '../../../service/parameter.service';\n\n// tsc-library\nimport { COMMON_CONSTANT, MatSelectSearchService, MaterialFormFieldAppearance } from '@library/tsc-common';\nimport { StorageService } from '@library/storage-service';\n// /tsc-library/\n\n@Component({\n    selector: 'lib-param-metric',\n    templateUrl: './param-metric.component.html',\n    styles: [\n    ]\n})\nexport class ParamMetricComponent implements OnInit {\n    materialFormFieldAppearance = MaterialFormFieldAppearance\n    commonConstant = COMMON_CONSTANT;\n\n    @Input()\n    deviceInp: any;\n\n    orgID: any;\n    parameterM = [new Parameter()];\n\n    allParameterID: any[] = [];\n    totalParameterCount: number = 0;\n\n    parameterFC: FormControl = new FormControl([], [Validators.required]);\n    paramSearchUtil: MatSelectSearchService = new MatSelectSearchService(['label']);\n\n    @Output()\n    emitFilter = new EventEmitter();\n\n    constructor(\n        private storageService: StorageService,\n        private parameterService: ParameterService\n    ) { }\n\n    ngOnInit(): void {\n        this.orgID = this.storageService.getStorage('currentOrgID');\n    }\n\n    ngOnChanges(changes: SimpleChanges): void {\n        if (changes.deviceInp && this.deviceInp) {\n            this.getParameterByDeviceID(this.deviceInp);\n        }\n    }\n\n    async getParameterByDeviceID(selectedDevices) {\n        let requestBody = {};\n        requestBody['deviceID'] = [selectedDevices];\n\n        this.parameterM = <ParameterM[]>await this.parameterService.getParameterByDeviceID(this.orgID, requestBody);\n\n        this.paramSearchUtil.entityArr = this.parameterM;\n        this.paramSearchUtil.createSubscription();\n\n        this.totalParameterCount = this.parameterM.length;\n        this.parameterM.forEach(parameter => this.allParameterID.push(parameter['paramMetric']));\n\n        this.emitFilter.emit();\n    }\n\n    selectAllParameters() {\n        if (!this.parameterFC.value.includes(-1)) {\n            this.parameterFC.reset([]);\n            return;\n        }\n        this.parameterFC.setValue([-1, ...this.allParameterID]);\n\n        this.emitFilter.emit();\n    }\n\n    selectedParameters() {\n        const selected = this.parameterFC.value;\n\n        if (selected.includes(-1)) {\n            selected.shift();\n            this.parameterFC.patchValue(selected);\n        } else if (this.parameterFC.value.length == this.totalParameterCount) {\n            this.allParameterID.splice(0, 0, -1);\n            this.parameterFC.patchValue(this.allParameterID);\n        } else {\n            const filteredSelected = selected.filter(s => s != -1);\n            this.parameterFC.patchValue(filteredSelected);\n        }\n\n        this.emitFilter.emit();\n    }\n\n}\n","<mat-form-field class=\"matFieldWidth100\" [appearance]=\"materialFormFieldAppearance.FORM_FIELD_APPEARANCE\">\n    <mat-label>Select parameter</mat-label>\n    <ng-container *ngIf=\"parameterM && parameterM.length > 0 && parameterM[0]['id']; else noDataOption\">\n        <mat-select [formControl]=\"parameterFC\" multiple required>\n            <ngx-mat-select-search [formControl]=\"paramSearchUtil.filterFC\" placeholderLabel=\"Search by name\"\n                noEntriesFoundLabel=\"No matching name found.\">\n            </ngx-mat-select-search>\n            <mat-option [value]=\"-1\" (click)=\"selectAllParameters()\" [hidden]=\"paramSearchUtil.filterFC.value\">\n                Select all\n            </mat-option>\n            <mat-option *ngFor=\"let parameter of paramSearchUtil.filteredEntities | async\" [value]=\"parameter.paramMetric\"\n                (click)=\"selectedParameters()\">\n                {{ parameter.label }}\n            </mat-option>\n        </mat-select>\n    </ng-container>\n    <ng-template #noDataOption>\n        <mat-select [formControl]=\"parameterFC\">\n            <mat-option disabled>\n                {{ commonConstant.NO_DATA_FOUND }}\n            </mat-option>\n        </mat-select>\n    </ng-template>\n    <mat-error *ngIf=\"!deviceInp\">\n        Please select device first\n    </mat-error>\n    <mat-error *ngIf=\"parameterFC.touched && parameterFC.hasError('required') && deviceInp\">\n        Select parameter\n    </mat-error>\n</mat-form-field>","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\n\nimport { ParamMetricComponent } from './param-metric.component';\n\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\n\nimport { MatInputModule } from '@angular/material/input';\nimport { MatFormFieldModule } from '@angular/material/form-field';\nimport { MatSelectModule } from '@angular/material/select';\n\nimport { NgxMatSelectSearchModule } from 'ngx-mat-select-search';\n\n@NgModule({\n    declarations: [\n        ParamMetricComponent\n    ],\n    imports: [\n        CommonModule,\n        FormsModule,\n        ReactiveFormsModule,\n        MatInputModule,\n        MatSelectModule,\n        MatFormFieldModule,\n        NgxMatSelectSearchModule\n    ],\n    exports: [\n        ParamMetricComponent\n    ]\n})\nexport class ParamMetricModule { }\n","import { Component, EventEmitter, OnInit, Output } from '@angular/core';\n\nimport { FormControl, Validators } from '@angular/forms';\n\nimport { Parameter, ParameterM } from '../../../model/parameter.model';\n\nimport { ParameterService } from '../../../service/parameter.service';\n\n// tsc-library\nimport { StorageService } from '@library/storage-service';\nimport { COMMON_CONSTANT, MaterialFormFieldAppearance, MatSelectSearchService } from '@library/tsc-common';\n// /tsc-library/\n\n@Component({\n    selector: 'lib-parameter',\n    templateUrl: './parameter.component.html',\n    styles: [\n    ]\n})\nexport class ParameterComponent implements OnInit {\n\n    COMMON_CONSTANT = COMMON_CONSTANT;\n    MaterialFormFieldAppearance = MaterialFormFieldAppearance;\n\n    @Output()\n    emitFilter = new EventEmitter();\n\n    orgID: any;\n\n    parameterM = [new Parameter()];\n\n    selectedParameterFC: FormControl = new FormControl('', [Validators.required]);\n\n    parameterSearchUtil: MatSelectSearchService = new MatSelectSearchService(['label']);\n\n    constructor(\n        private storageService: StorageService,\n        private parameterService: ParameterService\n    ) { }\n\n    ngOnInit(): void {\n        this.orgID = this.storageService.getStorage('currentOrgID');\n\n        this.getParameterByLayoutID();\n    }\n\n    async getParameterByLayoutID() {\n        this.parameterM = <ParameterM[]>await this.parameterService.getParameterByLayoutID(this.orgID);\n\n        this.parameterSearchUtil.entityArr = this.parameterM;\n        this.parameterSearchUtil.createSubscription();\n    }\n\n    parameterChange(selectedParameter) {\n        this.selectedParameterFC.patchValue(selectedParameter);\n        this.emitFilter.emit();\n    }\n\n}\n","<div class=\"row\">\n    <mat-form-field class=\"mat-field-width-100\" [appearance]=\"MaterialFormFieldAppearance.FORM_FIELD_APPEARANCE\">\n        <mat-label>Select parameter</mat-label>\n        <mat-select (selectionChange)=\"parameterChange($event.value)\" [formControl]=\"selectedParameterFC\" required>\n            <ng-container *ngIf=\"parameterM && parameterM.length > 0 && parameterM[0]['id']; else noDataFound\">\n                <mat-option>\n                    <ngx-mat-select-search [formControl]=\"parameterSearchUtil.filterFC\"\n                        placeholderLabel=\"Search by name\" noEntriesFoundLabel=\"No matching name found.\">\n                    </ngx-mat-select-search>\n                </mat-option>\n                <mat-option *ngFor=\"let parameter of parameterSearchUtil.filteredEntities | async\" [value]=\"parameter.id\">\n                    {{ parameter.label }}\n                </mat-option>\n            </ng-container>\n            <ng-template #noDataFound>\n                <mat-option disabled>\n                    {{ COMMON_CONSTANT.NO_DATA_FOUND }}\n                </mat-option>\n            </ng-template>\n        </mat-select>\n        <mat-error *ngIf=\"selectedParameterFC.hasError('required')\">\n            Select parameter\n        </mat-error>\n    </mat-form-field>\n</div>","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\n\nimport { ParameterComponent } from './parameter.component';\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\n\nimport { MatInputModule } from '@angular/material/input';\nimport { MatSelectModule } from '@angular/material/select';\nimport { MatFormFieldModule } from '@angular/material/form-field';\nimport { NgxMatSelectSearchModule } from 'ngx-mat-select-search';\n\n@NgModule({\n    declarations: [\n        ParameterComponent\n    ],\n    imports: [\n        CommonModule,\n        FormsModule,\n        ReactiveFormsModule,\n        MatInputModule,\n        MatSelectModule,\n        MatFormFieldModule,\n        NgxMatSelectSearchModule\n    ],\n    exports: [\n        ParameterComponent\n    ]\n})\n\nexport class ParameterModule { }\n","export enum DropdownTypeEnum {\n    SINGLE_DROPDOWN = 'SINGLE',\n    MULTIPLE_DROPDOWN = 'MULTIPLE',\n}","import { Inject, Injectable } from '@angular/core';\nimport { HttpClient, HttpParams } from '@angular/common/http';\n\nimport { Observable } from 'rxjs';\n\nimport { DeviceInfoM, DeviceM, DevicesWithEntitiesM } from '../model/device.model';\n\n@Injectable({\n    providedIn: 'root'\n})\n\nexport class DeviceController {\n\n    constructor(\n        private http: HttpClient,\n        @Inject('environment') private environment: any\n    ) { }\n\n    getDeviceInfo(orgID): Observable<DeviceInfoM> {\n        return this.http.get<DeviceInfoM>(`${this.environment.TSC_COMMON_API_URL}organizations/${orgID}/devices/status`);\n    }\n\n    getDevicesByEntityID(orgID, requestBody): Observable<DeviceM[]> {\n        // return this.http.post<DeviceM[]>(`${this.environment.TSC_COMMON_API_URL}organizations/${orgID}/entities/devices`, requestBody);\n        return this.http.get<DeviceM[]>(`${this.environment.MOCK_SERVER}devices`);\n    }\n\n    //TODO: SOMYA AGRAWAL: To discuss below twp api's with Abhinav\n    getDevicesWithEntities(orgID, requestBody):Observable<DevicesWithEntitiesM[]> {\n        return this.http.post<DevicesWithEntitiesM[]>(`${this.environment.TSC_COMMON_API_URL}organizations/${orgID}/layouts/entities/devices`, requestBody);\n    }\n    \n    getDevicesWithEntitiesByParameter(orgID, paramMetric): Observable<DevicesWithEntitiesM[]> {\n        let params = new HttpParams();\n        params = params.append('paramMetric', paramMetric);\n        return this.http.post<DevicesWithEntitiesM[]>(`${this.environment.TSC_COMMON_API_URL}organizations/${orgID}/entities-devices`, { params: params });\n    }\n}\n","import { Injectable } from '@angular/core';\n\nimport { Device, DeviceM, DevicesWithEntities, DevicesWithEntitiesM } from '../model/device.model';\nimport { DeviceController } from '../controller/device.controller';\n\n@Injectable({\n    providedIn: 'root'\n})\n\nexport class DeviceService {\n\n    constructor(\n        private deviceController: DeviceController\n    ) { }\n\n    async getDevicesByEntityID(orgID, requestBody): Promise<DeviceM[]> {\n        let deviceM: DeviceM[];\n        try {\n            deviceM = await this.deviceController.getDevicesByEntityID(orgID, requestBody).toPromise();\n\n            if (deviceM) {\n                return deviceM;\n            } else {\n                return [new Device()];\n            }\n        } catch (error) {\n            console.error('Error -', error);\n            return [new Device()];\n        }\n    }\n\n    async getDevicesWithEntities(orgID, requestBody): Promise<DevicesWithEntitiesM[]> {\n        let devicesWithEntitiesM: DevicesWithEntitiesM[];\n        try {\n            devicesWithEntitiesM = await this.deviceController.getDevicesWithEntities(orgID, requestBody).toPromise();\n\n            if (devicesWithEntitiesM) {\n                return devicesWithEntitiesM;\n            } else {\n                return [new DevicesWithEntities()];\n            }\n        } catch (error) {\n            console.error('Error -', error);\n            return [new DevicesWithEntities()];\n        }\n    }\n\n}","import { Component, EventEmitter, Input, OnInit, Output, SimpleChanges } from '@angular/core';\n\nimport { FormControl, Validators } from '@angular/forms';\n\nimport { DropdownTypeEnum } from '../../../enum/dropdown.enum';\n\nimport { Device, DeviceM } from '../../../model/device.model';\n\nimport { DeviceService } from '../../../service/device.service';\n\n// tsc-library\nimport { StorageService } from '@library/storage-service';\nimport { COMMON_CONSTANT, MaterialFormFieldAppearance, MatSelectSearchService } from '@library/tsc-common';\n// /tsc-library/\n\n@Component({\n    selector: 'lib-device',\n    templateUrl: './device.component.html',\n    styles: [\n    ]\n})\n\nexport class DeviceComponent implements OnInit {\n\n    @Input()\n    dropdownTypeInp: DropdownTypeEnum;\n\n    @Input()\n    entityInp: any;\n\n    commonConstant = COMMON_CONSTANT;\n    materialFormFieldAppearance = MaterialFormFieldAppearance;\n    dropdownTypeEnum = DropdownTypeEnum;\n\n    deviceM = [new Device()];\n\n    orgID: any;\n    dropdownType: any;\n    allDeviceID: any[] = [];\n    totalDeviceCount: number = 0;\n\n    deviceFC: FormControl = new FormControl('', [Validators.required]);\n    multipleDeviceFC: FormControl = new FormControl([], [Validators.required]);\n\n    deviceSearchUtil: MatSelectSearchService = new MatSelectSearchService(['name']);\n\n    @Output()\n    emitFilter = new EventEmitter();\n\n    constructor(\n        private storageService: StorageService,\n        private deviceService: DeviceService\n    ) { }\n\n    ngOnInit(): void {\n        this.orgID = this.storageService.getStorage('currentOrgID');\n    }\n\n    ngOnChanges(changes: SimpleChanges): void {\n        if (changes.dropdownTypeInp && this.dropdownTypeInp) {\n            this.dropdownType = this.dropdownTypeInp;\n        }\n\n        if (this.entityInp && this.entityInp?.length != 0) {\n            if (changes.entityInp) {\n                this.getDevicesByEntityID(this.entityInp);\n\n                this.deviceFC.patchValue(null);\n                this.emitFilter.emit();\n            }\n        }\n    }\n\n    async getDevicesByEntityID(entityID) {\n        let requestBody = {};\n        requestBody['entityID'] = entityID;\n\n        this.deviceM = <DeviceM[]>await this.deviceService.getDevicesByEntityID(this.orgID, requestBody);\n\n        this.deviceSearchUtil.entityArr = this.deviceM;\n        this.deviceSearchUtil.createSubscription();\n\n        this.totalDeviceCount = this.deviceM.length;\n        this.deviceM.forEach(device => this.allDeviceID.push(device['id']));\n        this.emitFilter.emit();\n    }\n\n    onChange(selectedDevice) {\n        this.deviceFC.patchValue(selectedDevice);\n        this.emitFilter.emit();\n    }\n\n    selectAllDevices() {\n        if (!this.multipleDeviceFC.value.includes(-1)) {\n            this.multipleDeviceFC.reset([]);\n            return;\n        }\n        this.multipleDeviceFC.setValue([-1, ...this.allDeviceID]);\n        this.emitFilter.emit();\n    }\n\n    selectedDevices() {\n        const selected = this.multipleDeviceFC.value;\n\n        if (selected.includes(-1)) {\n            selected.shift();\n            this.multipleDeviceFC.patchValue(selected);\n        } else if (this.multipleDeviceFC.value.length == this.totalDeviceCount) {\n            this.allDeviceID.splice(0, 0, -1);\n            this.multipleDeviceFC.patchValue(this.allDeviceID);\n        } else {\n            const filteredSelected = selected.filter(s => s != -1);\n            this.multipleDeviceFC.patchValue(filteredSelected);\n        }\n\n        this.emitFilter.emit();\n    }\n\n}","<mat-form-field *ngIf=\"dropdownType == dropdownTypeEnum.SINGLE_DROPDOWN\" class=\"matFieldWidth100\"\n    [appearance]=\"materialFormFieldAppearance.FORM_FIELD_APPEARANCE\">\n    <mat-label>Select device</mat-label>\n    <mat-select (selectionChange)=\"onChange($event.value)\" [formControl]=\"deviceFC\" required>\n        <ng-container *ngIf=\"deviceM && deviceM.length > 0 && deviceM[0]['id']; else noDeviceFound\">\n            <mat-option>\n                <ngx-mat-select-search [formControl]=\"deviceSearchUtil.filterFC\" placeholderLabel=\"Search by name\"\n                    noEntriesFoundLabel=\"No matching name found.\">\n                </ngx-mat-select-search>\n            </mat-option>\n            <mat-option *ngFor=\"let device of deviceSearchUtil.filteredEntities | async\" [value]=\"device.id\">\n                {{ device.name }}\n            </mat-option>\n        </ng-container>\n        <ng-template #noDeviceFound>\n            <mat-option disabled>\n                {{ commonConstant.NO_DATA_FOUND }}\n            </mat-option>\n        </ng-template>\n    </mat-select>\n    <mat-error *ngIf=\"!entityInp\">\n        Please select entity first\n    </mat-error>\n    <mat-error\n        *ngIf=\"deviceFC.touched && deviceFC.hasError('required') && entityInp\">\n        Select device\n    </mat-error>\n</mat-form-field>\n\n<mat-form-field *ngIf=\"dropdownType == dropdownTypeEnum.MULTIPLE_DROPDOWN\" class=\"matFieldWidth100\"\n    [appearance]=\"materialFormFieldAppearance.FORM_FIELD_APPEARANCE\">\n    <mat-label>Select device</mat-label>\n    <ng-container *ngIf=\"deviceM && deviceM.length > 0 && deviceM[0]['id']; else noDataOption\">\n        <mat-select [formControl]=\"multipleDeviceFC\" multiple required>\n            <ngx-mat-select-search [formControl]=\"deviceSearchUtil.filterFC\" placeholderLabel=\"Search by name\"\n                noEntriesFoundLabel=\"No matching name found.\">\n            </ngx-mat-select-search>\n            <mat-option [value]=\"-1\" (click)=\"selectAllDevices()\"  [hidden]=\"deviceSearchUtil.filterFC.value\">\n                Select all\n            </mat-option>\n            <mat-option *ngFor=\"let device of deviceSearchUtil.filteredEntities | async\" [value]=\"device.id\"\n                (click)=\"selectedDevices()\">\n                {{ device.name }}\n            </mat-option>\n        </mat-select>\n    </ng-container>\n    <ng-template #noDataOption>\n        <mat-select [formControl]=\"multipleDeviceFC\">\n            <mat-option disabled>\n                {{ commonConstant.NO_DATA_FOUND }}\n            </mat-option>\n        </mat-select>\n    </ng-template>\n    <mat-error *ngIf=\"!entityInp\">\n        Please select entity first\n    </mat-error>\n    <mat-error *ngIf=\"multipleDeviceFC.touched && multipleDeviceFC.hasError('required') && entityInp\">\n        Select device\n    </mat-error>\n</mat-form-field>","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\n\nimport { DeviceComponent } from './device.component';\n\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\n\nimport { MatInputModule } from '@angular/material/input';\nimport { MatSelectModule } from '@angular/material/select';\nimport { MatFormFieldModule } from '@angular/material/form-field';\n\nimport { NgxMatSelectSearchModule } from 'ngx-mat-select-search';\n\n@NgModule({\n    declarations: [\n        DeviceComponent\n    ],\n    imports: [\n        CommonModule,\n        FormsModule,\n        ReactiveFormsModule,\n        MatInputModule,\n        MatSelectModule,\n        MatFormFieldModule,\n        NgxMatSelectSearchModule\n    ],\n    exports: [\n        DeviceComponent\n    ]\n})\n\nexport class DeviceModule { }\n","import { Inject, Injectable } from '@angular/core';\nimport { HttpClient } from '@angular/common/http';\n\nimport { Observable } from 'rxjs';\n\nimport { EntityM, EntityTreeM, EntityTypeM } from '../model/entity.model';\n\n@Injectable({\n    providedIn: 'root'\n})\n\nexport class EntityController {\n\n    constructor(\n        private http: HttpClient,\n        @Inject('environment') private environment: any\n    ) { }\n\n    getEntitiesByOrgID(orgID): Observable<EntityM[]> {\n        // return this.http.get<EntityM[]>(`${this.environment.TSC_COMMON_API_URL}organizations/${orgID}/entities`);\n        return this.http.get<EntityM[]>(`${this.environment.MOCK_SERVER}entities`);\n    }\n\n    getEntityHierarchyByParameterID(orgID, parameterID): Observable<EntityTreeM[]> {\n        return this.http.get<EntityTreeM[]>(`${this.environment.TSC_COMMON_API_URL}organizations/${orgID}/layouts/parameters/${parameterID}/entities`);\n    }\n\n    getEntityLevelConsumption(orgID, requestBody) {\n        return this.http.post(`${this.environment.TSC_COMMON_API_URL}organizations/${orgID}/entities/load-consumption`, requestBody);\n    }\n\n    getEntityTypeByLayoutID(orgID): Observable<EntityTypeM[]> {\n        return this.http.get<EntityTypeM[]>(`${this.environment.TSC_COMMON_API_URL}organizations/${orgID}/entities/type`);\n    }\n\n    getEntitiesWithDevices(orgID, layoutID, requestBody): Observable<EntityTreeM> {\n        return this.http.post<EntityTreeM>(`${this.environment.TSC_COMMON_API_URL}organizations/${orgID}/layouts/${layoutID}/entity-device`, requestBody);\n    }\n\n    getEntityByParameterID(orgID, requestBody): Observable<EntityM[]> {\n        // return this.http.post<EntityM[]>(`${this.environment.TSC_COMMON_API_URL}organizations/${orgID}/layouts/entities`, requestBody);\n        return this.http.get<EntityM[]>(`${this.environment.MOCK_SERVER}entities`);\n    }\n}\n","import { Injectable } from '@angular/core';\n\nimport { Entity, EntityM, EntityTree, EntityTreeM, EntityType, EntityTypeM } from '../model/entity.model';\n\nimport { EntityController } from '../controller/entity.controller';\n\n@Injectable({\n    providedIn: 'root'\n})\n\nexport class EntityService {\n\n    constructor(\n        private entityController: EntityController\n    ) { }\n\n    async getEntitiesByOrgID(orgID): Promise<EntityM[]> {\n        let entityM: EntityM[];\n        try {\n            entityM = await this.entityController.getEntitiesByOrgID(orgID).toPromise();\n\n            if (entityM) {\n                return entityM;\n            } else {\n                return [new Entity()];\n            }\n        } catch (error) {\n            console.error('Error -', error);\n            return [new Entity()];\n        }\n    }\n\n    async getEntityHierarchyByParameterID(orgID, parameterID): Promise<EntityTreeM[]> {\n        let entityTreeM: EntityTreeM[];\n        try {\n            entityTreeM = await this.entityController.getEntityHierarchyByParameterID(orgID, parameterID).toPromise();\n\n            if (entityTreeM) {\n                return entityTreeM;\n            } else {\n                return [new EntityTree()];\n            }\n        } catch (error) {\n            console.error('Error -', error);\n            return [new EntityTree()];\n        }\n    }\n\n    async getEntityTypeByLayoutID(orgID): Promise<EntityTypeM[]> {\n        let entityTypeM: EntityTypeM[];\n        try {\n            entityTypeM = await this.entityController.getEntityTypeByLayoutID(orgID).toPromise();\n\n            if (entityTypeM) {\n                return entityTypeM;\n            } else {\n                return [new EntityType()];\n            }\n        } catch (error) {\n            console.error('Error -', error);\n            return [new EntityType()];\n        }\n    }\n\n    async getEntitiesWithDevices(orgID, layoutID, requestBody): Promise<EntityTreeM> {\n        let entityDeviceM: EntityTreeM;\n        try {\n            entityDeviceM = await this.entityController.getEntitiesWithDevices(orgID, layoutID, requestBody).toPromise();\n\n            if (entityDeviceM) {\n                return entityDeviceM;\n            } else {\n                return new EntityTree();\n            }\n        } catch (error) {\n            console.error('Error -', error);\n            return new EntityTree();\n        }\n    }\n\n    async getEntityByParameterID(orgID, requestBody): Promise<EntityM[]> {\n        let entityM: EntityM[];\n        try {\n            entityM = await this.entityController.getEntityByParameterID(orgID, requestBody).toPromise();\n\n            if (entityM) {\n                return entityM;\n            } else {\n                return [new Entity()];\n            }\n        } catch (error) {\n            console.error('Error -', error);\n            return [new Entity()];\n        }\n    }\n\n}","import { Component, EventEmitter, Input, OnInit, Output, SimpleChanges } from '@angular/core';\n\nimport { FormControl, Validators } from '@angular/forms';\n\nimport { Entity, EntityM } from '../../../model/entity.model';\n\nimport { EntityService } from '../../../service/entity.service';\n\n// tsc-library\nimport { COMMON_CONSTANT, MatSelectSearchService, MaterialFormFieldAppearance } from '@library/tsc-common';\nimport { StorageService } from '@library/storage-service';\nimport { DropdownTypeEnum } from '../../../enum/dropdown.enum';\n// /tsc-library/\n\n@Component({\n    selector: 'lib-entity',\n    templateUrl: './entity.component.html',\n    styles: [\n    ]\n})\n\nexport class EntityComponent implements OnInit {\n    @Input()\n    dropdownTypeInp: DropdownTypeEnum;\n\n    materialFormFieldAppearance = MaterialFormFieldAppearance\n    commonConstant = COMMON_CONSTANT;\n    dropdownTypeEnum = DropdownTypeEnum;\n\n    orgID: any;\n    entityM = [new Entity()];\n    dropdownType: string = this.dropdownTypeEnum.SINGLE_DROPDOWN;\n    allEntityID: any[] = [];\n    totalEntityCount: number = 0;\n\n    entityFC: FormControl = new FormControl('', [Validators.required]);\n    multipleEntityFC: FormControl = new FormControl([], [Validators.required]);\n\n    entitySearchUtil: MatSelectSearchService = new MatSelectSearchService(['name']);\n\n    @Output()\n    emitFilter = new EventEmitter();\n\n    constructor(\n        private storageService: StorageService,\n        private entityService: EntityService\n    ) { }\n\n    ngOnInit(): void {\n        this.orgID = this.storageService.getStorage('currentOrgID');\n\n        this.getEntitiesByOrgID();\n    }\n\n    ngOnChanges(changes: SimpleChanges): void {\n        if (changes.dropdownTypeInp && this.dropdownTypeInp) {\n            this.dropdownType = this.dropdownTypeInp;\n        }\n    }\n\n    async getEntitiesByOrgID() {\n        this.entityM = <EntityM[]>await this.entityService.getEntitiesByOrgID(this.orgID);\n\n        this.entitySearchUtil.entityArr = this.entityM;\n        this.entitySearchUtil.createSubscription();\n\n        this.totalEntityCount = this.entityM.length;\n        this.entityM.forEach(entity => this.allEntityID.push(entity['id']));\n\n        if (this.entityM.length > 0) {\n            this.entityFC.patchValue(this.entityM[0]['id']);\n            this.emitFilter.emit();\n        }\n    }\n\n    onChange(selectedEntity) {\n        this.entityFC.patchValue(selectedEntity);\n        this.emitFilter.emit();\n    }\n\n    selectAllEntities() {\n        if (!this.multipleEntityFC.value.includes(-1)) {\n            this.multipleEntityFC.reset([]);\n            return;\n        }\n        this.multipleEntityFC.setValue([-1, ...this.allEntityID]);\n        this.emitFilter.emit();\n    }\n\n    selectedEntities() {\n        const selected = this.multipleEntityFC.value;\n\n        if (selected.includes(-1)) {\n            selected.shift();\n            this.multipleEntityFC.patchValue(selected);\n        } else if (this.multipleEntityFC.value.length == this.totalEntityCount) {\n            this.allEntityID.splice(0, 0, -1);\n            this.multipleEntityFC.patchValue(this.allEntityID);\n        } else {\n            const filteredSelected = selected.filter(s => s != -1);\n            this.multipleEntityFC.patchValue(filteredSelected);\n        }\n\n        this.emitFilter.emit();\n    }\n\n}\n","<mat-form-field *ngIf=\"dropdownType == dropdownTypeEnum.SINGLE_DROPDOWN\" class=\"matFieldWidth100\"\n    [appearance]=\"materialFormFieldAppearance.FORM_FIELD_APPEARANCE\">\n    <mat-label>Select entity</mat-label>\n    <mat-select (selectionChange)=\"onChange($event.value)\" [formControl]=\"entityFC\" required>\n        <ng-container *ngIf=\"entityM && entityM.length > 0 && entityM[0]['id']; else noDataFound\">\n            <mat-option>\n                <ngx-mat-select-search [formControl]=\"entitySearchUtil.filterFC\" placeholderLabel=\"Search by name\"\n                    noEntriesFoundLabel=\"No matching name found.\">\n                </ngx-mat-select-search>\n            </mat-option>\n            <mat-option *ngFor=\"let entity of entitySearchUtil.filteredEntities | async\" [value]=\"entity.id\">\n                {{ entity.name }}\n            </mat-option>\n        </ng-container>\n        <ng-template #noDataFound>\n            <mat-option disabled>\n                {{ commonConstant.NO_DATA_FOUND }}\n            </mat-option>\n        </ng-template>\n    </mat-select>\n    <mat-error *ngIf=\"entityFC.touched && entityFC.hasError('required')\">\n        Select entity\n    </mat-error>\n</mat-form-field>\n\n<mat-form-field *ngIf=\"dropdownType == dropdownTypeEnum.MULTIPLE_DROPDOWN\" class=\"matFieldWidth100\"\n    [appearance]=\"materialFormFieldAppearance.FORM_FIELD_APPEARANCE\">\n    <mat-label>Select entity</mat-label>\n    <ng-container *ngIf=\"entityM && entityM.length > 0 && entityM[0]['id']; else noDataOption\">\n        <mat-select [formControl]=\"multipleEntityFC\" multiple required>\n            <ngx-mat-select-search [formControl]=\"entitySearchUtil.filterFC\" placeholderLabel=\"Search by name\"\n                noEntriesFoundLabel=\"No matching name found.\">\n            </ngx-mat-select-search>\n            <mat-option [value]=\"-1\" (click)=\"selectAllEntities()\" [hidden]=\"entitySearchUtil.filterFC.value\">\n                Select all\n            </mat-option>\n            <mat-option *ngFor=\"let entity of entitySearchUtil.filteredEntities | async\" [value]=\"entity.id\"\n                (click)=\"selectedEntities()\">\n                {{ entity.name }}\n            </mat-option>\n        </mat-select>\n    </ng-container>\n    <ng-template #noDataOption>\n        <mat-select [formControl]=\"multipleEntityFC\">\n            <mat-option disabled>\n                {{ commonConstant.NO_DATA_FOUND }}\n            </mat-option>\n        </mat-select>\n    </ng-template>\n    <mat-error *ngIf=\"multipleEntityFC.touched && multipleEntityFC.hasError('required') && entityInp\">\n        Select entity\n    </mat-error>\n</mat-form-field>","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\n\nimport { EntityComponent } from './entity.component';\n\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\n\nimport { MatInputModule } from '@angular/material/input';\nimport { MatFormFieldModule } from '@angular/material/form-field';\nimport { MatSelectModule } from '@angular/material/select';\n\nimport { NgxMatSelectSearchModule } from 'ngx-mat-select-search';\n\n@NgModule({\n    declarations: [\n        EntityComponent\n    ],\n    imports: [\n        CommonModule,\n        FormsModule,\n        ReactiveFormsModule,\n        MatInputModule,\n        MatSelectModule,\n        MatFormFieldModule,\n        NgxMatSelectSearchModule\n    ],\n    exports: [\n        EntityComponent\n    ]\n})\nexport class EntityModule { }\n","import { Inject, Injectable } from '@angular/core';\nimport { HttpClient } from '@angular/common/http';\n\nimport { Observable } from 'rxjs';\n\nimport { UnitM } from '../model/unit.model';\n\n@Injectable({\n    providedIn: 'root'\n})\n\nexport class UnitController {\n\n    constructor(\n        private http: HttpClient,\n        @Inject('environment') private environment: any\n    ) { }\n\n    getUnitByParameterID(orgID, parameterID): Observable<UnitM[]> {\n        return this.http.get<UnitM[]>(`${this.environment.TSC_COMMON_API_URL}organizations/${orgID}/parameters/${parameterID}/unit-type`);\n    }\n}","import { Injectable } from '@angular/core';\n\nimport { Unit, UnitM } from '../model/unit.model';\n\nimport { UnitController } from '../controller/unit.controller';\n\n@Injectable({\n    providedIn: 'root'\n})\n\nexport class UnitService {\n\n    constructor(\n        private unitController: UnitController,\n    ) { }\n\n    async getUnitByParameterID(orgID, parameterID): Promise<UnitM[]> {\n        let unitM: UnitM[];\n        try {\n            unitM = await this.unitController.getUnitByParameterID(orgID, parameterID).toPromise();\n\n            if (unitM) {\n                return unitM;\n            } else {\n                return [new Unit()];\n            }\n        } catch (error) {\n            console.error('Error -', error);\n            return [new Unit()];\n        }\n    }\n}","import { Component, EventEmitter, Input, OnInit, Output, SimpleChanges } from '@angular/core';\n\nimport { FormControl, Validators } from '@angular/forms';\n\nimport { Unit, UnitM } from '../../../model/unit.model';\n\nimport { UnitService } from '../../../service/unit.service';\n\n// tsc-library\nimport { StorageService } from '@library/storage-service';\nimport { COMMON_CONSTANT, MaterialFormFieldAppearance, MatSelectSearchService } from '@library/tsc-common';\n// /tsc-library/\n\n@Component({\n    selector: 'lib-unit',\n    templateUrl: './unit.component.html',\n    styles: [\n    ]\n})\n\nexport class UnitComponent implements OnInit {\n\n    @Input()\n    selectedParameterID: any;\n\n    COMMON_CONSTANT = COMMON_CONSTANT;\n    MaterialFormFieldAppearance = MaterialFormFieldAppearance;\n\n    @Output()\n    emitFilter = new EventEmitter();\n\n    orgID: any;\n\n    unitM = [new Unit()];\n\n    selectedUnitFC: FormControl = new FormControl('', [Validators.required]);\n\n    unitSearchUtil: MatSelectSearchService = new MatSelectSearchService(['name']);\n\n    constructor(\n        private storageService: StorageService,\n        private unitService: UnitService\n    ) { }\n\n    ngOnInit(): void {\n        this.orgID = this.storageService.getStorage('currentOrgID');\n    }\n\n    ngOnChanges(changes: SimpleChanges): void {\n        if (this.selectedParameterID) {\n            if (changes.selectedParameterID) {\n                this.getUnitByParameterID(this.selectedParameterID);\n            }\n        }\n    }\n\n    async getUnitByParameterID(parameterID) {\n        this.unitM = <UnitM[]>await this.unitService.getUnitByParameterID(this.orgID, parameterID);\n\n        this.unitSearchUtil.entityArr = this.unitM;\n        this.unitSearchUtil.createSubscription();\n    }\n\n    unitChange(selectedUnit) {\n        this.selectedUnitFC.patchValue(selectedUnit);\n        this.emitFilter.emit();\n    }\n\n}","<div class=\"row\">\n    <mat-form-field class=\"mat-field-width-100\" [appearance]=\"MaterialFormFieldAppearance.FORM_FIELD_APPEARANCE\">\n        <mat-label>Select unit</mat-label>\n        <mat-select (selectionChange)=\"unitChange($event.value)\" [formControl]=\"selectedUnitFC\" required>\n            <ng-container *ngIf=\"unitM && unitM.length > 0 && unitM[0]['id']; else noDataFound\">\n                <mat-option>\n                    <ngx-mat-select-search [formControl]=\"unitSearchUtil.filterFC\" placeholderLabel=\"Search by name\"\n                        noEntriesFoundLabel=\"No matching name found.\">\n                    </ngx-mat-select-search>\n                </mat-option>\n                <mat-option *ngFor=\"let unit of unitSearchUtil.filteredEntities | async\" [value]=\"unit.id\">\n                    {{ unit.name }}\n                </mat-option>\n            </ng-container>\n            <ng-template #noDataFound>\n                <mat-option disabled>\n                    {{ COMMON_CONSTANT.NO_DATA_FOUND }}\n                </mat-option>\n            </ng-template>\n        </mat-select>\n        <mat-error *ngIf=\"!selectedParameterID\">\n            Please select parameter first\n        </mat-error>\n        <mat-error *ngIf=\"selectedUnitFC.hasError('required') && selectedParameterID\">\n            Select unit\n        </mat-error>\n    </mat-form-field>\n</div>","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\n\nimport { UnitComponent } from './unit.component';\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\n\nimport { MatInputModule } from '@angular/material/input';\nimport { MatSelectModule } from '@angular/material/select';\nimport { MatFormFieldModule } from '@angular/material/form-field';\nimport { NgxMatSelectSearchModule } from 'ngx-mat-select-search';\n\n@NgModule({\n    declarations: [\n        UnitComponent\n    ],\n    imports: [\n        CommonModule,\n        FormsModule,\n        ReactiveFormsModule,\n        MatInputModule,\n        MatSelectModule,\n        MatFormFieldModule,\n        NgxMatSelectSearchModule\n    ],\n    exports: [\n        UnitComponent\n    ]\n})\n\nexport class UnitModule { }\n","import { Component, OnInit } from '@angular/core';\n\nimport { DeviceInfo } from '../../../model/device.model';\nimport { EntityLevelConsumption } from '../../../model/entity.model';\nimport { AggregateDataRequest } from '../../../model/aggregate-data.model';\n\nimport { EntityController } from '../../../controller/entity.controller';\nimport { DeviceController } from '../../../controller/device.controller';\n\nimport { AggregateDataService } from '../../../service/aggregate-data.service';\n\n// tsc-library\nimport { DateTimeIntervalEnum, DateService } from '@library/date';\nimport { COMMON_CONSTANT, TSCCommonService } from '@library/tsc-common';\nimport { StorageService } from '@library/storage-service';\nimport { ApplicationKeyID } from '@library/application-service';\n// /tsc-library/\n\n@Component({\n    selector: 'lib-home',\n    templateUrl: './home.component.html',\n    styleUrls: ['./home.component.scss']\n})\n\nexport class HomeComponent implements OnInit {\n    commonConstant = COMMON_CONSTANT;\n\n    orgID: any;\n    applicationKeyID: any;\n    paramKey: any;\n    label: any;\n    icon;\n\n    outerStrokeColor: any;\n    outerStrokeGradientStopColor: any;\n    innerStrokeColor: any;\n\n    totalConsumptionCircleData: any;\n    consumptionBreakupCircleData: any;\n\n    todayConsumption: any;\n    currentMonthConsumption: any;\n    currentYearConsumption: any;\n    entityConsumption = [new EntityLevelConsumption()];\n    deviceInfoM = new DeviceInfo();\n\n    constructor(\n        private storageService: StorageService,\n        private dateService: DateService,\n        private tscCommonService: TSCCommonService,\n        private aggregateDataService: AggregateDataService,\n        private entityController: EntityController,\n        private deviceController: DeviceController\n    ) { }\n\n    ngOnInit(): void {\n        this.orgID = this.storageService.getStorage('currentOrgID');\n        this.applicationKeyID = this.storageService.getStorage('applicationKeyID');\n\n        if (this.applicationKeyID == ApplicationKeyID.ENERGY_KEY_ID) {\n            this.label = \"Energy\";\n            this.icon = \"bolt\";\n            this.paramKey = \"engEnergyUsed\";\n            this.outerStrokeColor = \"#fa9200\";\n            this.outerStrokeGradientStopColor = \"#fdd130\";\n            this.innerStrokeColor = \"#fbe2a6\";\n        } else if (this.applicationKeyID == ApplicationKeyID.WATER_KEY_ID) {\n            this.label = \"Water\";\n            this.icon = \"water_drop\";\n            this.paramKey = \"gwFlowTotalizer\";\n            this.outerStrokeColor = \"#4882c2\";\n            this.outerStrokeGradientStopColor = \"#53a9ff\";\n            this.innerStrokeColor = \"#e7e8ea\";\n        }\n\n        this.getTotalConsumption(DateTimeIntervalEnum.CURRENT_DAY)\n            .then(app => {\n                this.todayConsumption = app;\n            })\n\n        this.getTotalConsumption(DateTimeIntervalEnum.CURRENT_MONTH)\n            .then(app => {\n                this.currentMonthConsumption = app;\n                const totalConsumptionValue = this.currentMonthConsumption?.[0]?.['data']?.[0]?.['value'];\n\n                this.totalConsumptionCircleData = {\n                    percent: this.tscCommonService.formatLargeNumber(totalConsumptionValue, 'false', 1),\n                    maxPercent: 999999999,\n                    units: this.currentMonthConsumption?.[0]?.unit,\n                    showUnits: true,\n                    radius: 75,\n                    space: 4,\n                    outerStrokeGradient: true,\n                    outerStrokeWidth: 10,\n                    outerStrokeColor: this.outerStrokeColor,\n                    outerStrokeGradientStopColor: this.outerStrokeGradientStopColor,\n                    innerStrokeColor: this.innerStrokeColor,\n                    showBackground: false,\n                    innerStrokeWidth: 5,\n                    showSubtitle: false,\n                    subtitleFormat: false,\n                    startFromZero: false,\n                    animationDuration: 500,\n                    backgroundColor: '#ffffff',\n                }\n            })\n\n        this.getTotalConsumption(DateTimeIntervalEnum.CURRENT_YEAR)\n            .then(app => {\n                this.currentYearConsumption = app;\n            })\n\n        this.getTotalEntitiesConsumption();\n        this.getEntityLevelConsumption();\n        this.getDeviceInfo();\n    }\n\n    async getTotalConsumption(selectedRange) {\n        try {\n            const requestData = new AggregateDataRequest();\n\n            if (selectedRange == DateTimeIntervalEnum.CURRENT_DAY) {\n                requestData.startTime = this.dateService.getStartDateTime(DateTimeIntervalEnum.CURRENT_DAY);\n                requestData.interval = 'day_1';\n            } else if (selectedRange == DateTimeIntervalEnum.CURRENT_MONTH) {\n                requestData.startTime = this.dateService.getStartDateTime(DateTimeIntervalEnum.CURRENT_MONTH);\n                requestData.interval = 'month_1';\n            } else if (selectedRange == DateTimeIntervalEnum.CURRENT_YEAR) {\n                requestData.startTime = this.dateService.getStartDateTime(DateTimeIntervalEnum.CURRENT_YEAR);\n                requestData.interval = 'year_1';\n            }\n\n            requestData.endTime = this.dateService.getEndDateTime(DateTimeIntervalEnum.CURRENT_TIME);\n            requestData.params = [\n                {\n                    name: this.paramKey,\n                    dsAgg: \"sum\",\n                    agg: \"sum\",\n                    source_or_load: \"source\",\n                    sourceLoadType: \"all\"\n                }\n            ];\n            requestData.nullifyParams();\n            requestData.groupAll = true;\n\n            const result = await this.aggregateDataService.getAggregateData(this.orgID, requestData);\n            return result;\n        } catch (error) {\n            console.error(`Error in getTotalConsumption for (${selectedRange})`, error);\n        }\n    }\n\n    async getTotalEntitiesConsumption() {\n        try {\n            let requestData = new AggregateDataRequest();\n\n            requestData.startTime = this.dateService.getStartDateTime(DateTimeIntervalEnum.CURRENT_MONTH);\n            requestData.endTime = this.dateService.getEndDateTime(DateTimeIntervalEnum.CURRENT_TIME);\n            requestData.interval = \"month_1\";\n            requestData.params = [\n                {\n                    name: this.paramKey,\n                    dsAgg: \"sum\",\n                    agg: \"sum\",\n                    source_or_load: \"load\",\n                    sourceLoadType: \"all\"\n                }\n            ];\n            requestData.nullifyParams();\n            requestData.groupAll = true;\n\n            const totalEntitiesConsumData = await this.aggregateDataService.getAggregateData(this.orgID, requestData);\n            const consumptionBreakupValue = totalEntitiesConsumData?.[0]?.['data']?.[0]?.['value'];\n\n            this.consumptionBreakupCircleData = {\n                percent: this.tscCommonService.formatLargeNumber(consumptionBreakupValue, 'false', 1),\n                maxPercent: 999999999,\n                units: totalEntitiesConsumData?.[0]?.unit,\n                showUnits: true,\n                radius: 75,\n                space: 4,\n                outerStrokeGradient: true,\n                outerStrokeWidth: 10,\n                outerStrokeColor: this.outerStrokeColor,\n                outerStrokeGradientStopColor: this.outerStrokeGradientStopColor,\n                innerStrokeColor: this.innerStrokeColor,\n                showBackground: false,\n                innerStrokeWidth: 5,\n                showSubtitle: false,\n                subtitleFormat: false,\n                startFromZero: false,\n                animationDuration: 500,\n                backgroundColor: '#ffffff',\n            }\n        } catch (error) {\n            console.error(`Error in getTotalEntitiesConsumption()`, error);\n        }\n    }\n\n    getEntityLevelConsumption() {\n        let requestData = new AggregateDataRequest();\n\n        requestData.startTime = this.dateService.getStartDateTime(DateTimeIntervalEnum.CURRENT_MONTH);\n        requestData.endTime = this.dateService.getEndDateTime(DateTimeIntervalEnum.CURRENT_TIME);\n        requestData.interval = \"month_1\";\n        requestData.params = [\n            {\n                name: this.paramKey,\n                dsAgg: \"sum\",\n                agg: \"sum\",\n                source_or_load: \"load\",\n                sourceLoadType: \"all\"\n            }\n        ];\n        requestData.nullifyParams();\n        requestData.groupAll = false;\n\n        this.entityController.getEntityLevelConsumption(this.orgID, requestData)\n            .subscribe((entityConsumRes: EntityLevelConsumption[]) => {\n                this.entityConsumption = entityConsumRes;\n            },\n                error => {\n                    console.log('error in getEntityLevelConsumption() -', error);\n                });\n    }\n\n    highestConsumptionEntity() {\n        if (this.entityConsumption?.length == 0) {\n            return null;\n        }\n        return this.entityConsumption?.reduce((maxEntity, currentEntity) => {\n            return currentEntity.value > maxEntity.value ? currentEntity : maxEntity;\n        }, this.entityConsumption?.[0]);\n    }\n\n    calculateProgress(entity) {\n        const highestConsumption = this.highestConsumptionEntity();\n        if (!highestConsumption) {\n            return 0;\n        }\n        const progress = (entity.value / highestConsumption.value) * 100;\n        return progress;\n    }\n\n    getDeviceInfo() {\n        this.deviceController.getDeviceInfo(this.orgID)\n            .subscribe((deviceRes: DeviceInfo) => {\n                this.deviceInfoM = deviceRes;\n            },\n                error => {\n                    console.log('error in getDeviceInfo() -', error);\n                });\n    }\n\n}","<div class=\"card main-card cardOverwrite h100\">\n    <div class=\"headerContainer\">\n        <div class=\"headerLeftContainer\">\n            <div class=\"pageTitle\">Home</div>\n        </div>\n    </div>\n\n    <div class=\"card-body pt-0\">\n        <div class=\"row\">\n            <div class=\"col-sm-6\">\n                <mat-card class=\"cardOverwrite cardBackgroundColor cardHeight\">\n                    <div class=\"row\">\n                        <div class=\"col-sm-12\">\n                            <span class=\"cardTitle\">\n                                Total {{ label }} Consumption\n                            </span>\n                        </div>\n                    </div>\n                    <div class=\"row\">\n                        <div class=\"d-flex align-items-center\">\n                            <div class=\"col-sm-6\">\n                                <span class=\"centerAlign\">\n                                    <circle-progress [options]=\"totalConsumptionCircleData\" [renderOnClick]=\"false\"\n                                        class=\"copy\"></circle-progress>\n                                </span>\n                                <span class=\"centerAlign\">\n                                    This Month\n                                </span>\n                            </div>\n                            <div class=\"col-sm-6 ms-4\">\n                                <div class=\"row\">\n                                    <ng-container *ngTemplateOutlet=\"totalConsumption; context: {\n                                        label: 'Today',\n                                        value: todayConsumption?.[0]?.['data']?.[0]?.['value'],\n                                        unit: todayConsumption?.[0]?.['unit'],\n                                        matCardClass: 'today'\n                                    }\"></ng-container>\n                                </div>\n                                <div class=\"row mt-4\">\n                                    <ng-container *ngTemplateOutlet=\"totalConsumption; context: {\n                                        label: 'This Month',\n                                        value: currentMonthConsumption?.[0]?.['data']?.[0]?.['value'],\n                                        unit: currentMonthConsumption?.[0]?.['unit'],\n                                        matCardClass: 'month'\n                                    }\"></ng-container>\n                                </div>\n                                <div class=\"row mt-4\">\n                                    <ng-container *ngTemplateOutlet=\"totalConsumption; context: {\n                                        label: 'This Year',\n                                        value: currentYearConsumption?.[0]?.['data']?.[0]?.['value'],\n                                        unit: currentYearConsumption?.[0]?.['unit'],\n                                        matCardClass: 'year'\n                                    }\"></ng-container>\n                                </div>\n                            </div>\n                        </div>\n                    </div>\n                </mat-card>\n            </div>\n            <div class=\"col-sm-6\">\n                <mat-card class=\"cardOverwrite cardBackgroundColor cardHeight\">\n                    <div class=\"row\">\n                        <div class=\"col-sm-12\">\n                            <span class=\"cardTitle\">\n                                {{ label }} Consumption Breakup\n                            </span>\n                        </div>\n                    </div>\n                    <div class=\"row\">\n                        <div class=\"d-flex align-items-center\">\n                            <div class=\"col-sm-6\">\n                                <span class=\"centerAlign\">\n                                    <circle-progress [options]=\"consumptionBreakupCircleData\" [renderOnClick]=\"false\"\n                                        class=\"copy\"></circle-progress>\n                                </span>\n                                <span class=\"centerAlign\">\n                                    This Month\n                                </span>\n                            </div>\n                            <div class=\"col-sm-6\">\n                                <div class=\"row\" *ngIf=\"entityConsumption?.[0]?.id\">\n                                    <ng-container *ngTemplateOutlet=\"entityProgress; context: {\n                                        name: entityConsumption[0].name,\n                                        value: entityConsumption[0].value,\n                                        unit: entityConsumption[0].unit,\n                                        entityObj: entityConsumption[0],\n                                        outerProgressBarClass: 'progress1BGColor',\n                                        innerProgressBarClass: 'progress1Color'\n                                    }\"></ng-container>\n                                </div>\n                                <div class=\"row mt-4\" *ngIf=\"entityConsumption?.[1]\">\n                                    <ng-container *ngTemplateOutlet=\"entityProgress; context: {\n                                        name: entityConsumption[1].name,\n                                        value: entityConsumption[1].value,\n                                        unit: entityConsumption[1].unit,\n                                        entityObj: entityConsumption[1],\n                                        outerProgressBarClass: 'progress2BGColor',\n                                        innerProgressBarClass: 'progress2Color'\n                                    }\"></ng-container>\n                                </div>\n                                <div class=\"row mt-4\" *ngIf=\"entityConsumption?.[2]\">\n                                    <ng-container *ngTemplateOutlet=\"entityProgress; context: {\n                                        name: entityConsumption[2].name,\n                                        value: entityConsumption[2].value,\n                                        unit: entityConsumption[2].unit,\n                                        entityObj: entityConsumption[2],\n                                        outerProgressBarClass: 'progress3BGColor',\n                                        innerProgressBarClass: 'progress3Color'\n                                    }\"></ng-container>\n                                </div>\n                                <div class=\"row mt-4\" *ngIf=\"entityConsumption?.[3]\">\n                                    <ng-container *ngTemplateOutlet=\"entityProgress; context: {\n                                        name: entityConsumption[3].name,\n                                        value: entityConsumption[3].value,\n                                        unit: entityConsumption[3].unit,\n                                        entityObj: entityConsumption[3],\n                                        outerProgressBarClass: 'progress4BGColor',\n                                        innerProgressBarClass: 'progress4Color'\n                                    }\"></ng-container>\n                                </div>\n                            </div>\n                        </div>\n                    </div>\n                </mat-card>\n            </div>\n        </div>\n\n        <div class=\"row mt-4\">\n            <div class=\"col-sm-3\">\n                <mat-card class=\"card main-card cardOverwrite card-info\">\n                    <ng-container *ngTemplateOutlet=\"deviceStatus; context: {\n                        label: 'Total devices',\n                        count: deviceInfoM.total\n                    }\"></ng-container>\n                </mat-card>\n            </div>\n            <div class=\"col-sm-3\">\n                <mat-card class=\"card main-card cardOverwrite card-success\">\n                    <ng-container *ngTemplateOutlet=\"deviceStatus; context: {\n                        label: 'Online devices',\n                        count: deviceInfoM.online\n                    }\"></ng-container>\n                </mat-card>\n            </div>\n            <div class=\"col-sm-3\">\n                <mat-card class=\"card main-card cardOverwrite card-warning\">\n                    <ng-container *ngTemplateOutlet=\"deviceStatus; context: {\n                        label: 'Delayed devices',\n                        count: deviceInfoM.delay\n                    }\"></ng-container>\n                </mat-card>\n            </div>\n            <div class=\"col-sm-3\">\n                <mat-card class=\"card main-card cardOverwrite card-danger\">\n                    <ng-container *ngTemplateOutlet=\"deviceStatus; context: {\n                        label: 'Offline devices',\n                        count: deviceInfoM.offline\n                    }\"></ng-container>\n                </mat-card>\n            </div>\n        </div>\n    </div>\n</div>\n\n<ng-template #totalConsumption let-label=\"label\" let-value=\"value\" let-unit=\"unit\" let-matCardClass=\"matCardClass\"\n    let-outerProgressBarClass=\"outerProgressBarClass\" let-innerProgressBarClass=\"innerProgressBarClass\">\n    <div class=\"col-sm-12\">\n        <div class=\"d-flex align-items-center\">\n            <mat-card class=\"card main-card square d-flex justify-content-center me-2\" [class]=\"matCardClass\">\n                <span class=\"material-symbols-outlined\">\n                    {{ icon }}\n                </span>\n            </mat-card>\n            <div class=\"row\">\n                <span>{{ label }}</span><br />\n                <span class=\"text-primary fw-bold\">{{ value ? value : commonConstant.HYPHEN }} <span\n                        class=\"unitSize\">{{ value ? unit : '' }}</span></span>\n            </div>\n        </div>\n    </div>\n</ng-template>\n\n<ng-template #entityProgress let-name=\"name\" let-value=\"value\" let-unit=\"unit\" let-entityObj=\"entityObj\"\n    let-outerProgressBarClass=\"outerProgressBarClass\" let-innerProgressBarClass=\"innerProgressBarClass\">\n    <div class=\"col-sm-12\">\n        <span>\n            {{ name }}\n        </span>\n        <span class=\"float-end text-primary fw-bold\"> {{ value ? value : commonConstant.HYPHEN }}\n            <span class=\"unitSize\"> {{ value ? unit : '' }} </span>\n        </span>\n        <div class=\"progress progressBarRadius\" [class]=\"outerProgressBarClass\">\n            <div class=\"progress-bar progressBarRadius\" [class]=\"innerProgressBarClass\" role=\"progressbar\"\n                [style.width.%]=\"calculateProgress(entityObj)\"></div>\n        </div>\n    </div>\n</ng-template>\n\n<ng-template #deviceStatus let-label=\"label\" let-count=\"count\">\n    <div class=\"row\">\n        <div class=\"col-sm-12\">\n            <span class=\"material-symbols-outlined\">\n                devices\n            </span>\n        </div>\n    </div>\n    <div class=\"row\">\n        <div class=\"col-sm-12 fs-1 fw-bold centerAlign\">\n            {{ count != undefined && count != null ? count : commonConstant.HYPHEN }}\n        </div>\n    </div>\n    <div class=\"row mt-1\">\n        <div class=\"col-sm-12 fs-5 centerAlign\">\n            {{ label }}\n        </div>\n    </div>\n</ng-template>","import { NgModule } from '@angular/core';\nimport { RouterModule, Routes } from '@angular/router';\n\nimport { HomeComponent } from './home.component';\n\nconst routes: Routes = [\n    {\n        path: '',\n        component: HomeComponent\n    }\n];\n\n@NgModule({\n    imports: [RouterModule.forChild(routes)],\n    exports: [RouterModule]\n})\nexport class HomeRoutingModule { }\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\n\nimport { HomeRoutingModule } from './home-routing.module';\nimport { HomeComponent } from './home.component';\n\n\nimport { MatCardModule } from '@angular/material/card';\nimport { MatTooltipModule } from '@angular/material/tooltip';\nimport { PerfectScrollbarModule } from 'ngx-perfect-scrollbar';\n\nimport { NgCircleProgressModule } from 'ng-circle-progress';\n\n@NgModule({\n    declarations: [\n        HomeComponent\n    ],\n    imports: [\n        CommonModule,\n        HomeRoutingModule,\n        MatCardModule,\n        MatTooltipModule,\n        PerfectScrollbarModule,\n        NgCircleProgressModule.forRoot(),\n    ]\n})\nexport class HomeModule { }\n","import { Inject, Injectable } from '@angular/core';\nimport { HttpClient } from '@angular/common/http';\n\nimport { Observable } from 'rxjs';\n\nimport { ShiftM } from '../model/shift.model';\n\n@Injectable({\n    providedIn: 'root'\n})\n\nexport class ShiftController {\n\n    constructor(\n        private http: HttpClient,\n        @Inject('environment') private environment: any\n    ) { }\n\n    getShift(orgID): Observable<ShiftM[]> {\n        return this.http.get<ShiftM[]>(`${this.environment.TSC_COMMON_API_URL}organizations/${orgID}/shifts`);\n    }\n}\n","import { Injectable } from '@angular/core';\n\nimport { Shift, ShiftM } from '../model/shift.model';\n\nimport { ShiftController } from '../controller/shift.controller';\n\n@Injectable({\n    providedIn: 'root'\n})\n\nexport class ShiftService {\n\n    constructor(\n        private shiftController: ShiftController\n    ) { }\n\n    async getShift(orgID): Promise<ShiftM[]> {\n        let shiftM: ShiftM[];\n        try {\n            shiftM = await this.shiftController.getShift(orgID).toPromise();\n\n            if (shiftM) {\n                return shiftM;\n            } else {\n                return [new Shift()];\n            }\n        } catch (error) {\n            console.error('Error -', error);\n            return [new Shift()];\n        }\n    }\n}\n","import { Component, EventEmitter, Input, OnInit, Output, SimpleChanges } from '@angular/core';\n\nimport { FormControl, Validators } from '@angular/forms';\n\nimport { Shift, ShiftM } from '../../../model/shift.model';\n\nimport { ShiftService } from '../../../service/shift.service';\n\n// tsc-library\nimport { StorageService } from '@library/storage-service';\nimport { COMMON_CONSTANT, MaterialFormFieldAppearance, MatSelectSearchService } from '@library/tsc-common';\n// /tsc-library/\n\n@Component({\n    selector: 'lib-shift',\n    templateUrl: './shift.component.html',\n    styles: [\n    ]\n})\nexport class ShiftComponent implements OnInit {\n\n    @Output()\n    emitFilter = new EventEmitter();\n\n    COMMON_CONSTANT = COMMON_CONSTANT;\n    MaterialFormFieldAppearance = MaterialFormFieldAppearance;\n\n    orgID: any;\n\n    shiftM = [new Shift()];\n\n    allShiftID: any[] = [];\n    totalShiftCount: number = 0;\n\n    multiSelectedShiftFC: FormControl = new FormControl([], [Validators.required]);\n\n    shiftSearchUtil: MatSelectSearchService = new MatSelectSearchService(['name']);\n\n    constructor(\n        private storageService: StorageService,\n        private shiftService: ShiftService\n    ) { }\n\n    ngOnInit(): void {\n        this.orgID = this.storageService.getStorage('currentOrgID');\n\n        this.getShift();\n    }\n\n    async getShift() {\n        this.shiftM = <ShiftM[]>await this.shiftService.getShift(this.orgID);\n\n        this.shiftSearchUtil.entityArr = this.shiftM;\n        this.shiftSearchUtil.createSubscription();\n\n        this.totalShiftCount = this.shiftM.length;\n        this.shiftM.forEach(shift => this.allShiftID.push(shift['id']));\n        this.emitFilter.emit();\n    }\n\n    selectAllShifts() {\n        if (!this.multiSelectedShiftFC.value.includes(-1)) {\n            this.multiSelectedShiftFC.reset([]);\n            return;\n        }\n        this.multiSelectedShiftFC.setValue([-1, ...this.allShiftID]);\n        this.emitFilter.emit();\n    }\n\n    selectedShift() {\n        const selected = this.multiSelectedShiftFC.value;\n\n        if (selected.includes(-1)) {\n            selected.shift();\n            this.multiSelectedShiftFC.patchValue(selected);\n        } else if (this.multiSelectedShiftFC.value.length == this.totalShiftCount) {\n            this.allShiftID.splice(0, 0, -1);\n            this.multiSelectedShiftFC.patchValue(this.allShiftID);\n        } else {\n            const filteredSelected = selected.filter(s => s != -1);\n            this.multiSelectedShiftFC.patchValue(filteredSelected);\n        }\n        this.emitFilter.emit();\n    }\n\n}\n","<div class=\"row\">\n    <mat-form-field class=\"mat-field-width-100\" [appearance]=\"MaterialFormFieldAppearance.FORM_FIELD_APPEARANCE\">\n        <mat-label>Select shift</mat-label>\n        <ng-container *ngIf=\"shiftM && shiftM.length > 0 && shiftM[0]['id']; else noDataOption\">\n            <mat-select [formControl]=\"multiSelectedShiftFC\" multiple required>\n                <mat-option>\n                    <ngx-mat-select-search [formControl]=\"shiftSearchUtil.filterFC\" placeholderLabel=\"Search by name\"\n                        noEntriesFoundLabel=\"No matching name found.\">\n                    </ngx-mat-select-search>\n                </mat-option>\n                <mat-option [value]=\"-1\" (click)=\"selectAllShifts()\">\n                    Select all\n                </mat-option>\n                <mat-option *ngFor=\"let shift of shiftSearchUtil.filteredEntities | async\" [value]=\"shift.id\"\n                    (click)=\"selectedShift()\">\n                    {{ shift.name }}\n                </mat-option>\n            </mat-select>\n        </ng-container>\n        <ng-template #noDataOption>\n            <mat-select [formControl]=\"multiSelectedShiftFC\">\n                <mat-option disabled>\n                    {{ COMMON_CONSTANT.NO_DATA_FOUND }}\n                </mat-option>\n            </mat-select>\n        </ng-template>\n        <mat-error *ngIf=\"multiSelectedShiftFC.hasError('required')\">\n            Select shift\n        </mat-error>\n    </mat-form-field>\n</div>","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\n\nimport { ShiftComponent } from './shift.component';\n\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\n\nimport { MatInputModule } from '@angular/material/input';\nimport { MatSelectModule } from '@angular/material/select';\nimport { MatFormFieldModule } from '@angular/material/form-field';\nimport { NgxMatSelectSearchModule } from 'ngx-mat-select-search';\n\n@NgModule({\n    declarations: [\n        ShiftComponent\n    ],\n    imports: [\n        CommonModule,\n        FormsModule,\n        ReactiveFormsModule,\n        MatInputModule,\n        MatSelectModule,\n        MatFormFieldModule,\n        NgxMatSelectSearchModule\n    ],\n    exports: [\n        ShiftComponent\n    ]\n})\n\nexport class ShiftModule { }\n","import { Component, OnInit } from '@angular/core';\n\nimport { AggregateDataRequest } from '../../../model/aggregate-data.model';\n\nimport { AggregateDataService } from '../../../service/aggregate-data.service';\n\nimport { StorageService } from '@library/storage-service';\nimport { COMMON_CONSTANT, FREQUENCY_CONSTANT, MaterialFormFieldAppearance, TSCCommonService } from '@library/tsc-common';\nimport { DateTypeEnum, FrequencyEnum } from '@library/date';\nimport { ApplicationKeyID } from '@library/application-service';\n\n@Component({\n    selector: 'lib-balance',\n    templateUrl: './balance.component.html',\n    styles: [\n    ]\n})\nexport class BalanceComponent implements OnInit {\n\n    commonConstant = COMMON_CONSTANT;\n    frequencyConstant = FREQUENCY_CONSTANT;\n    frequencyEnum = FrequencyEnum;\n\n    formFieldAppearance: MaterialFormFieldAppearance;\n    dateType: any;\n    orgID: any;\n    applicationKeyID: any;\n    timezone: any;\n    label: string;\n    paramMetric: string;\n    frequency: any[] = [];\n    defaultFrequency: string;\n    startDate: any;\n    endDate: any;\n    selectedFrequency: any;\n    interval: any;\n    showLoader: boolean = true;\n\n    constructor(\n        private storageService: StorageService,\n        private aggregateDataService: AggregateDataService,\n        public tscCommonService: TSCCommonService\n    ) { }\n\n    ngOnInit(): void {\n        this.orgID = this.storageService.getStorage('currentOrgID');\n        this.applicationKeyID = this.storageService.getStorage('applicationKeyID');\n        this.timezone = this.storageService.getStorage('timezone');\n\n        if (this.applicationKeyID == ApplicationKeyID.ENERGY_KEY_ID) {\n            this.label = \"Energy\";\n            this.paramMetric = \"engEnergyUsed\";\n        } else if (this.applicationKeyID == ApplicationKeyID.WATER_KEY_ID) {\n            this.label = \"Water\";\n            this.paramMetric = \"gwFlowTotalizer\";\n        }\n\n        this.formFieldAppearance = MaterialFormFieldAppearance.FORM_FIELD_APPEARANCE_STANDARD;\n        this.frequency = this.frequencyConstant.filter(frequency => frequency.keyID != 'CUSTOM');\n        this.defaultFrequency = this.frequencyEnum.MONTHLY;\n        this.dateType = DateTypeEnum.EXCLUSIVE;\n    }\n\n    dateFilterEmitted(data: any) {\n        this.startDate = data.startDate;\n        this.endDate = data.endDate;\n        let selectedFrequency = data.frequency;\n\n        if (selectedFrequency == this.frequencyEnum.DAILY) {\n            this.interval = \"hour_1\";\n        } else if (selectedFrequency == this.frequencyEnum.MONTHLY) {\n            this.interval = \"day_1\";\n        } else if (selectedFrequency == this.frequencyEnum.YEARLY) {\n            this.interval = \"month_1\";\n        }\n\n    }\n\n}\n","<div class=\"card main-card cardOverwrite h100\">\n    <div class=\"headerContainer\">\n        <div class=\"headerLeftContainer\">\n            <div class=\"pageTitle\"> {{ label }} Balance</div>\n        </div>\n    </div>\n</div>","import { NgModule } from '@angular/core';\nimport { RouterModule, Routes } from '@angular/router';\n\nimport { BalanceComponent } from './balance.component';\n\nconst routes: Routes = [\n    {\n        path: '',\n        component: BalanceComponent\n    }\n];\n\n@NgModule({\n    imports: [RouterModule.forChild(routes)],\n    exports: [RouterModule]\n})\nexport class BalanceRoutingModule { }\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\n\nimport { BalanceRoutingModule } from './balance-routing.module';\nimport { BalanceComponent } from './balance.component';\n\n// tsc-library\nimport { DateFilterTwoModule } from '@library/date';\n// /tsc-library/\n\n@NgModule({\n    declarations: [\n        BalanceComponent\n    ],\n    imports: [\n        CommonModule,\n        BalanceRoutingModule,\n        DateFilterTwoModule,\n    ]\n})\nexport class BalanceModule { }\n","import { Component, OnInit } from '@angular/core';\n\nimport { AggregateDataRequest } from '../../../model/aggregate-data.model';\n\nimport { AggregateDataService } from '../../../service/aggregate-data.service';\n\nimport { StorageService } from '@library/storage-service';\nimport { COMMON_CONSTANT, FREQUENCY_CONSTANT, MaterialFormFieldAppearance, TSCCommonService } from '@library/tsc-common';\nimport { DateTypeEnum, FrequencyEnum } from '@library/date';\nimport { ApplicationKeyID } from '@library/application-service';\n\n@Component({\n    selector: 'app-consumption',\n    templateUrl: './consumption.component.html',\n    styles: [\n    ]\n})\nexport class ConsumptionComponent implements OnInit {\n\n    commonConstant = COMMON_CONSTANT;\n    frequencyConstant = FREQUENCY_CONSTANT;\n    frequencyEnum = FrequencyEnum;\n\n    formFieldAppearance: MaterialFormFieldAppearance;\n    dateType: any;\n    orgID: any;\n    applicationKeyID: any;\n    timezone: any;\n    paramMetric: string;\n    frequency: any[] = [];\n    defaultFrequency: string;\n    startDate: any;\n    endDate: any;\n    selectedFrequency: any;\n    interval: any;\n\n    constructor(\n        private storageService: StorageService,\n        private aggregateDataService: AggregateDataService\n    ) {}\n\n    ngOnInit(): void {\n        this.orgID = this.storageService.getStorage('currentOrgID');\n        this.applicationKeyID = this.storageService.getStorage('applicationKeyID');\n        this.timezone = this.storageService.getStorage('timezone');\n\n        if (this.applicationKeyID == ApplicationKeyID.WATER_KEY_ID) {\n            this.paramMetric = \"gwFlowTotalizer\";\n        }\n\n        this.formFieldAppearance = MaterialFormFieldAppearance.FORM_FIELD_APPEARANCE_STANDARD;\n        this.frequency = this.frequencyConstant.filter(frequency => frequency.keyID != 'CUSTOM');\n        this.defaultFrequency = this.frequencyEnum.MONTHLY;\n        this.dateType = DateTypeEnum.EXCLUSIVE;\n    }\n\n    dateFilterEmitted(data: any) {\n        this.startDate = data.startDate;\n        this.endDate = data.endDate;\n        let selectedFrequency = data.frequency;\n\n        if (selectedFrequency == this.frequencyEnum.DAILY) {\n            this.interval = \"hour_1\";\n        } else if (selectedFrequency == this.frequencyEnum.MONTHLY) {\n            this.interval = \"day_1\";\n        } else if (selectedFrequency == this.frequencyEnum.YEARLY) {\n            this.interval = \"month_1\";\n        }\n\n        this.getConsumptionData();\n\n    }\n\n    async getConsumptionData() {\n        try {\n            const requestData = this.createDataRequest();\n\n            const consumptionRes = await this.aggregateDataService.getAggregateData(this.orgID, requestData);\n        } catch (error) {\n            console.error(`Error in getConsumptionData()`, error);\n        }\n    }\n\n    createDataRequest() {\n\n        const requestData = new AggregateDataRequest();\n\n        requestData.startTime = this.startDate;\n        requestData.endTime = this.endDate;\n        requestData.interval = this.interval;\n        requestData.params = [\n            {\n                name: this.paramMetric,\n                dsAgg: \"sum\",\n                agg: \"sum\",\n                source_or_load: \"source\",\n                sourceLoadType: \"all\"\n            }\n        ];\n        requestData.nullifyParams();\n        requestData.groupAll = true;\n\n        return requestData;\n    }\n\n}\n","<div class=\"card main-card cardOverwrite h100\">\n    <div class=\"headerContainer\">\n        <div class=\"headerLeftContainer\">\n            <div class=\"pageTitle\">Consumption Dashboard</div>\n        </div>\n    </div>\n\n    <div class=\"card-body pt-0\">\n        <div class=\"row\">\n            <div class=\"col-sm-12\">\n                <lib-date-filter-two [materialFormFieldAppearanceInp]=\"formFieldAppearance\" [frequencyInp]=\"frequency\"\n                    [defaultFrequencyInp]=\"defaultFrequency\" [dateTypeInp]=\"dateType\" [showDefaultDurationInp]=\"true\"\n                    [timezoneInp]=\"timezone\" (dateFilterEmitter)=\"dateFilterEmitted($event)\"></lib-date-filter-two>\n            </div>\n        </div>\n    </div>\n</div>","import { NgModule } from '@angular/core';\nimport { RouterModule, Routes } from '@angular/router';\n\nimport { ConsumptionComponent } from './consumption.component';\n\nconst routes: Routes = [\n    {\n        path: '',\n        component: ConsumptionComponent\n    }\n];\n\n@NgModule({\n    imports: [RouterModule.forChild(routes)],\n    exports: [RouterModule]\n})\nexport class ConsumptionRoutingModule { }\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\n\nimport { ConsumptionRoutingModule } from './consumption-routing.module';\nimport { ConsumptionComponent } from './consumption.component';\n\nimport { MatCardModule } from '@angular/material/card';\n\n// tsc-library\nimport { SkeletonModule } from '@library/tsc-common';\nimport { DateFilterTwoModule } from '@library/date';\n// /tsc-library/\n\n\n@NgModule({\n    declarations: [\n        ConsumptionComponent\n    ],\n    imports: [\n        CommonModule,\n        ConsumptionRoutingModule,\n        DateFilterTwoModule,\n        SkeletonModule,\n        MatCardModule\n    ]\n})\nexport class ConsumptionModule { }\n","import { Component, OnInit } from '@angular/core';\n\nimport { AggregateDataRequest } from '../../../model/aggregate-data.model';\n\nimport { AggregateDataService } from '../../../service/aggregate-data.service';\n\n// tsc-library\nimport { StorageService } from '@library/storage-service';\nimport { COMMON_CONSTANT, FREQUENCY_CONSTANT, MaterialFormFieldAppearance, TSCCommonService } from '@library/tsc-common';\nimport { DateTypeEnum, FrequencyEnum } from '@library/date';\nimport { ApplicationKeyID } from '@library/application-service';\nimport { ChartViewStateEnum, DoughnutChart } from '@library/echart';\n// /tsc-library/\n\n@Component({\n    selector: 'lib-consumption-breakup',\n    templateUrl: './consumption-breakup.component.html',\n    styles: [\n    ]\n})\nexport class ConsumptionBreakupDashboardComponent implements OnInit {\n\n    commonConstant = COMMON_CONSTANT;\n    frequencyConstant = FREQUENCY_CONSTANT;\n    frequencyEnum = FrequencyEnum;\n\n    formFieldAppearance: MaterialFormFieldAppearance;\n    dateType: any;\n    orgID: any;\n    applicationKeyID: any;\n    timezone: any;\n    paramMetric: string;\n    frequency: any[] = [];\n    defaultFrequency: string;\n    startDate: any;\n    endDate: any;\n    selectedFrequency: any;\n    interval: any;\n    orgSourceRes: any;\n    orgConsumedRes: any;\n    showLoader: boolean = true;\n\n    viewStateFlagForSource: string = ChartViewStateEnum.LOADING;\n    viewStateFlagForLoad: string = ChartViewStateEnum.LOADING;\n    chartDataForSource = new DoughnutChart();\n    chartDataForLoad = new DoughnutChart();\n\n    constructor(\n        private storageService: StorageService,\n        private aggregateDataService: AggregateDataService,\n        public tscCommonService: TSCCommonService\n    ) { }\n\n    ngOnInit(): void {\n        this.orgID = this.storageService.getStorage('currentOrgID');\n        this.applicationKeyID = this.storageService.getStorage('applicationKeyID');\n        this.timezone = this.storageService.getStorage('timezone');\n\n        if (this.applicationKeyID == ApplicationKeyID.ENERGY_KEY_ID) {\n            this.paramMetric = \"engEnergyUsed\";\n        } else if (this.applicationKeyID == ApplicationKeyID.WATER_KEY_ID) {\n            this.paramMetric = \"gwFlowTotalizer\";\n        }\n\n        this.formFieldAppearance = MaterialFormFieldAppearance.FORM_FIELD_APPEARANCE_STANDARD;\n        this.frequency = this.frequencyConstant.filter(frequency => frequency.keyID != 'CUSTOM');\n        this.defaultFrequency = this.frequencyEnum.MONTHLY;\n        this.dateType = DateTypeEnum.EXCLUSIVE;\n    }\n\n    dateFilterEmitted(data: any) {\n        this.startDate = data.startDate;\n        this.endDate = data.endDate;\n        let selectedFrequency = data.frequency;\n\n        if (selectedFrequency == this.frequencyEnum.DAILY) {\n            this.interval = \"hour_1\";\n        } else if (selectedFrequency == this.frequencyEnum.MONTHLY) {\n            this.interval = \"day_1\";\n        } else if (selectedFrequency == this.frequencyEnum.YEARLY) {\n            this.interval = \"month_1\";\n        }\n\n        this.getOrgLevelSourceConsum(\"source\").then(app => {\n            this.orgSourceRes = app;\n        })\n\n        this.getOrgLevelSourceConsum(\"load\").then(app => {\n            this.orgConsumedRes = app;\n        })\n\n        this.getEntiyLevelConsumption();\n    }\n\n    async getOrgLevelSourceConsum(category: string) {\n        try {\n            const requestData = this.createDataRequest(category, true);\n\n            const result = await this.aggregateDataService.getAggregateData(this.orgID, requestData);\n            return result;\n\n        } catch (error) {\n            console.error(`Error in getOrgLevelSourceConsum(${category})`, error);\n        } finally {\n            this.showLoader = false;\n        }\n    }\n\n    async getEntiyLevelConsumption() {\n        await this.getEntityLevelSourceConsum(\"source\");\n        await this.getEntityLevelSourceConsum(\"load\");\n    }\n\n    async getEntityLevelSourceConsum(category: string) {\n\n        const name = category == 'source' ? 'Sourced' : category == 'load' ? 'Consumed' : '';\n\n        const chartData = new DoughnutChart();\n\n        chartData.title = {\n            name: name,\n            color: 'rgba(0, 0, 0, 0.87)',\n        };\n\n        if (category == 'source') {\n            this.chartDataForSource = chartData;\n            this.viewStateFlagForSource = ChartViewStateEnum.LOADING;\n        } else {\n            this.chartDataForLoad = chartData;\n            this.viewStateFlagForLoad = ChartViewStateEnum.LOADING;\n        }\n\n        try {\n            const requestData = this.createDataRequest(category, false);\n            const result = await this.aggregateDataService.getAggregateData(this.orgID, requestData);\n\n            if (result?.[0]?.data.length > 0) {\n\n                chartData.data = {\n                    toolbox: {\n                        showDataView: true,\n                        showRestore: true,\n                        showDownloadImage: true,\n                    },\n                    metaData: result[0].data.map(item => ({\n                        name: item.sourceLoadType,\n                        value: item.data[0].value,\n                        unit: {\n                            code: item.unit,\n                        },\n                    })),\n                };\n\n                if (category == 'source') {\n                    this.chartDataForSource = chartData;\n                    this.viewStateFlagForSource = ChartViewStateEnum.HAS_DATA;\n                } else {\n                    this.chartDataForLoad = chartData;\n                    this.viewStateFlagForLoad = ChartViewStateEnum.HAS_DATA;\n                }\n\n            } else {\n                if (category == 'source') {\n                    this.viewStateFlagForSource = ChartViewStateEnum.NO_DATA;\n                } else {\n                    this.viewStateFlagForLoad = ChartViewStateEnum.NO_DATA;\n                }\n            }\n\n        } catch (error) {\n            if (category == 'source') {\n                this.viewStateFlagForSource = ChartViewStateEnum.NO_DATA;\n            } else {\n                this.viewStateFlagForLoad = ChartViewStateEnum.NO_DATA;\n            }\n\n            console.error(`Error in getEntityLevelSourceConsum(${category})`, error);\n        }\n    }\n\n    createDataRequest(category: string, groupAll: boolean) {\n\n        const requestData = new AggregateDataRequest();\n\n        requestData.startTime = this.startDate;\n        requestData.endTime = this.endDate;\n        requestData.interval = this.interval;\n        requestData.params = [\n            {\n                name: this.paramMetric,\n                dsAgg: \"sum\",\n                agg: \"sum\",\n                source_or_load: category,\n                sourceLoadType: \"all\"\n            }\n        ];\n        requestData.nullifyParams();\n        requestData.groupAll = groupAll;\n\n        return requestData;\n    }\n\n}\n","<div class=\"card main-card cardOverwrite h100\">\n    <div class=\"headerContainer\">\n        <div class=\"headerLeftContainer\">\n            <div class=\"pageTitle\">Consumption Breakup</div>\n        </div>\n    </div>\n\n    <div class=\"card-body pt-0\">\n        <div class=\"row\">\n            <div class=\"col-sm-12\">\n                <lib-date-filter-two [materialFormFieldAppearanceInp]=\"formFieldAppearance\" [frequencyInp]=\"frequency\" [defaultFrequencyInp]=\"defaultFrequency\"\n                    [dateTypeInp]=\"dateType\" [showDefaultDurationInp]=\"true\" [timezoneInp]=\"timezone\" (dateFilterEmitter)=\"dateFilterEmitted($event)\"></lib-date-filter-two>\n            </div>\n        </div>\n\n        <div class=\"row mt-3\">\n            <div class=\"col-sm-6\">\n                <mat-card class=\"cardOverwrite cardBackgroundColor\">\n                    <ng-container *ngTemplateOutlet=\"sourceConsumTemplate; context: {\n                        value: orgSourceRes?.[0]?.['data']?.[0]?.['value'],\n                        unit: orgSourceRes?.[0]?.['unit'],\n                        label: 'Sourced',\n                        loader: showLoader\n                        }\"></ng-container>\n                </mat-card>\n            </div>\n            <div class=\"col-sm-6\">\n                <mat-card class=\"cardOverwrite cardBackgroundColor\">\n                    <ng-container *ngTemplateOutlet=\"sourceConsumTemplate; context: {\n                        value: orgConsumedRes?.[0]?.['data']?.[0]?.['value'],\n                        unit: orgConsumedRes?.[0]?.['unit'],\n                        label: 'Consumed',\n                        loader: showLoader\n                        }\"></ng-container>\n                </mat-card>\n            </div>\n        </div>\n\n        <div class=\"row mt-3\">\n            <div class=\"col-sm-6\">\n                <mat-card class=\"cardOverwrite cardBackgroundColor\">\n                    <div class=\"row\">\n                        <div class=\"col-sm-12\">\n                            <lib-doughnut [viewStateInp]=\"viewStateFlagForSource\" [dataInp]=\"chartDataForSource\"></lib-doughnut>\n                        </div>\n                    </div>\n                </mat-card>\n            </div>\n            <div class=\"col-sm-6\">\n                <mat-card class=\"cardOverwrite cardBackgroundColor\">\n                    <div class=\"row\">\n                        <div class=\"col-sm-12\">\n                            <lib-doughnut [viewStateInp]=\"viewStateFlagForLoad\" [dataInp]=\"chartDataForLoad\"></lib-doughnut>\n                        </div>\n                    </div>\n                </mat-card>\n            </div>\n        </div>\n    </div>\n</div>\n\n<ng-template #sourceConsumTemplate let-label=\"label\" let-value=\"value\" let-unit=\"unit\" let-loader=\"loader\">\n    <ng-container *ngIf=\"loader; else dataTemplate\">\n        <lib-skeleton-loader [count]=\"1\" [appearance]=\"''\"\n            [theme]=\"{ 'border-radius': '16px', height: '40px', 'background-color': 'rgb(230 232 235)' }\"></lib-skeleton-loader>\n    </ng-container>\n\n    <ng-template #dataTemplate>\n        <div class=\"row\">\n            <div class=\"col-sm-12\">\n                <span class=\"fs-2 fw-bold text-primary\">{{ value ? tscCommonService.formatLargeNumber(value, 'false', 1)\n                    : commonConstant.HYPHEN\n                    }}</span>\n                <span class=\"text-secondary fw-bold\"> {{ value ? unit : '' }} </span>\n            </div>\n        </div>\n        <div class=\"row\">\n            <div class=\"col-sm-12 fs-4\">\n                {{ label }}\n            </div>\n        </div>\n    </ng-template>\n</ng-template>","import { NgModule } from '@angular/core';\nimport { RouterModule, Routes } from '@angular/router';\n\nimport { ConsumptionBreakupDashboardComponent } from './consumption-breakup.component';\n\nconst routes: Routes = [\n    {\n        path: '',\n        component: ConsumptionBreakupDashboardComponent\n    }\n];\n\n@NgModule({\n    imports: [RouterModule.forChild(routes)],\n    exports: [RouterModule]\n})\nexport class ConsumptionBreakupDashboardRoutingModule { }\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\n\nimport { ConsumptionBreakupDashboardRoutingModule } from './consumption-breakup-routing.module';\nimport { ConsumptionBreakupDashboardComponent } from './consumption-breakup.component';\n\nimport { MatCardModule } from '@angular/material/card';\n\n// tsc-library\nimport { SkeletonModule } from '@library/tsc-common';\nimport { DateFilterTwoModule } from '@library/date';\nimport { DoughnutModule } from '@library/echart';\n// /tsc-library/\n\n\n@NgModule({\n    declarations: [\n        ConsumptionBreakupDashboardComponent\n    ],\n    imports: [\n        CommonModule,\n        ConsumptionBreakupDashboardRoutingModule,\n        DateFilterTwoModule,\n        SkeletonModule,\n        DoughnutModule,\n        MatCardModule\n    ]\n})\nexport class ConsumptionBreakupDashboardModule { }\n","import { Inject, Injectable } from '@angular/core';\nimport { HttpClient } from '@angular/common/http';\n\nimport { Observable } from 'rxjs/internal/Observable';\n\nimport { OrgRecentDataM } from '../model/recent-data.model';\n\n@Injectable({\n    providedIn: 'root'\n})\nexport class RecentDataController {\n\n    constructor(\n        private http: HttpClient,\n        @Inject('environment') private environment: any\n    ) { }\n\n    getRecentDataWithParam(orgID, requestBody) {\n        return this.http.post(`${this.environment.TSC_COMMON_API_URL}organizations/${orgID}/data/recent`, requestBody);\n    }\n\n    getEntityLevelRecentData(orgID, requestBody) {\n        return this.http.post(`${this.environment.TSC_COMMON_API_URL}organizations/${orgID}/entities/data/recent`, requestBody);\n    }\n\n    getOrgRecentData(orgID, requestBody): Observable<OrgRecentDataM[]> {\n        // return this.http.post<OrgRecentDataM[]>(`${this.environment.TSC_COMMON_API_URL}organizations/${orgID}/data/recent`, requestBody);\n        return this.http.get<OrgRecentDataM[]>(`${this.environment.MOCK_SERVER}facility-dashboard`);\n    }\n\n}\n","import { Injectable } from '@angular/core';\n\nimport { RecentDataController } from '../controller/recent-data.controller';\nimport { OrgRecentData, OrgRecentDataM } from '../model/recent-data.model';\n\n@Injectable({\n    providedIn: 'root'\n})\n\nexport class RecentDataService {\n\n    constructor(\n        private recentDataController: RecentDataController\n    ) { }\n\n    async getRecentDataWithParam(orgID, requestBody) {\n        let recentDataWithParam;\n        try {\n            recentDataWithParam = await this.recentDataController.getRecentDataWithParam(orgID, requestBody).toPromise();\n\n            if (recentDataWithParam) {\n                return recentDataWithParam;\n            }\n        } catch (error) {\n            console.error('Error -', error);\n            throw error;\n        }\n    }\n\n    async getEntityLevelRecentData(orgID, requestBody) {\n        let entityLevelRes;\n        try {\n            entityLevelRes = await this.recentDataController.getEntityLevelRecentData(orgID, requestBody).toPromise();\n\n            if (entityLevelRes) {\n                return entityLevelRes;\n            }\n        } catch (error) {\n            console.error('Error -', error);\n        }\n    }\n\n    async getOrgRecentData(orgID, requestBody): Promise<OrgRecentDataM[]> {\n        let orgRes;\n        try {\n            orgRes = await this.recentDataController.getOrgRecentData(orgID, requestBody).toPromise();\n\n            if (orgRes) {\n                return orgRes;\n            } else {\n                return [new OrgRecentData()];\n            }\n        } catch (error) {\n            console.error('Error -', error);\n            throw error;\n        }\n    }\n\n}","import { Injectable } from '@angular/core';\n\nimport { MatDialog } from '@angular/material/dialog';\n\nimport { TrendComponent } from '../component/_shared/dialog/trend/trend.component';\n\n@Injectable({\n    providedIn: 'root'\n})\n\nexport class TrendService {\n\n    constructor(\n        private dialog: MatDialog,\n    ) { }\n\n    openDialog(trendData) {\n        let dialogRef;\n        dialogRef = this.dialog.open(TrendComponent, {\n            data: {\n                trendData: trendData\n            },\n            minWidth: '620px',\n            maxWidth: '620px'\n        });\n    }\n}\n","import { Component, ElementRef, OnInit, ViewChild } from '@angular/core';\nimport { FormControl, Validators } from '@angular/forms';\n\nimport { EntityTree, EntityTreeM, EntityType, EntityTypeM } from '../../../model/entity.model';\nimport { RecentDataRequestWithoutParam } from '../../../model/recent-data.model';\n\nimport { EntityService } from '../../../service/entity.service';\nimport { RecentDataService } from '../../../service/recent-data.service';\nimport { TrendService } from '../../../service/trend.service';\n\n// tsc-library\nimport { COMMON_CONSTANT, MATERIAL_CONSTANT, MaterialFormFieldAppearance, SearchBarTwoComponent } from '@library/tsc-common';\nimport { StorageService } from '@library/storage-service';\nimport { DateService } from '@library/date';\n// /tsc-library/\n\n@Component({\n    selector: 'lib-entity',\n    templateUrl: './entity.component.html',\n    styleUrls: ['./entity.component.scss']\n})\nexport class EntityDashboardComponent implements OnInit {\n\n    commonConstant = COMMON_CONSTANT;\n    materialConstant = MATERIAL_CONSTANT;\n\n    materialFormFieldAppearance = MaterialFormFieldAppearance;\n\n    orgID: any;\n    layoutID: any;\n    timezone: any;\n    facilityName: string;\n    isAccordionOpen: boolean = true;\n\n    //loader variable declaration\n    entityTypeLoader: boolean = true;\n    entityDeviceLoader: boolean = false;\n    realTimeDeviceDataLoader: boolean = false;\n\n    entityTypeM = [new EntityType()];\n    entityTypeDropdownItem = [new EntityType()];\n    entityDeviceM = new EntityTree();\n    filteredEntityDeviceM: any[] = [];\n    recentEntitiesData: any;\n\n    entityTypeFC: FormControl = new FormControl('', Validators.required);\n    entityFC: FormControl = new FormControl('', Validators.required);\n\n    @ViewChild('searchBar') searchBar: SearchBarTwoComponent;\n    @ViewChild('scrollContainer') scrollContainer: ElementRef;\n\n    constructor(\n        private storageService: StorageService,\n        private entityService: EntityService,\n        private recentDataService: RecentDataService,\n        public dateService: DateService,\n        private trendService: TrendService\n    ) { }\n\n    ngOnInit(): void {\n        this.orgID = this.storageService.getStorage('currentOrgID');\n        this.layoutID = this.storageService.getStorage('layoutID');\n        this.timezone = this.storageService.getStorage('timezone');\n\n        this.getEntityTypeByLayoutID();\n    }\n\n    async getEntityTypeByLayoutID() {\n        try {\n            this.entityTypeM = <EntityTypeM[]>await this.entityService.getEntityTypeByLayoutID(this.orgID);\n\n            if (this.entityTypeM && this.entityTypeM.length > 0) {\n                const defaultEntityType = this.entityTypeM[0].type;\n\n                if (defaultEntityType) {\n                    this.entityTypeFC.patchValue(defaultEntityType);\n                    this.getEntitiesWithDevices(this.entityTypeFC.value);\n                }\n\n                if (this.entityTypeM.length > 6) {\n                    this.entityTypeDropdownItem = this.entityTypeM.slice(6);\n                }\n            }\n        } catch (error) {\n            console.error(\"Error in getEntityTypeByLayoutID()\", error);\n        } finally {\n            this.entityTypeLoader = false;\n        }\n    }\n\n    entityTypeChange() {\n        const entityType = this.entityTypeFC.value;\n        this.getEntitiesWithDevices(entityType);\n    }\n\n    moveToToggleGroup(selectedEntityType: string) {\n        const dropdownIndex = this.entityTypeDropdownItem.findIndex(entityType => entityType.type == selectedEntityType);\n        if (dropdownIndex != -1) {\n            this.entityTypeDropdownItem.splice(dropdownIndex, 1);\n        }\n\n        if (this.entityTypeM.length > 0) {\n            this.entityTypeDropdownItem.push(this.entityTypeM.shift());\n        }\n\n        this.entityTypeM.unshift({ type: selectedEntityType });\n    }\n\n    dropdownSelectionChange(selectedEntityType: string) {\n        this.moveToToggleGroup(selectedEntityType);\n        this.entityTypeFC.patchValue(selectedEntityType);\n\n        this.getEntitiesWithDevices(selectedEntityType);\n    }\n\n    async getEntitiesWithDevices(entityType) {\n        try {\n            this.entityDeviceLoader = true;\n\n            let requestBody = {\n                'entityType': [entityType]\n            };\n\n            this.entityDeviceM = <EntityTreeM>await this.entityService.getEntitiesWithDevices(this.orgID, this.layoutID, requestBody);\n\n            if (this.entityDeviceM.children) {\n                this.filteredEntityDeviceM = [this.entityDeviceM];\n            }\n        } catch (error) {\n            console.error(\"Error in getEntitiesWithDevices()\", error);\n        } finally {\n            this.entityDeviceLoader = false;\n        }\n    }\n\n    searchFn(value: string) {\n        const searchTerm = value.trim().toLowerCase();\n\n        if (searchTerm.length > 0) {\n            this.filteredEntityDeviceM = this.searchEntities([this.entityDeviceM], searchTerm);\n        } else {\n            this.filteredEntityDeviceM = [this.entityDeviceM];\n        }\n    }\n\n    searchEntities(entities: any[], searchTerm: string): any[] {\n        let results: any[] = [];\n\n        entities.forEach(entity => {\n            if (entity.name.toLowerCase().includes(searchTerm)) {\n                results.push(entity);\n            }\n\n            if (entity.children && entity.children.length > 0) {\n                const matchingChildren = this.searchEntities(entity.children, searchTerm);\n                results = results.concat(matchingChildren);\n            }\n        });\n\n        return results;\n    }\n\n    openAccordion() {\n        this.isAccordionOpen = true;\n    }\n\n    closeAccordion() {\n        this.isAccordionOpen = false;\n    }\n\n    isDeviceAttached(entity: any): boolean {\n        return (entity.type == 'FACILITY' || entity.type == 'ENTITY') && entity.children && entity.children.some(child => child.type == 'DEVICE');\n    }\n\n    onEntityDeviceSelection() {\n        const selectedValue = this.entityFC.value;\n        this.realTimeDeviceDataLoader = false;\n        // this.getRecentEntitiesData(selectedValue);\n    }\n\n    getTooltipLabel(entity: any): string {\n        if (entity.type == 'FACILITY') {\n            return 'Facility';\n        } else if (entity.type == 'ENTITY') {\n            return 'Entity';\n        } else if (entity.type == 'DEVICE') {\n            return 'Device';\n        }\n    }\n\n    async getRecentEntitiesData(selectedValue) {\n        try {\n            let requestData = new RecentDataRequestWithoutParam();\n\n            requestData.entityID = [selectedValue];\n            requestData.timezone = this.timezone;\n            requestData.backscan = 1;\n\n            this.recentEntitiesData = await this.recentDataService.getEntityLevelRecentData(this.orgID, requestData);\n        } catch (error) {\n            console.error(\"Error in getRecentEntitiesData()\", error);\n        } finally {\n            this.realTimeDeviceDataLoader = false;\n        }\n    }\n\n    showTrend(paramMetric, entityID, deviceID) {\n        let requestBody = {\n            paramMetric: paramMetric,\n            entityID: entityID,\n            deviceID: deviceID\n        };\n        this.trendService.openDialog(requestBody);\n    }\n\n}\n","<div class=\"card main-card cardOverwrite h100\">\n    <div class=\"headerContainer\">\n        <div class=\"headerLeftContainer\">\n            <div class=\"pageTitle\">Entity Dashboard</div>\n        </div>\n    </div>\n\n    <div class=\"card-body\">\n        <div class=\"row\">\n            <ng-container *ngIf=\"entityTypeLoader; else showEntityType\">\n                <ng-container *ngTemplateOutlet=\"showLoader; context: { count: 1 }\"></ng-container>\n            </ng-container>\n\n            <ng-template #showEntityType>\n                <ng-container *ngIf=\"entityTypeM && entityTypeM.length <= 6; else toggleAndDropdownView\">\n                    <div class=\"col-sm-6\">\n                        <div class=\" labelColor\">Select entity type *</div>\n                        <ng-container *ngIf=\"entityTypeM && entityTypeM.length > 0; else noEntityType\">\n                            <mat-button-toggle-group class=\"matBtnFilter\" [formControl]=\"entityTypeFC\"\n                                (change)=\"entityTypeChange()\">\n                                <mat-button-toggle *ngFor=\"let entityType of entityTypeM\" value=\"{{ entityType.type }}\">\n                                    {{ entityType.type }}\n                                </mat-button-toggle>\n                            </mat-button-toggle-group>\n                        </ng-container>\n                        <ng-template #noEntityType>\n                            <mat-button-toggle-group class=\"matBtnFilter\" disabled>\n                                <mat-button-toggle>\n                                    <span class=\"textMatError\">\n                                        {{ commonConstant.NO_DATA_FOUND }}\n                                    </span>\n                                </mat-button-toggle>\n                            </mat-button-toggle-group>\n                        </ng-template>\n                    </div>\n                </ng-container>\n\n                <ng-template #toggleAndDropdownView>\n                    <div class=\"col-sm-6\">\n                        <div class=\" labelColor\">Select entity type *</div>\n                        <mat-button-toggle-group class=\"matBtnFilter\" [formControl]=\"entityTypeFC\"\n                            (change)=\"entityTypeChange()\">\n                            <mat-button-toggle *ngFor=\"let entityType of entityTypeM.slice(0, 6)\" value=\"{{ entityType.type }}\">\n                                {{ entityType.type }}\n                            </mat-button-toggle>\n                        </mat-button-toggle-group>\n                    </div>\n                    <div class=\"col-sm-6\">\n                        <mat-form-field class=\"mat-field-width-100\"\n                            [appearance]=\"materialFormFieldAppearance.FORM_FIELD_APPEARANCE\">\n                            <mat-label>Select entity type</mat-label>\n                            <mat-select [formControl]=\"entityTypeFC\" (selectionChange)=\"dropdownSelectionChange($event.value)\">\n                                <mat-option *ngFor=\"let entityType of entityTypeDropdownItem\" [value]=\"entityType.type\">\n                                    {{ entityType.type }}\n                                </mat-option>\n                            </mat-select>\n                        </mat-form-field>\n                    </div>\n                </ng-template>\n            </ng-template>\n        </div>\n\n        <div class=\"row mt-4\">\n            <div class=\"col-sm-6\">\n                <mat-accordion>\n                    <mat-expansion-panel class=\"matAccordion\" [expanded]=\"isAccordionOpen\" (opened)=\"openAccordion()\"\n                        (closed)=\"closeAccordion()\">\n                        <mat-expansion-panel-header>\n                            <mat-panel-title>\n                                <div class=\"card-title sectionTitle\">\n                                    Select entity *\n                                </div>\n                            </mat-panel-title>\n                        </mat-expansion-panel-header>\n\n                        <div class=\"row\">\n                            <div class=\"col-sm-12\">\n                                <lib-search-bar-two class=\"float-end me-3\" #searchBar searchBy=\"name\"\n                                    (emitSearch)=\"searchFn($event)\">\n                                </lib-search-bar-two>\n                            </div>\n                        </div>\n                        \n                        <perfect-scrollbar class=\"scrollHeight\" [config]=\"{useBothWheelAxes: true, suppressScrollX: false, suppressScrollY: false}\" #scrollContainer>\n                            <ng-container *ngIf=\"entityDeviceLoader; else entityDeviceView\">\n                                <div class=\"mt-2\">\n                                    <ng-container *ngTemplateOutlet=\"showLoader; context: { count: 3 }\"></ng-container>\n                                </div>\n                            </ng-container>\n                            <ng-template #entityDeviceView>\n                                <mat-radio-group [formControl]=\"entityFC\" (change)=\"onEntityDeviceSelection()\">\n                                    <div *ngFor=\"let entity of filteredEntityDeviceM\">\n                                        <ng-container *ngTemplateOutlet=\"entityTemplate; context:{ $implicit: entity }\"></ng-container>\n                                    </div>\n\n                                    <ng-template #entityTemplate let-entity>\n                                        <div class=\"ms-3 mt-2\">\n                                            <ng-container *ngIf=\"isDeviceAttached(entity); else entityView\">\n                                                <mat-radio-button class=\"radioBtnLabel me-2\" [value]=\"entity.id\">\n                                                    <span class=\"badge rounded-pill\" [ngClass]=\"{'facility': entity.type == 'FACILITY', 'entity': entity.type == 'ENTITY', 'device': entity.type == 'DEVICE'}\"\n                                                        [matTooltip]=\"getTooltipLabel(entity)\" matTooltipPosition=\"above\">\n                                                        <div class=\"d-flex align-items-center\">\n                                                            <span class=\"material-symbols-outlined me-2\" *ngIf=\"entity.type == 'FACILITY'\">factory</span>\n                                                            <span class=\"material-symbols-outlined me-2\" *ngIf=\"entity.type == 'ENTITY'\">domain</span>\n                                                            <span class=\"material-symbols-outlined me-2\" *ngIf=\"entity.type == 'DEVICE'\">devices</span>\n                                                            {{ entity.name }}\n                                                        </div>\n                                                    </span>\n                                                </mat-radio-button>\n                                            </ng-container>\n\n                                            <ng-template #entityView>\n                                                <span class=\"badge rounded-pill\" [ngClass]=\"{'facility': entity.type == 'FACILITY', 'entity': entity.type == 'ENTITY', 'device': entity.type == 'DEVICE'}\"\n                                                    [matTooltip]=\"getTooltipLabel(entity)\" matTooltipPosition=\"above\">\n                                                    <div class=\"d-flex align-items-center\">\n                                                        <span class=\"material-symbols-outlined me-2\" *ngIf=\"entity.type == 'FACILITY'\">factory</span>\n                                                        <span class=\"material-symbols-outlined me-2\" *ngIf=\"entity.type == 'ENTITY'\">domain</span>\n                                                        <span class=\"material-symbols-outlined me-2\" *ngIf=\"entity.type == 'DEVICE'\">devices</span>\n                                                        {{ entity.name }}\n                                                    </div>\n                                                </span>\n                                            </ng-template>\n                                        </div>\n\n                                        <div *ngIf=\"entity.children && entity.children.length > 0\" class=\"ms-5 mt-2\">\n                                            <ng-container *ngFor=\"let child of entity.children\">\n                                                <ng-container\n                                                    *ngTemplateOutlet=\"entityTemplate; context:{ $implicit: child }\"></ng-container>\n                                            </ng-container>\n                                        </div>\n                                    </ng-template>\n                                </mat-radio-group>\n                                \n                            </ng-template>\n                        </perfect-scrollbar>\n                    </mat-expansion-panel>\n                </mat-accordion>\n            </div>\n\n            <div class=\"col-sm-6\">\n                <mat-card class=\"cardOverwrite cardBackgroundColor cardHeight2\">\n                    <div class=\"row\">\n                        <div class=\"col-sm-12\">\n                            <div class=\"d-flex align-items-center\">\n                                <span class=\"material-symbols-outlined me-3\">\n                                    devices\n                                </span>\n                                <span class=\"card-title sectionTitle mt-1\">\n                                    Real time data\n                                </span>\n                            </div>\n                        </div>\n                    </div>\n                    <hr>\n                    <perfect-scrollbar class=\"scrollHeight\">\n                        <ng-container *ngIf=\"realTimeDeviceDataLoader; else realTimeDeviceDataView\">\n                            <ng-container *ngTemplateOutlet=\"showLoader; context: { count: 3 }\"></ng-container>\n                        </ng-container>\n\n                        <ng-template #realTimeDeviceDataView>\n                            <ng-container *ngFor=\"let realTimeData of recentEntitiesData;\">\n                                <ng-container *ngTemplateOutlet=\"parameterSummary; context: {\n                                    device: realTimeData?.deviceData,\n                                    entityID: realTimeData?.entityID\n                                }\"></ng-container>\n                            </ng-container>\n                        </ng-template>\n                    </perfect-scrollbar>\n                </mat-card>\n            </div>\n        </div>\n    </div>\n</div>\n\n<ng-template #parameterSummary let-device=\"device\" let-entityID=\"entityID\">\n    <ng-container *ngFor=\"let deviceData of device;\">\n        <div class=\"row\">\n            <div class=\"col-sm-12\">\n                <div class=\"d-flex align-items-center fw-bold\">\n                    <span class=\"material-symbols-outlined me-1\"\n                        [ngClass]=\"{'text-success': deviceData.status == 'LIVE', 'text-secondary': deviceData.status == 'OFFLINE'}\">\n                        devices\n                    </span>\n                    {{ deviceData.name ? deviceData.name : commonConstant.HYPHEN }}\n                </div>\n            </div>\n        </div>\n        <div class=\"row mt-2\" *ngFor=\"let parameterData of deviceData.paramData;\">\n            <div class=\"col-sm-4 text-start text-secondary\">\n                {{ parameterData.label ? parameterData.label : commonConstant.HYPHEN }}\n            </div>\n            <div class=\"col-sm-4 text-center\">\n                <a class=\"text-primary cursorPointer fw-bold\" matTooltip=\"Trend\" matTooltipPosition=\"above\"\n                    (click)=\"showTrend(parameterData.name, entityID, deviceData.id)\">\n                    <span>{{ parameterData.data.value ? (parameterData.data.value | number: '1.2-2') : commonConstant.HYPHEN\n                        }}</span>\n                    <span> {{ parameterData.data.value ? parameterData.unit : '' }} </span>\n                </a>\n            </div>\n            <div class=\"col-sm-4 text-start text-secondary\">\n                {{ dateService.getRelativeTimeAgoLabel(parameterData.data.date) }}\n            </div>\n        </div>\n        <hr>\n    </ng-container>\n</ng-template>\n\n<ng-template #showLoader let-count=\"count\">\n    <lib-skeleton-loader [count]=\"count\" [appearance]=\"''\"\n        [theme]=\"{ 'border-radius': '16px', height: '40px', 'background-color': 'rgb(230 232 235)' }\"></lib-skeleton-loader>\n</ng-template>","import { NgModule } from '@angular/core';\nimport { RouterModule, Routes } from '@angular/router';\n\nimport { EntityDashboardComponent } from './entity.component';\n\nconst routes: Routes = [\n    {\n        path: '',\n        component: EntityDashboardComponent\n    }\n];\n\n@NgModule({\n    imports: [RouterModule.forChild(routes)],\n    exports: [RouterModule]\n})\nexport class EntityDashboardRoutingModule { }\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\n\nimport { EntityDashboardRoutingModule } from './entity-routing.module';\nimport { EntityDashboardComponent } from './entity.component';\n\nimport { TrendModule } from '../../_shared/dialog/trend/trend.module';\n\nimport { TrendService } from '../../../service/trend.service';\n\nimport { ReactiveFormsModule } from '@angular/forms';\n\nimport { MatCardModule } from '@angular/material/card';\nimport { MatFormFieldModule } from '@angular/material/form-field';\nimport { MatInputModule } from '@angular/material/input';\nimport { MatSelectModule } from '@angular/material/select';\nimport { MatButtonToggleModule } from '@angular/material/button-toggle';\nimport { MatExpansionModule } from '@angular/material/expansion';\nimport { MatOptionModule } from '@angular/material/core';\nimport { MatRadioModule } from '@angular/material/radio';\nimport { MatTooltipModule } from '@angular/material/tooltip';\n\nimport { PerfectScrollbarModule } from 'ngx-perfect-scrollbar';\n\n// tsc-library\nimport { SearchBarTwoModule, SkeletonModule } from '@library/tsc-common';\n// /tsc-library/\n\n@NgModule({\n    declarations: [\n        EntityDashboardComponent\n    ],\n    imports: [\n        CommonModule,\n        EntityDashboardRoutingModule,\n        TrendModule,\n        SkeletonModule,\n        SearchBarTwoModule,\n        ReactiveFormsModule,\n        MatCardModule,\n        MatFormFieldModule,\n        MatInputModule,\n        MatSelectModule,\n        MatButtonToggleModule,\n        MatExpansionModule,\n        MatOptionModule,\n        MatRadioModule,\n        MatTooltipModule,\n        PerfectScrollbarModule\n    ],\n    providers: [TrendService]\n})\nexport class EntityDashboardModule { }\n","export enum ReportErrorEnum {\n    INVALID_DATE_LABEL = 'Invalid dates!',\n    INVALID_DATE_MESSAGE = 'Select distinct dates to view the desired report.',\n    TIME_EXCEEDED_LABEL = 'Time exceeded!',\n    TIME_EXCEEDED_MESSAGE = 'You cannot view or download report for more than 24 hours.',\n    DATA_NOT_FOUND_LABEL = 'No data found!',\n    DATA_NOT_FOUND_MESSAGE = 'No data was recorded for the above specified filters. Please keep changing the filters and try again.',\n    INVALID_ERROR_LABEL = 'Please try again later!',\n    INVALID_ERROR_MESSAGE = 'We are not able to fetch the data for the specified filters at the moment. Please keep changing the filters and try again.'\n}\n\nexport enum DashboardErrorEnum {\n    DATA_NOT_FOUND_LABEL = 'No data found!',\n    DATA_NOT_FOUND_MESSAGE = 'No data was recorded at the moment. Please try again after sometime.',\n    INVALID_ERROR_LABEL = 'Please try again later!',\n    INVALID_ERROR_MESSAGE = 'We are not able to fetch the requested data at the moment. Please try again after sometime.'\n}","import { Injectable } from \"@angular/core\";\n\nimport { AlertM } from \"../model/alert.model\";\n\n@Injectable({\n    providedIn: 'root'\n})\n\nexport class AlertService {\n\n    setAlertProperties(alertObject: AlertM, label: string, content: string, type: string, icon: string): AlertM {\n        alertObject.showAlert = true;\n        alertObject.alertLabel = label;\n        alertObject.alertContent = content;\n        alertObject.messageAlertType = type;\n        alertObject.messageAlertIcon = icon;\n\n        return alertObject;\n    }\n\n    resetAlertProperties(alertObject: AlertM): AlertM {\n        alertObject.showAlert = false;\n        alertObject.alertLabel = '';\n        alertObject.alertContent = '';\n        alertObject.messageAlertType = '';\n        alertObject.messageAlertIcon = '';\n\n        return alertObject;\n    }\n}","import { Component, OnInit } from '@angular/core';\nimport { Router } from '@angular/router';\n\nimport { OrgRecentData, OrgRecentDataM } from '../../../model/recent-data.model';\nimport { Alert, AlertM } from '../../../model/alert.model';\n\nimport { DashboardErrorEnum } from '../../../enum/error.enum';\n\nimport { RecentDataService } from '../../../service/recent-data.service';\nimport { TrendService } from '../../../service/trend.service';\nimport { AlertService } from '../../../service/alert.service';\n\n// tsc-library\nimport { DateService } from '@library/date';\nimport { StorageService } from '@library/storage-service';\nimport { COMMON_CONSTANT, MessageAlertIconEnum, MessageAlertTypeEnum } from '@library/tsc-common';\n// /tsc-library/\n\n@Component({\n    selector: 'app-facility',\n    templateUrl: './facility.component.html',\n    styleUrls: ['./facility.component.scss']\n})\n\nexport class FacilityComponent implements OnInit {\n\n    commonConstant = COMMON_CONSTANT;\n\n    orgID: any;\n    timezone: any;\n    apiTimer: any;\n    showLoader: boolean = false;\n\n    orgRecentDataM = [new OrgRecentData()];\n    alertObj: AlertM = new Alert();\n\n    constructor(\n        private router: Router,\n        private storageService: StorageService,\n        public dateService: DateService,\n        private trendService: TrendService,\n        private recentDataService: RecentDataService,\n        private alertService: AlertService,\n    ) { }\n\n    ngOnInit(): void {\n        this.orgID = this.storageService.getStorage('currentOrgID');\n        this.timezone = this.storageService.getStorage('timezone');\n\n        this.getOrgRecentData();\n    }\n\n    async getOrgRecentData() {\n\n        this.alertService.resetAlertProperties(this.alertObj);\n\n        try {\n            let requestBody = {\n                'timezone': this.timezone\n            };\n            this.orgRecentDataM = <OrgRecentDataM[]>await this.recentDataService.getOrgRecentData(this.orgID, requestBody);\n\n            if (this.orgRecentDataM && this.orgRecentDataM.length == 1) {\n                this.alertService.setAlertProperties(this.alertObj, DashboardErrorEnum.DATA_NOT_FOUND_LABEL, DashboardErrorEnum.DATA_NOT_FOUND_MESSAGE, MessageAlertTypeEnum.WARNING, MessageAlertIconEnum.WARNING_ICON);\n            }\n\n        } catch (error) {\n\n            console.error(`Error in getOrgRecentData()`, error);\n            this.alertService.setAlertProperties(this.alertObj, DashboardErrorEnum.INVALID_ERROR_LABEL, DashboardErrorEnum.INVALID_ERROR_MESSAGE, MessageAlertTypeEnum.DANGER, MessageAlertIconEnum.DANGER_ICON);\n\n        } finally {\n            this.apiTimer = setTimeout(() => {\n                this.getOrgRecentData();\n            }, 300000);\n            this.showLoader = false;\n        }\n    }\n\n    showEntityConsumption(id, name) {\n        this.router.navigate(['dashboard/consumption'], { state: { entityID: id, entityName: name } });\n    }\n\n    showTrend(paramMetric, deviceID, entityID) {\n        let requestBody = {\n            paramMetric: paramMetric,\n            deviceID: deviceID,\n            entityID: entityID\n        };\n        this.trendService.openDialog(requestBody);\n    }\n\n}","<div class=\"card main-card cardOverwrite h100\">\n    <div class=\"headerContainer\">\n        <div class=\"headerLeftContainer\">\n            <div class=\"pageTitle\">Facility Dashboard</div>\n        </div>\n    </div>\n\n    <div class=\"card-body pt-0\">\n\n        <div class=\"row\">\n            <lib-skeleton-loader *ngIf=\"showLoader\" [count]=\"3\" [appearance]=\"''\"\n                [theme]=\"{ 'border-radius': '16px', height: '40px', 'background-color': 'rgb(230 232 235)' }\"></lib-skeleton-loader>\n        </div>\n\n        <div class=\"row\">\n            <div class=\"col-sm-12\">\n                <lib-message-alert *ngIf=\"alertObj.showAlert\" [labelInp]=\"alertObj.alertLabel\"\n                    [contentInp]=\"alertObj.alertContent\" [messageAlertTypeInp]=\"alertObj.messageAlertType\"\n                    [messageAlertIconInp]=\"alertObj.messageAlertIcon\">\n                </lib-message-alert>\n            </div>\n        </div>\n\n        <div class=\"row\" *ngIf=\"orgRecentDataM.length > 1\">\n            <div class=\"col-sm-12 mb-3\" *ngFor=\"let recentRes of orgRecentDataM\">\n                <mat-card class=\"cardOverwrite cardBackgroundColor\">\n                    <div class=\"row mb-2\">\n                        <div class=\"col-sm-6\">\n                            <span class=\"entity text-primary\">\n                                <div class=\"d-flex align-items-center\">\n                                    <span class=\"material-symbols-outlined me-2\">domain</span>\n                                    {{ recentRes.entityName }}\n                                </div>\n                            </span>\n                        </div>\n                        <div class=\"col-sm-6 text-end\">\n                            <a class=\"text-primary cursorPointer\" matTooltip=\"Entity consumption\"\n                                matTooltipPosition=\"below\"\n                                (click)=\"showEntityConsumption(recentRes.entityID, recentRes.entityName)\">\n                                <span class=\"material-symbols-outlined fs-4 fw-bold\">monitoring</span>\n                            </a>\n                        </div>\n                    </div>\n\n                    <div class=\"row\">\n                        <div class=\"col-sm-12 ms-3\" *ngFor=\"let deviceRes of recentRes.deviceData\">\n                            <div class=\"d-flex align-items-center\">\n                                <span class=\"material-symbols-outlined text-success me-2\">devices</span>\n                                {{ deviceRes.name }}\n                            </div>\n\n                            <div class=\"row mt-2\">\n                                <div class=\"col-sm-4 mb-3\" *ngFor=\"let paramRes of deviceRes.paramData\">\n                                    <mat-card class=\"cardOverwrite\">\n                                        <ng-container *ngTemplateOutlet=\"parameterData; context: {\n                                                duration: dateService.getRelativeTimeAgoLabel(paramRes?.data?.date),\n                                                value: paramRes?.data?.value,\n                                                unit: paramRes?.unit,\n                                                label: paramRes?.label,\n                                                entityID: recentRes?.entityID,\n                                                deviceID: deviceRes?.id,\n                                                paramName: paramRes?.name\n                                            }\"></ng-container>\n                                    </mat-card>\n                                </div>\n                            </div>\n                        </div>\n                    </div>\n                </mat-card>\n            </div>\n        </div>\n    </div>\n</div>\n\n<ng-template #parameterData let-duration=\"duration\" let-label=\"label\" let-value=\"value\" let-unit=\"unit\"\n    let-entityID=\"entityID\" let-deviceID=\"deviceID\" let-paramName=\"paramName\">\n    <div class=\"row\">\n        <div class=\"col-sm-6 textDurationWithAgoTime\">\n            {{ duration }}\n        </div>\n        <div class=\"col-sm-6 text-end\">\n            <a class=\"text-primary cursorPointer\" matTooltip=\"Trend\" matTooltipPosition=\"below\"\n                (click)=\"showTrend(paramName, deviceID, entityID)\">\n                <span class=\"material-symbols-outlined fs-5 fw-bold\">trending_up</span>\n            </a>\n        </div>\n    </div>\n    <div class=\"row mt-3\">\n        <div class=\"col-sm-12 text-center\">\n            <span class=\"fs-1 fw-bold text-primary\">{{ value ? (value | number: '1.2-2') : commonConstant.HYPHEN\n                }}</span>\n            <span class=\"text-secondary fw-bold\"> {{ value ? unit : '' }} </span>\n        </div>\n    </div>\n    <div class=\"row mt-4 mb-4\">\n        <div class=\"col-sm-12 fs-5 text-center\">\n            {{ label }}\n        </div>\n    </div>\n</ng-template>","import { NgModule } from '@angular/core';\nimport { RouterModule, Routes } from '@angular/router';\n\nimport { FacilityComponent } from './facility.component';\n\nconst routes: Routes = [\n    {\n        path: '',\n        component: FacilityComponent\n    }\n];\n\n@NgModule({\n    imports: [RouterModule.forChild(routes)],\n    exports: [RouterModule]\n})\nexport class FacilityRoutingModule { }\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\n\nimport { FacilityRoutingModule } from './facility-routing.module';\nimport { FacilityComponent } from './facility.component';\n\nimport { TrendModule } from '../../_shared/dialog/trend/trend.module';\n\nimport { TrendService } from '../../../service/trend.service';\n\nimport { MatCardModule } from '@angular/material/card';\nimport { MatTooltipModule } from '@angular/material/tooltip';\n\n// tsc-library\nimport { MessageAlertModule, SkeletonModule } from '@library/tsc-common';\n// /tsc-library/\n\n@NgModule({\n    declarations: [\n        FacilityComponent\n    ],\n    imports: [\n        CommonModule,\n        FacilityRoutingModule,\n        TrendModule,\n        SkeletonModule,\n        MessageAlertModule,\n        MatCardModule,\n        MatTooltipModule\n    ],\n    providers: [TrendService]\n})\nexport class FacilityModule { }\n","import { Inject, Injectable } from '@angular/core';\nimport { HttpClient, HttpParams } from '@angular/common/http';\n\nimport { Observable } from 'rxjs';\n\nimport { DevicesWithEntitiesM } from '../model/device.model';\n\n@Injectable({\n    providedIn: 'root'\n})\n\nexport class EntityDeviceController {\n\n    constructor(\n        private http: HttpClient,\n        @Inject('environment') private environment: any\n    ) { }\n\n    //to chnge endpoint\n    getDevicesWithEntities(orgID, requestBody):Observable<DevicesWithEntitiesM[]> {\n        return this.http.post<DevicesWithEntitiesM[]>(`${this.environment.TSC_COMMON_API_URL}organizations/${orgID}/layouts/entities/devices`, requestBody);\n    }\n\n    //TODO: SOMYA AGRAWAL: To discuss this api with Abhinav\n    getDevicesWithEntitiesByParameter(orgID, paramMetric): Observable<DevicesWithEntitiesM[]> {\n        let params = new HttpParams();\n        params = params.append('paramMetric', paramMetric);\n        return this.http.post<DevicesWithEntitiesM[]>(`${this.environment.TSC_COMMON_API_URL}organizations/${orgID}/entities-devices`, { params: params });\n    }\n}\n","import { Injectable } from '@angular/core';\n\nimport { DevicesWithEntities, DevicesWithEntitiesM } from '../model/device.model';\nimport { EntityDeviceController } from '../controller/entity-device.controller';\n\n@Injectable({\n    providedIn: 'root'\n})\n\nexport class EntityDeviceService {\n\n    constructor(\n        private entityDeviceController: EntityDeviceController\n    ) { }\n\n    async getDevicesWithEntities(orgID, requestBody): Promise<DevicesWithEntitiesM[]> {\n        let devicesWithEntitiesM: DevicesWithEntitiesM[];\n        try {\n            devicesWithEntitiesM = await this.entityDeviceController.getDevicesWithEntities(orgID, requestBody).toPromise();\n\n            if (devicesWithEntitiesM) {\n                return devicesWithEntitiesM;\n            } else {\n                return [new DevicesWithEntities()];\n            }\n        } catch (error) {\n            console.error('Error -', error);\n            return [new DevicesWithEntities()];\n        }\n    }\n\n    async getDevicesWithEntitiesByParameter(orgID, paramMetric): Promise<DevicesWithEntitiesM[]> {\n        let devicesWithEntitiesM: DevicesWithEntitiesM[];\n        try {\n            devicesWithEntitiesM = await this.entityDeviceController.getDevicesWithEntitiesByParameter(orgID, paramMetric).toPromise();\n\n            if (devicesWithEntitiesM) {\n                return devicesWithEntitiesM;\n            } else {\n                return [new DevicesWithEntities()];\n            }\n        } catch (error) {\n            console.error('Error -', error);\n            return [new DevicesWithEntities()];\n        }\n    }\n\n}","import { Component, OnInit } from '@angular/core';\nimport { FormControl } from '@angular/forms';\n\nimport { DashboardErrorEnum } from '../../../enum/error.enum';\n\nimport { DevicesWithEntities, DevicesWithEntitiesM } from '../../../model/device.model';\nimport { Parameter, ParameterM } from '../../../model/parameter.model';\nimport { Alert, AlertM } from '../../../model/alert.model';\nimport { RecentDataRequestWithParam } from '../../../model/recent-data.model';\n\nimport { RecentDataService } from '../../../service/recent-data.service';\nimport { ParameterService } from '../../../service/parameter.service';\nimport { EntityDeviceService } from '../../../service/entity-device.service';\nimport { AlertService } from '../../../service/alert.service';\nimport { TrendService } from '../../../service/trend.service';\n\n// tsc-library\nimport { StorageService } from '@library/storage-service';\nimport { COMMON_CONSTANT, MatSelectSearchService, MaterialFormFieldAppearance, MessageAlertIconEnum, MessageAlertTypeEnum, TSCCommonService } from '@library/tsc-common';\nimport { DateService } from '@library/date';\nimport { ApplicationKeyID } from '@library/application-service';\n// /tsc-library/\n\n@Component({\n    selector: 'lib-meter-data',\n    templateUrl: './meter-data.component.html',\n    styles: [\n    ]\n})\nexport class MeterDataDashboardComponent implements OnInit {\n\n    commonConstant = COMMON_CONSTANT;\n\n    materialFormFieldAppearance = MaterialFormFieldAppearance;\n\n    orgID: any;\n    applicationKeyID: any;\n    paramMetric: any;\n    entityID: any;\n    timezone: string;\n    meterDataRes: any;\n    apiTimer: any;\n    showAlert: boolean = false;\n    showLoader: boolean = false;\n\n    entityDeviceM = [new DevicesWithEntities()];\n    parameterM = [new Parameter()];\n    alertObj: AlertM = new Alert();\n\n    meterFC: FormControl = new FormControl();\n\n    meterSearchUtil: MatSelectSearchService = new MatSelectSearchService(['name']);\n\n    constructor(\n        private storageService: StorageService,\n        private recentDataService: RecentDataService,\n        private entityDeviceService: EntityDeviceService,\n        private parameterService: ParameterService,\n        private alertService: AlertService,\n        public dateService: DateService,\n        private trendService: TrendService\n    ) { }\n\n    ngOnInit(): void {\n        this.orgID = this.storageService.getStorage('currentOrgID');\n        this.timezone = this.storageService.getStorage('timezone');\n        this.applicationKeyID = this.storageService.getStorage('applicationKeyID');\n\n        if (this.applicationKeyID == ApplicationKeyID.ENERGY_KEY_ID) {\n            this.paramMetric = \"engEnergyUsed\";\n        } else if (this.applicationKeyID == ApplicationKeyID.WATER_KEY_ID) {\n            this.paramMetric = \"gwFlowTotalizer\";\n        }\n\n        this.getDevicesWithEntitiesByParameter();\n    }\n\n    async getDevicesWithEntitiesByParameter() {\n        this.entityDeviceM = <DevicesWithEntitiesM[]>await this.entityDeviceService.getDevicesWithEntitiesByParameter(this.orgID, this.paramMetric);\n\n        this.meterSearchUtil.entityArr = this.entityDeviceM;\n        this.meterSearchUtil.createSubscription();\n\n        if (this.entityDeviceM.length > 1) {\n            const deviceID = this.entityDeviceM?.[0]?.['devices']?.[0]?.['id'];\n            this.meterFC.patchValue(deviceID);\n        }\n    }\n\n    meterChange(selectedMeter) {\n        clearTimeout(this.apiTimer);\n        this.showLoader = true;\n\n        this.meterFC.patchValue(selectedMeter);\n        this.getParameterList();\n    }\n\n    getParameterList() {\n        const selectedMeter = this.meterFC.value;\n        this.getParametersByDeviceID(selectedMeter);\n    }\n\n    async getParametersByDeviceID(deviceID) {\n        let requestBody = {};\n        requestBody['deviceID'] = [deviceID];\n\n        this.parameterM = <ParameterM[]>await this.parameterService.getParameterByDeviceID(this.orgID, requestBody);\n\n        if (this.parameterM.length > 1) {\n            this.getRecentMeterData(deviceID);\n        }\n    }\n\n    async getRecentMeterData(deviceID) {\n\n        this.alertService.resetAlertProperties(this.alertObj);\n\n        try {\n            let requestData = new RecentDataRequestWithParam();\n\n            requestData.params = this.parameterM.map(param => ({ name: param.paramMetric }));\n            requestData.deviceID = [deviceID];\n            requestData.backscan = 1;\n            requestData.timezone = this.timezone;\n\n            this.meterDataRes = await this.recentDataService.getRecentDataWithParam(this.orgID, requestData);\n\n            if (this.meterDataRes?.length == 0) {\n                this.alertService.setAlertProperties(this.alertObj, DashboardErrorEnum.DATA_NOT_FOUND_LABEL, DashboardErrorEnum.DATA_NOT_FOUND_MESSAGE, MessageAlertTypeEnum.WARNING, MessageAlertIconEnum.WARNING_ICON);\n            }\n\n        } catch (error) {\n            console.error(`Error in getRecentMeterData()`, error);\n            this.alertService.setAlertProperties(this.alertObj, DashboardErrorEnum.INVALID_ERROR_LABEL, DashboardErrorEnum.INVALID_ERROR_MESSAGE, MessageAlertTypeEnum.DANGER, MessageAlertIconEnum.DANGER_ICON);\n        } finally {\n            this.apiTimer = setTimeout(() => {\n                this.getRecentMeterData(deviceID);\n            }, 300000);\n            this.showLoader = false;\n        }\n    }\n\n    showTrend(paramMetric, entityID) {\n        let requestBody = {\n            paramMetric: paramMetric,\n            entityID: entityID,\n            deviceID: this.meterFC.value\n        };\n        this.trendService.openDialog(requestBody);\n    }\n\n    ngOnDestroy(): void {\n        clearTimeout(this.apiTimer);\n    }\n\n}\n","<div class=\"card main-card cardOverwrite h100\">\n    <div class=\"headerContainer\">\n        <div class=\"headerLeftContainer\">\n            <div class=\"pageTitle\">Meter Data Dashboard</div>\n        </div>\n    </div>\n\n    <div class=\"card-body\">\n        <div class=\"row\">\n            <div class=\"col-sm-3\">\n                <mat-form-field class=\"matFieldWidth100\"\n                    [appearance]=\"materialFormFieldAppearance.FORM_FIELD_APPEARANCE\">\n                    <mat-label>Select meter</mat-label>\n                    <mat-select (selectionChange)=\"meterChange($event.value)\" [formControl]=\"meterFC\">\n                        <ng-container *ngIf=\"entityDeviceM && entityDeviceM.length > 1; else noDataFound\">\n                            <mat-option>\n                                <ngx-mat-select-search [formControl]=\"meterSearchUtil.filterFC\"\n                                    placeholderLabel=\"Search by entity name\"\n                                    noEntriesFoundLabel=\"No matching name found.\">\n                                </ngx-mat-select-search>\n                            </mat-option>\n                            <mat-optgroup *ngFor=\"let entity of meterSearchUtil.filteredEntities | async\"\n                                [label]=\"entity.name\" [disabled]=\"entity.disabled\">\n                                <mat-option *ngFor=\"let device of entity.devices\" [value]=\"device.id\">\n                                    {{ device.name }}\n                                </mat-option>\n                            </mat-optgroup>\n                        </ng-container>\n                        <ng-template #noDataFound>\n                            <mat-option disabled>\n                                {{ commonConstant.NO_DATA_FOUND }}\n                            </mat-option>\n                        </ng-template>\n                    </mat-select>\n                    <mat-error *ngIf=\"meterFC.touched && meterFC.hasError('required')\">\n                        Select meter\n                    </mat-error>\n                </mat-form-field>\n            </div>\n        </div>\n\n        <div class=\"row mt-3\">\n            <div class=\"col-sm-12\">\n                <lib-message-alert *ngIf=\"alertObj.showAlert\" [labelInp]=\"alertObj.alertLabel\"\n                    [contentInp]=\"alertObj.alertContent\" [messageAlertTypeInp]=\"alertObj.messageAlertType\"\n                    [messageAlertIconInp]=\"alertObj.messageAlertIcon\">\n                </lib-message-alert>\n            </div>\n        </div>\n\n        <div class=\"row mt-3\">\n            <ng-container *ngIf=\"showLoader; else dataTemplate\">\n                <lib-skeleton-loader [count]=\"3\" [appearance]=\"''\"\n                    [theme]=\"{ 'border-radius': '16px', height: '40px', 'background-color': 'rgb(230 232 235)' }\"></lib-skeleton-loader>\n            </ng-container>\n            <ng-template #dataTemplate>\n                <div class=\"col-sm-4 mb-3\" *ngFor=\"let meterData of meterDataRes\">\n                    <mat-card class=\"cardOverwrite cardBackgroundColor\">\n                        <ng-container *ngTemplateOutlet=\"parameterData; context: {\n                            duration: dateService.getRelativeTimeAgoLabel(meterData?.data?.date),\n                            value: meterData?.data?.value,\n                            unit: meterData?.unit,\n                            label: meterData?.paramLabel,\n                            entityID: meterData?.entityID,\n                            paramName: meterData?.paramName\n                        }\"></ng-container>\n                    </mat-card>\n                </div>\n            </ng-template>\n        </div>\n\n    </div>\n</div>\n\n<ng-template #parameterData let-duration=\"duration\" let-label=\"label\" let-value=\"value\" let-unit=\"unit\"\n    let-entityID=\"entityID\" let-paramName=\"paramName\">\n    <div class=\"row\">\n        <div class=\"col-sm-6 textDurationWithAgoTime\">\n            {{ duration }}\n        </div>\n        <div class=\"col-sm-6 text-end\">\n            <a class=\"text-primary cursorPointer\" matTooltip=\"Trend\" matTooltipPosition=\"below\"\n                (click)=\"showTrend(paramName, entityID)\">\n                <span class=\"material-symbols-outlined fs-5 fw-bold\">trending_up</span>\n            </a>\n        </div>\n    </div>\n    <div class=\"row mt-3\">\n        <div class=\"col-sm-12 text-center\">\n            <span class=\"fs-1 fw-bold text-primary\">{{ value ? (value | number: '1.2-2') : commonConstant.HYPHEN\n                }}</span>\n            <span class=\"text-secondary fw-bold\"> {{ value ? unit : '' }} </span>\n        </div>\n    </div>\n    <div class=\"row mt-4 mb-4\">\n        <div class=\"col-sm-12 fs-5 text-center\">\n            {{ label }}\n        </div>\n    </div>\n</ng-template>","import { NgModule } from '@angular/core';\nimport { RouterModule, Routes } from '@angular/router';\n\nimport { MeterDataDashboardComponent } from './meter-data.component';\n\nconst routes: Routes = [\n    {\n        path: '',\n        component: MeterDataDashboardComponent\n    }\n];\n\n@NgModule({\n    imports: [RouterModule.forChild(routes)],\n    exports: [RouterModule]\n})\nexport class MeterDataRoutingModule { }\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\n\nimport { MeterDataRoutingModule } from './meter-data-routing.module';\nimport { MeterDataDashboardComponent } from './meter-data.component';\n\nimport { TrendModule } from '../../_shared/dialog/trend/trend.module';\n\nimport { TrendService } from '../../../service/trend.service';\n\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\n\nimport { MatCardModule } from '@angular/material/card';\nimport { MatTooltipModule } from '@angular/material/tooltip';\nimport { MatInputModule } from '@angular/material/input';\nimport { MatFormFieldModule } from '@angular/material/form-field';\nimport { MatSelectModule } from '@angular/material/select';\n\nimport { NgxMatSelectSearchModule } from 'ngx-mat-select-search';\n\n// tsc-library\nimport { MessageAlertModule, SkeletonModule } from '@library/tsc-common';\n// /tsc-library/\n\n\n@NgModule({\n    declarations: [\n        MeterDataDashboardComponent\n    ],\n    imports: [\n        CommonModule,\n        MeterDataRoutingModule,\n        TrendModule,\n        FormsModule,\n        ReactiveFormsModule,\n        MessageAlertModule,\n        SkeletonModule,\n        NgxMatSelectSearchModule,\n        MatCardModule,\n        MatTooltipModule,\n        MatInputModule,\n        MatFormFieldModule,\n        MatSelectModule\n    ],\n    providers: [TrendService]\n})\nexport class MeterDataDashboardModule { }\n","import { Component, OnInit } from '@angular/core';\n\n@Component({\n    selector: 'lib-cgwa',\n    templateUrl: './cgwa.component.html',\n    styles: [\n    ]\n})\nexport class CgwaReportComponent implements OnInit {\n\n    constructor() { }\n\n    ngOnInit(): void {\n    }\n\n}\n","<div class=\"card main-card cardOverwrite h100\">\n    <div class=\"headerContainer\">\n        <div class=\"headerLeftContainer\">\n            <div class=\"pageTitle\">CGWA Report</div>\n        </div>\n    </div>\n</div>","import { NgModule } from '@angular/core';\nimport { RouterModule, Routes } from '@angular/router';\n\nimport { CgwaReportComponent } from './cgwa.component';\n\nconst routes: Routes = [\n    {\n        path: '',\n        component: CgwaReportComponent\n    }\n];\n\n@NgModule({\n    imports: [RouterModule.forChild(routes)],\n    exports: [RouterModule]\n})\n\nexport class CgwaReportRoutingModule { }\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\n\nimport { CgwaReportRoutingModule } from './cgwa-routing.module';\nimport { CgwaReportComponent } from './cgwa.component';\n\n@NgModule({\n    declarations: [\n        CgwaReportComponent\n    ],\n    imports: [\n        CommonModule,\n        CgwaReportRoutingModule\n    ]\n})\nexport class CgwaReportModule { }\n","import { Injectable } from \"@angular/core\";\n\n// tsc-library\nimport { COMMON_CONSTANT } from \"@library/tsc-common\";\nimport { DateService } from \"@library/date\";\n// /tsc-library/\n\n@Injectable({\n    providedIn: 'root'\n})\n\nexport class ReportService {\n\n    constructor(\n        private dateService: DateService\n    ) { }\n\n    extractTimestamp(dataInp) {\n        if (!dataInp) {\n            return [];\n        }\n\n        const allTimestamp = dataInp.reduce((timestamps, dataValues) => {\n            if (dataValues && dataValues.data) {\n                dataValues.data.forEach(entry => {\n                    if (entry && entry.date) {\n                        timestamps.add(entry.date);\n                    }\n                });\n            }\n            return timestamps;\n        }, new Set<string>());\n\n        return Array.from(allTimestamp).sort();\n    }\n\n    populateTable(timestamp, dataInp, format): any[] {\n        return timestamp.map((time, index) => ({\n            index: index + 1,\n            time: this.dateService.formatDate(time, format),\n            data: dataInp.map(aggregation => {\n                const matchingEntry = aggregation.data.find(entry => entry.date == time);\n                return matchingEntry ? matchingEntry.value : COMMON_CONSTANT.HYPHEN;\n            })\n        }));\n    }\n\n}","import { Component, EventEmitter, Input, OnInit, Output, SimpleChanges } from '@angular/core';\n\nimport { FormControl } from '@angular/forms';\n\nimport { LIST_CONSTANT } from '../../../../constant/list.constant';\n\n@Component({\n    selector: 'lib-source-load',\n    templateUrl: './source-load.component.html',\n    styles: [\n    ]\n})\nexport class SourceLoadComponent implements OnInit {\n\n    @Input()\n    defaultCategoryInp: string;\n\n    listConstant = LIST_CONSTANT;\n\n    categoryFC = new FormControl(\"source\");\n\n    @Output()\n    emitFilter = new EventEmitter();\n\n    constructor() { }\n\n    ngOnInit(): void {\n    }\n\n    ngOnChanges(changes: SimpleChanges): void {\n        if (changes.defaultCategoryInp && this.defaultCategoryInp) {\n            this.categoryFC.patchValue(this.defaultCategoryInp);\n        }\n    }\n\n    ngAfterViewInit() {\n        this.emitFilter.emit();\n    }\n\n    categoryChange(selectedCategory) {\n        this.categoryFC.patchValue(selectedCategory);\n        this.emitFilter.emit();\n    }\n\n}\n","<mat-button-toggle-group class=\"matBtnFilter\" [formControl]=\"categoryFC\" (change)=\"categoryChange(categoryFC.value)\">\n    <mat-button-toggle *ngFor=\"let category of listConstant.SOURCE_LOAD\" value=\"{{ category.value }}\">\n        {{ category.label }}\n    </mat-button-toggle>\n</mat-button-toggle-group>","import { Component, OnInit, ViewChild } from '@angular/core';\n\nimport * as moment from 'moment-timezone';\n\nimport { ReportErrorEnum } from '../../../enum/error.enum';\nimport { DropdownTypeEnum } from '../../../enum/dropdown.enum';\n\nimport { AggregateDataRequest } from '../../../model/aggregate-data.model';\nimport { Alert, AlertM } from '../../../model/alert.model';\n\nimport { SourceLoadComponent } from '../../_shared/filter/source-load/source-load.component';\nimport { AggregationDurationComponent } from '../../dropdown/aggregation-duration/aggregation-duration.component';\nimport { EntityComponent } from '../../dropdown/entity/entity.component';\n\nimport { AggregateDataService } from '../../../service/aggregate-data.service';\nimport { ReportService } from '../../../service/report.service';\nimport { AlertService } from '../../../service/alert.service';\n\n// tsc-library\nimport { CUSTOM_RANGE_CONSTANT_EXCLUSIVE_DATE, DateFormatEnum, DateInputComponent, DateInputTypeEnum, DateTypeEnum } from '@library/date';\nimport { StorageService } from '@library/storage-service';\nimport { ToastrColor, ToastrService } from '@library/toastr-service';\nimport { ButtonLabelEnum, COMMON_CONSTANT, InvalidForm, MATERIAL_CONSTANT, MaterialFormFieldAppearance, MessageAlertIconEnum, MessageAlertTypeEnum, TSCCommonService } from '@library/tsc-common';\nimport { ApplicationKeyID } from '@library/application-service';\n// /tsc-library/\n\n@Component({\n    selector: 'lib-consumption-breakup',\n    templateUrl: './consumption-breakup.component.html',\n    styles: [\n    ]\n})\n\nexport class ConsumptionBreakupComponent implements OnInit {\n\n    materialConstant = MATERIAL_CONSTANT;\n    commonConstant = COMMON_CONSTANT;\n    customRangeConstant = CUSTOM_RANGE_CONSTANT_EXCLUSIVE_DATE;\n\n    materialFormFieldAppearance = MaterialFormFieldAppearance;\n    buttonLabelEnum = ButtonLabelEnum;\n    dropdownTypeEnum = DropdownTypeEnum;\n    dateFormatEnum = DateFormatEnum;\n    dateInputTypeEnum = DateInputTypeEnum;\n    dateTypeEnum = DateTypeEnum;\n\n    orgID: any;\n    applicationKeyID: any;\n    paramMetric: any;\n    timezone: string;\n    category: string;\n    startDate: string;\n    endDate: string;\n    aggDuration: string;\n    entityID: any;\n    timestamp: any;\n    renderTable: any;\n    reportData: any;\n    showAlert: boolean = false;\n    showLoader: boolean = false;\n\n    reportAlertObj: AlertM = new Alert();\n\n    @ViewChild('sourceLoadInput') sourceLoadInput: SourceLoadComponent;\n    @ViewChild('customDateInput') customDateInput: DateInputComponent;\n    @ViewChild('aggDurationInput') aggDurationInput: AggregationDurationComponent;\n    @ViewChild('entityInput') entityInput: EntityComponent;\n\n    constructor(\n        private storageService: StorageService,\n        private toastService: ToastrService,\n        private tscCommonService: TSCCommonService,\n        private aggregateDataService: AggregateDataService,\n        private reportService: ReportService,\n        private alertService: AlertService\n    ) { }\n\n    ngOnInit(): void {\n        this.orgID = this.storageService.getStorage('currentOrgID');\n        this.timezone = this.storageService.getStorage('timezone');\n        this.applicationKeyID = this.storageService.getStorage('applicationKeyID');\n\n        if (this.applicationKeyID == ApplicationKeyID.ENERGY_KEY_ID) {\n            this.paramMetric = \"engEnergyUsed\";\n        } else if (this.applicationKeyID == ApplicationKeyID.WATER_KEY_ID) {\n            this.paramMetric = \"gwFlowTotalizer\";\n        }\n    }\n\n    sourceLoadInpChange() {\n        this.category = this.sourceLoadInput.categoryFC.value;\n    }\n\n    dateInpChange() {\n        this.startDate = this.customDateInput.startDateFC.value;\n        this.endDate = this.customDateInput.endDateFC.value;\n    }\n\n    aggDurationInpChange() {\n        this.aggDuration = this.aggDurationInput.aggDurationFC.value;\n    }\n\n    entityInpChange() {\n        this.entityID = this.entityInput.multipleEntityFC.value;\n    }\n\n    async viewReport() {\n\n        this.alertService.resetAlertProperties(this.reportAlertObj);\n\n        if (this.isValidInputField()) {\n            this.toastService.openToast(InvalidForm.INVALID_FORM_TITLE, InvalidForm.INVALID_FORM_MESSAGE, ToastrColor.ERROR);\n            return;\n        }\n\n        if (this.startDate == this.endDate) {\n            this.alertService.setAlertProperties(this.reportAlertObj, ReportErrorEnum.INVALID_DATE_LABEL, ReportErrorEnum.INVALID_DATE_MESSAGE, MessageAlertTypeEnum.INFO, MessageAlertIconEnum.INFO_ICON);\n            return;\n        }\n\n        this.showLoader = true;\n\n        try {\n            const requestData = this.createDataRequest();\n\n            this.reportData = await this.aggregateDataService.getAggregateData(this.orgID, requestData);\n\n            if (this.reportData?.length > 0) {\n                this.timestamp = this.reportService.extractTimestamp(this.reportData);\n                this.renderTable = this.reportService.populateTable(this.timestamp, this.reportData, this.dateFormatEnum.DATE_TIME);\n            } else if (this.reportData?.length == 0) {\n                this.alertService.setAlertProperties(this.reportAlertObj, ReportErrorEnum.DATA_NOT_FOUND_LABEL, ReportErrorEnum.DATA_NOT_FOUND_MESSAGE, MessageAlertTypeEnum.WARNING, MessageAlertIconEnum.WARNING_ICON);\n            }\n\n        } catch (error) {\n            console.error(\"Error in viewReport()\", error);\n            this.alertService.setAlertProperties(this.reportAlertObj, ReportErrorEnum.INVALID_ERROR_LABEL, ReportErrorEnum.INVALID_ERROR_MESSAGE, MessageAlertTypeEnum.DANGER, MessageAlertIconEnum.DANGER_ICON);\n        } finally {\n            this.showLoader = false;\n        }\n    }\n\n    createDataRequest() {\n\n        if (this.entityID?.length > 0) {\n            this.entityID = this.tscCommonService.removeSelectAllID(this.entityID);\n        }\n\n        const requestData = new AggregateDataRequest();\n\n        requestData.startTime = this.startDate;\n        requestData.endTime = this.endDate;\n        requestData.interval = this.aggDuration;\n        requestData.entityID = [this.entityID];\n        requestData.params = [\n            {\n                name: this.paramMetric,\n                dsAgg: \"sum\",\n                agg: \"sum\",\n                source_or_load: this.category,\n                sourceLoadType: 'all'\n            }\n        ];\n        requestData.nullifyParams();\n\n        return requestData;\n    }\n\n    isValidInputField() {\n        const controls = [\n            this.customDateInput.startDateFC,\n            this.aggDurationInput.aggDurationFC,\n            this.entityInput.multipleEntityFC,\n        ];\n\n        controls.forEach(control => control.markAsTouched());\n        return controls.some(control => control.invalid);\n    }\n\n}","<div class=\"card main-card cardOverwrite h100\">\n    <div class=\"headerContainer\">\n        <div class=\"headerLeftContainer\">\n            <div class=\"pageTitle\">Consumption Breakup Report</div>\n        </div>\n    </div>\n\n    <div class=\"card-body\">\n        <div class=\"row\">\n            <div class=\"col-sm-4\">\n                <lib-source-load #sourceLoadInput (emitFilter)=\"sourceLoadInpChange()\"></lib-source-load>\n            </div>\n        </div>\n\n        <div class=\"row mt-3\">\n            <div class=\"col-sm-3\">\n                <lib-date-input #customDateInput (emitFilter)=\"dateInpChange()\" [materialFieldWidthInp]=\"true\"\n                    [materialFormFieldAppearanceInp]=\"materialFormFieldAppearance.FORM_FIELD_APPEARANCE\"\n                    [isMandatoryFieldInp]=\"true\" [dateInputTypeInp]=\"dateInputTypeEnum.CUSTOM_INPUT\"\n                    [dateTypeInp]=\"dateTypeEnum.EXCLUSIVE\" [showDefaultDurationInp]=\"true\" [showCdrRangeLabelInp]=\"true\"\n                    [labelInp]=\"'Select date'\" [timezoneInp]=\"timezone\" [rangeInp]=\"customRangeConstant\" [showTimeInCDRInp]=\"true\"\n                    [showRangeInp]=\"true\" [cdrFormatInp]=\"'YYYY-MM-DD HH:mm:ss'\"></lib-date-input>\n            </div>\n\n            <div class=\"col-sm-3\">\n                <lib-aggregation-duration #aggDurationInput\n                    (emitFilter)=\"aggDurationInpChange()\"></lib-aggregation-duration>\n            </div>\n\n            <div class=\"col-sm-3\">\n                <lib-entity #entityInput [dropdownTypeInp]=\"dropdownTypeEnum.MULTIPLE_DROPDOWN\"\n                    (emitFilter)=\"entityInpChange()\"></lib-entity>\n            </div>\n        </div>\n\n        <div class=\"row\">\n            <div class=\"col-sm-12\">\n                <div class=\"float-end\">\n                    <button class=\"btn btn-sm btn-primary\" type=\"button\" (click)=\"viewReport()\" matRipple\n                        [matRippleCentered]=\"materialConstant.MAT_RIPPLE_CENTER\">\n                        {{ buttonLabelEnum.READ_BTN_LABEL }}\n                    </button>\n                </div>\n            </div>\n        </div>\n\n        <div class=\"row\">\n            <div class=\"col-sm-12\">\n                <lib-message-alert *ngIf=\"reportAlertObj.showAlert\" [labelInp]=\"reportAlertObj.alertLabel\"\n                    [contentInp]=\"reportAlertObj.alertContent\" [messageAlertTypeInp]=\"reportAlertObj.messageAlertType\"\n                    [messageAlertIconInp]=\"reportAlertObj.messageAlertIcon\">\n                </lib-message-alert>\n            </div>\n        </div>\n\n        <div class=\"row\">\n            <div class=\"centerAlign\">\n                <lib-skeleton-loader *ngIf=\"showLoader\" [count]=\"3\" [appearance]=\"'circle'\"\n                    [theme]=\"{ height: '15px', width: '15px', 'background-color': '#e7ebf3' }\"></lib-skeleton-loader>\n            </div>\n        </div>\n\n        <div class=\"row mt-3\" *ngIf=\"reportData && reportData.length > 0\">\n            <div class=\"overflowX customScrollBar\">\n                <table class=\"table\">\n                    <tbody>\n                        <tr class=\"tableHeader\">\n                            <td class=\"fw-bold\"> Sr. No. </td>\n                            <td align=\"center\" class=\"fw-bold\"> Time </td>\n                            <ng-container *ngFor=\"let data of reportData; let i = index\">\n                                <td align=\"center\" class=\"fw-bold\">\n                                    {{ data.entityName }}<br />\n                                    {{ data.paramLabel }} ({{ data.unit }}) ({{ data.dsAgg }})\n                                </td>\n                            </ng-container>\n                        </tr>\n                    </tbody>\n                    <tbody>\n                        <tr *ngFor=\"let row of renderTable\">\n                            <td>{{ row.index }}</td>\n                            <td align=\"center\" class=\"colWidthContainingDateTime\">{{ row.time }}</td>\n                            <td align=\"center\" *ngFor=\"let value of row.data\">{{ value ? value : commonConstant.HYPHEN\n                                }}\n                            </td>\n                        </tr>\n                    </tbody>\n                </table>\n            </div>\n        </div>\n    </div>\n</div>","import { NgModule } from '@angular/core';\nimport { RouterModule, Routes } from '@angular/router';\nimport { ConsumptionBreakupComponent } from './consumption-breakup.component';\n\nconst routes: Routes = [\n    {\n        path: '',\n        component: ConsumptionBreakupComponent\n    }\n];\n\n@NgModule({\n    imports: [RouterModule.forChild(routes)],\n    exports: [RouterModule]\n})\nexport class ConsumptionBreakupRoutingModule { }\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\n\nimport { SourceLoadComponent } from './source-load.component';\n\nimport { ReactiveFormsModule, FormsModule } from '@angular/forms';\n\nimport { MatInputModule } from '@angular/material/input';\nimport { MatButtonToggleModule } from '@angular/material/button-toggle';\n\n@NgModule({\n    declarations: [\n        SourceLoadComponent\n    ],\n    imports: [\n        CommonModule,\n        FormsModule,\n        ReactiveFormsModule,\n        MatInputModule,\n        MatButtonToggleModule\n    ],\n    exports: [\n        SourceLoadComponent\n    ]\n})\nexport class SourceLoadModule { }\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\n\nimport { ConsumptionBreakupRoutingModule } from './consumption-breakup-routing.module';\nimport { ConsumptionBreakupComponent } from './consumption-breakup.component';\n\nimport { SourceLoadModule } from '../../_shared/filter/source-load/source-load.module';\nimport { AggregationDurationModule } from '../../dropdown/aggregation-duration/aggregation-duration.module';\nimport { EntityModule } from '../../dropdown/entity/entity.module';\n\nimport { MatTableModule } from '@angular/material/table';\nimport { MatRippleModule } from '@angular/material/core';\n\n// tsc-library\nimport { DateInputModule } from '@library/date';\nimport { MessageAlertModule, SkeletonModule } from '@library/tsc-common';\n// /tsc-library/\n\n\n@NgModule({\n    declarations: [\n        ConsumptionBreakupComponent\n    ],\n    imports: [\n        CommonModule,\n        ConsumptionBreakupRoutingModule,\n        SourceLoadModule,\n        DateInputModule,\n        AggregationDurationModule,\n        EntityModule,\n        SkeletonModule,\n        MessageAlertModule,\n        MatTableModule,\n        MatRippleModule\n    ]\n})\nexport class ConsumptionBreakupModule { }\n","import { Component, OnInit, ViewChild } from '@angular/core';\n\nimport * as moment from 'moment-timezone';\n\nimport { DropdownTypeEnum } from '../../../enum/dropdown.enum';\nimport { ReportErrorEnum } from '../../../enum/error.enum';\n\nimport { AggregateDataRequest } from '../../../model/aggregate-data.model';\nimport { Alert, AlertM } from '../../../model/alert.model';\n\nimport { EntityComponent } from '../../dropdown/entity/entity.component';\nimport { DeviceComponent } from '../../dropdown/device/device.component';\nimport { ParamMetricComponent } from '../../dropdown/param-metric/param-metric.component';\n\nimport { AggregateDataService } from '../../../service/aggregate-data.service';\nimport { ReportService } from '../../../service/report.service';\nimport { AlertService } from '../../../service/alert.service';\n\n// tsc-library\nimport { DateFormatEnum, DateInputComponent, DateInputTypeEnum, DateTypeEnum, CUSTOM_RANGE_CONSTANT_EXCLUSIVE_DATE } from '@library/date';\nimport { StorageService } from '@library/storage-service';\nimport { ToastrColor, ToastrService } from '@library/toastr-service';\nimport { ButtonLabelEnum, COMMON_CONSTANT, InvalidForm, MATERIAL_CONSTANT, MaterialFormFieldAppearance, MessageAlertIconEnum, MessageAlertTypeEnum, TSCCommonService } from '@library/tsc-common';\n// /tsc-library/\n\n@Component({\n    selector: 'lib-data-availability',\n    templateUrl: './data-availability.component.html',\n    styles: [\n    ]\n})\nexport class DataAvailabilityReportComponent implements OnInit {\n\n    materialConstant = MATERIAL_CONSTANT;\n    commonConstant = COMMON_CONSTANT;\n    customRangeConstant = CUSTOM_RANGE_CONSTANT_EXCLUSIVE_DATE;\n\n    materialFormFieldAppearance = MaterialFormFieldAppearance;\n    buttonLabelEnum = ButtonLabelEnum;\n    dropdownTypeEnum = DropdownTypeEnum;\n    dateFormatEnum = DateFormatEnum;\n    dateInputTypeEnum = DateInputTypeEnum;\n    dateTypeEnum = DateTypeEnum;\n\n    orgID: any;\n    timezone: string;\n    startDate: string;\n    endDate: string;\n    entityID: any;\n    deviceID: any;\n    parameterList: any[] = [];\n    timestamp: any;\n    renderTable: any;\n    reportData: any;\n    showAlert: boolean = false;\n    showLoader: boolean = false;\n\n    reportAlertObj: AlertM = new Alert();\n\n    @ViewChild('customDateInput') customDateInput: DateInputComponent;\n    @ViewChild('entityInput') entityInput: EntityComponent;\n    @ViewChild('deviceInput') deviceInput: DeviceComponent;\n    @ViewChild('paramInput') paramInput: ParamMetricComponent;\n\n    constructor(\n        private storageService: StorageService,\n        private toastService: ToastrService,\n        private tscCommonService: TSCCommonService,\n        private aggregateDataService: AggregateDataService,\n        private reportService: ReportService,\n        private alertService: AlertService\n    ) { }\n\n    ngOnInit(): void {\n        this.orgID = this.storageService.getStorage('currentOrgID');\n        this.timezone = this.storageService.getStorage('timezone');\n    }\n\n    dateInpChange() {\n        this.startDate = this.customDateInput.startDateFC.value;\n        this.endDate = this.customDateInput.endDateFC.value;\n    }\n\n    entityInpChange() {\n        this.entityID = this.entityInput.entityFC.value;\n\n        this.paramInput?.parameterFC.reset();\n        this.paramInput?.parameterFC.updateValueAndValidity();\n    }\n\n    deviceInpChange() {\n        this.deviceID = this.deviceInput.deviceFC.value;\n\n        this.paramInput?.parameterFC.reset();\n        this.paramInput?.parameterFC.updateValueAndValidity();\n    }\n\n    paramInpChange() {\n        let paramMetric = this.paramInput?.parameterFC.value;\n\n        if (paramMetric.length > 0) {\n            this.parameterList = this.tscCommonService.removeSelectAllID(paramMetric);\n        }\n    }\n\n    async viewReport() {\n\n        this.alertService.resetAlertProperties(this.reportAlertObj);\n\n        if (this.isValidInputField()) {\n            this.toastService.openToast(InvalidForm.INVALID_FORM_TITLE, InvalidForm.INVALID_FORM_MESSAGE, ToastrColor.ERROR);\n            return;\n        }\n\n        if (this.startDate == this.endDate) {\n            this.alertService.setAlertProperties(this.reportAlertObj, ReportErrorEnum.INVALID_DATE_LABEL, ReportErrorEnum.INVALID_DATE_MESSAGE, MessageAlertTypeEnum.INFO, MessageAlertIconEnum.INFO_ICON);\n            return;\n        }\n\n        this.showLoader = true;\n\n        try {\n            //INFO: SOMYA AGRAWAL, to discuss..\n\n        } catch (error) {\n            console.error(\"Error in viewReport()\", error);\n            this.alertService.setAlertProperties(this.reportAlertObj, ReportErrorEnum.INVALID_ERROR_LABEL, ReportErrorEnum.INVALID_ERROR_MESSAGE, MessageAlertTypeEnum.DANGER, MessageAlertIconEnum.DANGER_ICON);\n        } finally {\n            this.showLoader = false;\n        }\n    }\n\n    isValidInputField() {\n        const controls = [\n            this.customDateInput.startDateFC,\n            this.entityInput.entityFC,\n            this.deviceInput.deviceFC,\n            this.paramInput.parameterFC\n        ];\n\n        controls.forEach(control => control.markAsTouched());\n        return controls.some(control => control.invalid);\n    }\n\n}\n","<div class=\"card main-card cardOverwrite h100\">\n    <div class=\"headerContainer\">\n        <div class=\"headerLeftContainer\">\n            <div class=\"pageTitle\">Data Availability Report</div>\n        </div>\n    </div>\n\n    <div class=\"card-body\">\n        <div class=\"row\">\n            <div class=\"col-sm-3\">\n                <lib-date-input #customDateInput (emitFilter)=\"dateInpChange()\" [materialFieldWidthInp]=\"true\"\n                    [materialFormFieldAppearanceInp]=\"materialFormFieldAppearance.FORM_FIELD_APPEARANCE\"\n                    [isMandatoryFieldInp]=\"true\" [dateInputTypeInp]=\"dateInputTypeEnum.CUSTOM_INPUT\"\n                    [dateTypeInp]=\"dateTypeEnum.EXCLUSIVE\" [showDefaultDurationInp]=\"true\" [showCdrRangeLabelInp]=\"true\"\n                    [labelInp]=\"'Select date'\" [timezoneInp]=\"timezone\" [rangeInp]=\"customRangeConstant\" [showTimeInCDRInp]=\"true\"\n                    [showRangeInp]=\"true\" [cdrFormatInp]=\"'YYYY-MM-DD HH:mm:ss'\"></lib-date-input>\n            </div>\n\n            <div class=\"col-sm-3\">\n                <lib-entity #entityInput (emitFilter)=\"entityInpChange()\"></lib-entity>\n            </div>\n\n            <div class=\"col-sm-3\">\n                <lib-device #deviceInput [dropdownTypeInp]=\"dropdownTypeEnum.SINGLE_DROPDOWN\" [entityInp]=\"entityID\"\n                    (emitFilter)=\"deviceInpChange()\"></lib-device>\n            </div>\n\n            <div class=\"col-sm-3\">\n                <lib-param-metric #paramInput [deviceInp]=\"deviceID\" (emitFilter)=\"paramInpChange()\"></lib-param-metric>\n            </div>\n        </div>\n\n        <div class=\"row\">\n            <div class=\"col-sm-12\">\n                <div class=\"float-end\">\n                    <button class=\"btn btn-sm btn-primary\" type=\"button\" (click)=\"viewReport()\" matRipple\n                        [matRippleCentered]=\"materialConstant.MAT_RIPPLE_CENTER\">\n                        {{ buttonLabelEnum.READ_BTN_LABEL }}\n                    </button>\n                </div>\n            </div>\n        </div>\n\n        <div class=\"row\">\n            <div class=\"col-sm-12\">\n                <lib-message-alert *ngIf=\"reportAlertObj.showAlert\" [labelInp]=\"reportAlertObj.alertLabel\"\n                    [contentInp]=\"reportAlertObj.alertContent\" [messageAlertTypeInp]=\"reportAlertObj.messageAlertType\"\n                    [messageAlertIconInp]=\"reportAlertObj.messageAlertIcon\">\n                </lib-message-alert>\n            </div>\n        </div>\n\n        <div class=\"row\">\n            <div class=\"centerAlign\">\n                <lib-skeleton-loader *ngIf=\"showLoader\" [count]=\"3\" [appearance]=\"'circle'\"\n                    [theme]=\"{ height: '15px', width: '15px', 'background-color': '#e7ebf3' }\"></lib-skeleton-loader>\n            </div>\n        </div>\n\n        <div class=\"row mt-3\" *ngIf=\"reportData && reportData.length > 0\">\n            <div class=\"overflowX customScrollBar\">\n                <table class=\"table\">\n                    <tbody>\n                        <tr class=\"tableHeader\">\n                            <td class=\"fw-bold\"> Sr. No. </td>\n                            <td align=\"center\" class=\"fw-bold\"> Entity </td>\n                            <td align=\"center\" class=\"fw-bold\"> Device </td>\n                            <td align=\"center\" class=\"fw-bold\"> Parameter </td>\n                            <td align=\"center\" class=\"fw-bold\"> Min Value </td>\n                            <td align=\"center\" class=\"fw-bold\"> Max Value </td>\n                            <td align=\"center\" class=\"fw-bold\"> Avg Value </td>\n                            <td align=\"center\" class=\"fw-bold\"> Data availability (%) </td>\n                        </tr>\n                    </tbody>\n                    <tbody>\n                        <!-- INFO: SOMYA AGRAWAL, to discuss.. -->\n                    </tbody>\n                </table>\n            </div>\n        </div>\n    </div>\n</div>","import { NgModule } from '@angular/core';\nimport { RouterModule, Routes } from '@angular/router';\n\nimport { DataAvailabilityReportComponent } from './data-availability.component';\n\nconst routes: Routes = [\n    {\n        path: '',\n        component: DataAvailabilityReportComponent\n    }\n];\n\n@NgModule({\n    imports: [RouterModule.forChild(routes)],\n    exports: [RouterModule]\n})\n\nexport class DataAvailabilityReportRoutingModule { }\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\n\nimport { DataAvailabilityReportRoutingModule } from './data-availability-routing.module';\nimport { DataAvailabilityReportComponent } from './data-availability.component';\n\nimport { EntityModule } from '../../dropdown/entity/entity.module';\nimport { DeviceModule } from '../../dropdown/device/device.module';\nimport { ParamMetricModule } from '../../dropdown/param-metric/param-metric.module';\n\nimport { MatTableModule } from '@angular/material/table';\nimport { MatRippleModule } from '@angular/material/core';\n\n// tsc-library\nimport { DateInputModule } from '@library/date';\nimport { MessageAlertModule, SkeletonModule } from '@library/tsc-common';\n// /tsc-library/\n\n@NgModule({\n    declarations: [\n        DataAvailabilityReportComponent\n    ],\n    imports: [\n        CommonModule,\n        DataAvailabilityReportRoutingModule,\n        DateInputModule,\n        EntityModule,\n        DeviceModule,\n        ParamMetricModule,\n        SkeletonModule,\n        MessageAlertModule,\n        MatTableModule,\n        MatRippleModule,\n    ]\n})\nexport class DataAvailabilityReportModule { }\n","import { Component, OnInit, ViewChild } from '@angular/core';\nimport { FormControl } from '@angular/forms';\n\nimport * as moment from 'moment-timezone';\n\nimport { ReportErrorEnum } from '../../../enum/error.enum';\n\nimport { AggregateDataRequest } from '../../../model/aggregate-data.model';\nimport { DevicesWithEntities, DevicesWithEntitiesM } from '../../../model/device.model';\nimport { Alert, AlertM } from '../../../model/alert.model';\n\nimport { AggregationDurationComponent } from '../../dropdown/aggregation-duration/aggregation-duration.component';\nimport { ParamMetricComponent } from '../../dropdown/param-metric/param-metric.component';\n\nimport { EntityDeviceService } from '../../../service/entity-device.service';\nimport { AggregateDataService } from '../../../service/aggregate-data.service';\nimport { ReportService } from '../../../service/report.service';\nimport { AlertService } from '../../../service/alert.service';\n\n// tsc-library\nimport { CUSTOM_RANGE_CONSTANT_EXCLUSIVE_DATE, DateFormatEnum, DateInputComponent, DateInputTypeEnum, DateTypeEnum } from '@library/date';\nimport { StorageService } from '@library/storage-service';\nimport { ToastrColor, ToastrService } from '@library/toastr-service';\nimport { ButtonLabelEnum, COMMON_CONSTANT, InvalidForm, MATERIAL_CONSTANT, MatSelectSearchService, MaterialFormFieldAppearance, MessageAlertIconEnum, MessageAlertTypeEnum, TSCCommonService } from '@library/tsc-common';\nimport { ApplicationKeyID } from '@library/application-service';\n// /tsc-library/\n\n@Component({\n    selector: 'lib-meter',\n    templateUrl: './meter.component.html',\n    styles: [\n    ]\n})\nexport class MeterReportComponent implements OnInit {\n\n    materialConstant = MATERIAL_CONSTANT;\n    commonConstant = COMMON_CONSTANT;\n    customRangeConstant = CUSTOM_RANGE_CONSTANT_EXCLUSIVE_DATE;\n\n    materialFormFieldAppearance = MaterialFormFieldAppearance;\n    buttonLabelEnum = ButtonLabelEnum;\n    dateFormatEnum = DateFormatEnum;\n    dateInputTypeEnum = DateInputTypeEnum;\n    dateTypeEnum = DateTypeEnum;\n\n    orgID: any;\n    applicationKeyID: any;\n    paramMetric: any;\n    timezone: string;\n    startDate: string;\n    endDate: string;\n    aggDuration: string;\n    entityID: any;\n    parameterList: any[] = [];\n    timestamp: any;\n    renderTable: any;\n    reportData: any;\n    showAlert: boolean = false;\n    showLoader: boolean = false;\n\n    entityDeviceM = [new DevicesWithEntities()];\n    reportAlertObj: AlertM = new Alert();\n\n    meterFC: FormControl = new FormControl();\n\n    meterSearchUtil: MatSelectSearchService = new MatSelectSearchService(['name']);\n\n    @ViewChild('customDateInput') customDateInput: DateInputComponent;\n    @ViewChild('aggDurationInput') aggDurationInput: AggregationDurationComponent;\n    @ViewChild('paramInput') paramInput: ParamMetricComponent;\n\n    constructor(\n        private storageService: StorageService,\n        private toastService: ToastrService,\n        private tscCommonService: TSCCommonService,\n        private entityDeviceService: EntityDeviceService,\n        private aggregateDataService: AggregateDataService,\n        private reportService: ReportService,\n        private alertService: AlertService\n    ) { }\n\n    ngOnInit(): void {\n        this.orgID = this.storageService.getStorage('currentOrgID');\n        this.timezone = this.storageService.getStorage('timezone');\n        this.applicationKeyID = this.storageService.getStorage('applicationKeyID');\n\n        if (this.applicationKeyID == ApplicationKeyID.ENERGY_KEY_ID) {\n            this.paramMetric = \"engEnergyUsed\";\n        } else if (this.applicationKeyID == ApplicationKeyID.WATER_KEY_ID) {\n            this.paramMetric = \"gwFlowTotalizer\";\n        }\n\n        this.getDevicesWithEntitiesByParameter();\n    }\n\n    async getDevicesWithEntitiesByParameter() {\n        this.entityDeviceM = <DevicesWithEntitiesM[]>await this.entityDeviceService.getDevicesWithEntitiesByParameter(this.orgID, this.paramMetric);\n\n        this.meterSearchUtil.entityArr = this.entityDeviceM;\n        this.meterSearchUtil.createSubscription();\n\n        if (this.entityDeviceM.length > 1) {\n            const deviceID = this.entityDeviceM?.[0]?.['devices']?.[0]?.['id'];\n            this.meterFC.patchValue(deviceID);\n            this.entityID = this.getEntityIDByDeviceID(deviceID);\n        }\n    }\n\n    meterChange(selectedMeter) {\n        this.paramInput?.parameterFC.reset();\n        this.paramInput?.parameterFC.updateValueAndValidity();\n\n        this.meterFC.patchValue(selectedMeter);\n        this.entityID = this.getEntityIDByDeviceID(selectedMeter);\n    }\n\n    getEntityIDByDeviceID(deviceID) {\n        for (const entity of this.entityDeviceM) {\n            for (const device of entity.devices) {\n                if (device.id == deviceID) {\n                    return entity.id;\n                }\n            }\n        }\n        return null;\n    }\n\n    dateInpChange() {\n        this.startDate = this.customDateInput.startDateFC.value;\n        this.endDate = this.customDateInput.endDateFC.value;\n    }\n\n    aggDurationInpChange() {\n        this.aggDuration = this.aggDurationInput.aggDurationFC.value;\n    }\n\n    paramInpChange() {\n        let paramMetric = this.paramInput?.parameterFC.value;\n\n        if (paramMetric.length > 0) {\n            this.parameterList = this.tscCommonService.removeSelectAllID(paramMetric);\n        }\n    }\n\n    async viewReport() {\n\n        this.alertService.resetAlertProperties(this.reportAlertObj);\n\n        if (this.isValidInputField()) {\n            this.toastService.openToast(InvalidForm.INVALID_FORM_TITLE, InvalidForm.INVALID_FORM_MESSAGE, ToastrColor.ERROR);\n            return;\n        }\n\n        if (this.startDate == this.endDate) {\n            this.alertService.setAlertProperties(this.reportAlertObj, ReportErrorEnum.INVALID_DATE_LABEL, ReportErrorEnum.INVALID_DATE_MESSAGE, MessageAlertTypeEnum.INFO, MessageAlertIconEnum.INFO_ICON);\n            return;\n        }\n\n        this.showLoader = true;\n\n        try {\n            const requestData = this.createDataRequest();\n\n            this.reportData = await this.aggregateDataService.getAggregateData(this.orgID, requestData);\n\n            if (this.reportData?.length > 0) {\n                this.timestamp = this.reportService.extractTimestamp(this.reportData);\n                this.renderTable = this.reportService.populateTable(this.timestamp, this.reportData, this.dateFormatEnum.DATE_TIME);\n            } else if (this.reportData?.length == 0) {\n                this.alertService.setAlertProperties(this.reportAlertObj, ReportErrorEnum.DATA_NOT_FOUND_LABEL, ReportErrorEnum.DATA_NOT_FOUND_MESSAGE, MessageAlertTypeEnum.WARNING, MessageAlertIconEnum.WARNING_ICON);\n            }\n\n        } catch (error) {\n            console.error(\"Error in viewReport()\", error);\n            this.alertService.setAlertProperties(this.reportAlertObj, ReportErrorEnum.INVALID_ERROR_LABEL, ReportErrorEnum.INVALID_ERROR_MESSAGE, MessageAlertTypeEnum.DANGER, MessageAlertIconEnum.DANGER_ICON);\n        } finally {\n            this.showLoader = false;\n        }\n    }\n\n    createDataRequest() {\n\n        const requestData = new AggregateDataRequest();\n\n        requestData.startTime = this.startDate;\n        requestData.endTime = this.endDate;\n        requestData.interval = this.aggDuration;\n        requestData.entityID = [this.entityID];\n        requestData.deviceID = [this.meterFC.value];\n        requestData.params = [];\n        for (const paramMetric of this.parameterList) {\n            requestData.params.push({\n                name: paramMetric,\n                dsAgg: \"avg\",\n                agg: \"avg\"\n            });\n        }\n        requestData.nullifyParams();\n\n        return requestData;\n    }\n\n    isValidInputField() {\n        const controls = [\n            this.customDateInput.startDateFC,\n            this.aggDurationInput.aggDurationFC,\n            this.meterFC,\n            this.paramInput.parameterFC\n        ];\n\n        controls.forEach(control => control.markAsTouched());\n        return controls.some(control => control.invalid);\n    }\n\n}\n","<div class=\"card main-card cardOverwrite h100\">\n    <div class=\"headerContainer\">\n        <div class=\"headerLeftContainer\">\n            <div class=\"pageTitle\">Meter Report</div>\n        </div>\n    </div>\n\n    <div class=\"card-body\">\n        <div class=\"row\">\n            <div class=\"col-sm-3\">\n                <lib-date-input #customDateInput (emitFilter)=\"dateInpChange()\" [materialFieldWidthInp]=\"true\"\n                    [materialFormFieldAppearanceInp]=\"materialFormFieldAppearance.FORM_FIELD_APPEARANCE\"\n                    [isMandatoryFieldInp]=\"true\" [dateInputTypeInp]=\"dateInputTypeEnum.CUSTOM_INPUT\"\n                    [dateTypeInp]=\"dateTypeEnum.EXCLUSIVE\" [showDefaultDurationInp]=\"true\" [showCdrRangeLabelInp]=\"true\"\n                    [labelInp]=\"'Select date'\" [timezoneInp]=\"timezone\" [rangeInp]=\"customRangeConstant\" [showTimeInCDRInp]=\"true\"\n                    [showRangeInp]=\"true\" [cdrFormatInp]=\"'YYYY-MM-DD HH:mm:ss'\"></lib-date-input>\n            </div>\n\n            <div class=\"col-sm-3\">\n                <lib-aggregation-duration #aggDurationInput\n                    (emitFilter)=\"aggDurationInpChange()\"></lib-aggregation-duration>\n            </div>\n\n            <div class=\"col-sm-3\">\n                <mat-form-field class=\"matFieldWidth100\" [appearance]=\"materialFormFieldAppearance.FORM_FIELD_APPEARANCE\">\n                    <mat-label>Select meter</mat-label>\n                    <mat-select (selectionChange)=\"meterChange($event.value)\" [formControl]=\"meterFC\">\n                        <ng-container *ngIf=\"entityDeviceM && entityDeviceM.length > 1; else noDataFound\">\n                            <mat-option>\n                                <ngx-mat-select-search [formControl]=\"meterSearchUtil.filterFC\" placeholderLabel=\"Search by entity name\"\n                                    noEntriesFoundLabel=\"No matching name found.\">\n                                </ngx-mat-select-search>\n                            </mat-option>\n                            <mat-optgroup *ngFor=\"let entity of meterSearchUtil.filteredEntities | async\" [label]=\"entity.name\"\n                                [disabled]=\"entity.disabled\">\n                                <mat-option *ngFor=\"let device of entity.devices\" [value]=\"device.id\">\n                                    {{ device.name }}\n                                </mat-option>\n                            </mat-optgroup>\n                        </ng-container>\n                        <ng-template #noDataFound>\n                            <mat-option disabled>\n                                {{ commonConstant.NO_DATA_FOUND }}\n                            </mat-option>\n                        </ng-template>\n                    </mat-select>\n                    <mat-error *ngIf=\"meterFC.touched && meterFC.hasError('required')\">\n                        Select meter\n                    </mat-error>\n                </mat-form-field>\n            </div>\n\n            <div class=\"col-sm-3\">\n                <lib-param-metric #paramInput [deviceInp]=\"meterFC.value\" (emitFilter)=\"paramInpChange()\"></lib-param-metric>\n            </div>\n        </div>\n\n        <div class=\"row\">\n            <div class=\"col-sm-12\">\n                <div class=\"float-end\">\n                    <button class=\"btn btn-sm btn-primary\" type=\"button\" (click)=\"viewReport()\" matRipple\n                        [matRippleCentered]=\"materialConstant.MAT_RIPPLE_CENTER\">\n                        {{ buttonLabelEnum.READ_BTN_LABEL }}\n                    </button>\n                </div>\n            </div>\n        </div>\n\n        <div class=\"row\">\n            <div class=\"col-sm-12\">\n                <lib-message-alert *ngIf=\"reportAlertObj.showAlert\" [labelInp]=\"reportAlertObj.alertLabel\"\n                    [contentInp]=\"reportAlertObj.alertContent\" [messageAlertTypeInp]=\"reportAlertObj.messageAlertType\"\n                    [messageAlertIconInp]=\"reportAlertObj.messageAlertIcon\">\n                </lib-message-alert>\n            </div>\n        </div>\n\n        <div class=\"row\">\n            <div class=\"centerAlign\">\n                <lib-skeleton-loader *ngIf=\"showLoader\" [count]=\"3\" [appearance]=\"'circle'\"\n                    [theme]=\"{ height: '15px', width: '15px', 'background-color': '#e7ebf3' }\"></lib-skeleton-loader>\n            </div>\n        </div>\n\n        <div class=\"row mt-3\" *ngIf=\"reportData && reportData.length > 0\">\n            <div class=\"overflowX customScrollBar\">\n                <table class=\"table\">\n                    <tbody>\n                        <tr class=\"tableHeader\">\n                            <td class=\"fw-bold\"> Sr. No. </td>\n                            <td align=\"center\" class=\"fw-bold\"> Time </td>\n                            <ng-container *ngFor=\"let data of reportData; let i = index\">\n                                <td align=\"center\" class=\"fw-bold\">\n                                    {{ data.paramLabel }} ({{ data.unit }}) ({{ data.dsAgg }})\n                                </td>\n                            </ng-container>\n                        </tr>\n                    </tbody>\n                    <tbody>\n                        <tr *ngFor=\"let row of renderTable\">\n                            <td>{{ row.index }}</td>\n                            <td align=\"center\" class=\"colWidthContainingDateTime\">{{ row.time }}</td>\n                            <td align=\"center\" *ngFor=\"let value of row.data\">{{ value ? value : commonConstant.HYPHEN\n                                }}\n                            </td>\n                        </tr>\n                    </tbody>\n                </table>\n            </div>\n        </div>\n    </div>\n</div>","import { NgModule } from '@angular/core';\nimport { RouterModule, Routes } from '@angular/router';\n\nimport { MeterReportComponent } from './meter.component';\n\nconst routes: Routes = [\n    {\n        path: '',\n        component: MeterReportComponent\n    }\n];\n\n@NgModule({\n  imports: [RouterModule.forChild(routes)],\n  exports: [RouterModule]\n})\nexport class MeterReportRoutingModule { }\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\n\nimport { MeterReportRoutingModule } from './meter-routing.module';\nimport { MeterReportComponent } from './meter.component';\n\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\n\nimport { AggregationDurationModule } from '../../dropdown/aggregation-duration/aggregation-duration.module';\nimport { ParamMetricModule } from '../../dropdown/param-metric/param-metric.module';\n\nimport { MatInputModule } from '@angular/material/input';\nimport { MatFormFieldModule } from '@angular/material/form-field';\nimport { MatSelectModule } from '@angular/material/select';\nimport { MatTableModule } from '@angular/material/table';\nimport { MatRippleModule } from '@angular/material/core';\n\nimport { NgxMatSelectSearchModule } from 'ngx-mat-select-search';\n\n// tsc-library\nimport { DateInputModule } from '@library/date';\nimport { MessageAlertModule, SkeletonModule } from '@library/tsc-common';\n// /tsc-library/\n\n@NgModule({\n    declarations: [\n        MeterReportComponent\n    ],\n    imports: [\n        CommonModule,\n        MeterReportRoutingModule,\n        FormsModule,\n        ReactiveFormsModule,\n        DateInputModule,\n        AggregationDurationModule,\n        ParamMetricModule,\n        MessageAlertModule,\n        SkeletonModule,\n        NgxMatSelectSearchModule,\n        MatInputModule,\n        MatFormFieldModule,\n        MatSelectModule,\n        MatTableModule,\n        MatRippleModule\n    ]\n})\nexport class MeterReportModule { }\n","import { Component, OnInit, ViewChild } from '@angular/core';\n\nimport * as moment from 'moment-timezone';\n\nimport { DropdownTypeEnum } from '../../../enum/dropdown.enum';\nimport { ReportErrorEnum } from '../../../enum/error.enum';\n\nimport { AggregateDataRequest } from '../../../model/aggregate-data.model';\nimport { Parameter, ParameterM } from '../../../model/parameter.model';\nimport { Alert, AlertM } from '../../../model/alert.model';\n\nimport { AggregationDurationComponent } from '../../dropdown/aggregation-duration/aggregation-duration.component';\nimport { EntityComponent } from '../../dropdown/entity/entity.component';\nimport { DeviceComponent } from '../../dropdown/device/device.component';\nimport { ParamMetricComponent } from '../../dropdown/param-metric/param-metric.component';\nimport { AggregationComponent } from '../../dropdown/aggregation/aggregation.component';\n\nimport { AggregateDataService } from '../../../service/aggregate-data.service';\nimport { ParameterService } from '../../../service/parameter.service';\nimport { ReportService } from '../../../service/report.service';\nimport { AlertService } from '../../../service/alert.service';\n\n// tsc-library\nimport { CUSTOM_RANGE_CONSTANT_EXCLUSIVE_DATE, DateFormatEnum, DateInputComponent, DateInputTypeEnum, DateTypeEnum } from '@library/date';\nimport { StorageService } from '@library/storage-service';\nimport { ToastrColor, ToastrService } from '@library/toastr-service';\nimport { ButtonLabelEnum, COMMON_CONSTANT, InvalidForm, MATERIAL_CONSTANT, MaterialFormFieldAppearance, MessageAlertIconEnum, MessageAlertTypeEnum, TSCCommonService } from '@library/tsc-common';\n// /tsc-library/\n\n@Component({\n    selector: 'lib-parameter',\n    templateUrl: './parameter.component.html',\n    styles: [\n    ]\n})\nexport class ParameterReportComponent implements OnInit {\n\n    materialConstant = MATERIAL_CONSTANT;\n    commonConstant = COMMON_CONSTANT;\n    customRangeConstant = CUSTOM_RANGE_CONSTANT_EXCLUSIVE_DATE;\n\n    materialFormFieldAppearance = MaterialFormFieldAppearance;\n    buttonLabelEnum = ButtonLabelEnum;\n    dropdownTypeEnum = DropdownTypeEnum;\n    dateFormatEnum = DateFormatEnum;\n    dateInputTypeEnum = DateInputTypeEnum;\n    dateTypeEnum = DateTypeEnum;\n\n    orgID: any;\n    timezone: string;\n    startDate: string;\n    endDate: string;\n    aggDuration: string;\n    entityID: any;\n    deviceID: any;\n    paramMetric: any[] = [];\n    parameterList: any;\n    metricListArray: any[] = [];\n    timestamp: any;\n    renderTable: any;\n    reportData: any;\n    showAlert: boolean = false;\n    showLoader: boolean = false;\n\n    parameterM = [new Parameter()];\n    reportAlertObj: AlertM = new Alert();\n\n    @ViewChild('customDateInput') customDateInput: DateInputComponent;\n    @ViewChild('aggDurationInput') aggDurationInput: AggregationDurationComponent;\n    @ViewChild('entityInput') entityInput: EntityComponent;\n    @ViewChild('deviceInput') deviceInput: DeviceComponent;\n    @ViewChild('paramInput') paramInput: ParamMetricComponent;\n    @ViewChild('aggInput') aggInput: AggregationComponent;\n\n    constructor(\n        private storageService: StorageService,\n        private toastService: ToastrService,\n        private tscCommonService: TSCCommonService,\n        private aggregateDataService: AggregateDataService,\n        private parameterService: ParameterService,\n        private reportService: ReportService,\n        private alertService: AlertService\n    ) { }\n\n    ngOnInit(): void {\n        this.orgID = this.storageService.getStorage('currentOrgID');\n        this.timezone = this.storageService.getStorage('timezone');\n\n        this.getParameterByLayoutID();\n    }\n\n    async getParameterByLayoutID() {\n        this.parameterM = <ParameterM[]>await this.parameterService.getParameterByLayoutID(this.orgID);\n    }\n\n    dateInpChange() {\n        this.startDate = this.customDateInput.startDateFC.value;\n        this.endDate = this.customDateInput.endDateFC.value;\n    }\n\n    aggDurationInpChange() {\n        this.aggDuration = this.aggDurationInput.aggDurationFC.value;\n    }\n\n    entityInpChange() {\n        this.entityID = this.entityInput.entityFC.value;\n\n        this.paramInput?.parameterFC.reset();\n        this.paramInput?.parameterFC.updateValueAndValidity();\n        this.parameterList = [];\n    }\n\n    deviceInpChange() {\n        this.deviceID = this.deviceInput.deviceFC.value;\n\n        this.paramInput?.parameterFC.reset();\n        this.paramInput?.parameterFC.updateValueAndValidity();\n        this.parameterList = [];\n    }\n\n    paramInpChange() {\n        this.paramMetric = this.paramInput?.parameterFC.value;\n\n        if (this.paramMetric?.length > 0) {\n            this.parameterList = this.tscCommonService.removeSelectAllID(this.paramMetric);\n        }\n    }\n\n    aggInpChange(dsAgg?: any, metric?: any) {\n        const metricList: any[] = [];\n\n        if (dsAgg) {\n            dsAgg.forEach(aggregation => {\n                const metricObject = {\n                    name: metric,\n                    dsAgg: aggregation,\n                    agg: \"avg\"\n                };\n                metricList.push(metricObject);\n            });\n        }\n\n        this.metricListArray = this.metricListArray.filter(entry => entry.name != metric);\n\n        this.metricListArray.push(...metricList);\n    }\n\n    async viewReport() {\n\n        this.alertService.resetAlertProperties(this.reportAlertObj);\n\n        if (this.isValidInputField()) {\n            this.toastService.openToast(InvalidForm.INVALID_FORM_TITLE, InvalidForm.INVALID_FORM_MESSAGE, ToastrColor.ERROR);\n            return;\n        }\n\n        if (this.startDate == this.endDate) {\n            this.alertService.setAlertProperties(this.reportAlertObj, ReportErrorEnum.INVALID_DATE_LABEL, ReportErrorEnum.INVALID_DATE_MESSAGE, MessageAlertTypeEnum.INFO, MessageAlertIconEnum.INFO_ICON);\n            return;\n        }\n\n        this.showLoader = true;\n\n        try {\n            const requestData = this.createDataRequest();\n\n            this.reportData = await this.aggregateDataService.getAggregateData(this.orgID, requestData);\n\n            if (this.reportData?.length > 0) {\n                this.timestamp = this.reportService.extractTimestamp(this.reportData);\n                this.renderTable = this.reportService.populateTable(this.timestamp, this.reportData, this.dateFormatEnum.DATE_TIME);\n            } else if (this.reportData?.length == 0) {\n                this.alertService.setAlertProperties(this.reportAlertObj, ReportErrorEnum.DATA_NOT_FOUND_LABEL, ReportErrorEnum.DATA_NOT_FOUND_MESSAGE, MessageAlertTypeEnum.WARNING, MessageAlertIconEnum.WARNING_ICON);\n            }\n\n        } catch (error) {\n            console.error(\"Error in viewReport()\", error);\n            this.alertService.setAlertProperties(this.reportAlertObj, ReportErrorEnum.INVALID_ERROR_LABEL, ReportErrorEnum.INVALID_ERROR_MESSAGE, MessageAlertTypeEnum.DANGER, MessageAlertIconEnum.DANGER_ICON);\n        } finally {\n            this.showLoader = false;\n        }\n    }\n\n    createDataRequest() {\n\n        const filteredMetricListArray = this.metricListArray.filter(metric => this.parameterList.includes(metric.name));\n\n        const requestData = new AggregateDataRequest();\n\n        requestData.startTime = this.startDate;\n        requestData.endTime = this.endDate;\n        requestData.interval = this.aggDuration;\n        requestData.entityID = [this.entityID];\n        requestData.deviceID = [this.deviceID];\n        requestData.params = [];\n        requestData.params.push(\n            ...filteredMetricListArray.map(metric => ({\n                name: metric.name,\n                dsAgg: metric.dsAgg,\n                agg: metric.agg,\n            }))\n        );\n        requestData.nullifyParams();\n\n        return requestData;\n    }\n\n    isValidInputField() {\n        const controls = [\n            this.customDateInput.startDateFC,\n            this.aggDurationInput.aggDurationFC,\n            this.entityInput.entityFC,\n            this.deviceInput.deviceFC,\n            this.paramInput.parameterFC\n        ];\n\n        controls.forEach(control => control.markAsTouched());\n        return controls.some(control => control.invalid);\n    }\n\n    getParameterLabel(paramMetricValue) {\n        const parameter = this.tscCommonService.getUniqueObject(this.parameterM, 'paramMetric', paramMetricValue);\n        return parameter ? parameter.label : '';\n    }\n\n}","<div class=\"card main-card cardOverwrite h100\">\n    <div class=\"headerContainer\">\n        <div class=\"headerLeftContainer\">\n            <div class=\"pageTitle\">Parameter Report</div>\n        </div>\n    </div>\n\n    <div class=\"card-body\">\n        <div class=\"row\">\n            <div class=\"col-sm-3\">\n                <lib-date-input #customDateInput (emitFilter)=\"dateInpChange()\" [materialFieldWidthInp]=\"true\"\n                    [materialFormFieldAppearanceInp]=\"materialFormFieldAppearance.FORM_FIELD_APPEARANCE\"\n                    [isMandatoryFieldInp]=\"true\" [dateInputTypeInp]=\"dateInputTypeEnum.CUSTOM_INPUT\"\n                    [dateTypeInp]=\"dateTypeEnum.EXCLUSIVE\" [showDefaultDurationInp]=\"true\" [showCdrRangeLabelInp]=\"true\"\n                    [labelInp]=\"'Select date'\" [timezoneInp]=\"timezone\" [rangeInp]=\"customRangeConstant\" [showTimeInCDRInp]=\"true\"\n                    [showRangeInp]=\"true\" [cdrFormatInp]=\"'YYYY-MM-DD HH:mm:ss'\"></lib-date-input>\n            </div>\n\n            <div class=\"col-sm-3\">\n                <lib-aggregation-duration #aggDurationInput\n                    (emitFilter)=\"aggDurationInpChange()\"></lib-aggregation-duration>\n            </div>\n\n            <div class=\"col-sm-3\">\n                <lib-entity #entityInput (emitFilter)=\"entityInpChange()\"></lib-entity>\n            </div>\n\n            <div class=\"col-sm-3\">\n                <lib-device #deviceInput [dropdownTypeInp]=\"dropdownTypeEnum.SINGLE_DROPDOWN\" [entityInp]=\"entityID\"\n                    (emitFilter)=\"deviceInpChange()\"></lib-device>\n            </div>\n        </div>\n\n        <div class=\"row\">\n            <div class=\"col-sm-3\">\n                <lib-param-metric #paramInput [deviceInp]=\"deviceID\" (emitFilter)=\"paramInpChange()\"></lib-param-metric>\n            </div>\n        </div>\n\n        <div class=\"row\" *ngIf=\"paramMetric && paramMetric.length > 0\">\n            <table class=\"table\">\n                <tbody>\n                    <tr class=\"tableHeader\">\n                        <td align=\"center\" class=\"fw-bold\"> Metric </td>\n                        <td align=\"center\" class=\"fw-bold\"> Aggregation </td>\n                    </tr>\n                </tbody>\n                <tbody>\n                    <tr *ngFor=\"let metric of parameterList; let i = index\">\n                        <td align=\"center\">\n                            <div class=\"mt-4\">\n                                {{ getParameterLabel(metric) }}\n                            </div>\n                        </td>\n                        <td align=\"center\">\n                            <div class=\"col-sm-6 mt-3\">\n                                <lib-aggregation #aggInput\n                                    (emitFilter)=\"aggInpChange(aggInput.aggregationFC.value, metric)\"></lib-aggregation>\n                            </div>\n                        </td>\n                    </tr>\n                </tbody>\n            </table>\n        </div>\n\n        <div class=\"row\">\n            <div class=\"col-sm-12\">\n                <div class=\"float-end\">\n                    <button class=\"btn btn-sm btn-primary\" type=\"button\" (click)=\"viewReport()\" matRipple\n                        [matRippleCentered]=\"materialConstant.MAT_RIPPLE_CENTER\">\n                        {{ buttonLabelEnum.READ_BTN_LABEL }}\n                    </button>\n                </div>\n            </div>\n        </div>\n\n        <div class=\"row\">\n            <div class=\"col-sm-12\">\n                <lib-message-alert *ngIf=\"reportAlertObj.showAlert\" [labelInp]=\"reportAlertObj.alertLabel\"\n                    [contentInp]=\"reportAlertObj.alertContent\" [messageAlertTypeInp]=\"reportAlertObj.messageAlertType\"\n                    [messageAlertIconInp]=\"reportAlertObj.messageAlertIcon\">\n                </lib-message-alert>\n            </div>\n        </div>\n\n        <div class=\"row\">\n            <div class=\"centerAlign\">\n                <lib-skeleton-loader *ngIf=\"showLoader\" [count]=\"3\" [appearance]=\"'circle'\"\n                    [theme]=\"{ height: '15px', width: '15px', 'background-color': '#e7ebf3' }\"></lib-skeleton-loader>\n            </div>\n        </div>\n\n        <div class=\"row mt-3\" *ngIf=\"reportData && reportData.length > 0\">\n            <div class=\"overflowX customScrollBar\">\n                <table class=\"table\">\n                    <tbody>\n                        <tr class=\"tableHeader\">\n                            <td class=\"fw-bold\"> Sr. No. </td>\n                            <td align=\"center\" class=\"fw-bold\"> Time </td>\n                            <ng-container *ngFor=\"let data of reportData; let i = index\">\n                                <td align=\"center\" class=\"fw-bold\">\n                                    {{ data.paramLabel }} ({{ data.unit }}) ({{ data.dsAgg }})\n                                </td>\n                            </ng-container>\n                        </tr>\n                    </tbody>\n                    <tbody>\n                        <tr *ngFor=\"let row of renderTable\">\n                            <td>{{ row.index }}</td>\n                            <td align=\"center\" class=\"colWidthContainingDateTime\">{{ row.time }}</td>\n                            <td align=\"center\" *ngFor=\"let value of row.data\">{{ value ? value : commonConstant.HYPHEN\n                                }}\n                            </td>\n                        </tr>\n                    </tbody>\n                </table>\n            </div>\n        </div>\n    </div>\n</div>","import { NgModule } from '@angular/core';\nimport { RouterModule, Routes } from '@angular/router';\n\nimport { ParameterReportComponent } from './parameter.component';\n\nconst routes: Routes = [\n    {\n        path: '',\n        component: ParameterReportComponent\n    }\n];\n\n@NgModule({\n    imports: [RouterModule.forChild(routes)],\n    exports: [RouterModule]\n})\n\nexport class ParameterReportRoutingModule { }\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\n\nimport { ParameterReportRoutingModule } from './parameter-routing.module';\nimport { ParameterReportComponent } from './parameter.component';\n\nimport { AggregationDurationModule } from '../../dropdown/aggregation-duration/aggregation-duration.module';\nimport { EntityModule } from '../../dropdown/entity/entity.module';\nimport { DeviceModule } from '../../dropdown/device/device.module';\nimport { ParamMetricModule } from '../../dropdown/param-metric/param-metric.module';\nimport { AggregationModule } from '../../dropdown/aggregation/aggregation.module';\n\nimport { MatTableModule } from '@angular/material/table';\nimport { MatRippleModule } from '@angular/material/core';\n\n// tsc-library\nimport { DateInputModule } from '@library/date';\nimport { MessageAlertModule, SkeletonModule } from '@library/tsc-common';\n// /tsc-library/\n\n@NgModule({\n    declarations: [\n        ParameterReportComponent\n    ],\n    imports: [\n        CommonModule,\n        ParameterReportRoutingModule,\n        DateInputModule,\n        AggregationDurationModule,\n        EntityModule,\n        DeviceModule,\n        ParamMetricModule,\n        AggregationModule,\n        SkeletonModule,\n        MessageAlertModule,\n        MatTableModule,\n        MatRippleModule\n    ]\n})\nexport class ParameterReportModule { }\n","import { Component, OnInit, ViewChild } from '@angular/core';\n\nimport * as moment from 'moment-timezone';\n\nimport { DropdownTypeEnum } from '../../../enum/dropdown.enum';\nimport { ReportErrorEnum } from '../../../enum/error.enum';\n\nimport { Parameter, ParameterM } from '../../../model/parameter.model';\nimport { Alert, AlertM } from '../../../model/alert.model';\nimport { AggregateDataRequest } from '../../../model/aggregate-data.model';\n\nimport { EntityComponent } from '../../dropdown/entity/entity.component';\nimport { DeviceComponent } from '../../dropdown/device/device.component';\n\nimport { AggregateDataService } from '../../../service/aggregate-data.service';\nimport { ParameterService } from '../../../service/parameter.service';\nimport { ReportService } from '../../../service/report.service';\nimport { AlertService } from '../../../service/alert.service';\n\n// tsc-library\nimport { CUSTOM_RANGE_CONSTANT_EXCLUSIVE_DATE, DateFormatEnum, DateInputComponent, DateInputTypeEnum, DateTypeEnum } from '@library/date';\nimport { StorageService } from '@library/storage-service';\nimport { ToastrColor, ToastrService } from '@library/toastr-service';\nimport { ButtonLabelEnum, COMMON_CONSTANT, InvalidForm, MATERIAL_CONSTANT, MaterialFormFieldAppearance, MessageAlertIconEnum, MessageAlertTypeEnum, TSCCommonService } from '@library/tsc-common';\n// /tsc-library/\n\n\n@Component({\n    selector: 'lib-raw-data',\n    templateUrl: './raw-data.component.html',\n    styles: [\n    ]\n})\nexport class RawDataReportComponent implements OnInit {\n\n    materialConstant = MATERIAL_CONSTANT;\n    commonConstant = COMMON_CONSTANT;\n    customRangeConstant = CUSTOM_RANGE_CONSTANT_EXCLUSIVE_DATE;\n\n    materialFormFieldAppearance = MaterialFormFieldAppearance;\n    buttonLabelEnum = ButtonLabelEnum;\n    dropdownTypeEnum = DropdownTypeEnum;\n    dateFormatEnum = DateFormatEnum;\n    dateInputTypeEnum = DateInputTypeEnum;\n    dateTypeEnum = DateTypeEnum;\n\n    orgID: any;\n    timezone: string;\n    startDate: string;\n    endDate: string;\n    entityID: any;\n    deviceID: any;\n    dayDifference: any;\n    timestamp: any;\n    renderTable: any;\n    reportData: any;\n    showAlert: boolean = false;\n    showLoader: boolean = false;\n\n    parameterM = [new Parameter()];\n    reportAlertObj: AlertM = new Alert();\n\n    @ViewChild('customDateInput') customDateInput: DateInputComponent;\n    @ViewChild('entityInput') entityInput: EntityComponent;\n    @ViewChild('deviceInput') deviceInput: DeviceComponent;\n\n    constructor(\n        private storageService: StorageService,\n        private toastService: ToastrService,\n        private tscCommonService: TSCCommonService,\n        private aggregateDataService: AggregateDataService,\n        private parameterService: ParameterService,\n        private reportService: ReportService,\n        private alertService: AlertService\n    ) { }\n\n    ngOnInit(): void {\n        this.orgID = this.storageService.getStorage('currentOrgID');\n        this.timezone = this.storageService.getStorage('timezone');\n    }\n\n    dateInpChange() {\n        this.startDate = this.customDateInput.startDateFC.value;\n        this.endDate = this.customDateInput.endDateFC.value;\n    }\n\n    entityInpChange() {\n        this.entityID = this.entityInput.entityFC.value;\n    }\n\n    deviceInpChange() {\n        this.deviceID = this.deviceInput.deviceFC.value;\n\n        if (this.deviceID) {\n            this.getParameterByDeviceID(this.deviceID);\n        }\n    }\n\n    async getParameterByDeviceID(deviceID) {\n        let requestBody = {};\n        requestBody['deviceID'] = [deviceID];\n\n        this.parameterM = <ParameterM[]>await this.parameterService.getParameterByDeviceID(this.orgID, requestBody);\n    }\n\n    async viewReport() {\n\n        this.alertService.resetAlertProperties(this.reportAlertObj);\n\n        if (!this.parameterM || this.parameterM.length == 0 || !this.parameterM[0]['id']) {\n            await this.getParameterByDeviceID(this.deviceID);\n        }\n\n        if (this.isValidInputField()) {\n            this.toastService.openToast(InvalidForm.INVALID_FORM_TITLE, InvalidForm.INVALID_FORM_MESSAGE, ToastrColor.ERROR);\n            return;\n        }\n\n        if (this.startDate == this.endDate) {\n            this.alertService.setAlertProperties(this.reportAlertObj, ReportErrorEnum.INVALID_DATE_LABEL, ReportErrorEnum.INVALID_DATE_MESSAGE, MessageAlertTypeEnum.INFO, MessageAlertIconEnum.INFO_ICON);\n            return;\n        }\n\n        this.dayDifference = this.getTimeDifference(this.startDate, this.endDate);\n\n        if (this.dayDifference <= 1) {\n\n            try {\n                this.showLoader = true;\n\n                const requestData = this.createDataRequest();\n\n                this.reportData = await this.aggregateDataService.getAggregateData(this.orgID, requestData);\n\n                if (this.reportData?.length > 0) {\n                    this.timestamp = this.reportService.extractTimestamp(this.reportData);\n                    this.renderTable = this.reportService.populateTable(this.timestamp, this.reportData, this.dateFormatEnum.DATE_TIME);\n                } else if (this.reportData?.length == 0) {\n                    this.alertService.setAlertProperties(this.reportAlertObj, ReportErrorEnum.DATA_NOT_FOUND_LABEL, ReportErrorEnum.DATA_NOT_FOUND_MESSAGE, MessageAlertTypeEnum.WARNING, MessageAlertIconEnum.WARNING_ICON);\n                }\n\n            } catch (error) {\n                console.error(\"Error in viewReport()\", error);\n                this.alertService.setAlertProperties(this.reportAlertObj, ReportErrorEnum.INVALID_ERROR_LABEL, ReportErrorEnum.INVALID_ERROR_MESSAGE, MessageAlertTypeEnum.DANGER, MessageAlertIconEnum.DANGER_ICON);\n            } finally {\n                this.showLoader = false;\n            }\n\n        } else {\n            this.alertService.setAlertProperties(this.reportAlertObj, ReportErrorEnum.TIME_EXCEEDED_LABEL, ReportErrorEnum.TIME_EXCEEDED_MESSAGE, MessageAlertTypeEnum.INFO, MessageAlertIconEnum.INFO_ICON);\n        }\n\n    }\n\n    createDataRequest() {\n        const requestData = new AggregateDataRequest();\n\n        requestData.startTime = this.startDate;\n        requestData.endTime = this.endDate;\n        requestData.interval = \"raw\";\n        requestData.entityID = [this.entityID];\n        requestData.deviceID = [this.deviceID];\n\n        requestData.params = this.parameterM.map(param => ({\n            name: param.paramMetric,\n            dsAgg: 'avg',\n            agg: 'avg'\n        }));\n        requestData.nullifyParams();\n\n        return requestData;\n    }\n\n    isValidInputField() {\n        const controls = [\n            this.customDateInput.startDateFC,\n            this.entityInput.entityFC,\n            this.deviceInput.deviceFC,\n        ];\n\n        controls.forEach(control => control.markAsTouched());\n        return controls.some(control => control.invalid);\n    }\n\n    getTimeDifference(startTime: string, endTime: string): number {\n        const date1 = new Date(startTime).getTime();\n        const date2 = new Date(endTime).getTime();\n        const diffTime = Math.abs(date2 - date1);\n        const diffDays = Math.ceil(diffTime / (1000 * 60 * 60 * 24));\n        return diffDays;\n    }\n\n}\n","<div class=\"card main-card cardOverwrite h100\">\n    <div class=\"headerContainer\">\n        <div class=\"headerLeftContainer\">\n            <div class=\"pageTitle\">Raw Data Report</div>\n        </div>\n    </div>\n\n    <div class=\"card-body\">\n        <div class=\"row\">\n            <div class=\"col-sm-3\">\n                <lib-date-input #customDateInput (emitFilter)=\"dateInpChange()\" [materialFieldWidthInp]=\"true\"\n                    [materialFormFieldAppearanceInp]=\"materialFormFieldAppearance.FORM_FIELD_APPEARANCE\"\n                    [isMandatoryFieldInp]=\"true\" [dateInputTypeInp]=\"dateInputTypeEnum.CUSTOM_INPUT\"\n                    [dateTypeInp]=\"dateTypeEnum.EXCLUSIVE\" [showDefaultDurationInp]=\"true\" [showCdrRangeLabelInp]=\"true\"\n                    [labelInp]=\"'Select date'\" [timezoneInp]=\"timezone\" [rangeInp]=\"customRangeConstant\" [showTimeInCDRInp]=\"true\"\n                    [showRangeInp]=\"true\" [cdrFormatInp]=\"'YYYY-MM-DD HH:mm:ss'\"></lib-date-input>\n            </div>\n\n            <div class=\"col-sm-3\">\n                <lib-entity #entityInput (emitFilter)=\"entityInpChange()\"></lib-entity>\n            </div>\n\n            <div class=\"col-sm-3\">\n                <lib-device #deviceInput [dropdownTypeInp]=\"dropdownTypeEnum.SINGLE_DROPDOWN\" [entityInp]=\"entityID\"\n                    (emitFilter)=\"deviceInpChange()\"></lib-device>\n            </div>\n        </div>\n\n        <div class=\"row\">\n            <div class=\"col-sm-12\">\n                <div class=\"float-end\">\n                    <button class=\"btn btn-sm btn-primary\" type=\"button\" (click)=\"viewReport()\" matRipple\n                        [matRippleCentered]=\"materialConstant.MAT_RIPPLE_CENTER\">\n                        {{ buttonLabelEnum.READ_BTN_LABEL }}\n                    </button>\n                </div>\n            </div>\n        </div>\n\n        <div class=\"row\">\n            <div class=\"col-sm-12\">\n                <lib-message-alert *ngIf=\"reportAlertObj.showAlert\" [labelInp]=\"reportAlertObj.alertLabel\"\n                    [contentInp]=\"reportAlertObj.alertContent\" [messageAlertTypeInp]=\"reportAlertObj.messageAlertType\"\n                    [messageAlertIconInp]=\"reportAlertObj.messageAlertIcon\">\n                </lib-message-alert>\n            </div>\n        </div>\n\n        <div class=\"row\">\n            <div class=\"centerAlign\">\n                <lib-skeleton-loader *ngIf=\"showLoader\" [count]=\"3\" [appearance]=\"'circle'\"\n                    [theme]=\"{ height: '15px', width: '15px', 'background-color': '#e7ebf3' }\"></lib-skeleton-loader>\n            </div>\n        </div>\n\n        <div class=\"row mt-3\" *ngIf=\"reportData && reportData.length > 0\">\n            <div class=\"overflowX customScrollBar\">\n                <table class=\"table\">\n                    <tbody>\n                        <tr class=\"tableHeader\">\n                            <td class=\"fw-bold\"> Sr. No. </td>\n                            <td align=\"center\" class=\"fw-bold\"> Time </td>\n                            <ng-container *ngFor=\"let data of reportData; let i = index\">\n                                <td align=\"center\" class=\"fw-bold\">\n                                    {{ data.paramLabel }} ({{ data.unit }}) ({{ data.dsAgg }})\n                                </td>\n                            </ng-container>\n                        </tr>\n                    </tbody>\n                    <tbody>\n                        <tr *ngFor=\"let row of renderTable\">\n                            <td>{{ row.index }}</td>\n                            <td align=\"center\" class=\"colWidthContainingDateTime\">{{ row.time }}</td>\n                            <td align=\"center\" *ngFor=\"let value of row.data\">{{ value ? value : commonConstant.HYPHEN\n                                }}\n                            </td>\n                        </tr>\n                    </tbody>\n                </table>\n            </div>\n        </div>\n    </div>\n</div>","import { NgModule } from '@angular/core';\nimport { RouterModule, Routes } from '@angular/router';\n\nimport { RawDataReportComponent } from './raw-data.component';\n\nconst routes: Routes = [\n    {\n        path: '',\n        component: RawDataReportComponent\n    }\n];\n\n@NgModule({\n    imports: [RouterModule.forChild(routes)],\n    exports: [RouterModule]\n})\n\nexport class RawDataReportRoutingModule { }\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\n\nimport { RawDataReportRoutingModule } from './raw-data-routing.module';\nimport { RawDataReportComponent } from './raw-data.component';\n\nimport { EntityModule } from '../../dropdown/entity/entity.module';\nimport { DeviceModule } from '../../dropdown/device/device.module';\n\nimport { MatTableModule } from '@angular/material/table';\nimport { MatRippleModule } from '@angular/material/core';\n\n// tsc-library\nimport { DateInputModule } from '@library/date';\nimport { MessageAlertModule, SkeletonModule } from '@library/tsc-common';\n// /tsc-library/\n\n@NgModule({\n    declarations: [\n        RawDataReportComponent\n    ],\n    imports: [\n        CommonModule,\n        RawDataReportRoutingModule,\n        DateInputModule,\n        EntityModule,\n        DeviceModule,\n        SkeletonModule,\n        MessageAlertModule,\n        MatTableModule,\n        MatRippleModule\n    ]\n})\nexport class RawDataReportModule { }\n","import { Component, OnInit, ViewChild } from '@angular/core';\nimport { FormControl, Validators } from '@angular/forms';\n\nimport * as moment from 'moment-timezone';\n\nimport { DropdownTypeEnum } from '../../../enum/dropdown.enum';\nimport { ReportErrorEnum } from '../../../enum/error.enum';\n\nimport { AggregateDataRequest } from '../../../model/aggregate-data.model';\nimport { Parameter, ParameterM } from '../../../model/parameter.model';\nimport { Entity, EntityM } from '../../../model/entity.model';\nimport { Alert, AlertM } from '../../../model/alert.model';\n\nimport { AggregationDurationComponent } from '../../dropdown/aggregation-duration/aggregation-duration.component';\n\nimport { AggregateDataService } from '../../../service/aggregate-data.service';\nimport { ParameterService } from '../../../service/parameter.service';\nimport { EntityService } from '../../../service/entity.service';\nimport { ReportService } from '../../../service/report.service';\nimport { AlertService } from '../../../service/alert.service';\n\n// tsc-library\nimport { CUSTOM_RANGE_CONSTANT_EXCLUSIVE_DATE, DateFormatEnum, DateInputComponent, DateInputTypeEnum, DateTypeEnum } from '@library/date';\nimport { StorageService } from '@library/storage-service';\nimport { ToastrColor, ToastrService } from '@library/toastr-service';\nimport { ButtonLabelEnum, COMMON_CONSTANT, InvalidForm, MATERIAL_CONSTANT, MatSelectSearchService, MaterialFormFieldAppearance, MessageAlertIconEnum, MessageAlertTypeEnum, TSCCommonService } from '@library/tsc-common';\n// /tsc-library/\n\n@Component({\n    selector: 'lib-derived-parameter',\n    templateUrl: './derived-parameter.component.html',\n    styles: [\n    ]\n})\nexport class DerivedParameterComponent implements OnInit {\n\n    materialConstant = MATERIAL_CONSTANT;\n    commonConstant = COMMON_CONSTANT;\n    customRangeConstant = CUSTOM_RANGE_CONSTANT_EXCLUSIVE_DATE;\n\n    materialFormFieldAppearance = MaterialFormFieldAppearance;\n    buttonLabelEnum = ButtonLabelEnum;\n    dropdownTypeEnum = DropdownTypeEnum;\n    dateFormatEnum = DateFormatEnum;\n    dateInputTypeEnum = DateInputTypeEnum;\n    dateTypeEnum = DateTypeEnum;\n\n    orgID: any;\n    timezone: string;\n    startDate: string;\n    endDate: string;\n    aggDuration: string;\n    timestamp: any;\n    renderTable: any;\n    reportData: any;\n    selectedParamMetric: any;\n    showAlert: boolean = false;\n    showLoader: boolean = false;\n    totalParameterCount: number = 0;\n    allParameterID: any[] = [];\n\n    parameterM = [new Parameter()];\n    entityM = [new Entity()];\n\n    parameterFC: FormControl = new FormControl([], [Validators.required]);\n    entityFC: FormControl = new FormControl([], [Validators.required]);\n\n    paramSearchUtil: MatSelectSearchService = new MatSelectSearchService(['label']);\n    entitySearchUtil: MatSelectSearchService = new MatSelectSearchService(['name']);\n\n    reportAlertObj: AlertM = new Alert();\n\n    @ViewChild('customDateInput') customDateInput: DateInputComponent;\n    @ViewChild('aggDurationInput') aggDurationInput: AggregationDurationComponent;\n\n    constructor(\n        private storageService: StorageService,\n        private toastService: ToastrService,\n        private tscCommonService: TSCCommonService,\n        private aggregateDataService: AggregateDataService,\n        private parameterService: ParameterService,\n        private entityService: EntityService,\n        private reportService: ReportService,\n        private alertService: AlertService\n    ) { }\n\n    ngOnInit(): void {\n        this.orgID = this.storageService.getStorage('currentOrgID');\n        this.timezone = this.storageService.getStorage('timezone');\n\n        this.getDerivedParameterByLayoutID();\n    }\n\n    dateInpChange() {\n        this.startDate = this.customDateInput.startDateFC.value;\n        this.endDate = this.customDateInput.endDateFC.value;\n    }\n\n    aggDurationInpChange() {\n        this.aggDuration = this.aggDurationInput.aggDurationFC.value;\n    }\n\n    async getDerivedParameterByLayoutID() {\n        this.parameterM = <ParameterM[]>await this.parameterService.getDerivedParameterByLayoutID(this.orgID);\n\n        this.paramSearchUtil.entityArr = this.parameterM;\n        this.paramSearchUtil.createSubscription();\n\n        this.totalParameterCount = this.parameterM.length;\n        this.parameterM.forEach(parameter => this.allParameterID.push(parameter['paramMetric']));\n    }\n\n    selectAllParameters() {\n        if (!this.parameterFC.value.includes(-1)) {\n            this.parameterFC.reset([]);\n            return;\n        }\n        this.parameterFC.setValue([-1, ...this.allParameterID]);\n\n        this.getEntityByParameterID();\n    }\n\n    selectedParameters() {\n        const selected = this.parameterFC.value;\n\n        if (selected.includes(-1)) {\n            selected.shift();\n            this.parameterFC.patchValue(selected);\n        } else if (this.parameterFC.value.length == this.totalParameterCount) {\n            this.allParameterID.splice(0, 0, -1);\n            this.parameterFC.patchValue(this.allParameterID);\n        } else {\n            const filteredSelected = selected.filter(s => s != -1);\n            this.parameterFC.patchValue(filteredSelected);\n        }\n\n        this.getEntityByParameterID();\n    }\n\n    async getEntityByParameterID() {\n\n        this.entityFC.reset();\n\n        this.selectedParamMetric = this.tscCommonService.removeSelectAllID(this.parameterFC.value);\n        let parameter = this.parameterM.filter(param => this.selectedParamMetric.includes(param.paramMetric));\n        let parameterID = parameter.map(param => param.id);\n\n        let requestBody = {};\n        requestBody['parameterID'] = parameterID;\n\n        this.entityM = <EntityM[]>await this.entityService.getEntityByParameterID(this.orgID, requestBody);\n\n        this.entitySearchUtil.entityArr = this.entityM;\n        this.entitySearchUtil.createSubscription();\n    }\n\n    entityChange(selectedEntity) {\n        this.entityFC.patchValue(selectedEntity);\n    }\n\n    async viewReport() {\n\n        this.alertService.resetAlertProperties(this.reportAlertObj);\n\n        if (this.isValidInputField()) {\n            this.toastService.openToast(InvalidForm.INVALID_FORM_TITLE, InvalidForm.INVALID_FORM_MESSAGE, ToastrColor.ERROR);\n            return;\n        }\n\n        if (this.startDate == this.endDate) {\n            this.alertService.setAlertProperties(this.reportAlertObj, ReportErrorEnum.INVALID_DATE_LABEL, ReportErrorEnum.INVALID_DATE_MESSAGE, MessageAlertTypeEnum.INFO, MessageAlertIconEnum.INFO_ICON);\n            return;\n        }\n\n        this.showLoader = true;\n\n        try {\n            const requestData = this.createDataRequest();\n\n            this.reportData = await this.aggregateDataService.getAggregateData(this.orgID, requestData);\n\n            if (this.reportData?.length > 0) {\n                this.timestamp = this.reportService.extractTimestamp(this.reportData);\n                this.renderTable = this.reportService.populateTable(this.timestamp, this.reportData, this.dateFormatEnum.DATE_TIME);\n            } else if (this.reportData?.length == 0) {\n                this.alertService.setAlertProperties(this.reportAlertObj, ReportErrorEnum.DATA_NOT_FOUND_LABEL, ReportErrorEnum.DATA_NOT_FOUND_MESSAGE, MessageAlertTypeEnum.WARNING, MessageAlertIconEnum.WARNING_ICON);\n            }\n\n        } catch (error) {\n            console.error(\"Error in viewReport()\", error);\n            this.alertService.setAlertProperties(this.reportAlertObj, ReportErrorEnum.INVALID_ERROR_LABEL, ReportErrorEnum.INVALID_ERROR_MESSAGE, MessageAlertTypeEnum.DANGER, MessageAlertIconEnum.DANGER_ICON);\n        } finally {\n            this.showLoader = false;\n        }\n    }\n\n    createDataRequest() {\n\n        const requestData = new AggregateDataRequest();\n\n        requestData.startTime = this.startDate;\n        requestData.endTime = this.endDate;\n        requestData.interval = this.aggDuration;\n        requestData.entityID = [this.entityFC.value];\n        requestData.params = [];\n        for (const paramMetric of this.selectedParamMetric) {\n            requestData.params.push({\n                name: paramMetric,\n                dsAgg: \"sum\",\n                agg: \"sum\"\n            });\n        }\n        requestData.nullifyParams();\n\n        return requestData;\n    }\n\n    isValidInputField() {\n        const controls = [\n            this.customDateInput.startDateFC,\n            this.aggDurationInput.aggDurationFC,\n            this.parameterFC,\n            this.entityFC\n        ];\n\n        controls.forEach(control => control.markAsTouched());\n        return controls.some(control => control.invalid);\n    }\n\n}\n","<div class=\"card main-card cardOverwrite h100\">\n    <div class=\"headerContainer\">\n        <div class=\"headerLeftContainer\">\n            <div class=\"pageTitle\">Derived Parameter Report</div>\n        </div>\n    </div>\n\n    <div class=\"card-body\">\n        <div class=\"row\">\n            <div class=\"col-sm-3\">\n                <lib-date-input #customDateInput (emitFilter)=\"dateInpChange()\" [materialFieldWidthInp]=\"true\"\n                    [materialFormFieldAppearanceInp]=\"materialFormFieldAppearance.FORM_FIELD_APPEARANCE\"\n                    [isMandatoryFieldInp]=\"true\" [dateInputTypeInp]=\"dateInputTypeEnum.CUSTOM_INPUT\"\n                    [dateTypeInp]=\"dateTypeEnum.EXCLUSIVE\" [showDefaultDurationInp]=\"true\" [showCdrRangeLabelInp]=\"true\"\n                    [labelInp]=\"'Select date'\" [timezoneInp]=\"timezone\" [rangeInp]=\"customRangeConstant\" [showTimeInCDRInp]=\"true\"\n                    [showRangeInp]=\"true\" [cdrFormatInp]=\"'YYYY-MM-DD HH:mm:ss'\"></lib-date-input>\n            </div>\n\n            <div class=\"col-sm-3\">\n                <lib-aggregation-duration #aggDurationInput\n                    (emitFilter)=\"aggDurationInpChange()\"></lib-aggregation-duration>\n            </div>\n\n            <div class=\"col-sm-3\">\n                <mat-form-field class=\"matFieldWidth100\" [appearance]=\"materialFormFieldAppearance.FORM_FIELD_APPEARANCE\">\n                    <mat-label>Select parameter</mat-label>\n                    <ng-container *ngIf=\"parameterM && parameterM.length > 0 && parameterM[0]['id']; else noParameterFound\">\n                        <mat-select [formControl]=\"parameterFC\" multiple required>\n                            <ngx-mat-select-search [formControl]=\"paramSearchUtil.filterFC\" placeholderLabel=\"Search by name\"\n                                noEntriesFoundLabel=\"No matching name found.\">\n                            </ngx-mat-select-search>\n                            <mat-option [value]=\"-1\" (click)=\"selectAllParameters()\" [hidden]=\"paramSearchUtil.filterFC.value\">\n                                Select all\n                            </mat-option>\n                            <mat-option *ngFor=\"let parameter of paramSearchUtil.filteredEntities | async\"\n                                [value]=\"parameter.paramMetric\" (click)=\"selectedParameters()\">\n                                {{ parameter.label }}\n                            </mat-option>\n                        </mat-select>\n                    </ng-container>\n                    <ng-template #noParameterFound>\n                        <mat-select [formControl]=\"parameterFC\">\n                            <mat-option disabled>\n                                {{ commonConstant.NO_DATA_FOUND }}\n                            </mat-option>\n                        </mat-select>\n                    </ng-template>\n                    <mat-error *ngIf=\"parameterFC.touched && parameterFC.hasError('required')\">\n                        Select parameter\n                    </mat-error>\n                </mat-form-field>\n            </div>\n\n            <div class=\"col-sm-3\">\n                <mat-form-field class=\"matFieldWidth100\" [appearance]=\"materialFormFieldAppearance.FORM_FIELD_APPEARANCE\">\n                    <mat-label>Select entity</mat-label>\n                    <mat-select (selectionChange)=\"entityChange($event.value)\" [formControl]=\"entityFC\" required>\n                        <ng-container *ngIf=\"entityM && entityM.length > 0 && entityM[0]['id']; else noEntityFound\">\n                            <mat-option>\n                                <ngx-mat-select-search [formControl]=\"entitySearchUtil.filterFC\" placeholderLabel=\"Search by name\"\n                                    noEntriesFoundLabel=\"No matching name found.\">\n                                </ngx-mat-select-search>\n                            </mat-option>\n                            <mat-option *ngFor=\"let entity of entitySearchUtil.filteredEntities | async\" [value]=\"entity.id\">\n                                {{ entity.name }}\n                            </mat-option>\n                        </ng-container>\n                        <ng-template #noEntityFound>\n                            <mat-option disabled>\n                                {{ commonConstant.NO_DATA_FOUND }}\n                            </mat-option>\n                        </ng-template>\n                    </mat-select>\n                    <mat-error *ngIf=\"entityFC.touched && entityFC.hasError('required')\">\n                        Select entity\n                    </mat-error>\n                </mat-form-field>\n            </div>\n\n        </div>\n\n        <div class=\"row\">\n            <div class=\"col-sm-12\">\n                <div class=\"float-end\">\n                    <button class=\"btn btn-sm btn-primary\" type=\"button\" (click)=\"viewReport()\" matRipple\n                        [matRippleCentered]=\"materialConstant.MAT_RIPPLE_CENTER\">\n                        {{ buttonLabelEnum.READ_BTN_LABEL }}\n                    </button>\n                </div>\n            </div>\n        </div>\n\n        <div class=\"row\">\n            <div class=\"col-sm-12\">\n                <lib-message-alert *ngIf=\"reportAlertObj.showAlert\" [labelInp]=\"reportAlertObj.alertLabel\"\n                    [contentInp]=\"reportAlertObj.alertContent\" [messageAlertTypeInp]=\"reportAlertObj.messageAlertType\"\n                    [messageAlertIconInp]=\"reportAlertObj.messageAlertIcon\">\n                </lib-message-alert>\n            </div>\n        </div>\n\n        <div class=\"row\">\n            <div class=\"centerAlign\">\n                <lib-skeleton-loader *ngIf=\"showLoader\" [count]=\"3\" [appearance]=\"'circle'\"\n                    [theme]=\"{ height: '15px', width: '15px', 'background-color': '#e7ebf3' }\"></lib-skeleton-loader>\n            </div>\n        </div>\n\n        <div class=\"row mt-3\" *ngIf=\"reportData && reportData.length > 0\">\n            <div class=\"overflowX customScrollBar\">\n                <table class=\"table\">\n                    <tbody>\n                        <tr class=\"tableHeader\">\n                            <td class=\"fw-bold\"> Sr. No. </td>\n                            <td align=\"center\" class=\"fw-bold\"> Time </td>\n                            <ng-container *ngFor=\"let data of reportData; let i = index\">\n                                <td align=\"center\" class=\"fw-bold\">\n                                    {{ data.paramLabel }} ({{ data.unit }}) ({{ data.dsAgg }})\n                                </td>\n                            </ng-container>\n                        </tr>\n                    </tbody>\n                    <tbody>\n                        <tr *ngFor=\"let row of renderTable\">\n                            <td>{{ row.index }}</td>\n                            <td align=\"center\" class=\"colWidthContainingDateTime\">{{ row.time }}</td>\n                            <td align=\"center\" *ngFor=\"let value of row.data\">{{ value ? value : commonConstant.HYPHEN\n                                }}\n                            </td>\n                        </tr>\n                    </tbody>\n                </table>\n            </div>\n        </div>\n    </div>\n</div>","import { NgModule } from '@angular/core';\nimport { RouterModule, Routes } from '@angular/router';\n\nimport { DerivedParameterComponent } from './derived-parameter.component';\n\nconst routes: Routes = [\n    {\n        path: '',\n        component: DerivedParameterComponent\n    }\n];\n\n@NgModule({\n    imports: [RouterModule.forChild(routes)],\n    exports: [RouterModule]\n})\nexport class DerivedParameterRoutingModule { }\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\n\nimport { DerivedParameterRoutingModule } from './derived-parameter-routing.module';\nimport { DerivedParameterComponent } from './derived-parameter.component';\n\nimport { AggregationDurationModule } from '../../dropdown/aggregation-duration/aggregation-duration.module';\n\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\n\nimport { MatTableModule } from '@angular/material/table';\nimport { MatRippleModule } from '@angular/material/core';\nimport { MatInputModule } from '@angular/material/input';\nimport { MatFormFieldModule } from '@angular/material/form-field';\nimport { MatSelectModule } from '@angular/material/select';\n\nimport { NgxMatSelectSearchModule } from 'ngx-mat-select-search';\n\n// tsc-library\nimport { DateInputModule } from '@library/date';\nimport { MessageAlertModule, SkeletonModule } from '@library/tsc-common';\n// /tsc-library/\n\n@NgModule({\n    declarations: [\n        DerivedParameterComponent\n    ],\n    imports: [\n        CommonModule,\n        DerivedParameterRoutingModule,\n        FormsModule,\n        ReactiveFormsModule,\n        DateInputModule,\n        AggregationDurationModule,\n        SkeletonModule,\n        MessageAlertModule,\n        MatTableModule,\n        MatRippleModule,\n        MatInputModule,\n        MatFormFieldModule,\n        MatSelectModule,\n        NgxMatSelectSearchModule\n    ]\n})\nexport class DerivedParameterModule { }\n","import { Component, OnInit, ViewChild } from '@angular/core';\n\nimport * as moment from 'moment-timezone';\n\nimport { ReportErrorEnum } from '../../../enum/error.enum';\n\nimport { AggregateDataRequest } from '../../../model/aggregate-data.model';\nimport { Alert, AlertM } from '../../../model/alert.model';\n\nimport { SourceLoadComponent } from '../../_shared/filter/source-load/source-load.component';\nimport { AggregationDurationComponent } from '../../dropdown/aggregation-duration/aggregation-duration.component';\n\nimport { AggregateDataService } from '../../../service/aggregate-data.service';\nimport { ReportService } from '../../../service/report.service';\nimport { AlertService } from '../../../service/alert.service';\n\n// tsc-library\nimport { CUSTOM_RANGE_CONSTANT_EXCLUSIVE_DATE, DateFormatEnum, DateInputComponent, DateInputTypeEnum, DateTypeEnum } from '@library/date';\nimport { StorageService } from '@library/storage-service';\nimport { ToastrColor, ToastrService } from '@library/toastr-service';\nimport { ButtonLabelEnum, COMMON_CONSTANT, InvalidForm, MATERIAL_CONSTANT, MaterialFormFieldAppearance, MessageAlertIconEnum, MessageAlertTypeEnum, TSCCommonService } from '@library/tsc-common';\nimport { ApplicationKeyID } from '@library/application-service';\n// /tsc-library/\n\n@Component({\n    selector: 'lib-usage-across-facility',\n    templateUrl: './usage-across-facility.component.html',\n    styles: [\n    ]\n})\n\nexport class UsageAcrossFacilityComponent implements OnInit {\n\n    materialConstant = MATERIAL_CONSTANT;\n    commonConstant = COMMON_CONSTANT;\n    customRangeConstant = CUSTOM_RANGE_CONSTANT_EXCLUSIVE_DATE;\n\n    materialFormFieldAppearance = MaterialFormFieldAppearance;\n    buttonLabelEnum = ButtonLabelEnum;\n    dateFormatEnum = DateFormatEnum;\n    dateInputTypeEnum = DateInputTypeEnum;\n    dateTypeEnum = DateTypeEnum;\n\n    orgID: any;\n    applicationKeyID: any;\n    paramMetric: any;\n    timezone: string;\n    category: string;\n    startDate: string;\n    endDate: string;\n    aggDuration: string;\n    timestamp: any;\n    renderTable: any;\n    reportData: any;\n    showAlert: boolean = false;\n    showLoader: boolean = false;\n\n    reportAlertObj: AlertM = new Alert();\n\n    @ViewChild('sourceLoadInput') sourceLoadInput: SourceLoadComponent;\n    @ViewChild('customDateInput') customDateInput: DateInputComponent;\n    @ViewChild('aggDurationInput') aggDurationInput: AggregationDurationComponent;\n\n    constructor(\n        private storageService: StorageService,\n        private toastService: ToastrService,\n        private tscCommonService: TSCCommonService,\n        private aggregateDataService: AggregateDataService,\n        private reportService: ReportService,\n        private alertService: AlertService\n    ) { }\n\n    ngOnInit(): void {\n        this.orgID = this.storageService.getStorage('currentOrgID');\n        this.timezone = this.storageService.getStorage('timezone');\n        this.applicationKeyID = this.storageService.getStorage('applicationKeyID');\n\n        if (this.applicationKeyID == ApplicationKeyID.ENERGY_KEY_ID) {\n            this.paramMetric = \"engEnergyUsed\";\n        } else if (this.applicationKeyID == ApplicationKeyID.WATER_KEY_ID) {\n            this.paramMetric = \"gwFlowTotalizer\";\n        }\n    }\n\n    sourceLoadInpChange() {\n        this.category = this.sourceLoadInput.categoryFC.value;\n    }\n\n    dateInpChange() {\n        this.startDate = this.customDateInput.startDateFC.value;\n        this.endDate = this.customDateInput.endDateFC.value;\n    }\n\n    aggDurationInpChange() {\n        this.aggDuration = this.aggDurationInput.aggDurationFC.value;\n    }\n\n    async viewReport() {\n\n        this.alertService.resetAlertProperties(this.reportAlertObj);\n\n        if (this.isValidInputField()) {\n            this.toastService.openToast(InvalidForm.INVALID_FORM_TITLE, InvalidForm.INVALID_FORM_MESSAGE, ToastrColor.ERROR);\n            return;\n        }\n\n        if (this.startDate == this.endDate) {\n            this.alertService.setAlertProperties(this.reportAlertObj, ReportErrorEnum.INVALID_DATE_LABEL, ReportErrorEnum.INVALID_DATE_MESSAGE, MessageAlertTypeEnum.INFO, MessageAlertIconEnum.INFO_ICON);\n            return;\n        }\n\n        this.showLoader = true;\n\n        try {\n            const requestData = this.createDataRequest();\n\n            this.reportData = await this.aggregateDataService.getAggregateData(this.orgID, requestData);\n\n            if (this.reportData?.length > 0) {\n                this.timestamp = this.reportService.extractTimestamp(this.reportData);\n                this.renderTable = this.reportService.populateTable(this.timestamp, this.reportData, this.dateFormatEnum.DATE_TIME);\n            } else if (this.reportData?.length == 0) {\n                this.alertService.setAlertProperties(this.reportAlertObj, ReportErrorEnum.DATA_NOT_FOUND_LABEL, ReportErrorEnum.DATA_NOT_FOUND_MESSAGE, MessageAlertTypeEnum.WARNING, MessageAlertIconEnum.WARNING_ICON);\n            }\n\n        } catch (error) {\n            console.error(\"Error in viewReport()\", error);\n            this.alertService.setAlertProperties(this.reportAlertObj, ReportErrorEnum.INVALID_ERROR_LABEL, ReportErrorEnum.INVALID_ERROR_MESSAGE, MessageAlertTypeEnum.DANGER, MessageAlertIconEnum.DANGER_ICON);\n        } finally {\n            this.showLoader = false;\n        }\n    }\n\n    createDataRequest() {\n\n        const requestData = new AggregateDataRequest();\n\n        requestData.startTime = this.startDate;\n        requestData.endTime = this.endDate;\n        requestData.interval = this.aggDuration;\n        requestData.params = [\n            {\n                name: this.paramMetric,\n                dsAgg: \"sum\",\n                agg: \"sum\",\n                source_or_load: this.category,\n                sourceLoadType: 'all'\n            }\n        ];\n        requestData.nullifyParams();\n\n        return requestData;\n    }\n\n    isValidInputField() {\n        const controls = [\n            this.customDateInput.startDateFC,\n            this.aggDurationInput.aggDurationFC\n        ];\n\n        controls.forEach(control => control.markAsTouched());\n        return controls.some(control => control.invalid);\n    }\n\n}\n","<div class=\"card main-card cardOverwrite h100\">\n    <div class=\"headerContainer\">\n        <div class=\"headerLeftContainer\">\n            <div class=\"pageTitle\">Usage Across Facility Report</div>\n        </div>\n    </div>\n\n    <div class=\"card-body\">\n        <div class=\"row\">\n            <div class=\"col-sm-4\">\n                <lib-source-load #sourceLoadInput (emitFilter)=\"sourceLoadInpChange()\"></lib-source-load>\n            </div>\n        </div>\n\n        <div class=\"row mt-3\">\n            <div class=\"col-sm-3\">\n                <lib-date-input #customDateInput (emitFilter)=\"dateInpChange()\" [materialFieldWidthInp]=\"true\"\n                    [materialFormFieldAppearanceInp]=\"materialFormFieldAppearance.FORM_FIELD_APPEARANCE\"\n                    [isMandatoryFieldInp]=\"true\" [dateInputTypeInp]=\"dateInputTypeEnum.CUSTOM_INPUT\"\n                    [dateTypeInp]=\"dateTypeEnum.EXCLUSIVE\" [showDefaultDurationInp]=\"true\" [showCdrRangeLabelInp]=\"true\"\n                    [labelInp]=\"'Select date'\" [timezoneInp]=\"timezone\" [rangeInp]=\"customRangeConstant\" [showTimeInCDRInp]=\"true\"\n                    [showRangeInp]=\"true\" [cdrFormatInp]=\"'YYYY-MM-DD HH:mm:ss'\"></lib-date-input>\n            </div>\n\n            <div class=\"col-sm-3\">\n                <lib-aggregation-duration #aggDurationInput\n                    (emitFilter)=\"aggDurationInpChange()\"></lib-aggregation-duration>\n            </div>\n        </div>\n\n        <div class=\"row\">\n            <div class=\"col-sm-12\">\n                <div class=\"float-end\">\n                    <button class=\"btn btn-sm btn-primary\" type=\"button\" (click)=\"viewReport()\" matRipple\n                        [matRippleCentered]=\"materialConstant.MAT_RIPPLE_CENTER\">\n                        {{ buttonLabelEnum.READ_BTN_LABEL }}\n                    </button>\n                </div>\n            </div>\n        </div>\n\n        <div class=\"row\">\n            <div class=\"col-sm-12\">\n                <lib-message-alert *ngIf=\"reportAlertObj.showAlert\" [labelInp]=\"reportAlertObj.alertLabel\"\n                    [contentInp]=\"reportAlertObj.alertContent\" [messageAlertTypeInp]=\"reportAlertObj.messageAlertType\"\n                    [messageAlertIconInp]=\"reportAlertObj.messageAlertIcon\">\n                </lib-message-alert>\n            </div>\n        </div>\n\n        <div class=\"row\">\n            <div class=\"centerAlign\">\n                <lib-skeleton-loader *ngIf=\"showLoader\" [count]=\"3\" [appearance]=\"'circle'\"\n                    [theme]=\"{ height: '15px', width: '15px', 'background-color': '#e7ebf3' }\"></lib-skeleton-loader>\n            </div>\n        </div>\n\n        <div class=\"row mt-3\" *ngIf=\"reportData && reportData.length > 0\">\n            <div class=\"overflowX customScrollBar\">\n                <table class=\"table\">\n                    <tbody>\n                        <tr class=\"tableHeader\">\n                            <td class=\"fw-bold\"> Sr. No. </td>\n                            <td align=\"center\" class=\"fw-bold\"> Time </td>\n                            <ng-container *ngFor=\"let data of reportData; let i = index\">\n                                <td align=\"center\" class=\"fw-bold\">\n                                    {{ data.entityName }}<br />\n                                    {{ data.paramLabel }} ({{ data.unit }}) ({{ data.dsAgg }})\n                                </td>\n                            </ng-container>\n                        </tr>\n                    </tbody>\n                    <tbody>\n                        <tr *ngFor=\"let row of renderTable\">\n                            <td>{{ row.index }}</td>\n                            <td align=\"center\" class=\"colWidthContainingDateTime\">{{ row.time }}</td>\n                            <td align=\"center\" *ngFor=\"let value of row.data\">{{ value ? value : commonConstant.HYPHEN\n                                }}\n                            </td>\n                        </tr>\n                    </tbody>\n                </table>\n            </div>\n        </div>\n    </div>\n</div>","import { NgModule } from '@angular/core';\nimport { RouterModule, Routes } from '@angular/router';\n\nimport { UsageAcrossFacilityComponent } from './usage-across-facility.component';\n\nconst routes: Routes = [\n    {\n        path: '',\n        component: UsageAcrossFacilityComponent\n    }\n];\n\n@NgModule({\n    imports: [RouterModule.forChild(routes)],\n    exports: [RouterModule]\n})\nexport class UsageAcrossFacilityRoutingModule { }\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\n\nimport { UsageAcrossFacilityRoutingModule } from './usage-across-facility-routing.module';\nimport { UsageAcrossFacilityComponent } from './usage-across-facility.component';\n\nimport { SourceLoadModule } from '../../_shared/filter/source-load/source-load.module';\nimport { AggregationDurationModule } from '../../dropdown/aggregation-duration/aggregation-duration.module';\n\nimport { MatTableModule } from '@angular/material/table';\nimport { MatRippleModule } from '@angular/material/core';\n\n// tsc-library\nimport { DateInputModule } from '@library/date';\nimport { MessageAlertModule, SkeletonModule } from '@library/tsc-common';\n// /tsc-library/\n\n@NgModule({\n    declarations: [\n        UsageAcrossFacilityComponent\n    ],\n    imports: [\n        CommonModule,\n        UsageAcrossFacilityRoutingModule,\n        SourceLoadModule,\n        DateInputModule,\n        AggregationDurationModule,\n        SkeletonModule,\n        MessageAlertModule,\n        MatTableModule,\n        MatRippleModule\n    ]\n})\nexport class UsageAcrossFacilityModule { }\n","import { NgModule } from '@angular/core';\nimport { RouterModule, Routes } from '@angular/router';\n\nconst routes: Routes = [\n    {\n        path: 'page',\n        loadChildren: () => import('./page/page.module').then(m => m.PageModule)\n    },\n];\n\n@NgModule({\n    imports: [RouterModule.forChild(routes)],\n    exports: [RouterModule]\n})\nexport class LayoutRoutingModule { }","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\n\nimport { LayoutRoutingModule } from './layout-routing.module';\n\n@NgModule({\n    declarations: [],\n    imports: [\n        CommonModule,\n        LayoutRoutingModule\n    ]\n})\nexport class LayoutModule { }\n","export enum TscLiteButtonLabelEnum {\n    LAYOUT_BTN_LABEL = 'Layout',\n    EXPORT_BTN_LABEL = 'Export as'\n}","import { Inject, Injectable } from '@angular/core';\nimport { HttpClient, HttpParams } from '@angular/common/http';\n\nimport { Observable } from 'rxjs';\n\nimport { LayoutPageM } from '../model/layout.model';\n\n// tsc-library\nimport { PageM } from '@library/tsc-common';\n// /tsc-library/\n\n@Injectable({\n    providedIn: 'root'\n})\n\nexport class LayoutController {\n\n    constructor(\n        private http: HttpClient,\n        @Inject('environment') private environment: any\n    ) { }\n\n    getLayoutByPage(pageNo: number, pageSize: number, sortBy: string, orderBy: string, search: any[], orgID: number): Observable<PageM<LayoutPageM>>{\n        let params = new HttpParams();\n\n        params = params.append('pageNo', pageNo);\n        params = params.append('pageSize', pageSize);\n        params = params.append('sortBy', sortBy);\n        params = params.append('orderBy', orderBy);\n\n        search.forEach(search => params = params.append('search', search));\n        \n        return this.http.get<PageM<LayoutPageM>>(`${this.environment.TSC_COMMON_API_URL}organizations/${orgID}/layouts/page`, { params: params });\n    }\n}\n","import { Component, ElementRef, OnInit, ViewChild } from '@angular/core';\n\nimport { MatSort } from '@angular/material/sort';\nimport { MatPaginator } from '@angular/material/paginator';\n\nimport { merge, fromEvent, of as observableOf } from 'rxjs';\nimport { map, startWith, switchMap, catchError } from \"rxjs/operators\";\n\nimport { faPlus, faEllipsisV } from '@fortawesome/free-solid-svg-icons';\n\nimport { TscLiteButtonLabelEnum } from '../../../enum/button.enum';\nimport { LayoutPageM } from '../../../model/layout.model';\n\nimport { LayoutController } from '../../../controller/layout.controller';\n\n// tsc-library\nimport { StorageService } from '@library/storage-service';\nimport { PageM, SearchBarOneComponent } from '@library/tsc-common';\nimport { TABLE_CONSTANT, ButtonLabelEnum } from '@library/tsc-common';\n// /tsc-library/\n\n@Component({\n    selector: 'app-page',\n    templateUrl: './page.component.html',\n    styleUrls: ['./page.component.scss']\n})\n\nexport class PageComponent implements OnInit {\n    TABLE_CONSTANT = TABLE_CONSTANT;\n    TscLiteButtonLabelEnum = TscLiteButtonLabelEnum;\n    ButtonLabelEnum: ButtonLabelEnum;\n\n    faPlus = faPlus;\n    faEllipsisV = faEllipsisV;\n\n    orgID: any;\n\n    displayedColumn: string[] = ['id', 'name', 'description', 'option'];\n    resultLength: number = 0;\n    dataSource: any[] = [];\n\n    searchFlag: boolean = false;\n    searchValue: string;\n    searchArr: any[] = [];\n\n    theme: any;\n    entityTypeLoader: boolean = true;\n\n    @ViewChild('sort') sort: MatSort;\n    @ViewChild('paginator') paginator: MatPaginator;\n    @ViewChild('refreshBtn') refreshBtn: ElementRef;\n    @ViewChild('searchBar') searchBar: SearchBarOneComponent;\n\n    constructor(\n        private storageService: StorageService,\n        private layoutController: LayoutController,\n    ) { }\n\n    ngOnInit(): void {\n        this.orgID = this.storageService.getStorage('currentOrgID');\n    }\n\n    ngAfterViewInit() {\n        merge(\n            this.paginator.page,\n            this.sort.sortChange,\n            fromEvent(this.refreshBtn.nativeElement, 'click')\n        ).pipe(\n            startWith({}),\n            switchMap((): any => {\n                this.searchArr = [];\n                if (this.searchFlag) {\n                    this.searchArr.push('name:' + this.searchValue)\n                }\n\n                return this.layoutController.getLayoutByPage(\n                    this.paginator.pageIndex,\n                    this.paginator.pageSize,\n                    this.sort.active,\n                    this.sort.direction,\n                    this.searchArr,\n                    this.orgID\n                ).pipe(catchError(() => observableOf(null)));\n            }),\n            map((response: PageM<LayoutPageM>): any => {\n                if (response == null) {\n                    this.resultLength = 0;\n                    return [];\n                }\n                this.entityTypeLoader = false;\n                this.resultLength = response[\"totalCount\"];\n                return response[\"records\"];\n            })\n        ).subscribe((dataSource) => {\n            this.dataSource = dataSource;\n        });\n    }\n\n    searchFn(value: string) {\n        this.searchFlag = true;\n        this.searchValue = value;\n        if (value.length == 0) {\n            this.resetSearch();\n        } else {\n            this.paginator.pageIndex = 0;\n        }\n        this.refreshBtn.nativeElement.click();\n    }\n\n    resetSearch() {\n        this.searchFlag = false;\n        this.searchBar.searchClear();\n    }\n}","<div class=\"card main-card cardOverwrite h100\">\n    <div class=\"headerContainer\">\n        <div class=\"headerLeftContainer\">\n            <div class=\"pageTitle\">Layout</div>\n        </div>\n        <div class=\"headerRightContainer\">\n            <div class=\"headerRightContainerInner\">\n                <lib-search-bar-one class=\"me-3\" #searchBar searchBy=\"name\" (emitSearch)=\"searchFn($event)\">\n                </lib-search-bar-one>\n                <a class=\"btn btn-sm btn-success btnBase\" matRipple>\n                    <fa-icon [icon]=\"faPlus\"></fa-icon>&nbsp; {{ TscLiteButtonLabelEnum.LAYOUT_BTN_LABEL }}\n                </a>\n            </div>\n        </div>\n    </div>\n\n    <button #refreshBtn class=\"d-none\"></button>\n\n    <table mat-table [dataSource]=\"dataSource\" #sort=\"matSort\" matSort matSortActive=\"id\" matSortDirection=\"asc\"\n        matSortDisableClear>\n\n        <ng-container matColumnDef=\"id\">\n            <th class=\"columnWidth1 px-3\" mat-header-cell *matHeaderCellDef mat-sort-header disableClear>\n                ID\n            </th>\n            <td class=\"columnWidth1\" mat-cell *matCellDef=\"let row\">\n                {{ row['id'] }}\n            </td>\n        </ng-container>\n\n        <ng-container matColumnDef=\"name\">\n            <th class=\"columnWidth2 px-3\" mat-header-cell *matHeaderCellDef> Name </th>\n            <td class=\"columnWidth2 px-3\" mat-cell *matCellDef=\"let row\"\n                [matTooltip]=\"row?.['name']?.length>24? row['name']: ''\" matTooltipPosition=\"above\"\n                matTooltipClass=\"nameTooltip\">\n                {{ row?.['name'] | dotdotdot:24}}\n            </td>\n        </ng-container>\n\n        <ng-container matColumnDef=\"description\">\n            <th class=\"columnWidth2 px-3\" mat-header-cell *matHeaderCellDef> Description </th>\n            <td class=\"columnWidth2 px-3\" mat-cell *matCellDef=\"let row\"\n                [matTooltip]=\"row?.['description']?.length>24? row['description']: ''\" matTooltipPosition=\"above\"\n                matTooltipClass=\"nameTooltip\">\n                {{ row?.['description'] | dotdotdot:24}}\n            </td>\n        </ng-container>\n\n        <ng-container matColumnDef=\"option\">\n            <th class=\"columnWidth3\" mat-header-cell *matHeaderCellDef> Action </th>\n            <td class=\"columnWidth3 text-center\" mat-cell *matCellDef=\"let row\">\n                <div class=\"d-flex align-items-center\">\n                    <div class=\"btn-group\" ngbDropdown placement=\"left\">\n                        <button type=\"button\" ngbDropdownToggle class=\"dropdown-after dropdownAfter btn\">\n                            <fa-icon [icon]=\"faEllipsisV\"></fa-icon>\n                        </button>\n                        <div ngbDropdownMenu>\n                            <button class=\"dropdown-item\">\n                                {{ ButtonLabelEnum.UPDATE }}\n                            </button>\n                        </div>\n                    </div>\n                </div>\n            </td>\n        </ng-container>\n\n        <tr mat-header-row *matHeaderRowDef=\"displayedColumn\"></tr>\n        <tr mat-row *matRowDef=\"let row; columns: displayedColumn;\" class=\"data-row\"></tr>\n\n        <tr class=\"mat-row\" *matNoDataRow>\n            <ng-container *ngIf=\"entityTypeLoader; else showEntityType\">\n                <ng-container *ngTemplateOutlet=\"showLoader; context: { count: 3 }\"></ng-container>\n            </ng-container>\n            <ng-template #showEntityType>\n                <td class=\"mat-cell text-center\" [attr.colspan]=\"displayedColumn.length\">\n                    {{ TABLE_CONSTANT.TABLE_NO_DATA }}\n                </td>\n            </ng-template>\n        </tr>\n    </table>\n\n    <ng-template #showLoader let-count=\"count\" class=\"text-center\">\n        <td class=\"mat-cell text-center\" [attr.colspan]=\"displayedColumn.length\">\n            <lib-skeleton-loader [count]=\"count\" [appearance]=\"'circle'\"\n                [theme]=\"{}\">\n            </lib-skeleton-loader>\n        </td>\n    </ng-template>\n\n    <mat-paginator #paginator class=\"roundedBorder\" showFirstLastButtons [length]=\"resultLength\"\n        [pageSize]=\"TABLE_CONSTANT.DEFAULT_PAGE_SIZE\" [pageSizeOptions]=\"TABLE_CONSTANT.PAGE_SIZE_OPTION\">\n    </mat-paginator>\n</div>","import { NgModule } from '@angular/core';\nimport { RouterModule, Routes } from '@angular/router';\n\nimport { PageComponent } from './page.component';\n\nconst routes: Routes = [\n    {\n        path: '',\n        component: PageComponent\n    }\n];\n\n@NgModule({\n    imports: [RouterModule.forChild(routes)],\n    exports: [RouterModule]\n})\nexport class PageRoutingModule { }","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\n\nimport { PageRoutingModule } from './page-routing.module';\nimport { PageComponent } from './page.component';\n\nimport { NgbModule } from '@ng-bootstrap/ng-bootstrap';\nimport { FontAwesomeModule } from '@fortawesome/angular-fontawesome';\n\nimport { MatIconModule } from '@angular/material/icon';\nimport { MatButtonModule } from '@angular/material/button';\nimport { MatRippleModule } from '@angular/material/core';\nimport { MatTableModule } from '@angular/material/table';\nimport { MatPaginatorModule } from '@angular/material/paginator';\nimport { MatSortModule } from '@angular/material/sort';\nimport { MatDialogModule } from '@angular/material/dialog';\nimport { MatTooltipModule } from '@angular/material/tooltip';\n\n// tsc-library\nimport { SkeletonModule } from '@library/tsc-common';\nimport { SearchBarOneModule, EllipsisPipeModule } from '@library/tsc-common';\n// /tsc-library/\n\n\n@NgModule({\n    declarations: [\n        PageComponent\n    ],\n    imports: [\n        CommonModule,\n        PageRoutingModule,\n        SearchBarOneModule,\n        EllipsisPipeModule,\n        NgbModule,\n        FontAwesomeModule,\n        MatIconModule,\n        MatButtonModule,\n        MatRippleModule,\n        MatTableModule,\n        MatPaginatorModule,\n        MatSortModule,\n        MatDialogModule,\n        MatTooltipModule,\n        SkeletonModule\n    ]\n})\nexport class PageModule { }\n","/*\n * Public API Surface of tsc-lite\n */\n\nexport * from './lib/tsc-lite.service';\nexport * from './lib/tsc-lite.component';\nexport * from './lib/tsc-lite.module';\n\nexport * from './lib/tsc/constant/list.constant';\n\nexport * from './lib/tsc/model/parameter.model';\nexport * from './lib/tsc/model/entity.model';\nexport * from './lib/tsc/model/device.model';\nexport * from './lib/tsc/model/unit.model';\nexport * from './lib/tsc/model/shift.model';\nexport * from './lib/tsc/model/recent-data.model';\nexport * from './lib/tsc/model/alert.model';\n\n\nexport * from './lib/tsc/component/_shared/dialog/trend/trend.module';\nexport * from './lib/tsc/component/_shared/dialog/trend/trend.component';\n\nexport * from './lib/tsc/component/dropdown/aggregation/aggregation.module';\nexport * from './lib/tsc/component/dropdown/aggregation/aggregation.component';\n\nexport * from './lib/tsc/component/dropdown/aggregation-duration/aggregation-duration.module';\nexport * from './lib/tsc/component/dropdown/aggregation-duration/aggregation-duration.component';\n\nexport * from './lib/tsc/component/dropdown/param-metric/param-metric.module';\nexport * from './lib/tsc/component/dropdown/param-metric/param-metric.component';\n\nexport * from './lib/tsc/component/dropdown/parameter/parameter.module';\nexport * from './lib/tsc/component/dropdown/parameter/parameter.component';\n\nexport * from './lib/tsc/component/dropdown/device/device.module';\nexport * from './lib/tsc/component/dropdown/device/device.component';\n\nexport * from './lib/tsc/component/dropdown/entity/entity.module';\nexport * from './lib/tsc/component/dropdown/entity/entity.component';\n\nexport * from './lib/tsc/component/dropdown/unit/unit.module';\nexport * from './lib/tsc/component/dropdown/unit/unit.component';\n\nexport * from './lib/tsc/component/landing-page/home/home.module';\nexport * from './lib/tsc/component/landing-page/home/home.component';\n\nexport * from './lib/tsc/component/dropdown/shift/shift.module';\nexport * from './lib/tsc/component/dropdown/shift/shift.component';\n\nexport * from './lib/tsc/component/dashboard/balance/balance.module';\nexport * from './lib/tsc/component/dashboard/balance/balance.component';\n\nexport * from './lib/tsc/component/dashboard/consumption/consumption.module';\nexport * from './lib/tsc/component/dashboard/consumption/consumption.component';\n\nexport * from './lib/tsc/component/dashboard/consumption-breakup/consumption-breakup.module';\nexport * from './lib/tsc/component/dashboard/consumption-breakup/consumption-breakup.component';\n\nexport * from './lib/tsc/component/dashboard/entity/entity.module';\nexport * from './lib/tsc/component/dashboard/entity/entity.component';\n\nexport * from './lib/tsc/component/dashboard/facility/facility.module';\nexport * from './lib/tsc/component/dashboard/facility/facility.component';\n\nexport * from './lib/tsc/component/dashboard/meter-data/meter-data.module';\nexport * from './lib/tsc/component/dashboard/meter-data/meter-data.component';\n\nexport * from './lib/tsc/component/report/cgwa/cgwa.module';\nexport * from './lib/tsc/component/report/cgwa/cgwa.component';\n\nexport * from './lib/tsc/component/report/consumption-breakup/consumption-breakup.module';\nexport * from './lib/tsc/component/report/consumption-breakup/consumption-breakup.component';\n\nexport * from './lib/tsc/component/report/data-availability/data-availability.module';\nexport * from './lib/tsc/component/report/data-availability/data-availability.component';\n\nexport * from './lib/tsc/component/report/meter/meter.module';\nexport * from './lib/tsc/component/report/meter/meter.component';\n\nexport * from './lib/tsc/component/report/parameter/parameter.module';\nexport * from './lib/tsc/component/report/parameter/parameter.component';\n\nexport * from './lib/tsc/component/report/raw-data/raw-data.module';\nexport * from './lib/tsc/component/report/raw-data/raw-data.component';\n\nexport * from './lib/tsc/component/report/derived-parameter/derived-parameter.module';\nexport * from './lib/tsc/component/report/derived-parameter/derived-parameter.component';\n\nexport * from './lib/tsc/component/report/usage-across-facility/usage-across-facility.module';\nexport * from './lib/tsc/component/report/usage-across-facility/usage-across-facility.component';\n\n\nexport * from './lib/tsc/controller/parameter.controller';\nexport * from './lib/tsc/controller/entity.controller';\nexport * from './lib/tsc/controller/device.controller';\nexport * from './lib/tsc/controller/unit.controller';\nexport * from './lib/tsc/controller/shift.controller';\nexport * from './lib/tsc/controller/recent-data.controller';\nexport * from './lib/tsc/controller/aggregate-data.controller';\n\n\nexport * from './lib/tsc/service/parameter.service';\nexport * from './lib/tsc/service/entity.service';\nexport * from './lib/tsc/service/device.service';\nexport * from './lib/tsc/service/unit.service';\nexport * from './lib/tsc/service/shift.service';\nexport * from './lib/tsc/service/recent-data.service';\nexport * from './lib/tsc/service/aggregate-data.service';\nexport * from './lib/tsc/service/trend.service';\nexport * from './lib/tsc/service/report.service';\n\n\nexport * from './lib/tsc/component/layout/layout.module';\nexport * from './lib/tsc/component/layout/page/page.module';\n","/**\n * Generated bundle index. Do not edit.\n */\n\nexport * from './public-api';\n"],"names":["i0","Injectable","Component","NgModule","Inject","i1.ParameterController","i2","i1.AggregateDataController","MaterialFormFieldAppearance","DateTimeIntervalEnum","DialogEnum","FormControl","Validators","NO_DATA_GRAPHIC","LOADING_GRAPHIC","moment","COMMON_CONSTANT","MAT_DIALOG_DATA","i3","i4.ParameterService","i5.AggregateDataService","i6","i1","i7","i8","i9","i10","i11","i12","i13","i14","CommonModule","ReactiveFormsModule","MatDialogModule","MatButtonModule","MatInputModule","MatFormFieldModule","MatSelectModule","MatTooltipModule","NgxEchartsModule","EventEmitter","i4","i5","Output","FormsModule","NgxMatSelectSearchModule","MatSelectSearchService","i2.ParameterService","Input","HttpParams","i1.DeviceController","i2.DeviceService","i1.EntityController","i2.EntityService","i1.UnitController","i2.UnitService","ApplicationKeyID","i4.AggregateDataService","i5.EntityController","i6.DeviceController","routes","RouterModule","MatCardModule","PerfectScrollbarModule","NgCircleProgressModule","i1.ShiftController","i2.ShiftService","FREQUENCY_CONSTANT","FrequencyEnum","DateTypeEnum","i2.AggregateDataService","DateFilterTwoModule","SkeletonModule","ChartViewStateEnum","DoughnutChart","DoughnutModule","i1.RecentDataController","MATERIAL_CONSTANT","i3.RecentDataService","i5.TrendService","i15","i16","i17","ViewChild","SearchBarTwoModule","MatButtonToggleModule","MatExpansionModule","MatOptionModule","MatRadioModule","MessageAlertTypeEnum","MessageAlertIconEnum","i4.TrendService","i5.RecentDataService","i6.AlertService","MessageAlertModule","i1.EntityDeviceController","i2.RecentDataService","i3.EntityDeviceService","i5.AlertService","i7.TrendService","CUSTOM_RANGE_CONSTANT_EXCLUSIVE_DATE","ButtonLabelEnum","DateFormatEnum","DateInputTypeEnum","InvalidForm","ToastrColor","i5.ReportService","i7.SourceLoadComponent","i9.AggregationDurationComponent","i10.EntityComponent","DateInputModule","MatTableModule","MatRippleModule","i8.EntityComponent","i9.DeviceComponent","i10.ParamMetricComponent","i4.EntityDeviceService","i6.ReportService","i7.AlertService","i14.ParamMetricComponent","i5.ParameterService","i11.DeviceComponent","i12.ParamMetricComponent","i13.AggregationComponent","i9.EntityComponent","i10.DeviceComponent","i6.EntityService","i7.ReportService","i8.AlertService","i10.AggregationDurationComponent","TABLE_CONSTANT","faPlus","faEllipsisV","merge","fromEvent","startWith","switchMap","catchError","observableOf","map","i2.LayoutController","SearchBarOneModule","EllipsisPipeModule","NgbModule","FontAwesomeModule","MatIconModule","MatPaginatorModule","MatSortModule"],"mappings":"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"}