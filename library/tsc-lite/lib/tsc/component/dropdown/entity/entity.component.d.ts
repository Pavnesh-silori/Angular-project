import { EventEmitter, OnInit, SimpleChanges } from '@angular/core';
import { FormControl } from '@angular/forms';
import { Entity } from '../../../model/entity.model';
import { EntityService } from '../../../service/entity.service';
import { FormErrorEnum, MatSelectSearchService, MaterialFormFieldAppearance } from '@library/tsc-common';
import { StorageService } from '@library/storage-service';
import { DropdownTypeEnum } from '../../../enum/dropdown.enum';
import * as i0 from "@angular/core";
export declare class EntityComponent implements OnInit {
    private storageService;
    private entityService;
    dropdownTypeInp: DropdownTypeEnum;
    commonConstant: {
        PRIVACY: string;
        TERMS: string;
        PRICING: string;
        SUPPORT_EMAIL: string;
        HYPHEN: string;
        NO_DATA_FOUND: string;
        NO_DATA: string;
        EMAIL_PATTERN: string;
        ZIPCODE_PATTERN: string;
        GST_NUMBER_PATTERN: string;
        SPECIAL_CHARACTERS_PATTERN: string;
        ALLOWED_IMAGE_TYPES: string[];
        DECIMAL_PATTERN: string;
        MAX_IMAGE_SIZE: number;
        ASIAN_KOLKATA: string;
        VIEW_API_KEY_ID: string;
        NO_MATCH_FOUND: string;
    };
    materialFormFieldAppearance: typeof MaterialFormFieldAppearance;
    dropdownTypeEnum: typeof DropdownTypeEnum;
    FormErrorEnum: typeof FormErrorEnum;
    orgID: any;
    entityM: Entity[];
    dropdownType: string;
    allEntityID: any[];
    totalEntityCount: number;
    entityFC: FormControl;
    multipleEntityFC: FormControl;
    entitySearchUtil: MatSelectSearchService;
    emitFilter: EventEmitter<any>;
    constructor(storageService: StorageService, entityService: EntityService);
    ngOnInit(): void;
    ngOnChanges(changes: SimpleChanges): void;
    getEntitiesHavingDevicesByOrgID(): Promise<void>;
    onChange(selectedEntity: any): void;
    selectAllEntities(): void;
    selectedEntities(): void;
    static ɵfac: i0.ɵɵFactoryDeclaration<EntityComponent, never>;
    static ɵcmp: i0.ɵɵComponentDeclaration<EntityComponent, "lib-entity", never, { "dropdownTypeInp": "dropdownTypeInp"; }, { "emitFilter": "emitFilter"; }, never, never>;
}
