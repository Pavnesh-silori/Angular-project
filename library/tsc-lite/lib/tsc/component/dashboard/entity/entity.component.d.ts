import { ElementRef, OnInit } from '@angular/core';
import { FormControl } from '@angular/forms';
import { ParameterEntity, EntityType } from '../../../model/entity.model';
import { OrgRecentData } from '../../../model/recent-data.model';
import { EntityService } from '../../../service/entity.service';
import { RecentDataService } from '../../../service/recent-data.service';
import { TrendService } from '../../../service/trend.service';
import { FormErrorEnum, MatSelectSearchService, MaterialFormFieldAppearance, SearchBarTwoComponent } from '@library/tsc-common';
import { StorageService } from '@library/storage-service';
import { DateService } from '@library/date';
import * as i0 from "@angular/core";
export declare class EntityDashboardComponent implements OnInit {
    private storageService;
    private entityService;
    private recentDataService;
    dateService: DateService;
    private trendService;
    commonConstant: {
        PRIVACY: string;
        TERMS: string;
        PRICING: string;
        SUPPORT_EMAIL: string;
        HYPHEN: string;
        NO_DATA_FOUND: string;
        NO_DATA: string;
        EMAIL_PATTERN: string;
        ZIPCODE_PATTERN: string;
        GST_NUMBER_PATTERN: string;
        SPECIAL_CHARACTERS_PATTERN: string;
        ALLOWED_IMAGE_TYPES: string[];
        DECIMAL_PATTERN: string;
        MAX_IMAGE_SIZE: number;
        ASIAN_KOLKATA: string;
        VIEW_API_KEY_ID: string;
        NO_MATCH_FOUND: string;
    };
    materialFormFieldAppearance: typeof MaterialFormFieldAppearance;
    FormErrorEnum: typeof FormErrorEnum;
    orgID: any;
    layoutID: any;
    timezone: any;
    facilityName: string;
    isAccordionOpen: boolean;
    entityTypeLoader: boolean;
    entityDeviceLoader: boolean;
    realTimeDeviceDataLoader: boolean;
    entityTypeM: EntityType[];
    entityDeviceM: ParameterEntity;
    filteredEntityDeviceM: any[];
    orgRecentDataM: OrgRecentData[];
    entityTypeFC: FormControl;
    entityFC: FormControl;
    entityTypeSearchUtil: MatSelectSearchService;
    searchBar: SearchBarTwoComponent;
    scrollContainer: ElementRef;
    constructor(storageService: StorageService, entityService: EntityService, recentDataService: RecentDataService, dateService: DateService, trendService: TrendService);
    ngOnInit(): void;
    getEntityTypeByLayoutID(): Promise<void>;
    entityTypeChange(selectedType: any): void;
    getEntitiesWithDevicesByLayoutID(entityType: any): Promise<void>;
    searchFn(value: string): void;
    searchEntities(entities: any[], searchTerm: string): any[];
    openAccordion(): void;
    closeAccordion(): void;
    isDeviceAttached(entity: any): boolean;
    onEntityDeviceSelection(): void;
    getTooltipLabel(entity: any): string;
    getOrgRecentData(selectedValue: any): Promise<void>;
    showTrend(paramMetric: any, entityID: any, deviceID: any): void;
    static ɵfac: i0.ɵɵFactoryDeclaration<EntityDashboardComponent, never>;
    static ɵcmp: i0.ɵɵComponentDeclaration<EntityDashboardComponent, "lib-entity", never, {}, {}, never, never>;
}
