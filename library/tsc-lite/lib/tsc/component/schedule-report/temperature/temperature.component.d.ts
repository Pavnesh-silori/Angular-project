import { OnInit } from '@angular/core';
import { FormBuilder, FormGroup } from '@angular/forms';
import { ActivatedRoute, Router } from '@angular/router';
import { Entity } from '../../../model/entity.model';
import { ScheduleReport, ScheduleReportI } from '../../../model/schedule-report.model';
import { ScheduleReportController } from '../../../controller/schedule-report.controller';
import { ScheduleReportService } from '../../../service/schedule-report.service';
import { ScheduleReportConfigurationComponent } from '../_shared/configuration/configuration.component';
import { EntityService } from '../../../service/entity.service';
import { MaterialFormFieldAppearance, ButtonLabelEnum, FormAction, FormErrorEnum, TSCCommonService, ButtonTooltipEnum } from '@library/tsc-common';
import { ToastrService } from '@library/toastr-service';
import { StorageService } from '@library/storage-service';
import * as i0 from "@angular/core";
export declare class ScheduleReportTemperatureComponent implements OnInit {
    private activatedRoute;
    private router;
    private formBuilder;
    private scheduleReportController;
    private entityService;
    private scheduleReportService;
    private storageService;
    tscCommonService: TSCCommonService;
    private toastrService;
    COMMON_CONSTANT: {
        PRIVACY: string;
        TERMS: string;
        PRICING: string;
        SUPPORT_EMAIL: string;
        HYPHEN: string;
        NO_DATA_FOUND: string;
        NO_DATA: string;
        EMAIL_PATTERN: string;
        ZIPCODE_PATTERN: string;
        GST_NUMBER_PATTERN: string;
        SPECIAL_CHARACTERS_PATTERN: string;
        ALLOWED_IMAGE_TYPES: string[];
        DECIMAL_PATTERN: string;
        MAX_IMAGE_SIZE: number;
        ASIAN_KOLKATA: string;
        VIEW_API_KEY_ID: string;
        NO_MATCH_FOUND: string;
    };
    MATERIAL_CONSTANT: {
        MAT_RIPPLE_CENTER: boolean;
    };
    FormAction: typeof FormAction;
    FormErrorEnum: typeof FormErrorEnum;
    ButtonLabelEnum: typeof ButtonLabelEnum;
    ButtonTooltipEnum: typeof ButtonTooltipEnum;
    MaterialFormFieldAppearance: typeof MaterialFormFieldAppearance;
    orgID: any;
    entityM: Entity[];
    entityType: any[];
    allEntityID: any[];
    totalEntityCount: number;
    entities: any[];
    scheduleTemperatureReportFG: FormGroup;
    modifiedFG: any;
    scheduleReportID: any;
    action: string;
    pageTitle: string;
    isEqual: boolean;
    initialObject: any;
    scheduleReportI: ScheduleReport;
    schedulerConfigInput: ScheduleReportConfigurationComponent;
    constructor(activatedRoute: ActivatedRoute, router: Router, formBuilder: FormBuilder, scheduleReportController: ScheduleReportController, entityService: EntityService, scheduleReportService: ScheduleReportService, storageService: StorageService, tscCommonService: TSCCommonService, toastrService: ToastrService);
    ngOnInit(): void;
    setPageTitle(): void;
    scheduleTemperatureReportFGInit(): void;
    getEntitiesByParamMetric(): Promise<void>;
    getDistictEntityType(): void;
    entityTypeChange(entityType: any): Promise<void>;
    getEntitiesByType(type: any): Promise<Entity[]>;
    selectAllEntities(): void;
    selectedEntity(): void;
    patchSchedulerConfigInput(): void;
    getValidFormData(): void;
    scheduleReportSubmit(): void;
    createScheduleReport(): void;
    getScheduleReportByID(scheduleReportID: any): Promise<void>;
    patchScheduleReport(scheduleReportI: ScheduleReportI): Promise<void>;
    isValidUpdateForm(): void;
    checkEquality(): void;
    updateScheduleReport(): void;
    errorHandling: (formGroup: FormGroup, controlPath: string, error: string) => boolean;
    static ɵfac: i0.ɵɵFactoryDeclaration<ScheduleReportTemperatureComponent, never>;
    static ɵcmp: i0.ɵɵComponentDeclaration<ScheduleReportTemperatureComponent, "lib-temperature", never, {}, {}, never, never>;
}
