import { OnInit } from '@angular/core';
import { DeviceInfo } from '../../../model/device.model';
import { EntityLevelConsumption } from '../../../model/entity.model';
import { EntityController } from '../../../controller/entity.controller';
import { DeviceController } from '../../../controller/device.controller';
import { AggregateDataService } from '../../../service/aggregate-data.service';
import { DateService } from '@library/date';
import { TSCCommonService } from '@library/tsc-common';
import { StorageService } from '@library/storage-service';
import * as i0 from "@angular/core";
export declare class HomeComponent implements OnInit {
    private storageService;
    private dateService;
    private tscCommonService;
    private aggregateDataService;
    private entityController;
    private deviceController;
    commonConstant: {
        PRIVACY: string;
        TERMS: string;
        PRICING: string;
        SUPPORT_EMAIL: string;
        HYPHEN: string;
        NO_DATA_FOUND: string;
        NO_DATA: string;
        EMAIL_PATTERN: string;
        ZIPCODE_PATTERN: string;
        GST_NUMBER_PATTERN: string;
        ALLOWED_IMAGE_TYPES: string[];
        MAX_IMAGE_SIZE: number;
    };
    orgID: any;
    applicationKeyID: any;
    paramKey: any;
    label: any;
    icon: any;
    outerStrokeColor: any;
    outerStrokeGradientStopColor: any;
    innerStrokeColor: any;
    totalConsumptionCircleData: any;
    consumptionBreakupCircleData: any;
    todayConsumption: any;
    currentMonthConsumption: any;
    currentYearConsumption: any;
    entityConsumption: EntityLevelConsumption[];
    deviceInfoM: DeviceInfo;
    constructor(storageService: StorageService, dateService: DateService, tscCommonService: TSCCommonService, aggregateDataService: AggregateDataService, entityController: EntityController, deviceController: DeviceController);
    ngOnInit(): void;
    getTotalConsumption(selectedRange: any): Promise<any>;
    getTotalEntitiesConsumption(): Promise<void>;
    getEntityLevelConsumption(): void;
    highestConsumptionEntity(): EntityLevelConsumption;
    calculateProgress(entity: any): number;
    getDeviceInfo(): void;
    static ɵfac: i0.ɵɵFactoryDeclaration<HomeComponent, never>;
    static ɵcmp: i0.ɵɵComponentDeclaration<HomeComponent, "lib-home", never, {}, {}, never, never>;
}
