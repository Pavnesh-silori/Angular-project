import { ElementRef, OnInit, Renderer2 } from '@angular/core';
import { FormBuilder, FormGroup } from '@angular/forms';
import { MatDialogRef } from '@angular/material/dialog';
import { SourceM } from '../../../../../model/source-consumer.model';
import { SourceController } from '../../../../../controller/source.controller';
import { SourceService } from '../../../../../service/source.service';
import { MaterialFormFieldAppearance, ButtonLabelEnum, FormAction, PageTitleEnum, FormErrorEnum, TSCCommonService, Static, ButtonTooltipEnum } from '@library/tsc-common';
import { StorageService } from '@library/storage-service';
import { ToastrService } from '@library/toastr-service';
import * as i0 from "@angular/core";
export declare class SourceCreateUpdateComponent implements OnInit {
    data: any;
    private dialogRef;
    private renderer;
    private formBuilder;
    private storageService;
    private toastrService;
    tscCommonService: TSCCommonService;
    private sourceController;
    private sourceService;
    COMMON_CONSTANT: {
        PRIVACY: string;
        TERMS: string;
        PRICING: string;
        SUPPORT_EMAIL: string;
        HYPHEN: string;
        NO_DATA_FOUND: string;
        NO_DATA: string;
        EMAIL_PATTERN: string;
        ZIPCODE_PATTERN: string;
        GST_NUMBER_PATTERN: string;
        SPECIAL_CHARACTERS_PATTERN: string;
        ALLOWED_IMAGE_TYPES: string[];
        DECIMAL_PATTERN: string;
        MAX_IMAGE_SIZE: number;
        ASIAN_KOLKATA: string;
        VIEW_API_KEY_ID: string;
        NO_MATCH_FOUND: string;
    };
    MATERIAL_CONSTANT: {
        MAT_RIPPLE_CENTER: boolean;
    };
    FormAction: typeof FormAction;
    FormErrorEnum: typeof FormErrorEnum;
    ButtonLabelEnum: typeof ButtonLabelEnum;
    ButtonTooltipEnum: typeof ButtonTooltipEnum;
    PageTitleEnum: typeof PageTitleEnum;
    MaterialFormFieldAppearance: typeof MaterialFormFieldAppearance;
    pageTitle: string;
    orgID: any;
    sourceID: any;
    action: string;
    isEqual: boolean;
    intialObject: any;
    utilitySourceTypeM: any;
    allSourceTypeID: any[];
    totalSourceTypeCount: number;
    utilitySourceI: Static[];
    sourceType: Static[];
    sourceM: SourceM;
    sourceFG: FormGroup;
    header: ElementRef;
    footer: ElementRef;
    body: ElementRef;
    constructor(data: any, dialogRef: MatDialogRef<SourceCreateUpdateComponent>, renderer: Renderer2, formBuilder: FormBuilder, storageService: StorageService, toastrService: ToastrService, tscCommonService: TSCCommonService, sourceController: SourceController, sourceService: SourceService);
    ngOnInit(): void;
    ngAfterViewInit(): void;
    heightHandler(): void;
    getUtilitySourceAndType(): Promise<void>;
    sourceFGInit(): void;
    onUtilitySourceChange(utilitySourceID: number): void;
    sourceSubmit(): void;
    createSourceType(): void;
    getSourceTypeByID(sourceID: any): void;
    patchSource(source: SourceM): void;
    updateSourceType(): void;
    errorHandling: (formGroup: FormGroup, controlPath: string, error: string) => boolean;
    static ɵfac: i0.ɵɵFactoryDeclaration<SourceCreateUpdateComponent, never>;
    static ɵcmp: i0.ɵɵComponentDeclaration<SourceCreateUpdateComponent, "lib-create-update", never, {}, {}, never, never>;
}
