import { OnInit } from '@angular/core';
import { FormArray, FormBuilder, FormGroup } from '@angular/forms';
import { SelectionModel } from '@angular/cdk/collections';
import { SourceConsumerConfigure } from '../../../../model/source-consumer.model';
import { ParameterController } from '../../../../controller/parameter.controller';
import { SourceController } from '../../../../controller/source.controller';
import { ParameterService } from '../../../../service/parameter.service';
import { MaterialFormFieldAppearance, ButtonLabelEnum, FormAction, PageTitleEnum, FormErrorEnum, TSCCommonService, MatSelectSearchService, MessageAlertIconEnum, MessageAlertTypeEnum } from '@library/tsc-common';
import { StorageService } from '@library/storage-service';
import { ToastrService } from '@library/toastr-service';
import * as i0 from "@angular/core";
export declare class ConsumptionParamAddUpdateComponent implements OnInit {
    private formBuilder;
    private storageService;
    private toastrService;
    tscCommonService: TSCCommonService;
    private sourceController;
    private parameterController;
    private parameterService;
    COMMON_CONSTANT: {
        PRIVACY: string;
        TERMS: string;
        PRICING: string;
        SUPPORT_EMAIL: string;
        HYPHEN: string;
        NO_DATA_FOUND: string;
        NO_DATA: string;
        EMAIL_PATTERN: string;
        ZIPCODE_PATTERN: string;
        GST_NUMBER_PATTERN: string;
        SPECIAL_CHARACTERS_PATTERN: string;
        ALLOWED_IMAGE_TYPES: string[];
        DECIMAL_PATTERN: string;
        MAX_IMAGE_SIZE: number;
        ASIAN_KOLKATA: string;
        VIEW_API_KEY_ID: string;
        NO_MATCH_FOUND: string;
    };
    FormAction: typeof FormAction;
    FormErrorEnum: typeof FormErrorEnum;
    ButtonLabelEnum: typeof ButtonLabelEnum;
    PageTitleEnum: typeof PageTitleEnum;
    MessageAlertIconEnum: typeof MessageAlertIconEnum;
    MessageAlertTypeEnum: typeof MessageAlertTypeEnum;
    MaterialFormFieldAppearance: typeof MaterialFormFieldAppearance;
    orgID: any;
    isEqual: boolean;
    initialObject: any;
    consumptionParamM: any;
    consumptionParamFG: FormGroup;
    sourceConsumerConfiguredM: SourceConsumerConfigure;
    allConsumptionParamID: any[];
    selection: SelectionModel<any>;
    dependentConsumParamSearchUtil: MatSelectSearchService[];
    constructor(formBuilder: FormBuilder, storageService: StorageService, toastrService: ToastrService, tscCommonService: TSCCommonService, sourceController: SourceController, parameterController: ParameterController, parameterService: ParameterService);
    ngOnInit(): void;
    getSourceConsumerConfig(): void;
    getConsumptionParameter(): void;
    consumptionParamFGInit(): void;
    get consumptionParameterFA(): FormArray;
    getSavedConsumptionParameter(): Promise<void>;
    patchConsumptionParam(param: any): void;
    selectAll(): void;
    isAllSelected(): boolean;
    newConsumptionParameterFG(parameterID: any): FormGroup;
    selectAllDependentParam(index: number): void;
    selectDependentParam(index: number): void;
    consumptionParameterSubmit(): void;
    toggleField(index: any, parameterID: any): boolean;
    hasError: (control: string, error: string) => boolean;
    static ɵfac: i0.ɵɵFactoryDeclaration<ConsumptionParamAddUpdateComponent, never>;
    static ɵcmp: i0.ɵɵComponentDeclaration<ConsumptionParamAddUpdateComponent, "lib-add-update", never, {}, {}, never, never>;
}
