{"version":3,"file":"library-tsc-lite.js","sources":["../../../projects/library/tsc-lite/src/lib/tsc-lite.service.ts","../../../projects/library/tsc-lite/src/lib/tsc-lite.component.ts","../../../projects/library/tsc-lite/src/lib/tsc-lite.module.ts","../../../projects/library/tsc-lite/src/lib/tsc/constant/list.constant.ts","../../../projects/library/tsc-lite/src/lib/tsc/enum/error.enum.ts","../../../projects/library/tsc-lite/src/lib/tsc/enum/schedule-report.enum.ts","../../../projects/library/tsc-lite/src/lib/tsc/model/alert.model.ts","../../../projects/library/tsc-lite/src/lib/tsc/model/parameter.model.ts","../../../projects/library/tsc-lite/src/lib/tsc/model/entity.model.ts","../../../projects/library/tsc-lite/src/lib/tsc/model/device.model.ts","../../../projects/library/tsc-lite/src/lib/tsc/model/unit.model.ts","../../../projects/library/tsc-lite/src/lib/tsc/model/shift.model.ts","../../../projects/library/tsc-lite/src/lib/tsc/model/recent-data.model.ts","../../../projects/library/tsc-lite/src/lib/tsc/model/report.model.ts","../../../projects/library/tsc-lite/src/lib/tsc/model/aggregate-data.model.ts","../../../projects/library/tsc-lite/src/lib/tsc/model/make-model.model.ts","../../../projects/library/tsc-lite/src/lib/tsc/model/regulator.model.ts","../../../projects/library/tsc-lite/src/lib/tsc/controller/parameter.controller.ts","../../../projects/library/tsc-lite/src/lib/tsc/guard/resolve.guard.ts","../../../projects/library/tsc-lite/src/lib/tsc/service/parameter.service.ts","../../../projects/library/tsc-lite/src/lib/tsc/controller/aggregate-data.controller.ts","../../../projects/library/tsc-lite/src/lib/tsc/service/aggregate-data.service.ts","../../../projects/library/tsc-lite/src/lib/tsc/component/_shared/dialog/trend/trend.component.ts","../../../projects/library/tsc-lite/src/lib/tsc/component/_shared/dialog/trend/trend.component.html","../../../projects/library/tsc-lite/src/lib/tsc/component/_shared/dialog/trend/trend.module.ts","../../../projects/library/tsc-lite/src/lib/tsc/component/_shared/dialog/entity/entity.component.ts","../../../projects/library/tsc-lite/src/lib/tsc/component/_shared/dialog/entity/entity.component.html","../../../projects/library/tsc-lite/src/lib/tsc/component/_shared/dialog/entity/entity.module.ts","../../../projects/library/tsc-lite/src/lib/tsc/component/_shared/download-report/download-report.component.ts","../../../projects/library/tsc-lite/src/lib/tsc/component/_shared/download-report/download-report.component.html","../../../projects/library/tsc-lite/src/lib/tsc/component/_shared/download-report/download-report.module.ts","../../../projects/library/tsc-lite/src/lib/tsc/component/_shared/static-page/layout-not-found/layout-not-found.component.ts","../../../projects/library/tsc-lite/src/lib/tsc/component/_shared/static-page/layout-not-found/layout-not-found.component.html","../../../projects/library/tsc-lite/src/lib/tsc/component/_shared/static-page/layout-not-found/layout-not-found.module.ts","../../../projects/library/tsc-lite/src/lib/tsc/component/_shared/static-page/tsc-restrict/tsc-restrict.component.ts","../../../projects/library/tsc-lite/src/lib/tsc/component/_shared/static-page/tsc-restrict/tsc-restrict.component.html","../../../projects/library/tsc-lite/src/lib/tsc/component/_shared/static-page/tsc-restrict/tsc-restrict.module.ts","../../../projects/library/tsc-lite/src/lib/tsc/component/authorization/success/success.component.ts","../../../projects/library/tsc-lite/src/lib/tsc/component/authorization/success/success.component.html","../../../projects/library/tsc-lite/src/lib/tsc/component/dropdown/aggregation/aggregation.component.ts","../../../projects/library/tsc-lite/src/lib/tsc/component/dropdown/aggregation/aggregation.component.html","../../../projects/library/tsc-lite/src/lib/tsc/component/dropdown/aggregation/aggregation.module.ts","../../../projects/library/tsc-lite/src/lib/tsc/component/dropdown/aggregation-duration/aggregation-duration.component.ts","../../../projects/library/tsc-lite/src/lib/tsc/component/dropdown/aggregation-duration/aggregation-duration.component.html","../../../projects/library/tsc-lite/src/lib/tsc/component/dropdown/aggregation-duration/aggregation-duration.module.ts","../../../projects/library/tsc-lite/src/lib/tsc/component/dropdown/param-metric/param-metric.component.ts","../../../projects/library/tsc-lite/src/lib/tsc/component/dropdown/param-metric/param-metric.component.html","../../../projects/library/tsc-lite/src/lib/tsc/component/dropdown/param-metric/param-metric.module.ts","../../../projects/library/tsc-lite/src/lib/tsc/component/dropdown/parameter/parameter.component.ts","../../../projects/library/tsc-lite/src/lib/tsc/component/dropdown/parameter/parameter.component.html","../../../projects/library/tsc-lite/src/lib/tsc/component/dropdown/parameter/parameter.module.ts","../../../projects/library/tsc-lite/src/lib/tsc/enum/dropdown.enum.ts","../../../projects/library/tsc-lite/src/lib/tsc/controller/device.controller.ts","../../../projects/library/tsc-lite/src/lib/tsc/service/device.service.ts","../../../projects/library/tsc-lite/src/lib/tsc/component/dropdown/device/device.component.ts","../../../projects/library/tsc-lite/src/lib/tsc/component/dropdown/device/device.component.html","../../../projects/library/tsc-lite/src/lib/tsc/component/dropdown/device/device.module.ts","../../../projects/library/tsc-lite/src/lib/tsc/controller/entity.controller.ts","../../../projects/library/tsc-lite/src/lib/tsc/service/entity.service.ts","../../../projects/library/tsc-lite/src/lib/tsc/component/dropdown/entity/entity.component.ts","../../../projects/library/tsc-lite/src/lib/tsc/component/dropdown/entity/entity.component.html","../../../projects/library/tsc-lite/src/lib/tsc/component/dropdown/entity/entity.module.ts","../../../projects/library/tsc-lite/src/lib/tsc/component/dropdown/entity-type/entity-type.component.ts","../../../projects/library/tsc-lite/src/lib/tsc/component/dropdown/entity-type/entity-type.component.html","../../../projects/library/tsc-lite/src/lib/tsc/component/dropdown/entity-type/entity-type.module.ts","../../../projects/library/tsc-lite/src/lib/tsc/controller/unit.controller.ts","../../../projects/library/tsc-lite/src/lib/tsc/service/unit.service.ts","../../../projects/library/tsc-lite/src/lib/tsc/component/dropdown/unit/unit.component.ts","../../../projects/library/tsc-lite/src/lib/tsc/component/dropdown/unit/unit.component.html","../../../projects/library/tsc-lite/src/lib/tsc/component/dropdown/unit/unit.module.ts","../../../projects/library/tsc-lite/src/lib/tsc/component/landing-page/home/home.component.ts","../../../projects/library/tsc-lite/src/lib/tsc/component/landing-page/home/home.component.html","../../../projects/library/tsc-lite/src/lib/tsc/component/landing-page/home/home-routing.module.ts","../../../projects/library/tsc-lite/src/lib/tsc/component/landing-page/home/home.module.ts","../../../projects/library/tsc-lite/src/lib/tsc/controller/shift.controller.ts","../../../projects/library/tsc-lite/src/lib/tsc/service/shift.service.ts","../../../projects/library/tsc-lite/src/lib/tsc/component/dropdown/shift/shift.component.ts","../../../projects/library/tsc-lite/src/lib/tsc/component/dropdown/shift/shift.component.html","../../../projects/library/tsc-lite/src/lib/tsc/component/dropdown/shift/shift.module.ts","../../../projects/library/tsc-lite/src/lib/tsc/component/dashboard/consumption/consumption.component.ts","../../../projects/library/tsc-lite/src/lib/tsc/component/dashboard/consumption/consumption.component.html","../../../projects/library/tsc-lite/src/lib/tsc/component/dashboard/consumption/consumption-routing.module.ts","../../../projects/library/tsc-lite/src/lib/tsc/component/dashboard/consumption/consumption.module.ts","../../../projects/library/tsc-lite/src/lib/tsc/component/dashboard/consumption-breakup/consumption-breakup.component.ts","../../../projects/library/tsc-lite/src/lib/tsc/component/dashboard/consumption-breakup/consumption-breakup.component.html","../../../projects/library/tsc-lite/src/lib/tsc/component/dashboard/consumption-breakup/consumption-breakup-routing.module.ts","../../../projects/library/tsc-lite/src/lib/tsc/component/dashboard/consumption-breakup/consumption-breakup.module.ts","../../../projects/library/tsc-lite/src/lib/tsc/service/trend.service.ts","../../../projects/library/tsc-lite/src/lib/tsc/controller/recent-data.controller.ts","../../../projects/library/tsc-lite/src/lib/tsc/service/recent-data.service.ts","../../../projects/library/tsc-lite/src/lib/tsc/component/dashboard/entity/entity.component.ts","../../../projects/library/tsc-lite/src/lib/tsc/component/dashboard/entity/entity.component.html","../../../projects/library/tsc-lite/src/lib/tsc/component/dashboard/entity/entity-routing.module.ts","../../../projects/library/tsc-lite/src/lib/tsc/component/dashboard/entity/entity.module.ts","../../../projects/library/tsc-lite/src/lib/tsc/service/alert.service.ts","../../../projects/library/tsc-lite/src/lib/tsc/component/dashboard/facility/facility.component.ts","../../../projects/library/tsc-lite/src/lib/tsc/component/dashboard/facility/facility.component.html","../../../projects/library/tsc-lite/src/lib/tsc/component/dashboard/facility/facility-routing.module.ts","../../../projects/library/tsc-lite/src/lib/tsc/component/dashboard/facility/facility.module.ts","../../../projects/library/tsc-lite/src/lib/tsc/controller/entity-device.controller.ts","../../../projects/library/tsc-lite/src/lib/tsc/service/entity-device.service.ts","../../../projects/library/tsc-lite/src/lib/tsc/component/dashboard/meter-data/meter-data.component.ts","../../../projects/library/tsc-lite/src/lib/tsc/component/dashboard/meter-data/meter-data.component.html","../../../projects/library/tsc-lite/src/lib/tsc/component/dashboard/meter-data/meter-data-routing.module.ts","../../../projects/library/tsc-lite/src/lib/tsc/component/dashboard/meter-data/meter-data.module.ts","../../../projects/library/tsc-lite/src/lib/tsc/component/dashboard/parameter/tab/tab-routing.module.ts","../../../projects/library/tsc-lite/src/lib/tsc/component/dashboard/parameter/tab/tab.component.ts","../../../projects/library/tsc-lite/src/lib/tsc/component/dashboard/parameter/tab/tab.component.html","../../../projects/library/tsc-lite/src/lib/tsc/component/dashboard/parameter/tab/tab.module.ts","../../../projects/library/tsc-lite/src/lib/tsc/component/dashboard/parameter/by-entity/by-entity.component.ts","../../../projects/library/tsc-lite/src/lib/tsc/component/dashboard/parameter/by-entity/by-entity.component.html","../../../projects/library/tsc-lite/src/lib/tsc/component/dashboard/parameter/by-entity/by-entity-routing.module.ts","../../../projects/library/tsc-lite/src/lib/tsc/component/dashboard/parameter/by-entity/by-entity.module.ts","../../../projects/library/tsc-lite/src/lib/tsc/component/dashboard/parameter/by-parameter/by-parameter.component.ts","../../../projects/library/tsc-lite/src/lib/tsc/component/dashboard/parameter/by-parameter/by-parameter.component.html","../../../projects/library/tsc-lite/src/lib/tsc/component/dashboard/parameter/by-parameter/by-parameter-routing.module.ts","../../../projects/library/tsc-lite/src/lib/tsc/component/dashboard/parameter/by-parameter/by-parameter.module.ts","../../../projects/library/tsc-lite/src/lib/tsc/component/_shared/filter/source-load/source-load.component.ts","../../../projects/library/tsc-lite/src/lib/tsc/component/_shared/filter/source-load/source-load.component.html","../../../projects/library/tsc-lite/src/lib/tsc/component/_shared/filter/source-load/source-load.module.ts","../../../projects/library/tsc-lite/src/lib/tsc/service/report.service.ts","../../../projects/library/tsc-lite/src/lib/tsc/component/report/breakup/breakup.component.ts","../../../projects/library/tsc-lite/src/lib/tsc/component/report/breakup/breakup.component.html","../../../projects/library/tsc-lite/src/lib/tsc/component/report/breakup/breakup-routing.module.ts","../../../projects/library/tsc-lite/src/lib/tsc/component/report/breakup/breakup.module.ts","../../../projects/library/tsc-lite/src/lib/tsc/component/report/cgwa/cgwa.component.ts","../../../projects/library/tsc-lite/src/lib/tsc/component/report/cgwa/cgwa.component.html","../../../projects/library/tsc-lite/src/lib/tsc/component/report/cgwa/cgwa-routing.module.ts","../../../projects/library/tsc-lite/src/lib/tsc/component/report/cgwa/cgwa.module.ts","../../../projects/library/tsc-lite/src/lib/tsc/component/report/consumption-breakup/consumption-breakup.component.ts","../../../projects/library/tsc-lite/src/lib/tsc/component/report/consumption-breakup/consumption-breakup.component.html","../../../projects/library/tsc-lite/src/lib/tsc/component/report/consumption-breakup/consumption-breakup-routing.module.ts","../../../projects/library/tsc-lite/src/lib/tsc/component/report/consumption-breakup/consumption-breakup.module.ts","../../../projects/library/tsc-lite/src/lib/tsc/model/source-consumer.model.ts","../../../projects/library/tsc-lite/src/lib/tsc/controller/source.controller.ts","../../../projects/library/tsc-lite/src/lib/tsc/service/source.service.ts","../../../projects/library/tsc-lite/src/lib/tsc/component/report/consumption/consumption.component.ts","../../../projects/library/tsc-lite/src/lib/tsc/component/report/consumption/consumption.component.html","../../../projects/library/tsc-lite/src/lib/tsc/component/report/consumption/consumption-routing.module.ts","../../../projects/library/tsc-lite/src/lib/tsc/component/report/consumption/consumption.module.ts","../../../projects/library/tsc-lite/src/lib/tsc/model/data-availability.model.ts","../../../projects/library/tsc-lite/src/lib/tsc/controller/data-availability.controller.ts","../../../projects/library/tsc-lite/src/lib/tsc/component/report/data-availability/data-availability.component.ts","../../../projects/library/tsc-lite/src/lib/tsc/component/report/data-availability/data-availability.component.html","../../../projects/library/tsc-lite/src/lib/tsc/component/report/data-availability/data-availability-routing.module.ts","../../../projects/library/tsc-lite/src/lib/tsc/component/report/data-availability/data-availability.module.ts","../../../projects/library/tsc-lite/src/lib/tsc/component/report/meter/meter.component.ts","../../../projects/library/tsc-lite/src/lib/tsc/component/report/meter/meter.component.html","../../../projects/library/tsc-lite/src/lib/tsc/component/report/meter/meter-routing.module.ts","../../../projects/library/tsc-lite/src/lib/tsc/component/report/meter/meter.module.ts","../../../projects/library/tsc-lite/src/lib/tsc/component/report/parameter/parameter.component.ts","../../../projects/library/tsc-lite/src/lib/tsc/component/report/parameter/parameter.component.html","../../../projects/library/tsc-lite/src/lib/tsc/component/report/parameter/parameter-routing.module.ts","../../../projects/library/tsc-lite/src/lib/tsc/component/report/parameter/parameter.module.ts","../../../projects/library/tsc-lite/src/lib/tsc/component/report/raw-data/raw-data.component.ts","../../../projects/library/tsc-lite/src/lib/tsc/component/report/raw-data/raw-data.component.html","../../../projects/library/tsc-lite/src/lib/tsc/component/report/raw-data/raw-data-routing.module.ts","../../../projects/library/tsc-lite/src/lib/tsc/component/report/raw-data/raw-data.module.ts","../../../projects/library/tsc-lite/src/lib/tsc/component/report/sourcing/sourcing.component.ts","../../../projects/library/tsc-lite/src/lib/tsc/component/report/sourcing/sourcing.component.html","../../../projects/library/tsc-lite/src/lib/tsc/component/report/sourcing/sourcing-routing.module.ts","../../../projects/library/tsc-lite/src/lib/tsc/component/report/sourcing/sourcing.module.ts","../../../projects/library/tsc-lite/src/lib/tsc/component/report/usage-across-facility/usage-across-facility.component.ts","../../../projects/library/tsc-lite/src/lib/tsc/component/report/usage-across-facility/usage-across-facility.component.html","../../../projects/library/tsc-lite/src/lib/tsc/component/report/usage-across-facility/usage-across-facility-routing.module.ts","../../../projects/library/tsc-lite/src/lib/tsc/component/report/usage-across-facility/usage-across-facility.module.ts","../../../projects/library/tsc-lite/src/lib/tsc/component/schedule-report/_shared/configuration/configuration.component.ts","../../../projects/library/tsc-lite/src/lib/tsc/component/schedule-report/_shared/configuration/configuration.component.html","../../../projects/library/tsc-lite/src/lib/tsc/component/schedule-report/_shared/configuration/configuration.module.ts","../../../projects/library/tsc-lite/src/lib/tsc/model/schedule-report.model.ts","../../../projects/library/tsc-lite/src/lib/tsc/controller/schedule-report.controller.ts","../../../projects/library/tsc-lite/src/lib/tsc/component/schedule-report/_shared/page/page.component.ts","../../../projects/library/tsc-lite/src/lib/tsc/component/schedule-report/_shared/page/page.component.html","../../../projects/library/tsc-lite/src/lib/tsc/component/schedule-report/_shared/page/page-routing.module.ts","../../../projects/library/tsc-lite/src/lib/tsc/component/schedule-report/_shared/page/page.module.ts","../../../projects/library/tsc-lite/src/lib/tsc/service/schedule-report.service.ts","../../../projects/library/tsc-lite/src/lib/tsc/component/schedule-report/breakup/breakup.component.ts","../../../projects/library/tsc-lite/src/lib/tsc/component/schedule-report/breakup/breakup.component.html","../../../projects/library/tsc-lite/src/lib/tsc/component/schedule-report/breakup/breakup-routing.module.ts","../../../projects/library/tsc-lite/src/lib/tsc/component/schedule-report/breakup/breakup.module.ts","../../../projects/library/tsc-lite/src/lib/tsc/component/schedule-report/cgwa/cgwa.component.ts","../../../projects/library/tsc-lite/src/lib/tsc/component/schedule-report/cgwa/cgwa.component.html","../../../projects/library/tsc-lite/src/lib/tsc/component/schedule-report/cgwa/cgwa-routing.module.ts","../../../projects/library/tsc-lite/src/lib/tsc/component/schedule-report/cgwa/cgwa.module.ts","../../../projects/library/tsc-lite/src/lib/tsc/component/schedule-report/consumption/consumption.component.ts","../../../projects/library/tsc-lite/src/lib/tsc/component/schedule-report/consumption/consumption.component.html","../../../projects/library/tsc-lite/src/lib/tsc/component/schedule-report/consumption/consumption-routing.module.ts","../../../projects/library/tsc-lite/src/lib/tsc/component/schedule-report/consumption/consumption.module.ts","../../../projects/library/tsc-lite/src/lib/tsc/component/schedule-report/sourcing/sourcing.component.ts","../../../projects/library/tsc-lite/src/lib/tsc/component/schedule-report/sourcing/sourcing.component.html","../../../projects/library/tsc-lite/src/lib/tsc/component/schedule-report/sourcing/sourcing-routing.module.ts","../../../projects/library/tsc-lite/src/lib/tsc/component/schedule-report/sourcing/sourcing.module.ts","../../../projects/library/tsc-lite/src/lib/tsc/component/schedule-report/temperature/temperature.component.ts","../../../projects/library/tsc-lite/src/lib/tsc/component/schedule-report/temperature/temperature.component.html","../../../projects/library/tsc-lite/src/lib/tsc/component/schedule-report/temperature/temperature-routing.module.ts","../../../projects/library/tsc-lite/src/lib/tsc/component/schedule-report/temperature/temperature.module.ts","../../../projects/library/tsc-lite/src/lib/tsc/component/layout/_dialog/create-update/entity/entity.component.ts","../../../projects/library/tsc-lite/src/lib/tsc/component/layout/_dialog/create-update/entity/entity.component.html","../../../projects/library/tsc-lite/src/lib/tsc/component/layout/_dialog/create-update/entity/entity.module.ts","../../../projects/library/tsc-lite/src/lib/tsc/component/layout/_dialog/create-update/layout/layout.component.ts","../../../projects/library/tsc-lite/src/lib/tsc/component/layout/_dialog/create-update/layout/layout.component.html","../../../projects/library/tsc-lite/src/lib/tsc/component/layout/_dialog/create-update/layout/layout.module.ts","../../../projects/library/tsc-lite/src/lib/tsc/component/layout/_dialog/create-update/source-load/source-load.component.ts","../../../projects/library/tsc-lite/src/lib/tsc/component/layout/_dialog/create-update/source-load/source-load.component.html","../../../projects/library/tsc-lite/src/lib/tsc/component/layout/_dialog/create-update/source-load/source-load.module.ts","../../../projects/library/tsc-lite/src/lib/tsc/component/layout/page/page.component.ts","../../../projects/library/tsc-lite/src/lib/tsc/component/layout/page/page.component.html","../../../projects/library/tsc-lite/src/lib/tsc/component/layout/page/page-routing.module.ts","../../../projects/library/tsc-lite/src/lib/tsc/component/layout/page/page.module.ts","../../../projects/library/tsc-lite/src/lib/tsc/component/layout/chart/chart.component.ts","../../../projects/library/tsc-lite/src/lib/tsc/component/layout/chart/chart.component.html","../../../projects/library/tsc-lite/src/lib/tsc/component/layout/chart/chart-routing.module.ts","../../../projects/library/tsc-lite/src/lib/tsc/component/layout/chart/chart.module.ts","../../../projects/library/tsc-lite/src/lib/tsc/component/layout/list/list.component.ts","../../../projects/library/tsc-lite/src/lib/tsc/component/layout/list/list.component.html","../../../projects/library/tsc-lite/src/lib/tsc/component/layout/list/list-routing.module.ts","../../../projects/library/tsc-lite/src/lib/tsc/component/layout/list/list.module.ts","../../../projects/library/tsc-lite/src/lib/tsc/component/layout/tab/tab-routing.module.ts","../../../projects/library/tsc-lite/src/lib/tsc/component/layout/tab/tab.component.ts","../../../projects/library/tsc-lite/src/lib/tsc/component/layout/tab/tab.component.html","../../../projects/library/tsc-lite/src/lib/tsc/component/layout/tab/tab.module.ts","../../../projects/library/tsc-lite/src/lib/tsc/component/layout/map-device/add/add.component.ts","../../../projects/library/tsc-lite/src/lib/tsc/component/layout/map-device/add/add.component.html","../../../projects/library/tsc-lite/src/lib/tsc/component/layout/map-device/add/add-routing.module.ts","../../../projects/library/tsc-lite/src/lib/tsc/component/layout/map-device/add/add.module.ts","../../../projects/library/tsc-lite/src/lib/tsc/component/layout/map-device/view/view.component.ts","../../../projects/library/tsc-lite/src/lib/tsc/component/layout/map-device/view/view.component.html","../../../projects/library/tsc-lite/src/lib/tsc/component/layout/map-device/view/view-routing.module.ts","../../../projects/library/tsc-lite/src/lib/tsc/component/layout/map-device/view/view.module.ts","../../../projects/library/tsc-lite/src/lib/tsc/controller/consumer.controller.ts","../../../projects/library/tsc-lite/src/lib/tsc/component/preferences/_dialog/consumer/create-update/create-update.component.ts","../../../projects/library/tsc-lite/src/lib/tsc/component/preferences/_dialog/consumer/create-update/create-update.component.html","../../../projects/library/tsc-lite/src/lib/tsc/component/preferences/consumer/page/page.component.ts","../../../projects/library/tsc-lite/src/lib/tsc/component/preferences/consumer/page/page.component.html","../../../projects/library/tsc-lite/src/lib/tsc/component/preferences/consumer/page/page-routing.module.ts","../../../projects/library/tsc-lite/src/lib/tsc/component/preferences/consumer/page/page.module.ts","../../../projects/library/tsc-lite/src/lib/tsc/component/preferences/_dialog/source/create-update/create-update.component.ts","../../../projects/library/tsc-lite/src/lib/tsc/component/preferences/_dialog/source/create-update/create-update.component.html","../../../projects/library/tsc-lite/src/lib/tsc/component/preferences/_dialog/source/create-update/create-update-routing.module.ts","../../../projects/library/tsc-lite/src/lib/tsc/component/preferences/_dialog/source/create-update/create-update.module.ts","../../../projects/library/tsc-lite/src/lib/tsc/component/preferences/_dialog/consumer/create-update/create-update-routing.module.ts","../../../projects/library/tsc-lite/src/lib/tsc/component/preferences/_dialog/consumer/create-update/create-update.module.ts","../../../projects/library/tsc-lite/src/lib/tsc/component/preferences/source/page/page.component.ts","../../../projects/library/tsc-lite/src/lib/tsc/component/preferences/source/page/page.component.html","../../../projects/library/tsc-lite/src/lib/tsc/component/preferences/source/page/page-routing.module.ts","../../../projects/library/tsc-lite/src/lib/tsc/component/preferences/source/page/page.module.ts","../../../projects/library/tsc-lite/src/lib/tsc/component/preferences/consumption-parameter/add-update/add-update.component.ts","../../../projects/library/tsc-lite/src/lib/tsc/component/preferences/consumption-parameter/add-update/add-update.component.html","../../../projects/library/tsc-lite/src/lib/tsc/component/preferences/consumption-parameter/add-update/add-update-routing.module.ts","../../../projects/library/tsc-lite/src/lib/tsc/component/preferences/consumption-parameter/add-update/add-update.module.ts","../../../projects/library/tsc-lite/src/lib/tsc/interceptor/interceptor.ts","../../../projects/library/tsc-lite/src/lib/tsc/controller/make-model.controller.ts","../../../projects/library/tsc-lite/src/lib/tsc/controller/regulator.controller.ts","../../../projects/library/tsc-lite/src/lib/tsc/service/make-model.service.ts","../../../projects/library/tsc-lite/src/public-api.ts","../../../projects/library/tsc-lite/src/library-tsc-lite.ts"],"sourcesContent":["import { Injectable } from '@angular/core';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class TscLiteService {\n\n  constructor() { }\n}\n","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'lib-tsc-lite',\n  template: `\n    <p>\n      tsc-lite works!\n    </p>\n  `,\n  styles: [\n  ]\n})\nexport class TscLiteComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit(): void {\n  }\n\n}\n","import { ModuleWithProviders, NgModule } from '@angular/core';\n\nimport { TscLiteComponent } from './tsc-lite.component';\n\n@NgModule({\n    declarations: [\n        TscLiteComponent,\n    ],\n    imports: [\n    ],\n    exports: [\n        TscLiteComponent\n    ]\n})\n\nexport class TscLiteModule {\n    static forRoot(environment: any): ModuleWithProviders<TscLiteModule> {\n        return {\n            ngModule: TscLiteModule,\n            providers: [\n                { provide: 'environment', useValue: environment }\n            ]\n        };\n    }\n}","import { STATUS_CONSTANT } from \"@library/tsc-common\";\n\nexport const LIST_CONSTANT = {\n\n    CONDITION: [\n        {\n            label: '>= (Greater or Equal)',\n            value: 'GTE'\n        },\n        {\n            label: '<= (Less or Equal)',\n            value: 'LTE'\n        },\n        {\n            label: '= (Equal)',\n            value: 'EQUAL'\n        },\n        {\n            label: '> (Greater than)',\n            value: 'GREATER'\n        },\n        {\n            label: '< (Less than)',\n            value: 'LESS'\n        },\n        {\n            label: 'between',\n            value: 'BETWEEN'\n        }\n    ],\n\n    EMAIL_FREQUENCY: [\n        {\n            label: \"Never\",\n            value: \"NEVER\"\n        },\n        {\n            label: \"24 Hrs\",\n            value: \"HOURS_24\"\n        },\n        {\n            label: \"12 Hrs\",\n            value: \"HOURS_12\"\n        },\n        {\n            label: \"6 Hrs\",\n            value: \"HOURS_6\"\n        },\n        {\n            label: \"4 Hrs\",\n            value: \"HOURS_4\"\n        }\n    ],\n\n    SMS_FREQUENCY: [\n        {\n            label: \"Never\",\n            value: \"NEVER\"\n        },\n        {\n            label: \"24 Hrs\",\n            value: \"HOURS_24\"\n        },\n        {\n            label: \"12 Hrs\",\n            value: \"HOURS_12\"\n        }\n    ],\n\n    ESCALATION_FREQUENCY: [\n        {\n            label: \"Day\",\n            value: \"DAY\"\n        },\n        {\n            label: \"Hour\",\n            value: \"HOUR\"\n        },\n        {\n            label: \"Min\",\n            value: \"MIN\"\n        }\n    ],\n\n    ALERT_RULE_FREQUENCY: [\n        {\n            label: 'Instant',\n            value: 'INSTANT'\n        },\n        {\n            label: \"Daily(Today)\",\n            value: \"DAILY_TODAY\"\n        },\n        {\n            label: \"Daily(Yesterday)\",\n            value: \"DAILY_YESTERDAY\"\n        },\n        {\n            label: \"Monthly(Current month)\",\n            value: \"MONTHLY_CURRENT\"\n        },\n        {\n            label: \"Monthly(Last month)\",\n            value: \"MONTHLY_LAST\"\n        },\n        {\n            label: \"Hourly(Current hour)\",\n            value: \"HOURLY_CURRENT\"\n        },\n        {\n            label: \"Hourly(Last hour)\",\n            value: \"HOURLY_LAST\"\n        }\n    ],\n\n    TREND_DATE_RANGE: [\n        {\n            label: \"Last 24 hrs\",\n            value: \"LAST_24_HRS\"\n        },\n        {\n            label: \"Last 7 days\",\n            value: \"LAST_7_DAYS\"\n        },\n        {\n            label: \"Last 30 days\",\n            value: \"LAST_30_DAYS\"\n        }\n    ],\n\n    AGGREGATION_DURATION: [] = [\n        {\n            label: \"15 minutes\",\n            value: \"min_15\"\n\n        },\n        {\n            label: \"30 minutes\",\n            value: \"min_30\"\n        },\n        {\n            label: \"Hourly\",\n            value: \"hour_1\"\n        },\n        {\n            label: \"12 hours\",\n            value: \"hour_12\"\n        },\n        {\n            label: \"Daily\",\n            value: \"day_1\"\n        },\n        {\n            label: \"Monthly\",\n            value: \"month_1\"\n        }\n    ],\n\n    AGGREGATION: [] = [\n        {\n            label: 'Absolute Average',\n            value: 'avgabs'\n        },\n        {\n            label: 'Absolute Maximum',\n            value: 'maxabs'\n        },\n        {\n            label: 'Absolute Minimum',\n            value: 'minabs'\n        },\n        {\n            label: 'Absolute Sum',\n            value: 'sumabs'\n        },\n        {\n            label: 'Average',\n            value: 'avg'\n        },\n        {\n            label: 'Count',\n            value: 'count'\n        },\n        {\n            label: 'First',\n            value: 'first'\n        },\n        {\n            label: 'Last',\n            value: 'last'\n        },\n        {\n            label: 'Maximum',\n            value: 'max'\n        },\n        {\n            label: 'Minimum',\n            value: 'min'\n        },\n        {\n            label: 'Sum',\n            value: 'sum'\n        }\n    ],\n\n    DOWNLOAD_TYPE: [] = [\n        {\n            label: \"PDF\",\n            value: \"pdf\"\n        },\n        {\n            label: \"CSV\",\n            value: \"csv\"\n        },\n        {\n            label: \"XLSX\",\n            value: \"xlsx\"\n        }\n    ],\n\n    SOURCE_LOAD: [] = [\n        {\n            label: \"Source\",\n            value: \"source\"\n        },\n        {\n            label: \"Consumer\",\n            value: \"load\"\n        }\n    ],\n\n    HOURLY_NOTIFICATION_FREQUENCY: [] = [\n        {\n            hour: 1,\n            label: \"1 Hr\",\n            value: \"HOURS_1\"\n        },\n        {\n            hour: 2,\n            label: \"2 Hrs\",\n            value: \"HOURS_2\"\n        },\n        {\n            hour: 4,\n            label: \"4 Hrs\",\n            value: \"HOURS_4\"\n        },\n        {\n            hour: 6,\n            label: \"6 Hrs\",\n            value: \"HOURS_6\"\n        },\n        {\n            hour: 8,\n            label: \"8 Hrs\",\n            value: \"HOURS_8\"\n        },\n        {\n            hour: 12,\n            label: \"12 Hrs\",\n            value: \"HOURS_12\"\n        },\n        {\n            hour: 24,\n            label: \"24 Hrs\",\n            value: \"HOURS_24\"\n        }\n    ],\n\n    HOURLY_REMINDER_FREQUENCY: [] = [\n        {\n            hour: 2,\n            label: \"2 Hrs\",\n            value: \"HOURS_2\"\n        },\n        {\n            hour: 4,\n            label: \"4 Hrs\",\n            value: \"HOURS_4\"\n        },\n        {\n            hour: 6,\n            label: \"6 Hrs\",\n            value: \"HOURS_6\"\n        },\n        {\n            hour: 12,\n            label: \"12 Hrs\",\n            value: \"HOURS_12\"\n        },\n        {\n            hour: 24,\n            label: \"24 Hrs\",\n            value: \"HOURS_24\"\n        },\n        {\n            hour: 48,\n            label: \"48 Hrs\",\n            value: \"HOURS_48\"\n        }\n    ],\n\n    ENERGY_APP_SCHEDULE_REPORT_TYPE: [] = [\n        {\n            label: \"Energy sourcing report\",\n            value: \"SOURCING_REPORT\"\n        },\n        {\n            label: \"Energy breakup report\",\n            value: \"BREAKUP_REPORT\"\n        },\n        {\n            label: \"Energy consumption report\",\n            value: \"CONSUMPTION_REPORT\"\n        },\n        {\n            label: \"Temperature Report\",\n            value: \"TEMPERATURE_REPORT\"\n        }\n    ],\n\n    WATER_APP_SCHEDULE_REPORT_TYPE: [] = [\n        {\n            label: \"Water sourcing report\",\n            value: \"SOURCING_REPORT\"\n        },\n        {\n            label: \"Water breakup report\",\n            value: \"BREAKUP_REPORT\"\n        },\n        {\n            label: \"Water consumption report\",\n            value: \"CONSUMPTION_REPORT\"\n        },\n        {\n            label: \"CGWA Report\",\n            value: \"CGWA_REPORT\"\n        }\n    ]\n}","export enum ReportErrorEnum {\n    INVALID_DATE_LABEL = 'Invalid dates!',\n    INVALID_DATE_MESSAGE = 'Select distinct dates to view the desired report.',\n    TIME_EXCEEDED_LABEL = 'Time exceeded!',\n    HOUR_24_TIME_EXCEEDED_MESSAGE = 'You cannot view or download report for more than 24 hours.',\n    DAY_30_TIME_EXCEEDED_MESSAGE = 'You cannot view or download report for more than 30 days.',\n    DATA_NOT_FOUND_LABEL = 'No data found!',\n    DATA_NOT_FOUND_MESSAGE = 'No data was recorded for the above specified filters. Please keep changing the filters and try again.',\n    INVALID_ERROR_LABEL = 'Please try again later!',\n    INVALID_ERROR_MESSAGE = 'We are not able to fetch the data for the specified filters at the moment. Please keep changing the filters and try again.'\n}\n\nexport enum DashboardErrorEnum {\n    DATA_NOT_FOUND_LABEL = 'No data found!',\n    DATA_NOT_FOUND_MESSAGE = 'No data was recorded at the moment. Please try again after sometime.',\n    INVALID_ERROR_LABEL = 'Please try again later!',\n    INVALID_ERROR_MESSAGE = 'We are not able to fetch the requested data at the moment. Please try again after sometime.'\n}","export enum ScheduleReportTypeEnum {\n    SOURCING_REPORT = 'SOURCING_REPORT',\n    BREAKUP_REPORT = 'BREAKUP_REPORT',\n    CONSUMPTION_REPORT = 'CONSUMPTION_REPORT',\n    CGWA_REPORT = 'CGWA_REPORT',\n    TEMPERATURE_REPORT = 'TEMPERATURE_REPORT'\n}","export interface AlertM {\n    showAlert: boolean;\n    alertLabel: string;\n    alertContent: string;\n    messageAlertType: string;\n    messageAlertIcon: string;\n}\n\nexport class Alert implements AlertM {\n    showAlert = false;\n    alertLabel = '';\n    alertContent = '';\n    messageAlertType = '';\n    messageAlertIcon = '';\n}","export interface ParameterM {\n    id: number;\n    name: string;\n    type: string;\n    label: string;\n    unit: string;\n    paramMetric: string;\n    isCounter: boolean;\n}\n\nexport class Parameter implements ParameterM {\n    id;\n    name;\n    type;\n    label;\n    unit;\n    paramMetric;\n    isCounter;\n}\n\nexport interface ConsumptionParameterM {\n    consumptionParameter: Array<{\n        consumptionParameterID: number;\n        id: number;\n        name: string;\n        type: string;\n        label: string;\n        unit: string;\n        isCounter: boolean;\n        paramMetric: string;\n        aggregation: Array<{\n            keyID: string;\n        }>;\n        dependentParameter: ParameterM[];\n    }>\n}\n\nexport class ConsumptionParameter implements ConsumptionParameterM {\n    consumptionParameter;\n}\n\nexport interface SavedConsumptionParameterM {\n    consumptionParamID: number;\n    dependentParameterID: number[];\n}\n\nexport class SavedConsumptionParameter implements SavedConsumptionParameterM {\n    consumptionParamID;\n    dependentParameterID;\n}","export interface EntityM {\n    id: number;\n    name: string;\n    type: string;\n}\n\nexport class Entity implements EntityM {\n    id;\n    name;\n    type;\n}\n\nexport interface ChildEntity {\n    id: number;\n    name: string;\n    type: string;\n    children: ChildEntity[];\n}\n\nexport interface ParameterEntityM {\n    id: number;\n    name: string;\n    type: string;\n    isParameterExists: boolean;\n    children: ChildEntity[];\n}\n\nexport class ParameterEntity implements ParameterEntityM {\n    id;\n    name;\n    type;\n    isParameterExists;\n    children;\n}\n\nexport interface EntityWithChildrenM {\n    id: number;\n    name: string;\n    type: string;\n    entityStatusFlag: boolean;\n    children: ChildEntity[];\n}\n\nexport class EntityWithChildren implements EntityWithChildrenM {\n    id = null;\n    name = null;\n    type = null;\n    entityStatusFlag = false;\n    children = [];\n}\n\nexport interface EntityLevelConsumptionM {\n    id: number;\n    name: string;\n    value: number;\n    unit: string;\n}\n\nexport class EntityLevelConsumption implements EntityLevelConsumptionM {\n    id;\n    name;\n    value;\n    unit;\n}\n\nexport interface EntityTypeM {\n    type: string;\n}\n\nexport class EntityType implements EntityTypeM {\n    type = null;\n}\n\nexport interface DashboardEntitiesI {\n    id: number;\n    name: string;\n    type: string;\n    status: string;\n}\n\nexport class DashboardEntities implements DashboardEntitiesI {\n    id = null;\n    name = null;\n    type = null;\n    status = null;\n}","export interface DeviceM {\n    id: number;\n    name: string;\n    sourceOrLoad: string;\n    sourceLoadType: string;\n    status: string;\n}\n\nexport class Device implements DeviceM {\n    id;\n    name;\n    sourceOrLoad;\n    sourceLoadType;\n    status;\n}\n\nexport interface DeviceModel {\n    id: number;\n    name: string;\n    sourceOrLoad: string;\n    sourceLoadType: string;\n}\n\nexport interface DevicesWithEntitiesM {\n    id: number;\n    name: string;\n    type: string;\n    devices: DeviceModel[];\n}\n\nexport class DevicesWithEntities implements DevicesWithEntitiesM {\n    id;\n    name;\n    type;\n    devices;\n}\n\nexport interface StatusInfoM {\n    total: number;\n    online: number;\n    delay: number;\n    offline: number;\n}\n\nexport class StatusInfo implements StatusInfoM {\n    total;\n    online;\n    delay;\n    offline;\n}\n\nexport interface DeviceMappingM {\n    id: number;\n    name: string;\n    type: string;\n    make: string;\n    model: string;\n    parameter: Array<{\n        id: number;\n        label: string;\n    }>;\n    mappingRecords: Array<{\n        parameterID: number;\n        parameterName: string;\n        mapping: Array<{\n            mappingID: number;\n            type: string;\n            value: number;\n            name: string;\n        }>;\n    }>;\n}\n\nexport class DeviceMapping implements DeviceMappingM {\n    id;\n    name;\n    type;\n    make;\n    model;\n    parameter;\n    mappingRecords: { \n        parameterID: number;\n        parameterName: string;\n        mapping: { \n            mappingID: number;\n            type: string;\n            value: number;\n            name: string;\n        }[];\n    }[];\n}\n","export interface UnitM {\n    id: number;\n    name: string;\n    type: string;\n}\n\nexport class Unit implements UnitM {\n    id;\n    name;\n    type;\n}","export interface ShiftM {\n    id: number;\n    name: string;\n    keyID: string;\n    startTime: string;\n    endTime: string;\n}\n\nexport class Shift implements ShiftM {\n    id;\n    name;\n    keyID;\n    startTime;\n    endTime;\n}","export interface RecentDataRequestWithParamM {\n    params: Array<{\n        name: string;\n    }>,\n    deviceID: number[];\n    includeDescendants: boolean;\n    timezone: string;\n    entityType: string;\n    backscan: number;\n}\n\nexport class RecentDataRequestWithParam implements RecentDataRequestWithParamM {\n    params = null;\n    deviceID = null;\n    includeDescendants = false;\n    timezone = null;\n    entityType = null;\n    backscan = null;\n}\n\nexport interface RecentDataRequestWithoutParamM {\n    entityID: number[];\n    timezone: string;\n    entityType: string;\n    backscan: number;\n}\n\nexport class RecentDataRequestWithoutParam implements RecentDataRequestWithoutParamM {\n    entityID = null;\n    timezone = null;\n    entityType = null;\n    backscan = null;\n}\n\nexport interface ParamData {\n    name: string;\n    label: string;\n    unit: string;\n    data: {\n        date: string;\n        value: number;\n    };\n    status: string;\n}\n\nexport interface DeviceData {\n    id: number;\n    name: string;\n    status: string;\n    paramData: ParamData[];\n}\n\nexport interface OrgRecentDataM {\n    orgID: number;\n    entityID: number;\n    entityName: string;\n    entityType: string;\n    entityStatusFlag: boolean;\n    deviceData: DeviceData[];\n}\n\nexport class OrgRecentData implements OrgRecentDataM {\n    orgID = null;\n    entityID = null;\n    entityName = null;\n    entityType = null;\n    entityStatusFlag = false;\n    deviceData = null;\n}\n\nexport interface DeviceRecentDataM {\n    deviceID: number;\n    deviceName: string;\n    status: string;\n    paramData: ParamData[];\n}\n\nexport class DeviceRecentData implements DeviceRecentDataM {\n    deviceID = null;\n    deviceName = null;\n    status = null;\n    paramData = [];\n}","import { AggregateDataRequestM } from \"./aggregate-data.model\";\n\nexport interface DownloadReportRequestM {\n    request: AggregateDataRequestM;\n    reportName: string;\n    reportFormat: string;\n}\n\nexport class DownloadReportRequest implements DownloadReportRequestM {\n    request = null;\n    reportName = null;\n    reportFormat = null;\n}","export interface AggregateDataRequestM {\n    interval: string;\n    entityType: string;\n    shiftKey: string;\n    deviceID: number[];\n    entityID: number[];\n    params: Array<{\n        name: string;\n        dsAgg: string;\n        agg: string;\n        source_or_load: string;\n        sourceLoadType: string;\n    }>;\n    showImmediateChildOnly: boolean;\n    groupAll: boolean;\n    startTime: string;\n    endTime: string;\n}\n\nexport class AggregateDataRequest implements AggregateDataRequestM {\n    interval = null;\n    entityType = null;\n    shiftKey = null;\n    deviceID = null;\n    entityID = null;\n    params = null;\n    showImmediateChildOnly = false;\n    groupAll = false;\n    startTime = null;\n    endTime = null;\n\n    nullifyParams() {\n        this.params?.forEach(param => {\n            param.name = param.name || null;\n            param.dsAgg = param.dsAgg || null;\n            param.agg = param.agg || null;\n            param.source_or_load = param.source_or_load || null;\n            param.sourceLoadType = param.sourceLoadType || null;\n        });\n    }\n}\n\nexport interface MeterDataI {\n    date: string;\n    meterName: string;\n    parameterName: string;\n    meterStartReading: number;\n    meterEndReading: number;\n    meterConsumption: number;\n}\n\nexport class MeterData implements MeterDataI {\n    date: string;\n    meterName: string;\n    parameterName: string;\n    meterStartReading: number;\n    meterEndReading: number;\n    meterConsumption: number;\n}","export interface MakeModelI {\n    id: number;\n    name: string;\n}\n\nexport class MakeModel implements MakeModelI {\n    id;\n    name;\n}","export interface RegulatorTypeI {\n    id: number;\n    name: string;\n}\n\nexport class RegulatorType implements RegulatorTypeI {\n    id;\n    name;\n}\n\nexport interface RegulatorsEntitiesI {\n    regulator: {\n        id: number,\n        name: string\n    };\n    entity: {\n        id: number,\n        name: string\n    };\n    status: string;\n}\n\nexport class RegulatorsEntities implements RegulatorsEntitiesI {\n    regulator = {\n        id: null,\n        name: null\n    };\n    entity = {\n        id: null,\n        name: null\n    };\n    status = null;\n}","import { Inject, Injectable } from '@angular/core';\nimport { HttpClient } from '@angular/common/http';\n\nimport { Observable } from 'rxjs';\n\nimport { ConsumptionParameterM, ParameterM, SavedConsumptionParameterM } from '../model/parameter.model';\n\n@Injectable({\n    providedIn: 'root'\n})\n\nexport class ParameterController {\n\n    constructor(\n        private http: HttpClient,\n        @Inject('environment') private environment: any\n    ) { }\n\n    getParameterByOrgID(orgID): Observable<ParameterM[]> {\n        return this.http.get<ParameterM[]>(`${this.environment.TSC_COMMON_API_URL}organizations/${orgID}/parameters`);\n    }\n\n    getParameterByLayoutID(orgID): Observable<ParameterM[]> {\n        return this.http.get<ParameterM[]>(`${this.environment.TSC_COMMON_API_URL}organizations/${orgID}/layouts/parameters`);\n    }\n\n    getParameterByDeviceID(orgID, requestBody): Observable<ParameterM[]> {\n        return this.http.post<ParameterM[]>(`${this.environment.TSC_COMMON_API_URL}organizations/${orgID}/devices/parameters`, requestBody);\n    }\n\n    getParameterByEntityType(orgID, requestBody): Observable<ParameterM[]> {\n        return this.http.post<ParameterM[]>(`${this.environment.TSC_COMMON_API_URL}organizations/${orgID}/entity-type/parameters`, requestBody);\n    }\n\n    getConsumptionParameter(orgID): Observable<ConsumptionParameterM> {\n        return this.http.get<ConsumptionParameterM>(`${this.environment.TSC_COMMON_API_URL}organizations/${orgID}/consumption-parameters`);\n    }\n\n    saveConsumptionParameter(orgID, parameter) {\n        return this.http.post(`${this.environment.TSC_COMMON_API_URL}organizations/${orgID}/consumption-parameters`, parameter);\n    }\n\n    getSavedConsumptionParameter(orgID): Observable<SavedConsumptionParameterM[]> {\n        return this.http.get<SavedConsumptionParameterM[]>(`${this.environment.TSC_COMMON_API_URL}organizations/${orgID}/saved-consumption-parameters`);\n    }\n\n}\n","import { Injectable } from '@angular/core';\nimport { Resolve, ActivatedRouteSnapshot, RouterStateSnapshot, Router } from '@angular/router';\n\nimport { Observable } from 'rxjs';\nimport { catchError, map } from 'rxjs/operators';\n\nimport { ParameterController } from '../controller/parameter.controller';\n\n// tsc-library\nimport { StorageService } from '@library/storage-service';\n// /tsc-library/\n\n@Injectable({\n    providedIn: 'root',\n})\n\nexport class ResolveGuard implements Resolve<boolean> {\n    constructor(\n        private router: Router,\n        private storageService: StorageService,\n        private parameterController: ParameterController\n    ) { }\n\n    resolve(\n        next: ActivatedRouteSnapshot,\n        state: RouterStateSnapshot\n    ): Observable<boolean> | Promise<boolean> | boolean {\n        const layoutID = this.storageService.getStorage('layoutID');\n        const orgID = this.storageService.getStorage('currentOrgID');\n\n        if (!layoutID) {\n            this.router.navigate(['/not-found']);\n            return false;\n        } else {\n            return this.parameterController.getSavedConsumptionParameter(orgID).pipe(\n                map((response: any) => {\n                    if (response && response.length == 0) {\n                        this.router.navigate(['/not-found']);\n                        return false;\n                    } else {\n                        return true;\n                    }\n                }),\n                catchError(error => {\n                    console.log('error in getSavedConsumptionParameter -', error);\n                    this.router.navigate(['/not-found']);\n                    return [false];\n                })\n            );\n        }\n    }\n}","import { Injectable } from '@angular/core';\n\nimport { ConsumptionParameter, ConsumptionParameterM, Parameter, ParameterM, SavedConsumptionParameter, SavedConsumptionParameterM } from '../model/parameter.model';\n\nimport { ParameterController } from '../controller/parameter.controller';\n\n@Injectable({\n    providedIn: 'root'\n})\n\nexport class ParameterService {\n\n    constructor(\n        private parameterController: ParameterController,\n    ) { }\n\n    async getParameterByOrgID(orgID): Promise<ParameterM[]> {\n        let parameterM: ParameterM[];\n        try {\n            parameterM = await this.parameterController.getParameterByOrgID(orgID).toPromise();\n\n            if (parameterM) {\n                return parameterM;\n            } else {\n                return [new Parameter()];\n            }\n        } catch (error) {\n            console.error('Error -', error);\n            return [new Parameter()];\n        }\n    }\n\n    async getParameterByLayoutID(orgID): Promise<ParameterM[]> {\n        let parameterM: ParameterM[];\n        try {\n            parameterM = await this.parameterController.getParameterByLayoutID(orgID).toPromise();\n\n            if (parameterM) {\n                return parameterM;\n            } else {\n                return [new Parameter()];\n            }\n        } catch (error) {\n            console.error('Error -', error);\n            return [new Parameter()];\n        }\n    }\n\n    async getParameterByDeviceID(orgID, requestBody): Promise<ParameterM[]> {\n        let parameterM: ParameterM[];\n        try {\n            parameterM = await this.parameterController.getParameterByDeviceID(orgID, requestBody).toPromise();\n\n            if (parameterM) {\n                return parameterM;\n            } else {\n                return [new Parameter()];\n            }\n        } catch (error) {\n            console.error('Error -', error);\n            return [new Parameter()];\n        }\n    }\n\n    async getConsumptionParameter(orgID): Promise<ConsumptionParameterM> {\n        let consumptionParamM: ConsumptionParameterM;\n        try {\n            consumptionParamM = await this.parameterController.getConsumptionParameter(orgID).toPromise();\n\n            if (consumptionParamM) {\n                return consumptionParamM;\n            } else {\n                return new ConsumptionParameter();\n            }\n        } catch (error) {\n            console.error('Error -', error);\n            return new ConsumptionParameter();\n        }\n    }\n\n    async getSavedConsumptionParameter(orgID): Promise<SavedConsumptionParameterM[]> {\n        let savedConsumptionParamM: SavedConsumptionParameterM[];\n        try {\n            savedConsumptionParamM = await this.parameterController.getSavedConsumptionParameter(orgID).toPromise();\n\n            if (savedConsumptionParamM) {\n                return savedConsumptionParamM;\n            } else {\n                return [new SavedConsumptionParameter()];\n            }\n        } catch (error) {\n            console.error('Error -', error);\n            return [new SavedConsumptionParameter()];\n        }\n    }\n\n}","import { Inject, Injectable } from '@angular/core';\nimport { HttpClient, HttpHeaders } from '@angular/common/http';\n\nimport { Observable } from 'rxjs';\n\nimport { MeterDataI } from '../model/aggregate-data.model';\n\n@Injectable({\n    providedIn: 'root'\n})\nexport class AggregateDataController {\n\n    constructor(\n        private http: HttpClient,\n        @Inject('environment') private environment: any\n    ) { }\n\n    getAggregateData(orgID, requestBody) {\n        let headers = new HttpHeaders().set('skipLoader', 'YES');\n\n        return this.http.post(`${this.environment.TSC_COMMON_API_URL}organizations/${orgID}/data/aggregate`, requestBody, { headers: headers });\n    }\n\n    getMeterAggregateDataForReport(orgID, requestBody): Observable<MeterDataI[]> {\n        let headers = new HttpHeaders().set('skipLoader', 'YES');\n\n        return this.http.post<MeterDataI[]>(`${this.environment.TSC_COMMON_API_URL}organizations/${orgID}/meter-data`, requestBody, { headers: headers })\n    }\n\n    getDeviceAggregateData(orgID, requestBody) {\n        let headers = new HttpHeaders().set('skipLoader', 'YES');\n\n        return this.http.post(`${this.environment.TSC_COMMON_API_URL}organizations/${orgID}/devices/data/aggregate`, requestBody, { headers: headers })\n    }\n\n    getCumulativeConsumption(orgID, requestBody) {\n        let headers = new HttpHeaders().set('skipLoader', 'YES');\n\n        return this.http.post(`${this.environment.TSC_COMMON_API_URL}organizations/${orgID}/consumption`, requestBody, { headers: headers });\n    }\n\n    getEntityParameterData(orgID, requestBody) {\n        let headers = new HttpHeaders().set('skipLoader', 'YES');\n\n        return this.http.post(`${this.environment.TSC_COMMON_API_URL}organizations/${orgID}/entity/parameter-data`, requestBody, { headers: headers });\n    }\n\n    getAvoidedEmissionData(orgID, requestBody) {\n        let headers = new HttpHeaders().set('skipLoader', 'YES');\n\n        return this.http.post(`${this.environment.TSC_COMMON_API_URL}organizations/${orgID}/avoided-emissions`, requestBody, { headers: headers });\n    }\n\n}\n","import { Injectable } from '@angular/core';\n\nimport { MeterData, MeterDataI } from '../model/aggregate-data.model';\n\nimport { AggregateDataController } from '../controller/aggregate-data.controller';\n\n@Injectable({\n    providedIn: 'root'\n})\n\nexport class AggregateDataService {\n\n    constructor(\n        private aggregateDataController: AggregateDataController\n    ) { }\n\n    async getAggregateData(orgID, requestBody) {\n        let aggregatedData;\n        try {\n            aggregatedData = await this.aggregateDataController.getAggregateData(orgID, requestBody).toPromise();\n\n            if (aggregatedData) {\n                return aggregatedData;\n            }\n        } catch (error) {\n            console.error('Error -', error);\n            throw error;\n        }\n    }\n\n    async getMeterAggregateDataForReport(orgID, requestBody): Promise<MeterDataI[]> {\n        let meterReportData: MeterDataI[];\n        try {\n            meterReportData = await this.aggregateDataController.getMeterAggregateDataForReport(orgID, requestBody).toPromise();\n\n            if (meterReportData) {\n                return [new MeterData()];\n            }\n        } catch (error) {\n            console.error('Error -', error);\n            throw error;\n        }\n    }\n\n\n    async getDeviceAggregateData(orgID, requestBody) {\n        let deviceAggregateData;\n        try {\n            deviceAggregateData = await this.aggregateDataController.getDeviceAggregateData(orgID, requestBody).toPromise();\n\n            if (deviceAggregateData) {\n                return deviceAggregateData;\n            }\n        } catch (error) {\n            console.error('Error -', error);\n            throw error;\n        }\n    }\n\n}","import { Component, Inject, OnInit } from '@angular/core';\nimport { FormControl, Validators } from '@angular/forms';\nimport { MAT_DIALOG_DATA } from '@angular/material/dialog';\n\nimport * as moment from 'moment';\n\nimport { LIST_CONSTANT } from '../../../../constant/list.constant';\n\nimport { AggregateDataRequest } from '../../../../model/aggregate-data.model';\nimport { Parameter, ParameterM } from '../../../../model/parameter.model';\n\nimport { ParameterService } from '../../../../service/parameter.service';\nimport { AggregateDataService } from '../../../../service/aggregate-data.service';\n\n// tsc-library\nimport { DialogEnum, MaterialFormFieldAppearance, TSCCommonService } from '@library/tsc-common';\nimport { DateService, DateTimeIntervalEnum } from '@library/date';\nimport { StorageService } from '@library/storage-service';\nimport { ChartViewStateEnum, BasicAreaLineBarChart, ChartTypeEnum, ChartTitle } from '@library/echart';\n// /tsc-library/\n\n@Component({\n    selector: 'lib-trend',\n    templateUrl: './trend.component.html',\n    styles: [\n    ]\n})\n\nexport class TrendComponent implements OnInit {\n\n    listConstant = LIST_CONSTANT;\n\n    materialFormFieldAppearance = MaterialFormFieldAppearance;\n    dateTimeIntervalEnum = DateTimeIntervalEnum;\n    dialogEnum = DialogEnum;\n\n    orgID: any;\n    trendData: any;\n    startTime: any;\n    endTime: any;\n    interval: any;\n    paramLabel: any;\n    parameterM = [new Parameter()];\n\n    chartType: string = ChartTypeEnum.BASIC_AREA_CHART;\n    viewStateFlag: string = ChartViewStateEnum.LOADING;\n    chartTitle = new ChartTitle();\n    chartData = new BasicAreaLineBarChart();\n\n    dateRangeFC: FormControl = new FormControl('LAST_24_HRS', Validators.required);\n\n    constructor(\n        @Inject(MAT_DIALOG_DATA) public data,\n        private storageService: StorageService,\n        private dateService: DateService,\n        private parameterService: ParameterService,\n        private aggregateDataService: AggregateDataService,\n        private tscCommonService: TSCCommonService,\n    ) {\n        this.trendData = data['trendData'];\n    }\n\n    ngOnInit(): void {\n        this.orgID = this.storageService.getStorage('currentOrgID');\n\n        this.dateRangeChange(this.dateRangeFC.value);\n        this.getParameterByLayoutID();\n    }\n\n    async getParameterByLayoutID() {\n        this.parameterM = <ParameterM[]>await this.parameterService.getParameterByLayoutID(this.orgID);\n    }\n\n    dateRangeChange(selectedDateRange) {\n\n        this.startTime = this.dateService.getStartDateTime(selectedDateRange);\n\n        switch (selectedDateRange) {\n            case DateTimeIntervalEnum.LAST_24_HRS:\n                this.endTime = this.dateService.getEndDateTime(DateTimeIntervalEnum.CURRENT_TIME);\n                this.interval = 'min_15';\n                break;\n\n            case DateTimeIntervalEnum.LAST_7_DAYS:\n                this.endTime = this.dateService.getEndDateTime(DateTimeIntervalEnum.CURRENT_DAY);\n                this.interval = 'hour_1';\n                break;\n\n            case DateTimeIntervalEnum.LAST_30_DAYS:\n                this.endTime = this.dateService.getEndDateTime(DateTimeIntervalEnum.CURRENT_DAY);\n                this.interval = 'day_1';\n                break;\n            default:\n                this.endTime = null;\n                this.interval = null;\n                break;\n        }\n\n        this.getTrendData();\n    }\n\n    getCounterParameter(paramMetricValue) {\n        const parameter = this.tscCommonService.getUniqueObject(this.parameterM, 'isCounter', paramMetricValue);\n        return parameter ? parameter.isCounter : false;\n    }\n\n    async getTrendData() {\n\n        this.viewStateFlag = ChartViewStateEnum.LOADING;\n\n        try {\n            let requestData = new AggregateDataRequest();\n\n            const isCounterParameter = this.getCounterParameter(this.trendData?.paramMetric);\n\n            requestData.interval = this.interval;\n            requestData.entityID = this.trendData?.entityID ? [this.trendData.entityID] : null;\n            requestData.deviceID = this.trendData?.deviceID ? [this.trendData.deviceID] : null;\n            requestData.entityType = this.trendData?.entityType;\n\n            requestData.params = [\n                {\n                    name: this.trendData.paramMetric,\n                    dsAgg: \"avg\",\n                    agg: \"avg\",\n                    sourceLoadType: isCounterParameter ? \"all\" : null,\n                    source_or_load: isCounterParameter ? \"source\" : null,\n                }\n            ];\n            requestData.nullifyParams();\n\n            requestData.startTime = this.startTime;\n            requestData.endTime = this.endTime;\n\n            const trendRes = await this.aggregateDataService.getAggregateData(this.orgID, requestData);\n\n            if (trendRes?.[0]?.data.length > 0) {\n                this.paramLabel = trendRes?.[0].paramLabel;\n\n                this.chartData.metaData = trendRes?.[0].data.map(item => ({\n                    name: moment(new Date(item.date)).format(\"YYYY-MM-DD HH:mm:ss\"),\n                    value: item.value\n                }));\n\n                this.chartData.unit = {\n                    name: '',\n                    code: trendRes?.[0].unit,\n                };\n\n                this.chartData.yAxisLabel = trendRes?.[0].paramLabel + ' (' + trendRes?.[0].unit + ')';\n                this.chartData.showDataZoomSlider = true;\n                this.chartData.showDataView = true;\n                this.chartData.showMagicType = true;\n                this.chartData.showRestore = true;\n                this.chartData.showDownloadImage = true;\n\n                this.viewStateFlag = ChartViewStateEnum.HAS_DATA;\n\n            } else {\n                this.viewStateFlag = ChartViewStateEnum.NO_DATA;\n            }\n\n        } catch (error) {\n            this.viewStateFlag = ChartViewStateEnum.NO_DATA;\n\n            console.error(`Error in getTrendData()`, error);\n        }\n    }\n\n}\n","<div mat-dialog-title>\n    <strong class=\"dialogTitle\">\n        {{ paramLabel }} Trend\n    </strong>\n\n    <button mat-icon-button mat-dialog-close cdkFocusInitial class=\"float-end matDialogClose\" matTooltip=\"Close\"\n        matTooltipPosition=\"before\">\n        <span class=\"material-symbols-outlined\" [mat-dialog-close]=\"dialogEnum.CLOSE_DR\">\n            close\n        </span>\n    </button>\n</div>\n\n<div class=\"matDialogContent\" mat-dialog-content>\n    <div class=\"row\">\n        <div class=\"col-sm-6\">\n            <mat-form-field class=\"matFieldWidth100\"\n                [appearance]=\"materialFormFieldAppearance.FORM_FIELD_APPEARANCE\">\n                <mat-label>Select daterange</mat-label>\n                <mat-select (selectionChange)=\"dateRangeChange($event.value)\" [formControl]=\"dateRangeFC\">\n                    <mat-option disabled>Select daterange</mat-option>\n                    <mat-option *ngFor=\"let daterange of listConstant.TREND_DATE_RANGE\" [value]=\"daterange.value\">\n                        {{ daterange.label }}\n                    </mat-option>\n                </mat-select>\n            </mat-form-field>\n        </div>\n    </div>\n\n    <div class=\"row\">\n        <div class=\"col-sm-12\">\n            <lib-basic-area-line-bar [chartTypeInp]=\"chartType\" [chartTitleInp]=\"chartTitle\" [viewStateInp]=\"viewStateFlag\"\n                [dataInp]=\"chartData\"></lib-basic-area-line-bar>\n        </div>\n    </div>\n</div>","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { ReactiveFormsModule } from '@angular/forms';\n\nimport { MatDialogModule } from '@angular/material/dialog';\nimport { MatButtonModule } from '@angular/material/button';\nimport { MatInputModule } from '@angular/material/input';\nimport { MatFormFieldModule } from '@angular/material/form-field';\nimport { MatSelectModule } from '@angular/material/select';\nimport { MatTooltipModule } from '@angular/material/tooltip';\n\nimport { TrendComponent } from './trend.component';\n\n// tsc-library\nimport { BasicAreaLineBarModule } from '@library/echart';\n// /tsc-library/\n\n@NgModule({\n    declarations: [\n        TrendComponent\n    ],\n    imports: [\n        CommonModule,\n        BasicAreaLineBarModule,\n        ReactiveFormsModule,\n        MatDialogModule,\n        MatButtonModule,\n        MatInputModule,\n        MatFormFieldModule,\n        MatSelectModule,\n        MatTooltipModule,\n    ]\n})\nexport class TrendModule { }\n","import { Component, Inject, OnInit } from '@angular/core';\nimport { FormControl, Validators } from '@angular/forms';\nimport { MAT_DIALOG_DATA, MatDialogRef } from '@angular/material/dialog';\n\n// tsc-library\nimport { DialogEnum } from '@library/tsc-common';\n// /tsc-library/\n\n@Component({\n    selector: 'lib-entity',\n    templateUrl: './entity.component.html',\n    styles: [\n    ]\n})\nexport class EntityDialogComponent implements OnInit {\n\n    DialogEnum = DialogEnum;\n\n    entityID: any;\n    entityType: any;\n    entityObject: any;\n\n    entityFC: FormControl = new FormControl('', Validators.required);\n\n    constructor(\n        public dialogRef: MatDialogRef<EntityDialogComponent>,\n        @Inject(MAT_DIALOG_DATA) public data,\n    ) {\n        this.entityID = data?.entityID;\n        this.entityType = data?.entityType;\n        this.entityObject = data?.entityObject;\n        this.dialogRef.disableClose = true;\n    }\n\n    ngOnInit(): void {\n        if (this.entityID) {\n            this.entityFC.patchValue(this.entityID);\n        }\n    }\n\n    onEntityChange(selectedValue) {\n        this.entityFC.patchValue(selectedValue);\n\n        this.dialogRef.close({\n            result: DialogEnum.CLOSE_DR,\n            entityID: this.entityFC.value\n        })\n    }\n\n}","<div mat-dialog-title>\n    <div class=\"row\">\n        <div class=\"col-sm-11\">\n            <div class=\"pageTitle dialogHeader fw-bold\"> Select Entity </div>\n            <div class=\"pageSubtitle\">\n                Entities displayed in gray color have never had consumption, whereas those in black have consumption.\n            </div>\n        </div>\n        <div class=\"col-sm-1\">\n            <button mat-icon-button mat-dialog-close cdkFocusInitial class=\"float-end matDialogClose\"\n                matTooltip=\"Close\" matTooltipPosition=\"before\">\n                <span class=\"material-symbols-outlined\">\n                    close\n                </span>\n            </button>\n        </div>\n    </div>\n</div>\n\n<div class=\"matDialogContent\" mat-dialog-content>\n    <mat-radio-group [formControl]=\"entityFC\" (change)=\"onEntityChange($event.value)\" *ngIf=\"entityObject && entityObject.length > 0 && entityObject[0].id\">\n        <div class=\"row\">\n            <div class=\"col-sm-12\">\n                <div *ngFor=\"let entity of entityObject; let i = index\" class=\"mt-2\">\n                    <mat-radio-button class=\"radioBtnLabel me-2\" [ngClass]=\"{'text-secondary': !entity.entityStatusFlag}\"\n                        [value]=\"entity.id\" [disabled]=\"!entity.entityStatusFlag\">\n                        {{ entity.name }}\n                    </mat-radio-button>\n                    <div *ngIf=\"entity.children && entity.children.length > 0\" class=\"ms-5\">\n                        <ng-container *ngTemplateOutlet=\"recursiveTemplate; context:{ $implicit: entity.children }\"></ng-container>\n                    </div>\n                </div>\n            </div>\n        </div>\n        \n        <ng-template #recursiveTemplate let-entities>\n            <div *ngFor=\"let entity of entities; let i = index\" class=\"mt-2\">\n                <mat-radio-button class=\"radioBtnLabel me-2\" [ngClass]=\"{'text-secondary': !entity.entityStatusFlag}\"\n                    [value]=\"entity.id\" [disabled]=\"!entity.entityStatusFlag\">\n                    {{ entity.name }}\n                </mat-radio-button>\n                <div *ngIf=\"entity.children && entity.children.length > 0\" class=\"ms-5\">\n                    <ng-container *ngTemplateOutlet=\"recursiveTemplate; context:{ $implicit: entity.children }\"></ng-container>\n                </div>\n            </div>\n        </ng-template>\n    </mat-radio-group>\n</div>","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\n\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\n\nimport { MatRadioModule } from '@angular/material/radio';\nimport { MatIconModule } from '@angular/material/icon';\nimport { MatButtonModule } from '@angular/material/button';\nimport { MatTooltipModule } from '@angular/material/tooltip';\nimport { MatDialogModule } from '@angular/material/dialog';\n\nimport { EntityDialogComponent } from './entity.component';\n\n@NgModule({\n    declarations: [\n        EntityDialogComponent\n    ],\n    imports: [\n        CommonModule,\n        FormsModule,\n        ReactiveFormsModule,\n        MatRadioModule,\n        MatIconModule,\n        MatButtonModule,\n        MatTooltipModule,\n        MatDialogModule\n    ]\n})\nexport class EntityDialogModule { }\n","import { Component, EventEmitter, Input, OnInit, Output, SimpleChanges } from '@angular/core';\n\nimport { LIST_CONSTANT } from '../../../constant/list.constant';\n\n// tsc-library\nimport { FileTypeEnum, MATERIAL_CONSTANT } from '@library/tsc-common';\n// /tsc-library/\n\n@Component({\n    selector: 'lib-download-report',\n    templateUrl: './download-report.component.html',\n    styleUrls: ['./download-report.component.scss']\n})\nexport class DownloadReportComponent implements OnInit {\n\n    listConstant = LIST_CONSTANT;\n    materialConstant = MATERIAL_CONSTANT;\n    fileTypeEnum = FileTypeEnum;\n\n    @Input()\n    excludeFileTypeInp: FileTypeEnum;\n\n    @Output()\n    fileTypeEmitted = new EventEmitter<string>();\n\n    excludeFileType = '';\n\n    constructor() { }\n\n    ngOnInit(): void {\n    }\n\n    onChange(selectedType) {\n        this.fileTypeEmitted.emit(selectedType);\n    }\n\n    ngOnChanges(changes: SimpleChanges): void {\n        if (changes.excludeFileTypeInp && this.excludeFileTypeInp) {\n            this.excludeFileType = this.excludeFileTypeInp;\n        }\n    }\n\n}\n","<div class=\"btn-group\" ngbDropdown>\n    <button type=\"button\" ngbDropdownToggle class=\"btn btn-sm btn-primary ms-2 dropdownAfter\" matRipple\n        [matRippleCentered]=\"materialConstant.MAT_RIPPLE_CENTER\">\n        <div class=\"d-flex align-items-center\">\n            <span class=\"me-2\">\n                Export as\n            </span>\n            <span class=\"material-symbols-outlined iconSize\">\n                arrow_drop_down\n            </span>\n        </div>\n    </button>\n\n    <div ngbDropdownMenu>\n        <button *ngFor=\"let type of listConstant.DOWNLOAD_TYPE\" class=\"dropdown-item\" [hidden]=\"excludeFileType == type.value\"\n            (click)=\"onChange(type.value)\">\n            <div class=\"d-flex align-items-center\">\n                <span class=\"material-symbols-outlined me-2 fs-5\" [ngSwitch]=\"type.value\">\n                    <span *ngSwitchCase=\"fileTypeEnum.PDF\" class=\"material-symbols-outlined pdfColor\">\n                        picture_as_pdf\n                    </span>\n                    <span *ngSwitchCase=\"fileTypeEnum.CSV\" class=\"material-symbols-outlined csvXlsxColor\">\n                        csv\n                    </span>\n                    <span *ngSwitchCase=\"fileTypeEnum.XLSX\" class=\"material-symbols-outlined csvXlsxColor\">\n                        description\n                    </span>\n                </span>\n                <span>\n                    {{ type.label }}\n                </span>\n            </div>\n        </button>\n    </div>\n</div>","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\n\nimport { MatInputModule } from '@angular/material/input';\nimport { MatSelectModule } from '@angular/material/select';\nimport { MatIconModule } from '@angular/material/icon';\nimport { MatButtonModule } from '@angular/material/button';\nimport { MatRippleModule } from '@angular/material/core';\n\nimport { NgbModule } from '@ng-bootstrap/ng-bootstrap';\n\nimport { DownloadReportComponent } from './download-report.component';\n\n@NgModule({\n    declarations: [\n        DownloadReportComponent\n    ],\n    imports: [\n        CommonModule,\n        NgbModule,\n        ReactiveFormsModule,\n        FormsModule,\n        MatInputModule,\n        MatSelectModule,\n        MatIconModule,\n        MatButtonModule,\n        MatRippleModule\n    ],\n    exports: [DownloadReportComponent]\n})\nexport class DownloadReportModule { }\n","import { Component, OnInit } from '@angular/core';\n\n@Component({\n    selector: 'lib-layout-not-found',\n    templateUrl: './layout-not-found.component.html',\n    styleUrls: ['./layout-not-found.component.scss']\n})\nexport class LayoutNotFoundComponent implements OnInit {\n\n    constructor() { }\n\n    ngOnInit(): void {\n    }\n\n}\n","<div class=\"card main-card cardOverwrite h-100\">\n    <div class=\"card-body\">\n        <div class=\"container d-flex align-items-center\">\n            <div class=\"mx-auto text-center\">\n                <img class=\"layoutNotFindImg\" src=\"/assets/images/tsc-restrict.jpg\" alt=\"Layout not found\" />\n                <br />\n                <br />\n                You don't have any layout to showcase the respective page. Please create a layout for better experience.\n                <br />\n                Click <a [href]=\"'layout/page'\">here</a> to create a layout.\n            </div>\n        </div>\n    </div>\n</div>\n","import { ModuleWithProviders, NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\n\nimport { LayoutNotFoundComponent } from './layout-not-found.component';\n\n@NgModule({\n    declarations: [\n        LayoutNotFoundComponent,\n    ],\n    imports: [\n        CommonModule\n    ],\n    exports: [\n        LayoutNotFoundComponent\n    ]\n})\n\nexport class LayoutNotFoundModule {\n    static forRoot(environment: any): ModuleWithProviders<LayoutNotFoundModule> {\n        return {\n            ngModule: LayoutNotFoundModule,\n            providers: [\n                { provide: 'environment', useValue: environment }\n            ]\n        };\n    }\n}\n","import { Component, OnInit } from '@angular/core';\n\nimport { SavedConsumptionParameter, SavedConsumptionParameterM } from '../../../../model/parameter.model';\n\nimport { ParameterService } from '../../../../service/parameter.service';\n\n// tsc-library\nimport { StorageService } from '@library/storage-service';\n// /tsc-library/\n\n@Component({\n    selector: 'lib-tsc-restrict',\n    templateUrl: './tsc-restrict.component.html',\n    styleUrls: ['./tsc-restrict.component.scss']\n})\nexport class TscRestrictComponent implements OnInit {\n\n    orgID: any;\n    layoutID: any;\n    consumptionParameter = [new SavedConsumptionParameter()];\n\n    setLayoutRedirectUrl = '/layout/page';\n    setConsumptionRedirectUrl = '/preference/consumption-parameter/add';\n\n    constructor(\n        private storageService: StorageService,\n        private parameterService: ParameterService\n    ) { }\n\n    ngOnInit(): void {\n        this.orgID = this.storageService.getStorage('currentOrgID');\n        this.layoutID = this.storageService.getStorage('layoutID');\n\n        this.getSavedConsumptionParameter();\n    }\n\n    async getSavedConsumptionParameter() {\n        this.consumptionParameter = <SavedConsumptionParameterM[]>await this.parameterService.getSavedConsumptionParameter(this.orgID);\n    }\n\n}\n","<div class=\"card main-card cardOverwrite h-100\">\n    <div class=\"card-body\">\n        <div class=\"container d-flex align-items-center\">\n            <div class=\"mx-auto text-center\">\n                <img class=\"img\" src=\"/assets/images/tsc-restrict.jpg\" alt=\"Not found\" />\n                <br />\n                <br />\n                <ng-container\n                    *ngIf=\"!consumptionParameter?.[0]?.['consumptionParamID'] && !layoutID; else setConsumptionParameter\">\n                    You have not set consumption parameters. Please add consumption parameters for better experience.\n                    <br />\n                    Click <a [href]=\"setConsumptionRedirectUrl\">here</a> to add consumption parameters.\n                    <br />\n                    <br />\n                    You don't have any layout to showcase the respective page. Please create a layout for better\n                    experience.\n                    <br />\n                    Click <a [href]=\"setLayoutRedirectUrl\">here</a> to create a layout.\n                </ng-container>\n                <ng-template #setConsumptionParameter>\n                    <ng-container\n                        *ngIf=\"!consumptionParameter?.[0]?.['consumptionParamID'] && layoutID; else setLayout\">\n                        You have not set consumption parameters. Please add consumption parameters for better\n                        experience.\n                        <br />\n                        Click <a [href]=\"setConsumptionRedirectUrl\">here</a> to add consumption parameters.\n                    </ng-container>\n                    <ng-template #setLayout>\n                        You don't have any layout to showcase the respective page. Please create a layout for better\n                        experience.\n                        <br />\n                        Click <a [href]=\"setLayoutRedirectUrl\">here</a> to create a layout.\n                    </ng-template>\n                </ng-template>\n            </div>\n        </div>\n    </div>\n</div>","import { ModuleWithProviders, NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\n\nimport { TscRestrictComponent } from './tsc-restrict.component';\n\n@NgModule({\n    declarations: [\n        TscRestrictComponent,\n    ],\n    imports: [\n        CommonModule\n    ],\n    exports: [\n        TscRestrictComponent\n    ]\n})\n\nexport class TscRestrictModule {\n    static forRoot(environment: any): ModuleWithProviders<TscRestrictModule> {\n        return {\n            ngModule: TscRestrictModule,\n            providers: [\n                { provide: 'environment', useValue: environment }\n            ]\n        };\n    }\n}\n","import { Component, OnInit } from '@angular/core';\nimport { ActivatedRoute, Router } from '@angular/router';\n\n// tsc-library\nimport { StorageService } from '@library/storage-service';\nimport { Layout, LayoutM, LayoutService } from '@library/layout-service';\nimport { OrganizationService } from '@library/organization-service';\n// /tsc-library/\n\n@Component({\n    selector: 'app-success',\n    templateUrl: './success.component.html',\n    styleUrls: ['./success.component.scss']\n})\n\nexport class SuccessComponent implements OnInit {\n    redirectUrl: string = '/';\n    noTimezone: string = './timezone-not-found';\n    layoutM = [new Layout()];\n    timezone: string = null;\n\n    constructor(\n        private activatedRoute: ActivatedRoute,\n        private router: Router,\n        private layoutService: LayoutService,\n        private organizationService: OrganizationService,\n        private storageService: StorageService\n    ) { }\n\n    ngOnInit(): void {\n        this.activatedRoute.queryParams.subscribe(queryParam => {\n            if (queryParam.redirectUrl) {\n                this.redirectUrl = queryParam.redirectUrl;\n            }\n        });\n\n        // INFO: SOMYA AGRAWAL\n        // Clearing layoutID from storage in switch org because previous layoutID remains in local storage even if current org does not have any layout!\n        this.storageService.deleteStorage('layoutID');\n        this.timeZoneCheck();\n    }\n\n    async timeZoneCheck() {\n        this.timezone = <string>await this.organizationService.getOrgTimezone();\n\n        if (this.timezone) {\n            this.storageService.setStorage('timezone', this.timezone);\n            this.getLayoutsByOrgID();\n        } else {\n            this.router.navigate([this.noTimezone]);\n        }\n    }\n\n    async getLayoutsByOrgID() {\n        let orgID = this.storageService.getStorage('currentOrgID');\n\n        this.layoutM = <LayoutM[]>await this.layoutService.getLayoutByOrgID(orgID);\n\n        const defaultLayout = this.layoutM.find(layout => layout.isDefault);\n\n        if (defaultLayout) {\n            const defaultLayoutID = defaultLayout.id;\n            this.storageService.setStorage('layoutID', defaultLayoutID);\n        } else {\n            console.error('No layout found.');\n        }\n\n        this.router.navigate([this.redirectUrl]);\n    }\n\n}\n","<div class=\"d-flex h-100 justify-content-center align-items-center\">\n    <div class=\"text-center fs-4\"><img class=\"appAuthImg\"\n            src=\"assets/images/application-logo/tsc-with-name.png\" />\n        <br />\n        <br />\n        <span class=\"spinner-border spinner-border-sm text-success\"></span> ..\n    </div>\n</div>\n","import { Component, EventEmitter, OnInit, Output } from '@angular/core';\nimport { FormControl, Validators } from '@angular/forms';\n\nimport { LIST_CONSTANT } from '../../../constant/list.constant';\n\n// tsc-library\nimport { FormErrorEnum, MaterialFormFieldAppearance } from '@library/tsc-common';\n// /tsc-library/\n\n@Component({\n    selector: 'lib-aggregation',\n    templateUrl: './aggregation.component.html',\n    styles: [\n    ]\n})\nexport class AggregationComponent implements OnInit {\n\n    listConstant = LIST_CONSTANT;\n    materialFormFieldAppearance = MaterialFormFieldAppearance;\n\n    FormErrorEnum = FormErrorEnum;\n\n    allAggregationIDs: any[] = [];\n    totalAggregationCount: number = 0;\n    aggregationFC: FormControl = new FormControl(['avg'], [Validators.required]);\n\n    @Output()\n    emitFilter = new EventEmitter();\n\n    constructor() { }\n\n    ngOnInit(): void {\n        let aggregationList = this.listConstant.AGGREGATION;\n\n        this.totalAggregationCount = aggregationList.length;\n        aggregationList.forEach(aggregation => this.allAggregationIDs.push(aggregation['value']));\n    }\n\n    ngAfterViewInit() {\n        this.emitFilter.emit();\n    }\n\n    selectAllAggregation() {\n        if (!this.aggregationFC.value.includes(-1)) {\n            this.aggregationFC.reset([]);\n            return;\n        }\n        this.aggregationFC.setValue([-1, ...this.allAggregationIDs]);\n        this.emitFilter.emit();\n    }\n\n    selectedAggregation() {\n        const selected = this.aggregationFC.value;\n\n        if (selected.includes(-1)) {\n            selected.shift();\n            this.aggregationFC.patchValue(selected);\n        } else if (this.aggregationFC.value.length == this.totalAggregationCount) {\n            this.allAggregationIDs.splice(0, 0, -1);\n            this.aggregationFC.patchValue(this.allAggregationIDs);\n        } else {\n            const filteredSelected = selected.filter(s => s != -1);\n            this.aggregationFC.patchValue(filteredSelected);\n        }\n\n        this.emitFilter.emit();\n    }\n\n}\n","<mat-form-field class=\"matFieldWidth100\" [appearance]=\"materialFormFieldAppearance.FORM_FIELD_APPEARANCE\">\n    <mat-label>Select aggregation</mat-label>\n    <mat-select [formControl]=\"aggregationFC\" multiple required>\n        <mat-option [value]=\"-1\" (click)=\"selectAllAggregation()\">\n            Select all\n        </mat-option>\n        <mat-option *ngFor=\"let aggregation of listConstant.AGGREGATION\" [value]=\"aggregation.value\"\n            (click)=\"selectedAggregation()\">\n            {{ aggregation.label }}\n        </mat-option>\n    </mat-select>\n    <mat-error *ngIf=\"aggregationFC.touched && aggregationFC.hasError('required')\">\n        {{ FormErrorEnum.REQUIRED }}\n    </mat-error>\n</mat-form-field>","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\n\nimport { MatInputModule } from '@angular/material/input';\nimport { MatFormFieldModule } from '@angular/material/form-field';\nimport { MatSelectModule } from '@angular/material/select';\n\nimport { NgxMatSelectSearchModule } from 'ngx-mat-select-search';\n\nimport { AggregationComponent } from './aggregation.component';\n\n@NgModule({\n    declarations: [\n        AggregationComponent\n    ],\n    imports: [\n        CommonModule,\n        FormsModule,\n        ReactiveFormsModule,\n        MatInputModule,\n        MatSelectModule,\n        MatFormFieldModule,\n        NgxMatSelectSearchModule\n    ],\n    exports: [\n        AggregationComponent\n    ]\n})\nexport class AggregationModule { }\n","import { Component, EventEmitter, OnInit, Output } from '@angular/core';\nimport { FormControl, Validators } from '@angular/forms';\n\nimport { LIST_CONSTANT } from '../../../constant/list.constant';\n\n// tsc-library\nimport { FormErrorEnum, MaterialFormFieldAppearance } from '@library/tsc-common';\n// /tsc-library/\n\n@Component({\n    selector: 'lib-aggregation-duration',\n    templateUrl: './aggregation-duration.component.html',\n    styles: [\n    ]\n})\n\nexport class AggregationDurationComponent implements OnInit {\n\n    listConstant = LIST_CONSTANT;\n    materialFormFieldAppearance = MaterialFormFieldAppearance;\n\n    FormErrorEnum = FormErrorEnum;\n\n    aggDurationFC: FormControl = new FormControl('min_15', [Validators.required]);\n\n    @Output()\n    emitFilter = new EventEmitter();\n\n    constructor() { }\n\n    ngOnInit(): void {\n    }\n\n    ngAfterViewInit() {\n        this.emitFilter.emit();\n    }\n\n    onChange(selectedAD) {\n        this.aggDurationFC.patchValue(selectedAD);\n        this.emitFilter.emit();\n    }\n\n}\n","<mat-form-field class=\"matFieldWidth100\" [appearance]=\"materialFormFieldAppearance.FORM_FIELD_APPEARANCE\">\n    <mat-label>Select aggregation duration</mat-label>\n    <mat-select (selectionChange)=\"onChange($event.value)\" [formControl]=\"aggDurationFC\" required>\n        <mat-option *ngFor=\"let duration of listConstant.AGGREGATION_DURATION\" [value]=\"duration.value\">\n            {{ duration.label }}\n        </mat-option>\n    </mat-select>\n    <mat-error *ngIf=\"aggDurationFC.touched && aggDurationFC.hasError('required')\">\n        {{ FormErrorEnum.REQUIRED }}\n    </mat-error>\n</mat-form-field>","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\n\nimport { MatInputModule } from '@angular/material/input';\nimport { MatFormFieldModule } from '@angular/material/form-field';\nimport { MatSelectModule } from '@angular/material/select';\n\nimport { NgxMatSelectSearchModule } from 'ngx-mat-select-search';\n\nimport { AggregationDurationComponent } from './aggregation-duration.component';\n\n@NgModule({\n    declarations: [\n        AggregationDurationComponent\n    ],\n    imports: [\n        CommonModule,\n        FormsModule,\n        ReactiveFormsModule,\n        MatInputModule,\n        MatSelectModule,\n        MatFormFieldModule,\n        NgxMatSelectSearchModule\n    ],\n    exports: [\n        AggregationDurationComponent\n    ]\n})\nexport class AggregationDurationModule { }\n","import { Component, EventEmitter, Input, OnInit, Output, SimpleChanges } from '@angular/core';\nimport { FormControl, Validators } from '@angular/forms';\n\nimport { Parameter, ParameterM } from '../../../model/parameter.model';\n\nimport { ParameterService } from '../../../service/parameter.service';\n\n// tsc-library\nimport { COMMON_CONSTANT, FormErrorEnum, MatSelectSearchService, MaterialFormFieldAppearance } from '@library/tsc-common';\nimport { StorageService } from '@library/storage-service';\n// /tsc-library/\n\n@Component({\n    selector: 'lib-param-metric',\n    templateUrl: './param-metric.component.html',\n    styles: [\n    ]\n})\nexport class ParamMetricComponent implements OnInit {\n    materialFormFieldAppearance = MaterialFormFieldAppearance\n    commonConstant = COMMON_CONSTANT;\n\n    FormErrorEnum = FormErrorEnum;\n\n    @Input()\n    deviceInp: any;\n\n    orgID: any;\n    parameterM = [new Parameter()];\n\n    allParameterID: any[] = [];\n    totalParameterCount: number = 0;\n\n    parameterFC: FormControl = new FormControl([], [Validators.required]);\n    paramSearchUtil: MatSelectSearchService = new MatSelectSearchService(['label']);\n\n    @Output()\n    emitFilter = new EventEmitter();\n\n    constructor(\n        private storageService: StorageService,\n        private parameterService: ParameterService\n    ) { }\n\n    ngOnInit(): void {\n        this.orgID = this.storageService.getStorage('currentOrgID');\n    }\n\n    ngOnChanges(changes: SimpleChanges): void {\n        if (changes.deviceInp && this.deviceInp) {\n            this.getParameterByDeviceID(this.deviceInp);\n\n            this.parameterFC.reset([]);\n            this.emitFilter.emit();\n        }\n    }\n\n    async getParameterByDeviceID(selectedDevices) {\n        this.allParameterID = [];\n\n        let requestBody = {};\n        requestBody['deviceID'] = [selectedDevices];\n\n        this.parameterM = <ParameterM[]>await this.parameterService.getParameterByDeviceID(this.orgID, requestBody);\n\n        this.paramSearchUtil.entityArr = this.parameterM;\n        this.paramSearchUtil.createSubscription();\n\n        this.totalParameterCount = this.parameterM.length;\n        this.parameterM.forEach(parameter => this.allParameterID.push(parameter['paramMetric']));\n\n        this.emitFilter.emit();\n    }\n\n    selectAllParameters() {\n        if (!this.parameterFC.value.includes(-1)) {\n            this.parameterFC.reset([]);\n            return;\n        }\n        this.parameterFC.setValue([-1, ...this.allParameterID]);\n\n        this.emitFilter.emit();\n    }\n\n    selectedParameters() {\n        const selected = this.parameterFC.value;\n\n        if (selected.includes(-1)) {\n            selected.shift();\n            this.parameterFC.patchValue(selected);\n        } else if (this.parameterFC.value.length == this.totalParameterCount) {\n            this.allParameterID.splice(0, 0, -1);\n            this.parameterFC.patchValue(this.allParameterID);\n        } else {\n            const filteredSelected = selected.filter(s => s != -1);\n            this.parameterFC.patchValue(filteredSelected);\n        }\n\n        this.emitFilter.emit();\n    }\n\n}\n","<mat-form-field class=\"matFieldWidth100\" [appearance]=\"materialFormFieldAppearance.FORM_FIELD_APPEARANCE\">\n    <mat-label>Select parameter</mat-label>\n\n    <mat-select [formControl]=\"parameterFC\" multiple required>\n        <ng-container *ngIf=\"parameterM && parameterM.length > 0 && parameterM[0]['id']; else noDataOption\">\n            <ngx-mat-select-search [formControl]=\"paramSearchUtil.filterFC\" placeholderLabel=\"Search by name\"\n                noEntriesFoundLabel=\"No matching name found.\">\n            </ngx-mat-select-search>\n            <mat-option [value]=\"-1\" (click)=\"selectAllParameters()\" [hidden]=\"paramSearchUtil.filterFC.value\">\n                Select all\n            </mat-option>\n            <mat-option *ngFor=\"let parameter of paramSearchUtil.filteredEntities | async\" [value]=\"parameter.paramMetric\"\n                (click)=\"selectedParameters()\">\n                {{ parameter.label }}\n            </mat-option>\n        </ng-container>\n        <ng-template #noDataOption>\n            <mat-option disabled>\n                {{ commonConstant.NO_DATA_FOUND }}\n            </mat-option>\n        </ng-template>\n    </mat-select>\n\n    <mat-error *ngIf=\"!deviceInp\">\n        Please select device first\n    </mat-error>\n    <mat-error *ngIf=\"parameterFC.touched && parameterFC.hasError('required') && deviceInp\">\n        {{ FormErrorEnum.REQUIRED }}\n    </mat-error>\n</mat-form-field>","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\n\nimport { MatInputModule } from '@angular/material/input';\nimport { MatFormFieldModule } from '@angular/material/form-field';\nimport { MatSelectModule } from '@angular/material/select';\n\nimport { NgxMatSelectSearchModule } from 'ngx-mat-select-search';\n\nimport { ParamMetricComponent } from './param-metric.component';\n\n@NgModule({\n    declarations: [\n        ParamMetricComponent\n    ],\n    imports: [\n        CommonModule,\n        FormsModule,\n        ReactiveFormsModule,\n        MatInputModule,\n        MatSelectModule,\n        MatFormFieldModule,\n        NgxMatSelectSearchModule\n    ],\n    exports: [\n        ParamMetricComponent\n    ]\n})\nexport class ParamMetricModule { }\n","import { Component, EventEmitter, OnInit, Output } from '@angular/core';\nimport { FormControl, Validators } from '@angular/forms';\n\nimport { Parameter, ParameterM } from '../../../model/parameter.model';\n\nimport { ParameterService } from '../../../service/parameter.service';\n\n// tsc-library\nimport { StorageService } from '@library/storage-service';\nimport { COMMON_CONSTANT, FormErrorEnum, MaterialFormFieldAppearance, MatSelectSearchService } from '@library/tsc-common';\n// /tsc-library/\n\n@Component({\n    selector: 'lib-parameter',\n    templateUrl: './parameter.component.html',\n    styles: [\n    ]\n})\nexport class ParameterComponent implements OnInit {\n\n    COMMON_CONSTANT = COMMON_CONSTANT;\n    MaterialFormFieldAppearance = MaterialFormFieldAppearance;\n\n    FormErrorEnum = FormErrorEnum;\n\n    @Output()\n    emitFilter = new EventEmitter();\n\n    orgID: any;\n\n    parameterM = [new Parameter()];\n\n    selectedParameterFC: FormControl = new FormControl('', [Validators.required]);\n\n    parameterSearchUtil: MatSelectSearchService = new MatSelectSearchService(['label']);\n\n    constructor(\n        private storageService: StorageService,\n        private parameterService: ParameterService\n    ) { }\n\n    ngOnInit(): void {\n        this.orgID = this.storageService.getStorage('currentOrgID');\n\n        this.getParameterByLayoutID();\n    }\n\n    async getParameterByLayoutID() {\n        this.parameterM = <ParameterM[]>await this.parameterService.getParameterByLayoutID(this.orgID);\n\n        this.parameterSearchUtil.entityArr = this.parameterM;\n        this.parameterSearchUtil.createSubscription();\n    }\n\n    parameterChange(selectedParameter) {\n        this.selectedParameterFC.patchValue(selectedParameter);\n        this.emitFilter.emit();\n    }\n\n}\n","<div class=\"row\">\n    <mat-form-field class=\"matFieldWidth100\" [appearance]=\"MaterialFormFieldAppearance.FORM_FIELD_APPEARANCE\">\n        <mat-label>Select parameter</mat-label>\n        <mat-select (selectionChange)=\"parameterChange($event.value)\" [formControl]=\"selectedParameterFC\" required>\n            <ng-container *ngIf=\"parameterM && parameterM.length > 0 && parameterM[0]['id']; else noDataFound\">\n                <mat-option>\n                    <ngx-mat-select-search [formControl]=\"parameterSearchUtil.filterFC\"\n                        placeholderLabel=\"Search by name\" noEntriesFoundLabel=\"No matching name found.\">\n                    </ngx-mat-select-search>\n                </mat-option>\n                <mat-option *ngFor=\"let parameter of parameterSearchUtil.filteredEntities | async\" [value]=\"parameter.id\">\n                    {{ parameter.label }}\n                </mat-option>\n            </ng-container>\n            <ng-template #noDataFound>\n                <mat-option disabled>\n                    {{ COMMON_CONSTANT.NO_DATA_FOUND }}\n                </mat-option>\n            </ng-template>\n        </mat-select>\n        <mat-error *ngIf=\"selectedParameterFC.hasError('required')\">\n            {{ FormErrorEnum.REQUIRED }}\n        </mat-error>\n    </mat-form-field>\n</div>","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\n\nimport { MatInputModule } from '@angular/material/input';\nimport { MatSelectModule } from '@angular/material/select';\nimport { MatFormFieldModule } from '@angular/material/form-field';\nimport { NgxMatSelectSearchModule } from 'ngx-mat-select-search';\n\nimport { ParameterComponent } from './parameter.component';\n\n@NgModule({\n    declarations: [\n        ParameterComponent\n    ],\n    imports: [\n        CommonModule,\n        FormsModule,\n        ReactiveFormsModule,\n        MatInputModule,\n        MatSelectModule,\n        MatFormFieldModule,\n        NgxMatSelectSearchModule\n    ],\n    exports: [\n        ParameterComponent\n    ]\n})\n\nexport class ParameterModule { }\n","export enum DropdownTypeEnum {\n    SINGLE_DROPDOWN = 'SINGLE',\n    MULTIPLE_DROPDOWN = 'MULTIPLE',\n}","import { Inject, Injectable } from '@angular/core';\nimport { HttpClient, HttpParams } from '@angular/common/http';\n\nimport { Observable } from 'rxjs';\n\nimport { StatusInfoM, DeviceM, DeviceMappingM } from '../model/device.model';\n\n// tsc-library\nimport { PageM } from '@library/tsc-common';\n// /tsc-library/\n\n@Injectable({\n    providedIn: 'root'\n})\n\nexport class DeviceController {\n\n    constructor(\n        private http: HttpClient,\n        @Inject('environment') private environment: any\n    ) { }\n\n    getDeviceStatusInfo(orgID): Observable<StatusInfoM> {\n        return this.http.get<StatusInfoM>(`${this.environment.TSC_COMMON_API_URL}organizations/${orgID}/devices/status`);\n    }\n\n    getDevicesByEntityID(orgID, requestBody): Observable<DeviceM[]> {\n        return this.http.post<DeviceM[]>(`${this.environment.TSC_COMMON_API_URL}organizations/${orgID}/entities/devices`, requestBody);\n    }\n\n    getUnMappedDevices(pageNo: number, pageSize: number, sortBy: string, orderBy: string, search: any[], orgID: number, layoutID: number, entityID: number): Observable<PageM<DeviceMappingM>> {\n        let params = new HttpParams();\n\n        params = params.append('pageNo', pageNo);\n        params = params.append('pageSize', pageSize);\n        params = params.append('sortBy', sortBy);\n        params = params.append('orderBy', orderBy);\n\n        search.forEach(search => params = params.append('search', search));\n        return this.http.get<PageM<DeviceMappingM>>(`${this.environment.TSC_COMMON_API_URL}organizations/${orgID}/layouts/${layoutID}/entities/${entityID}/devices/unmapped`, { params: params });\n    }\n\n    getMappedDevices(pageNo: number, pageSize: number, search: any[], orgID: number, layoutID: number, entityID: number): Observable<PageM<DeviceMappingM>> {\n        let params = new HttpParams();\n\n        params = params.append('pageNo', pageNo);\n        params = params.append('pageSize', pageSize);\n\n        search.forEach(search => params = params.append('search', search));\n        return this.http.get<PageM<DeviceMappingM>>(`${this.environment.TSC_COMMON_API_URL}organizations/${orgID}/layouts/${layoutID}/entities/${entityID}/devices/mapped`, { params: params });\n    }\n\n    saveDeviceMapping(orgID, layoutID, entityID, devices) {\n        return this.http.patch(`${this.environment.TSC_COMMON_API_URL}organizations/${orgID}/layouts/${layoutID}/entities/${entityID}/map-devices`, devices);\n    }\n\n    deleteDeviceMapping(orgID, layoutID, entityID, deviceID) {\n        let params = new HttpParams();\n        params = params.append('deviceID', deviceID);\n\n        return this.http.delete(`${this.environment.TSC_COMMON_API_URL}organizations/${orgID}/layouts/${layoutID}/entities/${entityID}/devices`, { params: params });\n    }\n\n    updateSourceLoad(orgID, layoutID, entityID, deviceID, requestBody) {\n        return this.http.patch(`${this.environment.TSC_COMMON_API_URL}organizations/${orgID}/layouts/${layoutID}/entities/${entityID}/devices/${deviceID}/source-load`, requestBody);\n    }\n\n}\n","import { Injectable } from '@angular/core';\n\nimport { Device, DeviceM } from '../model/device.model';\n\nimport { DeviceController } from '../controller/device.controller';\n\n@Injectable({\n    providedIn: 'root'\n})\n\nexport class DeviceService {\n\n    constructor(\n        private deviceController: DeviceController\n    ) { }\n\n    async getDevicesByEntityID(orgID, requestBody): Promise<DeviceM[]> {\n        let deviceM: DeviceM[];\n        try {\n            deviceM = await this.deviceController.getDevicesByEntityID(orgID, requestBody).toPromise();\n\n            if (deviceM) {\n                return deviceM;\n            } else {\n                return [new Device()];\n            }\n        } catch (error) {\n            console.error('Error -', error);\n            return [new Device()];\n        }\n    }\n\n}","import { Component, EventEmitter, Input, OnInit, Output, SimpleChanges } from '@angular/core';\nimport { FormControl, Validators } from '@angular/forms';\n\nimport { DropdownTypeEnum } from '../../../enum/dropdown.enum';\nimport { Device, DeviceM } from '../../../model/device.model';\n\nimport { DeviceService } from '../../../service/device.service';\n\n// tsc-library\nimport { StorageService } from '@library/storage-service';\nimport { COMMON_CONSTANT, FormErrorEnum, MaterialFormFieldAppearance, MatSelectSearchService } from '@library/tsc-common';\n// /tsc-library/\n\n@Component({\n    selector: 'lib-device',\n    templateUrl: './device.component.html',\n    styles: [\n    ]\n})\n\nexport class DeviceComponent implements OnInit {\n\n    @Input()\n    dropdownTypeInp: DropdownTypeEnum;\n\n    @Input()\n    entityInp: any;\n\n    commonConstant = COMMON_CONSTANT;\n    materialFormFieldAppearance = MaterialFormFieldAppearance;\n    dropdownTypeEnum = DropdownTypeEnum;\n    FormErrorEnum = FormErrorEnum;\n\n    deviceM = [new Device()];\n\n    orgID: any;\n    dropdownType: any;\n    allDeviceID: any[] = [];\n    totalDeviceCount: number = 0;\n\n    deviceFC: FormControl = new FormControl('', [Validators.required]);\n    multipleDeviceFC: FormControl = new FormControl([], [Validators.required]);\n\n    deviceSearchUtil: MatSelectSearchService = new MatSelectSearchService(['name']);\n\n    @Output()\n    emitFilter = new EventEmitter();\n\n    constructor(\n        private storageService: StorageService,\n        private deviceService: DeviceService\n    ) { }\n\n    ngOnInit(): void {\n        this.orgID = this.storageService.getStorage('currentOrgID');\n    }\n\n    ngOnChanges(changes: SimpleChanges): void {\n        if (changes.dropdownTypeInp && this.dropdownTypeInp) {\n            this.dropdownType = this.dropdownTypeInp;\n        }\n\n        if (this.entityInp && this.entityInp?.length != 0) {\n            if (changes.entityInp) {\n                this.getDevicesByEntityID(this.entityInp);\n\n                this.deviceFC.patchValue(null);\n                this.emitFilter.emit();\n            }\n        }\n    }\n\n    async getDevicesByEntityID(entityID) {\n        const requestBody = { 'entityID': this.dropdownTypeInp == 'SINGLE' ? [entityID] : entityID };\n\n        this.deviceM = <DeviceM[]>await this.deviceService.getDevicesByEntityID(this.orgID, requestBody);\n\n        this.deviceSearchUtil.entityArr = this.deviceM;\n        this.deviceSearchUtil.createSubscription();\n\n        this.totalDeviceCount = this.deviceM.length;\n        this.deviceM.forEach(device => this.allDeviceID.push(device['id']));\n        this.emitFilter.emit();\n    }\n\n    onChange(selectedDevice) {\n        this.deviceFC.patchValue(selectedDevice);\n        this.emitFilter.emit();\n    }\n\n    selectAllDevices() {\n        if (!this.multipleDeviceFC.value.includes(-1)) {\n            this.multipleDeviceFC.reset([]);\n            return;\n        }\n        this.multipleDeviceFC.setValue([-1, ...this.allDeviceID]);\n        this.emitFilter.emit();\n    }\n\n    selectedDevices() {\n        const selected = this.multipleDeviceFC.value;\n\n        if (selected.includes(-1)) {\n            selected.shift();\n            this.multipleDeviceFC.patchValue(selected);\n        } else if (this.multipleDeviceFC.value.length == this.totalDeviceCount) {\n            this.allDeviceID.splice(0, 0, -1);\n            this.multipleDeviceFC.patchValue(this.allDeviceID);\n        } else {\n            const filteredSelected = selected.filter(s => s != -1);\n            this.multipleDeviceFC.patchValue(filteredSelected);\n        }\n\n        this.emitFilter.emit();\n    }\n\n}","<mat-form-field *ngIf=\"dropdownType == dropdownTypeEnum.SINGLE_DROPDOWN\" class=\"matFieldWidth100\"\n    [appearance]=\"materialFormFieldAppearance.FORM_FIELD_APPEARANCE\">\n    <mat-label>Select device</mat-label>\n    <mat-select (selectionChange)=\"onChange($event.value)\" [formControl]=\"deviceFC\" required>\n        <ng-container *ngIf=\"deviceM && deviceM.length > 0 && deviceM[0]['id']; else noDeviceFound\">\n            <mat-option>\n                <ngx-mat-select-search [formControl]=\"deviceSearchUtil.filterFC\" placeholderLabel=\"Search by name\"\n                    noEntriesFoundLabel=\"No matching name found.\">\n                </ngx-mat-select-search>\n            </mat-option>\n            <mat-option *ngFor=\"let device of deviceSearchUtil.filteredEntities | async\" [value]=\"device.id\">\n                {{ device.name }}\n            </mat-option>\n        </ng-container>\n        <ng-template #noDeviceFound>\n            <mat-option disabled>\n                {{ commonConstant.NO_DATA_FOUND }}\n            </mat-option>\n        </ng-template>\n    </mat-select>\n    <mat-error *ngIf=\"!entityInp\">\n        Please select entity first\n    </mat-error>\n    <mat-error *ngIf=\"deviceFC.touched && deviceFC.hasError('required') && entityInp\">\n        {{ FormErrorEnum.REQUIRED }}\n    </mat-error>\n</mat-form-field>\n\n<mat-form-field *ngIf=\"dropdownType == dropdownTypeEnum.MULTIPLE_DROPDOWN\" class=\"matFieldWidth100\"\n    [appearance]=\"materialFormFieldAppearance.FORM_FIELD_APPEARANCE\">\n    <mat-label>Select device</mat-label>\n\n    <mat-select [formControl]=\"multipleDeviceFC\" multiple required>\n        <ng-container *ngIf=\"deviceM && deviceM.length > 0 && deviceM[0]['id']; else noDataOption\">\n            <ngx-mat-select-search [formControl]=\"deviceSearchUtil.filterFC\" placeholderLabel=\"Search by name\"\n                noEntriesFoundLabel=\"No matching name found.\">\n            </ngx-mat-select-search>\n            <mat-option [value]=\"-1\" (click)=\"selectAllDevices()\" [hidden]=\"deviceSearchUtil.filterFC.value\">\n                Select all\n            </mat-option>\n            <mat-option *ngFor=\"let device of deviceSearchUtil.filteredEntities | async\" [value]=\"device.id\"\n                (click)=\"selectedDevices()\">\n                {{ device.name }}\n            </mat-option>\n        </ng-container>\n        <ng-template #noDataOption>\n            <mat-option disabled>\n                {{ commonConstant.NO_DATA_FOUND }}\n            </mat-option>\n        </ng-template>\n    </mat-select>\n\n    <mat-error *ngIf=\"!entityInp\">\n        Please select entity first\n    </mat-error>\n    <mat-error *ngIf=\"multipleDeviceFC.touched && multipleDeviceFC.hasError('required') && entityInp\">\n        {{ FormErrorEnum.REQUIRED }}\n    </mat-error>\n</mat-form-field>","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\n\nimport { MatInputModule } from '@angular/material/input';\nimport { MatSelectModule } from '@angular/material/select';\nimport { MatFormFieldModule } from '@angular/material/form-field';\n\nimport { NgxMatSelectSearchModule } from 'ngx-mat-select-search';\n\nimport { DeviceComponent } from './device.component';\n\n@NgModule({\n    declarations: [\n        DeviceComponent\n    ],\n    imports: [\n        CommonModule,\n        FormsModule,\n        ReactiveFormsModule,\n        MatInputModule,\n        MatSelectModule,\n        MatFormFieldModule,\n        NgxMatSelectSearchModule\n    ],\n    exports: [\n        DeviceComponent\n    ]\n})\n\nexport class DeviceModule { }\n","import { Inject, Injectable } from '@angular/core';\nimport { HttpClient, HttpHeaders, HttpParams } from '@angular/common/http';\n\nimport { Observable } from 'rxjs';\n\nimport { EntityWithChildrenM, EntityM, ParameterEntityM, EntityTypeM, DashboardEntitiesI } from '../model/entity.model';\nimport { StatusInfoM } from '../model/device.model';\n\n@Injectable({\n    providedIn: 'root'\n})\n\nexport class EntityController {\n\n    constructor(\n        private http: HttpClient,\n        @Inject('environment') private environment: any\n    ) { }\n\n    getEntitiesHavingDevicesByOrgID(orgID): Observable<EntityM[]> {\n        return this.http.get<EntityM[]>(`${this.environment.TSC_COMMON_API_URL}organizations/${orgID}/entities-having-devices`);\n    }\n\n    getEntityByID(orgID, layoutID, entityID): Observable<EntityM> {\n        return this.http.get<EntityM>(`${this.environment.TSC_COMMON_API_URL}organizations/${orgID}/layouts/${layoutID}/entities/${entityID}`);\n    }\n\n    getConsumptionEntities(orgID): Observable<EntityWithChildrenM> {\n        return this.http.get<EntityWithChildrenM>(`${this.environment.TSC_COMMON_API_URL}organizations/${orgID}/layouts/consumption-entities`);\n    }\n\n    getEntitiesByParameterID(orgID, parameterID): Observable<ParameterEntityM[]> {\n        return this.http.get<ParameterEntityM[]>(`${this.environment.TSC_COMMON_API_URL}organizations/${orgID}/layouts/parameters/${parameterID}/entities`);\n    }\n\n    getEntitiesByLayoutID(orgID, layoutID): Observable<ParameterEntityM[]> {\n        return this.http.get<ParameterEntityM[]>(`${this.environment.TSC_COMMON_API_URL}organizations/${orgID}/layouts/${layoutID}/entities`);\n    }\n\n    getEntitiesWithDevicesByLayoutID(orgID, layoutID, requestBody, skipLoader): Observable<ParameterEntityM> {\n        let headers = new HttpHeaders().set('skipLoader', skipLoader);\n\n        return this.http.post<ParameterEntityM>(`${this.environment.TSC_COMMON_API_URL}organizations/${orgID}/layouts/${layoutID}/entity-device`, requestBody, { headers: headers });\n    }\n\n    getEntitiesByEntityType(orgID, requestBody): Observable<EntityWithChildrenM> {\n        return this.http.post<EntityWithChildrenM>(`${this.environment.TSC_COMMON_API_URL}organizations/${orgID}/entity-type/entities`, requestBody);\n    }\n\n    getEntitiesByParamMetric(orgID, paramName): Observable<EntityM[]> {\n        let params = new HttpParams();\n        params = params.append('paramName', paramName);\n\n        return this.http.get<EntityM[]>(`${this.environment.TSC_COMMON_API_URL}organizations/${orgID}/parameter-entities`, { params: params });\n    }\n\n    getEntityLevelConsumption(orgID, requestBody) {\n        return this.http.post(`${this.environment.TSC_COMMON_API_URL}organizations/${orgID}/entities/load-consumption`, requestBody);\n    }\n\n    getEntityTypeByLayoutID(orgID, skipLoader): Observable<EntityTypeM[]> {\n        let headers = new HttpHeaders().set('skipLoader', skipLoader);\n\n        return this.http.get<EntityTypeM[]>(`${this.environment.TSC_COMMON_API_URL}organizations/${orgID}/entities/type`, { headers: headers });\n    }\n\n    createEntity(orgID, layoutID, entityID, entity) {\n        return this.http.post(`${this.environment.TSC_COMMON_API_URL}organizations/${orgID}/layouts/${layoutID}/entities/${entityID}/add-child`, entity);\n    }\n\n    updateEntity(orgID, layoutID, entityID, entity) {\n        return this.http.patch(`${this.environment.TSC_COMMON_API_URL}organizations/${orgID}/layouts/${layoutID}/entities/${entityID}`, entity);\n    }\n\n    deleteEntity(orgID, layoutID, entityID) {\n        return this.http.delete(`${this.environment.TSC_COMMON_API_URL}organizations/${orgID}/layouts/${layoutID}/entities/${entityID}`);\n    }\n\n    getEntityStatusInfo(orgID): Observable<StatusInfoM> {\n        return this.http.get<StatusInfoM>(`${this.environment.TSC_COMMON_API_URL}organizations/${orgID}/entities/status`);\n    }\n\n    getDashboardEntities(entityTypeFilterArr, orgID): Observable<DashboardEntitiesI[]> {\n        let params = new HttpParams();\n        entityTypeFilterArr.forEach(filter => params = params.append('filter', filter));\n\n        return this.http.get<DashboardEntitiesI[]>(`${this.environment.TSC_COMMON_API_URL}organizations/${orgID}/layouts/dashboard/entities`, { params: params });\n    }\n}\n","import { Injectable } from '@angular/core';\n\nimport { Entity, EntityM, ParameterEntity, ParameterEntityM, EntityType, EntityTypeM } from '../model/entity.model';\n\nimport { EntityController } from '../controller/entity.controller';\n\n@Injectable({\n    providedIn: 'root'\n})\n\nexport class EntityService {\n\n    constructor(\n        private entityController: EntityController\n    ) { }\n\n    async getEntitiesHavingDevicesByOrgID(orgID): Promise<EntityM[]> {\n        let entityM: EntityM[];\n        try {\n            entityM = await this.entityController.getEntitiesHavingDevicesByOrgID(orgID).toPromise();\n\n            if (entityM) {\n                return entityM;\n            } else {\n                return [new Entity()];\n            }\n        } catch (error) {\n            console.error('Error -', error);\n            return [new Entity()];\n        }\n    }\n\n    async getEntitiesByParameterID(orgID, parameterID): Promise<ParameterEntityM[]> {\n        let entityTreeM: ParameterEntityM[];\n        try {\n            entityTreeM = await this.entityController.getEntitiesByParameterID(orgID, parameterID).toPromise();\n\n            if (entityTreeM) {\n                return entityTreeM;\n            } else {\n                return [new ParameterEntity()];\n            }\n        } catch (error) {\n            console.error('Error -', error);\n            return [new ParameterEntity()];\n        }\n    }\n\n    async getEntityTypeByLayoutID(orgID, skipLoader): Promise<EntityTypeM[]> {\n        let entityTypeM: EntityTypeM[];\n        try {\n            entityTypeM = await this.entityController.getEntityTypeByLayoutID(orgID, skipLoader).toPromise();\n\n            if (entityTypeM) {\n                return entityTypeM;\n            } else {\n                return [new EntityType()];\n            }\n        } catch (error) {\n            console.error('Error -', error);\n            return [new EntityType()];\n        }\n    }\n\n    async getEntitiesWithDevicesByLayoutID(orgID, layoutID, requestBody, skipLoader): Promise<ParameterEntityM> {\n        let entityDeviceM: ParameterEntityM;\n        try {\n            entityDeviceM = await this.entityController.getEntitiesWithDevicesByLayoutID(orgID, layoutID, requestBody, skipLoader).toPromise();\n\n            if (entityDeviceM) {\n                return entityDeviceM;\n            } else {\n                return new ParameterEntity();\n            }\n        } catch (error) {\n            console.error('Error -', error);\n            return new ParameterEntity();\n        }\n    }\n\n    async getEntityByID(orgID, layoutID, entityID): Promise<EntityM> {\n        let layoutM: EntityM;\n        try {\n            layoutM = await this.entityController.getEntityByID(orgID, layoutID, entityID).toPromise();\n\n            if (layoutM) {\n                return layoutM;\n            } else {\n                return new Entity();\n            }\n        } catch (error) {\n            console.error('Error -', error);\n            return new Entity();\n        }\n    }\n\n    async getEntitiesByParamMetric(orgID, paramName): Promise<EntityM[]> {\n        let entityM: EntityM[];\n        try {\n            entityM = await this.entityController.getEntitiesByParamMetric(orgID, paramName).toPromise();\n\n            if (entityM) {\n                return entityM;\n            } else {\n                return [new Entity()];\n            }\n        } catch (error) {\n            console.error('Error -', error);\n            return [new Entity()];\n        }\n    }\n\n}","import { Component, EventEmitter, Input, OnInit, Output, SimpleChanges } from '@angular/core';\nimport { FormControl, Validators } from '@angular/forms';\n\nimport { Entity, EntityM } from '../../../model/entity.model';\n\nimport { EntityService } from '../../../service/entity.service';\n\n// tsc-library\nimport { COMMON_CONSTANT, FormErrorEnum, MatSelectSearchService, MaterialFormFieldAppearance } from '@library/tsc-common';\nimport { StorageService } from '@library/storage-service';\nimport { DropdownTypeEnum } from '../../../enum/dropdown.enum';\n// /tsc-library/\n\n@Component({\n    selector: 'lib-entity',\n    templateUrl: './entity.component.html',\n    styles: [\n    ]\n})\n\nexport class EntityComponent implements OnInit {\n    @Input()\n    dropdownTypeInp: DropdownTypeEnum;\n\n    commonConstant = COMMON_CONSTANT;\n\n    materialFormFieldAppearance = MaterialFormFieldAppearance\n    dropdownTypeEnum = DropdownTypeEnum;\n    FormErrorEnum = FormErrorEnum;\n\n    orgID: any;\n    entityM = [new Entity()];\n    dropdownType: string = this.dropdownTypeEnum.SINGLE_DROPDOWN;\n    allEntityID: any[] = [];\n    totalEntityCount: number = 0;\n\n    entityFC: FormControl = new FormControl('', [Validators.required]);\n    multipleEntityFC: FormControl = new FormControl([], [Validators.required]);\n\n    entitySearchUtil: MatSelectSearchService = new MatSelectSearchService(['name']);\n\n    @Output()\n    emitFilter = new EventEmitter();\n\n    constructor(\n        private storageService: StorageService,\n        private entityService: EntityService\n    ) { }\n\n    ngOnInit(): void {\n        this.orgID = this.storageService.getStorage('currentOrgID');\n\n        this.getEntitiesHavingDevicesByOrgID();\n    }\n\n    ngOnChanges(changes: SimpleChanges): void {\n        if (changes.dropdownTypeInp && this.dropdownTypeInp) {\n            this.dropdownType = this.dropdownTypeInp;\n        }\n    }\n\n    async getEntitiesHavingDevicesByOrgID() {\n        this.entityM = <EntityM[]>await this.entityService.getEntitiesHavingDevicesByOrgID(this.orgID);\n\n        this.entitySearchUtil.entityArr = this.entityM;\n        this.entitySearchUtil.createSubscription();\n\n        this.totalEntityCount = this.entityM.length;\n        this.entityM.forEach(entity => this.allEntityID.push(entity['id']));\n\n        if (this.entityM.length > 0) {\n            this.entityFC.patchValue(this.entityM[0]['id']);\n            this.emitFilter.emit();\n        }\n    }\n\n    onChange(selectedEntity) {\n        this.entityFC.patchValue(selectedEntity);\n        this.emitFilter.emit();\n    }\n\n    selectAllEntities() {\n        if (!this.multipleEntityFC.value.includes(-1)) {\n            this.multipleEntityFC.reset([]);\n            return;\n        }\n        this.multipleEntityFC.setValue([-1, ...this.allEntityID]);\n        this.emitFilter.emit();\n    }\n\n    selectedEntities() {\n        const selected = this.multipleEntityFC.value;\n\n        if (selected.includes(-1)) {\n            selected.shift();\n            this.multipleEntityFC.patchValue(selected);\n        } else if (this.multipleEntityFC.value.length == this.totalEntityCount) {\n            this.allEntityID.splice(0, 0, -1);\n            this.multipleEntityFC.patchValue(this.allEntityID);\n        } else {\n            const filteredSelected = selected.filter(s => s != -1);\n            this.multipleEntityFC.patchValue(filteredSelected);\n        }\n\n        this.emitFilter.emit();\n    }\n\n}\n","<mat-form-field *ngIf=\"dropdownType == dropdownTypeEnum.SINGLE_DROPDOWN\" class=\"matFieldWidth100\"\n    [appearance]=\"materialFormFieldAppearance.FORM_FIELD_APPEARANCE\">\n    <mat-label>Select entity</mat-label>\n    <mat-select (selectionChange)=\"onChange($event.value)\" [formControl]=\"entityFC\" required>\n        <ng-container *ngIf=\"entityM && entityM.length > 0 && entityM[0]['id']; else noDataFound\">\n            <mat-option>\n                <ngx-mat-select-search [formControl]=\"entitySearchUtil.filterFC\" placeholderLabel=\"Search by name\"\n                    noEntriesFoundLabel=\"No matching name found.\">\n                </ngx-mat-select-search>\n            </mat-option>\n            <mat-option *ngFor=\"let entity of entitySearchUtil.filteredEntities | async\" [value]=\"entity.id\">\n                {{ entity.name }}\n            </mat-option>\n        </ng-container>\n        <ng-template #noDataFound>\n            <mat-option disabled>\n                {{ commonConstant.NO_DATA_FOUND }}\n            </mat-option>\n        </ng-template>\n    </mat-select>\n    <mat-error *ngIf=\"entityFC.touched && entityFC.hasError('required')\">\n        {{ FormErrorEnum.REQUIRED }}\n    </mat-error>\n</mat-form-field>\n\n<mat-form-field *ngIf=\"dropdownType == dropdownTypeEnum.MULTIPLE_DROPDOWN\" class=\"matFieldWidth100\"\n    [appearance]=\"materialFormFieldAppearance.FORM_FIELD_APPEARANCE\">\n    <mat-label>Select entity</mat-label>\n\n    <mat-select [formControl]=\"multipleEntityFC\" multiple required>\n        <ng-container *ngIf=\"entityM && entityM.length > 0 && entityM[0]['id']; else noDataOption\">\n            <ngx-mat-select-search [formControl]=\"entitySearchUtil.filterFC\" placeholderLabel=\"Search by name\"\n                noEntriesFoundLabel=\"No matching name found.\">\n            </ngx-mat-select-search>\n            <mat-option [value]=\"-1\" (click)=\"selectAllEntities()\" [hidden]=\"entitySearchUtil.filterFC.value\">\n                Select all\n            </mat-option>\n            <mat-option *ngFor=\"let entity of entitySearchUtil.filteredEntities | async\" [value]=\"entity.id\"\n                (click)=\"selectedEntities()\">\n                {{ entity.name }}\n            </mat-option>\n        </ng-container>\n        <ng-template #noDataOption>\n            <mat-option disabled>\n                {{ commonConstant.NO_DATA_FOUND }}\n            </mat-option>\n        </ng-template>\n    </mat-select>\n    <mat-error *ngIf=\"multipleEntityFC.hasError('required')\">\n        {{ FormErrorEnum.REQUIRED }}\n    </mat-error>\n</mat-form-field>","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\n\nimport { MatInputModule } from '@angular/material/input';\nimport { MatFormFieldModule } from '@angular/material/form-field';\nimport { MatSelectModule } from '@angular/material/select';\n\nimport { NgxMatSelectSearchModule } from 'ngx-mat-select-search';\n\nimport { EntityComponent } from './entity.component';\n\n@NgModule({\n    declarations: [\n        EntityComponent\n    ],\n    imports: [\n        CommonModule,\n        FormsModule,\n        ReactiveFormsModule,\n        MatInputModule,\n        MatSelectModule,\n        MatFormFieldModule,\n        NgxMatSelectSearchModule\n    ],\n    exports: [\n        EntityComponent\n    ]\n})\nexport class EntityModule { }\n","import { Component, EventEmitter, OnInit, Output } from '@angular/core';\nimport { FormControl, Validators } from '@angular/forms';\n\nimport { EntityType, EntityTypeM } from '../../../model/entity.model';\n\nimport { EntityService } from '../../../service/entity.service';\n\n// tsc-library\nimport { StorageService } from '@library/storage-service';\nimport { COMMON_CONSTANT, FormErrorEnum, MatSelectSearchService, MaterialFormFieldAppearance } from '@library/tsc-common';\n// /tsc-library/\n\n@Component({\n    selector: 'lib-entity-type',\n    templateUrl: './entity-type.component.html',\n    styles: [\n    ]\n})\nexport class EntityTypeComponent implements OnInit {\n\n    materialFormFieldAppearance = MaterialFormFieldAppearance;\n    commonConstant = COMMON_CONSTANT;\n\n    FormErrorEnum = FormErrorEnum;\n\n    orgID: any;\n    layoutID: any;\n    entityTypeM = [new EntityType()];\n    entityTypeFC: FormControl = new FormControl('', Validators.required);\n\n    entityTypeSearchUtil: MatSelectSearchService = new MatSelectSearchService(['type']);\n\n    @Output()\n    emitFilter = new EventEmitter();\n\n    constructor(\n        private storageService: StorageService,\n        private entityService: EntityService\n    ) { }\n\n    ngOnInit(): void {\n        this.orgID = this.storageService.getStorage('currentOrgID');\n        this.layoutID = this.storageService.getStorage('layoutID');\n\n        this.getEntityTypeByLayoutID();\n    }\n\n    async getEntityTypeByLayoutID() {\n        this.entityTypeM = <EntityTypeM[]>await this.entityService.getEntityTypeByLayoutID(this.orgID, 'NO');\n\n        this.entityTypeSearchUtil.entityArr = this.entityTypeM;\n        this.entityTypeSearchUtil.createSubscription();\n\n        if (this.entityTypeM && this.entityTypeM.length > 0) {\n            const defaultEntityType = this.entityTypeM[0].type;\n\n            if (defaultEntityType) {\n                this.entityTypeFC.patchValue(defaultEntityType);\n                this.emitFilter.emit();\n            }\n        }\n    }\n\n    onChange(selectedType) {\n        this.entityTypeFC.patchValue(selectedType);\n        this.emitFilter.emit();\n    }\n}\n","<mat-form-field class=\"matFieldWidth100\" [appearance]=\"materialFormFieldAppearance.FORM_FIELD_APPEARANCE\">\n    <mat-label>Select entity type</mat-label>\n    <mat-select (selectionChange)=\"onChange($event.value)\" [formControl]=\"entityTypeFC\" required>\n        <ng-container *ngIf=\"entityTypeM && entityTypeM.length > 0 && entityTypeM?.[0]?.type; else noDataFound\">\n            <mat-option>\n                <ngx-mat-select-search [formControl]=\"entityTypeSearchUtil.filterFC\" placeholderLabel=\"Search by name\"\n                    noEntriesFoundLabel=\"No matching name found.\">\n                </ngx-mat-select-search>\n            </mat-option>\n            <mat-option *ngFor=\"let type of entityTypeSearchUtil.filteredEntities | async\" [value]=\"type.type\">\n                {{ type.type | titlecase }}\n            </mat-option>\n        </ng-container>\n        <ng-template #noDataFound>\n            <mat-option disabled>\n                {{ commonConstant.NO_DATA_FOUND }}\n            </mat-option>\n        </ng-template>\n    </mat-select>\n    <mat-error *ngIf=\"entityTypeFC.touched && entityTypeFC.hasError('required')\">\n        {{ FormErrorEnum.REQUIRED }}\n    </mat-error>\n</mat-form-field>","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\n\nimport { MatInputModule } from '@angular/material/input';\nimport { MatFormFieldModule } from '@angular/material/form-field';\nimport { MatSelectModule } from '@angular/material/select';\n\nimport { NgxMatSelectSearchModule } from 'ngx-mat-select-search';\n\nimport { EntityTypeComponent } from './entity-type.component';\n\n@NgModule({\n    declarations: [\n        EntityTypeComponent\n    ],\n    imports: [\n        CommonModule,\n        FormsModule,\n        ReactiveFormsModule,\n        MatInputModule,\n        MatSelectModule,\n        MatFormFieldModule,\n        NgxMatSelectSearchModule\n    ],\n    exports: [\n        EntityTypeComponent\n    ]\n})\nexport class EntityTypeModule { }\n","import { Inject, Injectable } from '@angular/core';\nimport { HttpClient } from '@angular/common/http';\n\nimport { Observable } from 'rxjs';\n\nimport { UnitM } from '../model/unit.model';\n\n@Injectable({\n    providedIn: 'root'\n})\n\nexport class UnitController {\n\n    constructor(\n        private http: HttpClient,\n        @Inject('environment') private environment: any\n    ) { }\n\n    getUnitByParameterID(orgID, parameterID): Observable<UnitM[]> {\n        return this.http.get<UnitM[]>(`${this.environment.TSC_COMMON_API_URL}organizations/${orgID}/parameters/${parameterID}/unit-type`);\n    }\n}","import { Injectable } from '@angular/core';\n\nimport { Unit, UnitM } from '../model/unit.model';\n\nimport { UnitController } from '../controller/unit.controller';\n\n@Injectable({\n    providedIn: 'root'\n})\n\nexport class UnitService {\n\n    constructor(\n        private unitController: UnitController,\n    ) { }\n\n    async getUnitByParameterID(orgID, parameterID): Promise<UnitM[]> {\n        let unitM: UnitM[];\n        try {\n            unitM = await this.unitController.getUnitByParameterID(orgID, parameterID).toPromise();\n\n            if (unitM) {\n                return unitM;\n            } else {\n                return [new Unit()];\n            }\n        } catch (error) {\n            console.error('Error -', error);\n            return [new Unit()];\n        }\n    }\n}","import { Component, EventEmitter, Input, OnInit, Output, SimpleChanges } from '@angular/core';\nimport { FormControl, Validators } from '@angular/forms';\n\nimport { Unit, UnitM } from '../../../model/unit.model';\n\nimport { UnitService } from '../../../service/unit.service';\n\n// tsc-library\nimport { StorageService } from '@library/storage-service';\nimport { COMMON_CONSTANT, FormErrorEnum, MaterialFormFieldAppearance, MatSelectSearchService } from '@library/tsc-common';\n// /tsc-library/\n\n@Component({\n    selector: 'lib-unit',\n    templateUrl: './unit.component.html',\n    styles: [\n    ]\n})\n\nexport class UnitComponent implements OnInit {\n\n    @Input()\n    selectedParameterID: any;\n\n    COMMON_CONSTANT = COMMON_CONSTANT;\n    MaterialFormFieldAppearance = MaterialFormFieldAppearance;\n\n    FormErrorEnum = FormErrorEnum;\n\n    @Output()\n    emitFilter = new EventEmitter();\n\n    orgID: any;\n\n    unitM = [new Unit()];\n\n    selectedUnitFC: FormControl = new FormControl('', [Validators.required]);\n\n    unitSearchUtil: MatSelectSearchService = new MatSelectSearchService(['name']);\n\n    constructor(\n        private storageService: StorageService,\n        private unitService: UnitService\n    ) { }\n\n    ngOnInit(): void {\n        this.orgID = this.storageService.getStorage('currentOrgID');\n    }\n\n    ngOnChanges(changes: SimpleChanges): void {\n        if (this.selectedParameterID) {\n            if (changes.selectedParameterID) {\n                this.getUnitByParameterID(this.selectedParameterID);\n            }\n        }\n    }\n\n    async getUnitByParameterID(parameterID) {\n        this.unitM = <UnitM[]>await this.unitService.getUnitByParameterID(this.orgID, parameterID);\n\n        this.unitSearchUtil.entityArr = this.unitM;\n        this.unitSearchUtil.createSubscription();\n    }\n\n    unitChange(selectedUnit) {\n        this.selectedUnitFC.patchValue(selectedUnit);\n        this.emitFilter.emit();\n    }\n\n}","<div class=\"row\">\n    <mat-form-field class=\"matFieldWidth100\" [appearance]=\"MaterialFormFieldAppearance.FORM_FIELD_APPEARANCE\">\n        <mat-label>Select unit</mat-label>\n\n        <mat-select (selectionChange)=\"unitChange($event.value)\" [formControl]=\"selectedUnitFC\" required>\n            <ng-container *ngIf=\"unitM && unitM.length > 0 && unitM[0]['id']; else noDataFound\">\n                <mat-option>\n                    <ngx-mat-select-search [formControl]=\"unitSearchUtil.filterFC\" placeholderLabel=\"Search by name\"\n                        noEntriesFoundLabel=\"No matching name found.\">\n                    </ngx-mat-select-search>\n                </mat-option>\n                <mat-option *ngFor=\"let unit of unitSearchUtil.filteredEntities | async\" [value]=\"unit.id\">\n                    {{ unit.name }}\n                </mat-option>\n            </ng-container>\n            <ng-template #noDataFound>\n                <mat-option disabled>\n                    {{ COMMON_CONSTANT.NO_DATA_FOUND }}\n                </mat-option>\n            </ng-template>\n        </mat-select>\n\n        <mat-error *ngIf=\"!selectedParameterID\">\n            Please select parameter first\n        </mat-error>\n        <mat-error *ngIf=\"selectedUnitFC.hasError('required') && selectedParameterID\">\n            {{ FormErrorEnum.REQUIRED }}\n        </mat-error>\n    </mat-form-field>\n</div>","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\n\nimport { MatInputModule } from '@angular/material/input';\nimport { MatSelectModule } from '@angular/material/select';\nimport { MatFormFieldModule } from '@angular/material/form-field';\nimport { NgxMatSelectSearchModule } from 'ngx-mat-select-search';\n\nimport { UnitComponent } from './unit.component';\n\n@NgModule({\n    declarations: [\n        UnitComponent\n    ],\n    imports: [\n        CommonModule,\n        FormsModule,\n        ReactiveFormsModule,\n        MatInputModule,\n        MatSelectModule,\n        MatFormFieldModule,\n        NgxMatSelectSearchModule\n    ],\n    exports: [\n        UnitComponent\n    ]\n})\n\nexport class UnitModule { }\n","import { Component, OnInit } from '@angular/core';\n\nimport { StatusInfo } from '../../../model/device.model';\nimport { EntityLevelConsumption } from '../../../model/entity.model';\nimport { AggregateDataRequest } from '../../../model/aggregate-data.model';\n\nimport { EntityController } from '../../../controller/entity.controller';\nimport { DeviceController } from '../../../controller/device.controller';\n\nimport { AggregateDataService } from '../../../service/aggregate-data.service';\n\n// tsc-library\nimport { DateTimeIntervalEnum, DateService } from '@library/date';\nimport { COMMON_CONSTANT } from '@library/tsc-common';\nimport { StorageService } from '@library/storage-service';\nimport { ApplicationKeyID } from '@library/application-service';\n// /tsc-library/\n\n@Component({\n    selector: 'lib-home',\n    templateUrl: './home.component.html',\n    styleUrls: ['./home.component.scss']\n})\n\nexport class HomeComponent implements OnInit {\n    commonConstant = COMMON_CONSTANT;\n\n    orgID: any;\n    applicationKeyID: any;\n    paramKey: any;\n    label: any;\n    icon;\n\n    outerStrokeColor: any;\n    outerStrokeGradientStopColor: any;\n    innerStrokeColor: any;\n\n    totalConsumptionCircleData: any;\n    consumptionBreakupCircleData: any;\n\n    todayConsumption: any;\n    currentMonthConsumption: any;\n    currentYearConsumption: any;\n    entityConsumption = [new EntityLevelConsumption()];\n    deviceInfoM = new StatusInfo();\n\n    constructor(\n        private storageService: StorageService,\n        private dateService: DateService,\n        private aggregateDataService: AggregateDataService,\n        private entityController: EntityController,\n        private deviceController: DeviceController\n    ) { }\n\n    ngOnInit(): void {\n        this.orgID = this.storageService.getStorage('currentOrgID');\n        this.applicationKeyID = this.storageService.getStorage('applicationKeyID');\n\n        if (this.applicationKeyID == ApplicationKeyID.ENERGY_KEY_ID) {\n            this.label = \"Energy\";\n            this.icon = \"bolt\";\n            this.paramKey = \"engEnergyUsed\";\n            this.outerStrokeColor = \"#fa9200\";\n            this.outerStrokeGradientStopColor = \"#fdd130\";\n            this.innerStrokeColor = \"#fbe2a6\";\n        } else if (this.applicationKeyID == ApplicationKeyID.WATER_KEY_ID) {\n            this.label = \"Water\";\n            this.icon = \"water_drop\";\n            this.paramKey = \"gwFlowTotalizer\";\n            this.outerStrokeColor = \"#4882c2\";\n            this.outerStrokeGradientStopColor = \"#53a9ff\";\n            this.innerStrokeColor = \"#dbe7ff\";\n        }\n\n        this.getTotalConsumption(DateTimeIntervalEnum.CURRENT_DAY)\n            .then(app => {\n                this.todayConsumption = app;\n            })\n\n        this.getTotalConsumption(DateTimeIntervalEnum.CURRENT_MONTH)\n            .then(app => {\n                this.currentMonthConsumption = app;\n                const totalConsumptionValue = this.currentMonthConsumption?.[0]?.['data']?.[0]?.['value'];\n\n                this.totalConsumptionCircleData = {\n                    percent: totalConsumptionValue,\n                    maxPercent: 999999999,\n                    units: this.currentMonthConsumption?.[0]?.unit,\n                    showUnits: true,\n                    radius: 75,\n                    space: 4,\n                    outerStrokeGradient: true,\n                    outerStrokeWidth: 10,\n                    outerStrokeColor: this.outerStrokeColor,\n                    outerStrokeGradientStopColor: this.outerStrokeGradientStopColor,\n                    innerStrokeColor: this.innerStrokeColor,\n                    showBackground: false,\n                    innerStrokeWidth: 5,\n                    showSubtitle: false,\n                    subtitleFormat: false,\n                    startFromZero: false,\n                    animationDuration: 500,\n                    backgroundColor: '#ffffff',\n                }\n            })\n\n        this.getTotalConsumption(DateTimeIntervalEnum.CURRENT_YEAR)\n            .then(app => {\n                this.currentYearConsumption = app;\n            })\n\n        this.getTotalEntitiesConsumption();\n        this.getEntityLevelConsumption();\n        this.getDeviceStatusInfo();\n    }\n\n    async getTotalConsumption(selectedRange) {\n        try {\n            const requestData = new AggregateDataRequest();\n\n            if (selectedRange == DateTimeIntervalEnum.CURRENT_DAY) {\n                requestData.startTime = this.dateService.getStartDateTime(DateTimeIntervalEnum.CURRENT_DAY);\n                requestData.interval = 'day_1';\n            } else if (selectedRange == DateTimeIntervalEnum.CURRENT_MONTH) {\n                requestData.startTime = this.dateService.getStartDateTime(DateTimeIntervalEnum.CURRENT_MONTH);\n                requestData.interval = 'month_1';\n            } else if (selectedRange == DateTimeIntervalEnum.CURRENT_YEAR) {\n                requestData.startTime = this.dateService.getStartDateTime(DateTimeIntervalEnum.CURRENT_YEAR);\n                requestData.interval = 'year_1';\n            }\n\n            requestData.endTime = this.dateService.getEndDateTime(DateTimeIntervalEnum.CURRENT_TIME);\n            requestData.params = [\n                {\n                    name: this.paramKey,\n                    dsAgg: \"sum\",\n                    agg: \"sum\",\n                    source_or_load: \"source\",\n                    sourceLoadType: \"all\"\n                }\n            ];\n            requestData.nullifyParams();\n            requestData.groupAll = true;\n\n            const result = await this.aggregateDataService.getAggregateData(this.orgID, requestData);\n            return result;\n        } catch (error) {\n            console.error(`Error in getTotalConsumption for (${selectedRange})`, error);\n        }\n    }\n\n    async getTotalEntitiesConsumption() {\n        try {\n            let requestData = new AggregateDataRequest();\n\n            requestData.startTime = this.dateService.getStartDateTime(DateTimeIntervalEnum.CURRENT_MONTH);\n            requestData.endTime = this.dateService.getEndDateTime(DateTimeIntervalEnum.CURRENT_TIME);\n            requestData.interval = \"month_1\";\n            requestData.params = [\n                {\n                    name: this.paramKey,\n                    dsAgg: \"sum\",\n                    agg: \"sum\",\n                    source_or_load: \"load\",\n                    sourceLoadType: \"all\"\n                }\n            ];\n            requestData.nullifyParams();\n            requestData.groupAll = true;\n\n            const totalEntitiesConsumData = await this.aggregateDataService.getAggregateData(this.orgID, requestData);\n            const consumptionBreakupValue = totalEntitiesConsumData?.[0]?.['data']?.[0]?.['value'];\n\n            this.consumptionBreakupCircleData = {\n                percent: consumptionBreakupValue,\n                maxPercent: 999999999,\n                units: totalEntitiesConsumData?.[0]?.unit,\n                showUnits: true,\n                radius: 75,\n                space: 4,\n                outerStrokeGradient: true,\n                outerStrokeWidth: 10,\n                outerStrokeColor: this.outerStrokeColor,\n                outerStrokeGradientStopColor: this.outerStrokeGradientStopColor,\n                innerStrokeColor: this.innerStrokeColor,\n                showBackground: false,\n                innerStrokeWidth: 5,\n                showSubtitle: false,\n                subtitleFormat: false,\n                startFromZero: false,\n                animationDuration: 500,\n                backgroundColor: '#ffffff',\n            }\n        } catch (error) {\n            console.error(`Error in getTotalEntitiesConsumption()`, error);\n        }\n    }\n\n    getEntityLevelConsumption() {\n        let requestData = new AggregateDataRequest();\n\n        requestData.startTime = this.dateService.getStartDateTime(DateTimeIntervalEnum.CURRENT_MONTH);\n        requestData.endTime = this.dateService.getEndDateTime(DateTimeIntervalEnum.CURRENT_TIME);\n        requestData.interval = \"month_1\";\n        requestData.params = [\n            {\n                name: this.paramKey,\n                dsAgg: \"sum\",\n                agg: \"sum\",\n                source_or_load: \"load\",\n                sourceLoadType: \"all\"\n            }\n        ];\n        requestData.nullifyParams();\n        requestData.groupAll = false;\n\n        this.entityController.getEntityLevelConsumption(this.orgID, requestData)\n            .subscribe((entityConsumRes: EntityLevelConsumption[]) => {\n                this.entityConsumption = entityConsumRes;\n            },\n                error => {\n                    console.log('error in getEntityLevelConsumption() -', error);\n                });\n    }\n\n    highestConsumptionEntity() {\n        if (this.entityConsumption?.length == 0) {\n            return null;\n        }\n        return this.entityConsumption?.reduce((maxEntity, currentEntity) => {\n            return currentEntity.value > maxEntity.value ? currentEntity : maxEntity;\n        }, this.entityConsumption?.[0]);\n    }\n\n    calculateProgress(entity) {\n        const highestConsumption = this.highestConsumptionEntity();\n        if (!highestConsumption) {\n            return 0;\n        }\n        const progress = (entity.value / highestConsumption.value) * 100;\n        return progress;\n    }\n\n    getDeviceStatusInfo() {\n        this.deviceController.getDeviceStatusInfo(this.orgID)\n            .subscribe((deviceRes: StatusInfo) => {\n                this.deviceInfoM = deviceRes;\n            },\n                error => {\n                    console.log('error in getDeviceStatusInfo() -', error);\n                });\n    }\n\n}","<div class=\"card main-card cardOverwrite h100\">\n    <div class=\"headerContainer\">\n        <div class=\"headerLeftContainer\">\n            <div class=\"pageTitle\">Home</div>\n        </div>\n    </div>\n\n    <div class=\"card-body\">\n        <div class=\"row\">\n            <div class=\"col-sm-6\">\n                <mat-card class=\"cardOverwrite cardBackgroundColor cardHeight\">\n                    <div class=\"row\">\n                        <div class=\"col-sm-12\">\n                            <span class=\"cardTitle\">\n                                Total {{ label }} Consumption\n                            </span>\n                        </div>\n                    </div>\n                    <div class=\"row\">\n                        <div class=\"d-flex align-items-center\">\n                            <div class=\"col-sm-6\">\n                                <span class=\"centerAlign\">\n                                    <circle-progress [options]=\"totalConsumptionCircleData\" [renderOnClick]=\"false\"\n                                        class=\"copy\"></circle-progress>\n                                </span>\n                                <span class=\"centerAlign\">\n                                    This Month\n                                </span>\n                            </div>\n                            <div class=\"col-sm-6 ms-4\">\n                                <div class=\"row\">\n                                    <ng-container *ngTemplateOutlet=\"totalConsumption; context: {\n                                        label: 'Today',\n                                        value: todayConsumption?.[0]?.['data']?.[0]?.['value'],\n                                        unit: todayConsumption?.[0]?.['unit'],\n                                        matCardClass: 'today'\n                                    }\"></ng-container>\n                                </div>\n                                <div class=\"row mt-4\">\n                                    <ng-container *ngTemplateOutlet=\"totalConsumption; context: {\n                                        label: 'This Month',\n                                        value: currentMonthConsumption?.[0]?.['data']?.[0]?.['value'],\n                                        unit: currentMonthConsumption?.[0]?.['unit'],\n                                        matCardClass: 'month'\n                                    }\"></ng-container>\n                                </div>\n                                <div class=\"row mt-4\">\n                                    <ng-container *ngTemplateOutlet=\"totalConsumption; context: {\n                                        label: 'This Year',\n                                        value: currentYearConsumption?.[0]?.['data']?.[0]?.['value'],\n                                        unit: currentYearConsumption?.[0]?.['unit'],\n                                        matCardClass: 'year'\n                                    }\"></ng-container>\n                                </div>\n                            </div>\n                        </div>\n                    </div>\n                </mat-card>\n            </div>\n            <div class=\"col-sm-6\">\n                <mat-card class=\"cardOverwrite cardBackgroundColor cardHeight\">\n                    <div class=\"row\">\n                        <div class=\"col-sm-12\">\n                            <span class=\"cardTitle\">\n                                {{ label }} Consumption Breakup\n                            </span>\n                        </div>\n                    </div>\n                    <div class=\"row\">\n                        <div class=\"d-flex align-items-center\">\n                            <div class=\"col-sm-6\">\n                                <span class=\"centerAlign\">\n                                    <circle-progress [options]=\"consumptionBreakupCircleData\" [renderOnClick]=\"false\"\n                                        class=\"copy\"></circle-progress>\n                                </span>\n                                <span class=\"centerAlign\">\n                                    This Month\n                                </span>\n                            </div>\n                            <div class=\"col-sm-6\">\n                                <div class=\"row\" *ngIf=\"entityConsumption?.[0]?.id\">\n                                    <ng-container *ngTemplateOutlet=\"entityProgress; context: {\n                                        name: entityConsumption[0].name,\n                                        value: entityConsumption[0].value,\n                                        unit: entityConsumption[0].unit,\n                                        entityObj: entityConsumption[0],\n                                        outerProgressBarClass: 'progress1BGColor',\n                                        innerProgressBarClass: 'progress1Color'\n                                    }\"></ng-container>\n                                </div>\n                                <div class=\"row mt-4\" *ngIf=\"entityConsumption?.[1]\">\n                                    <ng-container *ngTemplateOutlet=\"entityProgress; context: {\n                                        name: entityConsumption[1].name,\n                                        value: entityConsumption[1].value,\n                                        unit: entityConsumption[1].unit,\n                                        entityObj: entityConsumption[1],\n                                        outerProgressBarClass: 'progress2BGColor',\n                                        innerProgressBarClass: 'progress2Color'\n                                    }\"></ng-container>\n                                </div>\n                                <div class=\"row mt-4\" *ngIf=\"entityConsumption?.[2]\">\n                                    <ng-container *ngTemplateOutlet=\"entityProgress; context: {\n                                        name: entityConsumption[2].name,\n                                        value: entityConsumption[2].value,\n                                        unit: entityConsumption[2].unit,\n                                        entityObj: entityConsumption[2],\n                                        outerProgressBarClass: 'progress3BGColor',\n                                        innerProgressBarClass: 'progress3Color'\n                                    }\"></ng-container>\n                                </div>\n                                <div class=\"row mt-4\" *ngIf=\"entityConsumption?.[3]\">\n                                    <ng-container *ngTemplateOutlet=\"entityProgress; context: {\n                                        name: entityConsumption[3].name,\n                                        value: entityConsumption[3].value,\n                                        unit: entityConsumption[3].unit,\n                                        entityObj: entityConsumption[3],\n                                        outerProgressBarClass: 'progress4BGColor',\n                                        innerProgressBarClass: 'progress4Color'\n                                    }\"></ng-container>\n                                </div>\n                            </div>\n                        </div>\n                    </div>\n                </mat-card>\n            </div>\n        </div>\n\n        <div class=\"row mt-4\">\n            <div class=\"col-sm-3\">\n                <mat-card class=\"card main-card cardOverwrite card-info\">\n                    <ng-container *ngTemplateOutlet=\"deviceStatus; context: {\n                        label: 'Total devices',\n                        count: deviceInfoM.total\n                    }\"></ng-container>\n                </mat-card>\n            </div>\n            <div class=\"col-sm-3\">\n                <mat-card class=\"card main-card cardOverwrite card-success\">\n                    <ng-container *ngTemplateOutlet=\"deviceStatus; context: {\n                        label: 'Online devices',\n                        count: deviceInfoM.online\n                    }\"></ng-container>\n                </mat-card>\n            </div>\n            <div class=\"col-sm-3\">\n                <mat-card class=\"card main-card cardOverwrite card-warning\">\n                    <ng-container *ngTemplateOutlet=\"deviceStatus; context: {\n                        label: 'Delayed devices',\n                        count: deviceInfoM.delay\n                    }\"></ng-container>\n                </mat-card>\n            </div>\n            <div class=\"col-sm-3\">\n                <mat-card class=\"card main-card cardOverwrite card-danger\">\n                    <ng-container *ngTemplateOutlet=\"deviceStatus; context: {\n                        label: 'Offline devices',\n                        count: deviceInfoM.offline\n                    }\"></ng-container>\n                </mat-card>\n            </div>\n        </div>\n    </div>\n</div>\n\n<ng-template #totalConsumption let-label=\"label\" let-value=\"value\" let-unit=\"unit\" let-matCardClass=\"matCardClass\"\n    let-outerProgressBarClass=\"outerProgressBarClass\" let-innerProgressBarClass=\"innerProgressBarClass\">\n    <div class=\"col-sm-12\">\n        <div class=\"d-flex align-items-center\">\n            <mat-card class=\"card main-card square d-flex justify-content-center me-2\" [class]=\"matCardClass\">\n                <span class=\"material-symbols-outlined\">\n                    {{ icon }}\n                </span>\n            </mat-card>\n            <div class=\"row\">\n                <span>{{ label }}</span><br />\n                <span class=\"text-primary fw-bold\">{{ value ? value : commonConstant.HYPHEN }} <span\n                        class=\"unitSize\">{{ value ? unit : '' }}</span></span>\n            </div>\n        </div>\n    </div>\n</ng-template>\n\n<ng-template #entityProgress let-name=\"name\" let-value=\"value\" let-unit=\"unit\" let-entityObj=\"entityObj\"\n    let-outerProgressBarClass=\"outerProgressBarClass\" let-innerProgressBarClass=\"innerProgressBarClass\">\n    <div class=\"col-sm-12\">\n        <span>\n            {{ name }}\n        </span>\n        <span class=\"float-end text-primary fw-bold\"> {{ value ? value : commonConstant.HYPHEN }}\n            <span class=\"unitSize\"> {{ value ? unit : '' }} </span>\n        </span>\n        <div class=\"progress progressBarRadius\" [class]=\"outerProgressBarClass\">\n            <div class=\"progress-bar progressBarRadius\" [class]=\"innerProgressBarClass\" role=\"progressbar\"\n                [style.width.%]=\"calculateProgress(entityObj)\"></div>\n        </div>\n    </div>\n</ng-template>\n\n<ng-template #deviceStatus let-label=\"label\" let-count=\"count\">\n    <div class=\"row\">\n        <div class=\"col-sm-12\">\n            <span class=\"material-symbols-outlined\">\n                devices\n            </span>\n        </div>\n    </div>\n    <div class=\"row\">\n        <div class=\"col-sm-12 fs-1 fw-bold centerAlign\">\n            {{ count != undefined && count != null ? count : commonConstant.HYPHEN }}\n        </div>\n    </div>\n    <div class=\"row mt-1\">\n        <div class=\"col-sm-12 fs-5 centerAlign\">\n            {{ label }}\n        </div>\n    </div>\n</ng-template>","import { NgModule } from '@angular/core';\nimport { RouterModule, Routes } from '@angular/router';\n\nimport { HomeComponent } from './home.component';\n\nconst routes: Routes = [\n    {\n        path: '',\n        component: HomeComponent\n    }\n];\n\n@NgModule({\n    imports: [RouterModule.forChild(routes)],\n    exports: [RouterModule]\n})\nexport class HomeRoutingModule { }\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\n\nimport { MatCardModule } from '@angular/material/card';\nimport { MatTooltipModule } from '@angular/material/tooltip';\nimport { PerfectScrollbarModule } from 'ngx-perfect-scrollbar';\n\nimport { NgCircleProgressModule } from 'ng-circle-progress';\n\nimport { HomeRoutingModule } from './home-routing.module';\nimport { HomeComponent } from './home.component';\n\n@NgModule({\n    declarations: [\n        HomeComponent\n    ],\n    imports: [\n        CommonModule,\n        HomeRoutingModule,\n        MatCardModule,\n        MatTooltipModule,\n        PerfectScrollbarModule,\n        NgCircleProgressModule.forRoot(),\n    ]\n})\nexport class HomeModule { }\n","import { Inject, Injectable } from '@angular/core';\nimport { HttpClient, HttpHeaders } from '@angular/common/http';\n\nimport { Observable } from 'rxjs';\n\nimport { ShiftM } from '../model/shift.model';\n\n@Injectable({\n    providedIn: 'root'\n})\n\nexport class ShiftController {\n\n    constructor(\n        private http: HttpClient,\n        @Inject('environment') private environment: any\n    ) { }\n\n    getShift(orgID, skipLoader): Observable<ShiftM[]> {\n        let headers = new HttpHeaders().set('skipLoader', skipLoader);\n\n        return this.http.get<ShiftM[]>(`${this.environment.TSC_COMMON_API_URL}organizations/${orgID}/shifts`, { headers: headers });\n    }\n}\n","import { Injectable } from '@angular/core';\n\nimport { Shift, ShiftM } from '../model/shift.model';\n\nimport { ShiftController } from '../controller/shift.controller';\n\n@Injectable({\n    providedIn: 'root'\n})\n\nexport class ShiftService {\n\n    constructor(\n        private shiftController: ShiftController\n    ) { }\n\n    async getShift(orgID, skipLoader): Promise<ShiftM[]> {\n        let shiftM: ShiftM[];\n        try {\n            shiftM = await this.shiftController.getShift(orgID, skipLoader).toPromise();\n\n            if (shiftM) {\n                return shiftM;\n            } else {\n                return [new Shift()];\n            }\n        } catch (error) {\n            console.error('Error -', error);\n            return [new Shift()];\n        }\n    }\n}\n","import { Component, EventEmitter, Input, OnInit, Output, SimpleChanges } from '@angular/core';\nimport { FormControl, Validators } from '@angular/forms';\n\nimport { Shift, ShiftM } from '../../../model/shift.model';\n\nimport { ShiftService } from '../../../service/shift.service';\n\n// tsc-library\nimport { StorageService } from '@library/storage-service';\nimport { COMMON_CONSTANT, FormErrorEnum, MaterialFormFieldAppearance, MatSelectSearchService } from '@library/tsc-common';\n// /tsc-library/\n\n@Component({\n    selector: 'lib-shift',\n    templateUrl: './shift.component.html',\n    styles: [\n    ]\n})\nexport class ShiftComponent implements OnInit {\n\n    @Output()\n    emitFilter = new EventEmitter();\n\n    COMMON_CONSTANT = COMMON_CONSTANT;\n    MaterialFormFieldAppearance = MaterialFormFieldAppearance;\n\n    FormErrorEnum = FormErrorEnum;\n\n    orgID: any;\n\n    shiftM = [new Shift()];\n\n    allShiftID: any[] = [];\n    totalShiftCount: number = 0;\n\n    multiSelectedShiftFC: FormControl = new FormControl([], [Validators.required]);\n\n    shiftSearchUtil: MatSelectSearchService = new MatSelectSearchService(['name']);\n\n    constructor(\n        private storageService: StorageService,\n        private shiftService: ShiftService\n    ) { }\n\n    ngOnInit(): void {\n        this.orgID = this.storageService.getStorage('currentOrgID');\n\n        this.getShift();\n    }\n\n    async getShift() {\n        this.shiftM = <ShiftM[]>await this.shiftService.getShift(this.orgID, 'NO');\n\n        this.shiftSearchUtil.entityArr = this.shiftM;\n        this.shiftSearchUtil.createSubscription();\n\n        this.totalShiftCount = this.shiftM.length;\n        this.shiftM.forEach(shift => this.allShiftID.push(shift['id']));\n        this.emitFilter.emit();\n    }\n\n    selectAllShifts() {\n        if (!this.multiSelectedShiftFC.value.includes(-1)) {\n            this.multiSelectedShiftFC.reset([]);\n            return;\n        }\n        this.multiSelectedShiftFC.setValue([-1, ...this.allShiftID]);\n        this.emitFilter.emit();\n    }\n\n    selectedShift() {\n        const selected = this.multiSelectedShiftFC.value;\n\n        if (selected.includes(-1)) {\n            selected.shift();\n            this.multiSelectedShiftFC.patchValue(selected);\n        } else if (this.multiSelectedShiftFC.value.length == this.totalShiftCount) {\n            this.allShiftID.splice(0, 0, -1);\n            this.multiSelectedShiftFC.patchValue(this.allShiftID);\n        } else {\n            const filteredSelected = selected.filter(s => s != -1);\n            this.multiSelectedShiftFC.patchValue(filteredSelected);\n        }\n        this.emitFilter.emit();\n    }\n\n}\n","<div class=\"row\">\n    <mat-form-field class=\"matFieldWidth100\" [appearance]=\"MaterialFormFieldAppearance.FORM_FIELD_APPEARANCE\">\n        <mat-label>Select shift</mat-label>\n\n        <mat-select [formControl]=\"multiSelectedShiftFC\" multiple required>\n            <ng-container *ngIf=\"shiftM && shiftM.length > 0 && shiftM[0]['id']; else noDataOption\">\n                <mat-option>\n                    <ngx-mat-select-search [formControl]=\"shiftSearchUtil.filterFC\" placeholderLabel=\"Search by name\"\n                        noEntriesFoundLabel=\"No matching name found.\">\n                    </ngx-mat-select-search>\n                </mat-option>\n                <mat-option [value]=\"-1\" (click)=\"selectAllShifts()\">\n                    Select all\n                </mat-option>\n                <mat-option *ngFor=\"let shift of shiftSearchUtil.filteredEntities | async\" [value]=\"shift.id\"\n                    (click)=\"selectedShift()\">\n                    {{ shift.name }}\n                </mat-option>\n            </ng-container>\n            <ng-template #noDataOption>\n                <mat-option disabled>\n                    {{ COMMON_CONSTANT.NO_DATA_FOUND }}\n                </mat-option>\n            </ng-template>\n        </mat-select>\n\n        <mat-error *ngIf=\"multiSelectedShiftFC.hasError('required')\">\n            {{ FormErrorEnum.REQUIRED }}\n        </mat-error>\n    </mat-form-field>\n</div>","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\n\nimport { MatInputModule } from '@angular/material/input';\nimport { MatSelectModule } from '@angular/material/select';\nimport { MatFormFieldModule } from '@angular/material/form-field';\nimport { NgxMatSelectSearchModule } from 'ngx-mat-select-search';\n\nimport { ShiftComponent } from './shift.component';\n\n@NgModule({\n    declarations: [\n        ShiftComponent\n    ],\n    imports: [\n        CommonModule,\n        FormsModule,\n        ReactiveFormsModule,\n        MatInputModule,\n        MatSelectModule,\n        MatFormFieldModule,\n        NgxMatSelectSearchModule\n    ],\n    exports: [\n        ShiftComponent\n    ]\n})\n\nexport class ShiftModule { }\n","import { Component, OnInit } from '@angular/core';\nimport { ActivatedRoute } from '@angular/router';\nimport { MatDialog } from '@angular/material/dialog';\n\nimport * as moment from 'moment';\n\nimport { EntityWithChildrenM, EntityWithChildren, Entity } from '../../../model/entity.model';\n\nimport { EntityDialogComponent } from '../../_shared/dialog/entity/entity.component';\n\nimport { EntityController } from '../../../controller/entity.controller';\nimport { AggregateDataController } from '../../../controller/aggregate-data.controller';\nimport { EntityService } from '../../../service/entity.service';\n\n// tsc-library\nimport { StorageService } from '@library/storage-service';\nimport { COMMON_CONSTANT, FREQUENCY_CONSTANT } from '@library/tsc-common';\nimport { DateTypeEnum, FrequencyEnum } from '@library/date';\nimport { ChartTitle, ChartViewStateEnum, StackBarChart } from '@library/echart';\n// /tsc-library/\n\n@Component({\n    selector: 'app-consumption',\n    templateUrl: './consumption.component.html',\n    styleUrls: ['./consumption.component.scss']\n})\nexport class ConsumptionComponent implements OnInit {\n\n    commonConstant = COMMON_CONSTANT;\n    frequencyConstant = FREQUENCY_CONSTANT;\n    frequencyEnum = FrequencyEnum;\n\n    dateType: any;\n    orgID: any;\n    layoutID: any;\n    entityID: any;\n    entityName: string;\n    applicationKeyID: any;\n    timezone: any;\n    frequency: any[] = [];\n    defaultFrequency: string;\n    startDate: any;\n    endDate: any;\n    interval: any;\n\n    entityM = new Entity();\n    consumptionEntityM = [new EntityWithChildren()];\n\n    viewStateFlag: string = ChartViewStateEnum.LOADING;\n    chartTitle = new ChartTitle();\n    chartData = new StackBarChart();\n\n    constructor(\n        private storageService: StorageService,\n        private activatedRoute: ActivatedRoute,\n        private entityService: EntityService,\n        private entityController: EntityController,\n        private aggregateDataController: AggregateDataController,\n        private dialog: MatDialog,\n    ) { }\n\n    ngOnInit(): void {\n        this.orgID = this.storageService.getStorage('currentOrgID');\n        this.layoutID = this.storageService.getStorage('layoutID');\n        this.applicationKeyID = this.storageService.getStorage('applicationKeyID');\n        this.timezone = this.storageService.getStorage('timezone');\n\n        this.activatedRoute.queryParams\n            .subscribe(queryParam => {\n                this.entityID = queryParam.entityID;\n                if (this.entityID) {\n                    this.getEntityByID(this.entityID);\n                }\n            });\n\n        this.frequency = this.frequencyConstant.filter(frequency => frequency.keyID != 'CUSTOM');\n        this.defaultFrequency = this.frequencyEnum.MONTHLY;\n        this.dateType = DateTypeEnum.EXCLUSIVE;\n\n        this.getConsumptionEntities();\n    }\n\n    async getEntityByID(entityID) {\n        this.entityM = await this.entityService.getEntityByID(this.orgID, this.layoutID, entityID);\n        this.entityName = this.entityM.name;\n    }\n\n    getConsumptionEntities() {\n        this.entityController.getConsumptionEntities(this.orgID)\n            .subscribe((res: EntityWithChildrenM) => {\n                this.consumptionEntityM = [res];\n            },\n                error => {\n                    console.log('error in getConsumptionEntities() - ', error);\n                });\n    }\n\n    dateFilterEmitted(data: any) {\n        this.startDate = data.startDate;\n        this.endDate = data.endDate;\n        let selectedFrequency = data.frequency;\n\n        if (selectedFrequency == this.frequencyEnum.DAILY) {\n            this.interval = \"hour_1\";\n        } else if (selectedFrequency == this.frequencyEnum.MONTHLY) {\n            this.interval = \"day_1\";\n        } else if (selectedFrequency == this.frequencyEnum.YEARLY) {\n            this.interval = \"month_1\";\n        }\n\n        this.getCumulativeConsumption();\n    }\n\n    getCumulativeConsumption() {\n\n        this.viewStateFlag = ChartViewStateEnum.LOADING;\n\n        const requestData = this.createDataRequest();\n\n        this.aggregateDataController.getCumulativeConsumption(this.orgID, requestData)\n            .subscribe((consumptionRes: any) => {\n\n                if (consumptionRes?.records?.length > 0) {\n\n                    this.chartData.metaData = consumptionRes.records.map(record => ({\n                        xAxisSeries: moment(record.date).format(\"YYYY-MM-DD HH:mm:ss\"),\n                        totalData: {\n                            value: record.totalConsumption.value,\n                            unitCode: record.totalConsumption.unit\n                        },\n                        barData: record.paramData.map(param => ({\n                            name: param.label,\n                            value: param.value,\n                            unit: {\n                                code: param.unit\n                            }\n                        }))\n                    }));\n\n                    this.chartData.totalDataLabel = 'Total consumption';\n                    this.chartData.showDataView = true;\n                    this.chartData.showMagicType = true;\n                    this.chartData.showRestore = true;\n                    this.chartData.showDownloadImage = true;\n\n                    this.viewStateFlag = ChartViewStateEnum.HAS_DATA;\n\n                } else {\n                    this.viewStateFlag = ChartViewStateEnum.NO_DATA;\n                }\n            },\n                error => {\n                    this.viewStateFlag = ChartViewStateEnum.NO_DATA;\n\n                    console.log('error in getCumulativeConsumption() -', error);\n                });\n    }\n\n    openEntityDialog() {\n        const dialog = this.dialog.open(EntityDialogComponent,\n            {\n                data: {\n                    entityID: this.entityID,\n                    entityObject: this.consumptionEntityM\n                },\n                width: '50vw',\n                height: '100%',\n                position: { right: '-2px', top: '0px' },\n            });\n        dialog.afterClosed().subscribe((dialogRes) => {\n            if (dialogRes.entityID) {\n                this.entityID = dialogRes.entityID;\n\n                this.getEntityByID(this.entityID);\n                this.getCumulativeConsumption();\n            }\n        })\n    }\n\n    createDataRequest() {\n\n        let requestBody = {};\n\n        requestBody['startTime'] = this.startDate;\n        requestBody['endTime'] = this.endDate;\n        requestBody['interval'] = this.interval;\n        requestBody['entityID'] = this.entityID ? this.entityID : null;\n\n        return requestBody;\n    }\n\n}\n","<div class=\"card main-card cardOverwrite h100\">\n    <div class=\"headerContainer\">\n        <div class=\"headerLeftContainer\">\n            <div class=\"pageTitle\">Consumption Dashboard{{ entityName ? ' - ' + entityName : '' }}</div>\n        </div>\n    </div>\n\n    <div class=\"card-body\">\n        <div class=\"row\">\n            <div class=\"col-sm-8\">\n                <lib-date-filter-two [frequencyInp]=\"frequency\" [defaultFrequencyInp]=\"defaultFrequency\"\n                    [dateTypeInp]=\"dateType\" [showDefaultDurationInp]=\"true\" [timezoneInp]=\"timezone\"\n                    (dateFilterEmitter)=\"dateFilterEmitted($event)\"></lib-date-filter-two>\n            </div>\n            <div class=\"col-sm-4\">\n                <button class=\"btn btn-link selectEntityText mt-2 float-end\" type=\"button\" (click)=\"openEntityDialog()\">\n                    Change entity\n                </button>\n            </div>\n        </div>\n\n        <div class=\"row mt-3\">\n            <div class=\"col-sm-12\">\n                <mat-card class=\"cardOverwrite cardBackgroundColor\">\n                    <div class=\"row\">\n                        <div class=\"col-sm-12\">\n                            <lib-stack-bar [chartTitleInp]=\"chartTitle\" [viewStateInp]=\"viewStateFlag\"\n                                [dataInp]=\"chartData\"></lib-stack-bar>\n                        </div>\n                    </div>\n                </mat-card>\n            </div>\n        </div>\n    </div>\n</div>","import { NgModule } from '@angular/core';\nimport { RouterModule, Routes } from '@angular/router';\n\nimport { ConsumptionComponent } from './consumption.component';\n\nconst routes: Routes = [\n    {\n        path: '',\n        component: ConsumptionComponent\n    }\n];\n\n@NgModule({\n    imports: [RouterModule.forChild(routes)],\n    exports: [RouterModule]\n})\nexport class ConsumptionRoutingModule { }\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { MatCardModule } from '@angular/material/card';\n\nimport { EntityDialogModule } from '../../_shared/dialog/entity/entity.module';\n\nimport { ConsumptionRoutingModule } from './consumption-routing.module';\nimport { ConsumptionComponent } from './consumption.component';\n\n// tsc-library\nimport { DateFilterTwoModule } from '@library/date';\nimport { StackBarModule } from '@library/echart';\n// /tsc-library/\n\n\n@NgModule({\n    declarations: [\n        ConsumptionComponent\n    ],\n    imports: [\n        CommonModule,\n        ConsumptionRoutingModule,\n        EntityDialogModule,\n        DateFilterTwoModule,\n        StackBarModule,\n        MatCardModule\n    ]\n})\nexport class ConsumptionModule { }\n","import { Component, OnInit } from '@angular/core';\n\nimport { AggregateDataRequest } from '../../../model/aggregate-data.model';\n\nimport { AggregateDataService } from '../../../service/aggregate-data.service';\n\n// tsc-library\nimport { StorageService } from '@library/storage-service';\nimport { COMMON_CONSTANT, FREQUENCY_CONSTANT, TSCCommonService } from '@library/tsc-common';\nimport { DateTypeEnum, FrequencyEnum } from '@library/date';\nimport { ApplicationKeyID } from '@library/application-service';\nimport { ChartTitleM, ChartViewStateEnum, DoughnutChart } from '@library/echart';\n// /tsc-library/\n\n@Component({\n    selector: 'lib-consumption-breakup',\n    templateUrl: './consumption-breakup.component.html',\n    styles: [\n    ]\n})\nexport class ConsumptionBreakupDashboardComponent implements OnInit {\n\n    commonConstant = COMMON_CONSTANT;\n    frequencyConstant = FREQUENCY_CONSTANT;\n    frequencyEnum = FrequencyEnum;\n\n    dateType: any;\n    orgID: any;\n    applicationKeyID: any;\n    timezone: any;\n    paramMetric: string;\n    frequency: any[] = [];\n    defaultFrequency: string;\n    startDate: any;\n    endDate: any;\n    selectedFrequency: any;\n    interval: any;\n    orgSourceRes: any;\n    orgConsumedRes: any;\n    showLoader: boolean = true;\n\n    viewStateFlagForSource: string = ChartViewStateEnum.LOADING;\n    viewStateFlagForLoad: string = ChartViewStateEnum.LOADING;\n    chartDataForSource = new DoughnutChart();\n    chartDataForLoad = new DoughnutChart();\n\n    chartTitleForSource: ChartTitleM = {\n        name: 'Sourced',\n        color: 'grey',\n    };\n\n    chartTitleForLoad: ChartTitleM = {\n        name: 'Consumed',\n        color: 'grey',\n    };\n\n    constructor(\n        private storageService: StorageService,\n        private aggregateDataService: AggregateDataService,\n        public tscCommonService: TSCCommonService\n    ) { }\n\n    ngOnInit(): void {\n        this.orgID = this.storageService.getStorage('currentOrgID');\n        this.applicationKeyID = this.storageService.getStorage('applicationKeyID');\n        this.timezone = this.storageService.getStorage('timezone');\n\n        if (this.applicationKeyID == ApplicationKeyID.ENERGY_KEY_ID) {\n            this.paramMetric = \"engEnergyUsed\";\n        } else if (this.applicationKeyID == ApplicationKeyID.WATER_KEY_ID) {\n            this.paramMetric = \"gwFlowTotalizer\";\n        }\n\n        this.frequency = this.frequencyConstant.filter(frequency => frequency.keyID != 'CUSTOM');\n        this.defaultFrequency = this.frequencyEnum.MONTHLY;\n        this.dateType = DateTypeEnum.EXCLUSIVE;\n    }\n\n    dateFilterEmitted(data: any) {\n        this.startDate = data.startDate;\n        this.endDate = data.endDate;\n        let selectedFrequency = data.frequency;\n\n        if (selectedFrequency == this.frequencyEnum.DAILY) {\n            this.interval = \"day_1\";\n        } else if (selectedFrequency == this.frequencyEnum.MONTHLY) {\n            this.interval = \"month_1\";\n        } else if (selectedFrequency == this.frequencyEnum.YEARLY) {\n            this.interval = \"year_1\";\n        }\n\n        this.getOrgLevelSourceConsum(\"source\").then(app => {\n            this.orgSourceRes = app;\n        })\n\n        this.getOrgLevelSourceConsum(\"load\").then(app => {\n            this.orgConsumedRes = app;\n        })\n\n        this.getEntiyLevelConsumption();\n    }\n\n    async getOrgLevelSourceConsum(category: string) {\n        try {\n            const requestData = this.createDataRequest(category, true);\n\n            const result = await this.aggregateDataService.getAggregateData(this.orgID, requestData);\n            return result;\n\n        } catch (error) {\n            console.error(`Error in getOrgLevelSourceConsum(${category})`, error);\n        } finally {\n            this.showLoader = false;\n        }\n    }\n\n    async getEntiyLevelConsumption() {\n        await this.getEntityLevelSourceConsum(\"source\");\n        await this.getEntityLevelSourceConsum(\"load\");\n    }\n\n    async getEntityLevelSourceConsum(category: string) {\n\n        if (category == 'source') {\n            this.viewStateFlagForSource = ChartViewStateEnum.LOADING;\n        } else {\n            this.viewStateFlagForLoad = ChartViewStateEnum.LOADING;\n        }\n\n        try {\n            const requestData = this.createDataRequest(category, false);\n            const result = await this.aggregateDataService.getAggregateData(this.orgID, requestData);\n\n            if (result?.length > 0) {\n                if (result?.every(item => item.data.length == 0)) {\n                    if (category == 'source') {\n                        this.viewStateFlagForSource = ChartViewStateEnum.NO_DATA;\n                    } else {\n                        this.viewStateFlagForLoad = ChartViewStateEnum.NO_DATA;\n                    }\n                } else {\n                    let chartData = new DoughnutChart();\n\n                    chartData = {\n                        showDataView: true,\n                        showRestore: true,\n                        showDownloadImage: true,\n                        metaData: result.map(item => ({\n                            name: item.sourceLoadType,\n                            value: item.data?.[0]?.value,\n                            unit: {\n                                code: item.unit,\n                            },\n                        })),\n                    };\n\n                    if (category == 'source') {\n                        this.chartDataForSource = chartData;\n                        this.viewStateFlagForSource = ChartViewStateEnum.HAS_DATA;\n                    } else {\n                        this.chartDataForLoad = chartData;\n                        this.viewStateFlagForLoad = ChartViewStateEnum.HAS_DATA;\n                    }\n                }\n\n            } else {\n                if (category == 'source') {\n                    this.viewStateFlagForSource = ChartViewStateEnum.NO_DATA;\n                } else {\n                    this.viewStateFlagForLoad = ChartViewStateEnum.NO_DATA;\n                }\n            }\n\n        } catch (error) {\n            if (category == 'source') {\n                this.viewStateFlagForSource = ChartViewStateEnum.NO_DATA;\n            } else {\n                this.viewStateFlagForLoad = ChartViewStateEnum.NO_DATA;\n            }\n\n            console.error(`Error in getEntityLevelSourceConsum(${category})`, error);\n        }\n    }\n\n    createDataRequest(category: string, groupAll: boolean) {\n\n        const requestData = new AggregateDataRequest();\n\n        requestData.startTime = this.startDate;\n        requestData.endTime = this.endDate;\n        requestData.interval = this.interval;\n        requestData.params = [\n            {\n                name: this.paramMetric,\n                dsAgg: \"sum\",\n                agg: \"sum\",\n                source_or_load: category,\n                sourceLoadType: \"all\"\n            }\n        ];\n        requestData.nullifyParams();\n        requestData.groupAll = groupAll;\n\n        return requestData;\n    }\n\n}\n","<div class=\"card main-card cardOverwrite h100\">\n    <div class=\"headerContainer\">\n        <div class=\"headerLeftContainer\">\n            <div class=\"pageTitle\">Consumption Breakup</div>\n        </div>\n    </div>\n\n    <div class=\"card-body\">\n        <div class=\"row\">\n            <div class=\"col-sm-12\">\n                <lib-date-filter-two [frequencyInp]=\"frequency\" [defaultFrequencyInp]=\"defaultFrequency\"\n                    [dateTypeInp]=\"dateType\" [showDefaultDurationInp]=\"true\" [timezoneInp]=\"timezone\"\n                    (dateFilterEmitter)=\"dateFilterEmitted($event)\"></lib-date-filter-two>\n            </div>\n        </div>\n\n        <div class=\"row mt-3\">\n            <div class=\"col-sm-6\">\n                <mat-card class=\"cardOverwrite cardBackgroundColor\">\n                    <ng-container *ngTemplateOutlet=\"sourceConsumTemplate; context: {\n                        value: orgSourceRes?.[0]?.['data']?.[0]?.['value'],\n                        unit: orgSourceRes?.[0]?.['unit'],\n                        label: 'Sourced',\n                        loader: showLoader\n                        }\"></ng-container>\n                </mat-card>\n            </div>\n            <div class=\"col-sm-6\">\n                <mat-card class=\"cardOverwrite cardBackgroundColor\">\n                    <ng-container *ngTemplateOutlet=\"sourceConsumTemplate; context: {\n                        value: orgConsumedRes?.[0]?.['data']?.[0]?.['value'],\n                        unit: orgConsumedRes?.[0]?.['unit'],\n                        label: 'Consumed',\n                        loader: showLoader\n                        }\"></ng-container>\n                </mat-card>\n            </div>\n        </div>\n\n        <div class=\"row mt-3\">\n            <div class=\"col-sm-6\">\n                <mat-card class=\"cardOverwrite cardBackgroundColor\">\n                    <div class=\"row\">\n                        <div class=\"col-sm-12\">\n                            <lib-doughnut [viewStateInp]=\"viewStateFlagForSource\" [chartTitleInp]=\"chartTitleForSource\" [dataInp]=\"chartDataForSource\"></lib-doughnut>\n                        </div>\n                    </div>\n                </mat-card>\n            </div>\n            <div class=\"col-sm-6\">\n                <mat-card class=\"cardOverwrite cardBackgroundColor\">\n                    <div class=\"row\">\n                        <div class=\"col-sm-12\">\n                            <lib-doughnut [viewStateInp]=\"viewStateFlagForLoad\" [chartTitleInp]=\"chartTitleForLoad\" [dataInp]=\"chartDataForLoad\"></lib-doughnut>\n                        </div>\n                    </div>\n                </mat-card>\n            </div>\n        </div>\n    </div>\n</div>\n\n<ng-template #sourceConsumTemplate let-label=\"label\" let-value=\"value\" let-unit=\"unit\" let-loader=\"loader\">\n    <ng-container *ngIf=\"loader; else dataTemplate\">\n        <lib-skeleton-loader [count]=\"1\" [appearance]=\"''\"\n            [theme]=\"{ 'border-radius': '16px', height: '40px', 'background-color': 'rgb(230 232 235)' }\"></lib-skeleton-loader>\n    </ng-container>\n\n    <ng-template #dataTemplate>\n        <div class=\"row\">\n            <div class=\"col-sm-12\">\n                <span class=\"fs-2 fw-bold text-primary\">{{ value ? tscCommonService.formatLargeNumber(value, 'false', 1)\n                    : commonConstant.HYPHEN\n                    }}</span>\n                <span class=\"text-secondary fw-bold\"> {{ value ? unit : '' }} </span>\n            </div>\n        </div>\n        <div class=\"row\">\n            <div class=\"col-sm-12 cardTitle\">\n                {{ label }}\n            </div>\n        </div>\n    </ng-template>\n</ng-template>","import { NgModule } from '@angular/core';\nimport { RouterModule, Routes } from '@angular/router';\n\nimport { ConsumptionBreakupDashboardComponent } from './consumption-breakup.component';\n\nconst routes: Routes = [\n    {\n        path: '',\n        component: ConsumptionBreakupDashboardComponent\n    }\n];\n\n@NgModule({\n    imports: [RouterModule.forChild(routes)],\n    exports: [RouterModule]\n})\nexport class ConsumptionBreakupDashboardRoutingModule { }\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { MatCardModule } from '@angular/material/card';\n\nimport { ConsumptionBreakupDashboardRoutingModule } from './consumption-breakup-routing.module';\nimport { ConsumptionBreakupDashboardComponent } from './consumption-breakup.component';\n\n// tsc-library\nimport { SkeletonModule } from '@library/tsc-common';\nimport { DateFilterTwoModule } from '@library/date';\nimport { DoughnutModule } from '@library/echart';\n// /tsc-library/\n\n\n@NgModule({\n    declarations: [\n        ConsumptionBreakupDashboardComponent\n    ],\n    imports: [\n        CommonModule,\n        ConsumptionBreakupDashboardRoutingModule,\n        DateFilterTwoModule,\n        SkeletonModule,\n        DoughnutModule,\n        MatCardModule\n    ]\n})\nexport class ConsumptionBreakupDashboardModule { }\n","import { Injectable } from '@angular/core';\nimport { MatDialog } from '@angular/material/dialog';\n\nimport { TrendComponent } from '../component/_shared/dialog/trend/trend.component';\n\n@Injectable({\n    providedIn: 'root'\n})\n\nexport class TrendService {\n\n    constructor(\n        private dialog: MatDialog,\n    ) { }\n\n    openDialog(trendData) {\n        let dialogRef;\n        dialogRef = this.dialog.open(TrendComponent, {\n            data: {\n                trendData: trendData\n            },\n            minWidth: '620px',\n            maxWidth: '620px'\n        });\n    }\n}\n","import { Inject, Injectable } from '@angular/core';\nimport { HttpClient, HttpHeaders } from '@angular/common/http';\n\nimport { Observable } from 'rxjs/internal/Observable';\n\nimport { DeviceRecentDataM, OrgRecentDataM } from '../model/recent-data.model';\n\n@Injectable({\n    providedIn: 'root'\n})\nexport class RecentDataController {\n\n    constructor(\n        private http: HttpClient,\n        @Inject('environment') private environment: any\n    ) { }\n\n    getRecentDataWithParam(orgID, requestBody) {\n        let headers = new HttpHeaders().set('skipLoader', 'YES');\n\n        return this.http.post(`${this.environment.TSC_COMMON_API_URL}organizations/${orgID}/data/recent`, requestBody, { headers: headers });\n    }\n\n    getOrgRecentData(orgID, requestBody): Observable<OrgRecentDataM[]> {\n        let headers = new HttpHeaders().set('skipLoader', 'YES');\n\n        return this.http.post<OrgRecentDataM[]>(`${this.environment.TSC_COMMON_API_URL}organizations/${orgID}/layouts/recent-data`, requestBody, { headers: headers });\n    }\n\n    getDeviceRecentData(orgID, requestBody): Observable<DeviceRecentDataM[]> {\n        let headers = new HttpHeaders().set('skipLoader', 'YES');\n\n        return this.http.post<DeviceRecentDataM[]>(`${this.environment.TSC_COMMON_API_URL}organizations/${orgID}/devices/data/recent`, requestBody, { headers: headers });\n    }\n\n}\n","import { Injectable } from '@angular/core';\n\nimport { DeviceRecentData, DeviceRecentDataM, OrgRecentData, OrgRecentDataM } from '../model/recent-data.model';\n\nimport { RecentDataController } from '../controller/recent-data.controller';\n\n@Injectable({\n    providedIn: 'root'\n})\n\nexport class RecentDataService {\n\n    constructor(\n        private recentDataController: RecentDataController\n    ) { }\n\n    async getRecentDataWithParam(orgID, requestBody) {\n        let recentDataWithParam;\n        try {\n            recentDataWithParam = await this.recentDataController.getRecentDataWithParam(orgID, requestBody).toPromise();\n\n            if (recentDataWithParam) {\n                return recentDataWithParam;\n            }\n        } catch (error) {\n            console.error('Error -', error);\n            throw error;\n        }\n    }\n\n    async getOrgRecentData(orgID, requestBody): Promise<OrgRecentDataM[]> {\n        let orgRes;\n        try {\n            orgRes = await this.recentDataController.getOrgRecentData(orgID, requestBody).toPromise();\n\n            if (orgRes) {\n                return orgRes;\n            } else {\n                return [new OrgRecentData()];\n            }\n        } catch (error) {\n            console.error('Error -', error);\n            throw error;\n        }\n    }\n\n    async getDeviceRecentData(orgID, requestBody): Promise<DeviceRecentDataM[]> {\n        let deviceRes;\n        try {\n            deviceRes = await this.recentDataController.getDeviceRecentData(orgID, requestBody).toPromise();\n\n            if (deviceRes) {\n                return deviceRes;\n            } else {\n                return [new DeviceRecentData()];\n            }\n        } catch (error) {\n            console.error('Error -', error);\n            throw error;\n        }\n    }\n\n}","import { Component, ElementRef, OnInit, ViewChild } from '@angular/core';\nimport { FormControl, Validators } from '@angular/forms';\n\nimport { ParameterEntity, EntityType, EntityTypeM } from '../../../model/entity.model';\nimport { OrgRecentData, OrgRecentDataM, RecentDataRequestWithoutParam } from '../../../model/recent-data.model';\n\nimport { EntityService } from '../../../service/entity.service';\nimport { RecentDataService } from '../../../service/recent-data.service';\nimport { TrendService } from '../../../service/trend.service';\n\n// tsc-library\nimport { COMMON_CONSTANT, FormErrorEnum, MatSelectSearchService, MaterialFormFieldAppearance, SearchBarTwoComponent } from '@library/tsc-common';\nimport { StorageService } from '@library/storage-service';\nimport { DateService } from '@library/date';\n// /tsc-library/\n\n@Component({\n    selector: 'lib-entity',\n    templateUrl: './entity.component.html',\n    styleUrls: ['./entity.component.scss']\n})\nexport class EntityDashboardComponent implements OnInit {\n\n    commonConstant = COMMON_CONSTANT;\n    materialFormFieldAppearance = MaterialFormFieldAppearance;\n\n    FormErrorEnum = FormErrorEnum;\n\n    orgID: any;\n    layoutID: any;\n    timezone: any;\n    facilityName: string;\n    isAccordionOpen: boolean = true;\n\n    //loader variable declaration\n    entityTypeLoader: boolean = true;\n    entityDeviceLoader: boolean = false;\n    realTimeDeviceDataLoader: boolean = false;\n\n    entityTypeM = [new EntityType()];\n    entityDeviceM = new ParameterEntity();\n    filteredEntityDeviceM: any[] = [];\n    orgRecentDataM = [new OrgRecentData()];\n\n    entityTypeFC: FormControl = new FormControl('', Validators.required);\n    entityFC: FormControl = new FormControl('', Validators.required);\n\n    entityTypeSearchUtil: MatSelectSearchService = new MatSelectSearchService(['type']);\n\n    @ViewChild('searchBar') searchBar: SearchBarTwoComponent;\n    @ViewChild('scrollContainer') scrollContainer: ElementRef;\n\n    constructor(\n        private storageService: StorageService,\n        private entityService: EntityService,\n        private recentDataService: RecentDataService,\n        public dateService: DateService,\n        private trendService: TrendService\n    ) { }\n\n    ngOnInit(): void {\n        this.orgID = this.storageService.getStorage('currentOrgID');\n        this.layoutID = this.storageService.getStorage('layoutID');\n        this.timezone = this.storageService.getStorage('timezone');\n\n        this.getEntityTypeByLayoutID();\n    }\n\n    async getEntityTypeByLayoutID() {\n        try {\n            this.entityTypeM = <EntityTypeM[]>await this.entityService.getEntityTypeByLayoutID(this.orgID, 'YES');\n\n            this.entityTypeSearchUtil.entityArr = this.entityTypeM;\n            this.entityTypeSearchUtil.createSubscription();\n\n            if (this.entityTypeM && this.entityTypeM.length > 0) {\n                const defaultEntityType = this.entityTypeM[0].type;\n\n                if (defaultEntityType) {\n                    this.entityTypeFC.patchValue(defaultEntityType);\n                    this.getEntitiesWithDevicesByLayoutID(this.entityTypeFC.value);\n                }\n            }\n        } catch (error) {\n            console.error(\"Error in getEntityTypeByLayoutID()\", error);\n        } finally {\n            this.entityTypeLoader = false;\n        }\n    }\n\n    entityTypeChange(selectedType) {\n        this.entityFC.setValue('');\n        this.entityTypeFC.patchValue(selectedType);\n\n        this.orgRecentDataM = [new OrgRecentData()];\n        this.getEntitiesWithDevicesByLayoutID(selectedType);\n    }\n\n    async getEntitiesWithDevicesByLayoutID(entityType) {\n        try {\n            this.entityDeviceLoader = true;\n\n            let requestBody = {\n                'entityType': [entityType]\n            };\n\n            this.entityDeviceM = await this.entityService.getEntitiesWithDevicesByLayoutID(this.orgID, this.layoutID, requestBody, 'YES');\n            this.filteredEntityDeviceM = [this.entityDeviceM];\n\n        } catch (error) {\n            console.error(\"Error in getEntitiesWithDevicesByLayoutID()\", error);\n        } finally {\n            this.entityDeviceLoader = false;\n        }\n    }\n\n    searchFn(value: string) {\n        const searchTerm = value.trim().toLowerCase();\n\n        if (searchTerm.length > 0) {\n            this.filteredEntityDeviceM = this.searchEntities([this.entityDeviceM], searchTerm);\n        } else {\n            this.searchBar.searchClear();\n            this.filteredEntityDeviceM = [this.entityDeviceM];\n        }\n    }\n\n    searchEntities(entities: any[], searchTerm: string): any[] {\n        let results: any[] = [];\n\n        entities.forEach(entity => {\n            if (entity.name.toLowerCase().includes(searchTerm)) {\n                results.push(entity);\n            } else if (entity.children && entity.children.length > 0) {\n                const matchingChildren = this.searchEntities(entity.children, searchTerm);\n                if (matchingChildren.length > 0) {\n                    const parentCopy = Object.assign({}, entity);\n                    parentCopy.children = matchingChildren;\n                    results.push(parentCopy);\n                }\n            }\n        });\n\n        return results;\n    }\n\n    openAccordion() {\n        this.isAccordionOpen = true;\n    }\n\n    closeAccordion() {\n        this.isAccordionOpen = false;\n    }\n\n    isDeviceAttached(entity: any): boolean {\n        return (entity.type == 'FACILITY' || entity.type == 'ENTITY') && entity.children && entity.children.some(child => child.type == 'DEVICE');\n    }\n\n    onEntityDeviceSelection() {\n        const selectedValue = this.entityFC.value;\n        this.realTimeDeviceDataLoader = true;\n        this.getOrgRecentData(selectedValue);\n    }\n\n    getTooltipLabel(entity: any): string {\n        if (entity.type == 'FACILITY') {\n            return 'Facility';\n        } else if (entity.type == 'ENTITY') {\n            return 'Entity';\n        } else if (entity.type == 'DEVICE') {\n            return 'Device';\n        }\n    }\n\n    async getOrgRecentData(selectedValue) {\n        try {\n            let requestBody = new RecentDataRequestWithoutParam();\n\n            requestBody.entityID = selectedValue;\n            requestBody.timezone = this.timezone;\n            requestBody.backscan = 1;\n\n            this.orgRecentDataM = <OrgRecentDataM[]>await this.recentDataService.getOrgRecentData(this.orgID, requestBody);\n        } catch (error) {\n            console.error(\"Error in getOrgRecentData()\", error);\n        } finally {\n            this.realTimeDeviceDataLoader = false;\n        }\n    }\n\n    showTrend(paramMetric, entityID, deviceID) {\n        let requestBody = {\n            paramMetric: paramMetric,\n            entityID: entityID,\n            deviceID: deviceID\n        };\n        this.trendService.openDialog(requestBody);\n    }\n\n}\n","<div class=\"card main-card cardOverwrite h100\">\n    <div class=\"headerContainer\">\n        <div class=\"headerLeftContainer\">\n            <div class=\"pageTitle\">Entity Dashboard</div>\n        </div>\n    </div>\n\n    <div class=\"card-body\">\n        <div class=\"row\">\n            <ng-container *ngIf=\"entityTypeLoader; else showEntityType\">\n                <ng-container *ngTemplateOutlet=\"showLoader; context: { count: 1 }\"></ng-container>\n            </ng-container>\n\n            <ng-template #showEntityType>\n                <div class=\"col-sm-3\">\n                    <mat-form-field class=\"matFieldWidth100\" [appearance]=\"materialFormFieldAppearance.FORM_FIELD_APPEARANCE\">\n                        <mat-label>Select entity type</mat-label>\n                        <mat-select (selectionChange)=\"entityTypeChange($event.value)\" [formControl]=\"entityTypeFC\" required>\n                            <ng-container *ngIf=\"entityTypeM && entityTypeM.length > 0 && entityTypeM?.[0]?.type; else noDataFound\">\n                                <mat-option>\n                                    <ngx-mat-select-search [formControl]=\"entityTypeSearchUtil.filterFC\"\n                                        placeholderLabel=\"Search by name\" noEntriesFoundLabel=\"No matching name found.\">\n                                    </ngx-mat-select-search>\n                                </mat-option>\n                                <mat-option *ngFor=\"let type of entityTypeSearchUtil.filteredEntities | async\"\n                                    [value]=\"type.type\">\n                                    {{ type.type | titlecase }}\n                                </mat-option>\n                            </ng-container>\n                            <ng-template #noDataFound>\n                                <mat-option disabled>\n                                    {{ commonConstant.NO_DATA_FOUND }}\n                                </mat-option>\n                            </ng-template>\n                        </mat-select>\n                        <mat-error *ngIf=\"entityTypeFC.touched && entityTypeFC.hasError('required')\">\n                            {{ FormErrorEnum.REQUIRED }}\n                        </mat-error>\n                    </mat-form-field>\n                </div>\n            </ng-template>\n        </div>\n\n        <div class=\"row mt-2\">\n            <div class=\"col-sm-6\">\n                <mat-accordion>\n                    <mat-expansion-panel class=\"matAccordion\" [expanded]=\"isAccordionOpen\" (opened)=\"openAccordion()\"\n                        (closed)=\"closeAccordion()\">\n                        <mat-expansion-panel-header>\n                            <mat-panel-title>\n                                <div class=\"cardTitle\">\n                                    Select entity\n                                </div>\n                            </mat-panel-title>\n                        </mat-expansion-panel-header>\n\n                        <div class=\"row\">\n                            <div class=\"col-sm-12\">\n                                <lib-search-bar-two class=\"float-end me-3\" #searchBar searchBy=\"name\"\n                                    (emitSearch)=\"searchFn($event)\">\n                                </lib-search-bar-two>\n                            </div>\n                        </div>\n                        \n                        <perfect-scrollbar class=\"scrollHeight\" [config]=\"{useBothWheelAxes: true, suppressScrollX: false, suppressScrollY: false}\" #scrollContainer>\n                            <ng-container *ngIf=\"entityDeviceLoader; else entityDeviceView\">\n                                <div class=\"mt-2\">\n                                    <ng-container *ngTemplateOutlet=\"showLoader; context: { count: 3 }\"></ng-container>\n                                </div>\n                            </ng-container>\n                            <ng-template #entityDeviceView>\n                                <mat-radio-group [formControl]=\"entityFC\" (change)=\"onEntityDeviceSelection()\">\n                                    <div *ngFor=\"let entity of filteredEntityDeviceM\">\n                                        <ng-container *ngTemplateOutlet=\"entityTemplate; context:{ $implicit: entity }\"></ng-container>\n                                    </div>\n\n                                    <ng-template #entityTemplate let-entity>\n                                        <div class=\"ms-3 mt-2\">\n                                            <ng-container *ngIf=\"isDeviceAttached(entity); else entityView\">\n                                                <mat-radio-button class=\"radioBtnLabel me-2\" [value]=\"entity.id\">\n                                                    <span class=\"badge rounded-pill\" [ngClass]=\"{'facility': entity.type == 'FACILITY', 'entity': entity.type == 'ENTITY', 'device': entity.type == 'DEVICE'}\"\n                                                        [matTooltip]=\"getTooltipLabel(entity)\" matTooltipPosition=\"above\">\n                                                        <div class=\"d-flex align-items-center\">\n                                                            <span class=\"material-symbols-outlined me-2\" *ngIf=\"entity.type == 'FACILITY'\">factory</span>\n                                                            <span class=\"material-symbols-outlined me-2\" *ngIf=\"entity.type == 'ENTITY'\">domain</span>\n                                                            <span class=\"material-symbols-outlined me-2\" *ngIf=\"entity.type == 'DEVICE'\">devices</span>\n                                                            {{ entity.name }}\n                                                        </div>\n                                                    </span>\n                                                </mat-radio-button>\n                                            </ng-container>\n\n                                            <ng-template #entityView>\n                                                <span class=\"badge rounded-pill\" [ngClass]=\"{'facility': entity.type == 'FACILITY', 'entity': entity.type == 'ENTITY', 'device': entity.type == 'DEVICE'}\"\n                                                    [matTooltip]=\"getTooltipLabel(entity)\" matTooltipPosition=\"above\">\n                                                    <div class=\"d-flex align-items-center\">\n                                                        <span class=\"material-symbols-outlined me-2\" *ngIf=\"entity.type == 'FACILITY'\">factory</span>\n                                                        <span class=\"material-symbols-outlined me-2\" *ngIf=\"entity.type == 'ENTITY'\">domain</span>\n                                                        <span class=\"material-symbols-outlined me-2\" *ngIf=\"entity.type == 'DEVICE'\">devices</span>\n                                                        {{ entity.name }}\n                                                    </div>\n                                                </span>\n                                            </ng-template>\n                                        </div>\n\n                                        <div *ngIf=\"entity.children && entity.children.length > 0\" class=\"ms-3 mt-2\">\n                                            <ng-container *ngFor=\"let child of entity.children\">\n                                                <ng-container\n                                                    *ngTemplateOutlet=\"entityTemplate; context:{ $implicit: child }\"></ng-container>\n                                            </ng-container>\n                                        </div>\n                                    </ng-template>\n                                </mat-radio-group>\n                                \n                            </ng-template>\n                        </perfect-scrollbar>\n                    </mat-expansion-panel>\n                </mat-accordion>\n            </div>\n\n            <div class=\"col-sm-6\">\n                <mat-card class=\"cardOverwrite cardBackgroundColor cardHeight2\">\n                    <div class=\"row\">\n                        <div class=\"col-sm-12\">\n                            <div class=\"d-flex align-items-center\">\n                                <span class=\"material-symbols-outlined me-3\">\n                                    devices\n                                </span>\n                                <span class=\"cardTitle mt-1\">\n                                    Real time data\n                                </span>\n                            </div>\n                        </div>\n                    </div>\n                    <hr>\n                    <perfect-scrollbar class=\"scrollHeight\">\n                        <ng-container *ngIf=\"realTimeDeviceDataLoader; else realTimeDeviceDataView\">\n                            <ng-container *ngTemplateOutlet=\"showLoader; context: { count: 3 }\"></ng-container>\n                        </ng-container>\n\n                        <ng-template #realTimeDeviceDataView>\n                            <ng-container *ngFor=\"let realTimeData of orgRecentDataM;\">\n                                <ng-container *ngTemplateOutlet=\"parameterSummary; context: {\n                                    device: realTimeData?.deviceData,\n                                    entityID: realTimeData?.entityID\n                                }\"></ng-container>\n                            </ng-container>\n                        </ng-template>\n                    </perfect-scrollbar>\n                </mat-card>\n            </div>\n        </div>\n    </div>\n</div>\n\n<ng-template #parameterSummary let-device=\"device\" let-entityID=\"entityID\">\n    <ng-container *ngFor=\"let deviceData of device;\">\n        <div class=\"row\">\n            <div class=\"col-sm-12\">\n                <div class=\"d-flex align-items-center fw-bold\">\n                    <span class=\"material-symbols-outlined me-1\"\n                        [ngClass]=\"{'text-success': deviceData.status == 'LIVE', 'text-secondary': deviceData.status == 'OFFLINE' || deviceData.status == 'NO_DATA'}\">\n                        devices\n                    </span>\n                    {{ deviceData.name ? deviceData.name : commonConstant.HYPHEN }}\n                </div>\n            </div>\n        </div>\n        <div class=\"row mt-2\" *ngFor=\"let parameterData of deviceData.paramData;\">\n            <div class=\"col-sm-4 text-start text-secondary\">\n                {{ parameterData.label ? parameterData.label : commonConstant.HYPHEN }}\n            </div>\n            <div class=\"col-sm-4 text-center\">\n                <a class=\"text-primary cursorPointer fw-bold\" matTooltip=\"Trend\" matTooltipPosition=\"above\"\n                    (click)=\"showTrend(parameterData?.name, entityID, deviceData?.id)\">\n                    <span> {{ parameterData?.data?.value ? parameterData?.data?.value : commonConstant.HYPHEN }} </span>\n                    <span> {{ parameterData?.data?.value ? parameterData?.unit : '' }} </span>\n                </a>\n            </div>\n            <div class=\"col-sm-4 text-start text-secondary\">\n                {{ dateService.getRelativeTimeAgoLabel(parameterData?.data?.date, timezone) }}\n            </div>\n        </div>\n        <hr>\n    </ng-container>\n</ng-template>\n\n<ng-template #showLoader let-count=\"count\">\n    <lib-skeleton-loader [count]=\"count\" [appearance]=\"''\"\n        [theme]=\"{ 'border-radius': '16px', height: '40px', 'background-color': 'rgb(230 232 235)' }\"></lib-skeleton-loader>\n</ng-template>","import { NgModule } from '@angular/core';\nimport { RouterModule, Routes } from '@angular/router';\n\nimport { EntityDashboardComponent } from './entity.component';\n\nconst routes: Routes = [\n    {\n        path: '',\n        component: EntityDashboardComponent\n    }\n];\n\n@NgModule({\n    imports: [RouterModule.forChild(routes)],\n    exports: [RouterModule]\n})\nexport class EntityDashboardRoutingModule { }\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { ReactiveFormsModule } from '@angular/forms';\n\nimport { MatCardModule } from '@angular/material/card';\nimport { MatFormFieldModule } from '@angular/material/form-field';\nimport { MatInputModule } from '@angular/material/input';\nimport { MatSelectModule } from '@angular/material/select';\nimport { MatButtonToggleModule } from '@angular/material/button-toggle';\nimport { MatExpansionModule } from '@angular/material/expansion';\nimport { MatOptionModule } from '@angular/material/core';\nimport { MatRadioModule } from '@angular/material/radio';\nimport { MatTooltipModule } from '@angular/material/tooltip';\n\nimport { NgxMatSelectSearchModule } from 'ngx-mat-select-search';\nimport { PerfectScrollbarModule } from 'ngx-perfect-scrollbar';\n\nimport { TrendModule } from '../../_shared/dialog/trend/trend.module';\nimport { TrendService } from '../../../service/trend.service';\n\nimport { EntityDashboardComponent } from './entity.component';\nimport { EntityDashboardRoutingModule } from './entity-routing.module';\n\n// tsc-library\nimport { SearchBarTwoModule, SkeletonModule } from '@library/tsc-common';\n// /tsc-library/\n\n@NgModule({\n    declarations: [\n        EntityDashboardComponent\n    ],\n    imports: [\n        CommonModule,\n        EntityDashboardRoutingModule,\n        ReactiveFormsModule,\n        MatCardModule,\n        MatFormFieldModule,\n        MatInputModule,\n        MatSelectModule,\n        MatButtonToggleModule,\n        MatExpansionModule,\n        MatOptionModule,\n        MatRadioModule,\n        MatTooltipModule,\n        NgxMatSelectSearchModule,\n        PerfectScrollbarModule,\n        TrendModule,\n        SkeletonModule,\n        SearchBarTwoModule\n    ],\n    providers: [TrendService]\n})\nexport class EntityDashboardModule { }\n","import { Injectable } from \"@angular/core\";\n\nimport { AlertM } from \"../model/alert.model\";\n\n@Injectable({\n    providedIn: 'root'\n})\n\nexport class AlertService {\n\n    setAlertProperties(alertObject: AlertM, label: string, content: string, type: string, icon: string): AlertM {\n        alertObject.showAlert = true;\n        alertObject.alertLabel = label;\n        alertObject.alertContent = content;\n        alertObject.messageAlertType = type;\n        alertObject.messageAlertIcon = icon;\n\n        return alertObject;\n    }\n\n    resetAlertProperties(alertObject: AlertM): AlertM {\n        alertObject.showAlert = false;\n        alertObject.alertLabel = '';\n        alertObject.alertContent = '';\n        alertObject.messageAlertType = '';\n        alertObject.messageAlertIcon = '';\n\n        return alertObject;\n    }\n}","import { Component, OnInit } from '@angular/core';\nimport { Router } from '@angular/router';\nimport { FormControl, Validators } from '@angular/forms';\n\nimport { DashboardErrorEnum } from '../../../enum/error.enum';\n\nimport { OrgRecentData, OrgRecentDataM, RecentDataRequestWithParam, RecentDataRequestWithoutParam } from '../../../model/recent-data.model';\nimport { Alert, AlertM } from '../../../model/alert.model';\nimport { EntityType, EntityTypeM } from '../../../model/entity.model';\n\nimport { RecentDataService } from '../../../service/recent-data.service';\nimport { TrendService } from '../../../service/trend.service';\nimport { AlertService } from '../../../service/alert.service';\nimport { EntityService } from '../../../service/entity.service';\n\n// tsc-library\nimport { DateService } from '@library/date';\nimport { StorageService } from '@library/storage-service';\nimport { COMMON_CONSTANT, FormErrorEnum, MatSelectSearchService, MaterialFormFieldAppearance, MessageAlertIconEnum, MessageAlertTypeEnum } from '@library/tsc-common';\n// /tsc-library/\n\n@Component({\n    selector: 'app-facility',\n    templateUrl: './facility.component.html',\n    styleUrls: []\n})\n\nexport class FacilityComponent implements OnInit {\n\n    commonConstant = COMMON_CONSTANT;\n    materialFormFieldAppearance = MaterialFormFieldAppearance;\n\n    FormErrorEnum = FormErrorEnum;\n\n    orgID: any;\n    timezone: any;\n    apiTimer: any;\n    entityTypeLoader: boolean = true;\n    facilityDataLoader: boolean = false;\n\n    entityTypeM = [new EntityType()];\n    orgRecentDataM = [new OrgRecentData()];\n    alertObj: AlertM = new Alert();\n\n    last48HrsMeterData: { [deviceID: string]: { [paramName: string]: any } } = {};\n\n    entityTypeFC: FormControl = new FormControl('', Validators.required);\n    entityTypeSearchUtil: MatSelectSearchService = new MatSelectSearchService(['type']);\n\n    constructor(\n        private router: Router,\n        private storageService: StorageService,\n        public dateService: DateService,\n        private entityService: EntityService,\n        private trendService: TrendService,\n        private recentDataService: RecentDataService,\n        private alertService: AlertService,\n    ) { }\n\n    ngOnInit(): void {\n        this.orgID = this.storageService.getStorage('currentOrgID');\n        this.timezone = this.storageService.getStorage('timezone');\n\n        this.getEntityTypeByLayoutID();\n    }\n\n    async getEntityTypeByLayoutID() {\n        try {\n            this.entityTypeM = <EntityTypeM[]>await this.entityService.getEntityTypeByLayoutID(this.orgID, 'YES');\n\n            this.entityTypeSearchUtil.entityArr = this.entityTypeM;\n            this.entityTypeSearchUtil.createSubscription();\n\n            if (this.entityTypeM && this.entityTypeM.length > 0) {\n                const defaultEntityType = this.entityTypeM[0].type;\n\n                if (defaultEntityType) {\n                    this.entityTypeFC.patchValue(defaultEntityType);\n                    this.getOrgRecentData(this.entityTypeFC.value);\n                }\n            }\n        } catch (error) {\n            console.error(\"Error in getEntityTypeByLayoutID()\", error);\n        } finally {\n            this.entityTypeLoader = false;\n        }\n    }\n\n    entityTypeChange(selectedType) {\n\n        // Clear the timer when changing the device\n        clearTimeout(this.apiTimer);\n\n        this.entityTypeFC.patchValue(selectedType);\n\n        this.orgRecentDataM = [new OrgRecentData()];\n        this.getOrgRecentData(selectedType);\n    }\n\n    async getOrgRecentData(entityType) {\n\n        this.facilityDataLoader = true;\n        this.alertService.resetAlertProperties(this.alertObj);\n\n        try {\n            let requestBody = new RecentDataRequestWithoutParam();\n\n            requestBody.timezone = this.timezone;\n            requestBody.entityType = entityType;\n            requestBody.backscan = 1;\n\n            this.orgRecentDataM = <OrgRecentDataM[]>await this.recentDataService.getOrgRecentData(this.orgID, requestBody);\n\n            if (this.orgRecentDataM && this.orgRecentDataM.length == 0) {\n                this.alertService.setAlertProperties(this.alertObj, DashboardErrorEnum.DATA_NOT_FOUND_LABEL, DashboardErrorEnum.DATA_NOT_FOUND_MESSAGE, MessageAlertTypeEnum.WARNING, MessageAlertIconEnum.WARNING_ICON);\n            }\n\n        } catch (error) {\n\n            console.error(`Error in getOrgRecentData()`, error);\n            this.alertService.setAlertProperties(this.alertObj, DashboardErrorEnum.INVALID_ERROR_LABEL, DashboardErrorEnum.INVALID_ERROR_MESSAGE, MessageAlertTypeEnum.DANGER, MessageAlertIconEnum.DANGER_ICON);\n\n        } finally {\n            this.apiTimer = setTimeout(() => {\n                this.getOrgRecentData(entityType);\n            }, 300000);\n            this.facilityDataLoader = false;\n        }\n    }\n\n    async getLast48HrsMeterData(deviceID, paramName) {\n        try {\n            let requestData = new RecentDataRequestWithParam();\n\n            requestData.params = [{ name: paramName }];\n            requestData.deviceID = [deviceID];\n            requestData.backscan = 48;\n            requestData.timezone = this.timezone;\n\n            const result = await this.recentDataService.getRecentDataWithParam(this.orgID, requestData);\n            \n            if (result.length > 0) {\n                if (!this.last48HrsMeterData[deviceID]) {\n                    this.last48HrsMeterData[deviceID] = {};\n                }\n                this.last48HrsMeterData[deviceID][paramName] = result[0];\n            } else {\n                if (!this.last48HrsMeterData[deviceID]) {\n                    this.last48HrsMeterData[deviceID] = {};\n                }\n                this.last48HrsMeterData[deviceID][paramName] = null;\n            }\n\n        } catch (error) {\n            console.error(`Error in getLast48HrsMeterData()`, error);\n        }\n    }\n\n    showEntityConsumption(id) {\n        this.router.navigate(['/analytics-insights/consumption'], { queryParams: { entityID: id } });\n    }\n\n    showTrend(paramMetric, deviceID, entityID) {\n        let requestBody = {\n            paramMetric: paramMetric,\n            deviceID: deviceID,\n            entityID: entityID\n        };\n        this.trendService.openDialog(requestBody);\n    }\n\n    ngOnDestroy(): void {\n        clearTimeout(this.apiTimer);\n    }\n\n}","<div class=\"card main-card cardOverwrite h100\">\n    <div class=\"headerContainer\">\n        <div class=\"headerLeftContainer\">\n            <div class=\"pageTitle\">Facility Dashboard</div>\n        </div>\n    </div>\n\n    <div class=\"card-body\">\n        <div class=\"row\">\n            <ng-container *ngIf=\"entityTypeLoader; else showEntityType\">\n                <ng-container *ngTemplateOutlet=\"showLoader; context: { count: 1 }\"></ng-container>\n            </ng-container>\n\n            <ng-template #showEntityType>\n                <div class=\"col-sm-3\">\n                    <mat-form-field class=\"matFieldWidth100\"\n                        [appearance]=\"materialFormFieldAppearance.FORM_FIELD_APPEARANCE\">\n                        <mat-label>Select entity type</mat-label>\n                        <mat-select (selectionChange)=\"entityTypeChange($event.value)\" [formControl]=\"entityTypeFC\"\n                            required>\n                            <ng-container *ngIf=\"entityTypeM && entityTypeM.length > 0 && entityTypeM?.[0]?.type; else noDataFound\">\n                                <mat-option>\n                                    <ngx-mat-select-search [formControl]=\"entityTypeSearchUtil.filterFC\"\n                                        placeholderLabel=\"Search by name\" noEntriesFoundLabel=\"No matching name found.\">\n                                    </ngx-mat-select-search>\n                                </mat-option>\n                                <mat-option *ngFor=\"let type of entityTypeSearchUtil.filteredEntities | async\"\n                                    [value]=\"type.type\">\n                                    {{ type.type | titlecase }}\n                                </mat-option>\n                            </ng-container>\n                            <ng-template #noDataFound>\n                                <mat-option disabled>\n                                    {{ commonConstant.NO_DATA_FOUND }}\n                                </mat-option>\n                            </ng-template>\n                        </mat-select>\n                        <mat-error *ngIf=\"entityTypeFC.touched && entityTypeFC.hasError('required')\">\n                            {{ FormErrorEnum.REQUIRED }}\n                        </mat-error>\n                    </mat-form-field>\n                </div>\n            </ng-template>\n        </div>\n\n        <div class=\"row mt-2\" *ngIf=\"facilityDataLoader\">\n            <ng-container *ngTemplateOutlet=\"showLoader; context: { count: 3 }\"></ng-container>\n        </div>\n\n        <div class=\"row\">\n            <div class=\"col-sm-12\">\n                <lib-message-alert *ngIf=\"alertObj.showAlert\" [labelInp]=\"alertObj.alertLabel\"\n                    [contentInp]=\"alertObj.alertContent\" [messageAlertTypeInp]=\"alertObj.messageAlertType\"\n                    [messageAlertIconInp]=\"alertObj.messageAlertIcon\">\n                </lib-message-alert>\n            </div>\n        </div>\n\n        <div class=\"row mt-2\" *ngIf=\"orgRecentDataM.length > 0 && orgRecentDataM[0].orgID != null\">\n            <div class=\"col-sm-12 mb-3\" *ngFor=\"let recentRes of orgRecentDataM\">\n                <mat-card class=\"cardOverwrite border\">\n                    <div class=\"row mb-2\">\n                        <div class=\"col-sm-6\">\n                            <div class=\"d-flex align-items-center\">\n                                <span class=\"cardTitle me-2\">{{ recentRes.entityName }}</span>\n                                <span class=\"badge rounded-pill info\">\n                                    {{ recentRes.entityType }}\n                                </span>\n                            </div>\n                        </div>\n                        <div class=\"col-sm-6 text-end\" *ngIf=\"recentRes.entityStatusFlag\">\n                            <a class=\"text-primary cursorPointer\" matTooltip=\"Entity consumption\"\n                                matTooltipPosition=\"below\"\n                                (click)=\"showEntityConsumption(recentRes.entityID)\">\n                                <span class=\"material-symbols-outlined fs-4 fw-bold\">monitoring</span>\n                            </a>\n                        </div>\n                    </div>\n\n                    <div class=\"row\">\n                        <div class=\"col-sm-12\" *ngFor=\"let deviceRes of recentRes.deviceData\">\n                            <div class=\"d-flex align-items-center\">\n                                <span class=\"material-symbols-outlined me-1\"\n                                    [ngClass]=\"{'text-success': deviceRes.status == 'LIVE', 'text-secondary': deviceRes.status == 'OFFLINE' || deviceRes.status == 'NO_DATA'}\">\n                                    devices\n                                </span>\n                                {{ deviceRes.name }}\n                            </div>\n\n                            <div class=\"row mt-2\">\n                                <div class=\"col-sm-4 mb-3\" *ngFor=\"let paramRes of deviceRes.paramData\">\n                                    <mat-card class=\"cardOverwrite cardBackgroundColor\">\n                                            <ng-container *ngTemplateOutlet=\"parameterData; context: {\n                                                duration: last48HrsMeterData[deviceRes.id]?.[paramRes.name]?.data?.date ? dateService.getRelativeTimeAgoLabel(last48HrsMeterData[deviceRes.id][paramRes.name]?.data?.date, timezone) : dateService.getRelativeTimeAgoLabel(paramRes?.data?.date, timezone),\n                                                value: last48HrsMeterData[deviceRes.id]?.[paramRes.name]?.data?.value != null ? last48HrsMeterData[deviceRes.id][paramRes.name]?.data?.value : paramRes?.data?.value,\n                                                unit: paramRes?.unit,\n                                                label: paramRes?.label,\n                                                entityID: recentRes?.entityID,\n                                                deviceID: deviceRes?.id,\n                                                paramName: paramRes?.name,\n                                                paramStatus: paramRes?.status\n                                            }\"></ng-container>\n                                    </mat-card>\n                                </div>\n                            </div>\n                        </div>\n                    </div>\n                </mat-card>\n            </div>\n        </div>\n    </div>\n</div>\n\n<ng-template #parameterData let-duration=\"duration\" let-label=\"label\" let-value=\"value\" let-unit=\"unit\"\n    let-entityID=\"entityID\" let-deviceID=\"deviceID\" let-paramName=\"paramName\" let-paramStatus=\"paramStatus\">\n    <div class=\"row\">\n        <div class=\"col-sm-6 textDurationWithAgoTime\">\n            {{ duration }}\n        </div>\n        <div class=\"col-sm-6 text-end\">\n            <a *ngIf=\"paramStatus == 'OFFLINE'\" class=\"text-secondary cursorPointer me-2\"\n                matTooltip=\"Currently parameter is offline, click here to see data of last 48 hrs.\" matTooltipPosition=\"below\"\n                (click)=\"getLast48HrsMeterData(deviceID, paramName)\">\n                <span class=\"material-symbols-outlined fs-5 fw-bold\">devices</span>\n            </a>\n\n            <a class=\"text-primary cursorPointer\" matTooltip=\"Trend\" matTooltipPosition=\"below\"\n                (click)=\"showTrend(paramName, deviceID, entityID)\">\n                <span class=\"material-symbols-outlined fs-5 fw-bold\">trending_up</span>\n            </a>\n        </div>\n    </div>\n    <div class=\"row mt-3\">\n        <div class=\"col-sm-12 text-center\">\n            <span class=\"fs-1 fw-bold text-primary\">{{ value ? value : commonConstant.HYPHEN }}</span>\n            <span class=\"text-secondary fw-bold\"> {{ value ? unit : '' }} </span>\n        </div>\n    </div>\n    <div class=\"row mt-4 mb-4\">\n        <div class=\"col-sm-12 fs-5 text-center\">\n            {{ label }}\n        </div>\n    </div>\n</ng-template>\n\n<ng-template #showLoader let-count=\"count\">\n    <lib-skeleton-loader [count]=\"count\" [appearance]=\"''\"\n        [theme]=\"{ 'border-radius': '16px', height: '40px', 'background-color': 'rgb(230 232 235)' }\"></lib-skeleton-loader>\n</ng-template>","import { NgModule } from '@angular/core';\nimport { RouterModule, Routes } from '@angular/router';\n\nimport { FacilityComponent } from './facility.component';\n\nconst routes: Routes = [\n    {\n        path: '',\n        component: FacilityComponent\n    }\n];\n\n@NgModule({\n    imports: [RouterModule.forChild(routes)],\n    exports: [RouterModule]\n})\nexport class FacilityRoutingModule { }\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { ReactiveFormsModule } from '@angular/forms';\n\nimport { MatCardModule } from '@angular/material/card';\nimport { MatTooltipModule } from '@angular/material/tooltip';\nimport { MatFormFieldModule } from '@angular/material/form-field';\nimport { MatInputModule } from '@angular/material/input';\nimport { MatSelectModule } from '@angular/material/select';\nimport { MatOptionModule } from '@angular/material/core';\n\nimport { NgxMatSelectSearchModule } from 'ngx-mat-select-search';\n\nimport { TrendModule } from '../../_shared/dialog/trend/trend.module';\nimport { TrendService } from '../../../service/trend.service';\n\nimport { FacilityComponent } from './facility.component';\nimport { FacilityRoutingModule } from './facility-routing.module';\n\n// tsc-library\nimport { MessageAlertModule, SearchBarTwoModule, SkeletonModule } from '@library/tsc-common';\n// /tsc-library/\n\n@NgModule({\n    declarations: [\n        FacilityComponent\n    ],\n    imports: [\n        CommonModule,\n        FacilityRoutingModule,\n        ReactiveFormsModule,\n        MatCardModule,\n        MatTooltipModule,\n        MatFormFieldModule,\n        MatInputModule,\n        MatSelectModule,\n        MatOptionModule,\n        NgxMatSelectSearchModule,\n        TrendModule,\n        SkeletonModule,\n        SearchBarTwoModule,\n        MessageAlertModule\n    ],\n    providers: [TrendService]\n})\nexport class FacilityModule { }\n","import { Inject, Injectable } from '@angular/core';\nimport { HttpClient, HttpParams } from '@angular/common/http';\n\nimport { Observable } from 'rxjs';\n\nimport { DevicesWithEntitiesM } from '../model/device.model';\n\n@Injectable({\n    providedIn: 'root'\n})\n\nexport class EntityDeviceController {\n\n    constructor(\n        private http: HttpClient,\n        @Inject('environment') private environment: any\n    ) { }\n\n    getDevicesWithEntities(orgID, requestBody): Observable<DevicesWithEntitiesM[]> {\n        return this.http.post<DevicesWithEntitiesM[]>(`${this.environment.TSC_COMMON_API_URL}organizations/${orgID}/layouts/entities/devices`, requestBody);\n    }\n\n    getDevicesWithEntitiesByParameter(orgID, paramName): Observable<DevicesWithEntitiesM[]> {\n        let params = new HttpParams();\n        params = params.append('paramName', paramName);\n\n        return this.http.get<DevicesWithEntitiesM[]>(`${this.environment.TSC_COMMON_API_URL}organizations/${orgID}/entities-devices`, { params: params });\n    }\n}\n","import { Injectable } from '@angular/core';\n\nimport { DevicesWithEntities, DevicesWithEntitiesM } from '../model/device.model';\n\nimport { EntityDeviceController } from '../controller/entity-device.controller';\n\n@Injectable({\n    providedIn: 'root'\n})\n\nexport class EntityDeviceService {\n\n    constructor(\n        private entityDeviceController: EntityDeviceController\n    ) { }\n\n    async getDevicesWithEntities(orgID, requestBody): Promise<DevicesWithEntitiesM[]> {\n        let devicesWithEntitiesM: DevicesWithEntitiesM[];\n        try {\n            devicesWithEntitiesM = await this.entityDeviceController.getDevicesWithEntities(orgID, requestBody).toPromise();\n\n            if (devicesWithEntitiesM) {\n                return devicesWithEntitiesM;\n            } else {\n                return [new DevicesWithEntities()];\n            }\n        } catch (error) {\n            console.error('Error -', error);\n            return [new DevicesWithEntities()];\n        }\n    }\n\n    async getDevicesWithEntitiesByParameter(orgID, paramMetric): Promise<DevicesWithEntitiesM[]> {\n        let devicesWithEntitiesM: DevicesWithEntitiesM[];\n        try {\n            devicesWithEntitiesM = await this.entityDeviceController.getDevicesWithEntitiesByParameter(orgID, paramMetric).toPromise();\n\n            if (devicesWithEntitiesM) {\n                return devicesWithEntitiesM;\n            } else {\n                return [new DevicesWithEntities()];\n            }\n        } catch (error) {\n            console.error('Error -', error);\n            return [new DevicesWithEntities()];\n        }\n    }\n\n}","import { Component, OnInit } from '@angular/core';\nimport { FormControl } from '@angular/forms';\n\nimport { DashboardErrorEnum } from '../../../enum/error.enum';\n\nimport { DevicesWithEntities, DevicesWithEntitiesM } from '../../../model/device.model';\nimport { Parameter, ParameterM } from '../../../model/parameter.model';\nimport { Alert, AlertM } from '../../../model/alert.model';\nimport { RecentDataRequestWithParam } from '../../../model/recent-data.model';\n\nimport { RecentDataService } from '../../../service/recent-data.service';\nimport { ParameterService } from '../../../service/parameter.service';\nimport { EntityDeviceService } from '../../../service/entity-device.service';\nimport { AlertService } from '../../../service/alert.service';\nimport { TrendService } from '../../../service/trend.service';\n\n// tsc-library\nimport { StorageService } from '@library/storage-service';\nimport { COMMON_CONSTANT, FormErrorEnum, MatSelectSearchService, MaterialFormFieldAppearance, MessageAlertIconEnum, MessageAlertTypeEnum } from '@library/tsc-common';\nimport { DateService } from '@library/date';\nimport { ApplicationKeyID } from '@library/application-service';\n// /tsc-library/\n\n@Component({\n    selector: 'lib-meter-data',\n    templateUrl: './meter-data.component.html',\n    styles: [\n    ]\n})\nexport class MeterDataDashboardComponent implements OnInit {\n\n    COMMON_CONSTANT = COMMON_CONSTANT;\n\n    MaterialFormFieldAppearance = MaterialFormFieldAppearance;\n    FormErrorEnum = FormErrorEnum;\n\n    orgID: any;\n    applicationKeyID: any;\n    paramMetric: any;\n    entityID: any;\n    timezone: string;\n    meterDataRes: any;\n    last48HrsMeterData: { [key: string]: any } = {};\n    currentParamName: any;\n    apiTimer: any;\n    showAlert: boolean = false;\n    showLoader: boolean = false;\n\n    entityDeviceM = [new DevicesWithEntities()];\n    parameterM = [new Parameter()];\n    alertObj: AlertM = new Alert();\n\n    meterFC: FormControl = new FormControl();\n\n    meterSearchUtil: MatSelectSearchService = new MatSelectSearchService(['name']);\n\n    constructor(\n        private storageService: StorageService,\n        private recentDataService: RecentDataService,\n        private entityDeviceService: EntityDeviceService,\n        private parameterService: ParameterService,\n        private alertService: AlertService,\n        public dateService: DateService,\n        private trendService: TrendService\n    ) { }\n\n    ngOnInit(): void {\n        this.orgID = this.storageService.getStorage('currentOrgID');\n        this.timezone = this.storageService.getStorage('timezone');\n        this.applicationKeyID = this.storageService.getStorage('applicationKeyID');\n\n        if (this.applicationKeyID == ApplicationKeyID.ENERGY_KEY_ID) {\n            this.paramMetric = \"engEnergyUsed\";\n        } else if (this.applicationKeyID == ApplicationKeyID.WATER_KEY_ID) {\n            this.paramMetric = \"gwFlowTotalizer\";\n        }\n\n        this.getDevicesWithEntitiesByParameter();\n    }\n\n    async getDevicesWithEntitiesByParameter() {\n        this.entityDeviceM = <DevicesWithEntitiesM[]>await this.entityDeviceService.getDevicesWithEntitiesByParameter(this.orgID, this.paramMetric);\n\n        this.meterSearchUtil.entityArr = this.entityDeviceM;\n        this.meterSearchUtil.createSubscription();\n\n        if (this.entityDeviceM.length > 0 && this.entityDeviceM?.[0]?.id) {\n            const deviceID = this.entityDeviceM?.[0]?.['devices']?.[0]?.['id'];\n            this.meterFC.patchValue(deviceID);\n\n            this.getParameterList();\n        }\n    }\n\n    meterChange(selectedMeter) {\n        clearTimeout(this.apiTimer);\n        this.showLoader = true;\n\n        this.meterFC.patchValue(selectedMeter);\n        this.getParameterList();\n    }\n\n    getParameterList() {\n        const selectedMeter = this.meterFC.value;\n        this.getParameterByDeviceID(selectedMeter);\n    }\n\n    async getParameterByDeviceID(deviceID) {\n        let requestBody = {};\n        requestBody['deviceID'] = [deviceID];\n\n        this.parameterM = <ParameterM[]>await this.parameterService.getParameterByDeviceID(this.orgID, requestBody);\n\n        if (this.parameterM.length > 0 && this.parameterM?.[0]?.id) {\n            this.getRecentMeterData(deviceID);\n        }\n    }\n\n    async getRecentMeterData(deviceID) {\n\n        this.alertService.resetAlertProperties(this.alertObj);\n\n        try {\n            let requestData = new RecentDataRequestWithParam();\n\n            requestData.params = this.parameterM.map(param => ({ name: param.paramMetric }));\n            requestData.deviceID = [deviceID];\n            requestData.backscan = 1;\n            requestData.timezone = this.timezone;\n\n            this.meterDataRes = await this.recentDataService.getRecentDataWithParam(this.orgID, requestData);\n\n            if (this.meterDataRes?.length == 0) {\n                this.alertService.setAlertProperties(this.alertObj, DashboardErrorEnum.DATA_NOT_FOUND_LABEL, DashboardErrorEnum.DATA_NOT_FOUND_MESSAGE, MessageAlertTypeEnum.WARNING, MessageAlertIconEnum.WARNING_ICON);\n            }\n\n        } catch (error) {\n            console.error(`Error in getRecentMeterData()`, error);\n            this.alertService.setAlertProperties(this.alertObj, DashboardErrorEnum.INVALID_ERROR_LABEL, DashboardErrorEnum.INVALID_ERROR_MESSAGE, MessageAlertTypeEnum.DANGER, MessageAlertIconEnum.DANGER_ICON);\n        } finally {\n            this.apiTimer = setTimeout(() => {\n                this.getRecentMeterData(deviceID);\n            }, 300000);\n            this.showLoader = false;\n        }\n    }\n\n    async getLast48HrsMeterData(paramName) {\n        try {\n            let requestData = new RecentDataRequestWithParam();\n\n            requestData.params = [{ name: paramName }];\n            requestData.deviceID = [this.meterFC.value];\n            requestData.backscan = 48;\n            requestData.timezone = this.timezone;\n\n            const result = await this.recentDataService.getRecentDataWithParam(this.orgID, requestData);\n\n            if (result.length > 0) {\n                this.last48HrsMeterData[paramName] = result[0];\n            } else {\n                this.last48HrsMeterData[paramName] = null;\n            }\n            this.currentParamName = paramName;\n\n        } catch (error) {\n            console.error(`Error in getLast48HrsMeterData()`, error);\n        }\n    }\n\n    showTrend(paramMetric, entityID) {\n        let requestBody = {\n            paramMetric: paramMetric,\n            entityID: entityID,\n            deviceID: this.meterFC.value\n        };\n        this.trendService.openDialog(requestBody);\n    }\n\n    ngOnDestroy(): void {\n        clearTimeout(this.apiTimer);\n    }\n\n}","<div class=\"card main-card cardOverwrite h100\">\n    <div class=\"headerContainer\">\n        <div class=\"headerLeftContainer\">\n            <div class=\"pageTitle\">Meter Data Dashboard</div>\n        </div>\n    </div>\n\n    <div class=\"card-body\">\n        <div class=\"row\">\n            <div class=\"col-sm-3\">\n                <mat-form-field class=\"matFieldWidth100\"\n                    [appearance]=\"MaterialFormFieldAppearance.FORM_FIELD_APPEARANCE\">\n                    <mat-label>Select meter</mat-label>\n                    <mat-select (selectionChange)=\"meterChange($event.value)\" [formControl]=\"meterFC\" required>\n                        <ng-container\n                            *ngIf=\"entityDeviceM && entityDeviceM.length > 0 && entityDeviceM?.[0]?.id; else noDataFound\">\n                            <mat-option>\n                                <ngx-mat-select-search [formControl]=\"meterSearchUtil.filterFC\"\n                                    placeholderLabel=\"Search by entity name\"\n                                    noEntriesFoundLabel=\"No matching name found.\">\n                                </ngx-mat-select-search>\n                            </mat-option>\n                            <mat-optgroup *ngFor=\"let entity of meterSearchUtil.filteredEntities | async\"\n                                [label]=\"entity.name\" [disabled]=\"entity.disabled\">\n                                <mat-option *ngFor=\"let device of entity.devices\" [value]=\"device.id\">\n                                    {{ device.name }}\n                                </mat-option>\n                            </mat-optgroup>\n                        </ng-container>\n                        <ng-template #noDataFound>\n                            <mat-option disabled>\n                                {{ COMMON_CONSTANT.NO_DATA_FOUND }}\n                            </mat-option>\n                        </ng-template>\n                    </mat-select>\n                    <mat-error *ngIf=\"meterFC.touched && meterFC.hasError('required')\">\n                        {{ FormErrorEnum.REQUIRED }}\n                    </mat-error>\n                </mat-form-field>\n            </div>\n        </div>\n\n        <div class=\"row mt-2\">\n            <div class=\"col-sm-12\">\n                <lib-message-alert *ngIf=\"alertObj.showAlert\" [labelInp]=\"alertObj.alertLabel\"\n                    [contentInp]=\"alertObj.alertContent\" [messageAlertTypeInp]=\"alertObj.messageAlertType\"\n                    [messageAlertIconInp]=\"alertObj.messageAlertIcon\">\n                </lib-message-alert>\n            </div>\n        </div>\n\n        <div class=\"row mt-2\">\n            <ng-container *ngIf=\"showLoader; else dataTemplate\">\n                <lib-skeleton-loader [count]=\"3\" [appearance]=\"''\"\n                    [theme]=\"{ 'border-radius': '16px', height: '40px', 'background-color': 'rgb(230 232 235)' }\"></lib-skeleton-loader>\n            </ng-container>\n            <ng-template #dataTemplate>\n                <div class=\"col-sm-4 mb-3\" *ngFor=\"let meterData of meterDataRes\">\n                    <mat-card class=\"cardOverwrite cardBackgroundColor\">\n                        <ng-container *ngTemplateOutlet=\"parameterData; context: {\n                            duration: last48HrsMeterData && last48HrsMeterData[meterData.paramName]?.data?.date ? dateService.getRelativeTimeAgoLabel(last48HrsMeterData[meterData.paramName]?.data?.date, timezone) : dateService.getRelativeTimeAgoLabel(meterData?.data?.date, timezone),\n                            value: last48HrsMeterData && last48HrsMeterData[meterData.paramName]?.data?.value != null ? last48HrsMeterData[meterData.paramName]?.data?.value : meterData?.data?.value,\n                            unit: meterData?.unit,\n                            label: meterData?.paramLabel,\n                            entityID: meterData?.entityID,\n                            paramName: meterData?.paramName,\n                            status: meterData?.status\n                        }\"></ng-container>\n                    </mat-card>\n                </div>\n            </ng-template>\n        </div>\n\n    </div>\n</div>\n\n<ng-template #parameterData let-duration=\"duration\" let-label=\"label\" let-value=\"value\" let-unit=\"unit\"\n    let-entityID=\"entityID\" let-paramName=\"paramName\" let-status=\"status\">\n    <div class=\"row\">\n        <div class=\"col-sm-6 textDurationWithAgoTime\">\n            {{ duration }}\n        </div>\n        <div class=\"col-sm-6 text-end\">\n            <a *ngIf=\"status == 'OFFLINE'\" class=\"text-secondary cursorPointer me-2\"\n                matTooltip=\"Currently parameter is offline, click here to see data of last 48 hrs.\"\n                matTooltipPosition=\"below\" (click)=\"getLast48HrsMeterData(paramName)\">\n                <span class=\"material-symbols-outlined fs-5 fw-bold\">devices</span>\n            </a>\n            <a class=\"text-primary cursorPointer\" matTooltip=\"Trend\" matTooltipPosition=\"below\"\n                (click)=\"showTrend(paramName, entityID)\">\n                <span class=\"material-symbols-outlined fs-5 fw-bold\">trending_up</span>\n            </a>\n        </div>\n    </div>\n    <div class=\"row mt-3\">\n        <div class=\"col-sm-12 text-center\">\n            <span class=\"fs-1 fw-bold text-primary\">{{ value != null && value != undefined ? (value | number: '1.2-2' ||\n                COMMON_CONSTANT.HYPHEN) : COMMON_CONSTANT.HYPHEN }}</span>\n            <span class=\"text-secondary fw-bold\"> {{ value ? unit : '' }} </span>\n        </div>\n    </div>\n    <div class=\"row mt-4 mb-4\">\n        <div class=\"col-sm-12 fs-5 text-center\">\n            {{ label }}\n        </div>\n    </div>\n</ng-template>","import { NgModule } from '@angular/core';\nimport { RouterModule, Routes } from '@angular/router';\n\nimport { MeterDataDashboardComponent } from './meter-data.component';\n\nconst routes: Routes = [\n    {\n        path: '',\n        component: MeterDataDashboardComponent\n    }\n];\n\n@NgModule({\n    imports: [RouterModule.forChild(routes)],\n    exports: [RouterModule]\n})\nexport class MeterDataRoutingModule { }\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\n\nimport { MatCardModule } from '@angular/material/card';\nimport { MatTooltipModule } from '@angular/material/tooltip';\nimport { MatInputModule } from '@angular/material/input';\nimport { MatFormFieldModule } from '@angular/material/form-field';\nimport { MatSelectModule } from '@angular/material/select';\n\nimport { NgxMatSelectSearchModule } from 'ngx-mat-select-search';\n\nimport { TrendModule } from '../../_shared/dialog/trend/trend.module';\nimport { TrendService } from '../../../service/trend.service';\n\nimport { MeterDataRoutingModule } from './meter-data-routing.module';\nimport { MeterDataDashboardComponent } from './meter-data.component';\n\n// tsc-library\nimport { MessageAlertModule, SkeletonModule } from '@library/tsc-common';\n// /tsc-library/\n\n\n@NgModule({\n    declarations: [\n        MeterDataDashboardComponent\n    ],\n    imports: [\n        CommonModule,\n        MeterDataRoutingModule,\n        FormsModule,\n        ReactiveFormsModule,\n        MatCardModule,\n        MatTooltipModule,\n        MatInputModule,\n        MatFormFieldModule,\n        MatSelectModule,\n        NgxMatSelectSearchModule,\n        TrendModule,\n        MessageAlertModule,\n        SkeletonModule\n    ],\n    providers: [TrendService]\n})\nexport class MeterDataDashboardModule { }\n","import { NgModule } from '@angular/core';\nimport { RouterModule, Routes } from '@angular/router';\n\nconst routes: Routes = [];\n\n@NgModule({\n    imports: [RouterModule.forChild(routes)],\n    exports: [RouterModule]\n})\nexport class ParameterTabRoutingModule { }\n","import { Component, OnInit } from '@angular/core';\n\nimport { NavigationEnd, Router } from '@angular/router';\n\n@Component({\n    selector: 'lib-tab',\n    templateUrl: './tab.component.html',\n    styles: [\n    ]\n})\n\nexport class ParameterTabComponent implements OnInit {\n\n    orgID: any;\n    activeLink: any;\n\n    tab: any = [];\n\n    constructor(\n        private router: Router,\n    ) { }\n\n    ngOnInit(): void {\n        this.tab = [\n            {\n                icon: 'stacked_line_chart',\n                label: 'By Entity',\n                routerLink: '/dashboard/all-parameters',\n            },\n            {\n                icon: 'show_chart',\n                label: 'By parameter',\n                routerLink: '/dashboard/single-parameter',\n            }\n        ];\n\n        this.setActiveLink();\n\n        this.router.events.subscribe((val) => {\n            if (val instanceof NavigationEnd) {\n                this.setActiveLink();\n            }\n        });\n    }\n\n    setActiveLink(): void {\n        let currentPath = window.location.pathname;\n\n        for (let i = 0; i < this.tab.length; i++) {\n            if (currentPath.includes(this.tab[i].routerLink)) {\n                this.activeLink = this.tab[i].routerLink;\n                break;\n            }\n        }\n    }\n\n}\n","<div class=\"card main-card cardOverwrite h100\">\n    <div class=\"headerContainer\">\n        <div class=\"headerLeftContainer\">\n            <div class=\"pageTitle\">Parameter Dashboard</div>\n        </div>\n    </div>\n\n    <nav mat-tab-nav-bar>\n        <ng-container *ngFor=\"let tabs of tab; let i = index;\">\n            <a mat-tab-link [routerLink]=\"tabs.routerLink\" (click)=\"activeLink = tabs.routerLink\"\n                [active]=\"activeLink == tabs.routerLink\">\n                <div class=\"d-flex align-items-center\">\n                    <span class=\"material-symbols-outlined me-2\">\n                        {{ tabs.icon }}\n                    </span>\n                    {{ tabs.label }}\n                </div>\n            </a>\n        </ng-container>\n    </nav>\n    <router-outlet></router-outlet>\n\n</div>","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { MatTabsModule } from '@angular/material/tabs';\n\nimport { NgbModule } from '@ng-bootstrap/ng-bootstrap';\n\nimport { ParameterTabRoutingModule } from './tab-routing.module';\nimport { ParameterTabComponent } from './tab.component';\n\n\n@NgModule({\n    declarations: [\n        ParameterTabComponent\n    ],\n    imports: [\n        CommonModule,\n        ParameterTabRoutingModule,\n        MatTabsModule,\n        NgbModule\n    ]\n})\nexport class ParameterTabModule { }\n","import { Component, OnInit, ViewChild } from '@angular/core';\nimport { MatDialog } from '@angular/material/dialog';\n\nimport * as moment from 'moment';\n\nimport { Alert, AlertM } from '../../../../model/alert.model';\nimport { EntityWithChildren, EntityWithChildrenM } from '../../../../model/entity.model';\n\nimport { DashboardErrorEnum, ReportErrorEnum } from '../../../../enum/error.enum';\n\nimport { AggregationDurationComponent } from '../../../dropdown/aggregation-duration/aggregation-duration.component';\nimport { EntityTypeComponent } from '../../../dropdown/entity-type/entity-type.component';\nimport { EntityDialogComponent } from '../../../_shared/dialog/entity/entity.component';\n\nimport { EntityController } from '../../../../controller/entity.controller';\nimport { AggregateDataController } from '../../../../controller/aggregate-data.controller';\n\nimport { AlertService } from '../../../../service/alert.service';\n\n// tsc-library\nimport { StorageService } from '@library/storage-service';\nimport { ButtonLabelEnum, COMMON_CONSTANT, InvalidForm, MATERIAL_CONSTANT, MaterialFormFieldAppearance, MessageAlertIconEnum, MessageAlertTypeEnum } from '@library/tsc-common';\nimport { CUSTOM_RANGE_CONSTANT_EXCLUSIVE_DATE, DateFormatEnum, DateInputComponent, DateInputTypeEnum, DateTypeEnum } from '@library/date';\nimport { ToastrColor, ToastrService } from '@library/toastr-service';\nimport { BasicAreaLineBarChart, ChartTitle, ChartTypeEnum, ChartViewStateEnum } from '@library/echart';\nimport { FormControl, Validators } from '@angular/forms';\n// /tsc-library/\n\n@Component({\n    selector: 'lib-by-entity',\n    templateUrl: './by-entity.component.html',\n    styleUrls: ['./by-entity.component.scss']\n})\nexport class ByEntityComponent implements OnInit {\n\n    materialConstant = MATERIAL_CONSTANT;\n    commonConstant = COMMON_CONSTANT;\n    customRangeConstant = CUSTOM_RANGE_CONSTANT_EXCLUSIVE_DATE;\n\n    materialFormFieldAppearance = MaterialFormFieldAppearance;\n    dateFormatEnum = DateFormatEnum;\n    dateInputTypeEnum = DateInputTypeEnum;\n    dateTypeEnum = DateTypeEnum;\n    buttonLabelEnum = ButtonLabelEnum;\n\n    orgID: any;\n    timezone: string;\n    startDate: string;\n    endDate: string;\n    aggDuration: string;\n    entityType: string;\n    entityID: any;\n    selectEntityType: boolean = false;\n    isViewData: boolean = false;\n    showAlert: boolean = false;\n    showLoader: boolean = false;\n\n    entityByEntityTypeM = [new EntityWithChildren()];\n    alertObj: AlertM = new Alert();\n\n    entityFC: FormControl = new FormControl([], [Validators.required]);\n\n    chartType: string = ChartTypeEnum.BASIC_LINE_CHART;\n    viewStateFlag: string = ChartViewStateEnum.LOADING;\n    chartTitle = new ChartTitle();\n    chartData: BasicAreaLineBarChart[] = [];\n\n    @ViewChild('customDateInput') customDateInput: DateInputComponent;\n    @ViewChild('aggDurationInput') aggDurationInput: AggregationDurationComponent;\n    @ViewChild('entityTypeInput') entityTypeInput: EntityTypeComponent;\n\n    constructor(\n        private storageService: StorageService,\n        private alertService: AlertService,\n        private toastService: ToastrService,\n        private entityController: EntityController,\n        private aggregateDataController: AggregateDataController,\n        private dialog: MatDialog,\n    ) { }\n\n    ngOnInit(): void {\n        this.orgID = this.storageService.getStorage('currentOrgID');\n        this.timezone = this.storageService.getStorage('timezone');\n    }\n\n    dateInpChange() {\n        this.startDate = this.customDateInput.startDateFC.value;\n        this.endDate = this.customDateInput.endDateFC.value;\n    }\n\n    aggDurationInpChange() {\n        this.aggDuration = this.aggDurationInput.aggDurationFC.value;\n    }\n\n    entityTypeInpChange() {\n        this.entityType = this.entityTypeInput.entityTypeFC.value;\n\n        this.entityFC.reset([]);\n        this.getEntitiesByEntityType(this.entityType);\n    }\n\n    getEntitiesByEntityType(entityType) {\n        let requestBody = {};\n        requestBody['entityType'] = [entityType];\n\n        this.entityController.getEntitiesByEntityType(this.orgID, requestBody)\n            .subscribe((res: EntityWithChildrenM) => {\n                this.entityByEntityTypeM = [res];\n            },\n                error => {\n                    console.log('error in getEntitiesByEntityType() - ', error);\n                });\n    }\n\n    openEntityDialog() {\n        if (this.entityType) {\n            const dialog = this.dialog.open(EntityDialogComponent,\n                {\n                    data: {\n                        entityType: this.entityTypeInput.entityTypeFC.value,\n                        entityObject: this.entityByEntityTypeM\n                    },\n                    width: '50vw',\n                    height: '100%',\n                    position: { right: '-2px', top: '0px' },\n                });\n            dialog.afterClosed().subscribe((dialogRes) => {\n                if (dialogRes.entityID) {\n                    this.entityID = dialogRes.entityID;\n                    this.entityFC.patchValue(this.entityID)\n                }\n            })\n        } else {\n            this.selectEntityType = true;\n        }\n    }\n\n    viewEntityParameterData() {\n        this.chartData = [];\n        this.isViewData = true;\n        this.alertService.resetAlertProperties(this.alertObj);\n\n        if (this.isValidInputField()) {\n            this.toastService.openToast(InvalidForm.INVALID_FORM_TITLE, InvalidForm.INVALID_FORM_MESSAGE, ToastrColor.ERROR);\n            return;\n        } \n\n        if (this.startDate == this.endDate) {\n            this.alertService.setAlertProperties(this.alertObj, ReportErrorEnum.INVALID_DATE_LABEL, ReportErrorEnum.INVALID_DATE_MESSAGE, MessageAlertTypeEnum.INFO, MessageAlertIconEnum.INFO_ICON);\n            return;\n        }\n\n        this.showLoader = true;\n\n        try {\n            const requestData = this.createDataRequest();\n\n            this.aggregateDataController.getEntityParameterData(this.orgID, requestData)\n                .subscribe((entityParamRes: any) => {\n\n                    let entityParameterData = entityParamRes?.paramData;\n                    this.showLoader = false;\n\n                    if (entityParameterData && entityParameterData.every(item => item.data.length == 0 )) {\n                        this.alertService.setAlertProperties(this.alertObj, DashboardErrorEnum.DATA_NOT_FOUND_LABEL, DashboardErrorEnum.DATA_NOT_FOUND_MESSAGE, MessageAlertTypeEnum.WARNING, MessageAlertIconEnum.WARNING_ICON);\n                    } else {\n                        this.viewStateFlag = ChartViewStateEnum.HAS_DATA;\n                        this.chartData = [];\n\n                        entityParameterData.forEach((res) => {\n                            if (res.data.length > 0) {\n\n                                const newChartdata: BasicAreaLineBarChart = new BasicAreaLineBarChart();\n\n                                newChartdata.metaData = res.data.map(item => ({\n                                    name: moment(new Date(item.date)).format(\"YYYY-MM-DD HH:mm:ss\"),\n                                    value: item.value\n                                }));\n                                newChartdata.unit = {\n                                    name: '',\n                                    code: res.unit,\n                                };\n                                newChartdata.markLine = [\n                                    {\n                                        label: 'Avg',\n                                        value: res.avgValue,\n                                        color: '#e83e8c'\n                                    },\n                                    {\n                                        label: 'Max',\n                                        value: res.maxValue,\n                                        color: '#e83e8c'\n                                    }\n                                ]\n                                newChartdata.yAxisLabel = res.label + ' (' + res.unit + ')';\n                                newChartdata.yAxisNameGap = 25;\n                                newChartdata.showDataView = true;\n                                newChartdata.showMagicType = true;\n                                newChartdata.showRestore = true;\n                                newChartdata.showDownloadImage = true;\n                                newChartdata.chartTitle = {\n                                    name: res.label,\n                                    color: 'gray'\n                                }\n\n                                this.chartData.push(newChartdata);\n                            }\n                        });\n                    }\n\n                },\n                    error => {\n                        console.log('error in viewParameterData() - ', error);\n                        this.alertService.setAlertProperties(this.alertObj, DashboardErrorEnum.INVALID_ERROR_LABEL, DashboardErrorEnum.INVALID_ERROR_MESSAGE, MessageAlertTypeEnum.DANGER, MessageAlertIconEnum.DANGER_ICON);\n                        throw error;\n                    });\n\n        } catch (error) {\n\n            console.error(`Error in viewEntityParameterData()`, error);\n            this.alertService.setAlertProperties(this.alertObj, DashboardErrorEnum.INVALID_ERROR_LABEL, DashboardErrorEnum.INVALID_ERROR_MESSAGE, MessageAlertTypeEnum.DANGER, MessageAlertIconEnum.DANGER_ICON);\n\n        } finally {\n            this.showLoader = false;\n        }\n    }\n\n    isValidInputField() {\n        const controls = [\n            this.customDateInput.startDateFC,\n            this.aggDurationInput.aggDurationFC,\n            this.entityTypeInput.entityTypeFC,\n            this.entityFC\n        ];\n\n        controls.forEach(control => control.markAsTouched());\n        return controls.some(control => control.invalid);\n    }\n\n    createDataRequest() {\n        const requestData = {};\n\n        requestData['startTime'] = this.startDate;\n        requestData['endTime'] = this.endDate;\n        requestData['interval'] = this.aggDuration;\n        requestData['entityID'] = [this.entityID];\n        requestData['entityType'] = [this.entityTypeInput.entityTypeFC.value];\n\n        return requestData;\n    }\n\n}\n","<div class=\"card main-card cardOverwrite h100\">\n    <div class=\"headerContainer\">\n        <div class=\"headerLeftContainer\">\n            <div class=\"pageTitle\">By Entity</div>\n        </div>\n    </div>\n\n    <div class=\"card-body\">\n        <div class=\"row\">\n            <div class=\"col-sm-3\">\n                <lib-date-input #customDateInput (emitFilter)=\"dateInpChange()\" [materialFieldWidthInp]=\"true\"\n                    [materialFormFieldAppearanceInp]=\"materialFormFieldAppearance.FORM_FIELD_APPEARANCE\" [isMandatoryFieldInp]=\"true\"\n                    [dateInputTypeInp]=\"dateInputTypeEnum.CUSTOM_INPUT\" [dateTypeInp]=\"dateTypeEnum.EXCLUSIVE\"\n                    [showDefaultDurationInp]=\"true\" [showCdrRangeLabelInp]=\"true\" [labelInp]=\"'Select date'\" [timezoneInp]=\"timezone\"\n                    [rangeInp]=\"customRangeConstant\" [showTimeInCDRInp]=\"true\" [showRangeInp]=\"true\"\n                    [cdrFormatInp]=\"'YYYY-MM-DD HH:mm:ss'\"></lib-date-input>\n            </div>\n\n            <div class=\"col-sm-3\">\n                <lib-aggregation-duration #aggDurationInput (emitFilter)=\"aggDurationInpChange()\"></lib-aggregation-duration>\n            </div>\n            \n            <div class=\"col-sm-3\">\n                <lib-entity-type #entityTypeInput (emitFilter)=\"entityTypeInpChange()\"></lib-entity-type>\n            </div>\n\n            <div class=\"col-sm-3\">\n                <button class=\"btn btn-link selectEntityText\" [ngClass]=\"{'mt-2': !selectEntityType || (isViewData && entityFC.value.length == 0)}\" type=\"button\"\n                    (click)=\"openEntityDialog()\">\n                    Select entity *\n                </button>\n                <span class=\"textMatError\" *ngIf=\"selectEntityType\">\n                    <br />\n                    Please select entity type first\n                </span>\n                <span class=\"ms-2 textMatError\" *ngIf=\"!selectEntityType && isViewData && entityFC.value.length == 0\">\n                    <br />\n                    Select entity\n                </span>\n            </div>\n        </div>\n\n        <div class=\"row\">\n            <div class=\"col-sm-12\">\n                <div class=\"float-end\">\n                    <button class=\"btn btn-sm btn-primary\" type=\"button\" (click)=\"viewEntityParameterData()\" matRipple\n                        [matRippleCentered]=\"materialConstant.MAT_RIPPLE_CENTER\">\n                        {{ buttonLabelEnum.READ_BTN_LABEL }}\n                    </button>\n                </div>\n            </div>\n        </div>\n\n        <div class=\"row mt-2\">\n            <div class=\"col-sm-12\">\n                <lib-message-alert *ngIf=\"alertObj.showAlert\" [labelInp]=\"alertObj.alertLabel\"\n                    [contentInp]=\"alertObj.alertContent\" [messageAlertTypeInp]=\"alertObj.messageAlertType\"\n                    [messageAlertIconInp]=\"alertObj.messageAlertIcon\">\n                </lib-message-alert>\n            </div>\n        </div>\n\n        <div class=\"row mt-2\">\n            <ng-container *ngIf=\"showLoader; else dataTemplate\">\n                <lib-skeleton-loader [count]=\"3\" [appearance]=\"''\"\n                    [theme]=\"{ 'border-radius': '16px', height: '40px', 'background-color': 'rgb(230 232 235)' }\"></lib-skeleton-loader>\n            </ng-container>\n\n            <ng-template #dataTemplate>\n                <div class=\"row\" *ngIf=\"chartData.length > 0\">\n                    <div class=\"col-sm-6\" *ngFor=\"let data of chartData\">\n                        <mat-card class=\"cardOverwrite cardBackgroundColor mb-3\">\n                            <lib-basic-area-line-bar [chartTypeInp]=\"chartType\" [chartTitleInp]=\"data.chartTitle\"\n                                [viewStateInp]=\"viewStateFlag\" [dataInp]=\"data\">\n                            </lib-basic-area-line-bar>\n                        </mat-card>\n                    </div>\n                </div>\n            </ng-template>\n        </div>\n    </div>\n</div>","import { NgModule } from '@angular/core';\nimport { RouterModule, Routes } from '@angular/router';\n\nimport { ByEntityComponent } from './by-entity.component';\n\nconst routes: Routes = [\n    {\n        path: '',\n        component: ByEntityComponent\n    }\n];\n\n@NgModule({\n    imports: [RouterModule.forChild(routes)],\n    exports: [RouterModule]\n})\nexport class ByEntityRoutingModule { }\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\n\nimport { MatCardModule } from '@angular/material/card';\nimport { MatRippleModule } from '@angular/material/core';\n\nimport { ByEntityRoutingModule } from './by-entity-routing.module';\nimport { ByEntityComponent } from './by-entity.component';\n\nimport { AggregationDurationModule } from '../../../dropdown/aggregation-duration/aggregation-duration.module';\nimport { EntityTypeModule } from '../../../dropdown/entity-type/entity-type.module';\nimport { EntityDialogModule } from '../../../_shared/dialog/entity/entity.module';\n\n// tsc-library\nimport { DateInputModule } from '@library/date';\nimport { MessageAlertModule, SkeletonModule } from '@library/tsc-common';\nimport { BasicAreaLineBarModule } from '@library/echart';\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\n// /tsc-library/\n\n@NgModule({\n    declarations: [\n        ByEntityComponent\n    ],\n    imports: [\n        CommonModule,\n        ByEntityRoutingModule,\n        FormsModule,\n        ReactiveFormsModule,\n        DateInputModule,\n        AggregationDurationModule,\n        EntityTypeModule,\n        EntityDialogModule,\n        MessageAlertModule,\n        SkeletonModule,\n        BasicAreaLineBarModule,\n        MatCardModule,\n        MatRippleModule\n    ]\n})\nexport class ByEntityModule { }\n","import { Component, OnInit, ViewChild } from '@angular/core';\nimport { FormControl, Validators } from '@angular/forms';\n\nimport * as moment from 'moment';\n\nimport { DashboardErrorEnum, ReportErrorEnum } from '../../../../enum/error.enum';\n\nimport { Parameter, ParameterM } from '../../../../model/parameter.model';\nimport { Alert, AlertM } from '../../../../model/alert.model';\nimport { AggregateDataRequest } from '../../../../model/aggregate-data.model';\n\nimport { AggregationDurationComponent } from '../../../dropdown/aggregation-duration/aggregation-duration.component';\nimport { EntityTypeComponent } from '../../../dropdown/entity-type/entity-type.component';\n\nimport { ParameterController } from '../../../../controller/parameter.controller';\n\nimport { AggregateDataService } from '../../../../service/aggregate-data.service';\nimport { AlertService } from '../../../../service/alert.service';\nimport { ParameterService } from '../../../../service/parameter.service';\n\n// tsc-library\nimport { StorageService } from '@library/storage-service';\nimport { ButtonLabelEnum, COMMON_CONSTANT, FormErrorEnum, InvalidForm, MATERIAL_CONSTANT, MatSelectSearchService, MaterialFormFieldAppearance, MessageAlertIconEnum, MessageAlertTypeEnum, TSCCommonService } from '@library/tsc-common';\nimport { CUSTOM_RANGE_CONSTANT_EXCLUSIVE_DATE, DateFormatEnum, DateInputComponent, DateInputTypeEnum, DateTypeEnum } from '@library/date';\nimport { ToastrColor, ToastrService } from '@library/toastr-service';\nimport { BasicAreaLineBarChart, ChartTitle, ChartTypeEnum, ChartViewStateEnum } from '@library/echart';\n// /tsc-library/\n\n@Component({\n    selector: 'lib-by-parameter',\n    templateUrl: './by-parameter.component.html',\n    styles: [\n    ]\n})\nexport class ByParameterComponent implements OnInit {\n\n    materialConstant = MATERIAL_CONSTANT;\n    commonConstant = COMMON_CONSTANT;\n    customRangeConstant = CUSTOM_RANGE_CONSTANT_EXCLUSIVE_DATE;\n\n    buttonLabelEnum = ButtonLabelEnum;\n    materialFormFieldAppearance = MaterialFormFieldAppearance;\n    dateFormatEnum = DateFormatEnum;\n    dateInputTypeEnum = DateInputTypeEnum;\n    dateTypeEnum = DateTypeEnum;\n    FormErrorEnum = FormErrorEnum;\n\n    orgID: any;\n    timezone: string;\n    startDate: string;\n    endDate: string;\n    aggDuration: string;\n    entityType: string;\n    entityID: any;\n    showAlert: boolean = false;\n    showLoader: boolean = false;\n\n    parameterM = [new Parameter()];\n    parameterByEntityTypeM = [new Parameter()];\n    alertObj: AlertM = new Alert();\n\n    parameterFC: FormControl = new FormControl('', [Validators.required]);\n    parameterSearchUtil: MatSelectSearchService = new MatSelectSearchService(['label']);\n\n    chartType: string = ChartTypeEnum.BASIC_LINE_CHART;\n    viewStateFlag: string = ChartViewStateEnum.LOADING;\n    chartTitle = new ChartTitle();\n    chartData: BasicAreaLineBarChart[] = [];\n\n    @ViewChild('customDateInput') customDateInput: DateInputComponent;\n    @ViewChild('aggDurationInput') aggDurationInput: AggregationDurationComponent;\n    @ViewChild('entityTypeInput') entityTypeInput: EntityTypeComponent;\n\n    constructor(\n        private storageService: StorageService,\n        private alertService: AlertService,\n        private toastService: ToastrService,\n        private parameterController: ParameterController,\n        private parameterService: ParameterService,\n        private aggregateDataService: AggregateDataService,\n        private tscCommonService: TSCCommonService,\n    ) { }\n\n    ngOnInit(): void {\n        this.orgID = this.storageService.getStorage('currentOrgID');\n        this.timezone = this.storageService.getStorage('timezone');\n    }\n\n    async getParameterByLayoutID() {\n        this.parameterM = <ParameterM[]>await this.parameterService.getParameterByLayoutID(this.orgID);\n    }\n\n    dateInpChange() {\n        this.startDate = this.customDateInput.startDateFC.value;\n        this.endDate = this.customDateInput.endDateFC.value;\n    }\n\n    aggDurationInpChange() {\n        this.aggDuration = this.aggDurationInput.aggDurationFC.value;\n    }\n\n    entityTypeInpChange() {\n        this.entityType = this.entityTypeInput.entityTypeFC.value;\n\n        this.getParameterByEntityType(this.entityType);\n    }\n\n    getParameterByEntityType(entityType) {\n        let requestBody = {};\n        requestBody['entityType'] = [entityType];\n\n        this.parameterController.getParameterByEntityType(this.orgID, requestBody)\n            .subscribe((res: ParameterM[]) => {\n                this.parameterByEntityTypeM = res;\n\n                this.parameterSearchUtil.entityArr = this.parameterByEntityTypeM;\n                this.parameterSearchUtil.createSubscription();\n            },\n                error => {\n                    console.log('error in getParameterByEntityType() - ', error);\n                });\n    }\n\n    onParameterChange(selectedParameter) {\n        this.parameterFC.patchValue(selectedParameter);\n    }\n\n    async viewParameterData() {\n        this.chartData = [];\n        this.alertService.resetAlertProperties(this.alertObj);\n\n        if (this.isValidInputField()) {\n            this.toastService.openToast(InvalidForm.INVALID_FORM_TITLE, InvalidForm.INVALID_FORM_MESSAGE, ToastrColor.ERROR);\n            return;\n        }\n\n        if (this.startDate == this.endDate) {\n            this.alertService.setAlertProperties(this.alertObj, ReportErrorEnum.INVALID_DATE_LABEL, ReportErrorEnum.INVALID_DATE_MESSAGE, MessageAlertTypeEnum.INFO, MessageAlertIconEnum.INFO_ICON);\n            return;\n        }\n\n        this.showLoader = true;\n\n        try {\n            const requestData = this.createDataRequest();\n            const aggregateRes = await this.aggregateDataService.getAggregateData(this.orgID, requestData);\n\n            this.showLoader = false;\n\n            if (aggregateRes && aggregateRes.every(item => item.data.length == 0 )) {\n                this.alertService.setAlertProperties(this.alertObj, DashboardErrorEnum.DATA_NOT_FOUND_LABEL, DashboardErrorEnum.DATA_NOT_FOUND_MESSAGE, MessageAlertTypeEnum.WARNING, MessageAlertIconEnum.WARNING_ICON);\n            } else {\n                this.viewStateFlag = ChartViewStateEnum.HAS_DATA;\n                this.chartData = [];\n\n                aggregateRes.forEach((res) => {\n                    if (res.data.length > 0) {\n\n                        const newChartdata: BasicAreaLineBarChart = new BasicAreaLineBarChart();\n\n                        newChartdata.metaData = res.data.map(item => ({\n                            name: moment(new Date(item.date)).format(\"YYYY-MM-DD HH:mm:ss\"),\n                            value: item.value\n                        }));\n                        newChartdata.unit = {\n                            name: '',\n                            code: res.unit,\n                        };\n                        newChartdata.yAxisLabel = res.paramLabel + ' (' + res.unit + ')';\n                        newChartdata.showDataView = true;\n                        newChartdata.showMagicType = true;\n                        newChartdata.showRestore = true;\n                        newChartdata.showDownloadImage = true;\n                        newChartdata.chartTitle = {\n                            name: res.entityName,\n                            color: 'gray'\n                        }\n\n                        this.chartData.push(newChartdata);\n                    }\n                });\n            }\n\n        } catch (error) {\n\n            console.error(`Error in getAggregateData()`, error);\n            this.alertService.setAlertProperties(this.alertObj, DashboardErrorEnum.INVALID_ERROR_LABEL, DashboardErrorEnum.INVALID_ERROR_MESSAGE, MessageAlertTypeEnum.DANGER, MessageAlertIconEnum.DANGER_ICON);\n\n        } finally {\n            this.showLoader = false;\n        }\n    }\n\n    isValidInputField() {\n        const controls = [\n            this.customDateInput.startDateFC,\n            this.aggDurationInput.aggDurationFC,\n            this.entityTypeInput.entityTypeFC,\n            this.parameterFC\n        ];\n\n        controls.forEach(control => control.markAsTouched());\n        return controls.some(control => control.invalid);\n    }\n\n    createDataRequest() {\n\n        const requestData = new AggregateDataRequest();\n\n        const isCounterParameter = this.getCounterParameter(this.parameterFC.value);\n\n        requestData.startTime = this.startDate;\n        requestData.endTime = this.endDate;\n        requestData.interval = this.aggDuration;\n        requestData.entityType = this.entityTypeInput.entityTypeFC.value;\n        requestData.params = [\n            {\n                name: this.parameterFC.value,\n                dsAgg: \"avg\",\n                agg: \"avg\",\n                sourceLoadType: isCounterParameter ? \"all\" : null,\n                source_or_load: isCounterParameter ? \"source\" : null,\n            }\n        ];\n        requestData.nullifyParams();\n\n        return requestData;\n    }\n\n    getCounterParameter(paramMetricValue) {\n        const parameter = this.tscCommonService.getUniqueObject(this.parameterM, 'isCounter', paramMetricValue);\n        return parameter ? parameter.isCounter : false;\n    }\n\n}","<div class=\"card main-card cardOverwrite h100\">\n    <div class=\"headerContainer\">\n        <div class=\"headerLeftContainer\">\n            <div class=\"pageTitle\">By Parameter</div>\n        </div>\n    </div>\n\n    <div class=\"card-body\">\n        <div class=\"row\">\n            <div class=\"col-sm-3\">\n                <lib-date-input #customDateInput (emitFilter)=\"dateInpChange()\" [materialFieldWidthInp]=\"true\"\n                    [materialFormFieldAppearanceInp]=\"materialFormFieldAppearance.FORM_FIELD_APPEARANCE\"\n                    [isMandatoryFieldInp]=\"true\" [dateInputTypeInp]=\"dateInputTypeEnum.CUSTOM_INPUT\"\n                    [dateTypeInp]=\"dateTypeEnum.EXCLUSIVE\" [showDefaultDurationInp]=\"true\" [showCdrRangeLabelInp]=\"true\"\n                    [labelInp]=\"'Select date'\" [timezoneInp]=\"timezone\" [rangeInp]=\"customRangeConstant\"\n                    [showTimeInCDRInp]=\"true\" [showRangeInp]=\"true\"\n                    [cdrFormatInp]=\"'YYYY-MM-DD HH:mm:ss'\"></lib-date-input>\n            </div>\n\n            <div class=\"col-sm-3\">\n                <lib-aggregation-duration #aggDurationInput\n                    (emitFilter)=\"aggDurationInpChange()\"></lib-aggregation-duration>\n            </div>\n\n            <div class=\"col-sm-3\">\n                <lib-entity-type #entityTypeInput (emitFilter)=\"entityTypeInpChange()\"></lib-entity-type>\n            </div>\n\n            <div class=\"col-sm-3\">\n                <mat-form-field class=\"matFieldWidth100\"\n                    [appearance]=\"materialFormFieldAppearance.FORM_FIELD_APPEARANCE\">\n                    <mat-label>Select parameter</mat-label>\n                    <mat-select (selectionChange)=\"onParameterChange($event.value)\" [formControl]=\"parameterFC\"\n                        required>\n                        <ng-container\n                            *ngIf=\"parameterByEntityTypeM && parameterByEntityTypeM.length > 0 && parameterByEntityTypeM[0]['id']; else noDataFound\">\n                            <mat-option>\n                                <ngx-mat-select-search [formControl]=\"parameterSearchUtil.filterFC\"\n                                    placeholderLabel=\"Search by name\" noEntriesFoundLabel=\"No matching name found.\">\n                                </ngx-mat-select-search>\n                            </mat-option>\n                            <mat-option *ngFor=\"let parameter of parameterSearchUtil.filteredEntities | async\"\n                                [value]=\"parameter.paramMetric\">\n                                {{ parameter.label }}\n                            </mat-option>\n                        </ng-container>\n                        <ng-template #noDataFound>\n                            <mat-option disabled>\n                                {{ commonConstant.NO_DATA_FOUND }}\n                            </mat-option>\n                        </ng-template>\n                    </mat-select>\n                    <mat-error *ngIf=\"!entityType\">\n                        Please select entity type first\n                    </mat-error>\n                    <mat-error *ngIf=\"parameterFC.touched && parameterFC.hasError('required') && entityType\">\n                        {{ FormErrorEnum.REQUIRED }}\n                    </mat-error>\n                </mat-form-field>\n            </div>\n        </div>\n\n        <div class=\"row\">\n            <div class=\"col-sm-12\">\n                <div class=\"float-end\">\n                    <button class=\"btn btn-sm btn-primary\" type=\"button\" (click)=\"viewParameterData()\" matRipple\n                        [matRippleCentered]=\"materialConstant.MAT_RIPPLE_CENTER\">\n                        {{ buttonLabelEnum.READ_BTN_LABEL }}\n                    </button>\n                </div>\n            </div>\n        </div>\n\n        <div class=\"row mt-2\">\n            <div class=\"col-sm-12\">\n                <lib-message-alert *ngIf=\"alertObj.showAlert\" [labelInp]=\"alertObj.alertLabel\"\n                    [contentInp]=\"alertObj.alertContent\" [messageAlertTypeInp]=\"alertObj.messageAlertType\"\n                    [messageAlertIconInp]=\"alertObj.messageAlertIcon\">\n                </lib-message-alert>\n            </div>\n        </div>\n\n        <div class=\"row mt-2\">\n            <ng-container *ngIf=\"showLoader; else dataTemplate\">\n                <lib-skeleton-loader [count]=\"3\" [appearance]=\"''\"\n                    [theme]=\"{ 'border-radius': '16px', height: '40px', 'background-color': 'rgb(230 232 235)' }\"></lib-skeleton-loader>\n            </ng-container>\n\n            <ng-template #dataTemplate>\n                <div class=\"row\" *ngIf=\"chartData.length > 0\">\n                    <div class=\"col-sm-6\" *ngFor=\"let data of chartData\">\n                        <mat-card class=\"cardOverwrite cardBackgroundColor mb-3\">\n                            <lib-basic-area-line-bar [chartTypeInp]=\"chartType\" [chartTitleInp]=\"data.chartTitle\"\n                                [viewStateInp]=\"viewStateFlag\" [dataInp]=\"data\">\n                            </lib-basic-area-line-bar>\n                        </mat-card>\n                    </div>\n                </div>\n            </ng-template>\n        </div>\n\n    </div>\n</div>","import { NgModule } from '@angular/core';\nimport { RouterModule, Routes } from '@angular/router';\n\nimport { ByParameterComponent } from './by-parameter.component';\n\nconst routes: Routes = [\n    {\n        path: '',\n        component: ByParameterComponent\n    }\n];\n\n@NgModule({\n    imports: [RouterModule.forChild(routes)],\n    exports: [RouterModule]\n})\nexport class ByParameterRoutingModule { }\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\n\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\n\nimport { MatCardModule } from '@angular/material/card';\nimport { MatInputModule } from '@angular/material/input';\nimport { MatFormFieldModule } from '@angular/material/form-field';\nimport { MatSelectModule } from '@angular/material/select';\nimport { MatRippleModule } from '@angular/material/core';\n\nimport { NgxMatSelectSearchModule } from 'ngx-mat-select-search';\n\nimport { ByParameterRoutingModule } from './by-parameter-routing.module';\nimport { ByParameterComponent } from './by-parameter.component';\n\nimport { AggregationDurationModule } from '../../../dropdown/aggregation-duration/aggregation-duration.module';\nimport { EntityTypeModule } from '../../../dropdown/entity-type/entity-type.module';\n\n// tsc-library\nimport { DateInputModule } from '@library/date';\nimport { MessageAlertModule, SkeletonModule } from '@library/tsc-common';\nimport { BasicAreaLineBarModule } from '@library/echart';\n// /tsc-library/\n\n@NgModule({\n    declarations: [\n        ByParameterComponent\n    ],\n    imports: [\n        CommonModule,\n        ByParameterRoutingModule,\n        DateInputModule,\n        AggregationDurationModule,\n        EntityTypeModule,\n        MessageAlertModule,\n        SkeletonModule,\n        BasicAreaLineBarModule,\n        FormsModule,\n        ReactiveFormsModule,\n        MatCardModule,\n        MatInputModule,\n        MatFormFieldModule,\n        MatSelectModule,\n        MatRippleModule,\n        NgxMatSelectSearchModule\n    ]\n})\nexport class ByParameterModule { }\n","import { Component, EventEmitter, Input, OnInit, Output, SimpleChanges } from '@angular/core';\nimport { FormControl } from '@angular/forms';\n\nimport { LIST_CONSTANT } from '../../../../constant/list.constant';\n\n@Component({\n    selector: 'lib-source-load',\n    templateUrl: './source-load.component.html',\n    styles: [\n    ]\n})\nexport class SourceLoadComponent implements OnInit {\n\n    @Input()\n    defaultCategoryInp: string;\n\n    listConstant = LIST_CONSTANT;\n\n    categoryFC = new FormControl(\"source\");\n\n    @Output()\n    emitFilter = new EventEmitter();\n\n    constructor() { }\n\n    ngOnInit(): void {\n    }\n\n    ngOnChanges(changes: SimpleChanges): void {\n        if (changes.defaultCategoryInp && this.defaultCategoryInp) {\n            this.categoryFC.patchValue(this.defaultCategoryInp);\n        }\n    }\n\n    ngAfterViewInit() {\n        this.emitFilter.emit();\n    }\n\n    categoryChange(selectedCategory) {\n        this.categoryFC.patchValue(selectedCategory);\n        this.emitFilter.emit();\n    }\n\n}\n","<mat-button-toggle-group class=\"matBtnFilter\" [formControl]=\"categoryFC\" (change)=\"categoryChange(categoryFC.value)\">\n    <mat-button-toggle *ngFor=\"let category of listConstant.SOURCE_LOAD\" value=\"{{ category.value }}\">\n        {{ category.label }}\n    </mat-button-toggle>\n</mat-button-toggle-group>","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { ReactiveFormsModule, FormsModule } from '@angular/forms';\n\nimport { MatInputModule } from '@angular/material/input';\nimport { MatButtonToggleModule } from '@angular/material/button-toggle';\n\nimport { SourceLoadComponent } from './source-load.component';\n\n@NgModule({\n    declarations: [\n        SourceLoadComponent\n    ],\n    imports: [\n        CommonModule,\n        FormsModule,\n        ReactiveFormsModule,\n        MatInputModule,\n        MatButtonToggleModule\n    ],\n    exports: [\n        SourceLoadComponent\n    ]\n})\nexport class SourceLoadModule { }\n","import { Inject, Injectable } from \"@angular/core\";\n\nimport { HttpClient, HttpResponse } from \"@angular/common/http\";\n\nimport * as moment from 'moment';\n\nimport { ReportErrorEnum } from \"../enum/error.enum\";\nimport { Alert, AlertM } from \"../model/alert.model\";\n\nimport { AlertService } from \"./alert.service\";\n\n// tsc-library\nimport { COMMON_CONSTANT, MessageAlertIconEnum, MessageAlertTypeEnum } from \"@library/tsc-common\";\nimport { DateService } from \"@library/date\";\n// /tsc-library/\n\n@Injectable({\n    providedIn: 'root'\n})\n\nexport class ReportService {\n\n    reportAlertObj: AlertM = new Alert();\n\n    constructor(\n        private http: HttpClient,\n        private dateService: DateService,\n        private alertService: AlertService,\n        @Inject('environment') private environment: any\n    ) { }\n\n    extractTimestamp(dataInp) {\n        if (!dataInp) {\n            return [];\n        }\n\n        const allTimestamp = dataInp.reduce((timestamps, dataValues) => {\n            if (dataValues && dataValues.data) {\n                dataValues.data.forEach(entry => {\n                    if (entry && entry.date) {\n                        timestamps.add(entry.date);\n                    }\n                });\n            }\n            return timestamps;\n        }, new Set<string>());\n\n        return Array.from(allTimestamp).sort();\n    }\n\n    populateTable(timestamp, dataInp, format): any[] {\n        return timestamp.map((time, index) => ({\n            index: index + 1,\n            time: this.dateService.formatDate(time, format),\n            data: dataInp.map(aggregation => {\n                const matchingEntry = aggregation.data.find(entry => entry.date == time);\n                return matchingEntry ? matchingEntry.value : COMMON_CONSTANT.HYPHEN;\n            })\n        }));\n    }\n\n    async downloadReport(orgID, requestData) {\n        const url = `${this.environment.TSC_COMMON_API_URL}public/organizations/${orgID}/report`;\n\n        try {\n            const response: HttpResponse<Blob> = await this.http.post(url, requestData, { observe: 'response', responseType: 'blob' }).toPromise();\n\n            if (response && response.body) {\n                const blob = new Blob([response.body], { type: response.headers.get('Content-Type') });\n                const downloadLink = document.createElement('a');\n                const currentDate = moment().format('DD MMM YYYY HH:mm');\n                downloadLink.href = window.URL.createObjectURL(blob);\n                downloadLink.download = requestData.reportName + \"_\" + currentDate + \".\" + requestData.reportFormat;\n                document.body.appendChild(downloadLink);\n                downloadLink.click();\n                document.body.removeChild(downloadLink);\n            } else {\n                this.alertService.setAlertProperties(this.reportAlertObj, ReportErrorEnum.DATA_NOT_FOUND_LABEL, ReportErrorEnum.DATA_NOT_FOUND_MESSAGE, MessageAlertTypeEnum.WARNING, MessageAlertIconEnum.WARNING_ICON);\n            }\n        } catch (error) {\n            this.alertService.setAlertProperties(this.reportAlertObj, ReportErrorEnum.INVALID_ERROR_LABEL, ReportErrorEnum.INVALID_ERROR_MESSAGE, MessageAlertTypeEnum.DANGER, MessageAlertIconEnum.DANGER_ICON);\n        }\n    }\n\n    async downloadConsumptionReport(orgID, requestData) {\n        const url = `${this.environment.TSC_COMMON_API_URL}organizations/${orgID}/meter-report`;\n\n        try {\n            const response: HttpResponse<Blob> = await this.http.post(url, requestData, { observe: 'response', responseType: 'blob' }).toPromise();\n\n            if (response && response.body) {\n                const blob = new Blob([response.body], { type: response.headers.get('Content-Type') });\n                const downloadLink = document.createElement('a');\n                const currentDate = moment().format('DD MMM YYYY HH:mm');\n                downloadLink.href = window.URL.createObjectURL(blob);\n                downloadLink.download = requestData.reportName + \"_\" + currentDate + \".\" + requestData.reportFormat;\n                document.body.appendChild(downloadLink);\n                downloadLink.click();\n                document.body.removeChild(downloadLink);\n            } else {\n                this.alertService.setAlertProperties(this.reportAlertObj, ReportErrorEnum.DATA_NOT_FOUND_LABEL, ReportErrorEnum.DATA_NOT_FOUND_MESSAGE, MessageAlertTypeEnum.WARNING, MessageAlertIconEnum.WARNING_ICON);\n            }\n        } catch (error) {\n            this.alertService.setAlertProperties(this.reportAlertObj, ReportErrorEnum.INVALID_ERROR_LABEL, ReportErrorEnum.INVALID_ERROR_MESSAGE, MessageAlertTypeEnum.DANGER, MessageAlertIconEnum.DANGER_ICON);\n        }\n    }\n\n}","import { Component, OnInit, ViewChild } from '@angular/core';\nimport { Router } from '@angular/router';\nimport { FormControl, Validators } from '@angular/forms';\n\nimport { ReportErrorEnum } from '../../../enum/error.enum';\nimport { DropdownTypeEnum } from '../../../enum/dropdown.enum';\n\nimport { ConsumptionParameterM } from '../../../model/parameter.model';\nimport { AggregateDataRequest } from '../../../model/aggregate-data.model';\nimport { Alert, AlertM } from '../../../model/alert.model';\nimport { DownloadReportRequest } from '../../../model/report.model';\n\nimport { SourceLoadComponent } from '../../_shared/filter/source-load/source-load.component';\nimport { AggregationDurationComponent } from '../../dropdown/aggregation-duration/aggregation-duration.component';\nimport { EntityComponent } from '../../dropdown/entity/entity.component';\n\nimport { AggregateDataService } from '../../../service/aggregate-data.service';\nimport { ParameterService } from '../../../service/parameter.service';\nimport { ReportService } from '../../../service/report.service';\nimport { AlertService } from '../../../service/alert.service';\n\n// tsc-library\nimport { CUSTOM_RANGE_CONSTANT_EXCLUSIVE_DATE, DateFormatEnum, DateInputComponent, DateInputTypeEnum, DateTypeEnum } from '@library/date';\nimport { StorageService } from '@library/storage-service';\nimport { ToastrColor, ToastrService } from '@library/toastr-service';\nimport { ButtonLabelEnum, COMMON_CONSTANT, FormErrorEnum, InvalidForm, MATERIAL_CONSTANT, MaterialFormFieldAppearance, MessageAlertIconEnum, MessageAlertTypeEnum, TSCCommonService } from '@library/tsc-common';\nimport { ApplicationKeyID } from '@library/application-service';\n// /tsc-library/\n\n@Component({\n    selector: 'lib-breakup',\n    templateUrl: './breakup.component.html',\n    styles: [\n    ]\n})\nexport class BreakupReportComponent implements OnInit {\n\n    MATERIAL_CONSTANT = MATERIAL_CONSTANT;\n    COMMON_CONSTANT = COMMON_CONSTANT;\n    CUSTOM_RANGE_CONSTANT = CUSTOM_RANGE_CONSTANT_EXCLUSIVE_DATE;\n\n    MaterialFormFieldAppearance = MaterialFormFieldAppearance;\n    ButtonLabelEnum = ButtonLabelEnum;\n    DropdownTypeEnum = DropdownTypeEnum;\n    DateFormatEnum = DateFormatEnum;\n    DateInputTypeEnum = DateInputTypeEnum;\n    DateTypeEnum = DateTypeEnum;\n    FormErrorEnum = FormErrorEnum;\n\n    pageTitle: string;\n\n    orgID: any;\n    applicationKeyID: string;\n    consumptionParamM: any;\n    paramMetric: any;\n    timezone: string;\n    startDate: string;\n    endDate: string;\n    aggDuration: string;\n    category: string;\n    entityID: any;\n\n    timestamp: any;\n    renderTable: any;\n    reportData: any;\n\n    showAlert: boolean = false;\n    showLoader: boolean = false;\n\n    reportAlertObj: AlertM = new Alert();\n\n    parameterFC: FormControl = new FormControl('', [Validators.required]);\n\n    @ViewChild('sourceLoadInput') sourceLoadInput: SourceLoadComponent;\n    @ViewChild('customDateInput') customDateInput: DateInputComponent;\n    @ViewChild('aggDurationInput') aggDurationInput: AggregationDurationComponent;\n    @ViewChild('entityInput') entityInput: EntityComponent;\n\n    constructor(\n        private router: Router,\n        private storageService: StorageService,\n        private toastService: ToastrService,\n        private parameterService: ParameterService,\n        private aggregateDataService: AggregateDataService,\n        private reportService: ReportService,\n        private alertService: AlertService,\n        private tscCommonService: TSCCommonService,\n    ) { }\n\n    ngOnInit(): void {\n        this.orgID = this.storageService.getStorage('currentOrgID');\n        this.timezone = this.storageService.getStorage('timezone');\n        this.applicationKeyID = this.storageService.getStorage('applicationKeyID');\n\n        if (this.applicationKeyID == ApplicationKeyID.ENERGY_KEY_ID) {\n            this.pageTitle = \"Energy Breakup Report\";\n        } else if (this.applicationKeyID == ApplicationKeyID.WATER_KEY_ID) {\n            this.pageTitle = \"Water Breakup Report\";\n        }\n\n        this.getConsumptionParameter();\n    }\n\n    async getConsumptionParameter() {\n        const consumptionParamM = <ConsumptionParameterM>await this.parameterService.getConsumptionParameter(this.orgID);\n\n        this.consumptionParamM = consumptionParamM.consumptionParameter;\n    }\n\n    sourceLoadInpChange() {\n        this.category = this.sourceLoadInput.categoryFC.value;\n\n        this.alertService.resetAlertProperties(this.reportAlertObj);\n    }\n\n    dateInpChange() {\n        this.startDate = this.customDateInput.startDateFC.value;\n        this.endDate = this.customDateInput.endDateFC.value;\n\n        this.alertService.resetAlertProperties(this.reportAlertObj);\n    }\n\n    aggDurationInpChange() {\n        this.aggDuration = this.aggDurationInput.aggDurationFC.value;\n\n        this.alertService.resetAlertProperties(this.reportAlertObj);\n    }\n\n    entityInpChange() {\n        this.entityID = this.entityInput.multipleEntityFC.value;\n\n        this.alertService.resetAlertProperties(this.reportAlertObj);\n    }\n\n    async viewReport() {\n\n        this.alertService.resetAlertProperties(this.reportAlertObj);\n\n        if (this.isValidInputField()) {\n            this.toastService.openToast(InvalidForm.INVALID_FORM_TITLE, InvalidForm.INVALID_FORM_MESSAGE, ToastrColor.ERROR);\n            return;\n        }\n\n        if (this.startDate == this.endDate) {\n            this.alertService.setAlertProperties(this.reportAlertObj, ReportErrorEnum.INVALID_DATE_LABEL, ReportErrorEnum.INVALID_DATE_MESSAGE, MessageAlertTypeEnum.INFO, MessageAlertIconEnum.INFO_ICON);\n            return;\n        }\n\n        this.showLoader = true;\n\n        try {\n            const requestData = this.createDataRequest();\n\n            this.reportData = await this.aggregateDataService.getAggregateData(this.orgID, requestData);\n\n            if (this.reportData?.length > 0 && !this.reportData?.every(item => item.data.length == 0)) {\n                this.timestamp = this.reportService.extractTimestamp(this.reportData);\n                this.renderTable = this.reportService.populateTable(this.timestamp, this.reportData, this.DateFormatEnum.DATE_TIME);\n            } else {\n                this.alertService.setAlertProperties(this.reportAlertObj, ReportErrorEnum.DATA_NOT_FOUND_LABEL, ReportErrorEnum.DATA_NOT_FOUND_MESSAGE, MessageAlertTypeEnum.WARNING, MessageAlertIconEnum.WARNING_ICON);\n            }\n\n        } catch (error) {\n            console.error(\"Error in viewReport()\", error);\n            this.alertService.setAlertProperties(this.reportAlertObj, ReportErrorEnum.INVALID_ERROR_LABEL, ReportErrorEnum.INVALID_ERROR_MESSAGE, MessageAlertTypeEnum.DANGER, MessageAlertIconEnum.DANGER_ICON);\n        } finally {\n            this.showLoader = false;\n        }\n    }\n\n    createDataRequest() {\n\n        if (this.entityID?.length > 0) {\n            this.entityID = this.tscCommonService.removeSelectAllID(this.entityID);\n        }\n\n        const requestData = new AggregateDataRequest();\n\n        requestData.startTime = this.startDate;\n        requestData.endTime = this.endDate;\n        requestData.interval = this.aggDuration;\n        requestData.entityID = this.entityID;\n        requestData.params = [\n            {\n                name: this.parameterFC.value,\n                dsAgg: \"sum\",\n                agg: \"sum\",\n                source_or_load: this.category,\n                sourceLoadType: 'all'\n            }\n        ];\n        requestData.nullifyParams();\n\n        return requestData;\n    }\n\n    async downloadReport(format: string) {\n        this.alertService.resetAlertProperties(this.reportAlertObj);\n\n        if (this.isValidInputField()) {\n            this.toastService.openToast(InvalidForm.INVALID_FORM_TITLE, InvalidForm.INVALID_FORM_MESSAGE, ToastrColor.ERROR);\n            return;\n        }\n\n        if (this.startDate == this.endDate) {\n            this.alertService.setAlertProperties(this.reportAlertObj, ReportErrorEnum.INVALID_DATE_LABEL, ReportErrorEnum.INVALID_DATE_MESSAGE, MessageAlertTypeEnum.INFO, MessageAlertIconEnum.INFO_ICON);\n            return;\n        }\n\n        this.showLoader = true;\n\n        try {\n            const requestData = new DownloadReportRequest();\n\n            requestData.request = this.createDataRequest();\n            requestData.reportName = this.pageTitle;\n            requestData.reportFormat = format;\n\n            await this.reportService.downloadReport(this.orgID, requestData);\n\n        } catch (error) {\n            console.error(\"Error in downloadReport()\", error);\n        } finally {\n            this.showLoader = false;\n        }\n    }\n\n    isValidInputField() {\n        const controls = [\n            this.customDateInput.startDateFC,\n            this.aggDurationInput.aggDurationFC,\n            this.entityInput.multipleEntityFC,\n            this.parameterFC\n        ];\n\n        controls.forEach(control => control.markAsTouched());\n        return controls.some(control => control.invalid);\n    }\n\n    scheduleReport(value) {\n        if (value) {\n            const applicationName = this.applicationKeyID == ApplicationKeyID.WATER_KEY_ID ? 'water' : 'energy';\n            this.router.navigate([`schedule-report/${applicationName}-breakup`]);\n        }\n    }\n\n}","<div class=\"card main-card cardOverwrite h100\">\n    <div class=\"headerContainer\">\n        <div class=\"headerLeftContainer\">\n            <div class=\"pageTitle\">{{ pageTitle }}</div>\n        </div>\n        <div class=\"headerRightContainer\">\n            <div class=\"headerRightContainerInner\">\n                <mat-slide-toggle (change)=\"scheduleReport($event.checked)\">Schedule report</mat-slide-toggle>\n            </div>\n        </div>\n    </div>\n\n    <div class=\"card-body\">\n        <div class=\"row\">\n            <div class=\"col-sm-4\">\n                <lib-source-load #sourceLoadInput (emitFilter)=\"sourceLoadInpChange()\"></lib-source-load>\n            </div>\n        </div>\n\n        <div class=\"row mt-3\">\n            <div class=\"col-sm-3\">\n                <lib-date-input #customDateInput (emitFilter)=\"dateInpChange()\" [materialFieldWidthInp]=\"true\"\n                    [materialFormFieldAppearanceInp]=\"MaterialFormFieldAppearance.FORM_FIELD_APPEARANCE\"\n                    [isMandatoryFieldInp]=\"true\" [dateInputTypeInp]=\"DateInputTypeEnum.CUSTOM_INPUT\"\n                    [dateTypeInp]=\"DateTypeEnum.EXCLUSIVE\" [showDefaultDurationInp]=\"true\" [showCdrRangeLabelInp]=\"true\"\n                    [labelInp]=\"'Select date'\" [timezoneInp]=\"timezone\" [rangeInp]=\"CUSTOM_RANGE_CONSTANT\" [showTimeInCDRInp]=\"true\"\n                    [showRangeInp]=\"true\" [cdrFormatInp]=\"'YYYY-MM-DD HH:mm:ss'\"></lib-date-input>\n            </div>\n\n            <div class=\"col-sm-3\">\n                <lib-aggregation-duration #aggDurationInput\n                    (emitFilter)=\"aggDurationInpChange()\"></lib-aggregation-duration>\n            </div>\n\n            <div class=\"col-sm-3\">\n                <lib-entity #entityInput [dropdownTypeInp]=\"DropdownTypeEnum.MULTIPLE_DROPDOWN\"\n                    (emitFilter)=\"entityInpChange()\"></lib-entity>\n            </div>\n\n            <div class=\"col-sm-3\">\n                <mat-form-field class=\"matFieldWidth100\" [appearance]=\"MaterialFormFieldAppearance.FORM_FIELD_APPEARANCE\">\n                    <mat-label>Select consumption parameter</mat-label>\n\n                    <mat-select [formControl]=\"parameterFC\" required>\n                        <ng-container\n                            *ngIf=\"consumptionParamM && consumptionParamM.length > 0 && consumptionParamM[0]['id']; else noConsumptionParamM\">\n                            <mat-option *ngFor=\"let param of consumptionParamM\" [value]=\"param.paramMetric\" (click)=\"selectedParameters()\">\n                                {{ param.label }}\n                            </mat-option>\n                        </ng-container>\n\n                        <ng-template #noConsumptionParamM>\n                            <mat-option disabled>\n                                {{ COMMON_CONSTANT.NO_DATA_FOUND }}\n                            </mat-option>\n                        </ng-template>\n                    </mat-select>\n\n                    <mat-error *ngIf=\"parameterFC.hasError('required')\">\n                        {{ FormErrorEnum.REQUIRED }}\n                    </mat-error>\n                </mat-form-field>\n            </div>\n        </div>\n\n        <div class=\"row\">\n            <div class=\"col-sm-12\">\n                <div class=\"float-end\">\n                    <button class=\"btn btn-sm btn-primary\" type=\"button\" (click)=\"viewReport()\" matRipple\n                        [matRippleCentered]=\"MATERIAL_CONSTANT.MAT_RIPPLE_CENTER\">\n                        {{ ButtonLabelEnum.READ_BTN_LABEL }}\n                    </button>\n                    <lib-download-report (fileTypeEmitted)=\"downloadReport($event)\"></lib-download-report>\n                </div>\n            </div>\n        </div>\n\n        <div class=\"row\">\n            <div class=\"col-sm-12\">\n                <lib-message-alert *ngIf=\"reportAlertObj.showAlert\" [labelInp]=\"reportAlertObj.alertLabel\"\n                    [contentInp]=\"reportAlertObj.alertContent\" [messageAlertTypeInp]=\"reportAlertObj.messageAlertType\"\n                    [messageAlertIconInp]=\"reportAlertObj.messageAlertIcon\">\n                </lib-message-alert>\n            </div>\n        </div>\n\n        <div class=\"row\">\n            <div class=\"centerAlign\">\n                <lib-skeleton-loader *ngIf=\"showLoader\" [count]=\"3\" [appearance]=\"'circle'\"\n                    [theme]=\"{ height: '15px', width: '15px', 'background-color': '#e7ebf3' }\"></lib-skeleton-loader>\n            </div>\n        </div>\n\n        <div class=\"row mt-3\" *ngIf=\"renderTable && renderTable.length > 0\">\n            <div class=\"overflowX customScrollBar\">\n                <table class=\"table\">\n                    <tbody>\n                        <tr class=\"tableHeader\">\n                            <td class=\"fw-bold\"> Sr. No. </td>\n                            <td align=\"center\" class=\"fw-bold\"> Time </td>\n                            <ng-container *ngFor=\"let data of reportData; let i = index\">\n                                <td align=\"center\" class=\"fw-bold\">\n                                    {{ data.entityName }}<br />\n                                    {{ data.paramLabel }} ({{ data.unit }}) ({{ data.dsAgg }})\n                                </td>\n                            </ng-container>\n                        </tr>\n                    </tbody>\n                    <tbody>\n                        <tr *ngFor=\"let row of renderTable\">\n                            <td>{{ row.index }}</td>\n                            <td align=\"center\" class=\"colWidthContainingDateTime\">{{ row.time }}</td>\n                            <td align=\"center\" *ngFor=\"let value of row.data\">{{ value ? value : commonConstant.HYPHEN\n                                }}\n                            </td>\n                        </tr>\n                    </tbody>\n                </table>\n            </div>\n        </div>\n    </div>\n</div>","import { NgModule } from '@angular/core';\nimport { RouterModule, Routes } from '@angular/router';\n\nimport { BreakupReportComponent } from './breakup.component';\n\nconst routes: Routes = [\n    {\n        path: '',\n        component: BreakupReportComponent\n    }\n];\n\n@NgModule({\n    imports: [RouterModule.forChild(routes)],\n    exports: [RouterModule]\n})\nexport class BreakupReportRoutingModule { }\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\n\nimport {\n    FormsModule,\n    ReactiveFormsModule\n} from '@angular/forms';\n\nimport { MatFormFieldModule } from '@angular/material/form-field';\nimport { MatSelectModule } from '@angular/material/select';\nimport { MatTableModule } from '@angular/material/table';\nimport { MatRippleModule } from '@angular/material/core';\nimport { MatSlideToggleModule } from '@angular/material/slide-toggle';\n\nimport { SourceLoadModule } from '../../_shared/filter/source-load/source-load.module';\nimport { AggregationDurationModule } from '../../dropdown/aggregation-duration/aggregation-duration.module';\nimport { EntityModule } from '../../dropdown/entity/entity.module';\nimport { DownloadReportModule } from '../../_shared/download-report/download-report.module';\n\nimport { BreakupReportRoutingModule } from './breakup-routing.module';\nimport { BreakupReportComponent } from './breakup.component';\n\n// tsc-library\nimport { DateInputModule } from '@library/date';\nimport { MessageAlertModule, SkeletonModule } from '@library/tsc-common';\n// /tsc-library/\n\n\n@NgModule({\n    declarations: [\n        BreakupReportComponent\n    ],\n    imports: [\n        CommonModule,\n        BreakupReportRoutingModule,\n\n        FormsModule,\n        ReactiveFormsModule,\n\n        MatFormFieldModule,\n        MatSelectModule,\n        MatTableModule,\n        MatRippleModule,\n        MatSlideToggleModule,\n\n        SourceLoadModule,\n        AggregationDurationModule,\n        EntityModule,\n        DownloadReportModule,\n\n        DateInputModule,\n        MessageAlertModule,\n        SkeletonModule\n    ]\n})\nexport class BreakupReportModule { }\n","import { Component, OnInit, ViewChild } from '@angular/core';\nimport { Router } from '@angular/router';\nimport { FormBuilder, FormGroup, Validators } from '@angular/forms';\n\nimport { ReportErrorEnum } from '../../../enum/error.enum';\n\nimport { Alert, AlertM } from '../../../model/alert.model';\nimport { MeterData, MeterDataI } from '../../../model/aggregate-data.model';\n\nimport { AggregateDataService } from '../../../service/aggregate-data.service';\nimport { AlertService } from '../../../service/alert.service';\nimport { ReportService } from '../../../service/report.service';\n\n// tsc-library\nimport { ButtonLabelEnum, COMMON_CONSTANT, FileTypeEnum, FormErrorEnum, InvalidForm, MATERIAL_CONSTANT, MaterialFormFieldAppearance, MessageAlertIconEnum, MessageAlertTypeEnum } from '@library/tsc-common';\nimport { DateFormatEnum, DateInputComponent, DateInputTypeEnum, DateTypeEnum } from '@library/date';\nimport { StorageService } from '@library/storage-service';\nimport { ToastrColor, ToastrService } from '@library/toastr-service';\n// /tsc-library/\n\n@Component({\n    selector: 'lib-cgwa',\n    templateUrl: './cgwa.component.html',\n    styles: [\n    ]\n})\nexport class CgwaReportComponent implements OnInit {\n\n    MATERIAL_CONSTANT = MATERIAL_CONSTANT;\n    COMMON_CONSTANT = COMMON_CONSTANT;\n\n    MaterialFormFieldAppearance = MaterialFormFieldAppearance;\n    ButtonLabelEnum = ButtonLabelEnum;\n    DateFormatEnum = DateFormatEnum;\n    DateInputTypeEnum = DateInputTypeEnum;\n    DateTypeEnum = DateTypeEnum;\n    FileTypeEnum = FileTypeEnum;\n    FormErrorEnum = FormErrorEnum;\n\n    orgID: any;\n    timezone: string;\n\n    reportData = [new MeterData()];\n    showAlert: boolean = false;\n    showLoader: boolean = false;\n\n    reportAlertObj: AlertM = new Alert();\n\n    reportFG: FormGroup;\n\n    @ViewChild('monthDateInput') monthDateInput: DateInputComponent;\n\n    constructor(\n        private router: Router,\n        private formBuilder: FormBuilder,\n        private storageService: StorageService,\n        private toastService: ToastrService,\n        private alertService: AlertService,\n        private aggregateDataService: AggregateDataService,\n        private reportService: ReportService\n    ) { }\n\n    ngOnInit(): void {\n        this.orgID = this.storageService.getStorage('currentOrgID');\n        this.timezone = this.storageService.getStorage('timezone');\n\n        this.reportFGInit();\n    }\n\n    reportFGInit() {\n        this.reportFG = this.formBuilder.group({\n            startDate: [, Validators.required],\n            endDate: [, Validators.required],\n            sourceConsumer: this.formBuilder.group({\n                type: ['SOURCE', Validators.required],\n                keyID: ['BOREWELL', Validators.required]\n            }),\n            params: this.formBuilder.array([this.createParamsGroup()]),\n            interval: [, Validators.required]\n        });\n    }\n\n    createParamsGroup() {\n        return this.formBuilder.group({\n            name: ['gwFlowTotalizer', Validators.required],\n            dsAgg: ['sum', Validators.required],\n            agg: ['sum', Validators.required]\n        });\n    }\n\n    dateInpChange() {\n        let startDate = this.monthDateInput.startDateFC.value;\n        let endDate = this.monthDateInput.endDateFC.value;\n\n        this.reportFG.get('startDate').patchValue(startDate);\n        this.reportFG.get('endDate').patchValue(endDate);\n    }\n\n    reportSubmit() {\n\n        this.alertService.resetAlertProperties(this.reportAlertObj);\n\n        if (this.reportFG.invalid) {\n            console.log('Invalid form:', this.reportFG.value);\n            this.toastService.openToast(InvalidForm.INVALID_FORM_TITLE, InvalidForm.INVALID_FORM_MESSAGE, ToastrColor.ERROR);\n            return;\n        } else {\n            this.showLoader = true;\n            this.alertService.resetAlertProperties(this.reportAlertObj);\n            this.viewReport();\n        }\n    }\n\n    async viewReport() {\n        try {\n            const result = <MeterDataI[]>await this.aggregateDataService.getMeterAggregateDataForReport(this.orgID, this.reportFG.value);\n\n            if (result && result.length > 0 && result[0]['date']) {\n                this.reportData = result;\n            } else {\n                this.alertService.setAlertProperties(this.reportAlertObj, ReportErrorEnum.DATA_NOT_FOUND_LABEL, ReportErrorEnum.DATA_NOT_FOUND_MESSAGE, MessageAlertTypeEnum.WARNING, MessageAlertIconEnum.WARNING_ICON);\n            }\n\n        } catch (error) {\n            console.error(\"Error in viewReport()\", error);\n            this.alertService.setAlertProperties(this.reportAlertObj, ReportErrorEnum.INVALID_ERROR_LABEL, ReportErrorEnum.INVALID_ERROR_MESSAGE, MessageAlertTypeEnum.DANGER, MessageAlertIconEnum.DANGER_ICON);\n        } finally {\n            this.showLoader = false;\n        }\n    }\n\n    async downloadReport(format: string) {\n        this.alertService.resetAlertProperties(this.reportAlertObj);\n\n        if (this.reportFG.invalid) {\n            console.log('Invalid form:', this.reportFG.value);\n            this.reportFG.markAllAsTouched();\n            this.toastService.openToast(InvalidForm.INVALID_FORM_TITLE, InvalidForm.INVALID_FORM_MESSAGE, ToastrColor.ERROR);\n            return;\n        }\n\n        this.showLoader = true;\n\n        try {\n            const requestData = {};\n\n            requestData['request'] = this.reportFG.value;\n            requestData['reportName'] = 'CGWA Report';\n            requestData['reportFormat'] = format;\n\n            await this.reportService.downloadConsumptionReport(this.orgID, requestData);\n\n        } catch (error) {\n            console.error(\"Error in downloadConsumptionReport()\", error);\n        } finally {\n            this.showLoader = false;\n        }\n    }\n\n    errorHandling = (formGroup: FormGroup, controlPath: string, error: string): boolean => {\n        return formGroup.get(controlPath).hasError(error);\n    }\n\n    scheduleReport(value) {\n        if (value) {\n            this.router.navigate([`schedule-report/cgwa`]);\n        }\n    }\n\n}","<div class=\"card main-card cardOverwrite h100\">\n    <div class=\"headerContainer\">\n        <div class=\"headerLeftContainer\">\n            <div class=\"pageTitle\">CGWA Report</div>\n        </div>\n        <div class=\"headerRightContainer\">\n            <div class=\"headerRightContainerInner\">\n                <mat-slide-toggle (change)=\"scheduleReport($event.checked)\">Schedule report</mat-slide-toggle>\n            </div>\n        </div>\n    </div>\n\n    <div class=\"card-body\">\n        <form [formGroup]=\"reportFG\" (ngSubmit)=\"reportSubmit()\">\n            <div class=\"row\">\n                <div class=\"col-sm-3\">\n                    <lib-date-input #monthDateInput (emitFilter)=\"dateInpChange()\" [materialFieldWidthInp]=\"true\"\n                        [materialFormFieldAppearanceInp]=\"MaterialFormFieldAppearance.FORM_FIELD_APPEARANCE\"\n                        [isMandatoryFieldInp]=\"true\" [dateInputTypeInp]=\"DateInputTypeEnum.MONTH_INPUT\"\n                        [dateTypeInp]=\"DateTypeEnum.EXCLUSIVE\" [showDefaultDurationInp]=\"true\"\n                        [labelInp]=\"'Select date'\" [timezoneInp]=\"timezone\"></lib-date-input>\n                </div>\n\n                <div class=\"col-sm-3\">\n                    <mat-form-field class=\"matFieldWidth100\"\n                        [appearance]=\"MaterialFormFieldAppearance.FORM_FIELD_APPEARANCE\">\n                        <mat-label>Select aggregation duration</mat-label>\n                        <mat-select formControlName=\"interval\" required>\n                            <mat-option [value]=\"'DAILY'\">Daily</mat-option>\n                            <mat-option [value]=\"'MONTHLY'\">Monthly</mat-option>\n                        </mat-select>\n                        <mat-error *ngIf=\"errorHandling(reportFG, 'interval', 'required')\">\n                            {{ FormErrorEnum.REQUIRED }}\n                        </mat-error>\n                    </mat-form-field>\n                </div>\n            </div>\n\n            <button class=\"d-none\" type=\"submit\" #formSubmitBtn></button>\n        </form>\n\n        <div class=\"row\">\n            <div class=\"col-sm-12\">\n                <div class=\"float-end\">\n                    <button class=\"btn btn-sm btn-primary\" (click)=\"formSubmitBtn.click()\" matRipple\n                        [matRippleCentered]=\"MATERIAL_CONSTANT.MAT_RIPPLE_CENTER\">\n                        {{ ButtonLabelEnum.READ_BTN_LABEL }}\n                    </button>\n                    <lib-download-report [excludeFileTypeInp]=\"FileTypeEnum.CSV\" (fileTypeEmitted)=\"downloadReport($event)\"></lib-download-report>\n                </div>\n            </div>\n        </div>\n\n        <div class=\"row mt-3\">\n            <div class=\"col-sm-12\">\n                <lib-message-alert *ngIf=\"reportAlertObj.showAlert\" [labelInp]=\"reportAlertObj.alertLabel\"\n                    [contentInp]=\"reportAlertObj.alertContent\" [messageAlertTypeInp]=\"reportAlertObj.messageAlertType\"\n                    [messageAlertIconInp]=\"reportAlertObj.messageAlertIcon\">\n                </lib-message-alert>\n            </div>\n        </div>\n\n        <div class=\"row mt-3\">\n            <div class=\"centerAlign\">\n                <lib-skeleton-loader *ngIf=\"showLoader\" [count]=\"3\" [appearance]=\"'circle'\"\n                    [theme]=\"{ height: '15px', width: '15px', 'background-color': '#e7ebf3' }\"></lib-skeleton-loader>\n            </div>\n        </div>\n\n        <div class=\"row mt-3\" *ngIf=\"reportData && reportData.length > 0 && reportData[0].date\">\n            <table class=\"table\">\n                <tbody>\n                    <tr class=\"tableHeader\">\n                        <td align=\"center\" class=\"fw-bold\"> Date </td>\n                        <td align=\"center\" class=\"fw-bold\"> Meter name </td>\n                        <td align=\"center\" class=\"fw-bold\"> Parameter name </td>\n                        <td align=\"center\" class=\"fw-bold\"> Meter start reading </td>\n                        <td align=\"center\" class=\"fw-bold\"> Meter end reading </td>\n                        <td align=\"center\" class=\"fw-bold\"> Consumption </td>\n                    </tr>\n                </tbody>\n                <tbody>\n                    <tr *ngFor=\"let data of reportData; let i = index\">\n                        <td align=\"center\" class=\"colWidthContainingDateTime\">{{ row?.date | date: 'dd-MMM-yyyy\n                            HH:mm:ss' }}</td>\n                        <td align=\"center\">{{ row?.meterName }}</td>\n                        <td align=\"center\">{{ row?.parameterName }}</td>\n                        <td align=\"center\">{{ row?.meterStartReading }}</td>\n                        <td align=\"center\">{{ row?.meterEndReading }}</td>\n                        <td align=\"center\">{{ row?.meterConsumption }}</td>\n                    </tr>\n                </tbody>\n            </table>\n        </div>\n    </div>\n</div>","import { NgModule } from '@angular/core';\nimport { RouterModule, Routes } from '@angular/router';\n\nimport { CgwaReportComponent } from './cgwa.component';\n\nconst routes: Routes = [\n    {\n        path: '',\n        component: CgwaReportComponent\n    }\n];\n\n@NgModule({\n    imports: [RouterModule.forChild(routes)],\n    exports: [RouterModule]\n})\n\nexport class CgwaReportRoutingModule { }\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\n\nimport {\n    FormsModule,\n    ReactiveFormsModule\n} from '@angular/forms';\n\nimport { MatFormFieldModule } from '@angular/material/form-field';\nimport { MatSelectModule } from '@angular/material/select';\nimport { MatTableModule } from '@angular/material/table';\nimport { MatRippleModule } from '@angular/material/core';\nimport { MatSlideToggleModule } from '@angular/material/slide-toggle';\n\nimport { DownloadReportModule } from '../../_shared/download-report/download-report.module';\n\nimport { CgwaReportRoutingModule } from './cgwa-routing.module';\nimport { CgwaReportComponent } from './cgwa.component';\n\n// tsc-library\nimport { DateInputModule } from '@library/date';\nimport { MessageAlertModule, SkeletonModule } from '@library/tsc-common';\n// /tsc-library/\n\n@NgModule({\n    declarations: [\n        CgwaReportComponent\n    ],\n    imports: [\n        CommonModule,\n        CgwaReportRoutingModule,\n\n        FormsModule,\n        ReactiveFormsModule,\n\n        MatFormFieldModule,\n        MatSelectModule,\n        MatTableModule,\n        MatRippleModule,\n        MatSlideToggleModule,\n\n        DownloadReportModule,\n\n        DateInputModule,\n        MessageAlertModule,\n        SkeletonModule\n    ]\n})\nexport class CgwaReportModule { }\n","import { Component, OnInit, ViewChild } from '@angular/core';\n\nimport { ReportErrorEnum } from '../../../enum/error.enum';\nimport { DropdownTypeEnum } from '../../../enum/dropdown.enum';\n\nimport { AggregateDataRequest } from '../../../model/aggregate-data.model';\nimport { Alert, AlertM } from '../../../model/alert.model';\nimport { DownloadReportRequest } from '../../../model/report.model';\n\nimport { SourceLoadComponent } from '../../_shared/filter/source-load/source-load.component';\nimport { AggregationDurationComponent } from '../../dropdown/aggregation-duration/aggregation-duration.component';\nimport { EntityComponent } from '../../dropdown/entity/entity.component';\n\nimport { AggregateDataService } from '../../../service/aggregate-data.service';\nimport { ReportService } from '../../../service/report.service';\nimport { AlertService } from '../../../service/alert.service';\n\n// tsc-library\nimport { CUSTOM_RANGE_CONSTANT_EXCLUSIVE_DATE, DateFormatEnum, DateInputComponent, DateInputTypeEnum, DateTypeEnum } from '@library/date';\nimport { StorageService } from '@library/storage-service';\nimport { ToastrColor, ToastrService } from '@library/toastr-service';\nimport { ButtonLabelEnum, COMMON_CONSTANT, InvalidForm, MATERIAL_CONSTANT, MaterialFormFieldAppearance, MessageAlertIconEnum, MessageAlertTypeEnum, TSCCommonService } from '@library/tsc-common';\nimport { ApplicationKeyID } from '@library/application-service';\n// /tsc-library/\n\n@Component({\n    selector: 'lib-consumption-breakup',\n    templateUrl: './consumption-breakup.component.html',\n    styles: [\n    ]\n})\n\nexport class ConsumptionBreakupComponent implements OnInit {\n\n    materialConstant = MATERIAL_CONSTANT;\n    commonConstant = COMMON_CONSTANT;\n    customRangeConstant = CUSTOM_RANGE_CONSTANT_EXCLUSIVE_DATE;\n\n    materialFormFieldAppearance = MaterialFormFieldAppearance;\n    buttonLabelEnum = ButtonLabelEnum;\n    dropdownTypeEnum = DropdownTypeEnum;\n    dateFormatEnum = DateFormatEnum;\n    dateInputTypeEnum = DateInputTypeEnum;\n    dateTypeEnum = DateTypeEnum;\n\n    orgID: any;\n    applicationKeyID: any;\n    paramMetric: any;\n    timezone: string;\n    category: string;\n    startDate: string;\n    endDate: string;\n    aggDuration: string;\n    entityID: any;\n    timestamp: any;\n    renderTable: any;\n    reportData: any;\n    showAlert: boolean = false;\n    showLoader: boolean = false;\n\n    reportAlertObj: AlertM = new Alert();\n\n    @ViewChild('sourceLoadInput') sourceLoadInput: SourceLoadComponent;\n    @ViewChild('customDateInput') customDateInput: DateInputComponent;\n    @ViewChild('aggDurationInput') aggDurationInput: AggregationDurationComponent;\n    @ViewChild('entityInput') entityInput: EntityComponent;\n\n    constructor(\n        private storageService: StorageService,\n        private toastService: ToastrService,\n        private tscCommonService: TSCCommonService,\n        private aggregateDataService: AggregateDataService,\n        private reportService: ReportService,\n        private alertService: AlertService\n    ) { }\n\n    ngOnInit(): void {\n        this.orgID = this.storageService.getStorage('currentOrgID');\n        this.timezone = this.storageService.getStorage('timezone');\n        this.applicationKeyID = this.storageService.getStorage('applicationKeyID');\n\n        if (this.applicationKeyID == ApplicationKeyID.ENERGY_KEY_ID) {\n            this.paramMetric = \"engEnergyUsed\";\n        } else if (this.applicationKeyID == ApplicationKeyID.WATER_KEY_ID) {\n            this.paramMetric = \"gwFlowTotalizer\";\n        }\n    }\n\n    sourceLoadInpChange() {\n        this.category = this.sourceLoadInput.categoryFC.value;\n    }\n\n    dateInpChange() {\n        this.startDate = this.customDateInput.startDateFC.value;\n        this.endDate = this.customDateInput.endDateFC.value;\n\n        this.alertService.resetAlertProperties(this.reportAlertObj);\n    }\n\n    aggDurationInpChange() {\n        this.aggDuration = this.aggDurationInput.aggDurationFC.value;\n\n        this.alertService.resetAlertProperties(this.reportAlertObj);\n    }\n\n    entityInpChange() {\n        this.entityID = this.entityInput.multipleEntityFC.value;\n\n        this.alertService.resetAlertProperties(this.reportAlertObj);\n    }\n\n    async viewReport() {\n\n        this.alertService.resetAlertProperties(this.reportAlertObj);\n\n        if (this.isValidInputField()) {\n            this.toastService.openToast(InvalidForm.INVALID_FORM_TITLE, InvalidForm.INVALID_FORM_MESSAGE, ToastrColor.ERROR);\n            return;\n        }\n\n        if (this.startDate == this.endDate) {\n            this.alertService.setAlertProperties(this.reportAlertObj, ReportErrorEnum.INVALID_DATE_LABEL, ReportErrorEnum.INVALID_DATE_MESSAGE, MessageAlertTypeEnum.INFO, MessageAlertIconEnum.INFO_ICON);\n            return;\n        }\n\n        this.showLoader = true;\n\n        try {\n            const requestData = this.createDataRequest();\n\n            this.reportData = await this.aggregateDataService.getAggregateData(this.orgID, requestData);\n\n            if (this.reportData?.length > 0 && !this.reportData?.every(item => item.data.length == 0)) {\n                this.timestamp = this.reportService.extractTimestamp(this.reportData);\n                this.renderTable = this.reportService.populateTable(this.timestamp, this.reportData, this.dateFormatEnum.DATE_TIME);\n            } else {\n                this.alertService.setAlertProperties(this.reportAlertObj, ReportErrorEnum.DATA_NOT_FOUND_LABEL, ReportErrorEnum.DATA_NOT_FOUND_MESSAGE, MessageAlertTypeEnum.WARNING, MessageAlertIconEnum.WARNING_ICON);\n            }\n\n        } catch (error) {\n            console.error(\"Error in viewReport()\", error);\n            this.alertService.setAlertProperties(this.reportAlertObj, ReportErrorEnum.INVALID_ERROR_LABEL, ReportErrorEnum.INVALID_ERROR_MESSAGE, MessageAlertTypeEnum.DANGER, MessageAlertIconEnum.DANGER_ICON);\n        } finally {\n            this.showLoader = false;\n        }\n    }\n\n    createDataRequest() {\n\n        if (this.entityID?.length > 0) {\n            this.entityID = this.tscCommonService.removeSelectAllID(this.entityID);\n        }\n\n        const requestData = new AggregateDataRequest();\n\n        requestData.startTime = this.startDate;\n        requestData.endTime = this.endDate;\n        requestData.interval = this.aggDuration;\n        requestData.entityID = this.entityID;\n        requestData.params = [\n            {\n                name: this.paramMetric,\n                dsAgg: \"sum\",\n                agg: \"sum\",\n                source_or_load: this.category,\n                sourceLoadType: 'all'\n            }\n        ];\n        requestData.nullifyParams();\n\n        return requestData;\n    }\n\n    async downloadReport(format: string) {\n        this.alertService.resetAlertProperties(this.reportAlertObj);\n\n        if (this.isValidInputField()) {\n            this.toastService.openToast(InvalidForm.INVALID_FORM_TITLE, InvalidForm.INVALID_FORM_MESSAGE, ToastrColor.ERROR);\n            return;\n        }\n\n        if (this.startDate == this.endDate) {\n            this.alertService.setAlertProperties(this.reportAlertObj, ReportErrorEnum.INVALID_DATE_LABEL, ReportErrorEnum.INVALID_DATE_MESSAGE, MessageAlertTypeEnum.INFO, MessageAlertIconEnum.INFO_ICON);\n            return;\n        }\n\n        this.showLoader = true;\n\n        try {\n            const requestData = new DownloadReportRequest();\n\n            requestData.request = this.createDataRequest();\n            requestData.reportName = 'Consumption Breakup Report';\n            requestData.reportFormat = format;\n\n            await this.reportService.downloadReport(this.orgID, requestData);\n\n        } catch (error) {\n            console.error(\"Error in downloadReport()\", error);\n        } finally {\n            this.showLoader = false;\n        }\n    }\n\n    isValidInputField() {\n        const controls = [\n            this.customDateInput.startDateFC,\n            this.aggDurationInput.aggDurationFC,\n            this.entityInput.multipleEntityFC,\n        ];\n\n        controls.forEach(control => control.markAsTouched());\n        return controls.some(control => control.invalid);\n    }\n\n}","<div class=\"card main-card cardOverwrite h100\">\n    <div class=\"headerContainer\">\n        <div class=\"headerLeftContainer\">\n            <div class=\"pageTitle\">Consumption Breakup Report</div>\n        </div>\n    </div>\n\n    <div class=\"card-body\">\n        <div class=\"row\">\n            <div class=\"col-sm-4\">\n                <lib-source-load #sourceLoadInput (emitFilter)=\"sourceLoadInpChange()\"></lib-source-load>\n            </div>\n        </div>\n\n        <div class=\"row mt-3\">\n            <div class=\"col-sm-3\">\n                <lib-date-input #customDateInput (emitFilter)=\"dateInpChange()\" [materialFieldWidthInp]=\"true\"\n                    [materialFormFieldAppearanceInp]=\"materialFormFieldAppearance.FORM_FIELD_APPEARANCE\"\n                    [isMandatoryFieldInp]=\"true\" [dateInputTypeInp]=\"dateInputTypeEnum.CUSTOM_INPUT\"\n                    [dateTypeInp]=\"dateTypeEnum.EXCLUSIVE\" [showDefaultDurationInp]=\"true\" [showCdrRangeLabelInp]=\"true\"\n                    [labelInp]=\"'Select date'\" [timezoneInp]=\"timezone\" [rangeInp]=\"customRangeConstant\" [showTimeInCDRInp]=\"true\"\n                    [showRangeInp]=\"true\" [cdrFormatInp]=\"'YYYY-MM-DD HH:mm:ss'\"></lib-date-input>\n            </div>\n\n            <div class=\"col-sm-3\">\n                <lib-aggregation-duration #aggDurationInput\n                    (emitFilter)=\"aggDurationInpChange()\"></lib-aggregation-duration>\n            </div>\n\n            <div class=\"col-sm-3\">\n                <lib-entity #entityInput [dropdownTypeInp]=\"dropdownTypeEnum.MULTIPLE_DROPDOWN\"\n                    (emitFilter)=\"entityInpChange()\"></lib-entity>\n            </div>\n        </div>\n\n        <div class=\"row\">\n            <div class=\"col-sm-12\">\n                <div class=\"float-end\">\n                    <button class=\"btn btn-sm btn-primary\" type=\"button\" (click)=\"viewReport()\" matRipple\n                        [matRippleCentered]=\"materialConstant.MAT_RIPPLE_CENTER\">\n                        {{ buttonLabelEnum.READ_BTN_LABEL }}\n                    </button>\n                    <lib-download-report (fileTypeEmitted)=\"downloadReport($event)\"></lib-download-report>\n                </div>\n            </div>\n        </div>\n\n        <div class=\"row\">\n            <div class=\"col-sm-12\">\n                <lib-message-alert *ngIf=\"reportAlertObj.showAlert\" [labelInp]=\"reportAlertObj.alertLabel\"\n                    [contentInp]=\"reportAlertObj.alertContent\" [messageAlertTypeInp]=\"reportAlertObj.messageAlertType\"\n                    [messageAlertIconInp]=\"reportAlertObj.messageAlertIcon\">\n                </lib-message-alert>\n            </div>\n        </div>\n\n        <div class=\"row\">\n            <div class=\"centerAlign\">\n                <lib-skeleton-loader *ngIf=\"showLoader\" [count]=\"3\" [appearance]=\"'circle'\"\n                    [theme]=\"{ height: '15px', width: '15px', 'background-color': '#e7ebf3' }\"></lib-skeleton-loader>\n            </div>\n        </div>\n\n        <div class=\"row mt-3\" *ngIf=\"renderTable && renderTable.length > 0\">\n            <div class=\"overflowX customScrollBar\">\n                <table class=\"table\">\n                    <tbody>\n                        <tr class=\"tableHeader\">\n                            <td class=\"fw-bold\"> Sr. No. </td>\n                            <td align=\"center\" class=\"fw-bold\"> Time </td>\n                            <ng-container *ngFor=\"let data of reportData; let i = index\">\n                                <td align=\"center\" class=\"fw-bold\">\n                                    {{ data.entityName }}<br />\n                                    {{ data.paramLabel }} ({{ data.unit }}) ({{ data.dsAgg }})\n                                </td>\n                            </ng-container>\n                        </tr>\n                    </tbody>\n                    <tbody>\n                        <tr *ngFor=\"let row of renderTable\">\n                            <td>{{ row.index }}</td>\n                            <td align=\"center\" class=\"colWidthContainingDateTime\">{{ row.time }}</td>\n                            <td align=\"center\" *ngFor=\"let value of row.data\">{{ value ? value : commonConstant.HYPHEN\n                                }}\n                            </td>\n                        </tr>\n                    </tbody>\n                </table>\n            </div>\n        </div>\n    </div>\n</div>","import { NgModule } from '@angular/core';\nimport { RouterModule, Routes } from '@angular/router';\n\nimport { ConsumptionBreakupComponent } from './consumption-breakup.component';\n\nconst routes: Routes = [\n    {\n        path: '',\n        component: ConsumptionBreakupComponent\n    }\n];\n\n@NgModule({\n    imports: [RouterModule.forChild(routes)],\n    exports: [RouterModule]\n})\nexport class ConsumptionBreakupRoutingModule { }\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\n\nimport { MatTableModule } from '@angular/material/table';\nimport { MatRippleModule } from '@angular/material/core';\n\nimport { SourceLoadModule } from '../../_shared/filter/source-load/source-load.module';\nimport { AggregationDurationModule } from '../../dropdown/aggregation-duration/aggregation-duration.module';\nimport { EntityModule } from '../../dropdown/entity/entity.module';\nimport { DownloadReportModule } from '../../_shared/download-report/download-report.module';\n\nimport { ConsumptionBreakupRoutingModule } from './consumption-breakup-routing.module';\nimport { ConsumptionBreakupComponent } from './consumption-breakup.component';\n\n// tsc-library\nimport { DateInputModule } from '@library/date';\nimport { MessageAlertModule, SkeletonModule } from '@library/tsc-common';\n// /tsc-library/\n\n@NgModule({\n    declarations: [\n        ConsumptionBreakupComponent\n    ],\n    imports: [\n        CommonModule,\n        ConsumptionBreakupRoutingModule,\n        SourceLoadModule,\n        DateInputModule,\n        AggregationDurationModule,\n        EntityModule,\n        DownloadReportModule,\n        SkeletonModule,\n        MessageAlertModule,\n        MatTableModule,\n        MatRippleModule\n    ]\n})\nexport class ConsumptionBreakupModule { }\n","import { StaticI } from \"@library/tsc-common\";\n\nexport interface SourceConsumerPageM {\n    id: number;\n    name: string;\n    utilitySourceName: string;\n    type: string;\n}\n\nexport class SourceConsumerPage implements SourceConsumerPageM {\n    id;\n    name;\n    utilitySourceName;\n    type;\n}\n\nexport interface SourceM {\n    id: number;\n    name: string;\n    utilitySourceID: number;\n    typeID: number[];\n}\n\nexport class Source implements SourceM {\n    id;\n    name;\n    utilitySourceID;\n    typeID;\n}\n\nexport interface ConsumerM {\n    id: number;\n    name: string;\n    utilitySourceID: number;\n    type: number;\n}\n\nexport class Consumer implements ConsumerM {\n    id;\n    name;\n    utilitySourceID;\n    type;\n}\n\nexport interface UtilitySourceTypeM {\n    utilitySource: Array<{\n        id: number;\n        name: string;\n        keyID: string;\n        type: StaticI[];\n    }>\n}\n\nexport class UtilitySourceType implements UtilitySourceTypeM {\n    utilitySource;\n}\n\nexport interface SourceConsumerConfigureM {\n    sourceTypeConfigured: boolean;\n    consumerTypeConfigured: boolean;\n}\n\nexport class SourceConsumerConfigure implements SourceConsumerConfigureM {\n    sourceTypeConfigured;\n    consumerTypeConfigured;\n}","import { Inject, Injectable } from '@angular/core';\n\nimport {\n    HttpClient,\n    HttpParams\n} from '@angular/common/http';\n\nimport { Observable } from 'rxjs';\n\nimport { SourceConsumerConfigureM, SourceConsumerPageM, SourceM, UtilitySourceTypeM } from '../model/source-consumer.model';\n\n// tsc-library\nimport { PageM, StaticI } from '@library/tsc-common';\n// /tsc-library/\n\n@Injectable({\n    providedIn: 'root'\n})\n\nexport class SourceController {\n\n    constructor(\n        private http: HttpClient,\n        @Inject('environment') private environment: any\n    ) { }\n\n    createSourceType(orgID, source) {\n        return this.http.post(`${this.environment.TSC_COMMON_API_URL}organizations/${orgID}/sources-types`, source);\n    }\n\n    getSourceTypeByID(orgID, sourceID): Observable<SourceM> {\n        return this.http.get<SourceM>(`${this.environment.TSC_COMMON_API_URL}organizations/${orgID}/sources-types/${sourceID}`);\n    }\n\n    updateSourceType(orgID, sourceID, source) {\n        return this.http.patch(`${this.environment.TSC_COMMON_API_URL}organizations/${orgID}/sources-types/${sourceID}`, source);\n    }\n\n    deleteSourceType(orgID, sourceID) {\n        return this.http.delete(`${this.environment.TSC_COMMON_API_URL}organizations/${orgID}/sources-types/${sourceID}`);\n    }\n\n    getSourceTypeByPage(pageNo: number, pageSize: number, sortBy: string, orderBy: string, searchValue, filterArr, orgID): Observable<PageM<SourceConsumerPageM>> {\n        let params = new HttpParams();\n\n        params = params.append('pageNo', pageNo);\n        params = params.append('pageSize', pageSize);\n        params = params.append('sortBy', sortBy);\n        params = params.append('orderBy', orderBy);\n\n        if (searchValue) {\n            params = params.append('searchBy', searchValue);\n        }\n\n        filterArr.forEach(filter => params = params.append('filter', filter));\n\n        return this.http.get<PageM<SourceConsumerPageM>>(`${this.environment.TSC_COMMON_API_URL}organizations/${orgID}/sources-types/page`, { params: params });\n    }\n\n    getUtilitySourceAndType(orgID): Observable<UtilitySourceTypeM> {\n        return this.http.get<UtilitySourceTypeM>(`${this.environment.TSC_COMMON_API_URL}organizations/${orgID}/utility-sources-types`);\n    }\n\n    getSourceConsumerType(orgID, type): Observable<StaticI[]> {\n        return this.http.post<StaticI[]>(`${this.environment.TSC_COMMON_API_URL}organizations/${orgID}/sources-consumers-type`, type);\n    }\n\n    getSourceConsumerConfig(orgID): Observable<SourceConsumerConfigureM> {\n        return this.http.get<SourceConsumerConfigureM>(`${this.environment.TSC_COMMON_API_URL}organizations/${orgID}/sources-consumers-configure`);\n    }\n\n}\n","import { Injectable } from '@angular/core';\n\nimport { UtilitySourceType, UtilitySourceTypeM } from '../model/source-consumer.model';\n\nimport { SourceController } from '../controller/source.controller';\n\n// tsc-library\nimport { Static, StaticI } from '@library/tsc-common';\n// /tsc-library/\n\n@Injectable({\n    providedIn: 'root'\n})\n\nexport class SourceService {\n\n    constructor(\n        private sourceController: SourceController\n    ) { }\n\n    async getUtilitySourceAndType(orgID): Promise<UtilitySourceTypeM> {\n        let utlitySourceType: UtilitySourceTypeM;\n        try {\n            utlitySourceType = await this.sourceController.getUtilitySourceAndType(orgID).toPromise();\n\n            if (utlitySourceType) {\n                return utlitySourceType;\n            } else {\n                return new UtilitySourceType();\n            }\n        } catch (error) {\n            console.error('Error -', error);\n            return new UtilitySourceType();\n        }\n    }\n\n    async getSourceConsumerType(orgID, type): Promise<StaticI[]> {\n        let sourceLoadType: StaticI[];\n        try {\n            sourceLoadType = await this.sourceController.getSourceConsumerType(orgID, type).toPromise();\n\n            if (sourceLoadType) {\n                return sourceLoadType;\n            } else {\n                return [new Static()];\n            }\n        } catch (error) {\n            console.error('Error -', error);\n            return [new Static()];\n        }\n    }\n\n}\n","import { Component, OnInit, ViewChild } from '@angular/core';\nimport { Router } from '@angular/router';\nimport { FormBuilder, FormGroup, Validators } from '@angular/forms';\n\nimport { ReportErrorEnum } from '../../../enum/error.enum';\n\nimport { ConsumptionParameterM } from '../../../model/parameter.model';\nimport { Alert, AlertM } from '../../../model/alert.model';\nimport { MeterData, MeterDataI } from '../../../model/aggregate-data.model';\n\nimport { SourceService } from '../../../service/source.service';\nimport { ParameterService } from '../../../service/parameter.service';\nimport { AggregateDataService } from '../../../service/aggregate-data.service';\nimport { AlertService } from '../../../service/alert.service';\nimport { ReportService } from '../../../service/report.service';\n\n// tsc-library\nimport { ButtonLabelEnum, COMMON_CONSTANT, FileTypeEnum, FormErrorEnum, InvalidForm, MATERIAL_CONSTANT, MaterialFormFieldAppearance, MessageAlertIconEnum, MessageAlertTypeEnum, Static, StaticI } from '@library/tsc-common';\nimport { DateFormatEnum, DateInputComponent, DateInputTypeEnum, DateTypeEnum } from '@library/date';\nimport { StorageService } from '@library/storage-service';\nimport { ToastrColor, ToastrService } from '@library/toastr-service';\nimport { ApplicationKeyID } from '@library/application-service';\n// /tsc-library/\n\n@Component({\n    selector: 'lib-consumption',\n    templateUrl: './consumption.component.html',\n    styles: [\n    ]\n})\nexport class ConsumptionReportComponent implements OnInit {\n\n    MATERIAL_CONSTANT = MATERIAL_CONSTANT;\n    COMMON_CONSTANT = COMMON_CONSTANT;\n\n    MaterialFormFieldAppearance = MaterialFormFieldAppearance;\n    ButtonLabelEnum = ButtonLabelEnum;\n    DateFormatEnum = DateFormatEnum;\n    DateInputTypeEnum = DateInputTypeEnum;\n    DateTypeEnum = DateTypeEnum;\n    FileTypeEnum = FileTypeEnum;\n    FormErrorEnum = FormErrorEnum;\n\n    pageTitle: string;\n\n    orgID: any;\n    timezone: string;\n    applicationKeyID: string;\n\n    reportData = [new MeterData()];\n    showAlert: boolean = false;\n    showLoader: boolean = false;\n\n    sourceConsumerType = [new Static()];\n    consumptionParamM: any;\n    reportAlertObj: AlertM = new Alert();\n\n    reportFG: FormGroup;\n\n    @ViewChild('monthDateInput') monthDateInput: DateInputComponent;\n\n    constructor(\n        private router: Router,\n        private formBuilder: FormBuilder,\n        private storageService: StorageService,\n        private toastService: ToastrService,\n        private alertService: AlertService,\n        private sourceService: SourceService,\n        private parameterService: ParameterService,\n        private aggregateDataService: AggregateDataService,\n        private reportService: ReportService\n    ) { }\n\n    ngOnInit(): void {\n        this.orgID = this.storageService.getStorage('currentOrgID');\n        this.timezone = this.storageService.getStorage('timezone');\n        this.applicationKeyID = this.storageService.getStorage('applicationKeyID');\n\n        if (this.applicationKeyID == ApplicationKeyID.ENERGY_KEY_ID) {\n            this.pageTitle = \"Energy Consumption Report\";\n        } else if (this.applicationKeyID == ApplicationKeyID.WATER_KEY_ID) {\n            this.pageTitle = \"Water Consumption Report\";\n        }\n\n        this.reportFGInit();\n\n        if (this.reportFG.get('sourceConsumer.type').value == 'SOURCE') {\n            this.getSourceConsumerType('source');\n        } else {\n            this.getSourceConsumerType('load');\n        }\n\n        this.getConsumptionParameter();\n    }\n\n    reportFGInit() {\n        this.reportFG = this.formBuilder.group({\n            startDate: [, Validators.required],\n            endDate: [, Validators.required],\n            sourceConsumer: this.formBuilder.group({\n                type: ['SOURCE', Validators.required],\n                keyID: [, Validators.required]\n            }),\n            params: this.formBuilder.group({\n                name: ['', Validators.required],\n                dsAgg: ['sum', Validators.required],\n                agg: ['sum', Validators.required]\n            }),\n            interval: [, Validators.required]\n        });\n\n        this.reportFG.get('sourceConsumer.type').valueChanges.subscribe(async (value) => {\n            if (value == 'SOURCE') {\n                this.getSourceConsumerType('source');\n            } else if (value == 'CONSUMER') {\n                this.getSourceConsumerType('load');\n            }\n        });\n    }\n\n    async getSourceConsumerType(sourceConsumerType) {\n        const requestData = {\n            type: sourceConsumerType\n        };\n\n        this.sourceConsumerType = <StaticI[]>await this.sourceService.getSourceConsumerType(this.orgID, requestData);\n    }\n\n    dateInpChange() {\n        let startDate = this.monthDateInput.startDateFC.value;\n        let endDate = this.monthDateInput.endDateFC.value;\n\n        this.reportFG.get('startDate').patchValue(startDate);\n        this.reportFG.get('endDate').patchValue(endDate);\n    }\n\n    async getConsumptionParameter() {\n        const consumptionParamM = <ConsumptionParameterM>await this.parameterService.getConsumptionParameter(this.orgID);\n\n        this.consumptionParamM = consumptionParamM.consumptionParameter;\n    }\n\n    reportSubmit() {\n        const formValue = this.reportFG.value;\n        const modifiedValue = {\n            ...formValue,\n            params: [formValue.params]\n        };\n\n        this.alertService.resetAlertProperties(this.reportAlertObj);\n\n        if (this.reportFG.invalid) {\n            console.log('Invalid form:', this.reportFG.value);\n            this.toastService.openToast(InvalidForm.INVALID_FORM_TITLE, InvalidForm.INVALID_FORM_MESSAGE, ToastrColor.ERROR);\n            return;\n        } else {\n            this.showLoader = true;\n            this.alertService.resetAlertProperties(this.reportAlertObj);\n            this.viewReport(modifiedValue);\n        }\n    }\n\n    async viewReport(modifiedValue) {\n        try {\n            const result = <MeterDataI[]>await this.aggregateDataService.getMeterAggregateDataForReport(this.orgID, modifiedValue);\n\n            if (result && result.length > 0 && result[0]['date']) {\n                this.reportData = result;\n            } else {\n                this.alertService.setAlertProperties(this.reportAlertObj, ReportErrorEnum.DATA_NOT_FOUND_LABEL, ReportErrorEnum.DATA_NOT_FOUND_MESSAGE, MessageAlertTypeEnum.WARNING, MessageAlertIconEnum.WARNING_ICON);\n            }\n\n        } catch (error) {\n            console.error(\"Error in viewReport()\", error);\n            this.alertService.setAlertProperties(this.reportAlertObj, ReportErrorEnum.INVALID_ERROR_LABEL, ReportErrorEnum.INVALID_ERROR_MESSAGE, MessageAlertTypeEnum.DANGER, MessageAlertIconEnum.DANGER_ICON);\n        } finally {\n            this.showLoader = false;\n        }\n    }\n\n    async downloadReport(format: string) {\n        const formValue = this.reportFG.value;\n        const modifiedValue = {\n            ...formValue,\n            params: [formValue.params]\n        };\n\n        this.alertService.resetAlertProperties(this.reportAlertObj);\n\n        if (this.reportFG.invalid) {\n            console.log('Invalid form:', this.reportFG.value);\n            this.reportFG.markAllAsTouched();\n            this.toastService.openToast(InvalidForm.INVALID_FORM_TITLE, InvalidForm.INVALID_FORM_MESSAGE, ToastrColor.ERROR);\n            return;\n        }\n\n        this.showLoader = true;\n\n        try {\n            const requestData = {};\n\n            requestData['request'] = modifiedValue;\n            requestData['reportName'] = 'Consumption Report';\n            requestData['reportFormat'] = format;\n\n            await this.reportService.downloadConsumptionReport(this.orgID, requestData);\n\n        } catch (error) {\n            console.error(\"Error in downloadConsumptionReport()\", error);\n        } finally {\n            this.showLoader = false;\n        }\n    }\n\n    errorHandling = (formGroup: FormGroup, controlPath: string, error: string): boolean => {\n        return formGroup.get(controlPath).hasError(error);\n    }\n\n    scheduleReport(value) {\n        if (value) {\n            const applicationName = this.applicationKeyID == ApplicationKeyID.WATER_KEY_ID ? 'water' : 'energy';\n            this.router.navigate([`schedule-report/${applicationName}-consumption`]);\n        }\n    }\n\n}","<div class=\"card main-card cardOverwrite h100\">\n    <div class=\"headerContainer\">\n        <div class=\"headerLeftContainer\">\n            <div class=\"pageTitle\">{{ pageTitle }}</div>\n        </div>\n        <div class=\"headerRightContainer\">\n            <div class=\"headerRightContainerInner\">\n                <mat-slide-toggle (change)=\"scheduleReport($event.checked)\">Schedule report</mat-slide-toggle>\n            </div>\n        </div>\n    </div>\n\n    <div class=\"card-body\">\n        <form [formGroup]=\"reportFG\" (ngSubmit)=\"reportSubmit()\">\n            <div class=\"row\">\n                <div formGroupName=\"sourceConsumer\">\n                    <div class=\"col-sm-3\">\n                        <mat-button-toggle-group class=\"matBtnFilter\" formControlName=\"type\">\n                            <mat-button-toggle [value]=\"'SOURCE'\">Source</mat-button-toggle>\n                            <mat-button-toggle [value]=\"'CONSUMER'\">Consumer</mat-button-toggle>\n                        </mat-button-toggle-group>\n                        <mat-error class=\"textMatError ms-1\"\n                            *ngIf=\"errorHandling(reportFG, 'sourceConsumer.type', 'required')\">\n                            {{ FormErrorEnum.REQUIRED }}\n                        </mat-error>\n                    </div>\n                </div>\n            </div>\n\n            <div class=\"row mt-3\">\n                <div class=\"col-sm-3\">\n                    <lib-date-input #monthDateInput (emitFilter)=\"dateInpChange()\" [materialFieldWidthInp]=\"true\"\n                        [materialFormFieldAppearanceInp]=\"MaterialFormFieldAppearance.FORM_FIELD_APPEARANCE\"\n                        [isMandatoryFieldInp]=\"true\" [dateInputTypeInp]=\"DateInputTypeEnum.MONTH_INPUT\"\n                        [dateTypeInp]=\"DateTypeEnum.EXCLUSIVE\" [showDefaultDurationInp]=\"true\"\n                        [labelInp]=\"'Select date'\" [timezoneInp]=\"timezone\"></lib-date-input>\n                </div>\n\n                <div class=\"col-sm-3\">\n                    <mat-form-field class=\"matFieldWidth100\"\n                        [appearance]=\"MaterialFormFieldAppearance.FORM_FIELD_APPEARANCE\">\n                        <mat-label>Select aggregation</mat-label>\n                        <mat-select formControlName=\"interval\" required>\n                            <mat-option [value]=\"'DAILY'\">Daily</mat-option>\n                            <mat-option [value]=\"'MONTHLY'\">Monthly</mat-option>\n                        </mat-select>\n                        <mat-error *ngIf=\"errorHandling(reportFG, 'interval', 'required')\">\n                            {{ FormErrorEnum.REQUIRED }}\n                        </mat-error>\n                    </mat-form-field>\n                </div>\n\n\n                <div class=\"col-sm-3\">\n                    <div formGroupName=\"sourceConsumer\">\n                        <mat-form-field class=\"matFieldWidth100\"\n                            [appearance]=\"MaterialFormFieldAppearance.FORM_FIELD_APPEARANCE\">\n                            <mat-label> Select {{ reportFG.get('sourceConsumer.type').value == 'SOURCE' ? 'source' :\n                                'consumer' }} type</mat-label>\n\n                            <mat-select formControlName=\"keyID\" required>\n                                <ng-container\n                                    *ngIf=\"sourceConsumerType && sourceConsumerType.length > 0 && sourceConsumerType[0]['id']; else noSourceConsumerType\">\n                                    <mat-option *ngFor=\"let type of sourceConsumerType\" [value]=\"type.keyID\">\n                                        {{ type.name }}\n                                    </mat-option>\n                                </ng-container>\n\n                                <ng-template #noSourceConsumerType>\n                                    <mat-option disabled>\n                                        {{ COMMON_CONSTANT.NO_DATA_FOUND }}\n                                    </mat-option>\n                                </ng-template>\n                            </mat-select>\n\n                            <mat-error *ngIf=\"errorHandling(reportFG, 'sourceConsumer.keyID', 'required')\">\n                                {{ FormErrorEnum.REQUIRED }}\n                            </mat-error>\n                        </mat-form-field>\n                    </div>\n                </div>\n\n                <div class=\"col-sm-3\">\n                    <div formGroupName=\"params\">\n                        <mat-form-field class=\"matFieldWidth100\" [appearance]=\"MaterialFormFieldAppearance.FORM_FIELD_APPEARANCE\">\n                            <mat-label>Select consumption parameter</mat-label>\n\n                            <mat-select formControlName=\"name\" required>\n                                <ng-container\n                                    *ngIf=\"consumptionParamM && consumptionParamM.length > 0 && consumptionParamM[0]['id']; else noConsumptionParamM\">\n                                    <mat-option *ngFor=\"let param of consumptionParamM\" [value]=\"param.paramMetric\">\n                                        {{ param.label }}\n                                    </mat-option>\n                                </ng-container>\n\n                                <ng-template #noConsumptionParamM>\n                                    <mat-option disabled>\n                                        {{ COMMON_CONSTANT.NO_DATA_FOUND }}\n                                    </mat-option>\n                                </ng-template>\n                            </mat-select>\n\n                            <mat-error *ngIf=\"errorHandling(reportFG, 'params.name', 'required')\">\n                                {{ FormErrorEnum.REQUIRED }}\n                            </mat-error>\n                        </mat-form-field>\n                    </div>\n                </div>\n            </div>\n\n            <button class=\"d-none\" type=\"submit\" #formSubmitBtn></button>\n        </form>\n\n        <div class=\"row\">\n            <div class=\"col-sm-12\">\n                <div class=\"float-end\">\n                    <button class=\"btn btn-sm btn-primary\" (click)=\"formSubmitBtn.click()\" matRipple\n                        [matRippleCentered]=\"MATERIAL_CONSTANT.MAT_RIPPLE_CENTER\">\n                        {{ ButtonLabelEnum.READ_BTN_LABEL }}\n                    </button>\n                    <lib-download-report [excludeFileTypeInp]=\"FileTypeEnum.CSV\" (fileTypeEmitted)=\"downloadReport($event)\"></lib-download-report>\n                </div>\n            </div>\n        </div>\n\n        <div class=\"row mt-3\">\n            <div class=\"col-sm-12\">\n                <lib-message-alert *ngIf=\"reportAlertObj.showAlert\" [labelInp]=\"reportAlertObj.alertLabel\"\n                    [contentInp]=\"reportAlertObj.alertContent\" [messageAlertTypeInp]=\"reportAlertObj.messageAlertType\"\n                    [messageAlertIconInp]=\"reportAlertObj.messageAlertIcon\">\n                </lib-message-alert>\n            </div>\n        </div>\n\n        <div class=\"row mt-3\">\n            <div class=\"centerAlign\">\n                <lib-skeleton-loader *ngIf=\"showLoader\" [count]=\"3\" [appearance]=\"'circle'\"\n                    [theme]=\"{ height: '15px', width: '15px', 'background-color': '#e7ebf3' }\"></lib-skeleton-loader>\n            </div>\n        </div>\n\n        <div class=\"row mt-3\" *ngIf=\"reportData && reportData.length > 0 && reportData[0].date\">\n            <table class=\"table\">\n                <tbody>\n                    <tr class=\"tableHeader\">\n                        <td align=\"center\" class=\"fw-bold\"> Date </td>\n                        <td align=\"center\" class=\"fw-bold\"> Meter name </td>\n                        <td align=\"center\" class=\"fw-bold\"> Parameter name </td>\n                        <td align=\"center\" class=\"fw-bold\"> Meter start reading </td>\n                        <td align=\"center\" class=\"fw-bold\"> Meter end reading </td>\n                        <td align=\"center\" class=\"fw-bold\"> Consumption </td>\n                    </tr>\n                </tbody>\n                <tbody>\n                    <tr *ngFor=\"let data of reportData; let i = index\">\n                        <td align=\"center\" class=\"colWidthContainingDateTime\">{{ row?.date | date: 'dd-MMM-yyyy\n                            HH:mm:ss' }}</td>\n                        <td align=\"center\">{{ row?.meterName }}</td>\n                        <td align=\"center\">{{ row?.parameterName }}</td>\n                        <td align=\"center\">{{ row?.meterStartReading }}</td>\n                        <td align=\"center\">{{ row?.meterEndReading }}</td>\n                        <td align=\"center\">{{ row?.meterConsumption }}</td>\n                    </tr>\n                </tbody>\n            </table>\n        </div>\n    </div>\n</div>","import { NgModule } from '@angular/core';\nimport { RouterModule, Routes } from '@angular/router';\n\nimport { ConsumptionReportComponent } from './consumption.component';\n\nconst routes: Routes = [\n    {\n        path: '',\n        component: ConsumptionReportComponent\n    }\n];\n\n@NgModule({\n    imports: [RouterModule.forChild(routes)],\n    exports: [RouterModule]\n})\nexport class ConsumptionReportRoutingModule { }\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\n\nimport {\n    FormsModule,\n    ReactiveFormsModule\n} from '@angular/forms';\n\nimport { MatFormFieldModule } from '@angular/material/form-field';\nimport { MatSelectModule } from '@angular/material/select';\nimport { MatTableModule } from '@angular/material/table';\nimport { MatRippleModule } from '@angular/material/core';\nimport { MatButtonToggleModule } from '@angular/material/button-toggle';\nimport { MatSlideToggleModule } from '@angular/material/slide-toggle';\n\nimport { NgxMatSelectSearchModule } from 'ngx-mat-select-search';\n\nimport { DownloadReportModule } from '../../_shared/download-report/download-report.module';\n\nimport { ConsumptionReportRoutingModule } from './consumption-routing.module';\nimport { ConsumptionReportComponent } from './consumption.component';\n\n// tsc-library\nimport { DateInputModule } from '@library/date';\nimport { MessageAlertModule, SkeletonModule } from '@library/tsc-common';\n// /tsc-library/\n\n@NgModule({\n    declarations: [\n        ConsumptionReportComponent\n    ],\n    imports: [\n        CommonModule,\n        ConsumptionReportRoutingModule,\n\n        FormsModule,\n        ReactiveFormsModule,\n\n        MatFormFieldModule,\n        MatSelectModule,\n        MatTableModule,\n        MatRippleModule,\n        MatButtonToggleModule,\n        MatSlideToggleModule,\n\n        NgxMatSelectSearchModule,\n\n        DownloadReportModule,\n\n        DateInputModule,\n        MessageAlertModule,\n        SkeletonModule\n    ]\n})\nexport class ConsumptionReportModule { }\n","export interface DataAvailabilityM {\n    id: number;\n    date: string\n    entityName: string;\n    deviceName: string;\n    parameterName: string;\n    avgValue: number;\n    minValue: number;\n    maxValue: number;\n    dataAvailability: number;\n}\n\nexport class DataAvailability implements DataAvailabilityM {\n    id;\n    date;\n    entityName;\n    deviceName;\n    parameterName;\n    avgValue;\n    minValue;\n    maxValue;\n    dataAvailability;\n}","import { Inject, Injectable } from '@angular/core';\nimport { HttpClient, HttpHeaders } from '@angular/common/http';\n\nimport { Observable } from 'rxjs';\n\nimport { DataAvailabilityM } from '../model/data-availability.model';\n\n@Injectable({\n    providedIn: 'root'\n})\n\nexport class DataAvailabilityController {\n\n    constructor(\n        private http: HttpClient,\n        @Inject('environment') private environment: any\n    ) { }\n\n    getDataAvailability(orgID, requestBody): Observable<DataAvailabilityM[]> {\n        let headers = new HttpHeaders().set('skipLoader', 'YES');\n\n        return this.http.post<DataAvailabilityM[]>(`${this.environment.TSC_COMMON_API_URL}organizations/${orgID}/data-availability`, requestBody, { headers: headers });\n    }\n\n}\n","import { Component, OnInit, ViewChild } from '@angular/core';\nimport { FormControl, Validators } from '@angular/forms';\n\nimport { DropdownTypeEnum } from '../../../enum/dropdown.enum';\nimport { ReportErrorEnum } from '../../../enum/error.enum';\n\nimport { Alert, AlertM } from '../../../model/alert.model';\nimport { DownloadReportRequest } from '../../../model/report.model';\nimport { DataAvailability, DataAvailabilityM } from '../../../model/data-availability.model';\n\nimport { EntityComponent } from '../../dropdown/entity/entity.component';\nimport { DeviceComponent } from '../../dropdown/device/device.component';\nimport { ParamMetricComponent } from '../../dropdown/param-metric/param-metric.component';\n\nimport { DataAvailabilityController } from '../../../controller/data-availability.controller';\n\nimport { ReportService } from '../../../service/report.service';\nimport { AlertService } from '../../../service/alert.service';\n\n// tsc-library\nimport { DateFormatEnum, DateInputTypeEnum, DateTypeEnum, DateService, FrequencyEnum } from '@library/date';\nimport { StorageService } from '@library/storage-service';\nimport { ToastrColor, ToastrService } from '@library/toastr-service';\nimport { ButtonLabelEnum, COMMON_CONSTANT, FREQUENCY_CONSTANT, FormErrorEnum, InvalidForm, MATERIAL_CONSTANT, MaterialFormFieldAppearance, MessageAlertIconEnum, MessageAlertTypeEnum, TSCCommonService } from '@library/tsc-common';\n// /tsc-library/\n\n@Component({\n    selector: 'lib-data-availability',\n    templateUrl: './data-availability.component.html',\n    styles: [\n    ]\n})\nexport class DataAvailabilityReportComponent implements OnInit {\n\n    materialConstant = MATERIAL_CONSTANT;\n    commonConstant = COMMON_CONSTANT;\n    frequencyConstant = FREQUENCY_CONSTANT;\n\n    materialFormFieldAppearance = MaterialFormFieldAppearance;\n    buttonLabelEnum = ButtonLabelEnum;\n    dropdownTypeEnum = DropdownTypeEnum;\n    dateFormatEnum = DateFormatEnum;\n    dateInputTypeEnum = DateInputTypeEnum;\n    dateTypeEnum = DateTypeEnum;\n    frequencyEnum = FrequencyEnum;\n    FormErrorEnum = FormErrorEnum;\n\n    orgID: any;\n    timezone: string;\n    startDate: string;\n    endDate: string;\n    entityID: any;\n    deviceID: any;\n    parameterList: any[] = [];\n    timestamp: any;\n    renderTable: any;\n    dayDifference: any;\n    showAlert: boolean = false;\n    showLoader: boolean = false;\n    format = DateFormatEnum.DATE_TIME;\n\n    dateType: any;\n    frequency: any[] = [];\n    defaultFrequency: string;\n    selectedFrequency: string;\n\n    dataAvailabilityM = [new DataAvailability()];\n\n    reportAlertObj: AlertM = new Alert();\n\n    aggDurationFC: FormControl = new FormControl('day_1', [Validators.required]);\n\n    @ViewChild('entityInput') entityInput: EntityComponent;\n    @ViewChild('deviceInput') deviceInput: DeviceComponent;\n    @ViewChild('paramInput') paramInput: ParamMetricComponent;\n\n    constructor(\n        private storageService: StorageService,\n        private toastService: ToastrService,\n        private tscCommonService: TSCCommonService,\n        private dataAvailabilityController: DataAvailabilityController,\n        public dateService: DateService,\n        private reportService: ReportService,\n        private alertService: AlertService\n    ) { }\n\n    ngOnInit(): void {\n        this.orgID = this.storageService.getStorage('currentOrgID');\n        this.timezone = this.storageService.getStorage('timezone');\n\n        this.frequency = this.frequencyConstant.filter(frequency => frequency.keyID != 'CUSTOM' && frequency.keyID != 'YEARLY');\n        this.defaultFrequency = this.frequencyEnum.DAILY;\n        this.dateType = DateTypeEnum.EXCLUSIVE;\n    }\n\n    dateFilterEmitted(data: any) {\n        this.startDate = data.startDate;\n        this.endDate = data.endDate;\n        this.selectedFrequency = data.frequency;\n\n        this.alertService.resetAlertProperties(this.reportAlertObj);\n    }\n\n    aggDurationChange(selectedAD) {\n        this.aggDurationFC.patchValue(selectedAD);\n\n        this.alertService.resetAlertProperties(this.reportAlertObj);\n    }\n\n    entityInpChange() {\n        this.entityID = this.entityInput.entityFC.value;\n\n        this.paramInput?.parameterFC.reset();\n        this.paramInput?.parameterFC.updateValueAndValidity();\n\n        this.alertService.resetAlertProperties(this.reportAlertObj);\n    }\n\n    deviceInpChange() {\n        this.deviceID = this.deviceInput.deviceFC.value;\n\n        this.paramInput?.parameterFC.reset();\n        this.paramInput?.parameterFC.updateValueAndValidity();\n\n        this.alertService.resetAlertProperties(this.reportAlertObj);\n    }\n\n    paramInpChange() {\n        let paramMetric = this.paramInput?.parameterFC.value;\n\n        if (paramMetric.length > 0) {\n            this.parameterList = this.tscCommonService.removeSelectAllID(paramMetric);\n        }\n\n        this.alertService.resetAlertProperties(this.reportAlertObj);\n    }\n\n    async viewReport() {\n\n        this.alertService.resetAlertProperties(this.reportAlertObj);\n\n        if (this.isValidInputField()) {\n            this.toastService.openToast(InvalidForm.INVALID_FORM_TITLE, InvalidForm.INVALID_FORM_MESSAGE, ToastrColor.ERROR);\n            return;\n        }\n\n        if (this.startDate == this.endDate) {\n            this.alertService.setAlertProperties(this.reportAlertObj, ReportErrorEnum.INVALID_DATE_LABEL, ReportErrorEnum.INVALID_DATE_MESSAGE, MessageAlertTypeEnum.INFO, MessageAlertIconEnum.INFO_ICON);\n            return;\n        }\n\n        try {\n            this.showLoader = true;\n            const requestData = this.createDataRequest();\n\n            this.dataAvailabilityController.getDataAvailability(this.orgID, requestData)\n                .subscribe((res: DataAvailabilityM[]) => {\n                    if (res?.length > 0) {\n                        this.dataAvailabilityM = res;\n                    } else {\n                        this.alertService.setAlertProperties(this.reportAlertObj, ReportErrorEnum.DATA_NOT_FOUND_LABEL, ReportErrorEnum.DATA_NOT_FOUND_MESSAGE, MessageAlertTypeEnum.WARNING, MessageAlertIconEnum.WARNING_ICON);\n                    }\n                },\n                    error => {\n                        console.log('error in getDataAvailability() - ', error);\n                        throw error;\n                    });\n\n        } catch (error) {\n            console.error(\"Error in viewReport()\", error);\n            this.alertService.setAlertProperties(this.reportAlertObj, ReportErrorEnum.INVALID_ERROR_LABEL, ReportErrorEnum.INVALID_ERROR_MESSAGE, MessageAlertTypeEnum.DANGER, MessageAlertIconEnum.DANGER_ICON);\n        } finally {\n            this.showLoader = false;\n        }\n    }\n\n    async downloadReport(format: string) {\n        this.alertService.resetAlertProperties(this.reportAlertObj);\n\n        if (this.isValidInputField()) {\n            this.toastService.openToast(InvalidForm.INVALID_FORM_TITLE, InvalidForm.INVALID_FORM_MESSAGE, ToastrColor.ERROR);\n            return;\n        }\n\n        if (this.startDate == this.endDate) {\n            this.alertService.setAlertProperties(this.reportAlertObj, ReportErrorEnum.INVALID_DATE_LABEL, ReportErrorEnum.INVALID_DATE_MESSAGE, MessageAlertTypeEnum.INFO, MessageAlertIconEnum.INFO_ICON);\n            return;\n        }\n\n        try {\n            this.showLoader = true;\n            const requestData = new DownloadReportRequest();\n\n            requestData.request = this.createDataRequest();\n            requestData.reportName = 'Data Availability Report';\n            requestData.reportFormat = format;\n\n            await this.reportService.downloadReport(this.orgID, requestData);\n\n        } catch (error) {\n            console.error(\"Error in downloadReport()\", error);\n        } finally {\n            this.showLoader = false;\n        }\n    }\n\n    createDataRequest() {\n        let parameter;\n\n        if (this.paramInput.parameterFC.value?.length > 0) {\n            parameter = this.tscCommonService.removeSelectAllID(this.paramInput.parameterFC.value);\n        }\n\n        let requestData = {};\n\n        requestData['startTime'] = this.startDate;\n        requestData['endTime'] = this.endDate;\n        requestData['interval'] = this.aggDurationFC.value;\n        requestData['entityID'] = this.entityInput.entityFC.value;\n        requestData['deviceID'] = this.deviceInput.deviceFC.value;\n        requestData['parameters'] = parameter;\n\n        return requestData;\n    }\n\n    isValidInputField() {\n        const controls = [\n            this.entityInput.entityFC,\n            this.deviceInput.deviceFC,\n            this.paramInput.parameterFC\n        ];\n\n        controls.forEach(control => control.markAsTouched());\n        return controls.some(control => control.invalid);\n    }\n\n}","<div class=\"card main-card cardOverwrite h100\">\n    <div class=\"headerContainer\">\n        <div class=\"headerLeftContainer\">\n            <div class=\"pageTitle\">Data Availability Report</div>\n        </div>\n    </div>\n\n    <div class=\"card-body\">\n        <div class=\"row\">\n            <div class=\"col-sm-12\">\n                <lib-date-filter-two [frequencyInp]=\"frequency\" [defaultFrequencyInp]=\"defaultFrequency\"\n                    [dateTypeInp]=\"dateType\" [showDefaultDurationInp]=\"true\" [timezoneInp]=\"timezone\"\n                    (dateFilterEmitter)=\"dateFilterEmitted($event)\"></lib-date-filter-two>\n            </div>\n        </div>\n\n        <div class=\"row mt-3\">\n            <div class=\"col-sm-3\">\n                <mat-form-field class=\"matFieldWidth100\"\n                    [appearance]=\"materialFormFieldAppearance.FORM_FIELD_APPEARANCE\">\n                    <mat-label>Select aggregation duration</mat-label>\n                    <mat-select (selectionChange)=\"aggDurationChange($event.value)\" [formControl]=\"aggDurationFC\"\n                        required>\n                        <mat-option [value]=\"'day_1'\">\n                            Daily\n                        </mat-option>\n                        <mat-option [value]=\"'month_1'\" *ngIf=\"selectedFrequency == 'MONTHLY'\">\n                            Monthly\n                        </mat-option>\n                    </mat-select>\n                    <mat-error *ngIf=\"aggDurationFC.touched && aggDurationFC.hasError('required')\">\n                        {{ FormErrorEnum.REQUIRED }}\n                    </mat-error>\n                </mat-form-field>\n            </div>\n\n            <div class=\"col-sm-3\">\n                <lib-entity #entityInput (emitFilter)=\"entityInpChange()\"></lib-entity>\n            </div>\n\n            <div class=\"col-sm-3\">\n                <lib-device #deviceInput [dropdownTypeInp]=\"dropdownTypeEnum.SINGLE_DROPDOWN\" [entityInp]=\"entityID\"\n                    (emitFilter)=\"deviceInpChange()\"></lib-device>\n            </div>\n\n            <div class=\"col-sm-3\">\n                <lib-param-metric #paramInput [deviceInp]=\"deviceID\" (emitFilter)=\"paramInpChange()\"></lib-param-metric>\n            </div>\n        </div>\n\n        <div class=\"row\">\n            <div class=\"col-sm-12\">\n                <div class=\"float-end\">\n                    <button class=\"btn btn-sm btn-primary\" type=\"button\" (click)=\"viewReport()\" matRipple\n                        [matRippleCentered]=\"materialConstant.MAT_RIPPLE_CENTER\">\n                        {{ buttonLabelEnum.READ_BTN_LABEL }}\n                    </button>\n                    <lib-download-report (fileTypeEmitted)=\"downloadReport($event)\"></lib-download-report>\n                </div>\n            </div>\n        </div>\n\n        <div class=\"row\">\n            <div class=\"col-sm-12\">\n                <lib-message-alert *ngIf=\"reportAlertObj.showAlert\" [labelInp]=\"reportAlertObj.alertLabel\"\n                    [contentInp]=\"reportAlertObj.alertContent\" [messageAlertTypeInp]=\"reportAlertObj.messageAlertType\"\n                    [messageAlertIconInp]=\"reportAlertObj.messageAlertIcon\">\n                </lib-message-alert>\n            </div>\n        </div>\n\n        <div class=\"row\">\n            <div class=\"centerAlign\">\n                <lib-skeleton-loader *ngIf=\"showLoader\" [count]=\"3\" [appearance]=\"'circle'\"\n                    [theme]=\"{ height: '15px', width: '15px', 'background-color': '#e7ebf3' }\"></lib-skeleton-loader>\n            </div>\n        </div>\n\n        <div class=\"row mt-3\" *ngIf=\"dataAvailabilityM && dataAvailabilityM?.length > 0 && dataAvailabilityM[0]?.deviceName\">\n            <div class=\"overflowX customScrollBar\">\n                <table class=\"table\">\n                    <tbody>\n                        <tr class=\"tableHeader\">\n                            <td class=\"fw-bold\"> Sr. No. </td>\n                            <td align=\"center\" class=\"fw-bold\"> Time </td>\n                            <td align=\"center\" class=\"fw-bold\"> Entity </td>\n                            <td align=\"center\" class=\"fw-bold\"> Device </td>\n                            <td align=\"center\" class=\"fw-bold\"> Parameter </td>\n                            <td align=\"center\" class=\"fw-bold\"> Min value </td>\n                            <td align=\"center\" class=\"fw-bold\"> Max value </td>\n                            <td align=\"center\" class=\"fw-bold\"> Avg value </td>\n                            <td align=\"center\" class=\"fw-bold\"> Data availability (%) </td>\n                        </tr>\n                    </tbody>\n                    <tbody>\n                        <tr *ngFor=\"let data of dataAvailabilityM; let i = index\">\n                            <td>{{ i + 1 }}</td>\n                            <td align=\"center\" class=\"colWidthContainingDateTime\">{{ dateService.formatDate(data.date, this.format) }}</td>\n                            <td align=\"center\">{{ data.entityName }}</td>\n                            <td align=\"center\">{{ data.deviceName }}</td>\n                            <td align=\"center\">{{ data.parameterName }}</td>\n                            <td align=\"center\">{{ data.minValue }}</td>\n                            <td align=\"center\">{{ data.maxValue }}</td>\n                            <td align=\"center\">{{ data.avgValue }}</td>\n                            <td align=\"center\">{{ data.dataAvailability }}</td>\n                        </tr>\n                    </tbody>\n                </table>\n            </div>\n        </div>\n    </div>\n</div>","import { NgModule } from '@angular/core';\nimport { RouterModule, Routes } from '@angular/router';\n\nimport { DataAvailabilityReportComponent } from './data-availability.component';\n\nconst routes: Routes = [\n    {\n        path: '',\n        component: DataAvailabilityReportComponent\n    }\n];\n\n@NgModule({\n    imports: [RouterModule.forChild(routes)],\n    exports: [RouterModule]\n})\n\nexport class DataAvailabilityReportRoutingModule { }\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\n\nimport { MatRippleModule } from '@angular/material/core';\nimport { MatInputModule } from '@angular/material/input';\nimport { MatFormFieldModule } from '@angular/material/form-field';\nimport { MatSelectModule } from '@angular/material/select';\nimport { MatTableModule } from '@angular/material/table';\n\nimport { EntityModule } from '../../dropdown/entity/entity.module';\nimport { DeviceModule } from '../../dropdown/device/device.module';\nimport { ParamMetricModule } from '../../dropdown/param-metric/param-metric.module';\nimport { DownloadReportModule } from '../../_shared/download-report/download-report.module';\n\nimport { DataAvailabilityReportRoutingModule } from './data-availability-routing.module';\nimport { DataAvailabilityReportComponent } from './data-availability.component';\n\n// tsc-library\nimport { DateFilterTwoModule } from '@library/date';\nimport { MessageAlertModule, SkeletonModule } from '@library/tsc-common';\n// /tsc-library/\n\n@NgModule({\n    declarations: [\n        DataAvailabilityReportComponent\n    ],\n    imports: [\n        CommonModule,\n        DataAvailabilityReportRoutingModule,\n        DateFilterTwoModule,\n        FormsModule,\n        ReactiveFormsModule,\n        EntityModule,\n        DeviceModule,\n        ParamMetricModule,\n        DownloadReportModule,\n        SkeletonModule,\n        MessageAlertModule,\n        MatTableModule,\n        MatInputModule,\n        MatFormFieldModule,\n        MatSelectModule,\n        MatRippleModule,\n    ]\n})\nexport class DataAvailabilityReportModule { }\n","import { Component, OnInit, ViewChild } from '@angular/core';\nimport { FormControl } from '@angular/forms';\n\nimport { ReportErrorEnum } from '../../../enum/error.enum';\n\nimport { AggregateDataRequest } from '../../../model/aggregate-data.model';\nimport { DevicesWithEntities, DevicesWithEntitiesM } from '../../../model/device.model';\nimport { Alert, AlertM } from '../../../model/alert.model';\nimport { DownloadReportRequest } from '../../../model/report.model';\n\nimport { AggregationDurationComponent } from '../../dropdown/aggregation-duration/aggregation-duration.component';\nimport { ParamMetricComponent } from '../../dropdown/param-metric/param-metric.component';\n\nimport { EntityDeviceService } from '../../../service/entity-device.service';\nimport { AggregateDataService } from '../../../service/aggregate-data.service';\nimport { ReportService } from '../../../service/report.service';\nimport { AlertService } from '../../../service/alert.service';\n\n// tsc-library\nimport { CUSTOM_RANGE_CONSTANT_EXCLUSIVE_DATE, DateFormatEnum, DateInputComponent, DateInputTypeEnum, DateTypeEnum } from '@library/date';\nimport { StorageService } from '@library/storage-service';\nimport { ToastrColor, ToastrService } from '@library/toastr-service';\nimport { ButtonLabelEnum, COMMON_CONSTANT, FormErrorEnum, InvalidForm, MATERIAL_CONSTANT, MatSelectSearchService, MaterialFormFieldAppearance, MessageAlertIconEnum, MessageAlertTypeEnum, TSCCommonService } from '@library/tsc-common';\nimport { ApplicationKeyID } from '@library/application-service';\n// /tsc-library/\n\n@Component({\n    selector: 'lib-meter',\n    templateUrl: './meter.component.html',\n    styles: [\n    ]\n})\nexport class MeterReportComponent implements OnInit {\n\n    materialConstant = MATERIAL_CONSTANT;\n    commonConstant = COMMON_CONSTANT;\n    customRangeConstant = CUSTOM_RANGE_CONSTANT_EXCLUSIVE_DATE;\n\n    materialFormFieldAppearance = MaterialFormFieldAppearance;\n    buttonLabelEnum = ButtonLabelEnum;\n    dateFormatEnum = DateFormatEnum;\n    dateInputTypeEnum = DateInputTypeEnum;\n    dateTypeEnum = DateTypeEnum;\n    FormErrorEnum = FormErrorEnum;\n\n    orgID: any;\n    applicationKeyID: any;\n    paramMetric: any;\n    timezone: string;\n    startDate: string;\n    endDate: string;\n    aggDuration: string;\n    entityID: any;\n    parameterList: any[] = [];\n    timestamp: any;\n    renderTable: any;\n    reportData: any;\n    showAlert: boolean = false;\n    showLoader: boolean = false;\n\n    entityDeviceM = [new DevicesWithEntities()];\n    reportAlertObj: AlertM = new Alert();\n\n    meterFC: FormControl = new FormControl();\n\n    meterSearchUtil: MatSelectSearchService = new MatSelectSearchService(['name']);\n\n    @ViewChild('customDateInput') customDateInput: DateInputComponent;\n    @ViewChild('aggDurationInput') aggDurationInput: AggregationDurationComponent;\n    @ViewChild('paramInput') paramInput: ParamMetricComponent;\n\n    constructor(\n        private storageService: StorageService,\n        private toastService: ToastrService,\n        private tscCommonService: TSCCommonService,\n        private entityDeviceService: EntityDeviceService,\n        private aggregateDataService: AggregateDataService,\n        private reportService: ReportService,\n        private alertService: AlertService\n    ) { }\n\n    ngOnInit(): void {\n        this.orgID = this.storageService.getStorage('currentOrgID');\n        this.timezone = this.storageService.getStorage('timezone');\n        this.applicationKeyID = this.storageService.getStorage('applicationKeyID');\n\n        if (this.applicationKeyID == ApplicationKeyID.ENERGY_KEY_ID) {\n            this.paramMetric = \"engEnergyUsed\";\n        } else if (this.applicationKeyID == ApplicationKeyID.WATER_KEY_ID) {\n            this.paramMetric = \"gwFlowTotalizer\";\n        }\n\n        this.getDevicesWithEntitiesByParameter();\n    }\n\n    async getDevicesWithEntitiesByParameter() {\n        this.entityDeviceM = <DevicesWithEntitiesM[]>await this.entityDeviceService.getDevicesWithEntitiesByParameter(this.orgID, this.paramMetric);\n\n        this.meterSearchUtil.entityArr = this.entityDeviceM;\n        this.meterSearchUtil.createSubscription();\n\n        if (this.entityDeviceM.length > 0 && this.entityDeviceM?.[0]?.id) {\n            const deviceID = this.entityDeviceM?.[0]?.['devices']?.[0]?.['id'];\n            this.meterFC.patchValue(deviceID);\n            this.entityID = this.getEntityIDByDeviceID(deviceID);\n        }\n    }\n\n    meterChange(selectedMeter) {\n        this.paramInput?.parameterFC.reset();\n        this.paramInput?.parameterFC.updateValueAndValidity();\n\n        this.meterFC.patchValue(selectedMeter);\n        this.entityID = this.getEntityIDByDeviceID(selectedMeter);\n    }\n\n    getEntityIDByDeviceID(deviceID) {\n        for (const entity of this.entityDeviceM) {\n            for (const device of entity.devices) {\n                if (device.id == deviceID) {\n                    return entity.id;\n                }\n            }\n        }\n        return null;\n    }\n\n    dateInpChange() {\n        this.startDate = this.customDateInput.startDateFC.value;\n        this.endDate = this.customDateInput.endDateFC.value;\n\n        this.alertService.resetAlertProperties(this.reportAlertObj);\n\n    }\n\n    aggDurationInpChange() {\n        this.aggDuration = this.aggDurationInput.aggDurationFC.value;\n\n        this.alertService.resetAlertProperties(this.reportAlertObj);\n\n    }\n\n    paramInpChange() {\n        let paramMetric = this.paramInput?.parameterFC.value;\n\n        if (paramMetric.length > 0) {\n            this.parameterList = this.tscCommonService.removeSelectAllID(paramMetric);\n        }\n\n        this.alertService.resetAlertProperties(this.reportAlertObj);\n\n    }\n\n    async viewReport() {\n\n        this.alertService.resetAlertProperties(this.reportAlertObj);\n\n        if (this.isValidInputField()) {\n            this.toastService.openToast(InvalidForm.INVALID_FORM_TITLE, InvalidForm.INVALID_FORM_MESSAGE, ToastrColor.ERROR);\n            return;\n        }\n\n        if (this.startDate == this.endDate) {\n            this.alertService.setAlertProperties(this.reportAlertObj, ReportErrorEnum.INVALID_DATE_LABEL, ReportErrorEnum.INVALID_DATE_MESSAGE, MessageAlertTypeEnum.INFO, MessageAlertIconEnum.INFO_ICON);\n            return;\n        }\n\n        this.showLoader = true;\n\n        try {\n            const requestData = this.createDataRequest();\n\n            this.reportData = await this.aggregateDataService.getAggregateData(this.orgID, requestData);\n\n            if (this.reportData?.length > 0 && !this.reportData?.every(item => item.data.length == 0) ) {\n                this.timestamp = this.reportService.extractTimestamp(this.reportData);\n                this.renderTable = this.reportService.populateTable(this.timestamp, this.reportData, this.dateFormatEnum.DATE_TIME);\n            } else {\n                this.alertService.setAlertProperties(this.reportAlertObj, ReportErrorEnum.DATA_NOT_FOUND_LABEL, ReportErrorEnum.DATA_NOT_FOUND_MESSAGE, MessageAlertTypeEnum.WARNING, MessageAlertIconEnum.WARNING_ICON);\n            }\n\n        } catch (error) {\n            console.error(\"Error in viewReport()\", error);\n            this.alertService.setAlertProperties(this.reportAlertObj, ReportErrorEnum.INVALID_ERROR_LABEL, ReportErrorEnum.INVALID_ERROR_MESSAGE, MessageAlertTypeEnum.DANGER, MessageAlertIconEnum.DANGER_ICON);\n        } finally {\n            this.showLoader = false;\n        }\n    }\n\n    async downloadReport(format: string) {\n        this.alertService.resetAlertProperties(this.reportAlertObj);\n\n        if (this.isValidInputField()) {\n            this.toastService.openToast(InvalidForm.INVALID_FORM_TITLE, InvalidForm.INVALID_FORM_MESSAGE, ToastrColor.ERROR);\n            return;\n        }\n\n        if (this.startDate == this.endDate) {\n            this.alertService.setAlertProperties(this.reportAlertObj, ReportErrorEnum.INVALID_DATE_LABEL, ReportErrorEnum.INVALID_DATE_MESSAGE, MessageAlertTypeEnum.INFO, MessageAlertIconEnum.INFO_ICON);\n            return;\n        }\n\n        this.showLoader = true;\n\n        try {\n\n            const requestData = new DownloadReportRequest();\n\n            requestData.request = this.createDataRequest();\n            requestData.reportName = 'Meter Report';\n            requestData.reportFormat = format;\n\n            await this.reportService.downloadReport(this.orgID, requestData);\n\n        } catch (error) {\n            console.error(\"Error in downloadReport()\", error);\n        } finally {\n            this.showLoader = false;\n        }\n    }\n\n    createDataRequest() {\n\n        const requestData = new AggregateDataRequest();\n\n        requestData.startTime = this.startDate;\n        requestData.endTime = this.endDate;\n        requestData.interval = this.aggDuration;\n        requestData.entityID = [this.entityID];\n        requestData.deviceID = [this.meterFC.value];\n        requestData.params = [];\n        for (const paramMetric of this.parameterList) {\n            requestData.params.push({\n                name: paramMetric,\n                dsAgg: \"avg\",\n                agg: \"avg\"\n            });\n        }\n        requestData.nullifyParams();\n\n        return requestData;\n    }\n\n    isValidInputField() {\n        const controls = [\n            this.customDateInput.startDateFC,\n            this.aggDurationInput.aggDurationFC,\n            this.meterFC,\n            this.paramInput.parameterFC\n        ];\n\n        controls.forEach(control => control.markAsTouched());\n        return controls.some(control => control.invalid);\n    }\n\n}\n","<div class=\"card main-card cardOverwrite h100\">\n    <div class=\"headerContainer\">\n        <div class=\"headerLeftContainer\">\n            <div class=\"pageTitle\">Meter Report</div>\n        </div>\n    </div>\n\n    <div class=\"card-body\">\n        <div class=\"row\">\n            <div class=\"col-sm-3\">\n                <lib-date-input #customDateInput (emitFilter)=\"dateInpChange()\" [materialFieldWidthInp]=\"true\"\n                    [materialFormFieldAppearanceInp]=\"materialFormFieldAppearance.FORM_FIELD_APPEARANCE\"\n                    [isMandatoryFieldInp]=\"true\" [dateInputTypeInp]=\"dateInputTypeEnum.CUSTOM_INPUT\"\n                    [dateTypeInp]=\"dateTypeEnum.EXCLUSIVE\" [showDefaultDurationInp]=\"true\" [showCdrRangeLabelInp]=\"true\"\n                    [labelInp]=\"'Select date'\" [timezoneInp]=\"timezone\" [rangeInp]=\"customRangeConstant\" [showTimeInCDRInp]=\"true\"\n                    [showRangeInp]=\"true\" [cdrFormatInp]=\"'YYYY-MM-DD HH:mm:ss'\"></lib-date-input>\n            </div>\n\n            <div class=\"col-sm-3\">\n                <lib-aggregation-duration #aggDurationInput\n                    (emitFilter)=\"aggDurationInpChange()\"></lib-aggregation-duration>\n            </div>\n\n            <div class=\"col-sm-3\">\n                <mat-form-field class=\"matFieldWidth100\" [appearance]=\"materialFormFieldAppearance.FORM_FIELD_APPEARANCE\">\n                    <mat-label>Select meter</mat-label>\n                    <mat-select (selectionChange)=\"meterChange($event.value)\" [formControl]=\"meterFC\" required>\n                        <ng-container *ngIf=\"entityDeviceM && entityDeviceM.length > 0 && entityDeviceM?.[0]?.id; else noDataFound\">\n                            <mat-option>\n                                <ngx-mat-select-search [formControl]=\"meterSearchUtil.filterFC\" placeholderLabel=\"Search by entity name\"\n                                    noEntriesFoundLabel=\"No matching name found.\">\n                                </ngx-mat-select-search>\n                            </mat-option>\n                            <mat-optgroup *ngFor=\"let entity of meterSearchUtil.filteredEntities | async\" [label]=\"entity.name\"\n                                [disabled]=\"entity.disabled\">\n                                <mat-option *ngFor=\"let device of entity.devices\" [value]=\"device.id\">\n                                    {{ device.name }}\n                                </mat-option>\n                            </mat-optgroup>\n                        </ng-container>\n                        <ng-template #noDataFound>\n                            <mat-option disabled>\n                                {{ commonConstant.NO_DATA_FOUND }}\n                            </mat-option>\n                        </ng-template>\n                    </mat-select>\n                    <mat-error *ngIf=\"meterFC.touched && meterFC.hasError('required')\">\n                        {{ FormErrorEnum.REQUIRED }}\n                    </mat-error>\n                </mat-form-field>\n            </div>\n\n            <div class=\"col-sm-3\">\n                <lib-param-metric #paramInput [deviceInp]=\"meterFC.value\" (emitFilter)=\"paramInpChange()\"></lib-param-metric>\n            </div>\n        </div>\n\n        <div class=\"row\">\n            <div class=\"col-sm-12\">\n                <div class=\"float-end\">\n                    <button class=\"btn btn-sm btn-primary\" type=\"button\" (click)=\"viewReport()\" matRipple\n                        [matRippleCentered]=\"materialConstant.MAT_RIPPLE_CENTER\">\n                        {{ buttonLabelEnum.READ_BTN_LABEL }}\n                    </button>\n                    <lib-download-report (fileTypeEmitted)=\"downloadReport($event)\"></lib-download-report>\n                </div>\n            </div>\n        </div>\n\n        <div class=\"row\">\n            <div class=\"col-sm-12\">\n                <lib-message-alert *ngIf=\"reportAlertObj.showAlert\" [labelInp]=\"reportAlertObj.alertLabel\"\n                    [contentInp]=\"reportAlertObj.alertContent\" [messageAlertTypeInp]=\"reportAlertObj.messageAlertType\"\n                    [messageAlertIconInp]=\"reportAlertObj.messageAlertIcon\">\n                </lib-message-alert>\n            </div>\n        </div>\n\n        <div class=\"row\">\n            <div class=\"centerAlign\">\n                <lib-skeleton-loader *ngIf=\"showLoader\" [count]=\"3\" [appearance]=\"'circle'\"\n                    [theme]=\"{ height: '15px', width: '15px', 'background-color': '#e7ebf3' }\"></lib-skeleton-loader>\n            </div>\n        </div>\n\n        <div class=\"row mt-3\" *ngIf=\"renderTable && renderTable.length > 0\">\n            <div class=\"overflowX customScrollBar\">\n                <table class=\"table\">\n                    <tbody>\n                        <tr class=\"tableHeader\">\n                            <td class=\"fw-bold\"> Sr. No. </td>\n                            <td align=\"center\" class=\"fw-bold\"> Time </td>\n                            <ng-container *ngFor=\"let data of reportData; let i = index\">\n                                <td align=\"center\" class=\"fw-bold\">\n                                    {{ data.paramLabel }} ({{ data.unit }}) ({{ data.dsAgg }})\n                                </td>\n                            </ng-container>\n                        </tr>\n                    </tbody>\n                    <tbody>\n                        <tr *ngFor=\"let row of renderTable\">\n                            <td>{{ row.index }}</td>\n                            <td align=\"center\" class=\"colWidthContainingDateTime\">{{ row.time }}</td>\n                            <td align=\"center\" *ngFor=\"let value of row.data\">{{ value ? value : commonConstant.HYPHEN\n                                }}\n                            </td>\n                        </tr>\n                    </tbody>\n                </table>\n            </div>\n        </div>\n    </div>\n</div>","import { NgModule } from '@angular/core';\nimport { RouterModule, Routes } from '@angular/router';\n\nimport { MeterReportComponent } from './meter.component';\n\nconst routes: Routes = [\n    {\n        path: '',\n        component: MeterReportComponent\n    }\n];\n\n@NgModule({\n  imports: [RouterModule.forChild(routes)],\n  exports: [RouterModule]\n})\nexport class MeterReportRoutingModule { }\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\n\nimport { MatInputModule } from '@angular/material/input';\nimport { MatFormFieldModule } from '@angular/material/form-field';\nimport { MatSelectModule } from '@angular/material/select';\nimport { MatTableModule } from '@angular/material/table';\nimport { MatRippleModule } from '@angular/material/core';\n\nimport { NgxMatSelectSearchModule } from 'ngx-mat-select-search';\n\nimport { AggregationDurationModule } from '../../dropdown/aggregation-duration/aggregation-duration.module';\nimport { ParamMetricModule } from '../../dropdown/param-metric/param-metric.module';\nimport { DownloadReportModule } from '../../_shared/download-report/download-report.module';\n\nimport { MeterReportRoutingModule } from './meter-routing.module';\nimport { MeterReportComponent } from './meter.component';\n\n// tsc-library\nimport { DateInputModule } from '@library/date';\nimport { MessageAlertModule, SkeletonModule } from '@library/tsc-common';\n// /tsc-library/\n\n@NgModule({\n    declarations: [\n        MeterReportComponent\n    ],\n    imports: [\n        CommonModule,\n        MeterReportRoutingModule,\n        FormsModule,\n        ReactiveFormsModule,\n        DateInputModule,\n        AggregationDurationModule,\n        ParamMetricModule,\n        DownloadReportModule,\n        MessageAlertModule,\n        SkeletonModule,\n        NgxMatSelectSearchModule,\n        MatInputModule,\n        MatFormFieldModule,\n        MatSelectModule,\n        MatTableModule,\n        MatRippleModule\n    ]\n})\nexport class MeterReportModule { }\n","import { Component, OnInit, ViewChild } from '@angular/core';\n\nimport { DropdownTypeEnum } from '../../../enum/dropdown.enum';\nimport { ReportErrorEnum } from '../../../enum/error.enum';\n\nimport { AggregateDataRequest } from '../../../model/aggregate-data.model';\nimport { Parameter, ParameterM } from '../../../model/parameter.model';\nimport { Alert, AlertM } from '../../../model/alert.model';\nimport { DownloadReportRequest } from '../../../model/report.model';\n\nimport { AggregationDurationComponent } from '../../dropdown/aggregation-duration/aggregation-duration.component';\nimport { EntityComponent } from '../../dropdown/entity/entity.component';\nimport { DeviceComponent } from '../../dropdown/device/device.component';\nimport { ParamMetricComponent } from '../../dropdown/param-metric/param-metric.component';\nimport { AggregationComponent } from '../../dropdown/aggregation/aggregation.component';\n\nimport { AggregateDataService } from '../../../service/aggregate-data.service';\nimport { ParameterService } from '../../../service/parameter.service';\nimport { ReportService } from '../../../service/report.service';\nimport { AlertService } from '../../../service/alert.service';\n\n// tsc-library\nimport { CUSTOM_RANGE_CONSTANT_EXCLUSIVE_DATE, DateFormatEnum, DateInputComponent, DateInputTypeEnum, DateTypeEnum } from '@library/date';\nimport { StorageService } from '@library/storage-service';\nimport { ToastrColor, ToastrService } from '@library/toastr-service';\nimport { ButtonLabelEnum, COMMON_CONSTANT, InvalidForm, MATERIAL_CONSTANT, MaterialFormFieldAppearance, MessageAlertIconEnum, MessageAlertTypeEnum, TSCCommonService } from '@library/tsc-common';\n// /tsc-library/\n\n@Component({\n    selector: 'lib-parameter',\n    templateUrl: './parameter.component.html',\n    styles: [\n    ]\n})\nexport class ParameterReportComponent implements OnInit {\n\n    materialConstant = MATERIAL_CONSTANT;\n    commonConstant = COMMON_CONSTANT;\n    customRangeConstant = CUSTOM_RANGE_CONSTANT_EXCLUSIVE_DATE;\n\n    materialFormFieldAppearance = MaterialFormFieldAppearance;\n    buttonLabelEnum = ButtonLabelEnum;\n    dropdownTypeEnum = DropdownTypeEnum;\n    dateFormatEnum = DateFormatEnum;\n    dateInputTypeEnum = DateInputTypeEnum;\n    dateTypeEnum = DateTypeEnum;\n\n    orgID: any;\n    timezone: string;\n    startDate: string;\n    endDate: string;\n    aggDuration: string;\n    entityID: any;\n    deviceID: any;\n    parameterList: any;\n    timestamp: any;\n    renderTable: any;\n    reportData: any;\n    paramMetric: any[] = [];\n    metricListArray: any[] = [];\n    showAlert: boolean = false;\n    showLoader: boolean = false;\n\n    parameterM = [new Parameter()];\n    reportAlertObj: AlertM = new Alert();\n\n    @ViewChild('customDateInput') customDateInput: DateInputComponent;\n    @ViewChild('aggDurationInput') aggDurationInput: AggregationDurationComponent;\n    @ViewChild('entityInput') entityInput: EntityComponent;\n    @ViewChild('deviceInput') deviceInput: DeviceComponent;\n    @ViewChild('paramInput') paramInput: ParamMetricComponent;\n    @ViewChild('aggInput') aggInput: AggregationComponent;\n\n    constructor(\n        private storageService: StorageService,\n        private toastService: ToastrService,\n        private tscCommonService: TSCCommonService,\n        private aggregateDataService: AggregateDataService,\n        private parameterService: ParameterService,\n        private reportService: ReportService,\n        private alertService: AlertService\n    ) { }\n\n    ngOnInit(): void {\n        this.orgID = this.storageService.getStorage('currentOrgID');\n        this.timezone = this.storageService.getStorage('timezone');\n\n        this.getParameterByLayoutID();\n    }\n\n    async getParameterByLayoutID() {\n        this.parameterM = <ParameterM[]>await this.parameterService.getParameterByLayoutID(this.orgID);\n    }\n\n    dateInpChange() {\n        this.startDate = this.customDateInput.startDateFC.value;\n        this.endDate = this.customDateInput.endDateFC.value;\n\n        this.alertService.resetAlertProperties(this.reportAlertObj);\n    }\n\n    aggDurationInpChange() {\n        this.aggDuration = this.aggDurationInput.aggDurationFC.value;\n\n        this.alertService.resetAlertProperties(this.reportAlertObj);\n    }\n\n    entityInpChange() {\n        this.entityID = this.entityInput.entityFC.value;\n\n        this.alertService.resetAlertProperties(this.reportAlertObj);\n    }\n\n    deviceInpChange() {\n        this.deviceID = this.deviceInput.deviceFC.value;\n\n        this.alertService.resetAlertProperties(this.reportAlertObj);\n    }\n\n    paramInpChange() {\n        this.paramMetric = this.paramInput?.parameterFC.value;\n\n        if (this.paramMetric?.length > 0) {\n            this.parameterList = this.tscCommonService.removeSelectAllID(this.paramMetric);\n        }\n\n        this.alertService.resetAlertProperties(this.reportAlertObj);\n    }\n\n    aggInpChange(dsAgg?: any, metric?: any) {\n        const metricList: any[] = [];\n\n        if (dsAgg) {\n            dsAgg.forEach(aggregation => {\n                const metricObject = {\n                    name: metric,\n                    dsAgg: aggregation,\n                    agg: \"avg\"\n                };\n                metricList.push(metricObject);\n            });\n        }\n\n        this.metricListArray = this.metricListArray.filter(entry => entry.name != metric);\n\n        this.metricListArray.push(...metricList);\n    }\n\n    async viewReport() {\n\n        this.alertService.resetAlertProperties(this.reportAlertObj);\n\n        if (this.isValidInputField()) {\n            this.toastService.openToast(InvalidForm.INVALID_FORM_TITLE, InvalidForm.INVALID_FORM_MESSAGE, ToastrColor.ERROR);\n            return;\n        }\n\n        if (this.startDate == this.endDate) {\n            this.alertService.setAlertProperties(this.reportAlertObj, ReportErrorEnum.INVALID_DATE_LABEL, ReportErrorEnum.INVALID_DATE_MESSAGE, MessageAlertTypeEnum.INFO, MessageAlertIconEnum.INFO_ICON);\n            return;\n        }\n\n        this.showLoader = true;\n\n        try {\n            const requestData = this.createDataRequest();\n\n            this.reportData = await this.aggregateDataService.getAggregateData(this.orgID, requestData);\n\n            if (this.reportData?.length > 0 && !this.reportData?.every(item => item.data.length == 0)) {\n                this.timestamp = this.reportService.extractTimestamp(this.reportData);\n                this.renderTable = this.reportService.populateTable(this.timestamp, this.reportData, this.dateFormatEnum.DATE_TIME);\n            } else {\n                this.alertService.setAlertProperties(this.reportAlertObj, ReportErrorEnum.DATA_NOT_FOUND_LABEL, ReportErrorEnum.DATA_NOT_FOUND_MESSAGE, MessageAlertTypeEnum.WARNING, MessageAlertIconEnum.WARNING_ICON);\n            }\n\n        } catch (error) {\n            console.error(\"Error in viewReport()\", error);\n            this.alertService.setAlertProperties(this.reportAlertObj, ReportErrorEnum.INVALID_ERROR_LABEL, ReportErrorEnum.INVALID_ERROR_MESSAGE, MessageAlertTypeEnum.DANGER, MessageAlertIconEnum.DANGER_ICON);\n        } finally {\n            this.showLoader = false;\n        }\n    }\n\n    async downloadReport(format: string) {\n        this.alertService.resetAlertProperties(this.reportAlertObj);\n\n        if (this.isValidInputField()) {\n            this.toastService.openToast(InvalidForm.INVALID_FORM_TITLE, InvalidForm.INVALID_FORM_MESSAGE, ToastrColor.ERROR);\n            return;\n        }\n\n        if (this.startDate == this.endDate) {\n            this.alertService.setAlertProperties(this.reportAlertObj, ReportErrorEnum.INVALID_DATE_LABEL, ReportErrorEnum.INVALID_DATE_MESSAGE, MessageAlertTypeEnum.INFO, MessageAlertIconEnum.INFO_ICON);\n            return;\n        }\n\n        this.showLoader = true;\n\n        try {\n            const requestData = new DownloadReportRequest();\n\n            requestData.request = this.createDataRequest();\n            requestData.reportName = 'Parameter Report';\n            requestData.reportFormat = format;\n\n            await this.reportService.downloadReport(this.orgID, requestData);\n\n        } catch (error) {\n            console.error(\"Error in downloadReport()\", error);\n        } finally {\n            this.showLoader = false;\n        }\n    }\n\n    createDataRequest() {\n\n        const filteredMetricListArray = this.metricListArray.filter(metric => this.parameterList.includes(metric.name));\n\n        const requestData = new AggregateDataRequest();\n\n        requestData.startTime = this.startDate;\n        requestData.endTime = this.endDate;\n        requestData.interval = this.aggDuration;\n        requestData.entityID = [this.entityID];\n        requestData.deviceID = [this.deviceID];\n        requestData.params = [];\n        requestData.params.push(\n            ...filteredMetricListArray.map(metric => ({\n                name: metric.name,\n                dsAgg: metric.dsAgg,\n                agg: metric.agg,\n            }))\n        );\n        requestData.nullifyParams();\n\n        return requestData;\n    }\n\n    isValidInputField() {\n        const controls = [\n            this.customDateInput.startDateFC,\n            this.aggDurationInput.aggDurationFC,\n            this.entityInput.entityFC,\n            this.deviceInput.deviceFC,\n            this.paramInput.parameterFC\n        ];\n\n        controls.forEach(control => control.markAsTouched());\n        return controls.some(control => control.invalid);\n    }\n\n    getParameterLabel(paramMetricValue) {\n        const parameter = this.tscCommonService.getUniqueObject(this.parameterM, 'paramMetric', paramMetricValue);\n        return parameter ? parameter.label : '';\n    }\n\n}","<div class=\"card main-card cardOverwrite h100\">\n    <div class=\"headerContainer\">\n        <div class=\"headerLeftContainer\">\n            <div class=\"pageTitle\">Parameter Report</div>\n        </div>\n    </div>\n\n    <div class=\"card-body\">\n        <div class=\"row\">\n            <div class=\"col-sm-3\">\n                <lib-date-input #customDateInput (emitFilter)=\"dateInpChange()\" [materialFieldWidthInp]=\"true\"\n                    [materialFormFieldAppearanceInp]=\"materialFormFieldAppearance.FORM_FIELD_APPEARANCE\"\n                    [isMandatoryFieldInp]=\"true\" [dateInputTypeInp]=\"dateInputTypeEnum.CUSTOM_INPUT\"\n                    [dateTypeInp]=\"dateTypeEnum.EXCLUSIVE\" [showDefaultDurationInp]=\"true\" [showCdrRangeLabelInp]=\"true\"\n                    [labelInp]=\"'Select date'\" [timezoneInp]=\"timezone\" [rangeInp]=\"customRangeConstant\"\n                    [showTimeInCDRInp]=\"true\" [showRangeInp]=\"true\"\n                    [cdrFormatInp]=\"'YYYY-MM-DD HH:mm:ss'\"></lib-date-input>\n            </div>\n\n            <div class=\"col-sm-3\">\n                <lib-aggregation-duration #aggDurationInput\n                    (emitFilter)=\"aggDurationInpChange()\"></lib-aggregation-duration>\n            </div>\n\n            <div class=\"col-sm-3\">\n                <lib-entity #entityInput (emitFilter)=\"entityInpChange()\"></lib-entity>\n            </div>\n\n            <div class=\"col-sm-3\">\n                <lib-device #deviceInput [dropdownTypeInp]=\"dropdownTypeEnum.SINGLE_DROPDOWN\" [entityInp]=\"entityID\"\n                    (emitFilter)=\"deviceInpChange()\"></lib-device>\n            </div>\n        </div>\n\n        <div class=\"row\">\n            <div class=\"col-sm-3\">\n                <lib-param-metric #paramInput [deviceInp]=\"deviceID\" (emitFilter)=\"paramInpChange()\"></lib-param-metric>\n            </div>\n            <div class=\"col-sm-9 mt-4\">\n                <div class=\"float-end\">\n                    <button class=\"btn btn-sm btn-primary\" type=\"button\" (click)=\"viewReport()\" matRipple\n                        [matRippleCentered]=\"materialConstant.MAT_RIPPLE_CENTER\">\n                        {{ buttonLabelEnum.READ_BTN_LABEL }}\n                    </button>\n                    <lib-download-report (fileTypeEmitted)=\"downloadReport($event)\"></lib-download-report>\n                </div>\n            </div>\n        </div>\n\n        <div class=\"row\" *ngIf=\"paramMetric && paramMetric.length > 0\">\n            <table class=\"table\">\n                <tbody>\n                    <tr class=\"tableHeader\">\n                        <td align=\"center\" class=\"fw-bold\"> Metric </td>\n                        <td align=\"center\" class=\"fw-bold\"> Aggregation </td>\n                    </tr>\n                </tbody>\n                <tbody>\n                    <tr *ngFor=\"let metric of parameterList; let i = index\">\n                        <td align=\"center\">\n                            <div class=\"mt-4\">\n                                {{ getParameterLabel(metric) }}\n                            </div>\n                        </td>\n                        <td align=\"center\">\n                            <div class=\"col-sm-6 mt-3\">\n                                <lib-aggregation #aggInput\n                                    (emitFilter)=\"aggInpChange(aggInput.aggregationFC.value, metric)\"></lib-aggregation>\n                            </div>\n                        </td>\n                    </tr>\n                </tbody>\n            </table>\n        </div>\n\n        <div class=\"row\">\n            <div class=\"col-sm-12\">\n                <lib-message-alert *ngIf=\"reportAlertObj.showAlert\" [labelInp]=\"reportAlertObj.alertLabel\"\n                    [contentInp]=\"reportAlertObj.alertContent\" [messageAlertTypeInp]=\"reportAlertObj.messageAlertType\"\n                    [messageAlertIconInp]=\"reportAlertObj.messageAlertIcon\">\n                </lib-message-alert>\n            </div>\n        </div>\n\n        <div class=\"row\">\n            <div class=\"centerAlign\">\n                <lib-skeleton-loader *ngIf=\"showLoader\" [count]=\"3\" [appearance]=\"'circle'\"\n                    [theme]=\"{ height: '15px', width: '15px', 'background-color': '#e7ebf3' }\"></lib-skeleton-loader>\n            </div>\n        </div>\n\n        <div class=\"row mt-3\" *ngIf=\"renderTable && renderTable.length > 0\">\n            <div class=\"overflowX customScrollBar\">\n                <table class=\"table\">\n                    <tbody>\n                        <tr class=\"tableHeader\">\n                            <td class=\"fw-bold\"> Sr. No. </td>\n                            <td align=\"center\" class=\"fw-bold\"> Time </td>\n                            <ng-container *ngFor=\"let data of reportData; let i = index\">\n                                <td align=\"center\" class=\"fw-bold\">\n                                    {{ data.paramLabel }} ({{ data.unit }}) ({{ data.dsAgg }})\n                                </td>\n                            </ng-container>\n                        </tr>\n                    </tbody>\n                    <tbody>\n                        <tr *ngFor=\"let row of renderTable\">\n                            <td>{{ row.index }}</td>\n                            <td align=\"center\" class=\"colWidthContainingDateTime\">{{ row.time }}</td>\n                            <td align=\"center\" *ngFor=\"let value of row.data\">{{ value ? value : commonConstant.HYPHEN\n                                }}\n                            </td>\n                        </tr>\n                    </tbody>\n                </table>\n            </div>\n        </div>\n    </div>\n</div>","import { NgModule } from '@angular/core';\nimport { RouterModule, Routes } from '@angular/router';\n\nimport { ParameterReportComponent } from './parameter.component';\n\nconst routes: Routes = [\n    {\n        path: '',\n        component: ParameterReportComponent\n    }\n];\n\n@NgModule({\n    imports: [RouterModule.forChild(routes)],\n    exports: [RouterModule]\n})\n\nexport class ParameterReportRoutingModule { }\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\n\nimport { MatTableModule } from '@angular/material/table';\nimport { MatRippleModule } from '@angular/material/core';\n\nimport { AggregationDurationModule } from '../../dropdown/aggregation-duration/aggregation-duration.module';\nimport { EntityModule } from '../../dropdown/entity/entity.module';\nimport { DeviceModule } from '../../dropdown/device/device.module';\nimport { ParamMetricModule } from '../../dropdown/param-metric/param-metric.module';\nimport { AggregationModule } from '../../dropdown/aggregation/aggregation.module';\nimport { DownloadReportModule } from '../../_shared/download-report/download-report.module';\n\nimport { ParameterReportRoutingModule } from './parameter-routing.module';\nimport { ParameterReportComponent } from './parameter.component';\n\n// tsc-library\nimport { DateInputModule } from '@library/date';\nimport { MessageAlertModule, SkeletonModule } from '@library/tsc-common';\n// /tsc-library/\n\n@NgModule({\n    declarations: [\n        ParameterReportComponent\n    ],\n    imports: [\n        CommonModule,\n        ParameterReportRoutingModule,\n        DateInputModule,\n        AggregationDurationModule,\n        EntityModule,\n        DeviceModule,\n        ParamMetricModule,\n        AggregationModule,\n        SkeletonModule,\n        MessageAlertModule,\n        DownloadReportModule,\n        MatTableModule,\n        MatRippleModule\n    ]\n})\nexport class ParameterReportModule { }\n","import { Component, OnInit, ViewChild } from '@angular/core';\n\nimport { DropdownTypeEnum } from '../../../enum/dropdown.enum';\nimport { ReportErrorEnum } from '../../../enum/error.enum';\n\nimport { Parameter, ParameterM } from '../../../model/parameter.model';\nimport { Alert, AlertM } from '../../../model/alert.model';\nimport { AggregateDataRequest } from '../../../model/aggregate-data.model';\nimport { DownloadReportRequest } from '../../../model/report.model';\n\nimport { EntityComponent } from '../../dropdown/entity/entity.component';\nimport { DeviceComponent } from '../../dropdown/device/device.component';\n\nimport { AggregateDataService } from '../../../service/aggregate-data.service';\nimport { ParameterService } from '../../../service/parameter.service';\nimport { ReportService } from '../../../service/report.service';\nimport { AlertService } from '../../../service/alert.service';\n\n// tsc-library\nimport { CUSTOM_RANGE_CONSTANT_EXCLUSIVE_DATE, DateFormatEnum, DateInputComponent, DateInputTypeEnum, DateTypeEnum } from '@library/date';\nimport { StorageService } from '@library/storage-service';\nimport { ToastrColor, ToastrService } from '@library/toastr-service';\nimport { ButtonLabelEnum, COMMON_CONSTANT, InvalidForm, MATERIAL_CONSTANT, MaterialFormFieldAppearance, MessageAlertIconEnum, MessageAlertTypeEnum } from '@library/tsc-common';\n// /tsc-library/\n\n\n@Component({\n    selector: 'lib-raw-data',\n    templateUrl: './raw-data.component.html',\n    styles: [\n    ]\n})\nexport class RawDataReportComponent implements OnInit {\n\n    materialConstant = MATERIAL_CONSTANT;\n    commonConstant = COMMON_CONSTANT;\n    customRangeConstant = CUSTOM_RANGE_CONSTANT_EXCLUSIVE_DATE;\n\n    materialFormFieldAppearance = MaterialFormFieldAppearance;\n    buttonLabelEnum = ButtonLabelEnum;\n    dropdownTypeEnum = DropdownTypeEnum;\n    dateFormatEnum = DateFormatEnum;\n    dateInputTypeEnum = DateInputTypeEnum;\n    dateTypeEnum = DateTypeEnum;\n\n    orgID: any;\n    timezone: string;\n    startDate: string;\n    endDate: string;\n    entityID: any;\n    deviceID: any;\n    dayDifference: any;\n    timestamp: any;\n    renderTable: any;\n    reportData: any;\n    showAlert: boolean = false;\n    showLoader: boolean = false;\n\n    parameterM = [new Parameter()];\n    reportAlertObj: AlertM = new Alert();\n\n    @ViewChild('customDateInput') customDateInput: DateInputComponent;\n    @ViewChild('entityInput') entityInput: EntityComponent;\n    @ViewChild('deviceInput') deviceInput: DeviceComponent;\n\n    constructor(\n        private storageService: StorageService,\n        private toastService: ToastrService,\n        private aggregateDataService: AggregateDataService,\n        private parameterService: ParameterService,\n        private reportService: ReportService,\n        private alertService: AlertService\n    ) { }\n\n    ngOnInit(): void {\n        this.orgID = this.storageService.getStorage('currentOrgID');\n        this.timezone = this.storageService.getStorage('timezone');\n    }\n\n    dateInpChange() {\n        this.startDate = this.customDateInput.startDateFC.value;\n        this.endDate = this.customDateInput.endDateFC.value;\n\n        this.alertService.resetAlertProperties(this.reportAlertObj);\n    }\n\n    entityInpChange() {\n        this.entityID = this.entityInput.entityFC.value;\n\n        this.alertService.resetAlertProperties(this.reportAlertObj);\n    }\n\n    deviceInpChange() {\n        this.deviceID = this.deviceInput.deviceFC.value;\n\n        if (this.deviceID) {\n            this.getParameterByDeviceID(this.deviceID);\n        }\n\n        this.alertService.resetAlertProperties(this.reportAlertObj);\n    }\n\n    async getParameterByDeviceID(deviceID) {\n        let requestBody = {};\n        requestBody['deviceID'] = [deviceID];\n\n        this.parameterM = <ParameterM[]>await this.parameterService.getParameterByDeviceID(this.orgID, requestBody);\n    }\n\n    async viewReport() {\n\n        this.alertService.resetAlertProperties(this.reportAlertObj);\n\n        if (!this.parameterM || this.parameterM.length == 0 || !this.parameterM[0]['id']) {\n            await this.getParameterByDeviceID(this.deviceID);\n        }\n\n        if (this.isValidInputField()) {\n            this.toastService.openToast(InvalidForm.INVALID_FORM_TITLE, InvalidForm.INVALID_FORM_MESSAGE, ToastrColor.ERROR);\n            return;\n        }\n\n        if (this.startDate == this.endDate) {\n            this.alertService.setAlertProperties(this.reportAlertObj, ReportErrorEnum.INVALID_DATE_LABEL, ReportErrorEnum.INVALID_DATE_MESSAGE, MessageAlertTypeEnum.INFO, MessageAlertIconEnum.INFO_ICON);\n            return;\n        }\n\n        this.dayDifference = this.getTimeDifference(this.startDate, this.endDate);\n\n        if (this.dayDifference <= 1) {\n\n            try {\n                this.showLoader = true;\n\n                const requestData = this.createDataRequest();\n\n                this.reportData = await this.aggregateDataService.getAggregateData(this.orgID, requestData);\n\n                if (this.reportData?.length > 0 && !this.reportData?.every(item => item.data.length == 0)) {\n                    this.timestamp = this.reportService.extractTimestamp(this.reportData);\n                    this.renderTable = this.reportService.populateTable(this.timestamp, this.reportData, this.dateFormatEnum.DATE_TIME);\n                } else {\n                    this.alertService.setAlertProperties(this.reportAlertObj, ReportErrorEnum.DATA_NOT_FOUND_LABEL, ReportErrorEnum.DATA_NOT_FOUND_MESSAGE, MessageAlertTypeEnum.WARNING, MessageAlertIconEnum.WARNING_ICON);\n                }\n\n            } catch (error) {\n                console.error(\"Error in viewReport()\", error);\n                this.alertService.setAlertProperties(this.reportAlertObj, ReportErrorEnum.INVALID_ERROR_LABEL, ReportErrorEnum.INVALID_ERROR_MESSAGE, MessageAlertTypeEnum.DANGER, MessageAlertIconEnum.DANGER_ICON);\n            } finally {\n                this.showLoader = false;\n            }\n\n        } else {\n            this.alertService.setAlertProperties(this.reportAlertObj, ReportErrorEnum.TIME_EXCEEDED_LABEL, ReportErrorEnum.HOUR_24_TIME_EXCEEDED_MESSAGE, MessageAlertTypeEnum.INFO, MessageAlertIconEnum.INFO_ICON);\n        }\n\n    }\n\n    async downloadReport(format: string) {\n        this.alertService.resetAlertProperties(this.reportAlertObj);\n\n        if (!this.parameterM || this.parameterM.length == 0 || !this.parameterM[0]['id']) {\n            await this.getParameterByDeviceID(this.deviceID);\n        }\n\n        if (this.isValidInputField()) {\n            this.toastService.openToast(InvalidForm.INVALID_FORM_TITLE, InvalidForm.INVALID_FORM_MESSAGE, ToastrColor.ERROR);\n            return;\n        }\n\n        if (this.startDate == this.endDate) {\n            this.alertService.setAlertProperties(this.reportAlertObj, ReportErrorEnum.INVALID_DATE_LABEL, ReportErrorEnum.INVALID_DATE_MESSAGE, MessageAlertTypeEnum.INFO, MessageAlertIconEnum.INFO_ICON);\n            return;\n        }\n\n        this.dayDifference = this.getTimeDifference(this.startDate, this.endDate);\n\n        if (this.dayDifference <= 1) {\n            try {\n                const requestData = new DownloadReportRequest();\n\n                requestData.request = this.createDataRequest();\n                requestData.reportName = 'Parameter Report';\n                requestData.reportFormat = format;\n\n                await this.reportService.downloadReport(this.orgID, requestData);\n\n            } catch (error) {\n                console.error(\"Error in downloadReport()\", error);\n            } finally {\n                this.showLoader = false;\n            }\n        } else {\n            this.alertService.setAlertProperties(this.reportAlertObj, ReportErrorEnum.TIME_EXCEEDED_LABEL, ReportErrorEnum.HOUR_24_TIME_EXCEEDED_MESSAGE, MessageAlertTypeEnum.INFO, MessageAlertIconEnum.INFO_ICON);\n        }\n    }\n\n    createDataRequest() {\n        const requestData = new AggregateDataRequest();\n\n        requestData.startTime = this.startDate;\n        requestData.endTime = this.endDate;\n        requestData.interval = \"raw\";\n        requestData.entityID = [this.entityID];\n        requestData.deviceID = [this.deviceID];\n\n        requestData.params = this.parameterM.map(param => ({\n            name: param.paramMetric,\n            dsAgg: 'avg',\n            agg: 'avg'\n        }));\n        requestData.nullifyParams();\n\n        return requestData;\n    }\n\n    isValidInputField() {\n        const controls = [\n            this.customDateInput.startDateFC,\n            this.entityInput.entityFC,\n            this.deviceInput.deviceFC,\n        ];\n\n        controls.forEach(control => control.markAsTouched());\n        return controls.some(control => control.invalid);\n    }\n\n    getTimeDifference(startTime: string, endTime: string): number {\n        const date1 = new Date(startTime).getTime();\n        const date2 = new Date(endTime).getTime();\n        const diffTime = Math.abs(date2 - date1);\n        const diffDays = Math.ceil(diffTime / (1000 * 60 * 60 * 24));\n        return diffDays;\n    }\n\n}\n","<div class=\"card main-card cardOverwrite h100\">\n    <div class=\"headerContainer\">\n        <div class=\"headerLeftContainer\">\n            <div class=\"pageTitle\">Raw Data Report</div>\n        </div>\n    </div>\n\n    <div class=\"card-body\">\n        <div class=\"row\">\n            <div class=\"col-sm-3\">\n                <lib-date-input #customDateInput (emitFilter)=\"dateInpChange()\" [materialFieldWidthInp]=\"true\"\n                    [materialFormFieldAppearanceInp]=\"materialFormFieldAppearance.FORM_FIELD_APPEARANCE\"\n                    [isMandatoryFieldInp]=\"true\" [dateInputTypeInp]=\"dateInputTypeEnum.CUSTOM_INPUT\"\n                    [dateTypeInp]=\"dateTypeEnum.EXCLUSIVE\" [showDefaultDurationInp]=\"true\" [showCdrRangeLabelInp]=\"true\"\n                    [labelInp]=\"'Select date'\" [timezoneInp]=\"timezone\" [rangeInp]=\"customRangeConstant\"\n                    [showTimeInCDRInp]=\"true\" [showRangeInp]=\"true\"\n                    [cdrFormatInp]=\"'YYYY-MM-DD HH:mm:ss'\"></lib-date-input>\n            </div>\n\n            <div class=\"col-sm-3\">\n                <lib-entity #entityInput (emitFilter)=\"entityInpChange()\"></lib-entity>\n            </div>\n\n            <div class=\"col-sm-3\">\n                <lib-device #deviceInput [dropdownTypeInp]=\"dropdownTypeEnum.SINGLE_DROPDOWN\" [entityInp]=\"entityID\"\n                    (emitFilter)=\"deviceInpChange()\"></lib-device>\n            </div>\n            <div class=\"col-sm-3 mt-3\">\n                <div class=\"float-end\">\n                    <button class=\"btn btn-sm btn-primary\" type=\"button\" (click)=\"viewReport()\" matRipple\n                        [matRippleCentered]=\"materialConstant.MAT_RIPPLE_CENTER\">\n                        {{ buttonLabelEnum.READ_BTN_LABEL }}\n                    </button>\n                    <lib-download-report (fileTypeEmitted)=\"downloadReport($event)\"></lib-download-report>\n                </div>\n            </div>\n        </div>\n\n        <div class=\"row\">\n            <div class=\"col-sm-12\">\n                <lib-message-alert *ngIf=\"reportAlertObj.showAlert\" [labelInp]=\"reportAlertObj.alertLabel\"\n                    [contentInp]=\"reportAlertObj.alertContent\" [messageAlertTypeInp]=\"reportAlertObj.messageAlertType\"\n                    [messageAlertIconInp]=\"reportAlertObj.messageAlertIcon\">\n                </lib-message-alert>\n            </div>\n        </div>\n\n        <div class=\"row\">\n            <div class=\"centerAlign\">\n                <lib-skeleton-loader *ngIf=\"showLoader\" [count]=\"3\" [appearance]=\"'circle'\"\n                    [theme]=\"{ height: '15px', width: '15px', 'background-color': '#e7ebf3' }\"></lib-skeleton-loader>\n            </div>\n        </div>\n\n        <div class=\"row mt-3\" *ngIf=\"renderTable && renderTable.length > 0\">\n            <div class=\"overflowX customScrollBar\">\n                <table class=\"table\">\n                    <tbody>\n                        <tr class=\"tableHeader\">\n                            <td class=\"fw-bold\"> Sr. No. </td>\n                            <td align=\"center\" class=\"fw-bold\"> Time </td>\n                            <ng-container *ngFor=\"let data of reportData; let i = index\">\n                                <td align=\"center\" class=\"fw-bold\">\n                                    {{ data.paramLabel }} ({{ data.unit }}) ({{ data.dsAgg }})\n                                </td>\n                            </ng-container>\n                        </tr>\n                    </tbody>\n                    <tbody>\n                        <tr *ngFor=\"let row of renderTable\">\n                            <td>{{ row.index }}</td>\n                            <td align=\"center\" class=\"colWidthContainingDateTime\">{{ row.time }}</td>\n                            <td align=\"center\" *ngFor=\"let value of row.data\">{{ value ? value : commonConstant.HYPHEN\n                                }}\n                            </td>\n                        </tr>\n                    </tbody>\n                </table>\n            </div>\n        </div>\n    </div>\n</div>","import { NgModule } from '@angular/core';\nimport { RouterModule, Routes } from '@angular/router';\n\nimport { RawDataReportComponent } from './raw-data.component';\n\nconst routes: Routes = [\n    {\n        path: '',\n        component: RawDataReportComponent\n    }\n];\n\n@NgModule({\n    imports: [RouterModule.forChild(routes)],\n    exports: [RouterModule]\n})\n\nexport class RawDataReportRoutingModule { }\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\n\nimport { MatTableModule } from '@angular/material/table';\nimport { MatRippleModule } from '@angular/material/core';\n\nimport { EntityModule } from '../../dropdown/entity/entity.module';\nimport { DeviceModule } from '../../dropdown/device/device.module';\nimport { DownloadReportModule } from '../../_shared/download-report/download-report.module';\n\nimport { RawDataReportRoutingModule } from './raw-data-routing.module';\nimport { RawDataReportComponent } from './raw-data.component';\n\n// tsc-library\nimport { DateInputModule } from '@library/date';\nimport { MessageAlertModule, SkeletonModule } from '@library/tsc-common';\n// /tsc-library/\n\n@NgModule({\n    declarations: [\n        RawDataReportComponent\n    ],\n    imports: [\n        CommonModule,\n        RawDataReportRoutingModule,\n        DateInputModule,\n        EntityModule,\n        DeviceModule,\n        DownloadReportModule,\n        SkeletonModule,\n        MessageAlertModule,\n        MatTableModule,\n        MatRippleModule\n    ]\n})\nexport class RawDataReportModule { }\n","import { Component, OnInit, ViewChild } from '@angular/core';\nimport { Router } from '@angular/router';\n\nimport { FormControl, Validators } from '@angular/forms';\n\nimport { ReportErrorEnum } from '../../../enum/error.enum';\n\nimport { ConsumptionParameterM } from '../../../model/parameter.model';\nimport { AggregateDataRequest } from '../../../model/aggregate-data.model';\nimport { Alert, AlertM } from '../../../model/alert.model';\nimport { DownloadReportRequest } from '../../../model/report.model';\n\nimport { AggregationDurationComponent } from '../../dropdown/aggregation-duration/aggregation-duration.component';\n\nimport { ParameterService } from '../../../service/parameter.service';\nimport { AggregateDataService } from '../../../service/aggregate-data.service';\nimport { ReportService } from '../../../service/report.service';\nimport { AlertService } from '../../../service/alert.service';\n\n// tsc-library\nimport { CUSTOM_RANGE_CONSTANT_EXCLUSIVE_DATE, DateFormatEnum, DateInputComponent, DateInputTypeEnum, DateTypeEnum } from '@library/date';\nimport { StorageService } from '@library/storage-service';\nimport { ToastrColor, ToastrService } from '@library/toastr-service';\nimport { ButtonLabelEnum, COMMON_CONSTANT, FormErrorEnum, InvalidForm, MATERIAL_CONSTANT, MaterialFormFieldAppearance, MessageAlertIconEnum, MessageAlertTypeEnum, TSCCommonService } from '@library/tsc-common';\nimport { ApplicationKeyID } from '@library/application-service';\n// /tsc-library/\n\n@Component({\n    selector: 'lib-sourcing',\n    templateUrl: './sourcing.component.html',\n    styles: [\n    ]\n})\nexport class SourcingReportComponent implements OnInit {\n\n    MATERIAL_CONSTANT = MATERIAL_CONSTANT;\n    COMMON_CONSTANT = COMMON_CONSTANT;\n    CUSTOM_RANGE_CONSTANT = CUSTOM_RANGE_CONSTANT_EXCLUSIVE_DATE;\n\n    MaterialFormFieldAppearance = MaterialFormFieldAppearance;\n    ButtonLabelEnum = ButtonLabelEnum;\n    DateFormatEnum = DateFormatEnum;\n    DateInputTypeEnum = DateInputTypeEnum;\n    DateTypeEnum = DateTypeEnum;\n    FormErrorEnum = FormErrorEnum;\n\n    pageTitle: string;\n\n    orgID: any;\n    applicationKeyID: any;\n    consumptionParamM: any;\n    paramMetric: any;\n    timezone: string;\n    startDate: string;\n    endDate: string;\n    aggDuration: string;\n\n    allParameterID: any[] = [];\n    parameterList: any[] = [];\n    totalParameterCount: number = 0;\n\n    timestamp: any;\n    renderTable: any;\n    reportData: any;\n\n    showAlert: boolean = false;\n    showLoader: boolean = false;\n\n    reportAlertObj: AlertM = new Alert();\n\n    parameterFC: FormControl = new FormControl([], [Validators.required]);\n\n    @ViewChild('customDateInput') customDateInput: DateInputComponent;\n    @ViewChild('aggDurationInput') aggDurationInput: AggregationDurationComponent;\n\n    constructor(\n        private router: Router,\n        private storageService: StorageService,\n        private toastService: ToastrService,\n        private aggregateDataService: AggregateDataService,\n        private parameterService: ParameterService,\n        private reportService: ReportService,\n        private alertService: AlertService,\n        private tscCommonService: TSCCommonService,\n    ) { }\n\n    ngOnInit(): void {\n        this.orgID = this.storageService.getStorage('currentOrgID');\n        this.timezone = this.storageService.getStorage('timezone');\n        this.applicationKeyID = this.storageService.getStorage('applicationKeyID');\n\n        const applicationName = this.applicationKeyID == ApplicationKeyID.WATER_KEY_ID ? 'Water' : 'Energy';\n        this.pageTitle = `${applicationName} Sourcing Report`;\n\n        this.getConsumptionParameter();\n    }\n\n    async getConsumptionParameter() {\n        const consumptionParamM = <ConsumptionParameterM>await this.parameterService.getConsumptionParameter(this.orgID);\n\n        this.consumptionParamM = consumptionParamM.consumptionParameter;\n\n        this.totalParameterCount = this.consumptionParamM.length;\n        this.consumptionParamM.forEach(parameter => this.allParameterID.push(parameter['paramMetric']));\n    }\n\n    dateInpChange() {\n        this.startDate = this.customDateInput.startDateFC.value;\n        this.endDate = this.customDateInput.endDateFC.value;\n\n        this.alertService.resetAlertProperties(this.reportAlertObj);\n    }\n\n    aggDurationInpChange() {\n        this.aggDuration = this.aggDurationInput.aggDurationFC.value;\n\n        this.alertService.resetAlertProperties(this.reportAlertObj);\n    }\n\n    selectAllParameters() {\n        if (!this.parameterFC.value.includes(-1)) {\n            this.parameterFC.reset([]);\n            return;\n        }\n        this.parameterFC.setValue([-1, ...this.allParameterID]);\n\n        this.paramInpChange();\n    }\n\n    selectedParameters() {\n        const selected = this.parameterFC.value;\n\n        if (selected.includes(-1)) {\n            selected.shift();\n            this.parameterFC.patchValue(selected);\n        } else if (this.parameterFC.value.length == this.totalParameterCount) {\n            this.allParameterID.splice(0, 0, -1);\n            this.parameterFC.patchValue(this.allParameterID);\n        } else {\n            const filteredSelected = selected.filter(s => s != -1);\n            this.parameterFC.patchValue(filteredSelected);\n        }\n\n        this.paramInpChange();\n    }\n\n    paramInpChange() {\n        let paramMetric = this.parameterFC.value;\n\n        if (paramMetric.length > 0) {\n            this.parameterList = this.tscCommonService.removeSelectAllID(paramMetric);\n        }\n\n        this.alertService.resetAlertProperties(this.reportAlertObj);\n    }\n\n    async viewReport() {\n\n        this.alertService.resetAlertProperties(this.reportAlertObj);\n\n        if (this.isValidInputField()) {\n            this.toastService.openToast(InvalidForm.INVALID_FORM_TITLE, InvalidForm.INVALID_FORM_MESSAGE, ToastrColor.ERROR);\n            return;\n        }\n\n        if (this.startDate == this.endDate) {\n            this.alertService.setAlertProperties(this.reportAlertObj, ReportErrorEnum.INVALID_DATE_LABEL, ReportErrorEnum.INVALID_DATE_MESSAGE, MessageAlertTypeEnum.INFO, MessageAlertIconEnum.INFO_ICON);\n            return;\n        }\n\n        this.showLoader = true;\n\n        try {\n            const requestData = this.createDataRequest();\n\n            this.reportData = await this.aggregateDataService.getAggregateData(this.orgID, requestData);\n\n            if (this.reportData?.length > 0 && !this.reportData?.every(item => item.data.length == 0)) {\n                this.timestamp = this.reportService.extractTimestamp(this.reportData);\n                this.renderTable = this.reportService.populateTable(this.timestamp, this.reportData, this.DateFormatEnum.DATE_TIME);\n            } else {\n                this.alertService.setAlertProperties(this.reportAlertObj, ReportErrorEnum.DATA_NOT_FOUND_LABEL, ReportErrorEnum.DATA_NOT_FOUND_MESSAGE, MessageAlertTypeEnum.WARNING, MessageAlertIconEnum.WARNING_ICON);\n            }\n\n        } catch (error) {\n            console.error(\"Error in viewReport()\", error);\n            this.alertService.setAlertProperties(this.reportAlertObj, ReportErrorEnum.INVALID_ERROR_LABEL, ReportErrorEnum.INVALID_ERROR_MESSAGE, MessageAlertTypeEnum.DANGER, MessageAlertIconEnum.DANGER_ICON);\n        } finally {\n            this.showLoader = false;\n        }\n    }\n\n    async downloadReport(format: string) {\n        this.alertService.resetAlertProperties(this.reportAlertObj);\n\n        if (this.isValidInputField()) {\n            this.toastService.openToast(InvalidForm.INVALID_FORM_TITLE, InvalidForm.INVALID_FORM_MESSAGE, ToastrColor.ERROR);\n            return;\n        }\n\n        if (this.startDate == this.endDate) {\n            this.alertService.setAlertProperties(this.reportAlertObj, ReportErrorEnum.INVALID_DATE_LABEL, ReportErrorEnum.INVALID_DATE_MESSAGE, MessageAlertTypeEnum.INFO, MessageAlertIconEnum.INFO_ICON);\n            return;\n        }\n\n        this.showLoader = true;\n\n        try {\n            const requestData = new DownloadReportRequest();\n\n            requestData.request = this.createDataRequest();\n            requestData.reportName = this.pageTitle;\n            requestData.reportFormat = format;\n\n            await this.reportService.downloadReport(this.orgID, requestData);\n\n        } catch (error) {\n            console.error(\"Error in downloadReport()\", error);\n        } finally {\n            this.showLoader = false;\n        }\n    }\n\n    createDataRequest() {\n\n        let parameter;\n\n        if (this.parameterFC.value?.length > 0) {\n            parameter = this.tscCommonService.removeSelectAllID(this.parameterFC.value);\n        }\n\n        const requestData = new AggregateDataRequest();\n\n        requestData.startTime = this.startDate;\n        requestData.endTime = this.endDate;\n        requestData.interval = this.aggDuration;\n        requestData.params = parameter.map(param => ({\n            name: param,\n            dsAgg: \"sum\",\n            agg: \"sum\",\n            source_or_load: \"source\",\n            sourceLoadType: 'all'\n        }));\n        requestData.nullifyParams();\n\n        return requestData;\n    }\n\n    isValidInputField() {\n        const controls = [\n            this.customDateInput.startDateFC,\n            this.aggDurationInput.aggDurationFC,\n            this.parameterFC\n        ];\n\n        controls.forEach(control => control.markAsTouched());\n        return controls.some(control => control.invalid);\n    }\n\n    scheduleReport(value) {\n        if (value) {\n            const applicationName = this.applicationKeyID == ApplicationKeyID.WATER_KEY_ID ? 'water' : 'energy';\n            this.router.navigate([`schedule-report/${applicationName}-sourcing`]);\n        }\n    }\n\n}\n","<div class=\"card main-card cardOverwrite h100\">\n    <div class=\"headerContainer\">\n        <div class=\"headerLeftContainer\">\n            <div class=\"pageTitle\">{{ pageTitle }}</div>\n        </div>\n        <div class=\"headerRightContainer\">\n            <div class=\"headerRightContainerInner\">\n                <mat-slide-toggle (change)=\"scheduleReport($event.checked)\">Schedule report</mat-slide-toggle>\n            </div>\n        </div>\n    </div>\n\n    <div class=\"card-body\">\n        <div class=\"row\">\n            <div class=\"col-sm-3\">\n                <lib-date-input #customDateInput (emitFilter)=\"dateInpChange()\" [materialFieldWidthInp]=\"true\"\n                    [materialFormFieldAppearanceInp]=\"MaterialFormFieldAppearance.FORM_FIELD_APPEARANCE\"\n                    [isMandatoryFieldInp]=\"true\" [dateInputTypeInp]=\"DateInputTypeEnum.CUSTOM_INPUT\"\n                    [dateTypeInp]=\"DateTypeEnum.EXCLUSIVE\" [showDefaultDurationInp]=\"true\" [showCdrRangeLabelInp]=\"true\"\n                    [labelInp]=\"'Select date'\" [timezoneInp]=\"timezone\" [rangeInp]=\"CUSTOM_RANGE_CONSTANT\" [showTimeInCDRInp]=\"true\"\n                    [showRangeInp]=\"true\" [cdrFormatInp]=\"'YYYY-MM-DD HH:mm:ss'\"></lib-date-input>\n            </div>\n\n            <div class=\"col-sm-3\">\n                <lib-aggregation-duration #aggDurationInput\n                    (emitFilter)=\"aggDurationInpChange()\"></lib-aggregation-duration>\n            </div>\n\n            <div class=\"col-sm-3\">\n                <mat-form-field class=\"matFieldWidth100\" [appearance]=\"MaterialFormFieldAppearance.FORM_FIELD_APPEARANCE\">\n                    <mat-label>Select consumption parameter</mat-label>\n\n                    <mat-select [formControl]=\"parameterFC\" multiple required>\n                        <ng-container\n                            *ngIf=\"consumptionParamM && consumptionParamM.length > 0 && consumptionParamM[0]['id']; else noConsumptionParamM\">\n                            <mat-option [value]=\"-1\" (click)=\"selectAllParameters()\">\n                                Select all\n                            </mat-option>\n                            <mat-option *ngFor=\"let param of consumptionParamM\" [value]=\"param.paramMetric\" (click)=\"selectedParameters()\">\n                                {{ param.label }}\n                            </mat-option>\n                        </ng-container>\n\n                        <ng-template #noConsumptionParamM>\n                            <mat-option disabled>\n                                {{ COMMON_CONSTANT.NO_DATA_FOUND }}\n                            </mat-option>\n                        </ng-template>\n                    </mat-select>\n\n                    <mat-error *ngIf=\"parameterFC.hasError('required')\">\n                        {{ FormErrorEnum.REQUIRED }}\n                    </mat-error>\n                </mat-form-field>\n            </div>\n        </div>\n\n        <div class=\"row\">\n            <div class=\"col-sm-12\">\n                <div class=\"float-end\">\n                    <button class=\"btn btn-sm btn-primary\" type=\"button\" (click)=\"viewReport()\" matRipple\n                        [matRippleCentered]=\"MATERIAL_CONSTANT.MAT_RIPPLE_CENTER\">\n                        {{ ButtonLabelEnum.READ_BTN_LABEL }}\n                    </button>\n                    <lib-download-report (fileTypeEmitted)=\"downloadReport($event)\"></lib-download-report>\n                </div>\n            </div>\n        </div>\n\n        <div class=\"row\">\n            <div class=\"col-sm-12\">\n                <lib-message-alert *ngIf=\"reportAlertObj.showAlert\" [labelInp]=\"reportAlertObj.alertLabel\"\n                    [contentInp]=\"reportAlertObj.alertContent\" [messageAlertTypeInp]=\"reportAlertObj.messageAlertType\"\n                    [messageAlertIconInp]=\"reportAlertObj.messageAlertIcon\">\n                </lib-message-alert>\n            </div>\n        </div>\n\n        <div class=\"row\">\n            <div class=\"centerAlign\">\n                <lib-skeleton-loader *ngIf=\"showLoader\" [count]=\"3\" [appearance]=\"'circle'\"\n                    [theme]=\"{ height: '15px', width: '15px', 'background-color': '#e7ebf3' }\"></lib-skeleton-loader>\n            </div>\n        </div>\n\n        <div class=\"row mt-3\" *ngIf=\"renderTable && renderTable.length > 0\">\n            <div class=\"overflowX customScrollBar\">\n                <table class=\"table\">\n                    <tbody>\n                        <tr class=\"tableHeader\">\n                            <td class=\"fw-bold\"> Sr. No. </td>\n                            <td align=\"center\" class=\"fw-bold\"> Time </td>\n                            <ng-container *ngFor=\"let data of reportData; let i = index\">\n                                <td align=\"center\" class=\"fw-bold\">\n                                    {{ data.entityName }}<br />\n                                    {{ data.paramLabel }} ({{ data.unit }}) ({{ data.dsAgg }})\n                                </td>\n                            </ng-container>\n                        </tr>\n                    </tbody>\n                    <tbody>\n                        <tr *ngFor=\"let row of renderTable\">\n                            <td>{{ row.index }}</td>\n                            <td align=\"center\" class=\"colWidthContainingDateTime\">{{ row.time }}</td>\n                            <td align=\"center\" *ngFor=\"let value of row.data\">{{ value ? value : COMMON_CONSTANT.HYPHEN\n                                }}\n                            </td>\n                        </tr>\n                    </tbody>\n                </table>\n            </div>\n        </div>\n    </div>\n</div>","import { NgModule } from '@angular/core';\nimport { RouterModule, Routes } from '@angular/router';\n\nimport { SourcingReportComponent } from './sourcing.component';\n\nconst routes: Routes = [\n    {\n        path: '',\n        component: SourcingReportComponent\n    }\n];\n\n@NgModule({\n    imports: [RouterModule.forChild(routes)],\n    exports: [RouterModule]\n})\nexport class SourcingReportRoutingModule { }\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\n\nimport {\n    FormsModule,\n    ReactiveFormsModule\n} from '@angular/forms';\n\nimport { MatFormFieldModule } from '@angular/material/form-field';\nimport { MatSelectModule } from '@angular/material/select';\nimport { MatTableModule } from '@angular/material/table';\nimport { MatRippleModule } from '@angular/material/core';\nimport { MatSlideToggleModule } from '@angular/material/slide-toggle';\n\nimport { AggregationDurationModule } from '../../dropdown/aggregation-duration/aggregation-duration.module';\nimport { DownloadReportModule } from '../../_shared/download-report/download-report.module';\n\nimport { SourcingReportRoutingModule } from './sourcing-routing.module';\nimport { SourcingReportComponent } from './sourcing.component';\n\n// tsc-library\nimport { DateInputModule } from '@library/date';\nimport { MessageAlertModule, SkeletonModule } from '@library/tsc-common';\n// /tsc-library/\n\n@NgModule({\n    declarations: [\n        SourcingReportComponent\n    ],\n    imports: [\n        CommonModule,\n        SourcingReportRoutingModule,\n\n        FormsModule,\n        ReactiveFormsModule,\n\n        MatFormFieldModule,\n        MatSelectModule,\n        MatTableModule,\n        MatRippleModule,\n        MatSlideToggleModule,\n\n        AggregationDurationModule,\n        DownloadReportModule,\n\n        DateInputModule,\n        MessageAlertModule,\n        SkeletonModule\n    ]\n})\nexport class SourcingReportModule { }\n","import { Component, OnInit, ViewChild } from '@angular/core';\n\nimport { ReportErrorEnum } from '../../../enum/error.enum';\n\nimport { AggregateDataRequest } from '../../../model/aggregate-data.model';\nimport { Alert, AlertM } from '../../../model/alert.model';\nimport { DownloadReportRequest } from '../../../model/report.model';\n\nimport { SourceLoadComponent } from '../../_shared/filter/source-load/source-load.component';\nimport { AggregationDurationComponent } from '../../dropdown/aggregation-duration/aggregation-duration.component';\n\nimport { AggregateDataService } from '../../../service/aggregate-data.service';\nimport { ReportService } from '../../../service/report.service';\nimport { AlertService } from '../../../service/alert.service';\n\n// tsc-library\nimport { CUSTOM_RANGE_CONSTANT_EXCLUSIVE_DATE, DateFormatEnum, DateInputComponent, DateInputTypeEnum, DateTypeEnum } from '@library/date';\nimport { StorageService } from '@library/storage-service';\nimport { ToastrColor, ToastrService } from '@library/toastr-service';\nimport { ButtonLabelEnum, COMMON_CONSTANT, InvalidForm, MATERIAL_CONSTANT, MaterialFormFieldAppearance, MessageAlertIconEnum, MessageAlertTypeEnum } from '@library/tsc-common';\nimport { ApplicationKeyID } from '@library/application-service';\n// /tsc-library/\n\n@Component({\n    selector: 'lib-usage-across-facility',\n    templateUrl: './usage-across-facility.component.html',\n    styles: [\n    ]\n})\n\nexport class UsageAcrossFacilityComponent implements OnInit {\n\n    materialConstant = MATERIAL_CONSTANT;\n    commonConstant = COMMON_CONSTANT;\n    customRangeConstant = CUSTOM_RANGE_CONSTANT_EXCLUSIVE_DATE;\n\n    materialFormFieldAppearance = MaterialFormFieldAppearance;\n    buttonLabelEnum = ButtonLabelEnum;\n    dateFormatEnum = DateFormatEnum;\n    dateInputTypeEnum = DateInputTypeEnum;\n    dateTypeEnum = DateTypeEnum;\n\n    orgID: any;\n    applicationKeyID: any;\n    paramMetric: any;\n    timezone: string;\n    category: string;\n    startDate: string;\n    endDate: string;\n    aggDuration: string;\n    timestamp: any;\n    renderTable: any;\n    reportData: any;\n    showAlert: boolean = false;\n    showLoader: boolean = false;\n\n    reportAlertObj: AlertM = new Alert();\n\n    @ViewChild('sourceLoadInput') sourceLoadInput: SourceLoadComponent;\n    @ViewChild('customDateInput') customDateInput: DateInputComponent;\n    @ViewChild('aggDurationInput') aggDurationInput: AggregationDurationComponent;\n\n    constructor(\n        private storageService: StorageService,\n        private toastService: ToastrService,\n        private aggregateDataService: AggregateDataService,\n        private reportService: ReportService,\n        private alertService: AlertService\n    ) { }\n\n    ngOnInit(): void {\n        this.orgID = this.storageService.getStorage('currentOrgID');\n        this.timezone = this.storageService.getStorage('timezone');\n        this.applicationKeyID = this.storageService.getStorage('applicationKeyID');\n\n        if (this.applicationKeyID == ApplicationKeyID.ENERGY_KEY_ID) {\n            this.paramMetric = \"engEnergyUsed\";\n        } else if (this.applicationKeyID == ApplicationKeyID.WATER_KEY_ID) {\n            this.paramMetric = \"gwFlowTotalizer\";\n        }\n    }\n\n    sourceLoadInpChange() {\n        this.category = this.sourceLoadInput.categoryFC.value;\n\n        this.alertService.resetAlertProperties(this.reportAlertObj);\n    }\n\n    dateInpChange() {\n        this.startDate = this.customDateInput.startDateFC.value;\n        this.endDate = this.customDateInput.endDateFC.value;\n\n        this.alertService.resetAlertProperties(this.reportAlertObj);\n    }\n\n    aggDurationInpChange() {\n        this.aggDuration = this.aggDurationInput.aggDurationFC.value;\n\n        this.alertService.resetAlertProperties(this.reportAlertObj);\n    }\n\n    async viewReport() {\n\n        this.alertService.resetAlertProperties(this.reportAlertObj);\n\n        if (this.isValidInputField()) {\n            this.toastService.openToast(InvalidForm.INVALID_FORM_TITLE, InvalidForm.INVALID_FORM_MESSAGE, ToastrColor.ERROR);\n            return;\n        }\n\n        if (this.startDate == this.endDate) {\n            this.alertService.setAlertProperties(this.reportAlertObj, ReportErrorEnum.INVALID_DATE_LABEL, ReportErrorEnum.INVALID_DATE_MESSAGE, MessageAlertTypeEnum.INFO, MessageAlertIconEnum.INFO_ICON);\n            return;\n        }\n\n        this.showLoader = true;\n\n        try {\n            const requestData = this.createDataRequest();\n\n            this.reportData = await this.aggregateDataService.getAggregateData(this.orgID, requestData);\n\n            if (this.reportData?.length > 0 && !this.reportData?.every(item => item.data.length == 0)) {\n                this.timestamp = this.reportService.extractTimestamp(this.reportData);\n                this.renderTable = this.reportService.populateTable(this.timestamp, this.reportData, this.dateFormatEnum.DATE_TIME);\n            } else {\n                this.alertService.setAlertProperties(this.reportAlertObj, ReportErrorEnum.DATA_NOT_FOUND_LABEL, ReportErrorEnum.DATA_NOT_FOUND_MESSAGE, MessageAlertTypeEnum.WARNING, MessageAlertIconEnum.WARNING_ICON);\n            }\n\n        } catch (error) {\n            console.error(\"Error in viewReport()\", error);\n            this.alertService.setAlertProperties(this.reportAlertObj, ReportErrorEnum.INVALID_ERROR_LABEL, ReportErrorEnum.INVALID_ERROR_MESSAGE, MessageAlertTypeEnum.DANGER, MessageAlertIconEnum.DANGER_ICON);\n        } finally {\n            this.showLoader = false;\n        }\n    }\n\n    async downloadReport(format: string) {\n        this.alertService.resetAlertProperties(this.reportAlertObj);\n\n        if (this.isValidInputField()) {\n            this.toastService.openToast(InvalidForm.INVALID_FORM_TITLE, InvalidForm.INVALID_FORM_MESSAGE, ToastrColor.ERROR);\n            return;\n        }\n\n        if (this.startDate == this.endDate) {\n            this.alertService.setAlertProperties(this.reportAlertObj, ReportErrorEnum.INVALID_DATE_LABEL, ReportErrorEnum.INVALID_DATE_MESSAGE, MessageAlertTypeEnum.INFO, MessageAlertIconEnum.INFO_ICON);\n            return;\n        }\n\n        this.showLoader = true;\n\n        try {\n            const requestData = new DownloadReportRequest();\n\n            requestData.request = this.createDataRequest();\n            requestData.reportName = 'Usage Across Facility Report';\n            requestData.reportFormat = format;\n\n            await this.reportService.downloadReport(this.orgID, requestData);\n\n        } catch (error) {\n            console.error(\"Error in downloadReport()\", error);\n        } finally {\n            this.showLoader = false;\n        }\n    }\n\n    createDataRequest() {\n\n        const requestData = new AggregateDataRequest();\n\n        requestData.startTime = this.startDate;\n        requestData.endTime = this.endDate;\n        requestData.interval = this.aggDuration;\n        requestData.params = [\n            {\n                name: this.paramMetric,\n                dsAgg: \"sum\",\n                agg: \"sum\",\n                source_or_load: this.category,\n                sourceLoadType: 'all'\n            }\n        ];\n        requestData.nullifyParams();\n\n        return requestData;\n    }\n\n    isValidInputField() {\n        const controls = [\n            this.customDateInput.startDateFC,\n            this.aggDurationInput.aggDurationFC\n        ];\n\n        controls.forEach(control => control.markAsTouched());\n        return controls.some(control => control.invalid);\n    }\n\n}\n","<div class=\"card main-card cardOverwrite h100\">\n    <div class=\"headerContainer\">\n        <div class=\"headerLeftContainer\">\n            <div class=\"pageTitle\">Usage Across Facility Report</div>\n        </div>\n    </div>\n\n    <div class=\"card-body\">\n        <div class=\"row\">\n            <div class=\"col-sm-4\">\n                <lib-source-load #sourceLoadInput (emitFilter)=\"sourceLoadInpChange()\"></lib-source-load>\n            </div>\n        </div>\n\n        <div class=\"row mt-3\">\n            <div class=\"col-sm-3\">\n                <lib-date-input #customDateInput (emitFilter)=\"dateInpChange()\" [materialFieldWidthInp]=\"true\"\n                    [materialFormFieldAppearanceInp]=\"materialFormFieldAppearance.FORM_FIELD_APPEARANCE\"\n                    [isMandatoryFieldInp]=\"true\" [dateInputTypeInp]=\"dateInputTypeEnum.CUSTOM_INPUT\"\n                    [dateTypeInp]=\"dateTypeEnum.EXCLUSIVE\" [showDefaultDurationInp]=\"true\" [showCdrRangeLabelInp]=\"true\"\n                    [labelInp]=\"'Select date'\" [timezoneInp]=\"timezone\" [rangeInp]=\"customRangeConstant\" [showTimeInCDRInp]=\"true\"\n                    [showRangeInp]=\"true\" [cdrFormatInp]=\"'YYYY-MM-DD HH:mm:ss'\"></lib-date-input>\n            </div>\n\n            <div class=\"col-sm-3\">\n                <lib-aggregation-duration #aggDurationInput\n                    (emitFilter)=\"aggDurationInpChange()\"></lib-aggregation-duration>\n            </div>\n        </div>\n\n        <div class=\"row\">\n            <div class=\"col-sm-12\">\n                <div class=\"float-end\">\n                    <button class=\"btn btn-sm btn-primary\" type=\"button\" (click)=\"viewReport()\" matRipple\n                        [matRippleCentered]=\"materialConstant.MAT_RIPPLE_CENTER\">\n                        {{ buttonLabelEnum.READ_BTN_LABEL }}\n                    </button>\n                    <lib-download-report (fileTypeEmitted)=\"downloadReport($event)\"></lib-download-report>\n                </div>\n            </div>\n        </div>\n\n        <div class=\"row\">\n            <div class=\"col-sm-12\">\n                <lib-message-alert *ngIf=\"reportAlertObj.showAlert\" [labelInp]=\"reportAlertObj.alertLabel\"\n                    [contentInp]=\"reportAlertObj.alertContent\" [messageAlertTypeInp]=\"reportAlertObj.messageAlertType\"\n                    [messageAlertIconInp]=\"reportAlertObj.messageAlertIcon\">\n                </lib-message-alert>\n            </div>\n        </div>\n\n        <div class=\"row\">\n            <div class=\"centerAlign\">\n                <lib-skeleton-loader *ngIf=\"showLoader\" [count]=\"3\" [appearance]=\"'circle'\"\n                    [theme]=\"{ height: '15px', width: '15px', 'background-color': '#e7ebf3' }\"></lib-skeleton-loader>\n            </div>\n        </div>\n\n        <div class=\"row mt-3\" *ngIf=\"renderTable && renderTable.length > 0\">\n            <div class=\"overflowX customScrollBar\">\n                <table class=\"table\">\n                    <tbody>\n                        <tr class=\"tableHeader\">\n                            <td class=\"fw-bold\"> Sr. No. </td>\n                            <td align=\"center\" class=\"fw-bold\"> Time </td>\n                            <ng-container *ngFor=\"let data of reportData; let i = index\">\n                                <td align=\"center\" class=\"fw-bold\">\n                                    {{ data.entityName }}<br />\n                                    {{ data.paramLabel }} ({{ data.unit }}) ({{ data.dsAgg }})\n                                </td>\n                            </ng-container>\n                        </tr>\n                    </tbody>\n                    <tbody>\n                        <tr *ngFor=\"let row of renderTable\">\n                            <td>{{ row.index }}</td>\n                            <td align=\"center\" class=\"colWidthContainingDateTime\">{{ row.time }}</td>\n                            <td align=\"center\" *ngFor=\"let value of row.data\">{{ value ? value : commonConstant.HYPHEN\n                                }}\n                            </td>\n                        </tr>\n                    </tbody>\n                </table>\n            </div>\n        </div>\n    </div>\n</div>","import { NgModule } from '@angular/core';\nimport { RouterModule, Routes } from '@angular/router';\n\nimport { UsageAcrossFacilityComponent } from './usage-across-facility.component';\n\nconst routes: Routes = [\n    {\n        path: '',\n        component: UsageAcrossFacilityComponent\n    }\n];\n\n@NgModule({\n    imports: [RouterModule.forChild(routes)],\n    exports: [RouterModule]\n})\nexport class UsageAcrossFacilityRoutingModule { }\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\n\nimport { MatTableModule } from '@angular/material/table';\nimport { MatRippleModule } from '@angular/material/core';\n\nimport { SourceLoadModule } from '../../_shared/filter/source-load/source-load.module';\nimport { AggregationDurationModule } from '../../dropdown/aggregation-duration/aggregation-duration.module';\nimport { DownloadReportModule } from '../../_shared/download-report/download-report.module';\n\nimport { UsageAcrossFacilityRoutingModule } from './usage-across-facility-routing.module';\nimport { UsageAcrossFacilityComponent } from './usage-across-facility.component';\n\n// tsc-library\nimport { DateInputModule } from '@library/date';\nimport { MessageAlertModule, SkeletonModule } from '@library/tsc-common';\n// /tsc-library/\n\n@NgModule({\n    declarations: [\n        UsageAcrossFacilityComponent\n    ],\n    imports: [\n        CommonModule,\n        UsageAcrossFacilityRoutingModule,\n        SourceLoadModule,\n        DateInputModule,\n        AggregationDurationModule,\n        DownloadReportModule,\n        SkeletonModule,\n        MessageAlertModule,\n        MatTableModule,\n        MatRippleModule\n    ]\n})\nexport class UsageAcrossFacilityModule { }\n","import { Component, OnInit } from '@angular/core';\nimport { FormBuilder, FormControl, FormGroup, Validators } from '@angular/forms';\n\nimport { MatChipInputEvent } from '@angular/material/chips';\n\nimport { COMMA, ENTER } from '@angular/cdk/keycodes';\n\nimport { map } from 'rxjs/operators';\n\n// tsc-library\nimport { StorageService } from '@library/storage-service';\nimport { User, UserContext, UserM, UserService } from '@library/user-service';\nimport { MaterialFormFieldAppearance, FormErrorEnum, TSCCommonService, MatSelectSearchService, COMMON_CONSTANT, MATERIAL_CONSTANT } from '@library/tsc-common';\n// /tsc-library/\n\n@Component({\n    selector: 'lib-configuration',\n    templateUrl: './configuration.component.html',\n    styleUrls: ['./configuration.component.scss'],\n})\nexport class ScheduleReportConfigurationComponent implements OnInit {\n\n    COMMON_CONSTANT = COMMON_CONSTANT;\n    MATERIAL_CONSTANT = MATERIAL_CONSTANT;\n\n    FormErrorEnum = FormErrorEnum;\n    MaterialFormFieldAppearance = MaterialFormFieldAppearance;\n\n    orgID: any;\n    scheduleReportFG: FormGroup;\n    scheduleReportID: any;\n\n    userContext = UserContext.ROOT_ORG_USER;\n\n    userM = [new User()];\n    rootOrgUserM = [new User()];\n    currentOrgUserM = [new User()];\n    allUserID: any[] = [];\n    totalUserCount: number = 0;\n\n    intervalList = [\n        { label: 'Daily', value: 'DAILY' },\n        { label: 'Weekly', value: 'WEEKLY' },\n        { label: 'Monthly', value: 'MONTHLY' }\n    ];\n\n    frequencyList = [\n        { label: 'Daily', value: 'DAILY' },\n        { label: 'Weekly', value: 'WEEKLY' },\n        { label: 'Monthly', value: 'MONTHLY' }\n    ];\n\n    frequencyInfoLabel: string = 'Report will be sent at 6:00 a.m.';\n\n    userFC: FormControl = new FormControl(true, Validators.required);\n    userSearchUtil: MatSelectSearchService = new MatSelectSearchService(['firstName', 'lastName', 'email']);\n\n    selectable = true;\n    removable = true;\n    addOnBlur = true;\n    readonly separatorKeysCodes = [ENTER, COMMA] as const;\n\n    inputPlaceholder = \"email1@domain.com, email2@domain.com\";\n\n    constructor(\n        private formBuilder: FormBuilder,\n\n        // tsc-library\n        private storageService: StorageService,\n        public tscCommonService: TSCCommonService,\n        private userService: UserService,\n        // /tsc-library/\n    ) { }\n\n    ngOnInit(): void {\n        this.orgID = this.storageService.getStorage('currentOrgID');\n\n        this.initializeUsers();\n        this.scheduleReportFGInit();\n    }\n\n    scheduleReportFGInit() {\n        this.scheduleReportFG = this.formBuilder.group({\n            name: [, Validators.required],\n            dataInterval: [, Validators.required],\n            frequency: [, Validators.required],\n            userChoice: [UserContext.ROOT_ORG_USER],\n            userID: [[], Validators.required],\n            otherUserEmail: [[]],\n            status: ['ACTIVE', Validators.required],\n            reportFormat: [, Validators.required],\n        });\n\n        this.scheduleReportFG.get('dataInterval').valueChanges.subscribe(value => {\n            switch (value) {\n                case 'DAILY':\n                    this.frequencyList = [{ label: \"Daily\", value: \"DAILY\" }];\n                    this.frequencyInfoLabel = 'Report will be sent on daily basis at 6:00 a.m.';\n                    break;\n                case 'WEEKLY':\n                    this.frequencyList = [\n                        { label: \"Daily\", value: \"DAILY\" },\n                        { label: \"Weekly\", value: \"WEEKLY\" }\n                    ];\n                    this.frequencyInfoLabel = 'Report will be sent on weekly basis at 6:00 a.m. on Monday';\n                    break;\n                case 'MONTHLY':\n                    this.frequencyList = [\n                        { label: \"Daily\", value: \"DAILY\" },\n                        { label: \"Weekly\", value: \"WEEKLY\" },\n                        { label: \"Monthly\", value: \"MONTHLY\" }\n                    ];\n                    this.frequencyInfoLabel = 'Report will be sent on monthly basis at 6:00 a.m. on first day of month';\n                    break;\n                default:\n                    break;\n            }\n        });\n    }\n\n    async initializeUsers() {\n        await this.getUsersByOrgID();\n        await this.getCurrentOrgUserAccess();\n    }\n\n    async getUsersByOrgID() {\n        this.rootOrgUserM = <UserM[]>await this.userService.getUsersByOrgID(this.orgID);\n\n        this.userM = this.rootOrgUserM;\n        this.userSearchUtil.entityArr = this.userM;\n        this.userSearchUtil.createSubscription();\n\n        this.totalUserCount = this.userM.length;\n        this.userM.forEach(user => this.allUserID.push(user['id']));\n    }\n\n    async getCurrentOrgUserAccess() {\n        this.currentOrgUserM = <UserM[]>await this.userService.getCurrentOrgUserAccess(this.orgID);\n    }\n\n    userContextChange() {\n        if (this.userFC.value) {\n            this.userContext = UserContext.ROOT_ORG_USER;\n            this.userM = this.rootOrgUserM;\n            this.scheduleReportFG.get('userChoice').setValue(this.userContext);\n        } else {\n            this.userContext = UserContext.CURRENT_ORG_USER;\n            this.userM = this.currentOrgUserM;\n            this.scheduleReportFG.get('userChoice').setValue(this.userContext);\n        }\n\n        this.allUserID = [];\n\n        this.userSearchUtil.entityArr = this.userM;\n        this.userSearchUtil.createSubscription();\n\n        this.totalUserCount = this.userM.length;\n        this.userM.forEach(user => this.allUserID.push(user['id']));\n\n        this.scheduleReportFG.get('userID').setValue([]);\n    }\n\n    selectUser() {\n        const selected = this.scheduleReportFG.get('userID').value;\n        if (selected.includes(-1)) {\n            selected.shift();\n            this.scheduleReportFG.get('userID').patchValue(selected);\n        } else if (this.scheduleReportFG.get('userID').value.length == this.totalUserCount) {\n            this.allUserID.splice(0, 0, -1);\n            this.scheduleReportFG.get('userID').patchValue(this.allUserID);\n        } else {\n            const filteredSelected = selected.filter(s => s != -1);\n            this.scheduleReportFG.get('userID').patchValue(filteredSelected);\n        }\n    }\n\n    selectAllUsers() {\n        if (!this.scheduleReportFG.get('userID').value.includes(-1)) {\n            this.scheduleReportFG.get('userID').reset([]);\n            return;\n        }\n        this.scheduleReportFG.get('userID').setValue([-1, ...this.allUserID]);\n    }\n\n    onInput() {\n        this.inputPlaceholder = '';\n    }\n\n    get otherUserEmail() {\n        return this.scheduleReportFG.get('otherUserEmail');\n    }\n\n    add(event: MatChipInputEvent): void {\n        const value = (event.value || '').trim();\n        if (value) {\n            const emails = value.split(',').map(email => email.trim());\n            const validEmails = emails.filter(email => this.tscCommonService.isValidEmail(email));\n            if (validEmails.length > 0) {\n                this.otherUserEmail.patchValue(this.otherUserEmail.value.concat(validEmails));\n            }\n        }\n        event.chipInput!.clear();\n    }\n\n    removeEmail(email): void {\n        const index = this.otherUserEmail.value.indexOf(email);\n        if (index >= 0) {\n            const emails = [...this.otherUserEmail.value];\n            emails.splice(index, 1);\n            this.otherUserEmail.setValue(emails);\n        }\n    }\n\n    onStatusChange(event) {\n        const newStatus = event.checked ? 'ACTIVE' : 'INACTIVE';\n        this.scheduleReportFG.get('status').setValue(newStatus);\n    }\n\n    errorHandling = (formGroup: FormGroup, controlPath: string, error: string): boolean => {\n        return formGroup.get(controlPath).hasError(error);\n    }\n\n}\n","<mat-card class=\"border cardOverwrite\">\n    <form [formGroup]=\"scheduleReportFG\">\n        <div class=\"row\">\n            <div class=\"col-sm-6\">\n                <span class=\"cardTitle\">\n                    Scheduler configuration\n                </span>\n            </div>\n            <div class=\"col-sm-6 centerAlignVertical justify-content-end\">\n                <span class=\"me-2\"> Inactive </span>\n                <mat-slide-toggle [checked]=\"scheduleReportFG.get('status').value == 'ACTIVE'\"\n                    (change)=\"onStatusChange($event)\"></mat-slide-toggle>\n                <span class=\"ms-2\"> Active </span>\n            </div>\n            <div class=\"col-sm-12 centerAlignVertical justify-content-end\">\n                <mat-error class=\"textMatError\" *ngIf=\"errorHandling(scheduleReportFG, 'status', 'required')\">\n                    {{ FormErrorEnum.REQUIRED }}\n                </mat-error>\n            </div>\n        </div>\n\n        <div class=\"row mt-2\">\n            <div class=\"row\">\n                <div class=\"col-sm-4\">\n                    <mat-form-field class=\"matFieldWidth100\"\n                        [appearance]=\"MaterialFormFieldAppearance.FORM_FIELD_APPEARANCE\">\n                        <mat-label class=\"formLabel\">Schedule report name</mat-label>\n                        <input class=\"formPlaceholder\" type=\"text\" placeholder=\"Schedule report name\" matInput\n                            formControlName=\"name\" required />\n                        <mat-error *ngIf=\"errorHandling(scheduleReportFG, 'name', 'required')\">\n                            {{ FormErrorEnum.REQUIRED }}\n                        </mat-error>\n                    </mat-form-field>\n                </div>\n\n                <div class=\"col-sm-4\">\n                    <mat-form-field class=\"matFieldWidth100\"\n                        [appearance]=\"MaterialFormFieldAppearance.FORM_FIELD_APPEARANCE\">\n                        <mat-label>Select data interval</mat-label>\n                        <mat-select formControlName=\"dataInterval\" required>\n                            <mat-option *ngFor=\"let interval of intervalList\" [value]=\"interval.value\">\n                                {{ interval.label }}\n                            </mat-option>\n                        </mat-select>\n                        <mat-error *ngIf=\"errorHandling(scheduleReportFG, 'dataInterval', 'required')\">\n                            {{ FormErrorEnum.REQUIRED }}\n                        </mat-error>\n                    </mat-form-field>\n                </div>\n\n                <div class=\"col-sm-4\">\n                    <mat-form-field class=\"matFieldWidth100\"\n                        [appearance]=\"MaterialFormFieldAppearance.FORM_FIELD_APPEARANCE\">\n                        <mat-label>Select frequency</mat-label>\n                        <mat-select formControlName=\"frequency\" required>\n                            <mat-option *ngFor=\"let frequency of frequencyList\" [value]=\"frequency.value\">\n                                {{ frequency.label }}\n                            </mat-option>\n                        </mat-select>\n                        <mat-hint>{{ frequencyInfoLabel }}</mat-hint>\n                        <mat-error *ngIf=\"errorHandling(scheduleReportFG, 'frequency', 'required')\">\n                            {{ FormErrorEnum.REQUIRED }}\n                        </mat-error>\n                    </mat-form-field>\n                </div>\n            </div>\n\n            <div class=\"row enabledToggle\">\n                <div class=\"col-sm-4 d-flex justify-content-start centerAlignVertical\">\n                    <span class=\"me-2\"> Current org users </span>\n                    <mat-slide-toggle [formControl]=\"userFC\" (change)=\"userContextChange()\"></mat-slide-toggle>\n                    <span class=\"ms-2\"> All users </span>\n                </div>\n            </div>\n\n            <div class=\"row mt-2\">\n                <div class=\"col-sm-4\">\n                    <mat-form-field class=\"matFieldWidth100\"\n                        [appearance]=\"MaterialFormFieldAppearance.FORM_FIELD_APPEARANCE\">\n                        <mat-label>Select user</mat-label>\n                        <mat-select formControlName=\"userID\" multiple required>\n\n                            <ng-container *ngIf=\"userM && userM.length > 0 && userM[0]['id']; else noUserFound\">\n                                <mat-option>\n                                    <ngx-mat-select-search [formControl]=\"userSearchUtil.filterFC\"\n                                        placeholderLabel=\"Search by name/email\"\n                                        noEntriesFoundLabel=\"No matching name/email found.\">\n                                    </ngx-mat-select-search>\n                                </mat-option>\n                                <mat-option [value]=\"-1\" (click)=\"selectAllUsers()\"\n                                    [hidden]=\"userSearchUtil.filterFC.value\">\n                                    Select all\n                                </mat-option>\n                                <mat-option *ngFor=\"let user of userSearchUtil.filteredEntities | async\"\n                                    [value]=\"user.id\" (click)=\"selectUser()\">\n                                    {{ user?.email }}\n                                </mat-option>\n                            </ng-container>\n\n                            <ng-template #noUserFound>\n                                <mat-option disabled>\n                                    {{ COMMON_CONSTANT.NO_DATA_FOUND }}\n                                </mat-option>\n                            </ng-template>\n                        </mat-select>\n                        <mat-error *ngIf=\"errorHandling(scheduleReportFG, 'userID', 'required')\">\n                            {{ FormErrorEnum.REQUIRED }}\n                        </mat-error>\n                    </mat-form-field>\n                </div>\n                <div class=\"col-sm-4\">\n                    <mat-form-field class=\"matFieldWidth100\"\n                        [appearance]=\"MaterialFormFieldAppearance.FORM_FIELD_APPEARANCE\">\n                        <mat-label>Enter other user email</mat-label>\n                        <mat-chip-list #chipList>\n                            <mat-chip *ngFor=\"let email of otherUserEmail.value\" [removable]=\"removable\"\n                                (removed)=\"removeEmail(email)\">\n                                {{ email }}\n                                <mat-icon matChipRemove *ngIf=\"removable\">cancel</mat-icon>\n                            </mat-chip>\n                            <input [placeholder]=\"inputPlaceholder\" [matChipInputFor]=\"chipList\"\n                                [matChipInputSeparatorKeyCodes]=\"separatorKeysCodes\" [matChipInputAddOnBlur]=\"addOnBlur\"\n                                (matChipInputTokenEnd)=\"add($event)\" (input)=\"onInput()\">\n                        </mat-chip-list>\n                    </mat-form-field>\n                </div>\n            </div>\n\n            <div class=\"row\">\n                <div class=\"col-sm-6\">\n                    <div class=\"radioBtnField\">\n                        <div class=\"radioBtnGroupLabel\"> Select report format * </div>\n                        <mat-radio-group formControlName=\"reportFormat\">\n                            <div class=\"row my-1\">\n                                <div class=\"col-sm-6\">\n                                    <mat-radio-button class=\"radioBtnLabel\" [value]=\"'PDF'\">\n                                        pdf\n                                    </mat-radio-button>\n                                </div>\n                                <div class=\"col-sm-6\">\n                                    <mat-radio-button class=\"radioBtnLabel\" [value]=\"'XLSX'\">\n                                        xlsx\n                                    </mat-radio-button>\n                                </div>\n                                <mat-error class=\"textMatError ms-1 mt-1\"\n                                    *ngIf=\"errorHandling(scheduleReportFG, 'reportFormat', 'required')\">\n                                    {{ FormErrorEnum.REQUIRED }}\n                                </mat-error>\n                            </div>\n                        </mat-radio-group>\n                    </div>\n                </div>\n            </div>\n        </div>\n    </form>\n</mat-card>","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\n\nimport {\n    FormsModule,\n    ReactiveFormsModule\n} from '@angular/forms';\n\nimport { MatCardModule } from '@angular/material/card';\nimport { MatButtonModule } from '@angular/material/button';\nimport { MatFormFieldModule } from '@angular/material/form-field';\nimport { MatIconModule } from '@angular/material/icon';\nimport { MatInputModule } from '@angular/material/input';\nimport { MatSelectModule } from '@angular/material/select';\nimport { MatTooltipModule } from '@angular/material/tooltip';\nimport { MatOptionModule } from '@angular/material/core';\nimport { MatRadioModule } from '@angular/material/radio';\nimport { MatSlideToggleModule } from '@angular/material/slide-toggle';\nimport { MatChipsModule } from '@angular/material/chips';\n\nimport { NgxMatSelectSearchModule } from 'ngx-mat-select-search';\n\nimport { ScheduleReportConfigurationComponent } from './configuration.component';\n\n@NgModule({\n    declarations: [\n        ScheduleReportConfigurationComponent\n    ],\n    imports: [\n        CommonModule,\n\n        FormsModule,\n        ReactiveFormsModule,\n\n        MatCardModule,\n        MatButtonModule,\n        MatFormFieldModule,\n        MatIconModule,\n        MatInputModule,\n        MatSelectModule,\n        MatTooltipModule,\n        MatOptionModule,\n        MatRadioModule,\n        MatSlideToggleModule,\n        MatChipsModule,\n\n        NgxMatSelectSearchModule\n    ],\n    exports: [\n        ScheduleReportConfigurationComponent\n    ]\n})\nexport class ScheduleReportConfigurationModule { }\n","export interface ScheduleReportI {\n    reportConfig: {\n        reportType: string;\n        entityType: string;\n        deviceID: number[];\n        entityID: number[];\n        sourceConsumer: {\n            type: string;\n            keyID: string;\n        },\n        paramMetric: string[];\n    };\n    schedulerConfig: {\n        name: string;\n        dataInterval: string;\n        frequency: string;\n        userChoice: string;\n        userID: number[];\n        otherUserEmail: string[];\n        status: string;\n        reportFormat: string;\n    };\n}\n\nexport class ScheduleReport implements ScheduleReportI {\n    reportConfig = {\n        reportType: '',\n        deviceID: [],\n        entityType: '',\n        entityID: [],\n        sourceConsumer: {\n            type: '',\n            keyID: '',\n        },\n        paramMetric: [],\n    };\n    schedulerConfig = {\n        name: '',\n        dataInterval: '',\n        frequency: '',\n        userChoice: '',\n        userID: [],\n        otherUserEmail: [],\n        status: '',\n        reportFormat: '',\n    };\n}\n\nexport interface ScheduleReportPageI {\n    id: number;\n    name: string;\n    type: string;\n    recipients: Array<{\n        id: number,\n        firstName: string,\n        lastName: string,\n        email: string,\n        profileImgUrl: string\n    }>;\n    frequency: string;\n    scheduledBy: {\n        id: number,\n        firstName: string,\n        lastName: string,\n        email: string,\n        profileImgUrl: string\n    };\n    status: string;\n}\n\nexport class ScheduleReportPage implements ScheduleReportPageI {\n    id = null;\n    name = '';\n    type = '';\n    recipients = [];\n    frequency = '';\n    scheduledBy = {\n        id: null,\n        firstName: '',\n        lastName: '',\n        email: '',\n        profileImgUrl: ''\n    };\n    status = '';\n}","import { Inject, Injectable } from '@angular/core';\nimport { HttpClient, HttpParams } from '@angular/common/http';\n\nimport { Observable } from 'rxjs';\n\nimport { ScheduleReportI, ScheduleReportPageI } from '../model/schedule-report.model';\n\n// tsc-library\nimport { PageM } from '@library/tsc-common';\n// /tsc-library/\n\n@Injectable({\n    providedIn: 'root'\n})\n\nexport class ScheduleReportController {\n\n    constructor(\n        private http: HttpClient,\n        @Inject('environment') private environment: any\n    ) { }\n\n    createScheduleReport(orgID, scheduleReport) {\n        return this.http.post(`${this.environment.TSC_COMMON_API_URL}organizations/${orgID}/schedule-reports`, scheduleReport);\n    }\n\n    getScheduleReportByID(orgID, scheduleReportID): Observable<ScheduleReportI> {\n        return this.http.get<ScheduleReportI>(`${this.environment.TSC_COMMON_API_URL}organizations/${orgID}/schedule-reports/${scheduleReportID}`);\n    }\n\n    updateScheduleReport(orgID, scheduleReportID, scheduleReport) {\n        return this.http.patch(`${this.environment.TSC_COMMON_API_URL}organizations/${orgID}/schedule-reports/${scheduleReportID}`, scheduleReport);\n    }\n\n    getScheduleReportByPage(pageNo: number, pageSize: number, sortBy: string, orderBy: string, searchValue, filterArr, orgID): Observable<PageM<ScheduleReportPageI>> {\n        let params = new HttpParams();\n\n        params = params.append('pageNo', pageNo);\n        params = params.append('pageSize', pageSize);\n        params = params.append('sortBy', sortBy);\n        params = params.append('orderBy', orderBy);\n\n        if (searchValue) {\n            params = params.append('searchBy', searchValue);\n        }\n\n        filterArr.forEach(filter => params = params.append('filter', filter));\n\n        return this.http.get<PageM<ScheduleReportPageI>>(`${this.environment.TSC_COMMON_API_URL}organizations/${orgID}/schedule-reports/page`, { params: params });\n    }\n\n    deleteScheduledReport(orgID, scheduleReportID) {\n        return this.http.delete(`${this.environment.TSC_COMMON_API_URL}organizations/${orgID}/schedule-reports/${scheduleReportID}`);\n    }\n\n    updateReportStatusByID(orgID, scheduleReportID, status) {\n        return this.http.patch(`${this.environment.TSC_COMMON_API_URL}organizations/${orgID}/schedule-reports/${scheduleReportID}/status`, status);\n    }\n}","import { Component, ElementRef, OnInit, ViewChild } from '@angular/core';\nimport { FormControl, Validators } from '@angular/forms';\nimport { Router } from '@angular/router';\n\nimport { MatDialog } from '@angular/material/dialog';\nimport { MatSort } from '@angular/material/sort';\nimport { MatPaginator } from '@angular/material/paginator';\n\nimport { merge, fromEvent, of as observableOf } from 'rxjs';\nimport { map, startWith, switchMap, catchError } from \"rxjs/operators\";\n\nimport { faCaretDown, faPlus } from '@fortawesome/free-solid-svg-icons';\n\nimport { LIST_CONSTANT } from '../../../../constant/list.constant';\n\nimport { ScheduleReportTypeEnum } from '../../../../enum/schedule-report.enum';\n\nimport { ScheduleReportPage, ScheduleReportPageI } from '../../../../model/schedule-report.model';\n\nimport { ScheduleReportController } from '../../../../controller/schedule-report.controller';\n\n// tsc-library\nimport {\n    MATERIAL_CONSTANT,\n    TABLE_CONSTANT,\n    ButtonTooltipEnum,\n    SearchBarOneComponent,\n    FormAction,\n    COMMON_CONSTANT,\n    DialogOneComponent,\n    DialogOneEnum,\n    FunnelFilterComponent,\n    PageM,\n    DialogResponseEnum,\n    StatusService,\n    ButtonLabelEnum,\n    ImageService\n} from '@library/tsc-common';\nimport { StorageService } from '@library/storage-service';\nimport { ApplicationKeyID } from '@library/application-service';\nimport { ProfileImg, UserService } from '@library/user-service';\n// /tsc-library/\n\n@Component({\n    selector: 'lib-page',\n    templateUrl: './page.component.html',\n    styleUrls: ['./page.component.scss']\n})\nexport class ScheduleReportPageComponent implements OnInit {\n\n    faPlus = faPlus;\n    faCaretDown = faCaretDown;\n\n    MATERIAL_CONSTANT = MATERIAL_CONSTANT;\n    TABLE_CONSTANT = TABLE_CONSTANT;\n    COMMON_CONSTANT = COMMON_CONSTANT;\n\n    ButtonTooltipEnum = ButtonTooltipEnum;\n    DialogResponseEnum = DialogResponseEnum;\n    FormAction = FormAction;\n    ProfileImg = ProfileImg;\n\n    searchByPlaceHolder: string = 'report name';\n\n    orgID: any;\n    applicationKeyID: string;\n    applicationName: string;\n    reportType: any[] = [];\n\n    dataSource = [new ScheduleReportPage()];\n    dataSourceLength: number = 0;\n    displayedColumn: string[] = ['id', 'name', 'type', 'recipients', 'frequency', 'scheduledBy', 'status', 'option'];\n\n    searchFlag: boolean = false;\n    searchValue: string;\n    searchFC = new FormControl('', Validators.required);\n\n    reportTypeFlag: boolean = false;\n    reportTypeFC: FormControl = new FormControl(['all']);\n    filterArr: Array<string> = [];\n    totalReportTypeCount: number = 0;\n\n    recipientUserList: any[] = [];\n\n    @ViewChild('sort') sort: MatSort;\n    @ViewChild('paginator') paginator: MatPaginator;\n    @ViewChild('refreshBtn') refreshBtn: ElementRef;\n    @ViewChild('searchBar') searchBar: SearchBarOneComponent;\n    @ViewChild('typeSelect') typeSelect: FunnelFilterComponent;\n\n    constructor(\n        private dialog: MatDialog,\n        private router: Router,\n        private scheduleReportController: ScheduleReportController,\n\n        // tsc-library\n        private storageService: StorageService,\n        public statusService: StatusService,\n        public userService: UserService,\n        public imageService: ImageService\n        // /tsc-library/\n    ) { }\n\n    ngOnInit(): void {\n        this.orgID = this.storageService.getStorage('currentOrgID');\n        this.applicationKeyID = this.storageService.getStorage('applicationKeyID');\n        this.applicationName = this.applicationKeyID == ApplicationKeyID.WATER_KEY_ID ? 'water' : 'energy';\n\n        if (this.applicationKeyID == ApplicationKeyID.ENERGY_KEY_ID) {\n            this.reportType = LIST_CONSTANT.ENERGY_APP_SCHEDULE_REPORT_TYPE;\n            this.totalReportTypeCount = this.reportType.length;\n        } else if (this.applicationKeyID == ApplicationKeyID.WATER_KEY_ID) {\n            this.reportType = LIST_CONSTANT.WATER_APP_SCHEDULE_REPORT_TYPE;\n            this.totalReportTypeCount = this.reportType.length;\n        }\n    }\n\n    ngAfterViewInit() {\n        merge(\n            this.sort.sortChange,\n            this.typeSelect.multi,\n            fromEvent(this.refreshBtn.nativeElement, 'click')\n        ).pipe(\n            startWith({}),\n            switchMap((): any => {\n\n                this.filterArr = [];\n\n                if (this.searchFlag) {\n                    var searchValue = 'name:' + this.searchValue;\n                }\n\n                if (this.reportTypeFlag) {\n                    let selectedReportType = this.reportTypeFC.value.length - 1;\n                    if (selectedReportType == this.totalReportTypeCount) {\n                        this.reportTypeFlag = false;\n                    } else {\n                        this.filterArr.push('reportType:' + this.reportTypeFC.value);\n                    }\n                }\n\n                return this.scheduleReportController.getScheduleReportByPage(\n                    this.paginator.pageIndex,\n                    this.paginator.pageSize,\n                    this.sort.active,\n                    this.sort.direction,\n                    searchValue,\n                    this.filterArr,\n                    this.orgID,\n                ).pipe(catchError(() => observableOf(null)));\n            }),\n            map((response: PageM<ScheduleReportPageI>): any => {\n                if (response == null) {\n                    this.dataSourceLength = 0;\n                    return [];\n                }\n\n                this.dataSourceLength = response.totalCount;\n                return response.records;\n            })\n        ).subscribe((dataSource) => {\n            this.dataSource = dataSource;\n        });\n    }\n\n    searchFn(value: string) {\n        this.searchFlag = true;\n        this.searchValue = value;\n\n        if (value.length == 0) {\n            this.resetSearch();\n        }\n\n        this.refreshBtn.nativeElement.click();\n    }\n\n    resetSearch() {\n        this.searchFlag = false;\n        this.searchBar.searchClear();\n    }\n\n    showAllRecipient(userList) {\n        this.recipientUserList = [];\n\n        userList.forEach(user => {\n            let metric = {\n                profileImg: user.profileImgUrl || this.userService.defaultImage(\n                    (user.firstName ? user.firstName + ' ' : '') + (user.lastName ? user.lastName : ''),\n                    ProfileImg.PROFILE_IMAGE_DROPDOWN_NAME_VIEW),\n                name: (user.firstName ? user.firstName + ' ' + (user.lastName ? user.lastName : '') : ''),\n            };\n            this.recipientUserList.push(metric);\n        });\n    }\n\n    openDeleteDialog(scheduleReport) {\n\n        const dialog = this.dialog.open(DialogOneComponent, {\n            minWidth: '450px',\n            maxWidth: '450px',\n            data: {\n                type: DialogOneEnum.DELETE,\n                icon: 'dangerous',\n                header: 'Delete schedule report?',\n                body: '<b>' + scheduleReport.name + '</b>' + ' will be deleted permanently.</br></br>Are you sure you want to continue?',\n                buttonOne: ButtonLabelEnum.CANCEL_BTN_LABEL,\n                buttonTwo: ButtonLabelEnum.DELETE_BTN_LABEL\n            }\n        });\n        dialog.afterClosed().subscribe(res => {\n            if (res) {\n                this.deleteScheduledReport(scheduleReport.id);\n            }\n        })\n    }\n\n    deleteScheduledReport(scheduleReportID) {\n        this.scheduleReportController.deleteScheduledReport(this.orgID, scheduleReportID).subscribe((deleteRes) => {\n            if (deleteRes) {\n                this.refreshBtn.nativeElement.click();\n            }\n        });\n    }\n\n    updateReportStatusByID(scheduleReport) {\n        let newStatus = scheduleReport.status == 'ACTIVE' ? 'INACTIVE' : 'ACTIVE';\n\n        let requestBody = {\n            status: newStatus\n        }\n\n        this.scheduleReportController.updateReportStatusByID(this.orgID, scheduleReport.id, requestBody)\n            .subscribe(response => {\n                if (response) {\n                    this.refreshBtn.nativeElement.click();\n                }\n            }, error => {\n                console.log('error in updateReportStatusByID -', error);\n            })\n    }\n\n    goToReportPage(reportType) {\n        switch (reportType) {\n            case ScheduleReportTypeEnum.SOURCING_REPORT:\n                this.router.navigate([`schedule-report/${this.applicationName}-sourcing`]);\n                break;\n            case ScheduleReportTypeEnum.CONSUMPTION_REPORT:\n                this.router.navigate([`schedule-report/${this.applicationName}-consumption`]);\n                break;\n            case ScheduleReportTypeEnum.BREAKUP_REPORT:\n                this.router.navigate([`schedule-report/${this.applicationName}-breakup`]);\n                break;\n            case ScheduleReportTypeEnum.CGWA_REPORT:\n                this.router.navigate([`schedule-report/cgwa`]);\n                break;\n            case ScheduleReportTypeEnum.TEMPERATURE_REPORT:\n                this.router.navigate([`schedule-report/temperature`]);\n                break;\n        }\n    }\n\n    updateScheduledReport(scheduleReport) {\n        switch (scheduleReport.type) {\n            case ScheduleReportTypeEnum.SOURCING_REPORT:\n                this.router.navigate([`schedule-report/${scheduleReport.id}/${this.applicationName}-sourcing/update`]);\n                break;\n            case ScheduleReportTypeEnum.CONSUMPTION_REPORT:\n                this.router.navigate([`schedule-report/${scheduleReport.id}/${this.applicationName}-consumption/update`]);\n                break;\n            case ScheduleReportTypeEnum.BREAKUP_REPORT:\n                this.router.navigate([`schedule-report/${scheduleReport.id}/${this.applicationName}-breakup/update`]);\n                break;\n            case ScheduleReportTypeEnum.CGWA_REPORT:\n                this.router.navigate([`schedule-report/${scheduleReport.id}/cgwa/update`]);\n                break;\n            case ScheduleReportTypeEnum.TEMPERATURE_REPORT:\n                this.router.navigate([`schedule-report/${scheduleReport.id}/temperature/update`]);\n                break;\n        }\n    }\n\n    getReportTypeLabel(type) {\n        let reportLabel: string;\n        let applicationName = this.applicationKeyID == ApplicationKeyID.WATER_KEY_ID ? 'Water' : 'Energy';\n\n        switch (type) {\n            case ScheduleReportTypeEnum.SOURCING_REPORT:\n                reportLabel = `${applicationName} Sourcing Report`;\n                break;\n            case ScheduleReportTypeEnum.CONSUMPTION_REPORT:\n                reportLabel = `${applicationName} Consumption Report`;\n                break;\n            case ScheduleReportTypeEnum.BREAKUP_REPORT:\n                reportLabel = `${applicationName} Breakup Report`;\n                break;\n            case ScheduleReportTypeEnum.CGWA_REPORT:\n                reportLabel = `CGWA Report`;\n                break;\n            case ScheduleReportTypeEnum.TEMPERATURE_REPORT:\n                reportLabel = `Temperature Report`;\n                break;\n        }\n\n        return reportLabel;\n    }\n\n    getFrequencyLabel(type) {\n        let frequencyLabel: string;\n\n        switch (type) {\n            case 'DAILY':\n                frequencyLabel = 'Daily';\n                break;\n            case 'WEEKLY':\n                frequencyLabel = 'Weekly';\n                break;\n            case 'MONTHLY':\n                frequencyLabel = 'Monthly';\n                break;\n        }\n\n        return frequencyLabel;\n    }\n\n}\n","<div class=\"card cardOverwrite h100\">\n    <div class=\"headerContainer\">\n        <div class=\"headerLeftContainer\">\n            <div class=\"pageTitle\">Schedule Report</div>\n            <div class=\"pageSubtitle\"></div>\n        </div>\n\n        <div class=\"headerRightContainer\">\n            <div class=\"headerRightContainerInner\">\n                <lib-search-bar-one class=\"me-3\" #searchBar [searchBy]=\"searchByPlaceHolder\"\n                    (emitSearch)=\"searchFn($event)\"></lib-search-bar-one>\n\n                <button class=\"btn btn-sm btn-light refreshBtn centerAlign me-3 py-1\" #refreshBtn matRipple\n                    [matRippleCentered]=\"MATERIAL_CONSTANT.MAT_RIPPLE_CENTER\" matTooltipPosition=\"below\"\n                    [matTooltip]=\"ButtonTooltipEnum.REFRESH\">\n                    <span class=\"material-symbols-outlined text-secondary\">\n                        refresh\n                    </span>\n                </button>\n\n                <div class=\"btn-group\" ngbDropdown placement=\"bottom-right\">\n                    <button type=\"button\" ngbDropdownToggle class=\"hideDropdownIcon btn btn-sm btn-success\">\n                        <fa-icon [icon]=\"faPlus\" class=\"me-1\"></fa-icon>Schedule report\n                        <fa-icon [icon]=\"faCaretDown\" class=\"ms-2\"></fa-icon>\n                    </button>\n                    <div ngbDropdownMenu>\n                        <a class=\"dropdown-item mt-1\" *ngFor=\"let type of reportType\" (click)=\"goToReportPage(type.value)\">\n                            {{ type.label }}\n                        </a>\n                    </div>\n                </div>\n            </div>\n        </div>\n    </div>\n\n    <div class=\"overflowX customScrollBar\">\n        <table class=\"w-100\" mat-table matSort #sort=\"matSort\" matSortActive=\"name\" matSortDirection=\"asc\"\n            matSortDisableClear [dataSource]=\"dataSource\">\n\n            <ng-container matColumnDef=\"id\">\n                <th class=\"columnWidth1\" mat-header-cell *matHeaderCellDef>ID</th>\n                <td class=\"columnWidth1\" mat-cell *matCellDef=\"let row\">{{ row.id }}</td>\n            </ng-container>\n\n            <ng-container matColumnDef=\"name\">\n                <th class=\"px-4 columnWidth2\" mat-header-cell *matHeaderCellDef mat-sort-header disableClear>Name</th>\n                <td class=\"px-4 columnWidth2\" mat-cell *matCellDef=\"let row\" matTooltipPosition=\"above\"\n                    [matTooltip]=\"(row?.name.length > 20 ? row?.name : '')\" matTooltipClass=\"nameTooltip\">\n                    {{ (row.name ? row.name : COMMON_CONSTANT.HYPHEN) | dotdotdot:20 }}\n                </td>\n            </ng-container>\n\n            <ng-container matColumnDef=\"type\">\n                <th class=\"px-4 columnWidth2\" mat-header-cell *matHeaderCellDef>\n                    <funnel-filter #typeSelect header=\"Report type\" type=\"multi\" [entityList]=\"reportType\" value=\"value\" view=\"label\"\n                        [selectFC]=\"reportTypeFC\" [active]=\"reportTypeFlag\" selectAllLabel=\"All report type\"\n                        (multi)=\"reportTypeFlag = true;\">\n                    </funnel-filter>\n                </th>\n                <td class=\"px-4 columnWidth2\" mat-cell *matCellDef=\"let row\">\n                    {{ getReportTypeLabel(row.type) }}\n                </td>\n            </ng-container>\n\n            <ng-container matColumnDef=\"recipients\">\n                <th class=\"columnWidth1\" mat-header-cell *matHeaderCellDef>Recipients</th>\n                <td class=\"columnWidth1\" mat-cell *matCellDef=\"let row\">\n                    <ng-container *ngFor=\"let user of row.recipients.slice(0,3); let i = index\">\n                        <img class=\"multipleProfileImg rounded-circle border\"\n                            [src]=\"imageService.getProfileImageUrl(user, ProfileImg.PROFILE_IMAGE_DROPDOWN_NAME_VIEW)\" alt=\"profile-image\"\n                            #tooltip=\"matTooltip\" matTooltipPosition=\"above\"\n                            [matTooltip]=\"row.recipients.length != 1 ? (user?.firstName ? user?.firstName + ' ' + (user?.lastName ? user?.lastName : '') : '') : ''\"\n                            matTooltipClass=\"nameTooltip\" />\n\n                        <span *ngIf=\"row.recipients.length == 1\">\n                            {{ user.firstName }} {{user.lastName }}\n                        </span>\n                    </ng-container>\n                    <button *ngIf=\"imageService.getCountForCircleDisplay(row.recipients) >= 1\" [matMenuTriggerFor]=\"menu\"\n                        class=\"btn btn-sm rounded-circle countCircleBtn\" (click)=\"showAllRecipient(row.recipients)\">\n                        {{ imageService.getCountForCircleDisplay(row.recipients) }}\n                    </button>\n                    <mat-menu #menu=\"matMenu\">\n                        <button mat-menu-item *ngFor=\"let recipient of recipientUserList\">\n                            <img class=\"multipleProfileImg rounded-circle border me-1\" [src]=\"recipient.profileImg\">\n                            {{ recipient.name }}\n                        </button>\n                    </mat-menu>\n                </td>\n            </ng-container>\n\n            <ng-container matColumnDef=\"frequency\">\n                <th class=\"columnWidth1\" mat-header-cell *matHeaderCellDef>Frequency</th>\n                <td class=\"columnWidth1\" mat-cell *matCellDef=\"let row\">\n                    {{ getFrequencyLabel(row.frequency) }}\n                </td>\n            </ng-container>\n\n            <ng-container matColumnDef=\"scheduledBy\">\n                <th class=\"columnWidth1\" mat-header-cell *matHeaderCellDef>Scheduled by</th>\n                <td class=\"columnWidth1\" mat-cell *matCellDef=\"let row\">\n                    <img class=\"rounded-circle border profileImageDropdownView\"\n                        [src]=\"row?.scheduledBy?.profileImgUrl || userService.defaultImage(row?.scheduledBy?.firstName + ' ', ProfileImg.PROFILE_IMAGE_DROPDOWN_NAME_VIEW)\"\n                        alt=\"profile img\">\n                    <span matTooltipPosition=\"above\"\n                        [matTooltip]=\"(row?.scheduledBy?.firstName + ' ' + row?.scheduledBy?.lastName).length > 12 ? row?.scheduledBy?.firstName + ' ' + row?.scheduledBy?.lastName : ''\"\n                        matTooltipClass=\"nameTooltip\">\n                        {{ (row?.scheduledBy?.firstName ? row?.scheduledBy?.firstName + ' ' + row?.scheduledBy?.lastName :\n                        COMMON_CONSTANT.HYPHEN)| dotdotdot:12 }}\n                    </span>\n                </td>\n            </ng-container>\n\n            <ng-container matColumnDef=\"status\">\n                <th class=\"columnWidth1\" mat-header-cell *matHeaderCellDef>Status</th>\n                <td class=\"columnWidth1\" mat-cell *matCellDef=\"let row\"\n                    [ngClass]=\"statusService.getStatusClass(row.status)\">{{\n                    row.status ? statusService.getStatusValue(row.status) : COMMON_CONSTANT.HYPHEN }}</td>\n            </ng-container>\n\n            <ng-container matColumnDef=\"option\">\n                <th class=\"columnWidth1\" mat-header-cell *matHeaderCellDef></th>\n                <td class=\"columnWidth1\" mat-cell *matCellDef=\"let row\">\n                    <div class=\"centerAlignVertical\">\n\n                        <button type=\"button\" class=\"iconBtn centerAlign text-primary updateIconHover\"\n                            (click)=\"updateScheduledReport(row)\" matRipple\n                            [matRippleCentered]=\"MATERIAL_CONSTANT.MAT_RIPPLE_CENTER\" matTooltipPosition=\"below\"\n                            [matTooltip]=\"ButtonTooltipEnum.UPDATE\">\n                            <span class=\"material-symbols-outlined icon\">\n                                edit\n                            </span>\n                        </button>\n\n                        <button type=\"button\" class=\"iconBtn centerAlign text-danger deleteIconHover cursorPointer\"\n                            matTooltipPosition=\"below\" [matTooltip]=\"ButtonTooltipEnum.DELETE\" matRipple\n                            [matRippleCentered]=\"MATERIAL_CONSTANT.MAT_RIPPLE_CENTER\" (click)=\"openDeleteDialog(row)\">\n                            <span class=\"material-symbols-outlined icon\">\n                                delete\n                            </span>\n                        </button>\n\n                        <mat-slide-toggle class=\"ms-3\" [checked]=\"row.status == 'ACTIVE'\"\n                            (change)=\"updateReportStatusByID(row)\"></mat-slide-toggle>\n                    </div>\n                </td>\n            </ng-container>\n\n            <tr mat-header-row *matHeaderRowDef=\"displayedColumn\"></tr>\n            <tr mat-row *matRowDef=\"let row; columns: displayedColumn;\" class=\"dataRow\"></tr>\n\n            <tr class=\"mat-row\" *matNoDataRow>\n                <td class=\"mat-cell text-center\" [attr.colspan]=\"displayedColumn.length\">\n                    {{ TABLE_CONSTANT.TABLE_NO_DATA }}\n                </td>\n            </tr>\n        </table>\n    </div>\n\n    <mat-paginator class=\"roundedBorder\" showFirstLastButtons #paginator [length]=\"dataSourceLength\"\n        [pageSize]=\"TABLE_CONSTANT.DEFAULT_PAGE_SIZE\" [pageSizeOptions]=\"TABLE_CONSTANT.PAGE_SIZE_OPTION\">\n    </mat-paginator>\n</div>","import { NgModule } from '@angular/core';\nimport { RouterModule, Routes } from '@angular/router';\n\nimport { ScheduleReportPageComponent } from './page.component';\n\nconst routes: Routes = [\n    {\n        path: '',\n        component: ScheduleReportPageComponent\n    }\n];\n\n@NgModule({\n    imports: [RouterModule.forChild(routes)],\n    exports: [RouterModule]\n})\nexport class ScheduleReportPageRoutingModule { }\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\n\nimport { FormsModule } from '@angular/forms';\nimport { ReactiveFormsModule } from '@angular/forms';\n\nimport { MatRippleModule } from '@angular/material/core';\nimport { MatTableModule } from '@angular/material/table';\nimport { MatSortModule } from '@angular/material/sort';\nimport { MatTooltipModule } from '@angular/material/tooltip';\nimport { MatDialogModule } from '@angular/material/dialog';\nimport { MatPaginatorModule } from '@angular/material/paginator';\nimport { MatSlideToggleModule } from '@angular/material/slide-toggle';\nimport { MatMenuModule } from '@angular/material/menu';\n\nimport { NgbModule } from '@ng-bootstrap/ng-bootstrap';\nimport { FontAwesomeModule } from '@fortawesome/angular-fontawesome';\n\nimport { ScheduleReportPageRoutingModule } from './page-routing.module';\nimport { ScheduleReportPageComponent } from './page.component';\n\n// tsc-library\nimport { SearchBarOneModule, FunnelFilterModule, EllipsisPipeModule } from '@library/tsc-common';\n// /tsc-library/\n\n@NgModule({\n    declarations: [\n        ScheduleReportPageComponent\n    ],\n    imports: [\n        CommonModule,\n        ScheduleReportPageRoutingModule,\n\n        FormsModule,\n        ReactiveFormsModule,\n\n        MatRippleModule,\n        MatTableModule,\n        MatSortModule,\n        MatTooltipModule,\n        MatDialogModule,\n        MatPaginatorModule,\n        MatSlideToggleModule,\n        MatMenuModule,\n\n        NgbModule,\n        FontAwesomeModule,\n\n        SearchBarOneModule,\n        FunnelFilterModule,\n        EllipsisPipeModule\n    ]\n})\nexport class ScheduleReportPageModule { }\n","import { Injectable } from '@angular/core';\n\nimport { ScheduleReport, ScheduleReportI } from '../model/schedule-report.model';\n\nimport { ScheduleReportController } from '../controller/schedule-report.controller';\n\n@Injectable({\n    providedIn: 'root'\n})\n\nexport class ScheduleReportService {\n\n    constructor(\n        private scheduleReportController: ScheduleReportController\n    ) { }\n\n    async getScheduleReportByID(orgID, scheduleReportID): Promise<ScheduleReportI> {\n        let scheduleReportI: ScheduleReportI;\n        try {\n            scheduleReportI = await this.scheduleReportController.getScheduleReportByID(orgID, scheduleReportID).toPromise();\n\n            if (scheduleReportI) {\n                return scheduleReportI;\n            } else {\n                return new ScheduleReport();\n            }\n        } catch (error) {\n            console.error('Error -', error);\n            return new ScheduleReport();\n        }\n    }\n\n}\n","import { Component, OnInit, ViewChild } from '@angular/core';\nimport { FormBuilder, FormGroup, Validators } from '@angular/forms';\nimport { ActivatedRoute, Router } from '@angular/router';\n\nimport { isEqual } from 'lodash';\n\nimport { DropdownTypeEnum } from '../../../enum/dropdown.enum';\nimport { ScheduleReportTypeEnum } from '../../../enum/schedule-report.enum';\n\nimport { ConsumptionParameterM } from '../../../model/parameter.model';\nimport { ScheduleReport, ScheduleReportI } from '../../../model/schedule-report.model';\n\nimport { ScheduleReportController } from '../../../controller/schedule-report.controller';\n\nimport { ParameterService } from '../../../service/parameter.service';\nimport { ScheduleReportService } from '../../../service/schedule-report.service';\n\nimport { EntityComponent } from '../../dropdown/entity/entity.component';\nimport { ScheduleReportConfigurationComponent } from '../_shared/configuration/configuration.component';\n\n// tsc-library\nimport { ResponseM, MaterialFormFieldAppearance, InvalidForm, ButtonLabelEnum, FormAction, FormErrorEnum, TSCCommonService, COMMON_CONSTANT, MATERIAL_CONSTANT, ButtonTooltipEnum } from '@library/tsc-common';\nimport { ToastrColor, ToastrService } from '@library/toastr-service';\nimport { StorageService } from '@library/storage-service';\nimport { ApplicationKeyID } from '@library/application-service';\n// /tsc-library/\n\n@Component({\n    selector: 'lib-breakup',\n    templateUrl: './breakup.component.html',\n    styles: [\n    ]\n})\nexport class ScheduleReportBreakupComponent implements OnInit {\n\n    COMMON_CONSTANT = COMMON_CONSTANT;\n    MATERIAL_CONSTANT = MATERIAL_CONSTANT;\n\n    FormAction = FormAction;\n    FormErrorEnum = FormErrorEnum;\n    ButtonLabelEnum = ButtonLabelEnum;\n    ButtonTooltipEnum = ButtonTooltipEnum;\n    DropdownTypeEnum = DropdownTypeEnum;\n    MaterialFormFieldAppearance = MaterialFormFieldAppearance;\n    ApplicationKeyID = ApplicationKeyID;\n\n    orgID: any;\n    applicationKeyID: any;\n    consumptionParamM: any;\n\n    scheduleBreakupReportFG: FormGroup;\n    modifiedFG: any;\n    scheduleReportID: any;\n\n    action: string;\n    pageTitle: string;\n    isEqual: boolean = true;\n    initialObject: any;\n\n    scheduleReportI = new ScheduleReport();\n\n    @ViewChild('entityInput') entityInput: EntityComponent;\n    @ViewChild('schedulerConfigInput') schedulerConfigInput: ScheduleReportConfigurationComponent;\n\n    constructor(\n        private activatedRoute: ActivatedRoute,\n        private router: Router,\n        private formBuilder: FormBuilder,\n        private scheduleReportController: ScheduleReportController,\n        private parameterService: ParameterService,\n        private scheduleReportService: ScheduleReportService,\n\n        // tsc-library\n        private storageService: StorageService,\n        public tscCommonService: TSCCommonService,\n        private toastrService: ToastrService,\n        // /tsc-library/\n    ) { }\n\n    ngOnInit(): void {\n        this.orgID = this.storageService.getStorage('currentOrgID');\n        this.applicationKeyID = this.storageService.getStorage('applicationKeyID');\n\n        this.scheduleBreakupReportFGInit();\n        this.getConsumptionParameter();\n\n        this.activatedRoute.data.subscribe(data => {\n            this.action = data.action;\n            this.setPageTitle();\n        });\n\n        this.activatedRoute.params.subscribe(params => {\n            if (this.action == FormAction.UPDATE) {\n                this.scheduleReportID = params.scheduleReportID;\n                this.getScheduleReportByID(this.scheduleReportID);\n            }\n        });\n    }\n\n    setPageTitle() {\n        const applicationName = this.applicationKeyID == ApplicationKeyID.WATER_KEY_ID ? 'Water' : 'Energy';\n\n        if (this.action == FormAction.CREATE) {\n            this.pageTitle = `Schedule ${applicationName} Breakup Report`;\n        } else if (this.action == FormAction.UPDATE) {\n            this.pageTitle = `Update Scheduled ${applicationName} Breakup Report`;\n        }\n    }\n\n    scheduleBreakupReportFGInit() {\n        this.scheduleBreakupReportFG = this.formBuilder.group({\n            reportConfig: this.formBuilder.group({\n                reportType: [ScheduleReportTypeEnum.BREAKUP_REPORT, Validators.required],\n                deviceID: [[]],\n                entityType: [],\n                entityID: [[], Validators.required],\n                sourceConsumer: this.formBuilder.group({\n                    type: ['SOURCE', Validators.required],\n                    keyID: []\n                }),\n                paramMetric: [, Validators.required],\n            }),\n            schedulerConfig: this.formBuilder.group({\n                name: [, Validators.required],\n                dataInterval: [, Validators.required],\n                frequency: [, Validators.required],\n                userChoice: [, Validators.required],\n                userID: [[], Validators.required],\n                otherUserEmail: [[]],\n                status: [, Validators.required],\n                reportFormat: [, Validators.required],\n            })\n        });\n    }\n\n    async getConsumptionParameter() {\n        const consumptionParamM = <ConsumptionParameterM>await this.parameterService.getConsumptionParameter(this.orgID);\n\n        this.consumptionParamM = consumptionParamM.consumptionParameter;\n    }\n\n    entityInpChange() {\n        let entityID = this.entityInput.multipleEntityFC.value;\n        this.scheduleBreakupReportFG.get('reportConfig').get('entityID').patchValue(entityID);\n    }\n\n    patchSchedulerConfigInput() {\n        this.scheduleBreakupReportFG.get('schedulerConfig').patchValue(this.schedulerConfigInput.scheduleReportFG.value)\n    }\n\n    getValidFormData() {\n        this.patchSchedulerConfigInput();\n\n        let entityID = this.tscCommonService.removeSelectAllID(this.scheduleBreakupReportFG.get('reportConfig').get('entityID').value);\n        this.scheduleBreakupReportFG.get('reportConfig').get('entityID').patchValue(entityID);\n\n        let userID = this.tscCommonService.removeSelectAllID(this.scheduleBreakupReportFG.get('schedulerConfig').get('userID').value);\n        this.scheduleBreakupReportFG.get('schedulerConfig').get('userID').patchValue(userID);\n\n        let paramsArray = [\n            {\n                name: this.scheduleBreakupReportFG.get('reportConfig').get('paramMetric').value,\n                dsAgg: 'sum',\n                agg: 'sum'\n            }\n        ]\n\n        const reportConfigFG = this.scheduleBreakupReportFG.get('reportConfig').value;\n        const schedulerConfigFG = this.scheduleBreakupReportFG.get('schedulerConfig').value;\n        const { paramMetric, ...reportConfigWithoutParamMetric } = reportConfigFG;\n\n        this.modifiedFG = {\n            reportConfig: {\n                ...reportConfigWithoutParamMetric,\n                params: paramsArray\n            },\n            schedulerConfig: {\n                ...schedulerConfigFG\n            }\n        };\n    }\n\n    scheduleReportSubmit() {\n        this.patchSchedulerConfigInput();\n\n        if (this.schedulerConfigInput.scheduleReportFG.invalid) {\n            this.schedulerConfigInput.scheduleReportFG.markAllAsTouched();\n        }\n\n        if (this.scheduleBreakupReportFG.invalid) {\n            console.log('Invalid form:', this.scheduleBreakupReportFG.value);\n            this.toastrService.openToast(InvalidForm.INVALID_FORM_TITLE, InvalidForm.INVALID_FORM_MESSAGE, ToastrColor.ERROR);\n            return;\n        } else {\n            this.getValidFormData();\n\n            if (this.action == FormAction.CREATE) {\n                this.createScheduleReport();\n            } else if (this.action == FormAction.UPDATE) {\n                this.updateScheduleReport();\n            }\n        }\n    }\n\n    createScheduleReport() {\n        this.scheduleReportController.createScheduleReport(this.orgID, this.modifiedFG).subscribe((res: ResponseM) => {\n\n            this.router.navigate([`schedule-report/page`]);\n\n        }, error => {\n            console.log('error in createScheduleReport -', error);\n        });\n    }\n\n    async getScheduleReportByID(scheduleReportID) {\n        this.scheduleReportI = <ScheduleReportI>await this.scheduleReportService.getScheduleReportByID(this.orgID, scheduleReportID);\n\n        this.patchScheduleReport(this.scheduleReportI);\n    }\n\n    patchScheduleReport(scheduleReportI: ScheduleReportI) {\n        this.scheduleBreakupReportFG.patchValue({\n            reportConfig: scheduleReportI.reportConfig,\n            schedulerConfig: scheduleReportI.schedulerConfig\n        });\n\n        this.entityInput.multipleEntityFC.patchValue(scheduleReportI.reportConfig.entityID);\n        this.scheduleBreakupReportFG.get('reportConfig').get('paramMetric').patchValue(scheduleReportI.reportConfig.paramMetric[0]);\n        this.schedulerConfigInput.scheduleReportFG.patchValue(scheduleReportI.schedulerConfig);\n\n        this.initialObject = {\n            breakupReportConfig: this.scheduleBreakupReportFG.value,\n            schedulerConfig: this.schedulerConfigInput.scheduleReportFG.value\n        };\n\n        this.isValidUpdateForm();\n    }\n\n    isValidUpdateForm() {\n        this.schedulerConfigInput.scheduleReportFG.valueChanges.subscribe(() => {\n            this.checkEquality();\n        });\n\n        this.scheduleBreakupReportFG.valueChanges.subscribe(() => {\n            this.checkEquality();\n        });\n    }\n\n    checkEquality() {\n        const currentValues = {\n            breakupReportConfig: this.scheduleBreakupReportFG.value,\n            schedulerConfig: this.schedulerConfigInput.scheduleReportFG.value\n        };\n        this.isEqual = isEqual(this.initialObject, currentValues);\n    }\n\n    updateScheduleReport() {\n        this.scheduleReportController.updateScheduleReport(this.orgID, this.scheduleReportID, this.modifiedFG).subscribe((res: ResponseM) => {\n\n            this.tscCommonService.back();\n\n        }, error => {\n            console.log('error in updateScheduleReport -', error);\n        })\n    }\n\n    errorHandling = (formGroup: FormGroup, controlPath: string, error: string): boolean => {\n        return formGroup.get(controlPath).hasError(error);\n    }\n\n}\n","<div class=\"card main-card cardOverwrite h100\">\n    <div class=\"headerContainer\">\n        <div class=\"headerLeftContainer\">\n            <div class=\"pageTitle\">{{ pageTitle }}</div>\n            <div class=\"pageSubtitle\"></div>\n        </div>\n    </div>\n\n    <div class=\"card-body\">\n        <form [formGroup]=\"scheduleBreakupReportFG\" (ngSubmit)=\"scheduleReportSubmit()\">\n            <div class=\"row\">\n                <div class=\"col-sm-12\">\n                    <mat-card class=\"border cardOverwrite\">\n                        <div class=\"cardTitle\">\n                            Report configuration\n                        </div>\n                        <div class=\"row mt-2\">\n                            <div formGroupName=\"reportConfig\">\n                                <div formGroupName=\"sourceConsumer\">\n                                    <div class=\"col-sm-6\">\n                                        <div class=\"radioBtnField\">\n                                            <div class=\"radioBtnGroupLabel\"> You want to schedule {{ applicationKeyID == ApplicationKeyID.WATER_KEY_ID ?\n                                                'water' : 'energy'}} breakup report for? * </div>\n                                            <mat-radio-group formControlName=\"type\">\n                                                <div class=\"row my-1\">\n                                                    <div class=\"col-sm-6\">\n                                                        <mat-radio-button class=\"radioBtnLabel\" [value]=\"'SOURCE'\">\n                                                            Source\n                                                        </mat-radio-button>\n                                                    </div>\n                                                    <div class=\"col-sm-6\">\n                                                        <mat-radio-button class=\"radioBtnLabel\" [value]=\"'CONSUMER'\">\n                                                            Consumer\n                                                        </mat-radio-button>\n                                                    </div>\n                                                    <mat-error class=\"textMatError ms-1 mt-1\"\n                                                        *ngIf=\"errorHandling(scheduleBreakupReportFG, 'reportConfig.sourceConsumer.type', 'required')\">\n                                                        {{ FormErrorEnum.REQUIRED }}\n                                                    </mat-error>\n                                                </div>\n                                            </mat-radio-group>\n                                        </div>\n                                    </div>\n                                </div>\n                            </div>\n                        </div>\n\n                        <div class=\"row mt-3\">\n                            <div class=\"col-sm-3\">\n                                <lib-entity #entityInput [dropdownTypeInp]=\"DropdownTypeEnum.MULTIPLE_DROPDOWN\"\n                                    (emitFilter)=\"entityInpChange()\"></lib-entity>\n                            </div>\n                        \n                            <div class=\"col-sm-3\">\n                                <div formGroupName=\"reportConfig\">\n                                    <mat-form-field class=\"matFieldWidth100\" [appearance]=\"MaterialFormFieldAppearance.FORM_FIELD_APPEARANCE\">\n                                        <mat-label>Select consumption parameter</mat-label>\n                                        <mat-select formControlName=\"paramMetric\" required>\n                                            <ng-container\n                                                *ngIf=\"consumptionParamM && consumptionParamM.length > 0 && consumptionParamM[0]['id']; else noConsumptionParamM\">\n                                                <mat-option *ngFor=\"let param of consumptionParamM\" [value]=\"param.paramMetric\">\n                                                    {{ param.label }}\n                                                </mat-option>\n                                            </ng-container>\n\n                                            <ng-template #noConsumptionParamM>\n                                                <mat-option disabled>\n                                                    {{ COMMON_CONSTANT.NO_DATA_FOUND }}\n                                                </mat-option>\n                                            </ng-template>\n                                        </mat-select>\n                                        <mat-error *ngIf=\"errorHandling(scheduleBreakupReportFG, 'reportConfig.paramMetric', 'required')\">\n                                            {{ FormErrorEnum.REQUIRED }}\n                                        </mat-error>\n                                    </mat-form-field>\n                                </div>\n                            </div>\n                        </div>\n                    </mat-card>\n                </div>\n            </div>\n\n            <div class=\"row mt-3\">\n                <div class=\"col-sm-12\">\n                    <lib-configuration #schedulerConfigInput></lib-configuration>\n                </div>\n            </div>\n            \n            <button class=\"d-none\" type=\"submit\" #formSubmitBtn></button>\n\n            <div class=\"row mt-3\">\n                <div class=\"col-sm-12\">\n                    <div class=\"float-end\">\n                        <button class=\"btn btn-sm btn-secondary me-2\" type=\"button\" (click)=\"tscCommonService.back()\">\n                            {{ ButtonLabelEnum.CANCEL_BTN_LABEL }}\n                        </button>\n\n                        <button class=\"btn btn-sm btn-success\" [ngClass]=\"{\n                                            'btn-success' : action == FormAction.CREATE,\n                                            'btn-primary' : action == FormAction.UPDATE,\n                                            'disabled' : action == FormAction.UPDATE && isEqual\n                                        }\" type=\"submit\">{{ action ==\n                            FormAction.CREATE ? 'Schedule' :\n                            ButtonLabelEnum.UPDATE_BTN_LABEL }}\n                        </button>\n                    </div>\n                </div>\n            </div>\n        </form>\n    </div>\n</div>","import { NgModule } from '@angular/core';\nimport { RouterModule, Routes } from '@angular/router';\n\nimport { ScheduleReportBreakupComponent } from './breakup.component';\n\nconst routes: Routes = [\n    {\n        path: '',\n        component: ScheduleReportBreakupComponent\n    }\n];\n\n@NgModule({\n    imports: [RouterModule.forChild(routes)],\n    exports: [RouterModule]\n})\nexport class ScheduleReportBreakupRoutingModule { }\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\n\nimport {\n    FormsModule,\n    ReactiveFormsModule\n} from '@angular/forms';\n\nimport { MatCardModule } from '@angular/material/card';\nimport { MatFormFieldModule } from '@angular/material/form-field';\nimport { MatSelectModule } from '@angular/material/select';\nimport { MatRadioModule } from '@angular/material/radio';\n\nimport { EntityModule } from '../../dropdown/entity/entity.module';\n\nimport { ScheduleReportConfigurationModule } from '../_shared/configuration/configuration.module';\n\nimport { ScheduleReportBreakupRoutingModule } from './breakup-routing.module';\nimport { ScheduleReportBreakupComponent } from './breakup.component';\n\n\n@NgModule({\n    declarations: [\n        ScheduleReportBreakupComponent\n    ],\n    imports: [\n        CommonModule,\n        ScheduleReportBreakupRoutingModule,\n\n        EntityModule,\n        ScheduleReportConfigurationModule,\n\n        FormsModule,\n        ReactiveFormsModule,\n\n        MatCardModule,\n        MatFormFieldModule,\n        MatSelectModule,\n        MatRadioModule\n    ]\n})\nexport class ScheduleReportBreakupModule { }\n","import { Component, OnInit, ViewChild } from '@angular/core';\nimport { FormBuilder, FormGroup, Validators } from '@angular/forms';\nimport { ActivatedRoute, Router } from '@angular/router';\n\nimport { isEqual } from 'lodash';\n\nimport { ScheduleReportTypeEnum } from '../../../enum/schedule-report.enum';\n\nimport { ScheduleReport, ScheduleReportI } from '../../../model/schedule-report.model';\n\nimport { ScheduleReportController } from '../../../controller/schedule-report.controller';\n\nimport { ScheduleReportService } from '../../../service/schedule-report.service';\n\nimport { ScheduleReportConfigurationComponent } from '../_shared/configuration/configuration.component';\n\n// tsc-library\nimport { ResponseM, MaterialFormFieldAppearance, InvalidForm, ButtonLabelEnum, FormAction, FormErrorEnum, TSCCommonService, COMMON_CONSTANT, MATERIAL_CONSTANT, ButtonTooltipEnum } from '@library/tsc-common';\nimport { ToastrColor, ToastrService } from '@library/toastr-service';\nimport { StorageService } from '@library/storage-service';\n// /tsc-library/\n\n@Component({\n    selector: 'lib-cgwa',\n    templateUrl: './cgwa.component.html',\n    styles: [\n    ]\n})\nexport class ScheduleReportCgwaComponent implements OnInit {\n\n    COMMON_CONSTANT = COMMON_CONSTANT;\n    MATERIAL_CONSTANT = MATERIAL_CONSTANT;\n\n    FormAction = FormAction;\n    FormErrorEnum = FormErrorEnum;\n    ButtonLabelEnum = ButtonLabelEnum;\n    ButtonTooltipEnum = ButtonTooltipEnum;\n    MaterialFormFieldAppearance = MaterialFormFieldAppearance;\n\n    orgID: any;\n\n    scheduleCgwaReportFG: FormGroup;\n    modifiedFG: any;\n    scheduleReportID: any;\n\n    action: string;\n    pageTitle: string;\n    isEqual: boolean = true;\n    initialObject: any;\n\n    scheduleReportI = new ScheduleReport();\n\n    @ViewChild('schedulerConfigInput') schedulerConfigInput: ScheduleReportConfigurationComponent;\n\n    constructor(\n        private activatedRoute: ActivatedRoute,\n        private router: Router,\n        private formBuilder: FormBuilder,\n        private scheduleReportController: ScheduleReportController,\n        private scheduleReportService: ScheduleReportService,\n\n        // tsc-library\n        private storageService: StorageService,\n        public tscCommonService: TSCCommonService,\n        private toastrService: ToastrService,\n        // /tsc-library/\n    ) { }\n\n    ngOnInit(): void {\n        this.orgID = this.storageService.getStorage('currentOrgID');\n\n        this.scheduleCgwaReportFGInit();\n\n        this.activatedRoute.data.subscribe(data => {\n            this.action = data.action;\n            this.setPageTitle();\n        });\n\n        this.activatedRoute.params.subscribe(params => {\n            if (this.action == FormAction.UPDATE) {\n                this.scheduleReportID = params.scheduleReportID;\n                this.getScheduleReportByID(this.scheduleReportID);\n            }\n        });\n\n    }\n\n    setPageTitle() {\n        if (this.action == FormAction.CREATE) {\n            this.pageTitle = `Schedule CGWA Report`;\n        } else if (this.action == FormAction.UPDATE) {\n            this.pageTitle = `Update Scheduled CGWA Report`;\n        }\n    }\n\n    scheduleCgwaReportFGInit() {\n        this.scheduleCgwaReportFG = this.formBuilder.group({\n            reportConfig: this.formBuilder.group({\n                reportType: [ScheduleReportTypeEnum.CGWA_REPORT, Validators.required],\n                deviceID: [[]],\n                entityType: [],\n                entityID: [[]],\n                sourceConsumer: this.formBuilder.group({\n                    type: ['SOURCE', Validators.required],\n                    keyID: ['BOREWELL', Validators.required]\n                }),\n                paramMetric: ['gwFlowTotalizer', Validators.required],\n            }),\n            schedulerConfig: this.formBuilder.group({\n                name: [, Validators.required],\n                dataInterval: [, Validators.required],\n                frequency: [, Validators.required],\n                userChoice: [, Validators.required],\n                userID: [[], Validators.required],\n                otherUserEmail: [[]],\n                status: [, Validators.required],\n                reportFormat: [, Validators.required],\n            })\n        });\n    }\n\n    patchSchedulerConfigInput() {\n        this.scheduleCgwaReportFG.get('schedulerConfig').patchValue(this.schedulerConfigInput.scheduleReportFG.value)\n    }\n\n    getValidFormData() {\n        this.patchSchedulerConfigInput();\n\n        let userID = this.tscCommonService.removeSelectAllID(this.scheduleCgwaReportFG.get('schedulerConfig').get('userID').value);\n        this.scheduleCgwaReportFG.get('schedulerConfig').get('userID').patchValue(userID);\n\n        let paramsArray = [\n            {\n                name: this.scheduleCgwaReportFG.get('reportConfig').get('paramMetric').value,\n                dsAgg: 'sum',\n                agg: 'sum'\n            }\n        ]\n\n        const reportConfigFG = this.scheduleCgwaReportFG.get('reportConfig').value;\n        const schedulerConfigFG = this.scheduleCgwaReportFG.get('schedulerConfig').value;\n        const { paramMetric, ...reportConfigWithoutParamMetric } = reportConfigFG;\n\n        this.modifiedFG = {\n            reportConfig: {\n                ...reportConfigWithoutParamMetric,\n                params: paramsArray\n            },\n            schedulerConfig: {\n                ...schedulerConfigFG\n            }\n        };\n    }\n\n    scheduleReportSubmit() {\n        this.patchSchedulerConfigInput();\n\n        if (this.schedulerConfigInput.scheduleReportFG.invalid) {\n            this.schedulerConfigInput.scheduleReportFG.markAllAsTouched();\n        }\n\n        if (this.scheduleCgwaReportFG.invalid) {\n            console.log('Invalid form:', this.scheduleCgwaReportFG.value);\n            this.toastrService.openToast(InvalidForm.INVALID_FORM_TITLE, InvalidForm.INVALID_FORM_MESSAGE, ToastrColor.ERROR);\n            return;\n        } else {\n            this.getValidFormData();\n\n            if (this.action == FormAction.CREATE) {\n                this.createScheduleReport();\n            } else if (this.action == FormAction.UPDATE) {\n                this.updateScheduleReport();\n            }\n        }\n    }\n\n    createScheduleReport() {\n        this.scheduleReportController.createScheduleReport(this.orgID, this.modifiedFG).subscribe((res: ResponseM) => {\n\n            this.router.navigate([`schedule-report/page`]);\n\n        }, error => {\n            console.log('error in createScheduleReport -', error);\n        });\n    }\n\n    async getScheduleReportByID(scheduleReportID) {\n        this.scheduleReportI = <ScheduleReportI>await this.scheduleReportService.getScheduleReportByID(this.orgID, scheduleReportID);\n\n        this.patchScheduleReport(this.scheduleReportI);\n    }\n\n    patchScheduleReport(scheduleReportI: ScheduleReportI) {\n        this.scheduleCgwaReportFG.patchValue({\n            reportConfig: scheduleReportI.reportConfig,\n            schedulerConfig: scheduleReportI.schedulerConfig\n        });\n\n        this.schedulerConfigInput.scheduleReportFG.patchValue(scheduleReportI.schedulerConfig);\n\n        this.initialObject = {\n            cgwaReportConfig: this.scheduleCgwaReportFG.value,\n            schedulerConfig: this.schedulerConfigInput.scheduleReportFG.value\n        };\n\n        this.isValidUpdateForm();\n    }\n\n    isValidUpdateForm() {\n        this.schedulerConfigInput.scheduleReportFG.valueChanges.subscribe(() => {\n            this.checkEquality();\n        });\n\n        this.scheduleCgwaReportFG.valueChanges.subscribe(() => {\n            this.checkEquality();\n        });\n    }\n\n    checkEquality() {\n        const currentValues = {\n            cgwaReportConfig: this.scheduleCgwaReportFG.value,\n            schedulerConfig: this.schedulerConfigInput.scheduleReportFG.value\n        };\n        this.isEqual = isEqual(this.initialObject, currentValues);\n    }\n\n    updateScheduleReport() {\n        this.scheduleReportController.updateScheduleReport(this.orgID, this.scheduleReportID, this.modifiedFG).subscribe((res: ResponseM) => {\n\n            this.tscCommonService.back();\n\n        }, error => {\n            console.log('error in updateScheduleReport -', error);\n        })\n    }\n\n    errorHandling = (formGroup: FormGroup, controlPath: string, error: string): boolean => {\n        return formGroup.get(controlPath).hasError(error);\n    }\n\n}\n","<div class=\"card main-card cardOverwrite h100\">\n    <div class=\"headerContainer\">\n        <div class=\"headerLeftContainer\">\n            <div class=\"pageTitle\">{{ pageTitle }}</div>\n            <div class=\"pageSubtitle\"></div>\n        </div>\n    </div>\n\n    <div class=\"card-body\">\n        <form [formGroup]=\"scheduleCgwaReportFG\" (ngSubmit)=\"scheduleReportSubmit()\">\n            <div class=\"row\">\n                <div class=\"col-sm-12\">\n                    <mat-card class=\"border cardOverwrite\">\n                        <div class=\"cardTitle\">\n                            Report configuration\n                        </div>\n\n                        <div class=\"row mt-2\">\n                            <div class=\"col-sm-6\">\n                                <div class=\"row\">\n                                    <div class=\"col-sm-4\">\n                                        Source type\n                                    </div>\n                                    <div class=\"col-sm-6 fw-bold\">\n                                        Borewell\n                                    </div>\n                                </div>\n                            </div>\n                        </div>\n\n                        <div class=\"row mt-2\">\n                            <div class=\"col-sm-6\">\n                                <div class=\"row\">\n                                    <div class=\"col-sm-4\">\n                                        Consumption parameter\n                                    </div>\n                                    <div class=\"col-sm-6 fw-bold\">\n                                        Water consumption\n                                    </div>\n                                </div>\n                            </div>\n                        </div>\n                    </mat-card>\n                </div>\n            </div>\n\n            <div class=\"row mt-3\">\n                <div class=\"col-sm-12\">\n                    <lib-configuration #schedulerConfigInput></lib-configuration>\n                </div>\n            </div>\n\n            <button class=\"d-none\" type=\"submit\" #formSubmitBtn></button>\n\n            <div class=\"row mt-3\">\n                <div class=\"col-sm-12\">\n                    <div class=\"float-end\">\n                        <button class=\"btn btn-sm btn-secondary me-2\" type=\"button\" (click)=\"tscCommonService.back()\">\n                            {{ ButtonLabelEnum.CANCEL_BTN_LABEL }}\n                        </button>\n\n                        <button class=\"btn btn-sm btn-success\" [ngClass]=\"{\n                                            'btn-success' : action == FormAction.CREATE,\n                                            'btn-primary' : action == FormAction.UPDATE,\n                                            'disabled' : action == FormAction.UPDATE && isEqual\n                                        }\" type=\"submit\">{{ action ==\n                            FormAction.CREATE ? 'Schedule' :\n                            ButtonLabelEnum.UPDATE_BTN_LABEL }}\n                        </button>\n                    </div>\n                </div>\n            </div>\n        </form>\n    </div>\n</div>","import { NgModule } from '@angular/core';\nimport { RouterModule, Routes } from '@angular/router';\n\nimport { ScheduleReportCgwaComponent } from './cgwa.component';\n\nconst routes: Routes = [\n    {\n        path: '',\n        component: ScheduleReportCgwaComponent\n    }\n];\n\n@NgModule({\n    imports: [RouterModule.forChild(routes)],\n    exports: [RouterModule]\n})\nexport class ScheduleReportCgwaRoutingModule { }\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\n\nimport {\n    FormsModule,\n    ReactiveFormsModule\n} from '@angular/forms';\n\nimport { MatCardModule } from '@angular/material/card';\nimport { MatFormFieldModule } from '@angular/material/form-field';\nimport { MatSelectModule } from '@angular/material/select';\n\nimport { ScheduleReportConfigurationModule } from '../_shared/configuration/configuration.module';\n\nimport { ScheduleReportCgwaRoutingModule } from './cgwa-routing.module';\nimport { ScheduleReportCgwaComponent } from './cgwa.component';\n\n\n@NgModule({\n    declarations: [\n        ScheduleReportCgwaComponent\n    ],\n    imports: [\n        CommonModule,\n        ScheduleReportCgwaRoutingModule,\n\n        ScheduleReportConfigurationModule,\n\n        FormsModule,\n        ReactiveFormsModule,\n\n        MatCardModule,\n        MatFormFieldModule,\n        MatSelectModule\n    ]\n})\nexport class ScheduleReportCgwaModule { }\n","import { Component, OnInit, ViewChild } from '@angular/core';\nimport { FormBuilder, FormGroup, Validators } from '@angular/forms';\nimport { ActivatedRoute, Router } from '@angular/router';\n\nimport { isEqual } from 'lodash';\n\nimport { ScheduleReportTypeEnum } from '../../../enum/schedule-report.enum';\n\nimport { ConsumptionParameterM } from '../../../model/parameter.model';\nimport { ScheduleReport, ScheduleReportI } from '../../../model/schedule-report.model';\n\nimport { ScheduleReportController } from '../../../controller/schedule-report.controller';\n\nimport { SourceService } from '../../../service/source.service';\nimport { ParameterService } from '../../../service/parameter.service';\nimport { ScheduleReportService } from '../../../service/schedule-report.service';\n\nimport { ScheduleReportConfigurationComponent } from '../_shared/configuration/configuration.component';\n\n// tsc-library\nimport { ResponseM, MaterialFormFieldAppearance, InvalidForm, ButtonLabelEnum, FormAction, FormErrorEnum, TSCCommonService, COMMON_CONSTANT, MATERIAL_CONSTANT, ButtonTooltipEnum, Static, StaticI } from '@library/tsc-common';\nimport { ToastrColor, ToastrService } from '@library/toastr-service';\nimport { StorageService } from '@library/storage-service';\nimport { ApplicationKeyID } from '@library/application-service';\n// /tsc-library/\n\n@Component({\n    selector: 'lib-consumption',\n    templateUrl: './consumption.component.html',\n    styles: [\n    ]\n})\nexport class ScheduleReportConsumptionComponent implements OnInit {\n\n    COMMON_CONSTANT = COMMON_CONSTANT;\n    MATERIAL_CONSTANT = MATERIAL_CONSTANT;\n\n    FormAction = FormAction;\n    FormErrorEnum = FormErrorEnum;\n    ButtonLabelEnum = ButtonLabelEnum;\n    ButtonTooltipEnum = ButtonTooltipEnum;\n    MaterialFormFieldAppearance = MaterialFormFieldAppearance;\n    ApplicationKeyID = ApplicationKeyID;\n\n    orgID: any;\n    applicationKeyID: any;\n    consumptionParamM: any;\n    sourceConsumerType = [new Static()];\n\n    scheduleConsumptionReportFG: FormGroup;\n    modifiedFG: any;\n    scheduleReportID: any;\n\n    action: string;\n    pageTitle: string;\n    isEqual: boolean = true;\n    initialObject: any;\n\n    scheduleReportI = new ScheduleReport();\n\n    @ViewChild('schedulerConfigInput') schedulerConfigInput: ScheduleReportConfigurationComponent;\n\n    constructor(\n        private activatedRoute: ActivatedRoute,\n        private router: Router,\n        private formBuilder: FormBuilder,\n        private scheduleReportController: ScheduleReportController,\n        private sourceService: SourceService,\n        private parameterService: ParameterService,\n        private scheduleReportService: ScheduleReportService,\n\n        // tsc-library\n        private storageService: StorageService,\n        public tscCommonService: TSCCommonService,\n        private toastrService: ToastrService,\n        // /tsc-library/\n    ) { }\n\n    ngOnInit(): void {\n        this.orgID = this.storageService.getStorage('currentOrgID');\n        this.applicationKeyID = this.storageService.getStorage('applicationKeyID');\n\n        this.scheduleConsumptionReportFGInit();\n        this.getConsumptionParameter();\n\n        this.activatedRoute.data.subscribe(data => {\n            this.action = data.action;\n            this.setPageTitle();\n        });\n\n        this.activatedRoute.params.subscribe(params => {\n            if (this.action == FormAction.UPDATE) {\n                this.scheduleReportID = params.scheduleReportID;\n                this.getScheduleReportByID(this.scheduleReportID);\n            }\n        });\n\n        if (this.scheduleConsumptionReportFG.get('reportConfig').get('sourceConsumer.type').value == 'SOURCE') {\n            this.getSourceConsumerType('source');\n        } else {\n            this.getSourceConsumerType('load');\n        }\n    }\n\n    setPageTitle() {\n        const applicationName = this.applicationKeyID == ApplicationKeyID.WATER_KEY_ID ? 'Water' : 'Energy';\n\n        if (this.action == FormAction.CREATE) {\n            this.pageTitle = `Schedule ${applicationName} Consumption Report`;\n        } else if (this.action == FormAction.UPDATE) {\n            this.pageTitle = `Update Scheduled ${applicationName} Consumption Report`;\n        }\n    }\n\n    scheduleConsumptionReportFGInit() {\n        this.scheduleConsumptionReportFG = this.formBuilder.group({\n            reportConfig: this.formBuilder.group({\n                reportType: [ScheduleReportTypeEnum.CONSUMPTION_REPORT, Validators.required],\n                deviceID: [[]],\n                entityType: [],\n                entityID: [[]],\n                sourceConsumer: this.formBuilder.group({\n                    type: ['SOURCE', Validators.required],\n                    keyID: [, Validators.required]\n                }),\n                paramMetric: [, Validators.required],\n            }),\n            schedulerConfig: this.formBuilder.group({\n                name: [, Validators.required],\n                dataInterval: [, Validators.required],\n                frequency: [, Validators.required],\n                userChoice: [, Validators.required],\n                userID: [[], Validators.required],\n                otherUserEmail: [[]],\n                status: [, Validators.required],\n                reportFormat: [, Validators.required],\n            })\n        });\n\n        this.scheduleConsumptionReportFG.get('reportConfig').get('sourceConsumer.type').valueChanges.subscribe((value) => {\n            if (value == 'SOURCE') {\n                this.getSourceConsumerType('source');\n            } else if (value == 'CONSUMER') {\n                this.getSourceConsumerType('load');\n            }\n        });\n    }\n\n    async getSourceConsumerType(sourceConsumerType) {\n        const requestData = {\n            type: sourceConsumerType\n        };\n\n        this.sourceConsumerType = <StaticI[]>await this.sourceService.getSourceConsumerType(this.orgID, requestData);\n    }\n\n    async getConsumptionParameter() {\n        const consumptionParamM = <ConsumptionParameterM>await this.parameterService.getConsumptionParameter(this.orgID);\n\n        this.consumptionParamM = consumptionParamM.consumptionParameter;\n    }\n\n    patchSchedulerConfigInput() {\n        this.scheduleConsumptionReportFG.get('schedulerConfig').patchValue(this.schedulerConfigInput.scheduleReportFG.value)\n    }\n\n    getValidFormData() {\n        this.patchSchedulerConfigInput();\n\n        let userID = this.tscCommonService.removeSelectAllID(this.scheduleConsumptionReportFG.get('schedulerConfig').get('userID').value);\n        this.scheduleConsumptionReportFG.get('schedulerConfig').get('userID').patchValue(userID);\n\n        let paramsArray = [\n            {\n                name: this.scheduleConsumptionReportFG.get('reportConfig').get('paramMetric').value,\n                dsAgg: 'sum',\n                agg: 'sum'\n            }\n        ]\n\n        const reportConfigFG = this.scheduleConsumptionReportFG.get('reportConfig').value;\n        const schedulerConfigFG = this.scheduleConsumptionReportFG.get('schedulerConfig').value;\n        const { paramMetric, ...reportConfigWithoutParamMetric } = reportConfigFG;\n\n        this.modifiedFG = {\n            reportConfig: {\n                ...reportConfigWithoutParamMetric,\n                params: paramsArray\n            },\n            schedulerConfig: {\n                ...schedulerConfigFG\n            }\n        };\n    }\n\n    scheduleReportSubmit() {\n        this.patchSchedulerConfigInput();\n\n        if (this.schedulerConfigInput.scheduleReportFG.invalid) {\n            this.schedulerConfigInput.scheduleReportFG.markAllAsTouched();\n        }\n\n        if (this.scheduleConsumptionReportFG.invalid) {\n            console.log('Invalid form:', this.scheduleConsumptionReportFG.value);\n            this.toastrService.openToast(InvalidForm.INVALID_FORM_TITLE, InvalidForm.INVALID_FORM_MESSAGE, ToastrColor.ERROR);\n            return;\n        } else {\n            this.getValidFormData();\n\n            if (this.action == FormAction.CREATE) {\n                this.createScheduleReport();\n            } else if (this.action == FormAction.UPDATE) {\n                this.updateScheduleReport();\n            }\n        }\n    }\n\n    createScheduleReport() {\n        this.scheduleReportController.createScheduleReport(this.orgID, this.modifiedFG).subscribe((res: ResponseM) => {\n\n            this.router.navigate([`schedule-report/page`]);\n\n        }, error => {\n            console.log('error in createScheduleReport -', error);\n        });\n    }\n\n    async getScheduleReportByID(scheduleReportID) {\n        this.scheduleReportI = <ScheduleReportI>await this.scheduleReportService.getScheduleReportByID(this.orgID, scheduleReportID);\n\n        this.patchScheduleReport(this.scheduleReportI);\n    }\n\n    patchScheduleReport(scheduleReportI: ScheduleReportI) {\n\n        this.scheduleConsumptionReportFG.patchValue({\n            reportConfig: scheduleReportI.reportConfig,\n            schedulerConfig: scheduleReportI.schedulerConfig\n        });\n\n        this.scheduleConsumptionReportFG.get('reportConfig').get('paramMetric').patchValue(scheduleReportI.reportConfig.paramMetric[0]);\n        this.schedulerConfigInput.scheduleReportFG.patchValue(scheduleReportI.schedulerConfig);\n\n        this.initialObject = {\n            consumptionReportConfig: this.scheduleConsumptionReportFG.value,\n            schedulerConfig: this.schedulerConfigInput.scheduleReportFG.value\n        };\n\n        this.isValidUpdateForm();\n    }\n\n    isValidUpdateForm() {\n        this.schedulerConfigInput.scheduleReportFG.valueChanges.subscribe(() => {\n            this.checkEquality();\n        });\n\n        this.scheduleConsumptionReportFG.valueChanges.subscribe(() => {\n            this.checkEquality();\n        });\n    }\n\n    checkEquality() {\n        const currentValues = {\n            consumptionReportConfig: this.scheduleConsumptionReportFG.value,\n            schedulerConfig: this.schedulerConfigInput.scheduleReportFG.value\n        };\n        this.isEqual = isEqual(this.initialObject, currentValues);\n    }\n\n    updateScheduleReport() {\n        this.scheduleReportController.updateScheduleReport(this.orgID, this.scheduleReportID, this.modifiedFG).subscribe((res: ResponseM) => {\n\n            this.tscCommonService.back();\n\n        }, error => {\n            console.log('error in updateScheduleReport -', error);\n        })\n    }\n\n    errorHandling = (formGroup: FormGroup, controlPath: string, error: string): boolean => {\n        return formGroup.get(controlPath).hasError(error);\n    }\n\n}\n","<div class=\"card main-card cardOverwrite h100\">\n    <div class=\"headerContainer\">\n        <div class=\"headerLeftContainer\">\n            <div class=\"pageTitle\">{{ pageTitle }}</div>\n            <div class=\"pageSubtitle\"></div>\n        </div>\n    </div>\n\n    <div class=\"card-body\">\n        <form [formGroup]=\"scheduleConsumptionReportFG\" (ngSubmit)=\"scheduleReportSubmit()\">\n            <div class=\"row\">\n                <div class=\"col-sm-12\">\n                    <mat-card class=\"border cardOverwrite\">\n                        <div class=\"cardTitle\">\n                            Report configuration\n                        </div>\n                        <div class=\"row mt-2\">\n                            <div formGroupName=\"reportConfig\">\n                                <div formGroupName=\"sourceConsumer\">\n                                    <div class=\"col-sm-6\">\n                                        <div class=\"radioBtnField\">\n                                            <div class=\"radioBtnGroupLabel\"> You want to schedule {{ applicationKeyID == ApplicationKeyID.WATER_KEY_ID ?\n                                                'water' : 'energy'}} consumption report for? * </div>\n                                            <mat-radio-group formControlName=\"type\">\n                                                <div class=\"row my-1\">\n                                                    <div class=\"col-sm-6\">\n                                                        <mat-radio-button class=\"radioBtnLabel\" [value]=\"'SOURCE'\">\n                                                            Source\n                                                        </mat-radio-button>\n                                                    </div>\n                                                    <div class=\"col-sm-6\">\n                                                        <mat-radio-button class=\"radioBtnLabel\" [value]=\"'CONSUMER'\">\n                                                            Consumer\n                                                        </mat-radio-button>\n                                                    </div>\n                                                    <mat-error class=\"textMatError ms-1 mt-1\"\n                                                        *ngIf=\"errorHandling(scheduleConsumptionReportFG, 'reportConfig.sourceConsumer.type', 'required')\">\n                                                        {{ FormErrorEnum.REQUIRED }}\n                                                    </mat-error>\n                                                </div>\n                                            </mat-radio-group>\n                                        </div>\n                                    </div>\n                                </div>\n                            </div>\n                        </div>\n\n                        <div class=\"row mt-3\">\n                            <div class=\"col-sm-3\">\n                                <div formGroupName=\"reportConfig\">\n                                    <div formGroupName=\"sourceConsumer\">\n                                        <mat-form-field class=\"matFieldWidth100\" [appearance]=\"MaterialFormFieldAppearance.FORM_FIELD_APPEARANCE\">\n                                            <mat-label> Select {{\n                                                scheduleConsumptionReportFG.get('reportConfig').get('sourceConsumer.type').value\n                                                == 'SOURCE' ? 'source' :\n                                                'consumer' }} type</mat-label>\n\n                                            <mat-select formControlName=\"keyID\" required>\n                                                <ng-container\n                                                    *ngIf=\"sourceConsumerType && sourceConsumerType.length > 0 && sourceConsumerType[0]['id']; else noSourceConsumerType\">\n                                                    <mat-option *ngFor=\"let type of sourceConsumerType\" [value]=\"type.keyID\">\n                                                        {{ type.name }}\n                                                    </mat-option>\n                                                </ng-container>\n\n                                                <ng-template #noSourceConsumerType>\n                                                    <mat-option disabled>\n                                                        {{ COMMON_CONSTANT.NO_DATA_FOUND }}\n                                                    </mat-option>\n                                                </ng-template>\n                                            </mat-select>\n\n                                            <mat-error\n                                                *ngIf=\"errorHandling(scheduleConsumptionReportFG, 'reportConfig.sourceConsumer.keyID', 'required')\">\n                                                {{ FormErrorEnum.REQUIRED }}\n                                            </mat-error>\n                                        </mat-form-field>\n                                    </div>\n                                </div>\n                            </div>\n\n                            <div class=\"col-sm-3\">\n                                <div formGroupName=\"reportConfig\">\n                                    <mat-form-field class=\"matFieldWidth100\"\n                                        [appearance]=\"MaterialFormFieldAppearance.FORM_FIELD_APPEARANCE\">\n                                        <mat-label>Select consumption parameter</mat-label>\n                                        <mat-select formControlName=\"paramMetric\" required>\n                                            <ng-container\n                                                *ngIf=\"consumptionParamM && consumptionParamM.length > 0 && consumptionParamM[0]['id']; else noConsumptionParamM\">\n                                                <mat-option *ngFor=\"let param of consumptionParamM\"\n                                                    [value]=\"param.paramMetric\">\n                                                    {{ param.label }}\n                                                </mat-option>\n                                            </ng-container>\n\n                                            <ng-template #noConsumptionParamM>\n                                                <mat-option disabled>\n                                                    {{ COMMON_CONSTANT.NO_DATA_FOUND }}\n                                                </mat-option>\n                                            </ng-template>\n                                        </mat-select>\n                                        <mat-error\n                                            *ngIf=\"errorHandling(scheduleConsumptionReportFG, 'reportConfig.paramMetric', 'required')\">\n                                            {{ FormErrorEnum.REQUIRED }}\n                                        </mat-error>\n                                    </mat-form-field>\n                                </div>\n                            </div>\n                        </div>\n                    </mat-card>\n                </div>\n            </div>\n\n            <div class=\"row mt-3\">\n                <div class=\"col-sm-12\">\n                    <lib-configuration #schedulerConfigInput></lib-configuration>\n                </div>\n            </div>\n\n            <button class=\"d-none\" type=\"submit\" #formSubmitBtn></button>\n\n            <div class=\"row mt-3\">\n                <div class=\"col-sm-12\">\n                    <div class=\"float-end\">\n                        <button class=\"btn btn-sm btn-secondary me-2\" type=\"button\" (click)=\"tscCommonService.back()\">\n                            {{ ButtonLabelEnum.CANCEL_BTN_LABEL }}\n                        </button>\n\n                        <button class=\"btn btn-sm btn-success\" [ngClass]=\"{\n                                            'btn-success' : action == FormAction.CREATE,\n                                            'btn-primary' : action == FormAction.UPDATE,\n                                            'disabled' : action == FormAction.UPDATE && isEqual\n                                        }\" type=\"submit\">{{ action ==\n                            FormAction.CREATE ? 'Schedule' :\n                            ButtonLabelEnum.UPDATE_BTN_LABEL }}\n                        </button>\n                    </div>\n                </div>\n            </div>\n        </form>\n    </div>\n</div>","import { NgModule } from '@angular/core';\nimport { RouterModule, Routes } from '@angular/router';\n\nimport { ScheduleReportConsumptionComponent } from './consumption.component';\n\nconst routes: Routes = [\n    {\n        path: '',\n        component: ScheduleReportConsumptionComponent\n    }\n];\n\n@NgModule({\n    imports: [RouterModule.forChild(routes)],\n    exports: [RouterModule]\n})\nexport class ScheduleReportConsumptionRoutingModule { }\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\n\nimport {\n    FormsModule,\n    ReactiveFormsModule\n} from '@angular/forms';\n\nimport { MatCardModule } from '@angular/material/card';\nimport { MatFormFieldModule } from '@angular/material/form-field';\nimport { MatSelectModule } from '@angular/material/select';\nimport { MatRadioModule } from '@angular/material/radio';\n\nimport { ScheduleReportConfigurationModule } from '../_shared/configuration/configuration.module';\n\nimport { ScheduleReportConsumptionRoutingModule } from './consumption-routing.module';\nimport { ScheduleReportConsumptionComponent } from './consumption.component';\n\n\n@NgModule({\n    declarations: [\n        ScheduleReportConsumptionComponent\n    ],\n    imports: [\n        CommonModule,\n        ScheduleReportConsumptionRoutingModule,\n\n        ScheduleReportConfigurationModule,\n\n        FormsModule,\n        ReactiveFormsModule,\n\n        MatCardModule,\n        MatFormFieldModule,\n        MatSelectModule,\n        MatRadioModule\n    ]\n})\nexport class ScheduleReportConsumptionModule { }\n","import { Component, OnInit, ViewChild } from '@angular/core';\nimport { FormBuilder, FormGroup, Validators } from '@angular/forms';\nimport { ActivatedRoute, Router } from '@angular/router';\n\nimport { isEqual } from 'lodash';\n\nimport { ScheduleReportTypeEnum } from '../../../enum/schedule-report.enum';\n\nimport { ConsumptionParameterM } from '../../../model/parameter.model';\nimport { ScheduleReport, ScheduleReportI } from '../../../model/schedule-report.model';\n\nimport { ScheduleReportController } from '../../../controller/schedule-report.controller';\n\nimport { ParameterService } from '../../../service/parameter.service';\nimport { ScheduleReportService } from '../../../service/schedule-report.service';\n\nimport { ScheduleReportConfigurationComponent } from '../_shared/configuration/configuration.component';\n\n// tsc-library\nimport { ResponseM, MaterialFormFieldAppearance, InvalidForm, ButtonLabelEnum, FormAction, FormErrorEnum, TSCCommonService, COMMON_CONSTANT, MATERIAL_CONSTANT, ButtonTooltipEnum } from '@library/tsc-common';\nimport { ToastrColor, ToastrService } from '@library/toastr-service';\nimport { StorageService } from '@library/storage-service';\nimport { ApplicationKeyID } from '@library/application-service';\n// /tsc-library/\n\n@Component({\n    selector: 'lib-sourcing',\n    templateUrl: './sourcing.component.html',\n    styles: [\n    ]\n})\nexport class ScheduleReportSourcingComponent implements OnInit {\n\n    COMMON_CONSTANT = COMMON_CONSTANT;\n    MATERIAL_CONSTANT = MATERIAL_CONSTANT;\n\n    FormAction = FormAction;\n    FormErrorEnum = FormErrorEnum;\n    ButtonLabelEnum = ButtonLabelEnum;\n    ButtonTooltipEnum = ButtonTooltipEnum;\n    MaterialFormFieldAppearance = MaterialFormFieldAppearance;\n\n    orgID: any;\n    applicationKeyID: any;\n    consumptionParamM: any;\n\n    scheduleSourcingReportFG: FormGroup;\n    modifiedFG: any;\n    scheduleReportID: any;\n\n    allParameterID: any[] = [];\n    totalParameterCount: number = 0;\n\n    action: string;\n    pageTitle: string;\n    isEqual: boolean = true;\n    initialObject: any;\n\n    scheduleReportI = new ScheduleReport();\n\n    @ViewChild('schedulerConfigInput') schedulerConfigInput: ScheduleReportConfigurationComponent;\n\n    constructor(\n        private activatedRoute: ActivatedRoute,\n        private router: Router,\n        private formBuilder: FormBuilder,\n        private scheduleReportController: ScheduleReportController,\n        private parameterService: ParameterService,\n        private scheduleReportService: ScheduleReportService,\n\n        // tsc-library\n        private storageService: StorageService,\n        public tscCommonService: TSCCommonService,\n        private toastrService: ToastrService,\n        // /tsc-library/\n    ) { }\n\n    ngOnInit(): void {\n        this.orgID = this.storageService.getStorage('currentOrgID');\n        this.applicationKeyID = this.storageService.getStorage('applicationKeyID');\n\n        this.scheduleSourcingReportFGInit();\n        this.getConsumptionParameter();\n\n        this.activatedRoute.data.subscribe(data => {\n            this.action = data.action;\n            this.setPageTitle();\n        });\n\n        this.activatedRoute.params.subscribe(params => {\n            if (this.action == FormAction.UPDATE) {\n                this.scheduleReportID = params.scheduleReportID;\n\n                this.getScheduleReportByID(this.scheduleReportID);\n            }\n        });\n    }\n\n    setPageTitle() {\n        const applicationName = this.applicationKeyID == ApplicationKeyID.WATER_KEY_ID ? 'Water' : 'Energy';\n\n        if (this.action == FormAction.CREATE) {\n            this.pageTitle = `Schedule ${applicationName} Sourcing Report`;\n        } else if (this.action == FormAction.UPDATE) {\n            this.pageTitle = `Update Scheduled ${applicationName} Sourcing  Report`;\n        }\n    }\n\n    scheduleSourcingReportFGInit() {\n        this.scheduleSourcingReportFG = this.formBuilder.group({\n            reportConfig: this.formBuilder.group({\n                reportType: [ScheduleReportTypeEnum.SOURCING_REPORT, Validators.required],\n                deviceID: [[]],\n                entityType: [],\n                entityID: [[]],\n                sourceConsumer: this.formBuilder.group({\n                    type: ['SOURCE'],\n                    keyID: []\n                }),\n                paramMetric: [[], Validators.required],\n            }),\n            schedulerConfig: this.formBuilder.group({\n                name: [, Validators.required],\n                dataInterval: [, Validators.required],\n                frequency: [, Validators.required],\n                userChoice: [, Validators.required],\n                userID: [[], Validators.required],\n                otherUserEmail: [[]],\n                status: [, Validators.required],\n                reportFormat: [, Validators.required],\n            })\n        });\n    }\n\n    async getConsumptionParameter() {\n        const consumptionParamM = <ConsumptionParameterM>await this.parameterService.getConsumptionParameter(this.orgID);\n        this.consumptionParamM = consumptionParamM.consumptionParameter;\n\n        this.totalParameterCount = this.consumptionParamM.length;\n        this.consumptionParamM.forEach(parameter => this.allParameterID.push(parameter['paramMetric']));\n    }\n\n    selectAllParameters() {\n        if (!this.scheduleSourcingReportFG.get('reportConfig').get('paramMetric').value.includes(-1)) {\n            this.scheduleSourcingReportFG.get('reportConfig').get('paramMetric').reset([]);\n            return;\n        }\n        this.scheduleSourcingReportFG.get('reportConfig').get('paramMetric').setValue([-1, ...this.allParameterID]);\n    }\n\n    selectedParameters() {\n        const selected = this.scheduleSourcingReportFG.get('reportConfig').get('paramMetric').value;\n\n        if (selected.includes(-1)) {\n            selected.shift();\n            this.scheduleSourcingReportFG.get('reportConfig').get('paramMetric').patchValue(selected);\n        } else if (this.scheduleSourcingReportFG.get('reportConfig').get('paramMetric').value.length == this.totalParameterCount) {\n            this.allParameterID.splice(0, 0, -1);\n            this.scheduleSourcingReportFG.get('reportConfig').get('paramMetric').patchValue(this.allParameterID);\n        } else {\n            const filteredSelected = selected.filter(s => s != -1);\n            this.scheduleSourcingReportFG.get('paramMetric').patchValue(filteredSelected);\n        }\n    }\n\n    patchSchedulerConfigInput() {\n        this.scheduleSourcingReportFG.get('schedulerConfig').patchValue(this.schedulerConfigInput.scheduleReportFG.value)\n    }\n\n    getValidFormData() {\n        this.patchSchedulerConfigInput();\n\n        let userID = this.tscCommonService.removeSelectAllID(this.scheduleSourcingReportFG.get('schedulerConfig').get('userID').value);\n        this.scheduleSourcingReportFG.get('schedulerConfig').get('userID').patchValue(userID);\n\n        let paramMetrics = this.tscCommonService.removeSelectAllID(this.scheduleSourcingReportFG.get('reportConfig').get('paramMetric').value);\n        let paramsArray = paramMetrics.map(paramName => ({\n            name: paramName,\n            dsAgg: 'sum',\n            agg: 'sum'\n        }));\n\n        const reportConfigFG = this.scheduleSourcingReportFG.get('reportConfig').value;\n        const schedulerConfigFG = this.scheduleSourcingReportFG.get('schedulerConfig').value;\n        const { paramMetric, ...reportConfigWithoutParamMetric } = reportConfigFG;\n\n        this.modifiedFG = {\n            reportConfig: {\n                ...reportConfigWithoutParamMetric,\n                params: paramsArray\n            },\n            schedulerConfig: {\n                ...schedulerConfigFG\n            }\n        };\n    }\n\n    scheduleReportSubmit() {\n        this.patchSchedulerConfigInput();\n\n        if (this.schedulerConfigInput.scheduleReportFG.invalid) {\n            this.schedulerConfigInput.scheduleReportFG.markAllAsTouched();\n        }\n\n        if (this.scheduleSourcingReportFG.invalid) {\n            console.log('Invalid form:', this.scheduleSourcingReportFG.value);\n            this.toastrService.openToast(InvalidForm.INVALID_FORM_TITLE, InvalidForm.INVALID_FORM_MESSAGE, ToastrColor.ERROR);\n            return;\n        } else {\n            this.getValidFormData();\n\n            if (this.action == FormAction.CREATE) {\n                this.createScheduleReport();\n            } else if (this.action == FormAction.UPDATE) {\n                this.updateScheduleReport();\n            }\n        }\n    }\n\n    createScheduleReport() {\n        this.scheduleReportController.createScheduleReport(this.orgID, this.modifiedFG).subscribe((res: ResponseM) => {\n\n            this.router.navigate([`schedule-report/page`]);\n\n        }, error => {\n            console.log('error in createScheduleReport -', error);\n        });\n    }\n\n    async getScheduleReportByID(scheduleReportID) {\n        this.scheduleReportI = <ScheduleReportI>await this.scheduleReportService.getScheduleReportByID(this.orgID, scheduleReportID);\n\n        this.patchScheduleReport(this.scheduleReportI);\n    }\n\n    patchScheduleReport(scheduleReportI: ScheduleReportI) {\n        this.scheduleSourcingReportFG.patchValue({\n            reportConfig: scheduleReportI.reportConfig,\n            schedulerConfig: scheduleReportI.schedulerConfig\n        });\n\n        this.schedulerConfigInput.scheduleReportFG.patchValue(scheduleReportI.schedulerConfig);\n\n        this.initialObject = {\n            sourcingReportConfig: this.scheduleSourcingReportFG.value,\n            schedulerConfig: this.schedulerConfigInput.scheduleReportFG.value\n        };\n\n        this.isValidUpdateForm();\n    }\n\n    isValidUpdateForm() {\n        this.schedulerConfigInput.scheduleReportFG.valueChanges.subscribe(() => {\n            this.checkEquality();\n        });\n\n        this.scheduleSourcingReportFG.valueChanges.subscribe(() => {\n            this.checkEquality();\n        });\n    }\n\n    checkEquality() {\n        const currentValues = {\n            sourcingReportConfig: this.scheduleSourcingReportFG.value,\n            schedulerConfig: this.schedulerConfigInput.scheduleReportFG.value\n        };\n        this.isEqual = isEqual(this.initialObject, currentValues);\n    }\n\n    updateScheduleReport() {\n        this.scheduleReportController.updateScheduleReport(this.orgID, this.scheduleReportID, this.modifiedFG).subscribe((res: ResponseM) => {\n\n            this.tscCommonService.back();\n\n        }, error => {\n            console.log('error in updateScheduleReport -', error);\n        })\n    }\n\n    errorHandling = (formGroup: FormGroup, controlPath: string, error: string): boolean => {\n        return formGroup.get(controlPath).hasError(error);\n    }\n\n}","<div class=\"card main-card cardOverwrite h100\">\n    <div class=\"headerContainer\">\n        <div class=\"headerLeftContainer\">\n            <div class=\"pageTitle\">{{ pageTitle }}</div>\n            <div class=\"pageSubtitle\"></div>\n        </div>\n    </div>\n\n    <div class=\"card-body\">\n        <form [formGroup]=\"scheduleSourcingReportFG\" (ngSubmit)=\"scheduleReportSubmit()\">\n            <div class=\"row\">\n                <div class=\"col-sm-12\">\n                    <mat-card class=\"border cardOverwrite\">\n                        <div class=\"cardTitle\">\n                            Report configuration\n                        </div>\n                        <div class=\"row mt-2\">\n                            <div class=\"col-sm-3\">\n                                <div formGroupName=\"reportConfig\">\n                                    <mat-form-field class=\"matFieldWidth100\" [appearance]=\"MaterialFormFieldAppearance.FORM_FIELD_APPEARANCE\">\n                                        <mat-label>Select consumption parameter</mat-label>\n                                        <mat-select formControlName=\"paramMetric\" multiple required>\n                                            <ng-container\n                                                *ngIf=\"consumptionParamM && consumptionParamM.length > 0 && consumptionParamM[0]['id']; else noConsumptionParamM\">\n                                                <mat-option [value]=\"-1\" (click)=\"selectAllParameters()\">\n                                                    Select all\n                                                </mat-option>\n                                                <mat-option *ngFor=\"let param of consumptionParamM\" [value]=\"param.paramMetric\"\n                                                    (click)=\"selectedParameters()\">\n                                                    {{ param.label }}\n                                                </mat-option>\n                                            </ng-container>\n                                            <ng-template #noConsumptionParamM>\n                                                <mat-option disabled>\n                                                    {{ COMMON_CONSTANT.NO_DATA_FOUND }}\n                                                </mat-option>\n                                            </ng-template>\n                                        </mat-select>\n                                        <mat-error *ngIf=\"errorHandling(scheduleSourcingReportFG, 'reportConfig.paramMetric', 'required')\">\n                                            {{ FormErrorEnum.REQUIRED }}\n                                        </mat-error>\n                                    </mat-form-field>\n                                </div>\n                            </div>\n                        </div>\n                    </mat-card>\n                </div>\n            </div>\n\n            <div class=\"row mt-3\">\n                <div class=\"col-sm-12\">\n                    <lib-configuration #schedulerConfigInput></lib-configuration>\n                </div>\n            </div>\n            \n            <button class=\"d-none\" type=\"submit\" #formSubmitBtn></button>\n\n            <div class=\"row mt-3\">\n                <div class=\"col-sm-12\">\n                    <div class=\"float-end\">\n                        <button class=\"btn btn-sm btn-secondary me-2\" type=\"button\" (click)=\"tscCommonService.back()\">\n                            {{ ButtonLabelEnum.CANCEL_BTN_LABEL }}\n                        </button>\n\n                        <button class=\"btn btn-sm btn-success\" [ngClass]=\"{\n                                            'btn-success' : action == FormAction.CREATE,\n                                            'btn-primary' : action == FormAction.UPDATE,\n                                            'disabled' : action == FormAction.UPDATE && isEqual\n                                        }\" type=\"submit\">{{ action ==\n                            FormAction.CREATE ? 'Schedule' :\n                            ButtonLabelEnum.UPDATE_BTN_LABEL }}\n                        </button>\n                    </div>\n                </div>\n            </div>\n        </form>\n    </div>\n</div>","import { NgModule } from '@angular/core';\nimport { RouterModule, Routes } from '@angular/router';\n\nimport { ScheduleReportSourcingComponent } from './sourcing.component';\n\nconst routes: Routes = [\n    {\n        path: '',\n        component: ScheduleReportSourcingComponent\n    }\n];\n\n@NgModule({\n    imports: [RouterModule.forChild(routes)],\n    exports: [RouterModule]\n})\nexport class ScheduleReportSourcingRoutingModule { }\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\n\nimport {\n    FormsModule,\n    ReactiveFormsModule\n} from '@angular/forms';\n\nimport { MatCardModule } from '@angular/material/card';\nimport { MatFormFieldModule } from '@angular/material/form-field';\nimport { MatSelectModule } from '@angular/material/select';\n\nimport { ScheduleReportConfigurationModule } from '../_shared/configuration/configuration.module';\n\nimport { ScheduleReportSourcingRoutingModule } from './sourcing-routing.module';\nimport { ScheduleReportSourcingComponent } from './sourcing.component';\n\n\n@NgModule({\n    declarations: [\n        ScheduleReportSourcingComponent\n    ],\n    imports: [\n        CommonModule,\n        ScheduleReportSourcingRoutingModule,\n\n        ScheduleReportConfigurationModule,\n\n        FormsModule,\n        ReactiveFormsModule,\n        MatCardModule,\n        MatFormFieldModule,\n        MatSelectModule\n    ]\n})\nexport class ScheduleReportSourcingModule { }","import { Component, OnInit, ViewChild } from '@angular/core';\nimport { FormBuilder, FormGroup, Validators } from '@angular/forms';\nimport { ActivatedRoute, Router } from '@angular/router';\n\nimport { isEqual } from 'lodash';\n\nimport { Entity, EntityM } from '../../../model/entity.model';\n\nimport { ScheduleReportTypeEnum } from '../../../enum/schedule-report.enum';\nimport { ScheduleReport, ScheduleReportI } from '../../../model/schedule-report.model';\n\nimport { ScheduleReportController } from '../../../controller/schedule-report.controller';\n\nimport { ScheduleReportService } from '../../../service/schedule-report.service';\n\nimport { ScheduleReportConfigurationComponent } from '../_shared/configuration/configuration.component';\n\nimport { EntityService } from '../../../service/entity.service';\n\n// tsc-library\nimport { ResponseM, MaterialFormFieldAppearance, InvalidForm, ButtonLabelEnum, FormAction, FormErrorEnum, TSCCommonService, COMMON_CONSTANT, MATERIAL_CONSTANT, ButtonTooltipEnum } from '@library/tsc-common';\nimport { ToastrColor, ToastrService } from '@library/toastr-service';\nimport { StorageService } from '@library/storage-service';\n// /tsc-library/\n\n@Component({\n    selector: 'lib-temperature',\n    templateUrl: './temperature.component.html',\n    styleUrls: ['./temperature.component.scss']\n})\nexport class ScheduleReportTemperatureComponent implements OnInit {\n\n    COMMON_CONSTANT = COMMON_CONSTANT;\n    MATERIAL_CONSTANT = MATERIAL_CONSTANT;\n\n    FormAction = FormAction;\n    FormErrorEnum = FormErrorEnum;\n    ButtonLabelEnum = ButtonLabelEnum;\n    ButtonTooltipEnum = ButtonTooltipEnum;\n    MaterialFormFieldAppearance = MaterialFormFieldAppearance;\n\n    orgID: any;\n\n    entityM = [new Entity()];\n    entityType: any[] = [];\n    allEntityID: any[] = [];\n    totalEntityCount: number = 0;\n    entities: any[] = [];\n\n    scheduleTemperatureReportFG: FormGroup;\n    modifiedFG: any;\n    scheduleReportID: any;\n\n    action: string;\n    pageTitle: string;\n    isEqual: boolean = true;\n    initialObject: any;\n\n    scheduleReportI = new ScheduleReport();\n\n    @ViewChild('schedulerConfigInput') schedulerConfigInput: ScheduleReportConfigurationComponent;\n\n    constructor(\n        private activatedRoute: ActivatedRoute,\n        private router: Router,\n        private formBuilder: FormBuilder,\n        private scheduleReportController: ScheduleReportController,\n        private entityService: EntityService,\n        private scheduleReportService: ScheduleReportService,\n\n        // tsc-library\n        private storageService: StorageService,\n        public tscCommonService: TSCCommonService,\n        private toastrService: ToastrService,\n        // /tsc-library/\n    ) { }\n\n    ngOnInit(): void {\n        this.orgID = this.storageService.getStorage('currentOrgID');\n\n        this.getEntitiesByParamMetric();\n        this.scheduleTemperatureReportFGInit();\n\n        this.activatedRoute.data.subscribe(data => {\n            this.action = data.action;\n            this.setPageTitle();\n        });\n\n        this.activatedRoute.params.subscribe(params => {\n            if (this.action == FormAction.UPDATE) {\n                this.scheduleReportID = params.scheduleReportID;\n                this.getScheduleReportByID(this.scheduleReportID);\n            }\n        });\n    }\n\n    setPageTitle() {\n        if (this.action == FormAction.CREATE) {\n            this.pageTitle = `Schedule Temperature Report`;\n        } else if (this.action == FormAction.UPDATE) {\n            this.pageTitle = `Update Scheduled Temperature Report`;\n        }\n    }\n\n    scheduleTemperatureReportFGInit() {\n        this.scheduleTemperatureReportFG = this.formBuilder.group({\n            reportConfig: this.formBuilder.group({\n                reportType: [ScheduleReportTypeEnum.TEMPERATURE_REPORT, Validators.required],\n                deviceID: [[]],\n                entityType: [, Validators.required],\n                entityID: [[], Validators.required],\n                sourceConsumer: this.formBuilder.group({\n                    type: [],\n                    keyID: []\n                }),\n                paramMetric: [['engTemperature'], Validators.required],\n            }),\n            schedulerConfig: this.formBuilder.group({\n                name: [, Validators.required],\n                dataInterval: [, Validators.required],\n                frequency: [, Validators.required],\n                userChoice: [, Validators.required],\n                userID: [[], Validators.required],\n                otherUserEmail: [[]],\n                status: [, Validators.required],\n                reportFormat: [, Validators.required],\n            })\n        });\n    }\n\n    async getEntitiesByParamMetric() {\n        this.entityM = <EntityM[]>await this.entityService.getEntitiesByParamMetric(this.orgID, \"engTemperature\");\n        this.getDistictEntityType();\n    }\n\n    getDistictEntityType() {\n        const distinctTypes = Array.from(new Set(this.entityM.map(item => item.type)));\n        this.entityType = distinctTypes.map(value => ({ value }));\n    }\n\n    async entityTypeChange(entityType) {\n        this.scheduleTemperatureReportFG.get('reportConfig').get('entityID').reset();\n        this.allEntityID = [];\n\n        this.entities = await this.getEntitiesByType(entityType);\n        this.totalEntityCount = this.entities.length;\n        this.entities.forEach(entity => this.allEntityID.push(entity['id']));\n\n        if (this.action == FormAction.UPDATE && this.scheduleTemperatureReportFG) {\n            this.scheduleTemperatureReportFG.patchValue({\n                'reportConfig.entityID': this.allEntityID\n            });\n        }\n    }\n\n    async getEntitiesByType(type) {\n        const filteredEntities = this.entityM.filter(entity => entity.type == type);\n        return filteredEntities;\n    }\n\n    selectAllEntities() {\n        if (!this.scheduleTemperatureReportFG.get('reportConfig').get('entityID').value.includes(-1)) {\n            this.scheduleTemperatureReportFG.get('reportConfig').get('entityID').reset([]);\n            return;\n        }\n        this.scheduleTemperatureReportFG.get('reportConfig').get('entityID').setValue([-1, ...this.allEntityID]);\n    }\n\n    selectedEntity() {\n        const selected = this.scheduleTemperatureReportFG.get('reportConfig').get('entityID').value;\n\n        if (selected.includes(-1)) {\n            selected.shift();\n            this.scheduleTemperatureReportFG.get('reportConfig').get('entityID').patchValue(selected);\n        } else if (this.scheduleTemperatureReportFG.get('reportConfig').get('entityID').value.length == this.totalEntityCount) {\n            this.allEntityID.splice(0, 0, -1);\n            this.scheduleTemperatureReportFG.get('reportConfig').get('entityID').patchValue(this.allEntityID);\n        } else {\n            const filteredSelected = selected.filter(s => s != -1);\n            this.scheduleTemperatureReportFG.get('reportConfig').get('entityID').patchValue(filteredSelected);\n        }\n    }\n\n    patchSchedulerConfigInput() {\n        this.scheduleTemperatureReportFG.get('schedulerConfig').patchValue(this.schedulerConfigInput.scheduleReportFG.value)\n    }\n\n    getValidFormData() {\n        this.patchSchedulerConfigInput();\n\n        let entityID = this.tscCommonService.removeSelectAllID(this.scheduleTemperatureReportFG.get('reportConfig').get('entityID').value);\n        this.scheduleTemperatureReportFG.get('reportConfig').get('entityID').patchValue(entityID);\n\n        let userID = this.tscCommonService.removeSelectAllID(this.scheduleTemperatureReportFG.get('schedulerConfig').get('userID').value);\n        this.scheduleTemperatureReportFG.get('schedulerConfig').get('userID').patchValue(userID);\n\n        let paramMetrics = this.scheduleTemperatureReportFG.get('reportConfig').get('paramMetric').value;\n        let paramsArray = paramMetrics.map(paramName => ({\n            name: paramName,\n            dsAgg: 'avg',\n            agg: 'avg'\n        }));\n\n        const reportConfigFG = this.scheduleTemperatureReportFG.get('reportConfig').value;\n        const schedulerConfigFG = this.scheduleTemperatureReportFG.get('schedulerConfig').value;\n        const { paramMetric, ...reportConfigWithoutParamMetric } = reportConfigFG;\n\n        this.modifiedFG = {\n            reportConfig: {\n                ...reportConfigWithoutParamMetric,\n                params: paramsArray\n            },\n            schedulerConfig: {\n                ...schedulerConfigFG\n            }\n        };\n    }\n\n    scheduleReportSubmit() {\n        this.patchSchedulerConfigInput();\n\n        if (this.schedulerConfigInput.scheduleReportFG.invalid) {\n            this.schedulerConfigInput.scheduleReportFG.markAllAsTouched();\n        }\n\n        if (this.scheduleTemperatureReportFG.invalid) {\n            console.log('Invalid form:', this.scheduleTemperatureReportFG.value);\n            this.toastrService.openToast(InvalidForm.INVALID_FORM_TITLE, InvalidForm.INVALID_FORM_MESSAGE, ToastrColor.ERROR);\n            return;\n        } else {\n            this.getValidFormData();\n\n            if (this.action == FormAction.CREATE) {\n                this.createScheduleReport();\n            } else if (this.action == FormAction.UPDATE) {\n                this.updateScheduleReport();\n            }\n        }\n    }\n\n    createScheduleReport() {\n        this.scheduleReportController.createScheduleReport(this.orgID, this.modifiedFG).subscribe((res: ResponseM) => {\n\n            this.router.navigate([`schedule-report/page`]);\n\n        }, error => {\n            console.log('error in createScheduleReport -', error);\n        });\n    }\n\n    async getScheduleReportByID(scheduleReportID) {\n        this.scheduleReportI = <ScheduleReportI>await this.scheduleReportService.getScheduleReportByID(this.orgID, scheduleReportID);\n\n        this.patchScheduleReport(this.scheduleReportI);\n    }\n\n    async patchScheduleReport(scheduleReportI: ScheduleReportI) {\n        await this.getEntitiesByParamMetric();\n        await this.entityTypeChange(this.scheduleReportI.reportConfig.entityType);\n\n        this.scheduleTemperatureReportFG.patchValue({\n            reportConfig: scheduleReportI.reportConfig,\n            schedulerConfig: scheduleReportI.schedulerConfig\n        });\n\n        this.schedulerConfigInput.scheduleReportFG.patchValue(scheduleReportI.schedulerConfig);\n\n        this.initialObject = {\n            temperatureReportConfig: this.scheduleTemperatureReportFG.value,\n            schedulerConfig: this.schedulerConfigInput.scheduleReportFG.value\n        };\n\n        this.isValidUpdateForm();\n    }\n\n    isValidUpdateForm() {\n        this.schedulerConfigInput.scheduleReportFG.valueChanges.subscribe(() => {\n            this.checkEquality();\n        });\n\n        this.scheduleTemperatureReportFG.valueChanges.subscribe(() => {\n            this.checkEquality();\n        });\n    }\n\n    checkEquality() {\n        const currentValues = {\n            temperatureReportConfig: this.scheduleTemperatureReportFG.value,\n            schedulerConfig: this.schedulerConfigInput.scheduleReportFG.value\n        };\n        this.isEqual = isEqual(this.initialObject, currentValues);\n    }\n\n    updateScheduleReport() {\n        this.scheduleReportController.updateScheduleReport(this.orgID, this.scheduleReportID, this.modifiedFG).subscribe((res: ResponseM) => {\n\n            this.tscCommonService.back();\n\n        }, error => {\n            console.log('error in updateScheduleReport -', error);\n        })\n    }\n\n    errorHandling = (formGroup: FormGroup, controlPath: string, error: string): boolean => {\n        return formGroup.get(controlPath).hasError(error);\n    }\n\n}","<div class=\"card main-card cardOverwrite h100\">\n    <div class=\"headerContainer\">\n        <div class=\"headerLeftContainer\">\n            <div class=\"pageTitle\">{{ pageTitle }}</div>\n            <div class=\"pageSubtitle\"></div>\n        </div>\n    </div>\n\n    <div class=\"card-body\">\n        <form [formGroup]=\"scheduleTemperatureReportFG\" (ngSubmit)=\"scheduleReportSubmit()\">\n            <div class=\"row\">\n                <div class=\"col-sm-12\">\n                    <mat-card class=\"border cardOverwrite\">\n                        <div class=\"cardTitle\">\n                            Report configuration\n                        </div>\n                        <div class=\"row mt-2\">\n                            <div class=\"col-sm-3\">\n                                <div formGroupName=\"reportConfig\">\n                                    <mat-form-field class=\"matFieldWidth100\" [appearance]=\"MaterialFormFieldAppearance.FORM_FIELD_APPEARANCE\">\n                                        <mat-label> Select entity type </mat-label>\n                                        <mat-select formControlName=\"entityType\" (selectionChange)=\"entityTypeChange($event.value)\" required>\n                                            <ng-container *ngIf=\"entityType && entityType.length > 0 && entityType?.[0]?.['value']; else noEntityType\">\n                                                <mat-option *ngFor=\"let type of entityType\" [value]=\"type.value\">\n                                                    {{ type.value }}\n                                                </mat-option>\n                                            </ng-container>\n                                            <ng-template #noEntityType>\n                                                <mat-option disabled>\n                                                    {{ COMMON_CONSTANT.NO_DATA_FOUND }}\n                                                </mat-option>\n                                            </ng-template>\n                                        </mat-select>\n                                        <mat-error *ngIf=\"errorHandling(scheduleTemperatureReportFG, 'reportConfig.entityType', 'required')\">\n                                            {{ FormErrorEnum.REQUIRED }}\n                                        </mat-error>\n                                    </mat-form-field>\n                                </div>\n                            </div>\n                    \n                            <div class=\"col-sm-3\">\n                                <div formGroupName=\"reportConfig\">\n                                    <mat-form-field class=\"mat-field-width-100\" [appearance]=\"MaterialFormFieldAppearance.FORM_FIELD_APPEARANCE\">\n                                        <mat-label>Select entity</mat-label>\n                                        <mat-select formControlName=\"entityID\" multiple required>\n                                            <ng-container *ngIf=\"entities && entities.length > 0 && entities[0]['id']; else noEntityFound\">\n                                                <mat-option [value]=\"-1\" (click)=\"selectAllEntities()\">\n                                                    Select all\n                                                </mat-option>\n                                                <mat-option *ngFor=\"let entity of entities\" [value]=\"entity.id\" (click)=\"selectedEntity()\">\n                                                    {{ entity.name }}\n                                                </mat-option>\n                                            </ng-container>\n                                            <ng-template #noEntityFound>\n                                                <mat-option disabled>\n                                                    {{ COMMON_CONSTANT.NO_DATA_FOUND }}\n                                                </mat-option>\n                                            </ng-template>\n                                        </mat-select>\n                                        <mat-error *ngIf=\"errorHandling(scheduleTemperatureReportFG, 'reportConfig.entityID', 'required')\">\n                                            {{ FormErrorEnum.REQUIRED }}\n                                        </mat-error>\n                                    </mat-form-field>\n                                </div>\n                            </div>\n                        </div>\n                    </mat-card>\n                </div>\n            </div>\n\n            <div class=\"row mt-3\">\n                <div class=\"col-sm-12\">\n                    <lib-configuration #schedulerConfigInput></lib-configuration>\n                </div>\n            </div>\n            \n            <button class=\"d-none\" type=\"submit\" #formSubmitBtn></button>\n\n            <div class=\"row mt-3\">\n                <div class=\"col-sm-12\">\n                    <div class=\"float-end\">\n                        <button class=\"btn btn-sm btn-secondary me-2\" type=\"button\" (click)=\"tscCommonService.back()\">\n                            {{ ButtonLabelEnum.CANCEL_BTN_LABEL }}\n                        </button>\n\n                        <button class=\"btn btn-sm btn-success\" [ngClass]=\"{\n                                            'btn-success' : action == FormAction.CREATE,\n                                            'btn-primary' : action == FormAction.UPDATE,\n                                            'disabled' : action == FormAction.UPDATE && isEqual\n                                        }\" type=\"submit\">{{ action ==\n                            FormAction.CREATE ? 'Schedule' :\n                            ButtonLabelEnum.UPDATE_BTN_LABEL }}\n                        </button>\n                    </div>\n                </div>\n            </div>\n        </form>\n    </div>\n</div>","import { NgModule } from '@angular/core';\nimport { RouterModule, Routes } from '@angular/router';\n\nimport { ScheduleReportTemperatureComponent } from './temperature.component';\n\nconst routes: Routes = [\n    {\n        path: '',\n        component: ScheduleReportTemperatureComponent\n    }\n];\n\n@NgModule({\n    imports: [RouterModule.forChild(routes)],\n    exports: [RouterModule]\n})\nexport class ScheduleReportTemperatureRoutingModule { }\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\n\nimport {\n    FormsModule,\n    ReactiveFormsModule\n} from '@angular/forms';\n\nimport { MatCardModule } from '@angular/material/card';\nimport { MatFormFieldModule } from '@angular/material/form-field';\nimport { MatSelectModule } from '@angular/material/select';\nimport { MatButtonToggleModule } from '@angular/material/button-toggle';\n\nimport { ScheduleReportConfigurationModule } from '../_shared/configuration/configuration.module';\n\nimport { ScheduleReportTemperatureRoutingModule } from './temperature-routing.module';\nimport { ScheduleReportTemperatureComponent } from './temperature.component';\n\n\n@NgModule({\n    declarations: [\n        ScheduleReportTemperatureComponent\n    ],\n    imports: [\n        CommonModule,\n        ScheduleReportTemperatureRoutingModule,\n\n        ScheduleReportConfigurationModule,\n\n        FormsModule,\n        ReactiveFormsModule,\n\n        MatCardModule,\n        MatFormFieldModule,\n        MatSelectModule,\n        MatButtonToggleModule\n    ]\n})\nexport class ScheduleReportTemperatureModule { }\n","import { Component, Inject, OnInit } from '@angular/core';\n\nimport { FormBuilder, FormGroup, Validators } from '@angular/forms';\nimport { MatDialogRef, MAT_DIALOG_DATA } from '@angular/material/dialog';\n\nimport { isEqual } from 'lodash';\n\nimport { Entity, EntityType, EntityTypeM } from '../../../../../model/entity.model';\n\nimport { EntityController } from '../../../../../controller/entity.controller';\n\nimport { EntityService } from '../../../../../service/entity.service';\n\n// tsc-library\nimport { InvalidForm, ResponseM, MatSelectSearchService, MaterialFormFieldAppearance, ButtonLabelEnum, DialogEnum, FormErrorEnum } from '@library/tsc-common';\nimport { StorageService } from '@library/storage-service';\nimport { ToastrService, ToastrColor } from '@library/toastr-service';\n// /tsc-library/\n\n@Component({\n    selector: 'lib-entity',\n    templateUrl: './entity.component.html',\n    styleUrls: []\n})\nexport class CreateUpdateEntityComponent implements OnInit {\n\n    MaterialFormFieldAppearance = MaterialFormFieldAppearance;\n    ButtonLabelEnum = ButtonLabelEnum;\n    DialogEnum = DialogEnum;\n    FormErrorEnum = FormErrorEnum;\n\n    title: string = 'Create';\n    action: string = 'create';\n\n    orgID: any;\n    layoutID: any;\n    entityID: any;\n    isNewEntityTypeSelected: boolean = false;\n    isEqual: boolean = false;\n    initialObject: any;\n\n    entityM: Entity;\n    entityTypeM = [new EntityType()];\n\n    entityFG: FormGroup;\n    entityTypeSearchUtil: MatSelectSearchService = new MatSelectSearchService(['type']);\n\n    constructor(\n        private storageService: StorageService,\n        private toastService: ToastrService,\n        private entityService: EntityService,\n        private entityController: EntityController,\n        private entityFB: FormBuilder,\n        public dialogRef: MatDialogRef<CreateUpdateEntityComponent>,\n        @Inject(MAT_DIALOG_DATA) public data\n    ) {\n        this.action = data['action'];\n        this.entityID = data['entityID'];\n        this.layoutID = data['layoutID']\n        this.dialogRef.disableClose = true;\n    }\n\n    ngOnInit(): void {\n        this.orgID = this.storageService.getStorage('currentOrgID');\n\n        this.getEntityType();\n        this.entityFGInit();\n\n        if (this.action == 'update') {\n            this.title = 'Update';\n            this.getEntityByID();\n        }\n        this.entityFG.valueChanges.subscribe(() => { this.isEqual = isEqual(this.initialObject, this.entityFG.getRawValue()); });\n    }\n\n    async getEntityType() {\n        this.entityTypeM = <EntityTypeM[]>await this.entityService.getEntityTypeByLayoutID(this.orgID, 'NO');\n\n        this.entityTypeSearchUtil.entityArr = this.entityTypeM;\n        this.entityTypeSearchUtil.createSubscription();\n    }\n\n    entityFGInit() {\n        this.entityFG = this.entityFB.group({\n            name: ['', Validators.required],\n            type: ['', Validators.required]\n        });\n    }\n\n    createNewType() {\n        this.isNewEntityTypeSelected = true;\n        this.entityFG.get('type').reset();\n    }\n\n    getEntityByID() {\n        this.entityController.getEntityByID(this.orgID, this.layoutID, this.entityID).subscribe((entityRes) => {\n            this.entityM = entityRes;\n            this.patchEntity(this.entityM);\n        })\n    }\n\n    patchEntity(entity) {\n        this.entityFG.patchValue({\n            name: entity['name'],\n            type: entity['type']\n        });\n        this.isEqual = true;\n    }\n\n    addEntity() {\n        if (this.entityFG.invalid) {\n            this.entityFG.markAllAsTouched();\n            this.toastService.openToast(InvalidForm.INVALID_FORM_TITLE, InvalidForm.INVALID_FORM_MESSAGE, ToastrColor.ERROR);\n            return;\n        }\n\n        this.entityController.createEntity(this.orgID, this.layoutID, this.entityID, this.entityFG.value)\n            .subscribe((addEntityRes: ResponseM) => {\n                this.dialogRef.close(DialogEnum.SUCCESS_DR);\n            },\n                error => {\n                    console.log('error in addEntity - ', error);\n                });\n    }\n\n    updateEntity() {\n        if (this.entityFG.invalid) {\n            this.entityFG.markAllAsTouched();\n            this.toastService.openToast(InvalidForm.INVALID_FORM_TITLE, InvalidForm.INVALID_FORM_MESSAGE, ToastrColor.ERROR);\n            return;\n        }\n        this.entityController.updateEntity(this.orgID, this.layoutID, this.entityID, this.entityFG.value)\n            .subscribe((addEntityRes: ResponseM) => {\n                this.dialogRef.close(DialogEnum.SUCCESS_DR);\n            },\n                error => {\n                    console.log('error in updateEntity - ', error);\n                });\n    }\n\n    public errorHandling = (control: string, error: string) => {\n        return this.entityFG.controls[control].hasError(error);\n    }\n\n}\n","<div mat-dialog-title>\n    <strong class=\"dialogTitle\">\n        {{ title }} Entity\n    </strong>\n    <button mat-icon-button mat-dialog-close cdkFocusInitial class=\"float-end matDialogClose\" matTooltip=\"Close\"\n        matTooltipPosition=\"before\">\n        <span class=\"material-symbols-outlined\" [mat-dialog-close]=\"DialogEnum.CLOSE_DR\">\n            close\n        </span>\n    </button>\n</div>\n\n<div class=\"matDialogContent\" mat-dialog-content>\n    <form [formGroup]=\"entityFG\">\n        <div class=\"row\">\n            <div class=\"col-sm-6\">\n                <mat-form-field class=\"matFieldWidth100\" [appearance]=\"MaterialFormFieldAppearance.FORM_FIELD_APPEARANCE\">\n                    <mat-label class=\"formLabel\">Name</mat-label>\n                    <input matInput placeholder=\"Name\" type=\"text\" formControlName=\"name\" required />\n                    <mat-error *ngIf=\"errorHandling('name', 'required')\">\n                        {{ FormErrorEnum.REQUIRED }}\n                    </mat-error>\n                </mat-form-field>\n            </div>\n\n            <div class=\"col-sm-6\" *ngIf=\"!isNewEntityTypeSelected\">\n                <mat-form-field class=\"matFieldWidth100\" [appearance]=\"MaterialFormFieldAppearance.FORM_FIELD_APPEARANCE\">\n                    <mat-label>Select type</mat-label>\n                    <mat-select formControlName=\"type\" required>\n                        <mat-option>\n                            <ngx-mat-select-search [formControl]=\"entityTypeSearchUtil.filterFC\" placeholderLabel=\"Search by name\"\n                                noEntriesFoundLabel=\"No matching type found.\">\n                            </ngx-mat-select-search>\n                        </mat-option>\n                        <mat-option *ngFor=\"let entity of entityTypeSearchUtil.filteredEntities | async\" [value]=\"entity.type\">\n                            {{ entity.type }}\n                        </mat-option>\n\n                        <div class=\"row m-0 stickyDropdownMenuItem\">\n                            <div class=\"col-sm-12 text-primary cursorPointer\" (click)=\"createNewType()\">\n                                Create new type\n                            </div>\n                        </div>\n                    </mat-select>\n                    <mat-error *ngIf=\"errorHandling('type', 'required')\">\n                        {{ FormErrorEnum.REQUIRED }}\n                    </mat-error>\n                </mat-form-field>\n            </div>\n\n            <div class=\"col-sm-6\" *ngIf=\"isNewEntityTypeSelected\">\n                <mat-form-field class=\"matFieldWidth100\" [appearance]=\"MaterialFormFieldAppearance.FORM_FIELD_APPEARANCE\">\n                    <mat-label class=\"formLabel\">Type</mat-label>\n                    <input matInput placeholder=\"Type\" type=\"text\" formControlName=\"type\" required />\n                    <mat-error *ngIf=\"errorHandling('type', 'required')\">\n                        {{ FormErrorEnum.REQUIRED }}\n                    </mat-error>\n                </mat-form-field>\n\n                <span class=\"mt-2 text-primary cursorPointer\" (click)=\"isNewEntityTypeSelected = false\">\n                    <small>Select type *</small>\n                </span>\n            </div>\n        </div>\n    </form>\n</div>\n\n<div mat-dialog-footer align=\"end\">\n    <div [ngSwitch]=\"action\" class=\"d-inline\">\n        <button *ngSwitchCase=\"'create'\" type=\"button\" class=\"btn btn-sm btn-success\" (click)=\"addEntity()\">\n            {{ ButtonLabelEnum.CREATE_BTN_LABEL }}\n        </button>\n        <button *ngSwitchCase=\"'update'\" type=\"button\" class=\"btn btn-sm btn-success\" [ngClass]=\"{'disabled': isEqual}\"\n            (click)=\"updateEntity()\">\n            {{ ButtonLabelEnum.UPDATE_BTN_LABEL }}\n        </button>\n        <button *ngSwitchDefault class=\"d-none\"></button>\n    </div>\n</div>","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\n\nimport { MatIconModule } from '@angular/material/icon';\nimport { MatButtonModule } from '@angular/material/button';\nimport { MatInputModule } from '@angular/material/input';\nimport { MatTooltipModule } from '@angular/material/tooltip';\nimport { MatFormFieldModule } from '@angular/material/form-field';\nimport { MatDialogModule } from '@angular/material/dialog';\nimport { MatSelectModule } from '@angular/material/select';\n\nimport { NgxMatSelectSearchModule } from 'ngx-mat-select-search';\n\nimport { CreateUpdateEntityComponent } from './entity.component';\n\n@NgModule({\n    declarations: [\n        CreateUpdateEntityComponent\n    ],\n    imports: [\n        CommonModule,\n        FormsModule,\n        ReactiveFormsModule,\n        MatIconModule,\n        MatFormFieldModule,\n        MatButtonModule,\n        MatInputModule,\n        MatTooltipModule,\n        MatDialogModule,\n        MatSelectModule,\n        NgxMatSelectSearchModule\n    ]\n})\nexport class CreateUpdateEntityModule { }\n","import { Component, Inject, OnInit } from '@angular/core';\nimport { FormBuilder, FormGroup, Validators } from '@angular/forms';\nimport { MatDialogRef, MAT_DIALOG_DATA } from '@angular/material/dialog';\n\nimport { isEqual } from 'lodash';\n\n// tsc-library\nimport { InvalidForm, ResponseM, MaterialFormFieldAppearance, ButtonLabelEnum, DialogEnum, FormErrorEnum } from '@library/tsc-common';\nimport { StorageService } from '@library/storage-service';\nimport { ToastrService, ToastrColor } from '@library/toastr-service';\nimport { Layout, LayoutController, LayoutService } from '@library/layout-service';\n// /tsc-library/\n\n@Component({\n    selector: 'lib-layout',\n    templateUrl: './layout.component.html',\n    styles: [\n    ]\n})\nexport class CreateUpdateLayoutComponent implements OnInit {\n\n    MaterialFormFieldAppearance = MaterialFormFieldAppearance;\n    ButtonLabelEnum = ButtonLabelEnum;\n    DialogEnum = DialogEnum;\n    FormErrorEnum = FormErrorEnum;\n\n    title: string = 'Create';\n    action: string = 'create';\n\n    orgID: any;\n    layoutID: any;\n    maxLength = 200;\n\n    layoutFG: FormGroup;\n\n    layout = new Layout();\n\n    isEqual: boolean = false;\n    initialObject: any;\n\n    constructor(\n        public dialogRef: MatDialogRef<CreateUpdateLayoutComponent>,\n        @Inject(MAT_DIALOG_DATA) public data,\n        private storageService: StorageService,\n        private layoutFB: FormBuilder,\n        private toastService: ToastrService,\n        private layoutController: LayoutController,\n        private layoutService: LayoutService,\n    ) {\n        this.action = data['action'];\n        this.layoutID = data['layoutID'];\n        this.dialogRef.disableClose = true;\n    }\n\n    ngOnInit(): void {\n        this.orgID = this.storageService.getStorage('currentOrgID')\n\n        this.layoutInit();\n\n        if (this.action == 'update') {\n            this.title = 'Update';\n            this.getLayoutByID();\n        }\n        this.layoutFG.valueChanges.subscribe(() => { this.isEqual = isEqual(this.initialObject, this.layoutFG.getRawValue()); });\n    }\n\n    layoutInit() {\n        this.layoutFG = this.layoutFB.group({\n            name: ['', [Validators.required]],\n            description: []\n        });\n    }\n\n    async getLayoutByID() {\n        this.layout = await this.layoutService.getLayoutByID(this.orgID, this.layoutID);\n        this.patchLayout(this.layout);\n    }\n\n    patchLayout(layout) {\n        this.layoutFG.patchValue({\n            name: layout['name'],\n            description: layout['description']\n        });\n        this.isEqual = true;\n    }\n\n    createLayout() {\n        if (this.layoutFG.invalid) {\n            this.layoutFG.markAllAsTouched();\n            this.toastService.openToast(InvalidForm.INVALID_FORM_TITLE, InvalidForm.INVALID_FORM_MESSAGE, ToastrColor.ERROR);\n            return;\n        }\n\n        this.layoutController.createLayout(this.orgID, this.layoutFG.value)\n            .subscribe((layoutCreateRes: ResponseM) => {\n                this.dialogRef.close({\n                    result: DialogEnum.SUCCESS_DR,\n                    layoutID: layoutCreateRes.response.id\n                })\n            },\n                error => {\n                    console.log('error in createLayout() - ', error);\n                });\n    }\n\n    updateLayout() {\n        if (this.layoutFG.invalid) {\n            this.layoutFG.markAllAsTouched();\n            this.toastService.openToast(InvalidForm.INVALID_FORM_TITLE, InvalidForm.INVALID_FORM_MESSAGE, ToastrColor.ERROR);\n            return;\n        }\n        this.layoutController.updateLayout(this.orgID, this.layoutID, this.layoutFG.value)\n            .subscribe((updateLayoutRes: ResponseM) => {\n                this.dialogRef.close({ result: DialogEnum.SUCCESS_DR, layoutID: null })\n            },\n                error => {\n                    console.log('error in updateLayout() - ', error);\n                });\n    }\n\n    public errorHandling = (control: string, error: string) => {\n        return this.layoutFG.controls[control].hasError(error);\n    }\n\n}\n","<div mat-dialog-title>\n    <strong class=\"dialogTitle\">\n        {{ title }} layout\n    </strong>\n    <button mat-icon-button mat-dialog-close cdkFocusInitial class=\"float-end matDialogClose\" matTooltip=\"Close\"\n        matTooltipPosition=\"before\">\n        <span class=\"material-symbols-outlined\" [mat-dialog-close]=\"DialogEnum.CLOSE_DR\">\n            close\n        </span>\n    </button>\n</div>\n\n<div class=\"matDialogContent\" mat-dialog-content>\n    <form [formGroup]=\"layoutFG\">\n        <div class=\"row\">\n            <div class=\"col-sm-6\">\n                <mat-form-field class=\"matFieldWidth100\" [appearance]=\"MaterialFormFieldAppearance.FORM_FIELD_APPEARANCE\">\n                    <mat-label class=\"formLabel\">Name</mat-label>\n                    <input matInput placeholder=\"Layout Name\" type=\"text\" formControlName=\"name\" required/>\n                    <mat-error *ngIf=\"errorHandling('name', 'required')\">\n                        {{ FormErrorEnum.REQUIRED }}\n                    </mat-error>\n                </mat-form-field>\n            </div>\n            <div class=\"col-sm-6\">\n                <mat-form-field class=\"matFieldWidth100\" [appearance]=\"MaterialFormFieldAppearance.FORM_FIELD_APPEARANCE\">\n                    <mat-label class=\"formLabel\">Description</mat-label>\n                    <input class=\"formPlaceholder\" matInput formControlName=\"description\" [maxlength]=\"maxLength\"\n                        #input />\n                    <mat-hint>Total number of character remaining: {{input.value.length}}\n                        /{{ maxLength }}</mat-hint>\n                </mat-form-field>\n            </div>\n        </div>\n    </form>\n</div>\n\n<div mat-dialog-footer align=\"end\">\n    <div [ngSwitch]=\"action\" class=\"d-inline\">\n        <button *ngSwitchCase=\"'create'\" type=\"button\" class=\"btn btn-sm btn-success\" (click)=\"createLayout()\">\n            {{ ButtonLabelEnum.CREATE_BTN_LABEL }}\n        </button>\n        <button *ngSwitchCase=\"'update'\" type=\"button\" class=\"btn btn-sm btn-success\" [ngClass]=\"{'disabled': isEqual}\"\n            (click)=\"updateLayout()\">\n            {{ ButtonLabelEnum.UPDATE_BTN_LABEL }}\n        </button>\n        <button *ngSwitchDefault class=\"d-none\"></button>\n    </div>\n</div>","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\n\nimport { MatIconModule } from '@angular/material/icon';\nimport { MatButtonModule } from '@angular/material/button';\nimport { MatInputModule } from '@angular/material/input';\nimport { MatTooltipModule } from '@angular/material/tooltip';\nimport { MatFormFieldModule } from '@angular/material/form-field';\nimport { MatDialogModule } from '@angular/material/dialog';\nimport { MatSelectModule } from '@angular/material/select';\n\nimport { CreateUpdateLayoutComponent } from './layout.component';\n\n@NgModule({\n    declarations: [\n        CreateUpdateLayoutComponent\n    ],\n    imports: [\n        CommonModule,\n        FormsModule,\n        ReactiveFormsModule,\n        MatIconModule,\n        MatFormFieldModule,\n        MatButtonModule,\n        MatInputModule,\n        MatTooltipModule,\n        MatDialogModule,\n        MatSelectModule\n    ]\n})\nexport class CreateUpdateLayoutModule { }\n","import { Component, Inject, OnInit } from '@angular/core';\nimport { FormArray, FormBuilder, FormGroup, Validators } from '@angular/forms';\nimport { MAT_DIALOG_DATA, MatDialogRef } from '@angular/material/dialog';\n\nimport { isEqual } from 'lodash';\n\nimport { Parameter, ParameterM } from '../../../../../model/parameter.model';\n\nimport { DeviceController } from '../../../../../controller/device.controller';\n\nimport { SourceService } from '../../../../../service/source.service';\nimport { ParameterService } from '../../../../../service/parameter.service';\n\n// tsc-library\nimport { InvalidForm, MaterialFormFieldAppearance, ButtonLabelEnum, DialogEnum, FormAction, PageTitleEnum, ResponseM, Static, StaticI, FormErrorEnum, COMMON_CONSTANT, TSCCommonService } from '@library/tsc-common';\nimport { StorageService } from '@library/storage-service';\nimport { ToastrService, ToastrColor, ToastrTitle } from '@library/toastr-service';\n// /tsc-library/\n\n@Component({\n    selector: 'lib-source-load',\n    templateUrl: './source-load.component.html',\n    styles: [\n    ]\n})\nexport class SourceLoadComponent implements OnInit {\n\n    COMMON_CONSTANT = COMMON_CONSTANT;\n\n    MaterialFormFieldAppearance = MaterialFormFieldAppearance;\n    ButtonLabelEnum = ButtonLabelEnum;\n    DialogEnum = DialogEnum;\n    FormActionEnum = FormAction;\n    PageTitleEnum = PageTitleEnum;\n    FormErrorEnum = FormErrorEnum;\n\n    orgID: any;\n    layoutID: any;\n    entityID: any;\n    deviceInfo: any;\n    deviceParameter: any;\n    updateFromDialog: any;\n    action: any;\n    intialObject: any;\n    isEqual: boolean = true;\n    desiredMappingArray: any[];\n\n    parameterM = [new Parameter()];\n    paramLabel: any;\n\n    sourceType = [new Static()];\n    loadType = [new Static()];\n\n    infoMessage: string = 'Include source or load category and their type when mapping devices for type meters!';\n    warningMessage: string = 'Please add either source or load type when mapping devices for every parameter!';\n\n    sourceLoadFG: FormGroup;\n\n    constructor(\n        public dialogRef: MatDialogRef<SourceLoadComponent>,\n        @Inject(MAT_DIALOG_DATA) public data,\n        private sourceLoadFB: FormBuilder,\n        private deviceController: DeviceController,\n        private sourceService: SourceService,\n        private storageService: StorageService,\n        private toastrService: ToastrService,\n        private parameterService: ParameterService,\n        private tscCommonService: TSCCommonService,\n    ) {\n        this.layoutID = data['layoutID'];\n        this.entityID = data['entityID'];\n        this.deviceInfo = data['deviceInfo'];\n        this.deviceParameter = data['deviceInfo']['parameter'];\n        this.updateFromDialog = data['updateFromDialog'];\n        this.dialogRef.disableClose = true;\n    }\n\n    ngOnInit(): void {\n        this.orgID = this.storageService.getStorage('currentOrgID');\n\n        this.getParameterByOrgID();\n\n        this.getSourceConsumerType(\"source\")\n            .then(app => {\n                this.sourceType = app;\n            })\n\n        this.getSourceConsumerType(\"consumer\")\n            .then(app => {\n                this.loadType = app;\n            })\n\n        this.sourceLoadFGInit();\n        this.deviceParameter.forEach(param => {\n            this.addParameterToFormArray(param);\n        });\n\n        if (this.deviceInfo && this.deviceInfo.mappingRecords && this.deviceInfo.mappingRecords.length == 0) {\n            this.action = FormAction.ADD;\n        } else {\n            this.action = FormAction.UPDATE;\n            this.desiredMappingArray = this.makeDesiredMappingArray();\n            this.patchSourceLoadFG();\n            this.updateFormControlsState();\n        }\n\n        this.intialObject = this.sourceLoadFG.value;\n\n        this.sourceLoadFG.valueChanges.subscribe(() => {\n\n            this.isEqual = isEqual(this.intialObject, this.sourceLoadFG.value);\n\n            if (this.action == FormAction.UPDATE) {\n                this.updateDesiredMappingArray();\n            }\n        });\n    }\n\n    async getParameterByOrgID() {\n        this.parameterM = <ParameterM[]>await this.parameterService.getParameterByOrgID(this.orgID);\n    }\n\n    getParameterLabel(paramID) {\n        const parameter = this.tscCommonService.getUniqueObject(this.parameterM, 'id', paramID);\n        return parameter ? parameter.label : '';\n    }\n\n    async getSourceConsumerType(type: string): Promise<StaticI[]> {\n        const requestData = {\n            type: type\n        };\n\n        const result = await this.sourceService.getSourceConsumerType(this.orgID, requestData);\n        return result;\n    }\n\n    sourceLoadFGInit() {\n        this.sourceLoadFG = this.sourceLoadFB.group({\n            parameterMappingRecord: this.sourceLoadFB.array([])\n        });\n    }\n\n    addParameterToFormArray(param: any) {\n        const parameterFG = this.sourceLoadFB.group({\n            parameterID: [param.id],\n            isSource: [false],\n            sourceType: [{ value: '', disabled: true }, Validators.required],\n            isLoad: [false],\n            loadType: [{ value: '', disabled: true }, Validators.required]\n        });\n        this.parameterMappingRecordFA.push(parameterFG);\n    }\n\n    get parameterMappingRecordFA(): FormArray {\n        return this.sourceLoadFG.get('parameterMappingRecord') as FormArray;\n    }\n\n    addSourceType(event: any, index: number) {\n        const isSource = this.parameterMappingRecordFA.at(index).get('isSource');\n        isSource.setValue(event.checked);\n\n        const sourceTypeControl = this.parameterMappingRecordFA.at(index).get('sourceType');\n        if (isSource.value) {\n            sourceTypeControl.enable();\n            sourceTypeControl.setValidators([Validators.required]);\n        } else {\n            sourceTypeControl.disable();\n            sourceTypeControl.clearValidators();\n            sourceTypeControl.reset('');\n        }\n\n        sourceTypeControl.updateValueAndValidity();\n    }\n\n    addLoadType(event: any, index: number) {\n        const isLoad = this.parameterMappingRecordFA.at(index).get('isLoad');\n        isLoad.setValue(event.checked);\n\n        const loadTypeControl = this.parameterMappingRecordFA.at(index).get('loadType');\n        if (isLoad.value) {\n            loadTypeControl.enable();\n            loadTypeControl.setValidators([Validators.required]);\n        } else {\n            loadTypeControl.disable();\n            loadTypeControl.clearValidators();\n            loadTypeControl.reset('');\n        }\n\n        loadTypeControl.updateValueAndValidity();\n    }\n\n    makeDesiredMappingArray(): any[] {\n        const mappingArray: any[] = [];\n\n        if (this.action == FormAction.ADD) {\n            this.parameterMappingRecordFA.controls.forEach((parameter, index) => {\n                const parameterID = parameter.get('parameterID').value;\n                const mapping = [];\n\n                const isSource = parameter.get('isSource').value;\n                const sourceType = parameter.get('sourceType').value || '';\n                if (isSource) {\n                    mapping.push({\n                        mappingID: null,\n                        type: 'SOURCE',\n                        value: sourceType\n                    });\n                }\n\n                const isLoad = parameter.get('isLoad').value;\n                const loadType = parameter.get('loadType').value || '';\n                if (isLoad) {\n                    mapping.push({\n                        mappingID: null,\n                        type: 'LOAD',\n                        value: loadType\n                    });\n                }\n\n                if (mapping.length > 0) {\n                    mappingArray.push({\n                        parameterID: parameterID,\n                        mapping: mapping\n                    });\n                }\n            });\n        } else if (this.action == FormAction.UPDATE) {\n            if (this.deviceInfo.mappingRecords) {\n                this.deviceInfo.mappingRecords.forEach((record) => {\n                    const parameterID = record.parameterID;\n                    const mapping = record.mapping?.map((mapping) => {\n                        return {\n                            mappingID: mapping.mappingID || null,\n                            type: mapping.type || '',\n                            value: mapping.value || ''\n                        };\n                    }) || [];\n\n                    mappingArray.push({\n                        parameterID: parameterID,\n                        mapping: mapping\n                    });\n                });\n            }\n        }\n        return mappingArray;\n    }\n\n    patchSourceLoadFG() {\n        this.desiredMappingArray.forEach((mappingObject) => {\n            const parameterID = mappingObject.parameterID;\n            const parameterFormControl = this.parameterMappingRecordFA.controls.find(formControl => formControl.get('parameterID').value == parameterID);\n            if (parameterFormControl) {\n                const mapping = mappingObject.mapping;\n                const isSource = mapping.some(value => value.type == 'SOURCE');\n                const isLoad = mapping.some(value => value.type == 'LOAD');\n                const sourceType = mapping.find(value => value.type == 'SOURCE')?.value || '';\n                const loadType = mapping.find(value => value.type == 'LOAD')?.value || '';\n\n                parameterFormControl.patchValue({\n                    isSource,\n                    isLoad,\n                    sourceType,\n                    loadType\n                });\n            }\n        });\n    }\n\n    updateFormControlsState() {\n        this.parameterMappingRecordFA.controls.forEach((parameter, index) => {\n            const isSource = parameter.get('isSource').value;\n            const sourceTypeControl = parameter.get('sourceType');\n            if (isSource) {\n                sourceTypeControl.enable();\n                sourceTypeControl.setValidators([Validators.required]);\n            } else {\n                sourceTypeControl.disable();\n                sourceTypeControl.clearValidators();\n                sourceTypeControl.reset('');\n            }\n            sourceTypeControl.updateValueAndValidity();\n\n            const isLoad = parameter.get('isLoad').value;\n            const loadTypeControl = parameter.get('loadType');\n            if (isLoad) {\n                loadTypeControl.enable();\n                loadTypeControl.setValidators([Validators.required]);\n            } else {\n                loadTypeControl.disable();\n                loadTypeControl.clearValidators();\n                loadTypeControl.reset('');\n            }\n            loadTypeControl.updateValueAndValidity();\n        });\n    }\n\n    updateDesiredMappingArray(): any[] {\n        const mappingArray: any[] = [];\n\n        this.parameterMappingRecordFA.controls.forEach((parameter) => {\n            const parameterID = parameter.get('parameterID').value;\n            const mapping = [];\n\n            const isSource = parameter.get('isSource').value;\n            const sourceType = parameter.get('sourceType').value || '';\n            if (isSource) {\n                mapping.push({\n                    mappingID: null,\n                    type: 'SOURCE',\n                    value: sourceType\n                });\n            }\n\n            const isLoad = parameter.get('isLoad').value;\n            const loadType = parameter.get('loadType').value || '';\n            if (isLoad) {\n                mapping.push({\n                    mappingID: null,\n                    type: 'LOAD',\n                    value: loadType\n                });\n            }\n\n            if (mapping.length > 0) {\n                mappingArray.push({\n                    parameterID: parameterID,\n                    mapping: mapping\n                });\n            }\n        });\n\n        return mappingArray;\n    }\n\n    validateSourceOrLoad() {\n        const formControls = this.parameterMappingRecordFA.controls;\n\n        const validFormControls = formControls.filter(control => {\n            const isSource = control.get('isSource').value;\n            const isLoad = control.get('isLoad').value;\n\n            return isSource || isLoad;\n        });\n\n        if (validFormControls.length == formControls.length) {\n            return true;\n        } else {\n            this.toastrService.openToast(ToastrTitle.WARNING, this.warningMessage, ToastrColor.WARNING);\n            return false;\n        }\n    }\n\n    sourceLoadSubmit() {\n\n        if (this.validateSourceOrLoad()) {\n            if (this.updateFromDialog == true) {\n                this.desiredMappingArray = this.updateDesiredMappingArray();\n\n                if (this.desiredMappingArray.length == 0) {\n                    this.toastrService.openToast(ToastrTitle.WARNING, this.warningMessage, ToastrColor.WARNING);\n                } else {\n                    if (this.sourceLoadFG.invalid) {\n                        this.sourceLoadFG.markAllAsTouched();\n                        this.toastrService.openToast(InvalidForm.INVALID_FORM_TITLE, InvalidForm.INVALID_FORM_MESSAGE, ToastrColor.ERROR);\n                        return;\n                    }\n\n                    this.deviceController.updateSourceLoad(this.orgID, this.layoutID, this.entityID, this.deviceInfo.id, this.desiredMappingArray).subscribe((updateRes: ResponseM) => {\n                        this.dialogRef.close({\n                            result: DialogEnum.SUCCESS_DR,\n                            action: FormAction.UPDATE\n                        })\n                    },\n                        error => {\n                            console.log('error in updateSourceLoad() - ', error);\n                        });\n                }\n            } else {\n                if (this.action == FormAction.ADD) {\n                    this.desiredMappingArray = this.makeDesiredMappingArray();\n                } else if (this.action == FormAction.UPDATE) {\n                    this.desiredMappingArray = this.updateDesiredMappingArray();\n\n                    if (this.desiredMappingArray.length == 0) {\n                        this.toastrService.openToast(ToastrTitle.INFO, this.infoMessage, ToastrColor.INFO);\n                    }\n                }\n\n                if (this.sourceLoadFG.invalid) {\n                    this.sourceLoadFG.markAllAsTouched();\n                    this.toastrService.openToast(InvalidForm.INVALID_FORM_TITLE, InvalidForm.INVALID_FORM_MESSAGE, ToastrColor.ERROR);\n                    return;\n                }\n\n                this.dialogRef.close({\n                    result: DialogEnum.SUCCESS_DR,\n                    sourceLoadMappingRes: this.desiredMappingArray\n                })\n            }\n        }\n    }\n\n    cancel() {\n        if (this.updateFromDialog == true) {\n            if (this.updateDesiredMappingArray().length == 0) {\n                this.toastrService.openToast(ToastrTitle.WARNING, this.warningMessage, ToastrColor.WARNING);\n            } else {\n                this.dialogRef.close({\n                    result: DialogEnum.SUCCESS_DR,\n                    action: FormAction.CANCEL\n                })\n            }\n        } else {\n            if (this.action == FormAction.ADD) {\n                this.toastrService.openToast(ToastrTitle.INFO, this.infoMessage, ToastrColor.INFO);\n            }\n\n            let sourceLoadMappingRes = this.action == FormAction.ADD ? [] : this.makeDesiredMappingArray();\n\n            this.dialogRef.close({\n                result: DialogEnum.CLOSE_DR,\n                sourceLoadMappingRes: sourceLoadMappingRes\n            })\n        }\n    }\n\n}","<div mat-dialog-title>\n    <strong class=\"dialogTitle\">\n        {{ action == FormActionEnum.ADD ? PageTitleEnum.ADD : PageTitleEnum.UPDATE }} Source/Consumer\n    </strong>\n</div>\n<div class=\"matDialogContent\" mat-dialog-content>\n    <form [formGroup]=\"sourceLoadFG\">\n        <ng-container formArrayName=\"parameterMappingRecord\">\n            <div class=\"row\">\n                <div class=\"col-sm-12 mb-3\" *ngFor=\"let param of parameterMappingRecordFA.controls; let i = index\">\n                    <ng-container [formGroupName]=\"i\">\n                        <mat-card class=\"border card cardOverwrite\">\n                            <div class=\"cardTitle\">\n                                {{ getParameterLabel(param.get('parameterID').value) }}\n                            </div>\n                            <div class=\"row mt-2\">\n                                <div class=\"col-sm-4\">\n                                    <mat-checkbox (change)=\"addSourceType($event, i)\" formControlName=\"isSource\">Source</mat-checkbox>\n                                </div>\n                                <div class=\"col-sm-8\">\n                                    <mat-form-field class=\"matFieldWidth100\" [appearance]=\"MaterialFormFieldAppearance.FORM_FIELD_APPEARANCE\">\n                                        <mat-label>Select source type</mat-label>\n\n                                        <mat-select formControlName=\"sourceType\" [disabled]=\"!parameterMappingRecordFA.controls[i].get('isSource').value\"\n                                            required>\n                                            <ng-container *ngIf=\"sourceType && sourceType.length > 0 && sourceType[0]['id']; else noSourceType\">\n                                                <mat-option *ngFor=\"let type of sourceType\" [value]=\"type.id\">\n                                                    {{ type.name }}\n                                                </mat-option>\n                                            </ng-container>\n                                            <ng-template #noSourceType>\n                                                <mat-option disabled>\n                                                    {{ COMMON_CONSTANT.NO_DATA_FOUND }}\n                                                </mat-option>\n                                            </ng-template>\n                                        </mat-select>\n\n                                        <mat-error *ngIf=\"this.parameterMappingRecordFA.controls[i].get('sourceType').hasError('required')\">\n                                            {{ FormErrorEnum.REQUIRED }}\n                                        </mat-error>\n                                    </mat-form-field>\n                                </div>\n                                </div>\n                            <div class=\"row mt-2\">\n                                <div class=\"col-sm-4\">\n                                    <mat-checkbox (change)=\"addLoadType($event, i)\" formControlName=\"isLoad\">Load</mat-checkbox>\n                                </div>\n                                <div class=\"col-sm-8\">\n                                    <mat-form-field class=\"matFieldWidth100\" [appearance]=\"MaterialFormFieldAppearance.FORM_FIELD_APPEARANCE\">\n                                        <mat-label>Select consumer type</mat-label>\n\n                                        <mat-select formControlName=\"loadType\" [disabled]=\"!parameterMappingRecordFA.controls[i].get('isLoad').value\"\n                                            required>\n                                            <ng-container *ngIf=\"loadType && loadType.length > 0 && loadType[0]['id']; else noLoadType\">\n                                                <mat-option *ngFor=\"let type of loadType\" [value]=\"type.id\">\n                                                    {{ type.name }}\n                                                </mat-option>\n                                            </ng-container>\n                                            <ng-template #noLoadType>\n                                                <mat-option disabled>\n                                                    {{ COMMON_CONSTANT.NO_DATA_FOUND }}\n                                                </mat-option>\n                                            </ng-template>\n                                        </mat-select>\n\n                                        <mat-error *ngIf=\"this.parameterMappingRecordFA.controls[i].get('loadType').hasError('required')\">\n                                            {{ FormErrorEnum.REQUIRED }}\n                                        </mat-error>\n                                    </mat-form-field>\n                                </div>\n                            </div>\n                        </mat-card>\n                    </ng-container>\n                </div>\n            </div>\n        </ng-container>\n    </form>\n</div>\n<div mat-dialog-footer align=\"end\">\n    <button class=\"btn btn-sm btn-secondary me-2\" type=\"button\" (click)=\"cancel()\">\n        {{ ButtonLabelEnum.CANCEL_BTN_LABEL }}\n    </button>\n    <button class=\"btn btn-sm btn-success\" type=\"submit\" [ngClass]=\"{'disabled': isEqual}\" (click)=\"sourceLoadSubmit()\">\n        {{ action == FormActionEnum.ADD ? ButtonLabelEnum.ADD_BTN_LABEL : ButtonLabelEnum.UPDATE_BTN_LABEL }}\n    </button>\n</div>","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\n\nimport { MatCardModule } from '@angular/material/card';\nimport { MatIconModule } from '@angular/material/icon';\nimport { MatButtonModule } from '@angular/material/button';\nimport { MatInputModule } from '@angular/material/input';\nimport { MatTooltipModule } from '@angular/material/tooltip';\nimport { MatFormFieldModule } from '@angular/material/form-field';\nimport { MatDialogModule } from '@angular/material/dialog';\nimport { MatSelectModule } from '@angular/material/select';\nimport { MatCheckboxModule } from '@angular/material/checkbox';\n\nimport { SourceLoadComponent } from './source-load.component';\n\n@NgModule({\n    declarations: [\n        SourceLoadComponent\n    ],\n    imports: [\n        CommonModule,\n        FormsModule,\n        ReactiveFormsModule,\n        MatCardModule,\n        MatIconModule,\n        MatFormFieldModule,\n        MatButtonModule,\n        MatInputModule,\n        MatTooltipModule,\n        MatDialogModule,\n        MatSelectModule,\n        MatCheckboxModule\n    ]\n})\nexport class SourceLoadModule { }","import { Component, ElementRef, OnInit, ViewChild } from '@angular/core';\nimport { Router } from '@angular/router';\n\nimport { MatSort } from '@angular/material/sort';\nimport { MatPaginator } from '@angular/material/paginator';\nimport { MatDialog } from '@angular/material/dialog';\n\nimport { merge, fromEvent, of as observableOf } from 'rxjs';\nimport { map, startWith, switchMap, catchError } from \"rxjs/operators\";\n\nimport { faPlus, faEllipsisV } from '@fortawesome/free-solid-svg-icons';\n\nimport { CreateUpdateLayoutComponent } from '../_dialog/create-update/layout/layout.component';\n\n// tsc-library\nimport { StorageService } from '@library/storage-service';\nimport { CommonEvent, DialogEnum, DialogOneComponent, DialogOneEnum, PageM, SearchBarOneComponent, TABLE_CONSTANT, ButtonLabelEnum } from '@library/tsc-common';\nimport { LayoutM, LayoutController } from '@library/layout-service';\n// /tsc-library/\n\n@Component({\n    selector: 'app-page',\n    templateUrl: './page.component.html',\n    styleUrls: ['./page.component.scss']\n})\n\nexport class PageComponent implements OnInit {\n    TABLE_CONSTANT = TABLE_CONSTANT;\n    ButtonLabelEnum = ButtonLabelEnum;\n\n    faPlus = faPlus;\n    faEllipsisV = faEllipsisV;\n\n    orgID: any;\n    displayedColumn: string[] = ['id', 'name', 'description', 'option'];\n    resultLength: number = 0;\n    dataSource: any[] = [];\n    searchFlag: boolean = false;\n    searchValue: string;\n    searchArr: any[] = [];\n\n    @ViewChild('sort') sort: MatSort;\n    @ViewChild('paginator') paginator: MatPaginator;\n    @ViewChild('refreshBtn') refreshBtn: ElementRef;\n    @ViewChild('searchBar') searchBar: SearchBarOneComponent;\n\n    constructor(\n        private router: Router,\n        private storageService: StorageService,\n        private layoutController: LayoutController,\n        private commonEvent: CommonEvent,\n        private dialog: MatDialog,\n    ) { }\n\n    ngOnInit(): void {\n        this.orgID = this.storageService.getStorage('currentOrgID');\n    }\n\n    ngAfterViewInit() {\n        merge(\n            this.paginator.page,\n            this.sort.sortChange,\n            fromEvent(this.refreshBtn.nativeElement, 'click')\n        ).pipe(\n            startWith({}),\n            switchMap((): any => {\n                this.searchArr = [];\n                if (this.searchFlag) {\n                    this.searchArr.push('name:' + this.searchValue)\n                }\n\n                return this.layoutController.getLayoutByPage(\n                    this.paginator.pageIndex,\n                    this.paginator.pageSize,\n                    this.sort.active,\n                    this.sort.direction,\n                    this.searchArr,\n                    this.orgID\n                ).pipe(catchError(() => observableOf(null)));\n            }),\n            map((response: PageM<LayoutM>): any => {\n                if (response == null) {\n                    this.resultLength = 0;\n                    return [];\n                }\n                this.resultLength = response[\"totalCount\"];\n                return response[\"records\"];\n            })\n        ).subscribe((dataSource) => {\n            this.dataSource = dataSource;\n        });\n    }\n\n    searchFn(value: string) {\n        this.searchFlag = true;\n        this.searchValue = value;\n        if (value.length == 0) {\n            this.resetSearch();\n        } else {\n            this.paginator.pageIndex = 0;\n        }\n        this.refreshBtn.nativeElement.click();\n    }\n\n    resetSearch() {\n        this.searchFlag = false;\n        this.searchBar.searchClear();\n    }\n\n    navigateToViewPage(id) {\n        this.router.navigate([`layout/${id}/list`]);\n    }\n\n    openCreateUpdateLayoutDialog(action, layoutID) {\n        let dialogRef;\n        if (action == 'create') {\n            dialogRef = this.dialog.open(CreateUpdateLayoutComponent, {\n                data: {\n                    action: action\n                },\n                minWidth: '550px',\n                maxWidth: '550px'\n            });\n            dialogRef.afterClosed().subscribe((dialogRes) => {\n                if (dialogRes.result == DialogEnum.SUCCESS_DR) {\n                    // Emit the layoutChange event\n                    this.commonEvent.layoutChange.next('YES');\n\n                    this.router.navigate([`layout/${dialogRes.layoutID}/list`]);\n                }\n            })\n        } else {\n            dialogRef = this.dialog.open(CreateUpdateLayoutComponent, {\n                data: {\n                    action: action,\n                    layoutID: layoutID\n                },\n                minWidth: '550px',\n                maxWidth: '550px'\n            });\n            dialogRef.afterClosed().subscribe((dialogRes) => {\n                if (dialogRes.result == DialogEnum.SUCCESS_DR) {\n                    // Emit the layoutChange event\n                    this.commonEvent.layoutChange.next('YES');\n\n                    window.location.reload();\n                }\n            })\n        }\n    }\n\n    openDeleteLayoutDialog(layoutID, layoutName) {\n        const dialog = this.dialog.open(DialogOneComponent, {\n            minWidth: '450px',\n            maxWidth: '450px',\n            data: {\n                type: DialogOneEnum.DELETE,\n                icon: 'dangerous',\n                header: 'Delete layout?',\n                body: '<b>' + layoutName + '</b>' + ' will be deleted permanently.</br></br>Are you sure you want to continue?',\n                buttonOne: ButtonLabelEnum.CANCEL_BTN_LABEL,\n                buttonTwo: ButtonLabelEnum.DELETE_BTN_LABEL\n            }\n        });\n        dialog.afterClosed().subscribe(res => {\n            if (res) {\n                this.deleteLayout(layoutID);\n            }\n        })\n    }\n\n    deleteLayout(layoutID) {\n        this.layoutController.deleteLayout(this.orgID, layoutID).subscribe((deleteRes) => {\n            // Emit the layoutChange event\n            this.commonEvent.layoutChange.next('YES');\n\n            this.refreshBtn.nativeElement.click();\n        });\n    }\n}","<div class=\"card main-card cardOverwrite h100\">\n    <div class=\"headerContainer\">\n        <div class=\"headerLeftContainer\">\n            <div class=\"pageTitle\">Layout</div>\n        </div>\n        <div class=\"headerRightContainer\">\n            <div class=\"headerRightContainerInner\">\n                <lib-search-bar-one class=\"me-3\" #searchBar searchBy=\"name\" (emitSearch)=\"searchFn($event)\">\n                </lib-search-bar-one>\n                <a class=\"btn btn-sm btn-success btnBase\" matRipple (click)=\"openCreateUpdateLayoutDialog('create', null)\">\n                    <fa-icon [icon]=\"faPlus\"></fa-icon>&nbsp; Layout\n                </a>\n            </div>\n        </div>\n    </div>\n\n    <button #refreshBtn class=\"d-none\"></button>\n\n    <table mat-table [dataSource]=\"dataSource\" #sort=\"matSort\" matSort matSortActive=\"id\" matSortDirection=\"asc\"\n        matSortDisableClear>\n\n        <ng-container matColumnDef=\"id\">\n            <th class=\"columnWidth1 px-3\" mat-header-cell *matHeaderCellDef mat-sort-header disableClear>\n                ID\n            </th>\n            <td class=\"columnWidth1\" mat-cell *matCellDef=\"let row\" (click)=\"navigateToViewPage(row['id'])\">\n                {{ row['id'] }}\n            </td>\n        </ng-container>\n\n        <ng-container matColumnDef=\"name\">\n            <th class=\"columnWidth2 px-3\" mat-header-cell *matHeaderCellDef> Name </th>\n            <td class=\"columnWidth2 px-3\" mat-cell *matCellDef=\"let row\"\n                [matTooltip]=\"row?.['name']?.length>24? row['name']: ''\" matTooltipPosition=\"above\"\n                matTooltipClass=\"nameTooltip\" (click)=\"navigateToViewPage(row['id'])\">\n                {{ row?.['name'] | dotdotdot:24 }}\n            </td>\n        </ng-container>\n\n        <ng-container matColumnDef=\"description\">\n            <th class=\"columnWidth2 px-3\" mat-header-cell *matHeaderCellDef> Description </th>\n            <td class=\"columnWidth2 px-3\" mat-cell *matCellDef=\"let row\"\n                [matTooltip]=\"row?.['description']?.length>24? row['description']: ''\" matTooltipPosition=\"above\"\n                matTooltipClass=\"nameTooltip\" (click)=\"navigateToViewPage(row['id'])\">\n                {{ row?.['description'] | dotdotdot:24 }}\n            </td>\n        </ng-container>\n\n        <ng-container matColumnDef=\"option\">\n            <th class=\"columnWidth3\" mat-header-cell *matHeaderCellDef> Action </th>\n            <td class=\"columnWidth3 text-center\" mat-cell *matCellDef=\"let row\">\n                <div class=\"d-flex align-items-center\">\n                    <div class=\"btn-group\" ngbDropdown placement=\"left\">\n                        <button type=\"button\" ngbDropdownToggle class=\"dropdown-after dropdownAfter btn\">\n                            <fa-icon [icon]=\"faEllipsisV\"></fa-icon>\n                        </button>\n                        <div ngbDropdownMenu>\n                            <button class=\"dropdown-item\" (click)=\"openCreateUpdateLayoutDialog('update', row.id)\">\n                                {{ ButtonLabelEnum.UPDATE_BTN_LABEL }}\n                            </button>\n                            <!-- <button class=\"btn btn-outline-danger rounded-0 dropdown-item\" (click)=\"openDeleteLayoutDialog(row.id, row.name)\">\n                                {{ ButtonLabelEnum.DELETE_BTN_LABEL }}\n                            </button> -->\n                        </div>\n                    </div>\n                </div>\n            </td>\n        </ng-container>\n\n        <tr mat-header-row *matHeaderRowDef=\"displayedColumn\"></tr>\n        <tr mat-row *matRowDef=\"let row; columns: displayedColumn;\" class=\"data-row\"></tr>\n\n        <tr class=\"mat-row\" *matNoDataRow>\n            <td class=\"mat-cell text-center\" [attr.colspan]=\"displayedColumn.length\">\n                {{ TABLE_CONSTANT.TABLE_NO_DATA }}\n            </td>\n        </tr>\n    </table>\n\n    <mat-paginator #paginator class=\"roundedBorder\" showFirstLastButtons [length]=\"resultLength\"\n        [pageSize]=\"TABLE_CONSTANT.DEFAULT_PAGE_SIZE\" [pageSizeOptions]=\"TABLE_CONSTANT.PAGE_SIZE_OPTION\">\n    </mat-paginator>\n</div>","import { NgModule } from '@angular/core';\nimport { RouterModule, Routes } from '@angular/router';\n\nimport { PageComponent } from './page.component';\n\nconst routes: Routes = [\n    {\n        path: '',\n        component: PageComponent\n    }\n];\n\n@NgModule({\n    imports: [RouterModule.forChild(routes)],\n    exports: [RouterModule]\n})\nexport class PageRoutingModule { }","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\n\nimport { MatIconModule } from '@angular/material/icon';\nimport { MatButtonModule } from '@angular/material/button';\nimport { MatRippleModule } from '@angular/material/core';\nimport { MatTableModule } from '@angular/material/table';\nimport { MatPaginatorModule } from '@angular/material/paginator';\nimport { MatSortModule } from '@angular/material/sort';\nimport { MatDialogModule } from '@angular/material/dialog';\nimport { MatTooltipModule } from '@angular/material/tooltip';\n\nimport { NgbModule } from '@ng-bootstrap/ng-bootstrap';\nimport { FontAwesomeModule } from '@fortawesome/angular-fontawesome';\n\nimport { PageRoutingModule } from './page-routing.module';\nimport { PageComponent } from './page.component';\n\n// tsc-library\nimport { SearchBarOneModule, EllipsisPipeModule } from '@library/tsc-common';\n// /tsc-library/\n\n\n@NgModule({\n    declarations: [\n        PageComponent\n    ],\n    imports: [\n        CommonModule,\n        PageRoutingModule,\n        SearchBarOneModule,\n        EllipsisPipeModule,\n        NgbModule,\n        FontAwesomeModule,\n        MatIconModule,\n        MatButtonModule,\n        MatRippleModule,\n        MatTableModule,\n        MatPaginatorModule,\n        MatSortModule,\n        MatDialogModule,\n        MatTooltipModule\n    ]\n})\nexport class PageModule { }\n","import { Component, OnInit } from '@angular/core';\nimport { ActivatedRoute } from '@angular/router';\n\nimport { EChartsOption } from 'echarts';\n\nimport { ParameterEntity, ParameterEntityM } from '../../../model/entity.model';\n\nimport { EntityService } from '../../../service/entity.service';\n\n// tsc-library\nimport { StorageService } from '@library/storage-service';\n// /tsc-library/\n\n@Component({\n    selector: 'app-chart',\n    templateUrl: './chart.component.html',\n    styles: [\n    ]\n})\nexport class ChartComponent implements OnInit {\n\n    orgID: any;\n    layoutID: any;\n\n    entityDeviceM = new ParameterEntity();\n\n    allowUpdateEntityTree: boolean = false;\n    chartDataOption: EChartsOption;\n\n    constructor(\n        private activatedRoute: ActivatedRoute,\n        private storageService: StorageService,\n        private entityService: EntityService,\n    ) { }\n\n    ngOnInit(): void {\n        this.orgID = this.storageService.getStorage('currentOrgID');\n\n        this.activatedRoute.parent.parent.paramMap.subscribe((params) => {\n            this.layoutID = params.get('layoutID');\n\n            this.getEntitiesWithDevicesByLayoutID();\n        });\n    }\n\n    async getEntitiesWithDevicesByLayoutID() {\n        let requestBody = {\n            'entityType': ['ALL']\n        };\n\n        this.entityDeviceM = <ParameterEntityM>await this.entityService.getEntitiesWithDevicesByLayoutID(this.orgID, this.layoutID, requestBody, 'NO');\n\n        if (this.entityDeviceM) {\n            this.drawChart();\n        }\n    }\n\n    drawChart() {\n        const convertNode = (node) => ({\n            name: node.name,\n            children: node.children ? node.children.map(convertNode) : [],\n            type: node.type\n        });\n        const chartData = convertNode(this.entityDeviceM);\n\n        this.chartDataOption = {\n            tooltip: {\n                trigger: 'item',\n                triggerOn: 'mousemove'\n            },\n            series: [\n                {\n                    type: 'tree',\n                    id: 0,\n                    name: 'Device',\n                    data: [chartData],\n                    top: '10%',\n                    left: '15%',\n                    bottom: '2%',\n                    right: '15%',\n                    symbolSize: 7,\n                    edgeShape: 'polyline',\n                    edgeForkPosition: '63%',\n                    initialTreeDepth: 999999,\n                    lineStyle: {\n                        width: 2\n                    },\n                    label: {\n                        backgroundColor: '#fff',\n                        position: 'left',\n                        verticalAlign: 'middle',\n                        align: 'right'\n                    },\n                    leaves: {\n                        label: {\n                            position: 'right',\n                            verticalAlign: 'middle',\n                            align: 'left',\n                            // color: 'green',\n                        }\n                    },\n                    emphasis: {\n                        focus: 'descendant'\n                    },\n                    expandAndCollapse: true,\n                    animationDuration: 550,\n                    animationDurationUpdate: 750\n                }\n            ]\n        }\n\n    }\n\n}\n","<div class=\"card main-card cardOverwrite h100\">\n    <div class=\"card-body\">\n        <div class=\"row\">\n            <div class=\"col-sm-12\">\n                <div echarts [options]=\"chartDataOption\"></div>\n            </div>\n        </div>\n    </div>\n</div>","import { NgModule } from '@angular/core';\nimport { RouterModule, Routes } from '@angular/router';\n\nimport { ChartComponent } from './chart.component';\n\nconst routes: Routes = [\n    {\n        path: '',\n        component: ChartComponent\n    }\n];\n\n@NgModule({\n    imports: [RouterModule.forChild(routes)],\n    exports: [RouterModule]\n})\nexport class ChartRoutingModule { }\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\n\nimport { NgxEchartsModule } from 'ngx-echarts';\n\nimport { ChartRoutingModule } from './chart-routing.module';\nimport { ChartComponent } from './chart.component';\n\n@NgModule({\n    declarations: [\n        ChartComponent\n    ],\n    imports: [\n        CommonModule,\n        ChartRoutingModule,\n        NgxEchartsModule.forRoot({\n            echarts: () => import('echarts')\n        })\n    ]\n})\nexport class ChartModule { }","import { Component, OnInit } from '@angular/core';\nimport { ActivatedRoute, Router } from '@angular/router';\nimport { MatDialog } from '@angular/material/dialog';\n\nimport { ParameterEntity } from '../../../model/entity.model';\n\nimport { CreateUpdateEntityComponent } from '../_dialog/create-update/entity/entity.component';\n\nimport { EntityController } from '../../../controller/entity.controller';\n\n// tsc-library\nimport { StorageService } from '@library/storage-service';\nimport { ButtonLabelEnum, DialogEnum, DialogOneComponent, DialogOneEnum, ResponseM } from '@library/tsc-common';\n// /tsc-library/\n\n@Component({\n    selector: 'app-list',\n    templateUrl: './list.component.html',\n    styles: [\n    ]\n})\nexport class ListComponent implements OnInit {\n\n    orgID: any;\n    layoutID: any;\n\n    entities = [new ParameterEntity()];\n\n    constructor(\n        private router: Router,\n        private activatedRoute: ActivatedRoute,\n        private storageService: StorageService,\n        private entityController: EntityController,\n        private dialog: MatDialog,\n    ) { }\n\n    ngOnInit(): void {\n        this.orgID = this.storageService.getStorage('currentOrgID');\n\n        this.activatedRoute.parent.parent.paramMap.subscribe((params) => {\n            this.layoutID = params.get('layoutID');\n\n            this.getEntitiesByLayoutID();\n        });\n    }\n\n    getEntitiesByLayoutID() {\n        this.entityController.getEntitiesByLayoutID(this.orgID, this.layoutID)\n            .subscribe((entityTreeRes: any) => {\n                this.entities = entityTreeRes;\n            },\n                error => {\n                    console.log('error in getEntitiesByLayoutID() -', error);\n                });\n    }\n\n    hasContent(entity: any): boolean {\n        return entity && entity.children && entity.children.length > 0;\n    }\n\n    mapDevice(entityID) {\n        this.router.navigate([`layout/${this.layoutID}/entity/${entityID}/map-device/add`]);\n    }\n\n    viewMappedDevice(entityID) {\n        this.router.navigate([`layout/${this.layoutID}/entity/${entityID}/map-device/view`]);\n    }\n\n    openEntityDialog(entityID, action) {\n        const dialog = this.dialog.open(CreateUpdateEntityComponent,\n            {\n                data: {\n                    action: action,\n                    entityID: entityID,\n                    layoutID: this.layoutID,\n                },\n                minWidth: '500px',\n                maxWidth: '500px',\n            });\n        dialog.afterClosed()\n            .subscribe((result) => {\n                if (result == DialogEnum.SUCCESS_DR) {\n                    this.getEntitiesByLayoutID();\n                }\n            })\n    }\n\n    openDeleteDialog(entityID, entityName) {\n        const dialog = this.dialog.open(DialogOneComponent, {\n            minWidth: '450px',\n            maxWidth: '450px',\n            data: {\n                type: DialogOneEnum.DELETE,\n                icon: 'dangerous',\n                header: 'Delete entity?',\n                body: 'This will delete the entity <b>' + entityName + '</b> and all its children entities.</br></br>Are you sure you want to continue?',\n                buttonOne: ButtonLabelEnum.CANCEL_BTN_LABEL,\n                buttonTwo: ButtonLabelEnum.DELETE_BTN_LABEL\n            }\n        });\n        dialog.afterClosed().subscribe(res => {\n            if (res) {\n                this.deleteEntity(entityID);\n            }\n        })\n    }\n\n    deleteEntity(entityID) {\n        this.entityController.deleteEntity(this.orgID, this.layoutID, entityID).subscribe((deleteRes: ResponseM) => {\n            this.getEntitiesByLayoutID();\n        });\n    }\n\n}\n","<div class=\"card main-card cardOverwrite h100\">\n    <div class=\"card-body\">\n        <div class=\"row\">\n            <div class=\"col-sm-12\">\n                <!-- template call for entityTemplate -->\n                <mat-accordion>\n                    <ng-container *ngFor=\"let entity of entities\">\n                        <ng-container *ngTemplateOutlet=\"entityTemplate; \n                            context: {\n                                entity: entity,\n                                panelTitleClass: 'fw-bold',\n                                expansionPanelClass : 'cardBackgroundColor',\n                                expanded: hasContent(entity),\n                                allowUpdateDelete: false\n                            }\">\n                        </ng-container>\n                    </ng-container>\n                </mat-accordion>\n                <!-- /template call for entityTemplate/ -->\n\n                <!-- template for recursive entity -->\n                <ng-template #entityTemplate let-entity=\"entity\" let-panelTitleClass=\"panelTitleClass\"\n                    let-expansionPanelClass=\"expansionPanelClass\" let-expanded=\"expanded\" let-allowUpdateDelete=\"allowUpdateDelete\">\n                    <mat-expansion-panel class=\"mt-2 cardOverwrite\" [class]=\"expansionPanelClass\" [expanded]=\"expanded\"\n                        [disabled]=\"!hasContent(entity)\" [hideToggle]=\"!hasContent(entity)\">\n\n                        <mat-expansion-panel-header class=\"matAccRightAlignedHeader\">\n                            <mat-panel-title>\n                                <div class=\"d-flex align-items-center\">\n                                    <span [class]=\"panelTitleClass\">\n                                        {{ entity.name }}\n                                    </span> <span class=\"badge rounded-pill info ms-2\">\n                                        {{ entity.type }}\n                                    </span>\n                                </div>\n                            </mat-panel-title>\n                            <mat-panel-description class=\"float-end\">\n                                <span class=\"material-symbols-outlined text-primary me-3\" #tooltip=\"matTooltip\" matTooltipPosition=\"above\"\n                                    matTooltipClass=\"nameTooltip\" matTooltip=\"Add entity\"\n                                    (click)=\"openEntityDialog(entity.id, 'create'); $event.stopPropagation()\">\n                                    add_circle\n                                </span>\n                                <span class=\"material-symbols-outlined text-primary me-3\" #tooltip=\"matTooltip\" matTooltipPosition=\"above\"\n                                    matTooltipClass=\"nameTooltip\" matTooltip=\"Map device\" (click)=\"mapDevice(entity.id); $event.stopPropagation()\">\n                                    devices\n                                </span>\n                                <span class=\"material-symbols-outlined text-secondary me-3\" #tooltip=\"matTooltip\"\n                                    matTooltipPosition=\"above\" matTooltipClass=\"nameTooltip\" matTooltip=\"View mapped device\"\n                                    (click)=\"viewMappedDevice(entity.id); $event.stopPropagation()\">\n                                    visibility\n                                </span>\n                                <span class=\"material-symbols-outlined text-secondary me-3\" *ngIf=\"allowUpdateDelete\" #tooltip=\"matTooltip\"\n                                    matTooltipPosition=\"above\" matTooltipClass=\"nameTooltip\" matTooltip=\"Edit entity\"\n                                    (click)=\"openEntityDialog(entity.id, 'update'); $event.stopPropagation()\">\n                                    edit_square\n                                </span>\n                                <span class=\"material-symbols-outlined text-danger me-3\" *ngIf=\"allowUpdateDelete\" #tooltip=\"matTooltip\"\n                                    matTooltipPosition=\"above\" matTooltipClass=\"nameTooltip\" matTooltip=\"Delete entity\"\n                                    (click)=\"openDeleteDialog(entity.id, entity.name); $event.stopPropagation()\">\n                                    delete\n                                </span>\n                            </mat-panel-description>\n                        </mat-expansion-panel-header>\n\n                        <ng-container *ngIf=\"entity.children && entity.children.length > 0\">\n                            <ng-container *ngFor=\"let child of entity.children\">\n                                <ng-container *ngTemplateOutlet=\"entityTemplate; \n                                        context:{ \n                                            entity: child,\n                                            panelTitleClass: 'text-dark',\n                                            expansionPanelClass : 'border',\n                                            expanded: 'false',\n                                            allowUpdateDelete: true\n                                        }\">\n                                </ng-container>\n                            </ng-container>\n                        </ng-container>\n\n                    </mat-expansion-panel>\n                </ng-template>\n                <!-- /template for recursive entity/ -->\n            </div>\n        </div>\n    </div>\n</div>","import { NgModule } from '@angular/core';\nimport { RouterModule, Routes } from '@angular/router';\n\nimport { ListComponent } from './list.component';\n\nconst routes: Routes = [\n    {\n        path: '',\n        component: ListComponent\n    }\n];\n\n@NgModule({\n    imports: [RouterModule.forChild(routes)],\n    exports: [RouterModule]\n})\nexport class ListRoutingModule { }\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\n\nimport { MatCardModule } from '@angular/material/card';\nimport { MatIconModule } from '@angular/material/icon';\nimport { MatFormFieldModule } from '@angular/material/form-field';\nimport { MatButtonModule } from '@angular/material/button';\nimport { MatTooltipModule } from '@angular/material/tooltip';\nimport { MatDialogModule } from '@angular/material/dialog';\nimport { MatExpansionModule } from '@angular/material/expansion';\n\nimport { CreateUpdateEntityModule } from '../_dialog/create-update/entity/entity.module';\n\nimport { ListRoutingModule } from './list-routing.module';\nimport { ListComponent } from './list.component';\n\n@NgModule({\n    declarations: [\n        ListComponent\n    ],\n    imports: [\n        CommonModule,\n        ListRoutingModule,\n        CreateUpdateEntityModule,\n        FormsModule,\n        ReactiveFormsModule,\n        MatCardModule,\n        MatIconModule,\n        MatFormFieldModule,\n        MatButtonModule,\n        MatTooltipModule,\n        MatDialogModule,\n        MatExpansionModule\n    ]\n})\nexport class ListModule { }\n","import { NgModule } from '@angular/core';\nimport { RouterModule, Routes } from '@angular/router';\n\nconst routes: Routes = [];\n\n@NgModule({\n    imports: [RouterModule.forChild(routes)],\n    exports: [RouterModule]\n})\nexport class TabRoutingModule { }\n","import { Component, OnInit } from '@angular/core';\nimport { ActivatedRoute, NavigationEnd, Router } from '@angular/router';\n\n// tsc-library\nimport { StorageService } from '@library/storage-service';\nimport { Layout, LayoutM, LayoutService } from '@library/layout-service';\n// /tsc-library/\n\n@Component({\n    selector: 'app-tab',\n    templateUrl: './tab.component.html',\n    styles: [\n    ]\n})\nexport class TabComponent implements OnInit {\n\n    orgID: any;\n    layoutID: any;\n    activeLink: any;\n\n    layoutM = new Layout();\n\n    tab: any = [];\n\n    constructor(\n        private router: Router,\n        private activatedRoute: ActivatedRoute,\n        private storageService: StorageService,\n        private layoutService: LayoutService\n    ) { }\n\n    ngOnInit(): void {\n        this.orgID = this.storageService.getStorage('currentOrgID');\n\n        this.activatedRoute.paramMap.subscribe((params) => {\n            this.layoutID = params.get('layoutID');\n\n            this.getLayoutByID();\n\n            this.tab = [\n                {\n                    icon: 'list',\n                    label: 'List Representation',\n                    routerLink: `/layout/${this.layoutID}/list`\n                },\n                {\n                    icon: 'grid_view',\n                    label: 'Chart Representation',\n                    routerLink: `/layout/${this.layoutID}/chart`\n                }\n            ];\n\n            this.setActiveLink();\n        });\n\n        this.router.events.subscribe((val) => {\n            if (val instanceof NavigationEnd) {\n                this.setActiveLink();\n            }\n        });\n    }\n\n    async getLayoutByID() {\n        this.layoutM = <LayoutM>await this.layoutService.getLayoutByID(this.orgID, this.layoutID);\n    }\n\n    setActiveLink(): void {\n        let currentPath = window.location.pathname;\n\n        for (let i = 0; i < this.tab.length; i++) {\n            if (currentPath.includes(this.tab[i].routerLink)) {\n                this.activeLink = this.tab[i].routerLink;\n                break;\n            }\n        }\n    }\n\n}\n","<div class=\"card main-card cardOverwrite h100\">\n    <div class=\"headerContainer\">\n        <div class=\"headerLeftContainer\">\n            <div class=\"pageTitle\">Layout <span *ngIf=\"layoutM\">\n                    - ({{ layoutM?.name }})\n                </span></div>\n        </div>\n    </div>\n\n    <nav mat-tab-nav-bar>\n        <ng-container *ngFor=\"let tabs of tab; let i = index;\">\n            <a mat-tab-link [routerLink]=\"tabs.routerLink\" (click)=\"activeLink = tabs.routerLink\"\n                [active]=\"activeLink == tabs.routerLink\">\n                <div class=\"d-flex align-items-center\">\n                    <span class=\"material-symbols-outlined me-2\">\n                        {{ tabs.icon }}\n                    </span>\n                    {{ tabs.label }}\n                </div>\n            </a>\n        </ng-container>\n    </nav>\n    <router-outlet></router-outlet>\n\n</div>","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { MatTabsModule } from '@angular/material/tabs';\n\nimport { NgbModule } from '@ng-bootstrap/ng-bootstrap';\n\nimport { TabRoutingModule } from './tab-routing.module';\nimport { TabComponent } from './tab.component';\n\n@NgModule({\n    declarations: [\n        TabComponent\n    ],\n    imports: [\n        CommonModule,\n        TabRoutingModule,\n        NgbModule,\n        MatTabsModule,\n    ]\n})\nexport class TabModule { }\n","import { Component, ElementRef, OnInit, ViewChild } from '@angular/core';\nimport { ActivatedRoute } from '@angular/router';\nimport { FormArray, FormBuilder, FormGroup } from '@angular/forms';\n\nimport { MatPaginator } from '@angular/material/paginator';\nimport { MatSort } from '@angular/material/sort';\nimport { MatDialog } from '@angular/material/dialog';\n\nimport { isEqual } from 'lodash';\n\nimport { merge, fromEvent, of as observableOf } from 'rxjs';\nimport { catchError, filter, map, startWith, switchMap, tap } from 'rxjs/operators';\n\nimport { Entity } from '../../../../model/entity.model';\nimport { DeviceMappingM } from '../../../../model/device.model';\nimport { SourceConsumerConfigure, SourceConsumerConfigureM } from '../../../../model/source-consumer.model';\n\nimport { SourceLoadComponent } from '../../_dialog/create-update/source-load/source-load.component';\n\nimport { DeviceController } from '../../../../controller/device.controller';\nimport { SourceController } from '../../../../controller/source.controller';\n\nimport { EntityService } from '../../../../service/entity.service';\n\n// tsc-library\nimport { StorageService } from '@library/storage-service';\nimport { ButtonLabelEnum, DialogOneComponent, DialogOneEnum, PageM, ResponseM, SearchBarOneComponent, TABLE_CONSTANT, TSCCommonService } from '@library/tsc-common';\n// /tsc-library/\n\n@Component({\n    selector: 'app-add',\n    templateUrl: './add.component.html',\n    styleUrls: ['./add.component.scss']\n})\nexport class AddComponent implements OnInit {\n\n    TABLE_CONSTANT = TABLE_CONSTANT;\n    ButtonLabelEnum = ButtonLabelEnum;\n\n    orgID: any;\n    layoutID: any;\n    entityID: any;\n    searchValue: string;\n    intialObject: any;\n    redirectUrl: string;\n    searchArr: any[] = [];\n    dataSource: any[] = [];\n    searchFlag: boolean = false;\n    resultLength: number = 0;\n    isEqual: boolean = true;\n    showEdit: boolean = false;\n    allowBackendCall: boolean = true;\n    entityM = new Entity();\n    sourceConsumerConfiguredM = new SourceConsumerConfigure();\n\n    initialMappingRecords: { [id: number]: any[] } = {};\n\n    displayedColumn: string[] = ['mapDevice', 'id', 'name', 'make', 'model', 'type'];\n\n    deviceMappingFG: FormGroup;\n\n    @ViewChild('sort') sort: MatSort;\n    @ViewChild('paginator') paginator: MatPaginator;\n    @ViewChild('refreshBtn') refreshBtn: ElementRef;\n    @ViewChild('searchBar') searchBar: SearchBarOneComponent;\n\n    constructor(\n        private activatedRoute: ActivatedRoute,\n        private storageService: StorageService,\n        private tscCommonService: TSCCommonService,\n        private entityService: EntityService,\n        private deviceController: DeviceController,\n        private sourceController: SourceController,\n        private deviceMappingFB: FormBuilder,\n        private dialog: MatDialog\n    ) { }\n\n    ngOnInit(): void {\n        this.orgID = this.storageService.getStorage('currentOrgID');\n\n        this.activatedRoute.params.subscribe((param) => {\n            this.layoutID = param.layoutID;\n            this.entityID = param.entityID;\n\n            this.getEntityByID();\n        })\n\n        this.getSourceConsumerConfig();\n        this.deviceMappingInit();\n    }\n\n    getSourceConsumerConfig() {\n        this.sourceController.getSourceConsumerConfig(this.orgID).subscribe((res: SourceConsumerConfigureM) => {\n            this.sourceConsumerConfiguredM = res;\n            this.redirectUrl = this.getRedirectUrl();\n        },\n            error => console.log('Error:', error)\n        );\n    }\n\n    getRedirectUrl() {\n        if (!this.sourceConsumerConfiguredM.sourceTypeConfigured) {\n            return 'preference/source/create';\n        }\n\n        if (!this.sourceConsumerConfiguredM.consumerTypeConfigured) {\n            return 'preference/consumer/create';\n        }\n\n        return 'preference/source/page';\n    }\n\n    async getEntityByID() {\n        this.entityM = await this.entityService.getEntityByID(this.orgID, this.layoutID, this.entityID);\n    }\n\n    deviceMappingInit() {\n        this.deviceMappingFG = this.deviceMappingFB.group({\n            deviceRecords: this.deviceMappingFB.array([])\n        });\n    }\n\n    get deviceRecords() {\n        return this.deviceMappingFG.get('deviceRecords') as FormArray;\n    }\n\n    ngAfterViewInit() {\n        merge(\n            this.paginator.page,\n            this.sort.sortChange,\n            fromEvent(this.refreshBtn.nativeElement, 'click')\n        ).pipe(\n            startWith({}),\n            filter(() => this.handleBackendTrigger()),\n            switchMap(() => this.getUnmappedDevice())\n        ).subscribe();\n    }\n\n    getUnmappedDevice() {\n\n        this.deviceMappingFG.valueChanges.subscribe(() => {\n            this.isEqual = isEqual(this.intialObject, this.deviceMappingFG.value);\n        });\n\n        this.searchArr = [];\n        if (this.searchFlag) {\n            this.searchArr.push('name:' + this.searchValue)\n        }\n\n        return this.deviceController.getUnMappedDevices(\n            this.paginator.pageIndex,\n            this.paginator.pageSize,\n            this.sort.active,\n            this.sort.direction,\n            this.searchArr,\n            this.orgID,\n            this.layoutID,\n            this.entityID,\n        ).pipe(\n            catchError(() => observableOf(null)),\n            map((response: PageM<DeviceMappingM>) => {\n                if (response == null) {\n                    this.resultLength = 0;\n                    return [];\n                }\n                this.resultLength = response[\"totalCount\"];\n                return response[\"records\"];\n            }),\n            tap((dataSource) => {\n                this.dataSource = dataSource;\n\n                this.deviceMappingFG.reset();\n                this.deviceRecords.clear();\n\n                dataSource.forEach((record, index) => {\n                    this.deviceRecords.push(this.deviceMappingFB.group({\n                        id: [record.id],\n                        isDeviceMapped: [false],\n                        type: [record.type],\n                        parameter: [record.parameter],\n                        mappingRecords: this.deviceMappingFB.array([])\n                    }));\n                });\n\n                this.intialObject = this.deviceMappingFG.value;\n                this.isEqual = true;\n\n            })\n        );\n    }\n\n    handleBackendTrigger(): boolean {\n        if (this.intialObject != undefined && !isEqual(this.intialObject, this.deviceMappingFG.value)) {\n            this.openConfirmationDialog();\n            return false;\n        }\n        return true;\n    }\n\n    openConfirmationDialog() {\n        const dialog = this.dialog.open(DialogOneComponent, {\n            minWidth: '450px',\n            maxWidth: '450px',\n            data: {\n                type: DialogOneEnum.CONFIRMATION,\n                icon: 'warning',\n                header: 'Confirm?',\n                body: 'Changes made will not be saved. Are you sure you want to proceed?',\n                buttonOne: ButtonLabelEnum.NO_BTN_LABEL,\n                buttonTwo: ButtonLabelEnum.YES_BTN_LABEL\n            }\n        });\n        dialog.afterClosed().subscribe(res => {\n            this.allowBackendCall = res;\n            if (this.allowBackendCall == true) {\n                this.deviceMappingFG.reset();\n                this.getUnmappedDevice().subscribe();\n            } else {\n                this.searchBar.searchClear();\n            }\n        })\n    }\n\n    searchFn(value: string) {\n        this.searchFlag = true;\n        this.searchValue = value;\n        if (value.length == 0) {\n            this.resetSearch();\n        } else {\n            this.paginator.pageIndex = 0;\n        }\n        this.refreshBtn.nativeElement.click();\n    }\n\n    resetSearch() {\n        this.searchFlag = false;\n        this.searchBar.searchClear();\n    }\n\n    onCheckboxChange(index: number, isChecked: boolean) {\n        const deviceGroup = this.deviceRecords.at(index);\n        deviceGroup.get('isDeviceMapped').setValue(isChecked);\n\n        if (isChecked) {\n            if (deviceGroup.get('isDeviceMapped').value && deviceGroup.get('type').value == 'METER' && deviceGroup.get('parameter').value.length > 0) {\n                this.openSourceLoadDialog(deviceGroup.value);\n            }\n        } else {\n            const mappingRecordsArray = deviceGroup.get('mappingRecords') as FormArray;\n            mappingRecordsArray.clear();\n        }\n    }\n\n    openSourceLoadDialog(device) {\n        const dialog = this.dialog.open(SourceLoadComponent,\n            {\n                data: {\n                    deviceInfo: device,\n                    entityID: this.entityID\n                },\n                minWidth: '40vw',\n                maxWidth: '40vw',\n                height: '100%',\n                position: { right: '-2px', top: '0px' },\n            });\n        dialog.afterClosed()\n            .subscribe((dialogRes) => {\n                const deviceIndex = this.findIndexByDeviceID(device.id);\n\n                if (dialogRes && dialogRes.sourceLoadMappingRes) {\n                    if (deviceIndex != -1) {\n                        const deviceRecordsControl = this.deviceMappingFG.get('deviceRecords') as FormArray;\n                        const mappingRecordsControl = deviceRecordsControl.at(deviceIndex).get('mappingRecords') as FormArray;\n                        mappingRecordsControl.clear();\n\n                        dialogRes.sourceLoadMappingRes.forEach(mappingItem => {\n                            const parameterID = mappingItem.parameterID;\n                            const mappings = mappingItem.mapping.map(mapping => {\n                                return this.deviceMappingFB.group(mapping);\n                            });\n\n                            const mappingGroup = this.deviceMappingFB.group({\n                                parameterID,\n                                mapping: this.deviceMappingFB.array(mappings)\n                            });\n\n                            mappingRecordsControl.push(mappingGroup);\n                        });\n\n                    }\n                }\n\n                if (dialogRes && dialogRes.sourceLoadMappingRes.length == 0) {\n                    if (deviceIndex != -1) {\n                        const isDeviceMappedControl = this.deviceMappingFG.get('deviceRecords')['controls'][deviceIndex].get('isDeviceMapped');\n                        isDeviceMappedControl.setValue(false);\n                    }\n                }\n            })\n    }\n\n    findIndexByDeviceID(id) {\n        return this.deviceMappingFG.get('deviceRecords')['controls']\n            .findIndex((d: any) => d.value.id == id);\n    }\n\n    saveDeviceMapping() {\n        const deviceRecordsArray = this.deviceMappingFG.get('deviceRecords') as FormArray;\n\n        deviceRecordsArray.controls.forEach((deviceGroup: FormGroup) => {\n            const isDeviceMapped = deviceGroup.get('isDeviceMapped').value;\n            const type = deviceGroup.get('type').value;\n            const mappingRecordsControl = deviceGroup.get('mappingRecords') as FormArray;\n\n            if (type == 'METER' && !isDeviceMapped) {\n                mappingRecordsControl.clear();\n            }\n\n            deviceGroup.removeControl('parameter');\n        });\n\n        this.deviceController.saveDeviceMapping(this.orgID, this.layoutID, this.entityID, this.deviceMappingFG.getRawValue()).subscribe((mappedDevicesRes: ResponseM) => {\n            this.tscCommonService.back();\n        },\n            error => {\n                console.log('error in saveDeviceMapping() - ', error);\n            });\n    }\n\n}","<div class=\"card main-card cardOverwrite h100\">\n    <div class=\"headerContainer\">\n        <div class=\"headerLeftContainer\">\n            <div class=\"pageTitle\">Map Devices <span *ngIf=\"entityM\">\n                    - ({{ entityM?.name }})\n                </span></div>\n        </div>\n        <div class=\"headerRightContainer\">\n            <div class=\"headerRightContainerInner\">\n                <lib-search-bar-one class=\"me-3\" #searchBar searchBy=\"device name\" (emitSearch)=\"searchFn($event)\">\n                </lib-search-bar-one>\n                <a [routerLink]=\"'/layout/' + layoutID + '/entity/' + entityID + '/map-device/view'\">View mapped devices</a>\n            </div>\n        </div>\n    </div>\n\n    <button #refreshBtn class=\"d-none\"></button>\n\n    <form [formGroup]=\"deviceMappingFG\">\n        <div class=\"overflowX customScrollBar w-100\">\n            <table mat-table class=\"w-100\" [dataSource]=\"dataSource\" #sort=\"matSort\" matSort matSortActive=\"name\"\n                matSortDirection=\"asc\" matSortDisableClear>\n\n                <ng-container matColumnDef=\"mapDevice\">\n                    <th class=\"columnWidth1\" mat-header-cell *matHeaderCellDef> Map device </th>\n                    <td class=\"columnWidth1\" mat-cell *matCellDef=\"let row; let i = index\">\n                        <div class=\"d-flex align-items-center\">\n                            <mat-checkbox [formControl]=\"deviceRecords?.at(i)?.get('isDeviceMapped')\"\n                                [disabled]=\"row.type == 'METER' && (!sourceConsumerConfiguredM.sourceTypeConfigured || !sourceConsumerConfiguredM.consumerTypeConfigured)\"\n                                (change)=\"onCheckboxChange(i, $event.checked)\"></mat-checkbox>\n\n                            <span\n                                *ngIf=\"row.type == 'METER' && (!sourceConsumerConfiguredM.sourceTypeConfigured || !sourceConsumerConfiguredM.consumerTypeConfigured)\"\n                                [popover]=\"infoPopover\" popoverPlacement=\"right\" [popoverOnHover]=\"false\" [popoverAnimation]=\"true\">\n                                <span class=\"material-symbols-outlined fontSize cursorPointer mt-2 ms-2\">\n                                    info\n                                </span>\n                            </span>\n\n                            <popover-content #infoPopover [animation]=\"true\" [closeOnClickOutside]=\"true\">\n                                <span>Click <a [href]=\"redirectUrl\">here </a>to set preferences</span>\n                            </popover-content>\n\n                            <span *ngIf=\"deviceRecords?.at(i)?.get('mappingRecords').length > 0\"\n                                class=\"material-symbols-outlined text-secondary fontSize cursorPointer ms-5\" #tooltip=\"matTooltip\"\n                                matTooltipPosition=\"above\" matTooltipClass=\"nameTooltip\" matTooltip=\"Update source/consumer\"\n                                (click)=\"this.openSourceLoadDialog(deviceRecords?.at(i).value)\">\n                                edit_square\n                            </span>\n                        </div>\n                    </td>\n                </ng-container>\n\n                <ng-container matColumnDef=\"id\">\n                    <th class=\"columnWidth2\" mat-header-cell *matHeaderCellDef>\n                        Device ID\n                    </th>\n                    <td class=\"columnWidth2\" mat-cell *matCellDef=\"let row\">\n                        {{ row['id'] }}\n                    </td>\n                </ng-container>\n\n                <ng-container matColumnDef=\"name\">\n                    <th class=\"columnWidth3\" mat-header-cell *matHeaderCellDef mat-sort-header disableClear> Name </th>\n                    <td class=\"columnWidth3\" mat-cell *matCellDef=\"let row\"> <span\n                            [matTooltip]=\"row?.['name']?.length>24? row['name']: ''\" matTooltipPosition=\"above\"\n                            matTooltipClass=\"nameTooltip\">\n                            {{ row.name | dotdotdot:24 }}\n                        </span>\n                        <button [cdkCopyToClipboard]=\"row.name\" matSuffix mat-icon-button type=\"button\">\n                            <span class=\"material-symbols-outlined fs-5\" mat-raised-button matTooltipPosition=\"right\"\n                                matTooltip=\"copy\">\n                                content_copy\n                            </span>\n                        </button>\n                    </td>\n                </ng-container>\n\n                <ng-container matColumnDef=\"make\">\n                    <th class=\"columnWidth4\" mat-header-cell *matHeaderCellDef> Make </th>\n                    <td class=\"columnWidth4\" mat-cell *matCellDef=\"let row\"\n                        [matTooltip]=\"row?.['make']?.length>15? row['make']: ''\" matTooltipPosition=\"above\"\n                        matTooltipClass=\"nameTooltip\">\n                        {{ row?.['make'] | dotdotdot:15 }}\n                    </td>\n                </ng-container>\n\n                <ng-container matColumnDef=\"model\">\n                    <th class=\"columnWidth4\" mat-header-cell *matHeaderCellDef> Model </th>\n                    <td class=\"columnWidth4\" mat-cell *matCellDef=\"let row\"\n                        [matTooltip]=\"row?.['model']?.length>15? row['model']: ''\" matTooltipPosition=\"above\"\n                        matTooltipClass=\"nameTooltip\">\n                        {{ row?.['model'] | dotdotdot:15 }}\n                    </td>\n                </ng-container>\n\n                <ng-container matColumnDef=\"type\">\n                    <th class=\"columnWidth4\" mat-header-cell *matHeaderCellDef> Type </th>\n                    <td class=\"columnWidth4\" mat-cell *matCellDef=\"let row\">\n                        {{ row.type | titlecase }}\n                    </td>\n                </ng-container>\n\n                <tr mat-header-row *matHeaderRowDef=\"displayedColumn; sticky: true\"></tr>\n                <tr mat-row *matRowDef=\"let row; columns: displayedColumn;\"></tr>\n\n                <tr class=\"mat-row\" *matNoDataRow>\n                    <td class=\"mat-cell text-center\" [attr.colspan]=\"displayedColumn.length\">\n                        {{ TABLE_CONSTANT.TABLE_NO_DATA }}\n                    </td>\n                </tr>\n            </table>\n        </div>\n\n        <mat-paginator #paginator class=\"roundedBorder\" showFirstLastButtons [length]=\"resultLength\"\n            [pageSize]=\"TABLE_CONSTANT.DEFAULT_PAGE_SIZE\" [pageSizeOptions]=\"TABLE_CONSTANT.PAGE_SIZE_OPTION\">\n        </mat-paginator>\n    </form>\n\n    <div align=\"end\">\n        <button type=\"submit\" class=\"btn btn-sm btn-success me-3 mb-2\" [ngClass]=\"{'disabled': isEqual}\"\n            (click)=\"saveDeviceMapping()\">\n            {{ ButtonLabelEnum.SAVE_BTN_LABEL }}\n        </button>\n    </div>\n\n</div>","import { NgModule } from '@angular/core';\nimport { RouterModule, Routes } from '@angular/router';\n\nimport { AddComponent } from './add.component';\n\nconst routes: Routes = [\n    {\n        path: '',\n        component: AddComponent\n    }\n];\n\n@NgModule({\n    imports: [RouterModule.forChild(routes)],\n    exports: [RouterModule]\n})\nexport class AddRoutingModule { }\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\n\nimport { MatIconModule } from '@angular/material/icon';\nimport { MatButtonModule } from '@angular/material/button';\nimport { MatRippleModule } from '@angular/material/core';\nimport { MatTableModule } from '@angular/material/table';\nimport { MatPaginatorModule } from '@angular/material/paginator';\nimport { MatDialogModule } from '@angular/material/dialog';\nimport { MatTooltipModule } from '@angular/material/tooltip';\nimport { MatCheckboxModule } from '@angular/material/checkbox';\nimport { MatCardModule } from '@angular/material/card';\nimport { MatSortModule } from '@angular/material/sort';\nimport { ClipboardModule } from '@angular/cdk/clipboard';\nimport { PopoverModule } from \"ngx-smart-popover\";\n\nimport { SourceLoadModule } from '../../_dialog/create-update/source-load/source-load.module';\n\nimport { AddRoutingModule } from './add-routing.module';\nimport { AddComponent } from './add.component';\n\n// tsc-library\nimport { SearchBarOneModule } from '@library/tsc-common';\nimport { EllipsisPipeModule } from '@library/tsc-common';\n// /tsc-library/\n\n@NgModule({\n    declarations: [\n        AddComponent\n    ],\n    imports: [\n        CommonModule,\n        AddRoutingModule,\n        SourceLoadModule,\n        FormsModule,\n        ReactiveFormsModule,\n        MatCardModule,\n        MatIconModule,\n        MatButtonModule,\n        MatRippleModule,\n        MatTableModule,\n        MatSortModule,\n        MatPaginatorModule,\n        MatDialogModule,\n        MatTooltipModule,\n        MatCheckboxModule,\n        SearchBarOneModule,\n        EllipsisPipeModule,\n        ClipboardModule,\n        PopoverModule\n    ]\n})\nexport class AddModule { }\n","import { Component, ElementRef, OnInit, ViewChild } from '@angular/core';\nimport { ActivatedRoute } from '@angular/router';\n\nimport { MatDialog } from '@angular/material/dialog';\nimport { MatPaginator } from '@angular/material/paginator';\nimport { SelectionModel } from '@angular/cdk/collections';\n\nimport { merge, fromEvent, of as observableOf } from 'rxjs';\nimport { catchError, map, startWith, switchMap } from 'rxjs/operators';\n\nimport { Entity } from '../../../../model/entity.model';\nimport { DeviceMappingM } from '../../../../model/device.model';\n\nimport { SourceLoadComponent } from '../../_dialog/create-update/source-load/source-load.component';\n\nimport { DeviceController } from '../../../../controller/device.controller';\nimport { EntityService } from '../../../../service/entity.service';\n\n// tsc-library\nimport { StorageService } from '@library/storage-service';\nimport { ButtonLabelEnum, DialogEnum, DialogOneComponent, DialogOneEnum, FormAction, PageM, SearchBarOneComponent, TABLE_CONSTANT } from '@library/tsc-common';\n// /tsc-library/\n\n@Component({\n    selector: 'app-view',\n    templateUrl: './view.component.html',\n    styleUrls: ['./view.component.scss']\n})\nexport class ViewComponent implements OnInit {\n\n    TABLE_CONSTANT = TABLE_CONSTANT;\n\n    orgID: any;\n    layoutID: any;\n    entityID: any;\n    filter: string;\n    searchValue: string;\n    searchArr: any[] = [];\n    dataSource: any[] = [];\n    searchFlag: boolean = false;\n    resultLength: number = 0;\n\n    displayedColumn: string[] = ['checkbox', 'body', 'delete'];\n\n    allDeviceIDs: any = [];\n    selection = new SelectionModel(true, []);\n\n    entityM = new Entity();\n\n    @ViewChild('paginator') paginator: MatPaginator;\n    @ViewChild('refreshBtn') refreshBtn: ElementRef;\n    @ViewChild('searchBar') searchBar: SearchBarOneComponent;\n\n    constructor(\n        private activatedRoute: ActivatedRoute,\n        private storageService: StorageService,\n        private deviceController: DeviceController,\n        private entityService: EntityService,\n        private dialog: MatDialog\n    ) { }\n\n    ngOnInit(): void {\n        this.orgID = this.storageService.getStorage('currentOrgID');\n\n        this.activatedRoute.params.subscribe((param) => {\n            this.layoutID = param.layoutID;\n            this.entityID = param.entityID;\n\n            this.getEntityByID();\n        })\n    }\n\n    async getEntityByID() {\n        this.entityM = await this.entityService.getEntityByID(this.orgID, this.layoutID, this.entityID);\n    }\n\n    ngAfterViewInit() {\n\n        this.selection.clear();\n\n        merge(\n            this.paginator.page,\n            fromEvent(this.refreshBtn.nativeElement, 'click')\n        ).pipe(\n            startWith({}),\n            switchMap((): any => {\n\n                this.searchArr = [];\n                if (this.searchFlag) {\n                    this.searchArr.push('name:' + this.searchValue)\n                }\n\n                return this.deviceController.getMappedDevices(\n                    this.paginator.pageIndex,\n                    this.paginator.pageSize,\n                    this.searchArr,\n                    this.orgID,\n                    this.layoutID,\n                    this.entityID,\n                ).pipe(catchError(() => observableOf(null)));\n            }),\n            map((response: PageM<DeviceMappingM>): any => {\n                if (response == null) {\n                    this.resultLength = 0;\n                    return [];\n                }\n                this.resultLength = response[\"totalCount\"];\n                return response[\"records\"];\n            })\n        ).subscribe((dataSource) => {\n            this.dataSource = dataSource;\n\n            dataSource.forEach((record) => {\n                this.allDeviceIDs.push(record.id);\n            });\n        });\n    }\n\n    searchFn(value: string) {\n        this.searchFlag = true;\n        this.searchValue = value;\n        if (value.length == 0) {\n            this.resetSearch();\n        } else {\n            this.paginator.pageIndex = 0;\n        }\n        this.refreshBtn.nativeElement.click();\n    }\n\n    resetSearch() {\n        this.searchFlag = false;\n        this.searchBar.searchClear();\n    }\n\n    selectAll() {\n        if (this.isAllSelected()) {\n            this.selection.clear();\n            return;\n        }\n        this.selection.select(...this.allDeviceIDs);\n    }\n\n    isAllSelected() {\n        const selected = this.selection.selected.length;\n        const numRows = this.dataSource.length;\n        return selected == numRows;\n    }\n\n    openSourceLoadDialog(device) {\n        const dialog = this.dialog.open(SourceLoadComponent,\n            {\n                data: {\n                    deviceInfo: device,\n                    layoutID: this.layoutID,\n                    entityID: this.entityID,\n                    updateFromDialog: true\n                },\n                minWidth: '600px',\n                maxWidth: '600px',\n            });\n        dialog.afterClosed()\n            .subscribe((dialogRes) => {\n                if (dialogRes && dialogRes.result == DialogEnum.SUCCESS_DR && dialogRes.action == FormAction.UPDATE) {\n                    this.refreshBtn.nativeElement.click();\n                }\n            })\n    }\n\n    openDeleteDialog(actionType, id?: number, name?: string) {\n\n        let entityName = this.entityM.name;\n        let bodyText: string;\n\n        if (actionType == 'BULK_DELETE' && !this.isAllSelected()) {\n            bodyText = 'From <b>' + entityName + '</b> entity, mapping of devices <b> ' + this.selection.selected.join(', ') + '</b>' + ' will be removed.</br></br>Are you sure you want to continue?';\n        } else if (actionType == 'BULK_DELETE' && this.isAllSelected()) {\n            bodyText = 'From <b>' + entityName + '</b> entity, all mapped devices will be removed.</br></br>Are you sure you want to continue?';\n        }\n        else {\n            bodyText = 'From <b>' + entityName + '</b> entity, mapping of device <b> ' + name + '</b>' + ' will be removed.</br></br>Are you sure you want to continue?';\n        }\n\n        const dialog = this.dialog.open(DialogOneComponent, {\n            minWidth: '450px',\n            maxWidth: '450px',\n            data: {\n                type: DialogOneEnum.DELETE,\n                icon: 'dangerous',\n                header: 'Delete device mapping?',\n                body: bodyText,\n                buttonOne: ButtonLabelEnum.CANCEL_BTN_LABEL,\n                buttonTwo: ButtonLabelEnum.DELETE_BTN_LABEL\n            }\n        });\n        dialog.afterClosed().subscribe(res => {\n            if (res) {\n                if (actionType == 'BULK_DELETE' && !this.isAllSelected()) {\n                    this.deleteDeviceMapping(this.selection.selected);\n                } else if (actionType == 'BULK_DELETE' && this.isAllSelected()) {\n                    this.deleteDeviceMapping(this.allDeviceIDs);\n                }\n                else {\n                    this.deleteDeviceMapping(id);\n                }\n            }\n        })\n    }\n\n    deleteDeviceMapping(deviceID) {\n        this.deviceController.deleteDeviceMapping(this.orgID, this.layoutID, this.entityID, deviceID).subscribe((deleteRes) => {\n            this.refreshBtn.nativeElement.click();\n        });\n    }\n\n}\n","<div class=\"card main-card cardOverwrite h100\">\n    <div class=\"headerContainer\">\n        <div class=\"headerLeftContainer\">\n            <div class=\"pageTitle\">View Mapped Devices <span *ngIf=\"entityM\">\n                    - ({{ entityM?.name }})\n                </span></div>\n        </div>\n\n        <div class=\"headerRightContainer\">\n            <div class=\"headerRightContainerInner\">\n                <lib-search-bar-one class=\"me-2\" #searchBar searchBy=\"device name\" (emitSearch)=\"searchFn($event)\">\n                </lib-search-bar-one>\n                <div class=\"me-2 btn-group\" ngbDropdown placement=\"bottom-right\">\n                    <button type=\"button\" ngbDropdownToggle class=\"btn btn-sm btn-primary\"\n                        [ngClass]=\"{'disableButton': selection.selected.length == 0}\"\n                        [disabled]=\"selection.selected.length == 0\">\n                        Bulk action\n                    </button>\n                    <div ngbDropdownMenu>\n                        <button class=\"btn btn-outline-danger rounded-0 dropdown-item\"\n                            (click)=\"openDeleteDialog('BULK_DELETE')\">\n                            Delete\n                        </button>\n                    </div>\n                </div>\n                <a [routerLink]=\"'/layout/' + layoutID + '/entity/' + entityID + '/map-device/add'\">Map devices</a>\n            </div>\n        </div>\n    </div>\n\n    <button #refreshBtn class=\"d-none\"></button>\n\n    <table mat-table [dataSource]=\"dataSource\">\n\n        <ng-container matColumnDef=\"checkbox\">\n            <th class=\"columnWidth1\" mat-header-cell *matHeaderCellDef>\n                <mat-checkbox (change)=\"$event ? selectAll() : null\"\n                    [checked]=\"selection.hasValue() && isAllSelected()\" [disabled]=\"dataSource.length == 0\">\n                    Select all\n                </mat-checkbox>\n            </th>\n            <td class=\"px-3 columnWidth1\" mat-cell *matCellDef=\"let row; let i = index;\" class=\"text-start\">\n                <mat-checkbox (change)=\"$event ? selection.toggle(row.id) : null\"\n                    [checked]=\"selection.isSelected(row.id)\"></mat-checkbox>\n            </td>\n        </ng-container>\n\n        <ng-container matColumnDef=\"body\">\n            <th mat-header-cell *matHeaderCellDef></th>\n            <td class=\"px-3\" mat-cell *matCellDef=\"let row\">\n                <div class=\"pt-3 pb-3\">\n\n                    <div class=\"row\">\n                        <div class=\"col-sm-12\">\n                            <mat-card class=\"card main-card border cardOverwrite\">\n                                <div class=\"row\">\n                                    <div class=\"col-sm-12\">\n                                        <span class=\"card-title sectionTitle\">\n                                            Devices\n                                        </span>\n                                    </div>\n                                </div>\n                                <div class=\"row pt-2\">\n                                    <div class=\"col-sm-6\">\n                                        <div class=\"row\">\n                                            <div class=\"col-sm-3\">\n                                                ID\n                                            </div>\n                                            <div class=\"col-sm-8 fw-bold\">\n                                                {{ row.id }}\n                                            </div>\n                                        </div>\n                                    </div>\n                                    <div class=\"col-sm-6\">\n                                        <div class=\"row\">\n                                            <div class=\"col-sm-3\">\n                                                Name\n                                            </div>\n                                            <div class=\"col-sm-8 fw-bold\"\n                                                [matTooltip]=\"row?.['name']?.length>20? row['name']: ''\"\n                                                matTooltipPosition=\"above\" matTooltipClass=\"nameTooltip\">\n                                                {{ row.name | dotdotdot:20 }}\n                                            </div>\n                                        </div>\n                                    </div>\n                                </div>\n                                <div class=\"row pt-2\">\n                                    <div class=\"col-sm-6\">\n                                        <div class=\"row\">\n                                            <div class=\"col-sm-3\">\n                                                Make\n                                            </div>\n                                            <div class=\"col-sm-8 fw-bold\">\n                                                {{ row.make }}\n                                            </div>\n                                        </div>\n                                    </div>\n                                    <div class=\"col-sm-6\">\n                                        <div class=\"row\">\n                                            <div class=\"col-sm-3\">\n                                                Model\n                                            </div>\n                                            <div class=\"col-sm-8 fw-bold\">\n                                                {{ row.model }}\n                                            </div>\n                                        </div>\n                                    </div>\n                                </div>\n                                <div class=\"row pt-2\">\n                                    <div class=\"col-sm-6\">\n                                        <div class=\"row\">\n                                            <div class=\"col-sm-3\">\n                                                Type\n                                            </div>\n                                            <div class=\"col-sm-8 fw-bold\">\n                                                {{ row.type | titlecase }}\n                                            </div>\n                                        </div>\n                                    </div>\n                                </div>\n                            </mat-card>\n                        </div>\n                    </div>\n\n                    <div class=\"row pt-3\" *ngIf=\"row.mappingRecords && row.mappingRecords.length > 0\">\n                        <div class=\"col-sm-12\">\n                            <mat-card class=\"card main-card border cardOverwrite\">\n                                <div class=\"row\">\n                                    <div class=\"col-sm-6\">\n                                        <span class=\"card-title sectionTitle\">\n                                            Device property\n                                        </span>\n                                    </div>\n                                    <div class=\"col-sm-6\">\n                                        <span class=\"material-symbols-outlined text-secondary float-end cursorPointer\"\n                                            matTooltipPosition=\"above\" matTooltip=\"Edit\"\n                                            (click)=\"openSourceLoadDialog(row)\">\n                                            edit_square\n                                        </span>\n                                    </div>\n                                </div>\n\n                                <div class=\"row pt-2\">\n                                    <div class=\"col-sm-6\" *ngFor=\"let mapping of row.mappingRecords\">\n                                        Parameter Name: <span class=\"fw-bold\">\n                                            {{ mapping?.parameterName }}\n                                        </span>\n\n                                        <div *ngFor=\"let sourceLoad of mapping?.mapping\">\n                                            <div class=\"row mt-2\">\n                                                <div class=\"col-sm-3\" *ngIf=\"sourceLoad?.type == 'SOURCE'\">\n                                                    Source\n                                                </div>\n                                                <div class=\"col-sm-3\" *ngIf=\"sourceLoad?.type == 'LOAD'\">\n                                                    Load\n                                                </div>\n                                                <div class=\"col-sm-6\">\n                                                    <span class=\"fw-bold\">{{ sourceLoad?.name }}</span>\n                                                </div>\n                                            </div>\n                                        </div>\n                                    </div>\n                                </div>\n                            </mat-card>\n                        </div>\n                    </div>\n                </div>\n\n            </td>\n        </ng-container>\n\n        <ng-container matColumnDef=\"delete\">\n            <th class=\"columnWidth2\" mat-header-cell *matHeaderCellDef></th>\n            <td class=\"columnWidth2\" mat-cell *matCellDef=\"let row\">\n                <span class=\"material-symbols-outlined text-danger float-end\"\n                    [ngClass]=\"{'text-danger cursorPointer': selection.selected.length == 0, 'text-secondary': selection.selected.length > 0}\"\n                    matTooltipPosition=\"above\" [matTooltip]=\"selection.selected.length == 0 ? 'Remove mapping': ''\"\n                    (click)=\"selection.selected.length == 0 && openDeleteDialog('SINGLE_DELETE', row.id, row.name)\">\n                    delete\n                </span>\n            </td>\n        </ng-container>\n\n        <tr mat-header-row *matHeaderRowDef=\"displayedColumn; sticky: true\"></tr>\n        <tr mat-row *matRowDef=\"let row; columns: displayedColumn;\"></tr>\n\n        <tr class=\"mat-row\" *matNoDataRow>\n            <td class=\"mat-cell text-center\" [attr.colspan]=\"displayedColumn.length\">\n                {{ TABLE_CONSTANT.TABLE_NO_DATA }}\n            </td>\n        </tr>\n    </table>\n\n    <mat-paginator #paginator class=\"roundedBorder\" showFirstLastButtons [length]=\"resultLength\"\n        [pageSize]=\"TABLE_CONSTANT.DEFAULT_PAGE_SIZE\" [pageSizeOptions]=\"TABLE_CONSTANT.PAGE_SIZE_OPTION\">\n    </mat-paginator>\n</div>","import { NgModule } from '@angular/core';\nimport { RouterModule, Routes } from '@angular/router';\nimport { ViewComponent } from './view.component';\n\nconst routes: Routes = [\n    {\n        path: '',\n        component: ViewComponent\n    }\n];\n\n@NgModule({\n    imports: [RouterModule.forChild(routes)],\n    exports: [RouterModule]\n})\nexport class ViewRoutingModule { }\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\n\nimport { MatIconModule } from '@angular/material/icon';\nimport { MatButtonModule } from '@angular/material/button';\nimport { MatRippleModule } from '@angular/material/core';\nimport { MatTableModule } from '@angular/material/table';\nimport { MatPaginatorModule } from '@angular/material/paginator';\nimport { MatDialogModule } from '@angular/material/dialog';\nimport { MatTooltipModule } from '@angular/material/tooltip';\nimport { MatCheckboxModule } from '@angular/material/checkbox';\nimport { MatCardModule } from '@angular/material/card';\n\nimport { NgbModule } from '@ng-bootstrap/ng-bootstrap';\n\nimport { SourceLoadModule } from '../../_dialog/create-update/source-load/source-load.module';\n\nimport { ViewRoutingModule } from './view-routing.module';\nimport { ViewComponent } from './view.component';\n\n// tsc-library\nimport { SearchBarOneModule } from '@library/tsc-common';\nimport { EllipsisPipeModule } from '@library/tsc-common';\n// /tsc-library/\n\n@NgModule({\n    declarations: [\n        ViewComponent\n    ],\n    imports: [\n        NgbModule,\n        CommonModule,\n        ViewRoutingModule,\n        SourceLoadModule,\n        MatCardModule,\n        MatIconModule,\n        MatButtonModule,\n        MatRippleModule,\n        MatTableModule,\n        MatPaginatorModule,\n        MatDialogModule,\n        MatTooltipModule,\n        MatCheckboxModule,\n        SearchBarOneModule,\n        EllipsisPipeModule\n    ]\n})\nexport class ViewModule { }\n","import { Inject, Injectable } from '@angular/core';\n\nimport {\n    HttpClient,\n    HttpParams\n} from '@angular/common/http';\n\nimport { Observable } from 'rxjs';\n\nimport { SourceConsumerPageM, ConsumerM } from '../model/source-consumer.model';\n\n// tsc-library\nimport { PageM } from '@library/tsc-common';\n// /tsc-library/\n\n@Injectable({\n    providedIn: 'root'\n})\n\nexport class ConsumerController {\n\n    constructor(\n        private http: HttpClient,\n        @Inject('environment') private environment: any\n    ) { }\n\n    createConsumerType(orgID, consumer) {\n        return this.http.post(`${this.environment.TSC_COMMON_API_URL}organizations/${orgID}/consumers-types`, consumer);\n    }\n\n    getConsumerTypeByID(orgID, consumerID): Observable<ConsumerM> {\n        return this.http.get<ConsumerM>(`${this.environment.TSC_COMMON_API_URL}organizations/${orgID}/consumers-types/${consumerID}`);\n    }\n\n    updateConsumerType(orgID, consumerID, consumer) {\n        return this.http.patch(`${this.environment.TSC_COMMON_API_URL}organizations/${orgID}/consumers-types/${consumerID}`, consumer);\n    }\n\n    deleteConsumerType(orgID, consumerID) {\n        return this.http.delete(`${this.environment.TSC_COMMON_API_URL}organizations/${orgID}/consumers-types/${consumerID}`);\n    }\n\n    getConsumerTypeByPage(pageNo: number, pageSize: number, sortBy: string, orderBy: string, searchValue, filterArr, orgID): Observable<PageM<SourceConsumerPageM>> {\n        let params = new HttpParams();\n\n        params = params.append('pageNo', pageNo);\n        params = params.append('pageSize', pageSize);\n        params = params.append('sortBy', sortBy);\n        params = params.append('orderBy', orderBy);\n\n        if (searchValue) {\n            params = params.append('searchBy', searchValue);\n        }\n\n        filterArr.forEach(filter => params = params.append('filter', filter));\n\n        return this.http.get<PageM<SourceConsumerPageM>>(`${this.environment.TSC_COMMON_API_URL}organizations/${orgID}/consumers-types/page`, { params: params });\n    }\n\n}\n","import { Component, ElementRef, Inject, OnInit, Renderer2, ViewChild } from '@angular/core';\nimport { FormBuilder, FormGroup, Validators } from '@angular/forms';\n\nimport {\n    MAT_DIALOG_DATA,\n    MatDialogRef\n} from '@angular/material/dialog';\n\nimport { isEqual } from 'lodash';\n\nimport { ConsumerM, UtilitySourceTypeM } from '../../../../../model/source-consumer.model';\n\nimport { ConsumerController } from '../../../../../controller/consumer.controller';\n\nimport { SourceService } from '../../../../../service/source.service';\n\n// tsc-library\nimport { MaterialFormFieldAppearance, ButtonLabelEnum, FormAction, PageTitleEnum, FormErrorEnum, TSCCommonService, ResponseM, InvalidForm, COMMON_CONSTANT, Static, DialogResponseEnum, ButtonTooltipEnum, MATERIAL_CONSTANT } from '@library/tsc-common';\nimport { StorageService } from '@library/storage-service';\nimport { ToastrColor, ToastrService } from '@library/toastr-service';\n// /tsc-library/\n\n@Component({\n    selector: 'lib-create-update',\n    templateUrl: './create-update.component.html',\n    styles: [\n    ]\n})\nexport class ConsumerCreateUpdateComponent implements OnInit {\n\n    COMMON_CONSTANT = COMMON_CONSTANT;\n    MATERIAL_CONSTANT = MATERIAL_CONSTANT;\n\n    FormAction = FormAction;\n    FormErrorEnum = FormErrorEnum;\n    ButtonLabelEnum = ButtonLabelEnum;\n    ButtonTooltipEnum = ButtonTooltipEnum;\n    PageTitleEnum = PageTitleEnum;\n    MaterialFormFieldAppearance = MaterialFormFieldAppearance;\n\n    orgID: any;\n    consumerID: any;\n    action: string;\n    isEqual: boolean = true;\n    intialObject: any;\n\n    utilitySourceTypeM: any;\n\n    consumerM: ConsumerM;\n    consumerFG: FormGroup;\n\n    pageTitle: string = 'Consumer type';\n\n    @ViewChild('header') header: ElementRef;\n    @ViewChild('footer') footer: ElementRef;\n    @ViewChild('body') body: ElementRef;\n\n    constructor(\n        @Inject(MAT_DIALOG_DATA) public data,\n        private dialogRef: MatDialogRef<ConsumerCreateUpdateComponent>,\n        private renderer: Renderer2,\n        private formBuilder: FormBuilder,\n        private storageService: StorageService,\n        private toastrService: ToastrService,\n        public tscCommonService: TSCCommonService,\n        private sourceService: SourceService,\n        private consumerController: ConsumerController,\n    ) {\n        this.action = data.action;\n        this.consumerID = data.consumerID;\n    }\n\n    ngOnInit(): void {\n        this.orgID = this.storageService.getStorage('currentOrgID');\n\n        this.getUtilitySourceAndType();\n        this.consumerFGInit();\n\n        if (this.action == FormAction.UPDATE) {\n            this.getConsumerTypeByID(this.consumerID);\n        }\n    }\n\n    ngAfterViewInit() {\n        this.heightHandler();\n    }\n\n    heightHandler(): void {\n        const headerHeight = this.header.nativeElement.offsetHeight;\n        const footerHeight = this.footer.nativeElement.offsetHeight;\n        const offsetHeight = 'calc(100vh - ' + (headerHeight + footerHeight + 24) + 'px)';\n\n        this.renderer.setStyle(this.body.nativeElement, 'height', offsetHeight);\n        this.renderer.setStyle(this.body.nativeElement, 'max-height', offsetHeight);\n    }\n\n    async getUtilitySourceAndType() {\n        const result = <UtilitySourceTypeM>await this.sourceService.getUtilitySourceAndType(this.orgID);\n        this.utilitySourceTypeM = result.utilitySource;\n    }\n\n    consumerFGInit() {\n        this.consumerFG = this.formBuilder.group({\n            name: [, [Validators.required]],\n            utilitySourceID: [, [Validators.required]],\n            type: [, [Validators.required]]\n        });\n    }\n\n    consumerSubmit() {\n        if (this.consumerFG.invalid) {\n            this.toastrService.openToast(InvalidForm.INVALID_FORM_TITLE, InvalidForm.INVALID_FORM_MESSAGE, ToastrColor.ERROR);\n            return;\n        } else {\n            if (this.action == FormAction.CREATE) {\n                this.createConsumerType();\n            } else if (this.action == FormAction.UPDATE) {\n                this.updateConsumerType();\n            }\n        }\n    }\n\n    createConsumerType() {\n        this.consumerController.createConsumerType(this.orgID, this.consumerFG.value).subscribe((res: ResponseM) => {\n\n            let result;\n            result = {\n                status: DialogResponseEnum.SUCCESS,\n            }\n\n            this.dialogRef.close(result);\n\n        }, error => {\n            console.log('error in createConsumerType -', error);\n        });\n    }\n\n    getConsumerTypeByID(consumerID) {\n        this.consumerController.getConsumerTypeByID(this.orgID, consumerID).subscribe((res: ConsumerM) => {\n            this.consumerM = res;\n            this.patchConsumer(this.consumerM);\n        }, error => {\n            console.log('error in getConsumerTypeByID -', error);\n        });\n    }\n\n    patchConsumer(consumer: ConsumerM) {\n        this.consumerFG.patchValue(consumer);\n\n        this.intialObject = this.consumerFG.value;\n\n        this.consumerFG.valueChanges.subscribe(() => {\n            this.isEqual = isEqual(this.intialObject, this.consumerFG.value);\n        });\n\n    }\n\n    updateConsumerType() {\n        this.consumerController.updateConsumerType(this.orgID, this.consumerID, this.consumerFG.value).subscribe((res: ResponseM) => {\n\n            let result;\n            result = {\n                status: DialogResponseEnum.SUCCESS,\n            }\n\n            this.dialogRef.close(result);\n\n        }, error => {\n            console.log('error in updateConsumerType -', error);\n        })\n    }\n\n    errorHandling = (formGroup: FormGroup, controlPath: string, error: string): boolean => {\n        return formGroup.get(controlPath).hasError(error);\n    }\n\n}\n","<div class=\"headerContainer p-0\" #header>\n    <div class=\"headerLeftContainer\">\n        <div class=\"pageTitle\">{{ action == FormAction.CREATE ? PageTitleEnum.CREATE :\n            PageTitleEnum.UPDATE }} {{ pageTitle }}</div>\n    </div>\n\n    <div class=\"headerRightContainer\">\n        <div class=\"headerRightContainerInner\">\n            <button class=\"btn btn-sm centerAlign py-1 iconBtn\" matRipple\n                [matRippleCentered]=\"MATERIAL_CONSTANT.MAT_RIPPLE_CENTER\" matTooltipPosition=\"below\"\n                [matTooltip]=\"ButtonTooltipEnum.CLOSE\" mat-dialog-close>\n                <span class=\"material-symbols-outlined\">\n                    close\n                </span>\n            </button>\n        </div>\n    </div>\n</div>\n\n<mat-dialog-content class=\"mat-typography customScrollBar pt-2\" #body>\n    <form [formGroup]=\"consumerFG\" (ngSubmit)=\"consumerSubmit()\">\n\n        <div class=\"row\">\n            <div class=\"col-sm-12\">\n                <mat-form-field class=\"matFieldWidth100\"\n                    [appearance]=\"MaterialFormFieldAppearance.FORM_FIELD_APPEARANCE\">\n                    <mat-label class=\"formLabel\">Name</mat-label>\n                    <input class=\"formPlaceholder\" type=\"text\" placeholder=\"Name\" matInput formControlName=\"name\"\n                        required />\n                    <mat-error *ngIf=\"errorHandling(consumerFG, 'name', 'required')\">\n                        {{ FormErrorEnum.REQUIRED }}\n                    </mat-error>\n                </mat-form-field>\n            </div>\n        </div>\n\n        <div class=\"row\">\n            <div class=\"col-sm-12\">\n                <mat-form-field class=\"matFieldWidth100\" [appearance]=\"MaterialFormFieldAppearance.FORM_FIELD_APPEARANCE\">\n                    <mat-label>Select utility source</mat-label>\n                    <mat-select formControlName=\"utilitySourceID\" required>\n                        <ng-container\n                            *ngIf=\"utilitySourceTypeM && utilitySourceTypeM.length > 0 && utilitySourceTypeM[0]['id']; else noUtilitySource\">\n                            <mat-option *ngFor=\"let utilitySource of utilitySourceTypeM\" [value]=\"utilitySource.id\">\n                                {{ utilitySource.name }}\n                            </mat-option>\n                        </ng-container>\n                        <ng-template #noUtilitySource>\n                            <mat-option disabled>\n                                {{ COMMON_CONSTANT.NO_DATA_FOUND }}\n                            </mat-option>\n                        </ng-template>\n                    </mat-select>\n                \n                    <mat-error *ngIf=\"errorHandling(consumerFG, 'utilitySourceID', 'required')\">\n                        {{ FormErrorEnum.REQUIRED }}\n                    </mat-error>\n                </mat-form-field>\n            </div>\n        </div>\n\n        <div class=\"row\">\n            <div class=\"col-sm-12\">\n                <mat-form-field class=\"matFieldWidth100\" [appearance]=\"MaterialFormFieldAppearance.FORM_FIELD_APPEARANCE\">\n                    <mat-label class=\"formLabel\">Type</mat-label>\n                    <input class=\"formPlaceholder\" type=\"text\" placeholder=\"Type\" matInput formControlName=\"type\" required\n                        pattern=\"{{ COMMON_CONSTANT.SPECIAL_CHARACTERS_PATTERN }}\" />\n                    <mat-error *ngIf=\"errorHandling(consumerFG, 'type', 'required')\">\n                        {{ FormErrorEnum.REQUIRED }}\n                    </mat-error>\n                    <mat-error *ngIf=\"errorHandling(consumerFG, 'type', 'pattern')\">\n                        {{ FormErrorEnum.PATTERN }}\n                    </mat-error>\n                </mat-form-field>\n            </div>\n        </div>\n\n        <button class=\"d-none\" type=\"submit\" #formSubmitBtn></button>\n    </form>\n</mat-dialog-content>\n\n<div class=\"tscDialogFooter\" #footer>\n    <button class=\"btn btn-sm btn-success\" [ngClass]=\"{'disabled': isEqual && action == FormAction.UPDATE}\"\n        (click)=\"formSubmitBtn.click()\" matRipple [matRippleCentered]=\"MATERIAL_CONSTANT.MAT_RIPPLE_CENTER\"\n        matTooltipPosition=\"below\" [matTooltip]=\"ButtonTooltipEnum.NO_CHANGE\"> {{\n        tscCommonService.getButtonLabel(action) }}</button>\n    <button class=\"btn btn-sm btn-secondary me-2\" mat-dialog-close matRipple\n        [matRippleCentered]=\"MATERIAL_CONSTANT.MAT_RIPPLE_CENTER\">Cancel</button>\n</div>","import { Component, ElementRef, OnInit, ViewChild } from '@angular/core';\nimport { FormControl, Validators } from '@angular/forms';\n\nimport { MatSort } from '@angular/material/sort';\nimport { MatDialog } from '@angular/material/dialog';\nimport { MatPaginator } from '@angular/material/paginator';\n\nimport { merge, fromEvent, of as observableOf } from 'rxjs';\nimport { map, startWith, switchMap, catchError } from \"rxjs/operators\";\n\nimport {\n    faPlus,\n    faEllipsisV\n} from '@fortawesome/free-solid-svg-icons';\n\nimport { SourceConsumerPage, SourceConsumerPageM, UtilitySourceTypeM } from '../../../../model/source-consumer.model';\n\nimport { ConsumerController } from '../../../../controller/consumer.controller';\n\nimport { SourceService } from '../../../../service/source.service';\n\nimport { ConsumerCreateUpdateComponent } from '../../_dialog/consumer/create-update/create-update.component';\n\n// tsc-library\nimport {\n    MATERIAL_CONSTANT,\n    TABLE_CONSTANT,\n    ButtonTooltipEnum,\n    ButtonLabelEnum,\n    SearchBarOneComponent,\n    FormAction,\n    COMMON_CONSTANT,\n    DialogOneComponent,\n    DialogOneEnum,\n    PageM,\n    DialogResponseEnum,\n    FunnelFilterComponent,\n} from '@library/tsc-common';\nimport { StorageService } from '@library/storage-service';\n// /tsc-library/\n\n@Component({\n    selector: 'lib-page',\n    templateUrl: './page.component.html',\n    styles: [\n    ]\n})\nexport class ConsumerPageComponent implements OnInit {\n\n    faPlus = faPlus;\n    faEllipsisV = faEllipsisV;\n\n    MATERIAL_CONSTANT = MATERIAL_CONSTANT;\n    TABLE_CONSTANT = TABLE_CONSTANT;\n    COMMON_CONSTANT = COMMON_CONSTANT;\n\n    ButtonTooltipEnum = ButtonTooltipEnum;\n    FormAction = FormAction;\n\n    searchByPlaceHolder: string = 'consumer name';\n\n    orgID: any;\n    utilitySourceI: any;\n    dataSource = [new SourceConsumerPage()];\n    dataSourceLength: number = 0;\n    displayedColumn: string[] = ['id', 'name', 'utilitySourceName', 'type', 'option'];\n    searchFlag: boolean = false;\n    searchValue: string;\n    searchFC = new FormControl('', Validators.required);\n\n    utilitySource: boolean = false;\n    utilitySourceFC: FormControl = new FormControl();\n    filterArr: Array<string> = [];\n\n    @ViewChild('sort') sort: MatSort;\n    @ViewChild('paginator') paginator: MatPaginator;\n    @ViewChild('refreshBtn') refreshBtn: ElementRef;\n    @ViewChild('searchBar') searchBar: SearchBarOneComponent;\n    @ViewChild('typeSelect') typeSelect: FunnelFilterComponent;\n\n    constructor(\n        private dialog: MatDialog,\n        private storageService: StorageService,\n        private sourceService: SourceService,\n        private consumerController: ConsumerController\n    ) { }\n\n    ngOnInit(): void {\n        this.orgID = this.storageService.getStorage('currentOrgID');\n\n        this.getUtilitySourceAndType();\n    }\n\n    async getUtilitySourceAndType() {\n        const result = <UtilitySourceTypeM>await this.sourceService.getUtilitySourceAndType(this.orgID);\n        const allKey = {\n            \"id\": 0,\n            \"name\": \"All\",\n            \"keyID\": \"ALL\",\n            \"type\": []\n        }\n        result.utilitySource.unshift(allKey);\n        this.utilitySourceI = result.utilitySource;\n    }\n\n    ngAfterViewInit() {\n        merge(\n            this.sort.sortChange,\n            this.typeSelect.mono,\n            fromEvent(this.refreshBtn.nativeElement, 'click')\n        ).pipe(\n            startWith({}),\n            switchMap((): any => {\n\n                this.filterArr = [];\n\n                if (this.searchFlag) {\n                    var searchValue = 'name:' + this.searchValue;\n                }\n\n                if (this.utilitySource) {\n                    if (this.utilitySourceFC.value == 'ALL') {\n                        this.utilitySource = false;\n                    } else {\n                        this.filterArr.push('utilitySource:' + this.utilitySourceFC.value);\n                    }\n                }\n\n                return this.consumerController.getConsumerTypeByPage(\n                    this.paginator.pageIndex,\n                    this.paginator.pageSize,\n                    this.sort.active,\n                    this.sort.direction,\n                    searchValue,\n                    this.filterArr,\n                    this.orgID,\n                ).pipe(catchError(() => observableOf(null)));\n            }),\n            map((response: PageM<SourceConsumerPageM>): any => {\n                if (response == null) {\n                    this.dataSourceLength = 0;\n                    return [];\n                }\n\n                this.dataSourceLength = response.totalCount;\n                return response.records;\n            })\n        ).subscribe((dataSource) => {\n            this.dataSource = dataSource;\n        });\n    }\n\n    searchFn(value: string) {\n        this.searchFlag = true;\n        this.searchValue = value;\n\n        if (value.length == 0) {\n            this.resetSearch();\n        }\n\n        this.refreshBtn.nativeElement.click();\n    }\n\n    resetSearch() {\n        this.searchFlag = false;\n        this.searchBar.searchClear();\n    }\n\n    createConsumer(action: string) {\n        const dialogRef = this.dialog.open(ConsumerCreateUpdateComponent,\n            {\n                height: '100vh',\n                width: '600px',\n                position: { right: '-2px', top: '0px' },\n                disableClose: true,\n                panelClass: 'matDialogContainerOverride',\n                data: {\n                    action: action\n                }\n            });\n\n        dialogRef.afterClosed()\n            .subscribe((result) => {\n                if (result.status == DialogResponseEnum.SUCCESS) {\n                    this.refreshBtn.nativeElement.click();\n                }\n            });\n    }\n\n    updateConsumer = (action, row) => {\n        const dialogRef = this.dialog.open(ConsumerCreateUpdateComponent,\n            {\n                height: '100vh',\n                width: '600px',\n                position: { right: '-2px', top: '0px' },\n                disableClose: true,\n                panelClass: 'matDialogContainerOverride',\n                data: {\n                    action: action,\n                    consumerID: row.id\n                }\n            });\n\n        dialogRef.afterClosed()\n            .subscribe((result) => {\n                if (result.status == DialogResponseEnum.SUCCESS) {\n                    this.refreshBtn.nativeElement.click();\n                }\n            });\n    }\n\n    openDeleteDialog(consumer) {\n\n        const dialog = this.dialog.open(DialogOneComponent, {\n            minWidth: '450px',\n            maxWidth: '450px',\n            data: {\n                type: DialogOneEnum.DELETE,\n                icon: 'dangerous',\n                header: 'Delete consumer type?',\n                body: '<b>' + consumer.name + '</b>' + ' will be deleted permanently.</br></br>Are you sure you want to continue?',\n                buttonOne: ButtonLabelEnum.CANCEL_BTN_LABEL,\n                buttonTwo: ButtonLabelEnum.DELETE_BTN_LABEL\n            }\n        });\n        dialog.afterClosed().subscribe(res => {\n            if (res) {\n                this.deleteConsumerType(consumer.id);\n            }\n        })\n    }\n\n    deleteConsumerType(consumerID) {\n        this.consumerController.deleteConsumerType(this.orgID, consumerID).subscribe((deleteRes) => {\n            if (deleteRes) {\n                this.refreshBtn.nativeElement.click();\n            }\n        });\n    }\n\n}\n","<div class=\"card cardOverwrite h100\">\n    <div class=\"headerContainer\">\n        <div class=\"headerLeftContainer\">\n            <div class=\"pageTitle\">Consumer type</div>\n            <div class=\"pageSubtitle\"></div>\n        </div>\n\n        <div class=\"headerRightContainer\">\n            <div class=\"headerRightContainerInner\">\n                <lib-search-bar-one class=\"me-3\" #searchBar [searchBy]=\"searchByPlaceHolder\"\n                    (emitSearch)=\"searchFn($event)\"></lib-search-bar-one>\n\n                <button class=\"btn btn-sm btn-light refreshBtn centerAlign me-3 py-1\" #refreshBtn matRipple\n                    [matRippleCentered]=\"MATERIAL_CONSTANT.MAT_RIPPLE_CENTER\" matTooltipPosition=\"below\"\n                    [matTooltip]=\"ButtonTooltipEnum.REFRESH\">\n                    <span class=\"material-symbols-outlined text-secondary\">\n                        refresh\n                    </span>\n                </button>\n\n                <button type=\"button\" class=\"btn btn-sm btn-success\" (click)=\"createConsumer(FormAction.CREATE)\" matRipple\n                    [matRippleCentered]=\"MATERIAL_CONSTANT.MAT_RIPPLE_CENTER\" matTooltipPosition=\"below\"\n                    [matTooltip]=\"ButtonTooltipEnum.CREATE\">\n                    <fa-icon [icon]=\"faPlus\" class=\"me-1\"></fa-icon>Consumer type\n                </button>\n            </div>\n        </div>\n    </div>\n\n    <table class=\"w-100\" mat-table matSort #sort=\"matSort\" matSortActive=\"name\" matSortDirection=\"asc\"\n        matSortDisableClear [dataSource]=\"dataSource\">\n\n        <ng-container matColumnDef=\"id\">\n            <th mat-header-cell *matHeaderCellDef>ID</th>\n            <td mat-cell *matCellDef=\"let row\">{{ row.id }}</td>\n        </ng-container>\n\n        <ng-container matColumnDef=\"name\">\n            <th class=\"px-4\" mat-header-cell *matHeaderCellDef mat-sort-header disableClear>Name</th>\n            <td class=\"px-4\" mat-cell *matCellDef=\"let row\">\n                {{ row.name ? row.name : COMMON_CONSTANT.HYPHEN }}\n            </td>\n        </ng-container>\n\n        <ng-container matColumnDef=\"utilitySourceName\">\n            <th mat-header-cell *matHeaderCellDef>\n                <funnel-filter #typeSelect header=\"Utility source\" type=\"mono\" value=\"keyID\" [entityList]=\"utilitySourceI\"\n                    view=\"name\" [selectFC]=\"utilitySourceFC\" [active]=\"utilitySource\" (mono)=\"utilitySource = true;\">\n                </funnel-filter>\n            </th>\n            <td mat-cell *matCellDef=\"let row\">\n                {{ row.utilitySourceName ? row.utilitySourceName : COMMON_CONSTANT.HYPHEN }}\n            </td>\n        </ng-container>\n\n        <ng-container matColumnDef=\"type\">\n            <th mat-header-cell *matHeaderCellDef>Type</th>\n            <td mat-cell *matCellDef=\"let row\">\n                {{ row.type ? row.type : COMMON_CONSTANT.HYPHEN }}\n            </td>\n        </ng-container>\n\n        <ng-container matColumnDef=\"option\">\n            <th mat-header-cell *matHeaderCellDef></th>\n            <td mat-cell *matCellDef=\"let row\">\n                <div class=\"centerAlignVertical\">\n\n                    <button type=\"button\" class=\"iconBtn centerAlign text-primary updateIconHover\"\n                        (click)=\"updateConsumer(FormAction.UPDATE, row)\" matRipple [matRippleCentered]=\"MATERIAL_CONSTANT.MAT_RIPPLE_CENTER\"\n                        matTooltipPosition=\"below\" [matTooltip]=\"ButtonTooltipEnum.UPDATE\">\n                        <span class=\"material-symbols-outlined icon\">\n                            edit\n                        </span>\n                    </button>\n\n                    <a class=\"iconBtn centerAlign text-danger deleteIconHover cursorPointer\" matTooltipPosition=\"below\"\n                        [matTooltip]=\"ButtonTooltipEnum.DELETE\" matRipple\n                        [matRippleCentered]=\"MATERIAL_CONSTANT.MAT_RIPPLE_CENTER\" (click)=\"openDeleteDialog(row)\">\n                        <span class=\"material-symbols-outlined icon\">\n                            delete\n                        </span>\n                    </a>\n                </div>\n            </td>\n        </ng-container>\n\n        <tr mat-header-row *matHeaderRowDef=\"displayedColumn\"></tr>\n        <tr mat-row *matRowDef=\"let row; columns: displayedColumn;\" class=\"dataRow\"></tr>\n\n        <tr class=\"mat-row\" *matNoDataRow>\n            <td class=\"mat-cell text-center\" [attr.colspan]=\"displayedColumn.length\">\n                {{ TABLE_CONSTANT.TABLE_NO_DATA }}\n            </td>\n        </tr>\n    </table>\n\n    <mat-paginator class=\"roundedBorder\" showFirstLastButtons #paginator [length]=\"dataSourceLength\"\n        [pageSize]=\"TABLE_CONSTANT.DEFAULT_PAGE_SIZE\" [pageSizeOptions]=\"TABLE_CONSTANT.PAGE_SIZE_OPTION\">\n    </mat-paginator>\n</div>","import { NgModule } from '@angular/core';\nimport { RouterModule, Routes } from '@angular/router';\n\nimport { ConsumerPageComponent } from './page.component';\n\nconst routes: Routes = [\n    {\n        path: '',\n        component: ConsumerPageComponent\n    }\n];\n\n@NgModule({\n    imports: [RouterModule.forChild(routes)],\n    exports: [RouterModule]\n})\nexport class ConsumerPageRoutingModule { }\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\n\nimport { FormsModule } from '@angular/forms';\nimport { ReactiveFormsModule } from '@angular/forms';\n\nimport { MatRippleModule } from '@angular/material/core';\nimport { MatTableModule } from '@angular/material/table';\nimport { MatSortModule } from '@angular/material/sort';\nimport { MatTooltipModule } from '@angular/material/tooltip';\nimport { MatDialogModule } from '@angular/material/dialog';\nimport { MatPaginatorModule } from '@angular/material/paginator';\n\nimport { NgbModule } from '@ng-bootstrap/ng-bootstrap';\nimport { FontAwesomeModule } from '@fortawesome/angular-fontawesome';\n\nimport { ConsumerPageRoutingModule } from './page-routing.module';\nimport { ConsumerPageComponent } from './page.component';\n\n// tsc-library\nimport { SearchBarOneModule, FunnelFilterModule } from '@library/tsc-common';\n// /tsc-library/\n\n@NgModule({\n    declarations: [\n        ConsumerPageComponent\n    ],\n    imports: [\n        CommonModule,\n        ConsumerPageRoutingModule,\n\n        FormsModule,\n        ReactiveFormsModule,\n\n        MatRippleModule,\n        MatTableModule,\n        MatSortModule,\n        MatTooltipModule,\n        MatDialogModule,\n        MatPaginatorModule,\n\n        NgbModule,\n        FontAwesomeModule,\n\n        SearchBarOneModule,\n        FunnelFilterModule\n    ]\n})\nexport class ConsumerPageModule { }\n","import { Component, ElementRef, Inject, OnInit, Renderer2, ViewChild } from '@angular/core';\nimport { FormBuilder, FormGroup, Validators } from '@angular/forms';\n\nimport {\n    MAT_DIALOG_DATA,\n    MatDialogRef\n} from '@angular/material/dialog';\n\nimport { isEqual } from 'lodash';\n\nimport { SourceM, UtilitySourceTypeM } from '../../../../../model/source-consumer.model';\n\nimport { SourceController } from '../../../../../controller/source.controller';\n\nimport { SourceService } from '../../../../../service/source.service';\n\n// tsc-library\nimport { MaterialFormFieldAppearance, ButtonLabelEnum, FormAction, PageTitleEnum, FormErrorEnum, TSCCommonService, ResponseM, InvalidForm, COMMON_CONSTANT, Static, DialogResponseEnum, ButtonTooltipEnum, MATERIAL_CONSTANT } from '@library/tsc-common';\nimport { StorageService } from '@library/storage-service';\nimport { ToastrColor, ToastrService } from '@library/toastr-service';\n// /tsc-library/\n\n@Component({\n    selector: 'lib-create-update',\n    templateUrl: './create-update.component.html',\n    styles: [\n    ]\n})\nexport class SourceCreateUpdateComponent implements OnInit {\n\n    COMMON_CONSTANT = COMMON_CONSTANT;\n    MATERIAL_CONSTANT = MATERIAL_CONSTANT;\n\n    FormAction = FormAction;\n    FormErrorEnum = FormErrorEnum;\n    ButtonLabelEnum = ButtonLabelEnum;\n    ButtonTooltipEnum = ButtonTooltipEnum;\n    PageTitleEnum = PageTitleEnum;\n    MaterialFormFieldAppearance = MaterialFormFieldAppearance;\n\n    pageTitle: string = 'Source type';\n\n    orgID: any;\n    sourceID: any;\n    action: string;\n    isEqual: boolean = true;\n    intialObject: any;\n\n    utilitySourceTypeM: any;\n    allSourceTypeID: any[] = [];\n    totalSourceTypeCount: number = 0;\n    utilitySourceI = [new Static()];\n    sourceType = [new Static()];\n    sourceM: SourceM;\n    sourceFG: FormGroup;\n\n    @ViewChild('header') header: ElementRef;\n    @ViewChild('footer') footer: ElementRef;\n    @ViewChild('body') body: ElementRef;\n\n    constructor(\n        @Inject(MAT_DIALOG_DATA) public data,\n        private dialogRef: MatDialogRef<SourceCreateUpdateComponent>,\n        private renderer: Renderer2,\n        private formBuilder: FormBuilder,\n        private storageService: StorageService,\n        private toastrService: ToastrService,\n        public tscCommonService: TSCCommonService,\n        private sourceController: SourceController,\n        private sourceService: SourceService\n    ) {\n        this.action = data.action;\n        this.sourceID = data.sourceID;\n    }\n\n    ngOnInit(): void {\n        this.orgID = this.storageService.getStorage('currentOrgID');\n\n        this.getUtilitySourceAndType();\n        this.sourceFGInit();\n\n        if (this.action == FormAction.UPDATE) {\n            this.getSourceTypeByID(this.sourceID);\n        }\n    }\n\n    ngAfterViewInit() {\n        this.heightHandler();\n    }\n\n    heightHandler(): void {\n        const headerHeight = this.header.nativeElement.offsetHeight;\n        const footerHeight = this.footer.nativeElement.offsetHeight;\n        const offsetHeight = 'calc(100vh - ' + (headerHeight + footerHeight + 24) + 'px)';\n\n        this.renderer.setStyle(this.body.nativeElement, 'height', offsetHeight);\n        this.renderer.setStyle(this.body.nativeElement, 'max-height', offsetHeight);\n    }\n\n    async getUtilitySourceAndType() {\n        const result = <UtilitySourceTypeM>await this.sourceService.getUtilitySourceAndType(this.orgID);\n        this.utilitySourceTypeM = result.utilitySource;\n    }\n\n    sourceFGInit() {\n        this.sourceFG = this.formBuilder.group({\n            name: [, [Validators.required]],\n            utilitySourceID: [, [Validators.required]],\n            typeID: [, [Validators.required]]\n        });\n    }\n\n    onUtilitySourceChange(utilitySourceID: number) {\n        const selectedUtilitySource = this.utilitySourceTypeM.find(source => source.id == utilitySourceID);\n        if (selectedUtilitySource) {\n            this.sourceType = selectedUtilitySource.type;\n        } else {\n            this.sourceType = [];\n        }\n    }\n\n    sourceSubmit() {\n\n        if (this.sourceFG.invalid) {\n            this.toastrService.openToast(InvalidForm.INVALID_FORM_TITLE, InvalidForm.INVALID_FORM_MESSAGE, ToastrColor.ERROR);\n            return;\n        } else {\n            if (this.action == FormAction.CREATE) {\n                this.createSourceType();\n            } else if (this.action == FormAction.UPDATE) {\n                this.updateSourceType();\n            }\n        }\n    }\n\n    createSourceType() {\n        this.sourceController.createSourceType(this.orgID, this.sourceFG.value).subscribe((res: ResponseM) => {\n\n            let result;\n            result = {\n                status: DialogResponseEnum.SUCCESS,\n            }\n\n            this.dialogRef.close(result);\n\n        }, error => {\n            console.log('error in createSourceType -', error);\n        });\n    }\n\n    getSourceTypeByID(sourceID) {\n        this.sourceController.getSourceTypeByID(this.orgID, sourceID).subscribe((res: SourceM) => {\n            this.sourceM = res;\n            this.patchSource(this.sourceM);\n        }, error => {\n            console.log('error in getSourceTypeByID -', error);\n        });\n    }\n\n    patchSource(source: SourceM) {\n        this.sourceFG.patchValue(source);\n\n        this.onUtilitySourceChange(source.utilitySourceID);\n\n        this.intialObject = this.sourceFG.value;\n\n        this.sourceFG.valueChanges.subscribe(() => {\n            this.isEqual = isEqual(this.intialObject, this.sourceFG.value);\n        });\n\n    }\n\n    updateSourceType() {\n        this.sourceController.updateSourceType(this.orgID, this.sourceID, this.sourceFG.value).subscribe((res: ResponseM) => {\n\n            let result;\n            result = {\n                status: DialogResponseEnum.SUCCESS,\n            }\n\n            this.dialogRef.close(result);\n\n        }, error => {\n            console.log('error in updateSourceType -', error);\n        })\n    }\n\n    errorHandling = (formGroup: FormGroup, controlPath: string, error: string): boolean => {\n        return formGroup.get(controlPath).hasError(error);\n    }\n\n}","<div class=\"headerContainer p-0\" #header>\n    <div class=\"headerLeftContainer\">\n        <div class=\"pageTitle\">{{ action == FormAction.CREATE ? PageTitleEnum.CREATE :\n            PageTitleEnum.UPDATE }} {{ pageTitle }}</div>\n    </div>\n\n    <div class=\"headerRightContainer\">\n        <div class=\"headerRightContainerInner\">\n            <button class=\"btn btn-sm centerAlign py-1 iconBtn\" matRipple\n                [matRippleCentered]=\"MATERIAL_CONSTANT.MAT_RIPPLE_CENTER\" matTooltipPosition=\"below\"\n                [matTooltip]=\"ButtonTooltipEnum.CLOSE\" mat-dialog-close>\n                <span class=\"material-symbols-outlined\">\n                    close\n                </span>\n            </button>\n        </div>\n    </div>\n</div>\n\n<mat-dialog-content class=\"mat-typography customScrollBar pt-2\" #body>\n    <form [formGroup]=\"sourceFG\" (ngSubmit)=\"sourceSubmit()\">\n\n        <div class=\"row\">\n            <div class=\"col-sm-12\">\n                <mat-form-field class=\"matFieldWidth100\"\n                    [appearance]=\"MaterialFormFieldAppearance.FORM_FIELD_APPEARANCE\">\n                    <mat-label class=\"formLabel\">Name</mat-label>\n                    <input class=\"formPlaceholder\" type=\"text\" placeholder=\"Source name\" matInput formControlName=\"name\"\n                        required />\n                    <mat-error *ngIf=\"errorHandling(sourceFG, 'name', 'required')\">\n                        {{ FormErrorEnum.REQUIRED }}\n                    </mat-error>\n                </mat-form-field>\n            </div>\n        </div>\n\n        <div class=\"row\">\n            <div class=\"col-sm-12\">\n                <mat-form-field class=\"matFieldWidth100\" [appearance]=\"MaterialFormFieldAppearance.FORM_FIELD_APPEARANCE\">\n                    <mat-label>Select utility source</mat-label>\n\n                    <mat-select formControlName=\"utilitySourceID\" (selectionChange)=\"onUtilitySourceChange($event.value)\" required>\n                        <ng-container\n                            *ngIf=\"utilitySourceTypeM && utilitySourceTypeM.length > 0 && utilitySourceTypeM[0]['id']; else noUtilitySource\">\n                            <mat-option *ngFor=\"let utilitySource of utilitySourceTypeM\" [value]=\"utilitySource.id\">\n                                {{ utilitySource.name }}\n                            </mat-option>\n                        </ng-container>\n                        <ng-template #noUtilitySource>\n                            <mat-option disabled>\n                                {{ COMMON_CONSTANT.NO_DATA_FOUND }}\n                            </mat-option>\n                        </ng-template>\n                    </mat-select>\n\n                    <mat-error *ngIf=\"errorHandling(sourceFG, 'utilitySourceID', 'required')\">\n                        {{ FormErrorEnum.REQUIRED }}\n                    </mat-error>\n                </mat-form-field>\n            </div>\n        </div>\n\n        <div class=\"row\">\n            <div class=\"col-sm-12\">\n                <mat-form-field class=\"matFieldWidth100\" [appearance]=\"MaterialFormFieldAppearance.FORM_FIELD_APPEARANCE\">\n                    <mat-label>Select utility source type</mat-label>\n\n                    <mat-select formControlName=\"typeID\" required>\n                        <ng-container *ngIf=\"sourceType && sourceType.length > 0 && sourceType[0]['id']; else noSourceType\">\n                            <mat-option *ngFor=\"let type of sourceType\" [value]=\"type.id\">\n                                {{ type.name }}\n                            </mat-option>\n                        </ng-container>\n                        <ng-template #noSourceType>\n                            <mat-option disabled>\n                                {{ COMMON_CONSTANT.NO_DATA_FOUND }}\n                            </mat-option>\n                        </ng-template>\n                    </mat-select>\n\n                    <mat-error *ngIf=\"errorHandling(sourceFG, 'typeID', 'required')\">\n                        {{ FormErrorEnum.REQUIRED }}\n                    </mat-error>\n                </mat-form-field>\n            </div>\n        </div>\n\n        <button class=\"d-none\" type=\"submit\" #formSubmitBtn></button>\n    </form>\n</mat-dialog-content>\n\n<div class=\"tscDialogFooter\" #footer>\n    <button class=\"btn btn-sm btn-success\" [ngClass]=\"{'disabled': isEqual && action == FormAction.UPDATE}\"\n        (click)=\"formSubmitBtn.click()\" matRipple [matRippleCentered]=\"MATERIAL_CONSTANT.MAT_RIPPLE_CENTER\"\n        matTooltipPosition=\"below\" [matTooltip]=\"ButtonTooltipEnum.NO_CHANGE\"> {{\n        tscCommonService.getButtonLabel(action) }}</button>\n    <button class=\"btn btn-sm btn-secondary me-2\" mat-dialog-close matRipple\n        [matRippleCentered]=\"MATERIAL_CONSTANT.MAT_RIPPLE_CENTER\">Cancel</button>\n</div>","import { NgModule } from '@angular/core';\nimport { RouterModule, Routes } from '@angular/router';\n\nimport { SourceCreateUpdateComponent } from './create-update.component';\n\nconst routes: Routes = [\n    {\n        path: '',\n        component: SourceCreateUpdateComponent\n    }\n];\n\n@NgModule({\n    imports: [RouterModule.forChild(routes)],\n    exports: [RouterModule]\n})\nexport class SourceCreateUpdateRoutingModule { }\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\n\nimport {\n    FormsModule,\n    ReactiveFormsModule\n} from '@angular/forms';\n\nimport { MatButtonModule } from '@angular/material/button';\nimport { MatFormFieldModule } from '@angular/material/form-field';\nimport { MatIconModule } from '@angular/material/icon';\nimport { MatInputModule } from '@angular/material/input';\nimport { MatSelectModule } from '@angular/material/select';\nimport { MatTooltipModule } from '@angular/material/tooltip';\nimport { MatOptionModule } from '@angular/material/core';\nimport { MatRippleModule } from '@angular/material/core';\nimport { MatDialogModule } from '@angular/material/dialog';\n\nimport { NgbModule } from '@ng-bootstrap/ng-bootstrap';\n\nimport { SourceCreateUpdateRoutingModule } from './create-update-routing.module';\nimport { SourceCreateUpdateComponent } from './create-update.component';\n\n\n@NgModule({\n    declarations: [\n        SourceCreateUpdateComponent\n    ],\n    imports: [\n        CommonModule,\n        SourceCreateUpdateRoutingModule,\n\n        FormsModule,\n        ReactiveFormsModule,\n\n        MatIconModule,\n        MatInputModule,\n        MatSelectModule,\n        MatTooltipModule,\n        MatOptionModule,\n        MatFormFieldModule,\n        MatButtonModule,\n        MatRippleModule,\n        MatDialogModule,\n\n        NgbModule\n    ]\n})\nexport class SourceCreateUpdateModule { }\n","import { NgModule } from '@angular/core';\nimport { RouterModule, Routes } from '@angular/router';\n\nimport { ConsumerCreateUpdateComponent } from './create-update.component';\n\nconst routes: Routes = [\n    {\n        path: '',\n        component: ConsumerCreateUpdateComponent\n    }\n];\n\n@NgModule({\n    imports: [RouterModule.forChild(routes)],\n    exports: [RouterModule]\n})\nexport class ConsumerCreateUpdateRoutingModule { }\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\n\nimport {\n    FormsModule,\n    ReactiveFormsModule\n} from '@angular/forms';\n\nimport { MatButtonModule } from '@angular/material/button';\nimport { MatFormFieldModule } from '@angular/material/form-field';\nimport { MatIconModule } from '@angular/material/icon';\nimport { MatInputModule } from '@angular/material/input';\nimport { MatSelectModule } from '@angular/material/select';\nimport { MatTooltipModule } from '@angular/material/tooltip';\nimport { MatOptionModule } from '@angular/material/core';\nimport { MatRippleModule } from '@angular/material/core';\nimport { MatDialogModule } from '@angular/material/dialog';\n\nimport { NgbModule } from '@ng-bootstrap/ng-bootstrap';\n\nimport { ConsumerCreateUpdateRoutingModule } from './create-update-routing.module';\nimport { ConsumerCreateUpdateComponent } from './create-update.component';\n\n\n@NgModule({\n    declarations: [\n        ConsumerCreateUpdateComponent\n    ],\n    imports: [\n        CommonModule,\n        ConsumerCreateUpdateRoutingModule,\n\n        FormsModule,\n        ReactiveFormsModule,\n\n        MatIconModule,\n        MatInputModule,\n        MatSelectModule,\n        MatTooltipModule,\n        MatOptionModule,\n        MatFormFieldModule,\n        MatButtonModule,\n        MatRippleModule,\n        MatDialogModule,\n\n        NgbModule\n    ]\n})\nexport class ConsumerCreateUpdateModule { }\n","import { Component, ElementRef, OnInit, ViewChild } from '@angular/core';\nimport { FormControl, Validators } from '@angular/forms';\n\nimport { MatSort } from '@angular/material/sort';\nimport { MatDialog } from '@angular/material/dialog';\nimport { MatPaginator } from '@angular/material/paginator';\n\nimport { merge, fromEvent, of as observableOf } from 'rxjs';\nimport { map, startWith, switchMap, catchError } from \"rxjs/operators\";\n\nimport {\n    faPlus,\n    faEllipsisV\n} from '@fortawesome/free-solid-svg-icons';\n\nimport { SourceConsumerPage, SourceConsumerPageM, UtilitySourceTypeM } from '../../../../model/source-consumer.model';\n\nimport { SourceController } from '../../../../controller/source.controller';\n\nimport { SourceService } from '../../../../service/source.service';\n\nimport { SourceCreateUpdateComponent } from '../../_dialog/source/create-update/create-update.component';\n\n// tsc-library\nimport {\n    MATERIAL_CONSTANT,\n    TABLE_CONSTANT,\n    ButtonTooltipEnum,\n    ButtonLabelEnum,\n    SearchBarOneComponent,\n    FormAction,\n    COMMON_CONSTANT,\n    DialogOneComponent,\n    DialogOneEnum,\n    FunnelFilterComponent,\n    PageM,\n    DialogResponseEnum\n} from '@library/tsc-common';\nimport { StorageService } from '@library/storage-service';\n// /tsc-library/\n\n@Component({\n    selector: 'lib-page',\n    templateUrl: './page.component.html',\n    styles: [\n    ]\n})\nexport class SourcePageComponent implements OnInit {\n\n    faPlus = faPlus;\n    faEllipsisV = faEllipsisV;\n\n    MATERIAL_CONSTANT = MATERIAL_CONSTANT;\n    TABLE_CONSTANT = TABLE_CONSTANT;\n    COMMON_CONSTANT = COMMON_CONSTANT;\n\n    ButtonTooltipEnum = ButtonTooltipEnum;\n    DialogResponseEnum = DialogResponseEnum;\n    FormAction = FormAction;\n\n    searchByPlaceHolder: string = 'source name';\n\n    orgID: any;\n    utilitySourceI: any;\n    dataSource = [new SourceConsumerPage()];\n    dataSourceLength: number = 0;\n    displayedColumn: string[] = ['id', 'name', 'utilitySourceName', 'type', 'option'];\n    searchFlag: boolean = false;\n    searchValue: string;\n    searchFC = new FormControl('', Validators.required);\n\n    utilitySource: boolean = false;\n    utilitySourceFC: FormControl = new FormControl();\n    filterArr: Array<string> = [];\n\n    @ViewChild('sort') sort: MatSort;\n    @ViewChild('paginator') paginator: MatPaginator;\n    @ViewChild('refreshBtn') refreshBtn: ElementRef;\n    @ViewChild('searchBar') searchBar: SearchBarOneComponent;\n    @ViewChild('typeSelect') typeSelect: FunnelFilterComponent;\n\n    constructor(\n        private dialog: MatDialog,\n        private storageService: StorageService,\n        private sourceController: SourceController,\n        private sourceService: SourceService\n    ) { }\n\n    ngOnInit(): void {\n        this.orgID = this.storageService.getStorage('currentOrgID');\n\n        this.getUtilitySourceAndType();\n    }\n\n    async getUtilitySourceAndType() {\n        const result = <UtilitySourceTypeM>await this.sourceService.getUtilitySourceAndType(this.orgID);\n        const allKey = {\n            \"id\": 0,\n            \"name\": \"All\",\n            \"keyID\": \"ALL\",\n            \"type\": []\n        }\n        result.utilitySource.unshift(allKey);\n        this.utilitySourceI = result.utilitySource;\n    }\n\n    ngAfterViewInit() {\n        merge(\n            this.sort.sortChange,\n            this.typeSelect.mono,\n            fromEvent(this.refreshBtn.nativeElement, 'click')\n        ).pipe(\n            startWith({}),\n            switchMap((): any => {\n\n                this.filterArr = [];\n\n                if (this.searchFlag) {\n                    var searchValue = 'name:' + this.searchValue;\n                }\n\n                if (this.utilitySource) {\n                    if (this.utilitySourceFC.value == 'ALL') {\n                        this.utilitySource = false;\n                    } else {\n                        this.filterArr.push('utilitySource:' + this.utilitySourceFC.value);\n                    }\n                }\n\n                return this.sourceController.getSourceTypeByPage(\n                    this.paginator.pageIndex,\n                    this.paginator.pageSize,\n                    this.sort.active,\n                    this.sort.direction,\n                    searchValue,\n                    this.filterArr,\n                    this.orgID,\n                ).pipe(catchError(() => observableOf(null)));\n            }),\n            map((response: PageM<SourceConsumerPageM>): any => {\n                if (response == null) {\n                    this.dataSourceLength = 0;\n                    return [];\n                }\n\n                this.dataSourceLength = response.totalCount;\n                return response.records;\n            })\n        ).subscribe((dataSource) => {\n            this.dataSource = dataSource;\n        });\n    }\n\n    searchFn(value: string) {\n        this.searchFlag = true;\n        this.searchValue = value;\n\n        if (value.length == 0) {\n            this.resetSearch();\n        }\n\n        this.refreshBtn.nativeElement.click();\n    }\n\n    resetSearch() {\n        this.searchFlag = false;\n        this.searchBar.searchClear();\n    }\n\n    createSource(action: string) {\n        const dialogRef = this.dialog.open(SourceCreateUpdateComponent,\n            {\n                height: '100vh',\n                width: '600px',\n                position: { right: '-2px', top: '0px' },\n                disableClose: true,\n                panelClass: 'matDialogContainerOverride',\n                data: {\n                    action: action\n                }\n            });\n\n        dialogRef.afterClosed()\n            .subscribe((result) => {\n                if (result.status == DialogResponseEnum.SUCCESS) {\n                    this.refreshBtn.nativeElement.click();\n                }\n            });\n    }\n\n    updateSource = (action, row) => {\n        const dialogRef = this.dialog.open(SourceCreateUpdateComponent,\n            {\n                height: '100vh',\n                width: '600px',\n                position: { right: '-2px', top: '0px' },\n                disableClose: true,\n                panelClass: 'matDialogContainerOverride',\n                data: {\n                    action: action,\n                    sourceID: row.id\n                }\n            });\n\n        dialogRef.afterClosed()\n            .subscribe((result) => {\n                if (result.status == DialogResponseEnum.SUCCESS) {\n                    this.refreshBtn.nativeElement.click();\n                }\n            });\n    }\n\n    openDeleteDialog(source) {\n\n        const dialog = this.dialog.open(DialogOneComponent, {\n            minWidth: '450px',\n            maxWidth: '450px',\n            data: {\n                type: DialogOneEnum.DELETE,\n                icon: 'dangerous',\n                header: 'Delete source type?',\n                body: '<b>' + source.name + '</b>' + ' will be deleted permanently.</br></br>Are you sure you want to continue?',\n                buttonOne: ButtonLabelEnum.CANCEL_BTN_LABEL,\n                buttonTwo: ButtonLabelEnum.DELETE_BTN_LABEL\n            }\n        });\n        dialog.afterClosed().subscribe(res => {\n            if (res) {\n                this.deleteSourceType(source.id);\n            }\n        })\n    }\n\n    deleteSourceType(sourceID) {\n        this.sourceController.deleteSourceType(this.orgID, sourceID).subscribe((deleteRes) => {\n            if (deleteRes) {\n                this.refreshBtn.nativeElement.click();\n            }\n        });\n    }\n\n}\n","<div class=\"card cardOverwrite h100\">\n    <div class=\"headerContainer\">\n        <div class=\"headerLeftContainer\">\n            <div class=\"pageTitle\">Source type</div>\n            <div class=\"pageSubtitle\"></div>\n        </div>\n\n        <div class=\"headerRightContainer\">\n            <div class=\"headerRightContainerInner\">\n                <lib-search-bar-one class=\"me-3\" #searchBar [searchBy]=\"searchByPlaceHolder\"\n                    (emitSearch)=\"searchFn($event)\"></lib-search-bar-one>\n\n                <button class=\"btn btn-sm btn-light refreshBtn centerAlign me-3 py-1\" #refreshBtn matRipple\n                    [matRippleCentered]=\"MATERIAL_CONSTANT.MAT_RIPPLE_CENTER\" matTooltipPosition=\"below\"\n                    [matTooltip]=\"ButtonTooltipEnum.REFRESH\">\n                    <span class=\"material-symbols-outlined text-secondary\">\n                        refresh\n                    </span>\n                </button>\n\n                <button type=\"button\" class=\"btn btn-sm btn-success\" (click)=\"createSource(FormAction.CREATE)\" matRipple\n                    [matRippleCentered]=\"MATERIAL_CONSTANT.MAT_RIPPLE_CENTER\" matTooltipPosition=\"below\"\n                    [matTooltip]=\"ButtonTooltipEnum.CREATE\">\n                    <fa-icon [icon]=\"faPlus\" class=\"me-1\"></fa-icon>Source type\n                </button>\n            </div>\n        </div>\n    </div>\n\n    <table class=\"w-100\" mat-table matSort #sort=\"matSort\" matSortActive=\"name\" matSortDirection=\"asc\"\n        matSortDisableClear [dataSource]=\"dataSource\">\n\n        <ng-container matColumnDef=\"id\">\n            <th mat-header-cell *matHeaderCellDef>ID</th>\n            <td mat-cell *matCellDef=\"let row\">{{ row.id }}</td>\n        </ng-container>\n\n        <ng-container matColumnDef=\"name\">\n            <th class=\"px-4\" mat-header-cell *matHeaderCellDef mat-sort-header disableClear>Name</th>\n            <td class=\"px-4\" mat-cell *matCellDef=\"let row\">\n                {{ row.name ? row.name : COMMON_CONSTANT.HYPHEN }}\n            </td>\n        </ng-container>\n\n        <ng-container matColumnDef=\"utilitySourceName\">\n            <th mat-header-cell *matHeaderCellDef>\n                <funnel-filter #typeSelect header=\"Utility source\" type=\"mono\" value=\"keyID\"\n                    [entityList]=\"utilitySourceI\" view=\"name\" [selectFC]=\"utilitySourceFC\" [active]=\"utilitySource\"\n                    (mono)=\"utilitySource = true;\">\n                </funnel-filter>\n            </th>\n            <td mat-cell *matCellDef=\"let row\">\n                {{ row.utilitySourceName ? row.utilitySourceName : COMMON_CONSTANT.HYPHEN }}\n            </td>\n        </ng-container>\n\n        <ng-container matColumnDef=\"type\">\n            <th class=\"px-4\" mat-header-cell *matHeaderCellDef>Utility source type</th>\n            <td class=\"px-4\" mat-cell *matCellDef=\"let row\">\n                {{ row.type ? row.type : COMMON_CONSTANT.HYPHEN }}\n            </td>\n        </ng-container>\n\n        <ng-container matColumnDef=\"option\">\n            <th mat-header-cell *matHeaderCellDef></th>\n            <td mat-cell *matCellDef=\"let row\">\n                <div class=\"centerAlignVertical\">\n\n                    <button type=\"button\" class=\"iconBtn centerAlign text-primary updateIconHover\"\n                        (click)=\"updateSource(FormAction.UPDATE, row)\" matRipple\n                        [matRippleCentered]=\"MATERIAL_CONSTANT.MAT_RIPPLE_CENTER\" matTooltipPosition=\"below\"\n                        [matTooltip]=\"ButtonTooltipEnum.UPDATE\">\n                        <span class=\"material-symbols-outlined icon\">\n                            edit\n                        </span>\n                    </button>\n\n                    <a class=\"iconBtn centerAlign text-danger deleteIconHover cursorPointer\" matTooltipPosition=\"below\"\n                        [matTooltip]=\"ButtonTooltipEnum.DELETE\" matRipple\n                        [matRippleCentered]=\"MATERIAL_CONSTANT.MAT_RIPPLE_CENTER\" (click)=\"openDeleteDialog(row)\">\n                        <span class=\"material-symbols-outlined icon\">\n                            delete\n                        </span>\n                    </a>\n                </div>\n            </td>\n        </ng-container>\n\n        <tr mat-header-row *matHeaderRowDef=\"displayedColumn\"></tr>\n        <tr mat-row *matRowDef=\"let row; columns: displayedColumn;\" class=\"dataRow\"></tr>\n\n        <tr class=\"mat-row\" *matNoDataRow>\n            <td class=\"mat-cell text-center\" [attr.colspan]=\"displayedColumn.length\">\n                {{ TABLE_CONSTANT.TABLE_NO_DATA }}\n            </td>\n        </tr>\n    </table>\n\n    <mat-paginator class=\"roundedBorder\" showFirstLastButtons #paginator [length]=\"dataSourceLength\"\n        [pageSize]=\"TABLE_CONSTANT.DEFAULT_PAGE_SIZE\" [pageSizeOptions]=\"TABLE_CONSTANT.PAGE_SIZE_OPTION\">\n    </mat-paginator>\n</div>","import { NgModule } from '@angular/core';\nimport { RouterModule, Routes } from '@angular/router';\n\nimport { SourcePageComponent } from './page.component';\n\nconst routes: Routes = [\n    {\n        path: '',\n        component: SourcePageComponent\n    }\n];\n\n@NgModule({\n    imports: [RouterModule.forChild(routes)],\n    exports: [RouterModule]\n})\nexport class SourcePageRoutingModule { }\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\n\nimport { FormsModule } from '@angular/forms';\nimport { ReactiveFormsModule } from '@angular/forms';\n\nimport { MatRippleModule } from '@angular/material/core';\nimport { MatTableModule } from '@angular/material/table';\nimport { MatSortModule } from '@angular/material/sort';\nimport { MatTooltipModule } from '@angular/material/tooltip';\nimport { MatDialogModule } from '@angular/material/dialog';\nimport { MatPaginatorModule } from '@angular/material/paginator';\n\nimport { NgbModule } from '@ng-bootstrap/ng-bootstrap';\nimport { FontAwesomeModule } from '@fortawesome/angular-fontawesome';\n\nimport { SourcePageRoutingModule } from './page-routing.module';\nimport { SourcePageComponent } from './page.component';\n\n// tsc-library\nimport { SearchBarOneModule, FunnelFilterModule } from '@library/tsc-common';\n// /tsc-library/\n\n@NgModule({\n    declarations: [\n        SourcePageComponent\n    ],\n    imports: [\n        CommonModule,\n        SourcePageRoutingModule,\n\n        FormsModule,\n        ReactiveFormsModule,\n\n        MatRippleModule,\n        MatTableModule,\n        MatSortModule,\n        MatTooltipModule,\n        MatDialogModule,\n        MatPaginatorModule,\n\n        NgbModule,\n        FontAwesomeModule,\n\n        SearchBarOneModule,\n        FunnelFilterModule\n    ]\n})\nexport class SourcePageModule { }\n","import { Component, OnInit } from '@angular/core';\nimport { FormArray, FormBuilder, FormControl, FormGroup, Validators } from '@angular/forms';\n\nimport { SelectionModel } from '@angular/cdk/collections';\n\nimport { isEqual } from 'lodash';\n\nimport { ConsumptionParameterM, SavedConsumptionParameterM } from '../../../../model/parameter.model';\nimport { SourceConsumerConfigure, SourceConsumerConfigureM } from '../../../../model/source-consumer.model';\n\nimport { ParameterController } from '../../../../controller/parameter.controller';\nimport { SourceController } from '../../../../controller/source.controller';\n\nimport { ParameterService } from '../../../../service/parameter.service';\n\n// tsc-library\nimport { MaterialFormFieldAppearance, ButtonLabelEnum, FormAction, PageTitleEnum, FormErrorEnum, TSCCommonService, InvalidForm, COMMON_CONSTANT, MatSelectSearchService, MessageAlertIconEnum, MessageAlertTypeEnum, ResponseM } from '@library/tsc-common';\nimport { StorageService } from '@library/storage-service';\nimport { ToastrColor, ToastrService } from '@library/toastr-service';\n// /tsc-library/\n\n@Component({\n    selector: 'lib-add-update',\n    templateUrl: './add-update.component.html',\n    styles: [\n    ]\n})\nexport class ConsumptionParamAddUpdateComponent implements OnInit {\n\n    COMMON_CONSTANT = COMMON_CONSTANT;\n\n    FormAction = FormAction;\n    FormErrorEnum = FormErrorEnum;\n    ButtonLabelEnum = ButtonLabelEnum;\n    PageTitleEnum = PageTitleEnum;\n    MessageAlertIconEnum = MessageAlertIconEnum;\n    MessageAlertTypeEnum = MessageAlertTypeEnum;\n    MaterialFormFieldAppearance = MaterialFormFieldAppearance;\n\n    orgID: any;\n    isEqual: boolean = true;\n    initialObject: any;\n\n    consumptionParamM: any;\n    consumptionParamFG: FormGroup;\n\n    sourceConsumerConfiguredM = new SourceConsumerConfigure();\n\n    allConsumptionParamID: any[] = [];\n    selection = new SelectionModel(true, []);\n\n    dependentConsumParamSearchUtil: MatSelectSearchService[] = [];\n\n    constructor(\n        private formBuilder: FormBuilder,\n        private storageService: StorageService,\n        private toastrService: ToastrService,\n        public tscCommonService: TSCCommonService,\n        private sourceController: SourceController,\n        private parameterController: ParameterController,\n        private parameterService: ParameterService\n    ) { }\n\n    ngOnInit(): void {\n        this.orgID = this.storageService.getStorage('currentOrgID');\n\n        this.getSourceConsumerConfig();\n        this.consumptionParamFGInit();\n    }\n\n    getSourceConsumerConfig() {\n        this.sourceController.getSourceConsumerConfig(this.orgID).subscribe((res: SourceConsumerConfigureM) => {\n            this.sourceConsumerConfiguredM = res;\n            this.getConsumptionParameter();\n        },\n            error => console.log('Error:', error)\n        );\n    }\n\n    getConsumptionParameter() {\n        this.consumptionParamFG.valueChanges.subscribe(() => { this.isEqual = isEqual(this.initialObject, this.consumptionParamFG.getRawValue()); });\n\n        this.parameterController.getConsumptionParameter(this.orgID).subscribe((response: ConsumptionParameterM) => {\n            if (response) {\n                this.consumptionParamM = response.consumptionParameter;\n\n                this.consumptionParamM.forEach((parameter) => {\n                    this.allConsumptionParamID.push(parameter);\n                    this.consumptionParameterFA.push(this.newConsumptionParameterFG(parameter.id));\n\n                    let searchUtility = new MatSelectSearchService(['label']);\n                    searchUtility.entityArr = parameter.dependentParameter;\n                    searchUtility.createSubscription();\n                    this.dependentConsumParamSearchUtil.push(searchUtility);\n\n                    this.initialObject = this.consumptionParamFG.value;\n                    this.isEqual = true;\n                });\n\n                this.getSavedConsumptionParameter();\n            }\n        }, error => {\n            console.log('error in getConsumptionParameter -', error);\n        });\n    }\n\n    consumptionParamFGInit() {\n        this.consumptionParamFG = this.formBuilder.group({\n            consumptionParameter: this.formBuilder.array([])\n        });\n    }\n\n    get consumptionParameterFA(): FormArray {\n        return this.consumptionParamFG.get('consumptionParameter') as FormArray;\n    }\n\n    async getSavedConsumptionParameter() {\n        const param = <SavedConsumptionParameterM[]>await this.parameterService.getSavedConsumptionParameter(this.orgID);\n        this.patchConsumptionParam(param)\n    }\n\n    patchConsumptionParam(param) {\n        this.consumptionParameterFA.controls.forEach(control => {\n            param.forEach(element => {\n                this.selection.select(element['aggregateParamID'])\n                if (element['aggregateParamID'] == control.value['aggregateParamID'])\n                    control.get('dependentParameterID').patchValue(element['dependentParameterID'])\n            });\n        });\n    }\n\n    selectAll() {\n        if (this.isAllSelected()) {\n            this.consumptionParameterFA.controls.forEach(control => {\n                const id = control.get('aggregateParamID').value;\n                this.selection.deselect(id);\n            });\n            return;\n        }\n        this.consumptionParameterFA.controls.forEach(control => {\n            const id = control.get('aggregateParamID').value;\n            this.selection.select(id);\n        });\n    }\n\n    isAllSelected() {\n        const selected = this.selection.selected.length;\n        const numRows = this.consumptionParamM.length;\n        return selected == numRows;\n    }\n\n    newConsumptionParameterFG(parameterID): FormGroup {\n        return this.formBuilder.group({\n            aggregateParamID: [parameterID],\n            dependentParameterID: [[], Validators.required]\n        });\n    }\n\n    selectAllDependentParam(index: number) {\n        const dependentParamFG = this.consumptionParameterFA.at(index) as FormGroup;\n        const dependentParamFC = dependentParamFG.get('dependentParameterID') as FormArray;\n\n        if (!dependentParamFC.value.includes(-1)) {\n            dependentParamFC.reset([]);\n            return;\n        }\n\n        const parameter = this.consumptionParamM[index];\n        const parameterDependentIDs = parameter.dependentParameter.map(depParam => depParam.id);\n\n        dependentParamFC.setValue([-1, ...parameterDependentIDs]);\n    }\n\n\n    selectDependentParam(index: number) {\n        const dependentParamFG = this.consumptionParameterFA.at(index) as FormGroup;\n        const dependentParamFC = dependentParamFG.get('dependentParameterID') as FormControl;\n\n        const selected = dependentParamFC.value;\n\n        const parameter = this.consumptionParamM[index];\n        const parameterDependentIDs = parameter.dependentParameter.map(depParam => depParam.id);\n        const totalDepParamCount = parameterDependentIDs.length;\n\n        if (selected.includes(-1)) {\n            selected.shift();\n            dependentParamFC.patchValue(selected);\n        } else if (dependentParamFC.value.length == totalDepParamCount) {\n            parameterDependentIDs.splice(0, 0, -1);\n            dependentParamFC.patchValue(parameterDependentIDs);\n        } else {\n            const filteredSelected = selected.filter(s => s != -1);\n            dependentParamFC.patchValue(filteredSelected);\n        }\n    }\n\n    consumptionParameterSubmit() {\n        const consumptionParameter = this.consumptionParamFG.value.consumptionParameter.map(param => {\n            const dependentParameterID = param.dependentParameterID.includes(-1)\n                ? param.dependentParameterID.filter(id => id != -1)\n                : param.dependentParameterID;\n\n            return { ...param, dependentParameterID };\n        });\n\n        if (this.consumptionParamFG.invalid) {\n            this.consumptionParamFG.markAllAsTouched();\n            this.toastrService.openToast(InvalidForm.INVALID_FORM_TITLE, InvalidForm.INVALID_FORM_TITLE, ToastrColor.ERROR);\n            return;\n        }\n\n        this.parameterController.saveConsumptionParameter(this.orgID, consumptionParameter).subscribe((res: ResponseM) => {\n            this.getConsumptionParameter();\n        }, error => {\n            console.log('error in saveConsumptionParameter -', error);\n        });\n    }\n\n    toggleField(index, parameterID) {\n        if (this.selection.isSelected(parameterID)) {\n            this.consumptionParameterFA.controls[index].enable();\n            return false;\n        } else {\n            this.consumptionParameterFA.controls[index].disable();\n            return true;\n        }\n    }\n\n    hasError = (control: string, error: string) => {\n        return this.consumptionParamFG.get(control).hasError(error);\n    }\n\n}\n","<div class=\"card main-card cardOverwrite h100\">\n    <div class=\"headerContainer\">\n        <div class=\"headerLeftContainer\">\n            <div class=\"pageTitle\">Add Consumption Parameter</div>\n            <div class=\"pageSubtitle\"></div>\n        </div>\n    </div>\n\n    <div class=\"card-body\">\n        <ng-container *ngIf=\"sourceConsumerConfiguredM?.sourceTypeConfigured; else notSourceType\">\n            <ng-container\n                *ngIf=\"consumptionParamM && consumptionParamM.length > 0 && consumptionParamM[0]['id']; else noComsumptionParamFound\">\n                <div class=\"row\">\n                    <div class=\"col-sm-12 mb-3\">\n                        <lib-message-alert [labelInp]=\"'Info'\"\n                            [contentInp]=\"'Adding consumption parameters will impact your data.'\"\n                            [messageAlertTypeInp]=\"MessageAlertTypeEnum.INFO\"\n                            [messageAlertIconInp]=\"MessageAlertIconEnum.INFO_ICON\">\n                        </lib-message-alert>\n                    </div>\n                </div>\n                <form [formGroup]=\"consumptionParamFG\" (ngSubmit)=\"consumptionParameterSubmit()\">\n                    <ng-container formArrayName=\"consumptionParameter\">\n                        <div class=\"row\">\n                            <div class=\"col-sm-12\">\n                                <table class=\"table\">\n                                    <tbody>\n                                        <tr class=\"tableHeader\">\n                                            <td><mat-checkbox (change)=\"$event ? selectAll() : null\"\n                                                    [checked]=\"selection.hasValue() && isAllSelected()\"\n                                                    [disabled]=\"consumptionParamM.length == 0 || consumptionParamM[0]['id'] == null\">\n                                                    Select all\n                                                </mat-checkbox></td>\n                                            <td align=\"center\" class=\"fw-bold\"> Consumption Parameter </td>\n                                            <td align=\"center\" class=\"fw-bold\"> Dependent Parameter </td>\n                                        </tr>\n                                    </tbody>\n                                    <tbody>\n                                        <tr *ngFor=\"let parameter of consumptionParamM; let i = index\">\n                                            <ng-container [formGroupName]=\"i\">\n                                                <td>\n                                                    <mat-checkbox\n                                                        (change)=\"$event ? selection.toggle(parameter.id) : null\"\n                                                        [checked]=\"selection.isSelected(parameter.id)\"></mat-checkbox>\n                                                </td>\n                                                <td align=\"center\">\n                                                    <div class=\"mt-4\">\n                                                        {{ parameter.label }}\n                                                    </div>\n                                                </td>\n                                                <td align=\"center\">\n                                                    <div class=\"row pt-2\">\n                                                        <div class=\"col-sm-8\">\n                                                            <mat-form-field class=\"matFieldWidth100\" [appearance]=\"MaterialFormFieldAppearance.FORM_FIELD_APPEARANCE\">\n                                                                <mat-label>Select dependent parameter</mat-label>\n\n                                                                <mat-select formControlName=\"dependentParameterID\" [disabled]=\"toggleField(i, parameter.id)\"\n                                                                    (selectionChange)=\"selection.select(parameter.id)\" multiple required>\n                                                                    <ng-container *ngIf=\"dependentConsumParamSearchUtil[i]['filteredEntities']; else noDependentParamFound\">\n                                                                        <ngx-mat-select-search [formControl]=\"dependentConsumParamSearchUtil[i].filterFC\"\n                                                                            placeholderLabel=\"Search by name\" noEntriesFoundLabel=\"No matching name found.\">\n                                                                        </ngx-mat-select-search>\n                                                                        <mat-option [value]=\"-1\" (click)=\"selectAllDependentParam(i)\"\n                                                                            [hidden]=\"dependentConsumParamSearchUtil[i].filterFC.value\">\n                                                                            Select all\n                                                                        </mat-option>\n                                                                        <mat-option *ngFor=\"let param of dependentConsumParamSearchUtil[i]['filteredEntities'] | async\"\n                                                                            [value]=\"param.id\" (click)=\"selectDependentParam(i)\">\n                                                                            {{ param.label }}\n                                                                        </mat-option>\n                                                                    </ng-container>\n                                                                    <ng-template #noDependentParamFound>\n                                                                        <mat-option disabled>\n                                                                            {{ COMMON_CONSTANT.NO_DATA_FOUND }}\n                                                                        </mat-option>\n                                                                    </ng-template>\n                                                                </mat-select>\n\n                                                                <mat-error *ngIf=\"this.consumptionParameterFA.controls[i].get('dependentParameterID').hasError('required')\">\n                                                                    {{ FormErrorEnum.REQUIRED }}\n                                                                </mat-error>\n                                                            </mat-form-field>\n                                                        </div>\n                                                    </div>\n                                                </td>\n                                            </ng-container>\n                                        </tr>\n                                    </tbody>\n                                </table>\n                            </div>\n                        </div>\n                    </ng-container>\n\n                    <button class=\"d-none\" type=\"submit\" #formSubmitBtn></button>\n\n                    <div class=\"row mt-2\">\n                        <div class=\"col-sm-12\">\n                            <div class=\"float-end\">\n                                <button class=\"btn btn-sm btn-secondary me-2\" type=\"button\"\n                                    (click)=\"tscCommonService.back()\">\n                                    {{ ButtonLabelEnum.CANCEL_BTN_LABEL }}\n                                </button>\n\n                                <button class=\"btn btn-sm btn-success\" [ngClass]=\"{'disabled' : isEqual}\"\n                                    type=\"submit\">{{\n                                    ButtonLabelEnum.SAVE_BTN_LABEL }}\n                                </button>\n                            </div>\n                        </div>\n                    </div>\n                </form>\n            </ng-container>\n            <ng-template #noComsumptionParamFound>\n                <lib-message-alert [labelInp]=\"'Not found!'\" [contentInp]=\"'No consumption parameter found.'\"\n                    [messageAlertTypeInp]=\"MessageAlertTypeEnum.DANGER\"\n                    [messageAlertIconInp]=\"MessageAlertIconEnum.DANGER_ICON\">\n                </lib-message-alert>\n            </ng-template>\n        </ng-container>\n        <ng-template #notSourceType>\n            <lib-message-alert [labelInp]=\"'Info'\"\n                [contentInp]=\"'Source type not set. Please set source type first to add consumption parameters'\"\n                [messageAlertTypeInp]=\"MessageAlertTypeEnum.INFO\"\n                [messageAlertIconInp]=\"MessageAlertIconEnum.INFO_ICON\">\n            </lib-message-alert>\n        </ng-template>\n    </div>\n</div>","import { NgModule } from '@angular/core';\nimport { RouterModule, Routes } from '@angular/router';\n\nimport { ConsumptionParamAddUpdateComponent } from './add-update.component';\n\nconst routes: Routes = [\n    {\n        path: '',\n        component: ConsumptionParamAddUpdateComponent\n    }\n];\n\n@NgModule({\n    imports: [RouterModule.forChild(routes)],\n    exports: [RouterModule]\n})\nexport class ConsumptionParamAddUpdateRoutingModule { }\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\n\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\n\nimport { MatButtonModule } from '@angular/material/button';\nimport { MatFormFieldModule } from '@angular/material/form-field';\nimport { MatInputModule } from '@angular/material/input';\nimport { MatSelectModule } from '@angular/material/select';\nimport { MatCheckboxModule } from '@angular/material/checkbox';\nimport { MatIconModule } from '@angular/material/icon';\nimport { MatTooltipModule } from '@angular/material/tooltip';\nimport { MatOptionModule } from '@angular/material/core';\nimport { MatRippleModule } from '@angular/material/core';\nimport { MatTableModule } from '@angular/material/table';\n\nimport { NgxMatSelectSearchModule } from 'ngx-mat-select-search';\n\nimport { ConsumptionParamAddUpdateRoutingModule } from './add-update-routing.module';\nimport { ConsumptionParamAddUpdateComponent } from './add-update.component';\n\n// tsc-library\nimport { MessageAlertModule } from '@library/tsc-common';\n// /tsc-library/\n\n@NgModule({\n    declarations: [\n        ConsumptionParamAddUpdateComponent\n    ],\n    imports: [\n        CommonModule,\n        ConsumptionParamAddUpdateRoutingModule,\n\n        FormsModule,\n        ReactiveFormsModule,\n\n        MatIconModule,\n        MatInputModule,\n        MatSelectModule,\n        MatTooltipModule,\n        MatOptionModule,\n        MatFormFieldModule,\n        MatButtonModule,\n        MatRippleModule,\n        MatCheckboxModule,\n        MatTableModule,\n\n        NgxMatSelectSearchModule,\n        MessageAlertModule\n    ]\n})\nexport class ConsumptionParamAddUpdateModule { }\n","import { Injectable } from '@angular/core';\nimport { HttpRequest, HttpHandler, HttpEvent, HttpInterceptor } from '@angular/common/http';\n\nimport { Observable } from 'rxjs';\n\n// tsc-library\nimport { StorageService } from \"@library/storage-service\";\n// /tsc-library/\n\n@Injectable()\n\nexport class Interceptor implements HttpInterceptor {\n\n    constructor(\n        private storageService: StorageService,\n    ) { }\n\n    intercept(request: HttpRequest<any>, next: HttpHandler): Observable<HttpEvent<any>> {\n        let layoutID = this.storageService.getStorage('layoutID');\n\n        request = request.clone({\n            setHeaders: { layoutID: `${layoutID}` }\n        });\n\n        return next.handle(request).pipe(\n        )\n    }\n\n}\n","import { Inject, Injectable } from '@angular/core';\nimport { HttpClient, HttpParams } from '@angular/common/http';\n\nimport { Observable } from 'rxjs';\n\nimport { MakeModelI } from '../model/make-model.model';\n\n@Injectable({\n    providedIn: 'root'\n})\n\nexport class MakeModelController {\n\n    constructor(\n        private http: HttpClient,\n        @Inject('environment') private environment: any\n    ) { }\n\n    getMake(type): Observable<MakeModelI[]> {\n        let params = new HttpParams();\n\n        params = params.append('type', type);\n\n        return this.http.get<MakeModelI[]>(`${this.environment.TSC_COMMON_API_URL}make`, { params: params });\n    }\n\n    getModel(makeID, type): Observable<MakeModelI[]> {\n        let params = new HttpParams();\n        params = params.append('type', type);\n\n        return this.http.get<MakeModelI[]>(`${this.environment.TSC_COMMON_API_URL}make/${makeID}/model`, { params: params });\n    }\n\n}\n","import { Inject, Injectable } from '@angular/core';\nimport { HttpClient, HttpParams } from '@angular/common/http';\n\nimport { Observable } from 'rxjs';\n\nimport { StatusInfoM } from '../model/device.model';\nimport { RegulatorTypeI, RegulatorsEntitiesI } from '../model/regulator.model';\n\n@Injectable({\n    providedIn: 'root'\n})\n\nexport class RegulatorController {\n\n    constructor(\n        private http: HttpClient,\n        @Inject('environment') private environment: any\n    ) { }\n\n    getRegulatorStatusInfo(orgID): Observable<StatusInfoM> {\n        return this.http.get<StatusInfoM>(`${this.environment.TSC_COMMON_API_URL}organizations/${orgID}/regulators/status`);\n    }\n\n    getRegulatorsType(orgID): Observable<RegulatorTypeI[]> {\n        return this.http.get<RegulatorTypeI[]>(`${this.environment.TSC_COMMON_API_URL}organizations/${orgID}/regulators/type`);\n    }\n\n    getRegulatorsEntities(regulatorTypeFilterArr, orgID): Observable<RegulatorsEntitiesI[]> {\n        let params = new HttpParams();\n        regulatorTypeFilterArr.forEach(filter => params = params.append('filter', filter));\n\n        return this.http.get<RegulatorsEntitiesI[]>(`${this.environment.TSC_COMMON_API_URL}organizations/${orgID}/dashboard/regulators-entities`, { params: params });\n    }\n}\n","import { Injectable } from '@angular/core';\n\nimport { MakeModel, MakeModelI } from '../model/make-model.model';\n\nimport { MakeModelController } from '../controller/make-model.controller';\n\n@Injectable({\n    providedIn: 'root'\n})\n\nexport class MakeModelService {\n\n    constructor(\n        private makeModelController: MakeModelController\n    ) { }\n\n    async getMake(type): Promise<MakeModelI[]> {\n        let makeI: MakeModelI[];\n        try {\n            makeI = await this.makeModelController.getMake(type).toPromise();\n\n            if (makeI) {\n                return makeI;\n            } else {\n                return [new MakeModel()];\n            }\n        } catch (error) {\n            console.error('Error -', error);\n            return [new MakeModel()];\n        }\n    }\n\n    async getModel(makeID, type): Promise<MakeModelI[]> {\n        let modelI: MakeModelI[];\n        try {\n            modelI = await this.makeModelController.getModel(makeID, type).toPromise();\n\n            if (modelI) {\n                return modelI;\n            } else {\n                return [new MakeModel()];\n            }\n        } catch (error) {\n            console.error('Error -', error);\n            return [new MakeModel()];\n        }\n    }\n}\n","/*\n * Public API Surface of tsc-lite\n */\n\nexport * from './lib/tsc-lite.service';\nexport * from './lib/tsc-lite.component';\nexport * from './lib/tsc-lite.module';\n\n\nexport * from './lib/tsc/constant/list.constant';\nexport * from './lib/tsc/enum/error.enum';\nexport * from './lib/tsc/enum/schedule-report.enum';\n\nexport * from './lib/tsc/model/alert.model';\nexport * from './lib/tsc/model/parameter.model';\nexport * from './lib/tsc/model/entity.model';\nexport * from './lib/tsc/model/device.model';\nexport * from './lib/tsc/model/unit.model';\nexport * from './lib/tsc/model/shift.model';\nexport * from './lib/tsc/model/recent-data.model';\nexport * from './lib/tsc/model/alert.model';\nexport * from './lib/tsc/model/report.model';\nexport * from './lib/tsc/model/aggregate-data.model';\nexport * from './lib/tsc/model/recent-data.model';\nexport * from './lib/tsc/model/make-model.model';\nexport * from './lib/tsc/model/regulator.model';\n\n\nexport * from './lib/tsc/guard/resolve.guard';\n\n\nexport * from './lib/tsc/component/_shared/dialog/trend/trend.module';\nexport * from './lib/tsc/component/_shared/dialog/trend/trend.component';\n\nexport * from './lib/tsc/component/_shared/dialog/entity/entity.module';\nexport * from './lib/tsc/component/_shared/dialog/entity/entity.component';\n\nexport * from './lib/tsc/component/_shared/download-report/download-report.module';\nexport * from './lib/tsc/component/_shared/download-report/download-report.component';\n\nexport * from './lib/tsc/component/_shared/static-page/layout-not-found/layout-not-found.module';\nexport * from './lib/tsc/component/_shared/static-page/layout-not-found/layout-not-found.component';\n\nexport * from './lib/tsc/component/_shared/static-page/tsc-restrict/tsc-restrict.module';\nexport * from './lib/tsc/component/_shared/static-page/tsc-restrict/tsc-restrict.component';\n\nexport * from './lib/tsc/component/authorization/success/success.component';\n\nexport * from './lib/tsc/component/dropdown/aggregation/aggregation.module';\nexport * from './lib/tsc/component/dropdown/aggregation/aggregation.component';\n\nexport * from './lib/tsc/component/dropdown/aggregation-duration/aggregation-duration.module';\nexport * from './lib/tsc/component/dropdown/aggregation-duration/aggregation-duration.component';\n\nexport * from './lib/tsc/component/dropdown/param-metric/param-metric.module';\nexport * from './lib/tsc/component/dropdown/param-metric/param-metric.component';\n\nexport * from './lib/tsc/component/dropdown/parameter/parameter.module';\nexport * from './lib/tsc/component/dropdown/parameter/parameter.component';\n\nexport * from './lib/tsc/component/dropdown/device/device.module';\nexport * from './lib/tsc/component/dropdown/device/device.component';\n\nexport * from './lib/tsc/component/dropdown/entity/entity.module';\nexport * from './lib/tsc/component/dropdown/entity/entity.component';\n\nexport * from './lib/tsc/component/dropdown/entity-type/entity-type.module';\nexport * from './lib/tsc/component/dropdown/entity-type/entity-type.component';\n\nexport * from './lib/tsc/component/dropdown/unit/unit.module';\nexport * from './lib/tsc/component/dropdown/unit/unit.component';\n\nexport * from './lib/tsc/component/landing-page/home/home.module';\nexport * from './lib/tsc/component/landing-page/home/home.component';\n\nexport * from './lib/tsc/component/dropdown/shift/shift.module';\nexport * from './lib/tsc/component/dropdown/shift/shift.component';\n\nexport * from './lib/tsc/component/dashboard/consumption/consumption.module';\nexport * from './lib/tsc/component/dashboard/consumption/consumption.component';\n\nexport * from './lib/tsc/component/dashboard/consumption-breakup/consumption-breakup.module';\nexport * from './lib/tsc/component/dashboard/consumption-breakup/consumption-breakup.component';\n\nexport * from './lib/tsc/component/dashboard/entity/entity.module';\nexport * from './lib/tsc/component/dashboard/entity/entity.component';\n\nexport * from './lib/tsc/component/dashboard/facility/facility.module';\nexport * from './lib/tsc/component/dashboard/facility/facility.component';\n\nexport * from './lib/tsc/component/dashboard/meter-data/meter-data.module';\nexport * from './lib/tsc/component/dashboard/meter-data/meter-data.component';\n\nexport * from './lib/tsc/component/dashboard/parameter/tab/tab.module';\nexport * from './lib/tsc/component/dashboard/parameter/tab/tab.component';\n\nexport * from './lib/tsc/component/dashboard/parameter/by-entity/by-entity.module';\nexport * from './lib/tsc/component/dashboard/parameter/by-entity/by-entity.component';\n\nexport * from './lib/tsc/component/dashboard/parameter/by-parameter/by-parameter.module';\nexport * from './lib/tsc/component/dashboard/parameter/by-parameter/by-parameter.component';\n\n\nexport * from './lib/tsc/component/report/breakup/breakup.module';\nexport * from './lib/tsc/component/report/breakup/breakup.component';\n\nexport * from './lib/tsc/component/report/cgwa/cgwa.module';\nexport * from './lib/tsc/component/report/cgwa/cgwa.component';\n\nexport * from './lib/tsc/component/report/consumption-breakup/consumption-breakup.module';\nexport * from './lib/tsc/component/report/consumption-breakup/consumption-breakup.component';\n\nexport * from './lib/tsc/component/report/consumption/consumption.module';\nexport * from './lib/tsc/component/report/consumption/consumption.component';\n\nexport * from './lib/tsc/component/report/data-availability/data-availability.module';\nexport * from './lib/tsc/component/report/data-availability/data-availability.component';\n\nexport * from './lib/tsc/component/report/meter/meter.module';\nexport * from './lib/tsc/component/report/meter/meter.component';\n\nexport * from './lib/tsc/component/report/parameter/parameter.module';\nexport * from './lib/tsc/component/report/parameter/parameter.component';\n\nexport * from './lib/tsc/component/report/raw-data/raw-data.module';\nexport * from './lib/tsc/component/report/raw-data/raw-data.component';\n\nexport * from './lib/tsc/component/report/sourcing/sourcing.module';\nexport * from './lib/tsc/component/report/sourcing/sourcing.component';\n\nexport * from './lib/tsc/component/report/usage-across-facility/usage-across-facility.module';\nexport * from './lib/tsc/component/report/usage-across-facility/usage-across-facility.component';\n\n\nexport * from './lib/tsc/component/schedule-report/_shared/configuration/configuration.module';\nexport * from './lib/tsc/component/schedule-report/_shared/configuration/configuration.component';\n\nexport * from './lib/tsc/component/schedule-report/_shared/page/page.module';\nexport * from './lib/tsc/component/schedule-report/_shared/page/page.component';\n\nexport * from './lib/tsc/component/schedule-report/breakup/breakup.module';\nexport * from './lib/tsc/component/schedule-report/breakup/breakup.component';\n\nexport * from './lib/tsc/component/schedule-report/cgwa/cgwa.module';\nexport * from './lib/tsc/component/schedule-report/cgwa/cgwa.component';\n\nexport * from './lib/tsc/component/schedule-report/consumption/consumption.module';\nexport * from './lib/tsc/component/schedule-report/consumption/consumption.component';\n\nexport * from './lib/tsc/component/schedule-report/sourcing/sourcing.module';\nexport * from './lib/tsc/component/schedule-report/sourcing/sourcing.component';\n\nexport * from './lib/tsc/component/schedule-report/temperature/temperature.module';\nexport * from './lib/tsc/component/schedule-report/temperature/temperature.component';\n\nexport * from './lib/tsc/component/layout/_dialog/create-update/entity/entity.module';\nexport * from './lib/tsc/component/layout/_dialog/create-update/entity/entity.component';\n\nexport * from './lib/tsc/component/layout/_dialog/create-update/layout/layout.module';\nexport * from './lib/tsc/component/layout/_dialog/create-update/layout/layout.component';\n\nexport * from './lib/tsc/component/layout/_dialog/create-update/source-load/source-load.module';\nexport * from './lib/tsc/component/layout/_dialog/create-update/source-load/source-load.component';\n\nexport * from './lib/tsc/component/layout/page/page.module';\nexport * from './lib/tsc/component/layout/page/page.component';\n\nexport * from './lib/tsc/component/layout/chart/chart.module';\nexport * from './lib/tsc/component/layout/chart/chart.component';\n\nexport * from './lib/tsc/component/layout/list/list.module';\nexport * from './lib/tsc/component/layout/list/list.component';\n\nexport * from './lib/tsc/component/layout/tab/tab.module';\nexport * from './lib/tsc/component/layout/tab/tab.component';\n\nexport * from './lib/tsc/component/layout/map-device/add/add.module';\nexport * from './lib/tsc/component/layout/map-device/add/add.component';\n\nexport * from './lib/tsc/component/layout/map-device/view/view.module';\nexport * from './lib/tsc/component/layout/map-device/view/view.component';\n\nexport * from './lib/tsc/component/preferences/consumer/page/page.module';\nexport * from './lib/tsc/component/preferences/consumer/page/page.component';\n\nexport * from './lib/tsc/component/preferences/_dialog/source/create-update/create-update.module';\nexport * from './lib/tsc/component/preferences/_dialog/source/create-update/create-update.component';\n\nexport * from './lib/tsc/component/preferences/_dialog/consumer/create-update/create-update.module';\nexport * from './lib/tsc/component/preferences/_dialog/consumer/create-update/create-update.component';\n\nexport * from './lib/tsc/component/preferences/source/page/page.module';\nexport * from './lib/tsc/component/preferences/source/page/page.component';\n\nexport * from './lib/tsc/component/preferences/consumption-parameter/add-update/add-update.module';\nexport * from './lib/tsc/component/preferences/consumption-parameter/add-update/add-update.component';\n\n\nexport * from './lib/tsc/interceptor/interceptor';\n\n\nexport * from './lib/tsc/controller/parameter.controller';\nexport * from './lib/tsc/controller/entity.controller';\nexport * from './lib/tsc/controller/device.controller';\nexport * from './lib/tsc/controller/unit.controller';\nexport * from './lib/tsc/controller/shift.controller';\nexport * from './lib/tsc/controller/recent-data.controller';\nexport * from './lib/tsc/controller/aggregate-data.controller';\nexport * from './lib/tsc/controller/data-availability.controller';\nexport * from './lib/tsc/controller/schedule-report.controller';\nexport * from './lib/tsc/controller/make-model.controller';\nexport * from './lib/tsc/controller/regulator.controller';\n\n\nexport * from './lib/tsc/service/alert.service';\nexport * from './lib/tsc/service/parameter.service';\nexport * from './lib/tsc/service/entity.service';\nexport * from './lib/tsc/service/device.service';\nexport * from './lib/tsc/service/entity-device.service';\nexport * from './lib/tsc/service/unit.service';\nexport * from './lib/tsc/service/shift.service';\nexport * from './lib/tsc/service/recent-data.service';\nexport * from './lib/tsc/service/aggregate-data.service';\nexport * from './lib/tsc/service/trend.service';\nexport * from './lib/tsc/service/report.service';\nexport * from './lib/tsc/service/schedule-report.service';\nexport * from './lib/tsc/service/make-model.service';\n","/**\n * Generated bundle index. Do not edit.\n */\n\nexport * from './public-api';\n"],"names":["i1","i2","i3.ParameterController","i1.ParameterController","i1.AggregateDataController","i3.ParameterService","i4.AggregateDataService","i5","i7","i8","i9","i10","i11","i12","i13","i3","i4","i6","i2.ParameterService","i1.DeviceController","i2.DeviceService","i1.EntityController","i2.EntityService","i1.UnitController","i2.UnitService","i3.AggregateDataService","i4.EntityController","i5.DeviceController","routes","i1.ShiftController","i2.ShiftService","i3.EntityService","i5.AggregateDataController","i2.AggregateDataService","i1.RecentDataController","i3.RecentDataService","i5.TrendService","i14","i15","i16","i17","i4.EntityService","i6.RecentDataService","i7.AlertService","i1.EntityDeviceController","i2.RecentDataService","i3.EntityDeviceService","i4.ParameterService","i5.AlertService","i7.TrendService","i2.AlertService","i8.AggregationDurationComponent","i9.EntityTypeComponent","i4.ParameterController","i5.ParameterService","i6.AggregateDataService","i9.AggregationDurationComponent","i10.EntityTypeComponent","i18","SourceLoadComponent","SourceLoadModule","i5.AggregateDataService","i6.ReportService","i10.SourceLoadComponent","i12.AggregationDurationComponent","i13.EntityComponent","i17.DownloadReportComponent","i19","i7.ReportService","i13.DownloadReportComponent","i5.ReportService","i6.AlertService","i7.SourceLoadComponent","i10.EntityComponent","i11.DownloadReportComponent","i1.SourceController","i6.SourceService","i7.ParameterService","i8.AggregateDataService","i9.ReportService","i16.DownloadReportComponent","i4.DataAvailabilityController","i11.EntityComponent","i12.DeviceComponent","i13.ParamMetricComponent","i14.DownloadReportComponent","i4.EntityDeviceService","i14.ParamMetricComponent","i15.DownloadReportComponent","i11.DeviceComponent","i12.ParamMetricComponent","i14.AggregationComponent","i8.EntityComponent","i9.DeviceComponent","i10.DownloadReportComponent","i11.AggregationDurationComponent","i4.ReportService","i6.SourceLoadComponent","i9.DownloadReportComponent","observableOf","i3.ScheduleReportController","i1.ScheduleReportController","i5.ScheduleReportService","i15.ScheduleReportConfigurationComponent","i4.ScheduleReportService","i9.ScheduleReportConfigurationComponent","i4.SourceService","i6.ScheduleReportService","i13.ScheduleReportConfigurationComponent","i3.DeviceController","i3.EntityController","i6.SourceController","i7.ConsumerController","i3.SourceService","i4.ConsumerController","i7.SourceService","i3.SourceController","i5.SourceController","i6.ParameterController","i1.MakeModelController"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;MAKa,cAAc,CAAA;AAEzB,IAAA,WAAA,GAAA,GAAiB;;4GAFN,cAAc,EAAA,IAAA,EAAA,EAAA,EAAA,MAAA,EAAA,EAAA,CAAA,eAAA,CAAA,UAAA,EAAA,CAAA,CAAA;AAAd,cAAA,CAAA,KAAA,GAAA,EAAA,CAAA,qBAAA,CAAA,EAAA,UAAA,EAAA,QAAA,EAAA,OAAA,EAAA,SAAA,EAAA,QAAA,EAAA,EAAA,EAAA,IAAA,EAAA,cAAc,cAFb,MAAM,EAAA,CAAA,CAAA;4FAEP,cAAc,EAAA,UAAA,EAAA,CAAA;kBAH1B,UAAU;AAAC,YAAA,IAAA,EAAA,CAAA;AACV,oBAAA,UAAU,EAAE,MAAM;AACnB,iBAAA,CAAA;;;MCQY,gBAAgB,CAAA;AAE3B,IAAA,WAAA,GAAA,GAAiB;IAEjB,QAAQ,GAAA;KACP;;8GALU,gBAAgB,EAAA,IAAA,EAAA,EAAA,EAAA,MAAA,EAAA,EAAA,CAAA,eAAA,CAAA,SAAA,EAAA,CAAA,CAAA;AAAhB,gBAAA,CAAA,IAAA,GAAA,EAAA,CAAA,oBAAA,CAAA,EAAA,UAAA,EAAA,QAAA,EAAA,OAAA,EAAA,SAAA,EAAA,IAAA,EAAA,gBAAgB,EARjB,QAAA,EAAA,cAAA,EAAA,QAAA,EAAA,EAAA,EAAA,QAAA,EAAA,CAAA;;;;AAIT,EAAA,CAAA,EAAA,QAAA,EAAA,IAAA,EAAA,CAAA,CAAA;4FAIU,gBAAgB,EAAA,UAAA,EAAA,CAAA;kBAV5B,SAAS;AAAC,YAAA,IAAA,EAAA,CAAA;AACT,oBAAA,QAAQ,EAAE,cAAc;AACxB,oBAAA,QAAQ,EAAE,CAAA;;;;AAIT,EAAA,CAAA;AACD,oBAAA,MAAM,EAAE,EACP;AACF,iBAAA,CAAA;;;MCIY,aAAa,CAAA;IACtB,OAAO,OAAO,CAAC,WAAgB,EAAA;QAC3B,OAAO;AACH,YAAA,QAAQ,EAAE,aAAa;AACvB,YAAA,SAAS,EAAE;AACP,gBAAA,EAAE,OAAO,EAAE,aAAa,EAAE,QAAQ,EAAE,WAAW,EAAE;AACpD,aAAA;SACJ,CAAC;KACL;;2GARQ,aAAa,EAAA,IAAA,EAAA,EAAA,EAAA,MAAA,EAAA,EAAA,CAAA,eAAA,CAAA,QAAA,EAAA,CAAA,CAAA;4GAAb,aAAa,EAAA,YAAA,EAAA,CATlB,gBAAgB,CAAA,EAAA,OAAA,EAAA,CAKhB,gBAAgB,CAAA,EAAA,CAAA,CAAA;AAIX,aAAA,CAAA,IAAA,GAAA,EAAA,CAAA,mBAAA,CAAA,EAAA,UAAA,EAAA,QAAA,EAAA,OAAA,EAAA,SAAA,EAAA,QAAA,EAAA,EAAA,EAAA,IAAA,EAAA,aAAa,YAPb,EACR,CAAA,EAAA,CAAA,CAAA;4FAMQ,aAAa,EAAA,UAAA,EAAA,CAAA;kBAXzB,QAAQ;AAAC,YAAA,IAAA,EAAA,CAAA;AACN,oBAAA,YAAY,EAAE;wBACV,gBAAgB;AACnB,qBAAA;AACD,oBAAA,OAAO,EAAE,EACR;AACD,oBAAA,OAAO,EAAE;wBACL,gBAAgB;AACnB,qBAAA;AACJ,iBAAA,CAAA;;;ACXY,MAAA,aAAa,GAAG;AAEzB,IAAA,SAAS,EAAE;AACP,QAAA;AACI,YAAA,KAAK,EAAE,uBAAuB;AAC9B,YAAA,KAAK,EAAE,KAAK;AACf,SAAA;AACD,QAAA;AACI,YAAA,KAAK,EAAE,oBAAoB;AAC3B,YAAA,KAAK,EAAE,KAAK;AACf,SAAA;AACD,QAAA;AACI,YAAA,KAAK,EAAE,WAAW;AAClB,YAAA,KAAK,EAAE,OAAO;AACjB,SAAA;AACD,QAAA;AACI,YAAA,KAAK,EAAE,kBAAkB;AACzB,YAAA,KAAK,EAAE,SAAS;AACnB,SAAA;AACD,QAAA;AACI,YAAA,KAAK,EAAE,eAAe;AACtB,YAAA,KAAK,EAAE,MAAM;AAChB,SAAA;AACD,QAAA;AACI,YAAA,KAAK,EAAE,SAAS;AAChB,YAAA,KAAK,EAAE,SAAS;AACnB,SAAA;AACJ,KAAA;AAED,IAAA,eAAe,EAAE;AACb,QAAA;AACI,YAAA,KAAK,EAAE,OAAO;AACd,YAAA,KAAK,EAAE,OAAO;AACjB,SAAA;AACD,QAAA;AACI,YAAA,KAAK,EAAE,QAAQ;AACf,YAAA,KAAK,EAAE,UAAU;AACpB,SAAA;AACD,QAAA;AACI,YAAA,KAAK,EAAE,QAAQ;AACf,YAAA,KAAK,EAAE,UAAU;AACpB,SAAA;AACD,QAAA;AACI,YAAA,KAAK,EAAE,OAAO;AACd,YAAA,KAAK,EAAE,SAAS;AACnB,SAAA;AACD,QAAA;AACI,YAAA,KAAK,EAAE,OAAO;AACd,YAAA,KAAK,EAAE,SAAS;AACnB,SAAA;AACJ,KAAA;AAED,IAAA,aAAa,EAAE;AACX,QAAA;AACI,YAAA,KAAK,EAAE,OAAO;AACd,YAAA,KAAK,EAAE,OAAO;AACjB,SAAA;AACD,QAAA;AACI,YAAA,KAAK,EAAE,QAAQ;AACf,YAAA,KAAK,EAAE,UAAU;AACpB,SAAA;AACD,QAAA;AACI,YAAA,KAAK,EAAE,QAAQ;AACf,YAAA,KAAK,EAAE,UAAU;AACpB,SAAA;AACJ,KAAA;AAED,IAAA,oBAAoB,EAAE;AAClB,QAAA;AACI,YAAA,KAAK,EAAE,KAAK;AACZ,YAAA,KAAK,EAAE,KAAK;AACf,SAAA;AACD,QAAA;AACI,YAAA,KAAK,EAAE,MAAM;AACb,YAAA,KAAK,EAAE,MAAM;AAChB,SAAA;AACD,QAAA;AACI,YAAA,KAAK,EAAE,KAAK;AACZ,YAAA,KAAK,EAAE,KAAK;AACf,SAAA;AACJ,KAAA;AAED,IAAA,oBAAoB,EAAE;AAClB,QAAA;AACI,YAAA,KAAK,EAAE,SAAS;AAChB,YAAA,KAAK,EAAE,SAAS;AACnB,SAAA;AACD,QAAA;AACI,YAAA,KAAK,EAAE,cAAc;AACrB,YAAA,KAAK,EAAE,aAAa;AACvB,SAAA;AACD,QAAA;AACI,YAAA,KAAK,EAAE,kBAAkB;AACzB,YAAA,KAAK,EAAE,iBAAiB;AAC3B,SAAA;AACD,QAAA;AACI,YAAA,KAAK,EAAE,wBAAwB;AAC/B,YAAA,KAAK,EAAE,iBAAiB;AAC3B,SAAA;AACD,QAAA;AACI,YAAA,KAAK,EAAE,qBAAqB;AAC5B,YAAA,KAAK,EAAE,cAAc;AACxB,SAAA;AACD,QAAA;AACI,YAAA,KAAK,EAAE,sBAAsB;AAC7B,YAAA,KAAK,EAAE,gBAAgB;AAC1B,SAAA;AACD,QAAA;AACI,YAAA,KAAK,EAAE,mBAAmB;AAC1B,YAAA,KAAK,EAAE,aAAa;AACvB,SAAA;AACJ,KAAA;AAED,IAAA,gBAAgB,EAAE;AACd,QAAA;AACI,YAAA,KAAK,EAAE,aAAa;AACpB,YAAA,KAAK,EAAE,aAAa;AACvB,SAAA;AACD,QAAA;AACI,YAAA,KAAK,EAAE,aAAa;AACpB,YAAA,KAAK,EAAE,aAAa;AACvB,SAAA;AACD,QAAA;AACI,YAAA,KAAK,EAAE,cAAc;AACrB,YAAA,KAAK,EAAE,cAAc;AACxB,SAAA;AACJ,KAAA;IAED,oBAAoB,EAAE,EAAE,GAAG;AACvB,QAAA;AACI,YAAA,KAAK,EAAE,YAAY;AACnB,YAAA,KAAK,EAAE,QAAQ;AAElB,SAAA;AACD,QAAA;AACI,YAAA,KAAK,EAAE,YAAY;AACnB,YAAA,KAAK,EAAE,QAAQ;AAClB,SAAA;AACD,QAAA;AACI,YAAA,KAAK,EAAE,QAAQ;AACf,YAAA,KAAK,EAAE,QAAQ;AAClB,SAAA;AACD,QAAA;AACI,YAAA,KAAK,EAAE,UAAU;AACjB,YAAA,KAAK,EAAE,SAAS;AACnB,SAAA;AACD,QAAA;AACI,YAAA,KAAK,EAAE,OAAO;AACd,YAAA,KAAK,EAAE,OAAO;AACjB,SAAA;AACD,QAAA;AACI,YAAA,KAAK,EAAE,SAAS;AAChB,YAAA,KAAK,EAAE,SAAS;AACnB,SAAA;AACJ,KAAA;IAED,WAAW,EAAE,EAAE,GAAG;AACd,QAAA;AACI,YAAA,KAAK,EAAE,kBAAkB;AACzB,YAAA,KAAK,EAAE,QAAQ;AAClB,SAAA;AACD,QAAA;AACI,YAAA,KAAK,EAAE,kBAAkB;AACzB,YAAA,KAAK,EAAE,QAAQ;AAClB,SAAA;AACD,QAAA;AACI,YAAA,KAAK,EAAE,kBAAkB;AACzB,YAAA,KAAK,EAAE,QAAQ;AAClB,SAAA;AACD,QAAA;AACI,YAAA,KAAK,EAAE,cAAc;AACrB,YAAA,KAAK,EAAE,QAAQ;AAClB,SAAA;AACD,QAAA;AACI,YAAA,KAAK,EAAE,SAAS;AAChB,YAAA,KAAK,EAAE,KAAK;AACf,SAAA;AACD,QAAA;AACI,YAAA,KAAK,EAAE,OAAO;AACd,YAAA,KAAK,EAAE,OAAO;AACjB,SAAA;AACD,QAAA;AACI,YAAA,KAAK,EAAE,OAAO;AACd,YAAA,KAAK,EAAE,OAAO;AACjB,SAAA;AACD,QAAA;AACI,YAAA,KAAK,EAAE,MAAM;AACb,YAAA,KAAK,EAAE,MAAM;AAChB,SAAA;AACD,QAAA;AACI,YAAA,KAAK,EAAE,SAAS;AAChB,YAAA,KAAK,EAAE,KAAK;AACf,SAAA;AACD,QAAA;AACI,YAAA,KAAK,EAAE,SAAS;AAChB,YAAA,KAAK,EAAE,KAAK;AACf,SAAA;AACD,QAAA;AACI,YAAA,KAAK,EAAE,KAAK;AACZ,YAAA,KAAK,EAAE,KAAK;AACf,SAAA;AACJ,KAAA;IAED,aAAa,EAAE,EAAE,GAAG;AAChB,QAAA;AACI,YAAA,KAAK,EAAE,KAAK;AACZ,YAAA,KAAK,EAAE,KAAK;AACf,SAAA;AACD,QAAA;AACI,YAAA,KAAK,EAAE,KAAK;AACZ,YAAA,KAAK,EAAE,KAAK;AACf,SAAA;AACD,QAAA;AACI,YAAA,KAAK,EAAE,MAAM;AACb,YAAA,KAAK,EAAE,MAAM;AAChB,SAAA;AACJ,KAAA;IAED,WAAW,EAAE,EAAE,GAAG;AACd,QAAA;AACI,YAAA,KAAK,EAAE,QAAQ;AACf,YAAA,KAAK,EAAE,QAAQ;AAClB,SAAA;AACD,QAAA;AACI,YAAA,KAAK,EAAE,UAAU;AACjB,YAAA,KAAK,EAAE,MAAM;AAChB,SAAA;AACJ,KAAA;IAED,6BAA6B,EAAE,EAAE,GAAG;AAChC,QAAA;AACI,YAAA,IAAI,EAAE,CAAC;AACP,YAAA,KAAK,EAAE,MAAM;AACb,YAAA,KAAK,EAAE,SAAS;AACnB,SAAA;AACD,QAAA;AACI,YAAA,IAAI,EAAE,CAAC;AACP,YAAA,KAAK,EAAE,OAAO;AACd,YAAA,KAAK,EAAE,SAAS;AACnB,SAAA;AACD,QAAA;AACI,YAAA,IAAI,EAAE,CAAC;AACP,YAAA,KAAK,EAAE,OAAO;AACd,YAAA,KAAK,EAAE,SAAS;AACnB,SAAA;AACD,QAAA;AACI,YAAA,IAAI,EAAE,CAAC;AACP,YAAA,KAAK,EAAE,OAAO;AACd,YAAA,KAAK,EAAE,SAAS;AACnB,SAAA;AACD,QAAA;AACI,YAAA,IAAI,EAAE,CAAC;AACP,YAAA,KAAK,EAAE,OAAO;AACd,YAAA,KAAK,EAAE,SAAS;AACnB,SAAA;AACD,QAAA;AACI,YAAA,IAAI,EAAE,EAAE;AACR,YAAA,KAAK,EAAE,QAAQ;AACf,YAAA,KAAK,EAAE,UAAU;AACpB,SAAA;AACD,QAAA;AACI,YAAA,IAAI,EAAE,EAAE;AACR,YAAA,KAAK,EAAE,QAAQ;AACf,YAAA,KAAK,EAAE,UAAU;AACpB,SAAA;AACJ,KAAA;IAED,yBAAyB,EAAE,EAAE,GAAG;AAC5B,QAAA;AACI,YAAA,IAAI,EAAE,CAAC;AACP,YAAA,KAAK,EAAE,OAAO;AACd,YAAA,KAAK,EAAE,SAAS;AACnB,SAAA;AACD,QAAA;AACI,YAAA,IAAI,EAAE,CAAC;AACP,YAAA,KAAK,EAAE,OAAO;AACd,YAAA,KAAK,EAAE,SAAS;AACnB,SAAA;AACD,QAAA;AACI,YAAA,IAAI,EAAE,CAAC;AACP,YAAA,KAAK,EAAE,OAAO;AACd,YAAA,KAAK,EAAE,SAAS;AACnB,SAAA;AACD,QAAA;AACI,YAAA,IAAI,EAAE,EAAE;AACR,YAAA,KAAK,EAAE,QAAQ;AACf,YAAA,KAAK,EAAE,UAAU;AACpB,SAAA;AACD,QAAA;AACI,YAAA,IAAI,EAAE,EAAE;AACR,YAAA,KAAK,EAAE,QAAQ;AACf,YAAA,KAAK,EAAE,UAAU;AACpB,SAAA;AACD,QAAA;AACI,YAAA,IAAI,EAAE,EAAE;AACR,YAAA,KAAK,EAAE,QAAQ;AACf,YAAA,KAAK,EAAE,UAAU;AACpB,SAAA;AACJ,KAAA;IAED,+BAA+B,EAAE,EAAE,GAAG;AAClC,QAAA;AACI,YAAA,KAAK,EAAE,wBAAwB;AAC/B,YAAA,KAAK,EAAE,iBAAiB;AAC3B,SAAA;AACD,QAAA;AACI,YAAA,KAAK,EAAE,uBAAuB;AAC9B,YAAA,KAAK,EAAE,gBAAgB;AAC1B,SAAA;AACD,QAAA;AACI,YAAA,KAAK,EAAE,2BAA2B;AAClC,YAAA,KAAK,EAAE,oBAAoB;AAC9B,SAAA;AACD,QAAA;AACI,YAAA,KAAK,EAAE,oBAAoB;AAC3B,YAAA,KAAK,EAAE,oBAAoB;AAC9B,SAAA;AACJ,KAAA;IAED,8BAA8B,EAAE,EAAE,GAAG;AACjC,QAAA;AACI,YAAA,KAAK,EAAE,uBAAuB;AAC9B,YAAA,KAAK,EAAE,iBAAiB;AAC3B,SAAA;AACD,QAAA;AACI,YAAA,KAAK,EAAE,sBAAsB;AAC7B,YAAA,KAAK,EAAE,gBAAgB;AAC1B,SAAA;AACD,QAAA;AACI,YAAA,KAAK,EAAE,0BAA0B;AACjC,YAAA,KAAK,EAAE,oBAAoB;AAC9B,SAAA;AACD,QAAA;AACI,YAAA,KAAK,EAAE,aAAa;AACpB,YAAA,KAAK,EAAE,aAAa;AACvB,SAAA;AACJ,KAAA;;;IClVO,gBAUX;AAVD,CAAA,UAAY,eAAe,EAAA;AACvB,IAAA,eAAA,CAAA,oBAAA,CAAA,GAAA,gBAAqC,CAAA;AACrC,IAAA,eAAA,CAAA,sBAAA,CAAA,GAAA,mDAA0E,CAAA;AAC1E,IAAA,eAAA,CAAA,qBAAA,CAAA,GAAA,gBAAsC,CAAA;AACtC,IAAA,eAAA,CAAA,+BAAA,CAAA,GAAA,4DAA4F,CAAA;AAC5F,IAAA,eAAA,CAAA,8BAAA,CAAA,GAAA,2DAA0F,CAAA;AAC1F,IAAA,eAAA,CAAA,sBAAA,CAAA,GAAA,gBAAuC,CAAA;AACvC,IAAA,eAAA,CAAA,wBAAA,CAAA,GAAA,uGAAgI,CAAA;AAChI,IAAA,eAAA,CAAA,qBAAA,CAAA,GAAA,yBAA+C,CAAA;AAC/C,IAAA,eAAA,CAAA,uBAAA,CAAA,GAAA,4HAAoJ,CAAA;AACxJ,CAAC,EAVW,eAAe,KAAf,eAAe,GAU1B,EAAA,CAAA,CAAA,CAAA;IAEW,mBAKX;AALD,CAAA,UAAY,kBAAkB,EAAA;AAC1B,IAAA,kBAAA,CAAA,sBAAA,CAAA,GAAA,gBAAuC,CAAA;AACvC,IAAA,kBAAA,CAAA,wBAAA,CAAA,GAAA,sEAA+F,CAAA;AAC/F,IAAA,kBAAA,CAAA,qBAAA,CAAA,GAAA,yBAA+C,CAAA;AAC/C,IAAA,kBAAA,CAAA,uBAAA,CAAA,GAAA,6FAAqH,CAAA;AACzH,CAAC,EALW,kBAAkB,KAAlB,kBAAkB,GAK7B,EAAA,CAAA,CAAA;;ICjBW,uBAMX;AAND,CAAA,UAAY,sBAAsB,EAAA;AAC9B,IAAA,sBAAA,CAAA,iBAAA,CAAA,GAAA,iBAAmC,CAAA;AACnC,IAAA,sBAAA,CAAA,gBAAA,CAAA,GAAA,gBAAiC,CAAA;AACjC,IAAA,sBAAA,CAAA,oBAAA,CAAA,GAAA,oBAAyC,CAAA;AACzC,IAAA,sBAAA,CAAA,aAAA,CAAA,GAAA,aAA2B,CAAA;AAC3B,IAAA,sBAAA,CAAA,oBAAA,CAAA,GAAA,oBAAyC,CAAA;AAC7C,CAAC,EANW,sBAAsB,KAAtB,sBAAsB,GAMjC,EAAA,CAAA,CAAA;;MCEY,KAAK,CAAA;AAAlB,IAAA,WAAA,GAAA;QACI,IAAS,CAAA,SAAA,GAAG,KAAK,CAAC;QAClB,IAAU,CAAA,UAAA,GAAG,EAAE,CAAC;QAChB,IAAY,CAAA,YAAA,GAAG,EAAE,CAAC;QAClB,IAAgB,CAAA,gBAAA,GAAG,EAAE,CAAC;QACtB,IAAgB,CAAA,gBAAA,GAAG,EAAE,CAAC;KACzB;AAAA;;MCJY,SAAS,CAAA;AAQrB,CAAA;MAmBY,oBAAoB,CAAA;AAEhC,CAAA;MAOY,yBAAyB,CAAA;AAGrC;;MC3CY,MAAM,CAAA;AAIlB,CAAA;MAiBY,eAAe,CAAA;AAM3B,CAAA;MAUY,kBAAkB,CAAA;AAA/B,IAAA,WAAA,GAAA;QACI,IAAE,CAAA,EAAA,GAAG,IAAI,CAAC;QACV,IAAI,CAAA,IAAA,GAAG,IAAI,CAAC;QACZ,IAAI,CAAA,IAAA,GAAG,IAAI,CAAC;QACZ,IAAgB,CAAA,gBAAA,GAAG,KAAK,CAAC;QACzB,IAAQ,CAAA,QAAA,GAAG,EAAE,CAAC;KACjB;AAAA,CAAA;MASY,sBAAsB,CAAA;AAKlC,CAAA;MAMY,UAAU,CAAA;AAAvB,IAAA,WAAA,GAAA;QACI,IAAI,CAAA,IAAA,GAAG,IAAI,CAAC;KACf;AAAA,CAAA;MASY,iBAAiB,CAAA;AAA9B,IAAA,WAAA,GAAA;QACI,IAAE,CAAA,EAAA,GAAG,IAAI,CAAC;QACV,IAAI,CAAA,IAAA,GAAG,IAAI,CAAC;QACZ,IAAI,CAAA,IAAA,GAAG,IAAI,CAAC;QACZ,IAAM,CAAA,MAAA,GAAG,IAAI,CAAC;KACjB;AAAA;;MC7EY,MAAM,CAAA;AAMlB,CAAA;MAgBY,mBAAmB,CAAA;AAK/B,CAAA;MASY,UAAU,CAAA;AAKtB,CAAA;MAwBY,aAAa,CAAA;AAiBzB;;MCpFY,IAAI,CAAA;AAIhB;;MCFY,KAAK,CAAA;AAMjB;;MCHY,0BAA0B,CAAA;AAAvC,IAAA,WAAA,GAAA;QACI,IAAM,CAAA,MAAA,GAAG,IAAI,CAAC;QACd,IAAQ,CAAA,QAAA,GAAG,IAAI,CAAC;QAChB,IAAkB,CAAA,kBAAA,GAAG,KAAK,CAAC;QAC3B,IAAQ,CAAA,QAAA,GAAG,IAAI,CAAC;QAChB,IAAU,CAAA,UAAA,GAAG,IAAI,CAAC;QAClB,IAAQ,CAAA,QAAA,GAAG,IAAI,CAAC;KACnB;AAAA,CAAA;MASY,6BAA6B,CAAA;AAA1C,IAAA,WAAA,GAAA;QACI,IAAQ,CAAA,QAAA,GAAG,IAAI,CAAC;QAChB,IAAQ,CAAA,QAAA,GAAG,IAAI,CAAC;QAChB,IAAU,CAAA,UAAA,GAAG,IAAI,CAAC;QAClB,IAAQ,CAAA,QAAA,GAAG,IAAI,CAAC;KACnB;AAAA,CAAA;MA6BY,aAAa,CAAA;AAA1B,IAAA,WAAA,GAAA;QACI,IAAK,CAAA,KAAA,GAAG,IAAI,CAAC;QACb,IAAQ,CAAA,QAAA,GAAG,IAAI,CAAC;QAChB,IAAU,CAAA,UAAA,GAAG,IAAI,CAAC;QAClB,IAAU,CAAA,UAAA,GAAG,IAAI,CAAC;QAClB,IAAgB,CAAA,gBAAA,GAAG,KAAK,CAAC;QACzB,IAAU,CAAA,UAAA,GAAG,IAAI,CAAC;KACrB;AAAA,CAAA;MASY,gBAAgB,CAAA;AAA7B,IAAA,WAAA,GAAA;QACI,IAAQ,CAAA,QAAA,GAAG,IAAI,CAAC;QAChB,IAAU,CAAA,UAAA,GAAG,IAAI,CAAC;QAClB,IAAM,CAAA,MAAA,GAAG,IAAI,CAAC;QACd,IAAS,CAAA,SAAA,GAAG,EAAE,CAAC;KAClB;AAAA;;MC1EY,qBAAqB,CAAA;AAAlC,IAAA,WAAA,GAAA;QACI,IAAO,CAAA,OAAA,GAAG,IAAI,CAAC;QACf,IAAU,CAAA,UAAA,GAAG,IAAI,CAAC;QAClB,IAAY,CAAA,YAAA,GAAG,IAAI,CAAC;KACvB;AAAA;;MCOY,oBAAoB,CAAA;AAAjC,IAAA,WAAA,GAAA;QACI,IAAQ,CAAA,QAAA,GAAG,IAAI,CAAC;QAChB,IAAU,CAAA,UAAA,GAAG,IAAI,CAAC;QAClB,IAAQ,CAAA,QAAA,GAAG,IAAI,CAAC;QAChB,IAAQ,CAAA,QAAA,GAAG,IAAI,CAAC;QAChB,IAAQ,CAAA,QAAA,GAAG,IAAI,CAAC;QAChB,IAAM,CAAA,MAAA,GAAG,IAAI,CAAC;QACd,IAAsB,CAAA,sBAAA,GAAG,KAAK,CAAC;QAC/B,IAAQ,CAAA,QAAA,GAAG,KAAK,CAAC;QACjB,IAAS,CAAA,SAAA,GAAG,IAAI,CAAC;QACjB,IAAO,CAAA,OAAA,GAAG,IAAI,CAAC;KAWlB;IATG,aAAa,GAAA;;QACT,CAAA,EAAA,GAAA,IAAI,CAAC,MAAM,MAAA,IAAA,IAAA,EAAA,KAAA,KAAA,CAAA,GAAA,KAAA,CAAA,GAAA,EAAA,CAAE,OAAO,CAAC,KAAK,IAAG;YACzB,KAAK,CAAC,IAAI,GAAG,KAAK,CAAC,IAAI,IAAI,IAAI,CAAC;YAChC,KAAK,CAAC,KAAK,GAAG,KAAK,CAAC,KAAK,IAAI,IAAI,CAAC;YAClC,KAAK,CAAC,GAAG,GAAG,KAAK,CAAC,GAAG,IAAI,IAAI,CAAC;YAC9B,KAAK,CAAC,cAAc,GAAG,KAAK,CAAC,cAAc,IAAI,IAAI,CAAC;YACpD,KAAK,CAAC,cAAc,GAAG,KAAK,CAAC,cAAc,IAAI,IAAI,CAAC;AACxD,SAAC,CAAC,CAAC;KACN;AACJ,CAAA;MAWY,SAAS,CAAA;AAOrB;;MCrDY,SAAS,CAAA;AAGrB;;MCHY,aAAa,CAAA;AAGzB,CAAA;MAcY,kBAAkB,CAAA;AAA/B,IAAA,WAAA,GAAA;AACI,QAAA,IAAA,CAAA,SAAS,GAAG;AACR,YAAA,EAAE,EAAE,IAAI;AACR,YAAA,IAAI,EAAE,IAAI;SACb,CAAC;AACF,QAAA,IAAA,CAAA,MAAM,GAAG;AACL,YAAA,EAAE,EAAE,IAAI;AACR,YAAA,IAAI,EAAE,IAAI;SACb,CAAC;QACF,IAAM,CAAA,MAAA,GAAG,IAAI,CAAC;KACjB;AAAA;;MCrBY,mBAAmB,CAAA;IAE5B,WACY,CAAA,IAAgB,EACO,WAAgB,EAAA;QADvC,IAAI,CAAA,IAAA,GAAJ,IAAI,CAAY;QACO,IAAW,CAAA,WAAA,GAAX,WAAW,CAAK;KAC9C;AAEL,IAAA,mBAAmB,CAAC,KAAK,EAAA;AACrB,QAAA,OAAO,IAAI,CAAC,IAAI,CAAC,GAAG,CAAe,CAAG,EAAA,IAAI,CAAC,WAAW,CAAC,kBAAkB,CAAA,cAAA,EAAiB,KAAK,CAAA,WAAA,CAAa,CAAC,CAAC;KACjH;AAED,IAAA,sBAAsB,CAAC,KAAK,EAAA;AACxB,QAAA,OAAO,IAAI,CAAC,IAAI,CAAC,GAAG,CAAe,CAAG,EAAA,IAAI,CAAC,WAAW,CAAC,kBAAkB,CAAA,cAAA,EAAiB,KAAK,CAAA,mBAAA,CAAqB,CAAC,CAAC;KACzH;IAED,sBAAsB,CAAC,KAAK,EAAE,WAAW,EAAA;AACrC,QAAA,OAAO,IAAI,CAAC,IAAI,CAAC,IAAI,CAAe,GAAG,IAAI,CAAC,WAAW,CAAC,kBAAkB,CAAiB,cAAA,EAAA,KAAK,qBAAqB,EAAE,WAAW,CAAC,CAAC;KACvI;IAED,wBAAwB,CAAC,KAAK,EAAE,WAAW,EAAA;AACvC,QAAA,OAAO,IAAI,CAAC,IAAI,CAAC,IAAI,CAAe,GAAG,IAAI,CAAC,WAAW,CAAC,kBAAkB,CAAiB,cAAA,EAAA,KAAK,yBAAyB,EAAE,WAAW,CAAC,CAAC;KAC3I;AAED,IAAA,uBAAuB,CAAC,KAAK,EAAA;AACzB,QAAA,OAAO,IAAI,CAAC,IAAI,CAAC,GAAG,CAAwB,CAAG,EAAA,IAAI,CAAC,WAAW,CAAC,kBAAkB,CAAA,cAAA,EAAiB,KAAK,CAAA,uBAAA,CAAyB,CAAC,CAAC;KACtI;IAED,wBAAwB,CAAC,KAAK,EAAE,SAAS,EAAA;AACrC,QAAA,OAAO,IAAI,CAAC,IAAI,CAAC,IAAI,CAAC,GAAG,IAAI,CAAC,WAAW,CAAC,kBAAkB,CAAiB,cAAA,EAAA,KAAK,yBAAyB,EAAE,SAAS,CAAC,CAAC;KAC3H;AAED,IAAA,4BAA4B,CAAC,KAAK,EAAA;AAC9B,QAAA,OAAO,IAAI,CAAC,IAAI,CAAC,GAAG,CAA+B,CAAG,EAAA,IAAI,CAAC,WAAW,CAAC,kBAAkB,CAAA,cAAA,EAAiB,KAAK,CAAA,6BAAA,CAA+B,CAAC,CAAC;KACnJ;;AAjCQ,mBAAA,CAAA,IAAA,GAAA,EAAA,CAAA,kBAAA,CAAA,EAAA,UAAA,EAAA,QAAA,EAAA,OAAA,EAAA,SAAA,EAAA,QAAA,EAAA,EAAA,EAAA,IAAA,EAAA,mBAAmB,4CAIhB,aAAa,EAAA,CAAA,EAAA,MAAA,EAAA,EAAA,CAAA,eAAA,CAAA,UAAA,EAAA,CAAA,CAAA;AAJhB,mBAAA,CAAA,KAAA,GAAA,EAAA,CAAA,qBAAA,CAAA,EAAA,UAAA,EAAA,QAAA,EAAA,OAAA,EAAA,SAAA,EAAA,QAAA,EAAA,EAAA,EAAA,IAAA,EAAA,mBAAmB,cAHhB,MAAM,EAAA,CAAA,CAAA;4FAGT,mBAAmB,EAAA,UAAA,EAAA,CAAA;kBAJ/B,UAAU;AAAC,YAAA,IAAA,EAAA,CAAA;AACR,oBAAA,UAAU,EAAE,MAAM;AACrB,iBAAA,CAAA;;0BAMQ,MAAM;2BAAC,aAAa,CAAA;;;ACL7B;MAMa,YAAY,CAAA;AACrB,IAAA,WAAA,CACY,MAAc,EACd,cAA8B,EAC9B,mBAAwC,EAAA;QAFxC,IAAM,CAAA,MAAA,GAAN,MAAM,CAAQ;QACd,IAAc,CAAA,cAAA,GAAd,cAAc,CAAgB;QAC9B,IAAmB,CAAA,mBAAA,GAAnB,mBAAmB,CAAqB;KAC/C;IAEL,OAAO,CACH,IAA4B,EAC5B,KAA0B,EAAA;QAE1B,MAAM,QAAQ,GAAG,IAAI,CAAC,cAAc,CAAC,UAAU,CAAC,UAAU,CAAC,CAAC;QAC5D,MAAM,KAAK,GAAG,IAAI,CAAC,cAAc,CAAC,UAAU,CAAC,cAAc,CAAC,CAAC;QAE7D,IAAI,CAAC,QAAQ,EAAE;YACX,IAAI,CAAC,MAAM,CAAC,QAAQ,CAAC,CAAC,YAAY,CAAC,CAAC,CAAC;AACrC,YAAA,OAAO,KAAK,CAAC;AAChB,SAAA;AAAM,aAAA;AACH,YAAA,OAAO,IAAI,CAAC,mBAAmB,CAAC,4BAA4B,CAAC,KAAK,CAAC,CAAC,IAAI,CACpE,GAAG,CAAC,CAAC,QAAa,KAAI;AAClB,gBAAA,IAAI,QAAQ,IAAI,QAAQ,CAAC,MAAM,IAAI,CAAC,EAAE;oBAClC,IAAI,CAAC,MAAM,CAAC,QAAQ,CAAC,CAAC,YAAY,CAAC,CAAC,CAAC;AACrC,oBAAA,OAAO,KAAK,CAAC;AAChB,iBAAA;AAAM,qBAAA;AACH,oBAAA,OAAO,IAAI,CAAC;AACf,iBAAA;AACL,aAAC,CAAC,EACF,UAAU,CAAC,KAAK,IAAG;AACf,gBAAA,OAAO,CAAC,GAAG,CAAC,yCAAyC,EAAE,KAAK,CAAC,CAAC;gBAC9D,IAAI,CAAC,MAAM,CAAC,QAAQ,CAAC,CAAC,YAAY,CAAC,CAAC,CAAC;gBACrC,OAAO,CAAC,KAAK,CAAC,CAAC;aAClB,CAAC,CACL,CAAC;AACL,SAAA;KACJ;;0GAlCQ,YAAY,EAAA,IAAA,EAAA,CAAA,EAAA,KAAA,EAAAA,IAAA,CAAA,MAAA,EAAA,EAAA,EAAA,KAAA,EAAAC,IAAA,CAAA,cAAA,EAAA,EAAA,EAAA,KAAA,EAAAC,mBAAA,EAAA,CAAA,EAAA,MAAA,EAAA,EAAA,CAAA,eAAA,CAAA,UAAA,EAAA,CAAA,CAAA;AAAZ,YAAA,CAAA,KAAA,GAAA,EAAA,CAAA,qBAAA,CAAA,EAAA,UAAA,EAAA,QAAA,EAAA,OAAA,EAAA,SAAA,EAAA,QAAA,EAAA,EAAA,EAAA,IAAA,EAAA,YAAY,cAHT,MAAM,EAAA,CAAA,CAAA;4FAGT,YAAY,EAAA,UAAA,EAAA,CAAA;kBAJxB,UAAU;AAAC,YAAA,IAAA,EAAA,CAAA;AACR,oBAAA,UAAU,EAAE,MAAM;AACrB,iBAAA,CAAA;;;MCJY,gBAAgB,CAAA;AAEzB,IAAA,WAAA,CACY,mBAAwC,EAAA;QAAxC,IAAmB,CAAA,mBAAA,GAAnB,mBAAmB,CAAqB;KAC/C;AAEC,IAAA,mBAAmB,CAAC,KAAK,EAAA;;AAC3B,YAAA,IAAI,UAAwB,CAAC;YAC7B,IAAI;AACA,gBAAA,UAAU,GAAG,MAAM,IAAI,CAAC,mBAAmB,CAAC,mBAAmB,CAAC,KAAK,CAAC,CAAC,SAAS,EAAE,CAAC;AAEnF,gBAAA,IAAI,UAAU,EAAE;AACZ,oBAAA,OAAO,UAAU,CAAC;AACrB,iBAAA;AAAM,qBAAA;AACH,oBAAA,OAAO,CAAC,IAAI,SAAS,EAAE,CAAC,CAAC;AAC5B,iBAAA;AACJ,aAAA;AAAC,YAAA,OAAO,KAAK,EAAE;AACZ,gBAAA,OAAO,CAAC,KAAK,CAAC,SAAS,EAAE,KAAK,CAAC,CAAC;AAChC,gBAAA,OAAO,CAAC,IAAI,SAAS,EAAE,CAAC,CAAC;AAC5B,aAAA;SACJ,CAAA,CAAA;AAAA,KAAA;AAEK,IAAA,sBAAsB,CAAC,KAAK,EAAA;;AAC9B,YAAA,IAAI,UAAwB,CAAC;YAC7B,IAAI;AACA,gBAAA,UAAU,GAAG,MAAM,IAAI,CAAC,mBAAmB,CAAC,sBAAsB,CAAC,KAAK,CAAC,CAAC,SAAS,EAAE,CAAC;AAEtF,gBAAA,IAAI,UAAU,EAAE;AACZ,oBAAA,OAAO,UAAU,CAAC;AACrB,iBAAA;AAAM,qBAAA;AACH,oBAAA,OAAO,CAAC,IAAI,SAAS,EAAE,CAAC,CAAC;AAC5B,iBAAA;AACJ,aAAA;AAAC,YAAA,OAAO,KAAK,EAAE;AACZ,gBAAA,OAAO,CAAC,KAAK,CAAC,SAAS,EAAE,KAAK,CAAC,CAAC;AAChC,gBAAA,OAAO,CAAC,IAAI,SAAS,EAAE,CAAC,CAAC;AAC5B,aAAA;SACJ,CAAA,CAAA;AAAA,KAAA;IAEK,sBAAsB,CAAC,KAAK,EAAE,WAAW,EAAA;;AAC3C,YAAA,IAAI,UAAwB,CAAC;YAC7B,IAAI;AACA,gBAAA,UAAU,GAAG,MAAM,IAAI,CAAC,mBAAmB,CAAC,sBAAsB,CAAC,KAAK,EAAE,WAAW,CAAC,CAAC,SAAS,EAAE,CAAC;AAEnG,gBAAA,IAAI,UAAU,EAAE;AACZ,oBAAA,OAAO,UAAU,CAAC;AACrB,iBAAA;AAAM,qBAAA;AACH,oBAAA,OAAO,CAAC,IAAI,SAAS,EAAE,CAAC,CAAC;AAC5B,iBAAA;AACJ,aAAA;AAAC,YAAA,OAAO,KAAK,EAAE;AACZ,gBAAA,OAAO,CAAC,KAAK,CAAC,SAAS,EAAE,KAAK,CAAC,CAAC;AAChC,gBAAA,OAAO,CAAC,IAAI,SAAS,EAAE,CAAC,CAAC;AAC5B,aAAA;SACJ,CAAA,CAAA;AAAA,KAAA;AAEK,IAAA,uBAAuB,CAAC,KAAK,EAAA;;AAC/B,YAAA,IAAI,iBAAwC,CAAC;YAC7C,IAAI;AACA,gBAAA,iBAAiB,GAAG,MAAM,IAAI,CAAC,mBAAmB,CAAC,uBAAuB,CAAC,KAAK,CAAC,CAAC,SAAS,EAAE,CAAC;AAE9F,gBAAA,IAAI,iBAAiB,EAAE;AACnB,oBAAA,OAAO,iBAAiB,CAAC;AAC5B,iBAAA;AAAM,qBAAA;oBACH,OAAO,IAAI,oBAAoB,EAAE,CAAC;AACrC,iBAAA;AACJ,aAAA;AAAC,YAAA,OAAO,KAAK,EAAE;AACZ,gBAAA,OAAO,CAAC,KAAK,CAAC,SAAS,EAAE,KAAK,CAAC,CAAC;gBAChC,OAAO,IAAI,oBAAoB,EAAE,CAAC;AACrC,aAAA;SACJ,CAAA,CAAA;AAAA,KAAA;AAEK,IAAA,4BAA4B,CAAC,KAAK,EAAA;;AACpC,YAAA,IAAI,sBAAoD,CAAC;YACzD,IAAI;AACA,gBAAA,sBAAsB,GAAG,MAAM,IAAI,CAAC,mBAAmB,CAAC,4BAA4B,CAAC,KAAK,CAAC,CAAC,SAAS,EAAE,CAAC;AAExG,gBAAA,IAAI,sBAAsB,EAAE;AACxB,oBAAA,OAAO,sBAAsB,CAAC;AACjC,iBAAA;AAAM,qBAAA;AACH,oBAAA,OAAO,CAAC,IAAI,yBAAyB,EAAE,CAAC,CAAC;AAC5C,iBAAA;AACJ,aAAA;AAAC,YAAA,OAAO,KAAK,EAAE;AACZ,gBAAA,OAAO,CAAC,KAAK,CAAC,SAAS,EAAE,KAAK,CAAC,CAAC;AAChC,gBAAA,OAAO,CAAC,IAAI,yBAAyB,EAAE,CAAC,CAAC;AAC5C,aAAA;SACJ,CAAA,CAAA;AAAA,KAAA;;8GApFQ,gBAAgB,EAAA,IAAA,EAAA,CAAA,EAAA,KAAA,EAAAC,mBAAA,EAAA,CAAA,EAAA,MAAA,EAAA,EAAA,CAAA,eAAA,CAAA,UAAA,EAAA,CAAA,CAAA;AAAhB,gBAAA,CAAA,KAAA,GAAA,EAAA,CAAA,qBAAA,CAAA,EAAA,UAAA,EAAA,QAAA,EAAA,OAAA,EAAA,SAAA,EAAA,QAAA,EAAA,EAAA,EAAA,IAAA,EAAA,gBAAgB,cAHb,MAAM,EAAA,CAAA,CAAA;4FAGT,gBAAgB,EAAA,UAAA,EAAA,CAAA;kBAJ5B,UAAU;AAAC,YAAA,IAAA,EAAA,CAAA;AACR,oBAAA,UAAU,EAAE,MAAM;AACrB,iBAAA,CAAA;;;MCEY,uBAAuB,CAAA;IAEhC,WACY,CAAA,IAAgB,EACO,WAAgB,EAAA;QADvC,IAAI,CAAA,IAAA,GAAJ,IAAI,CAAY;QACO,IAAW,CAAA,WAAA,GAAX,WAAW,CAAK;KAC9C;IAEL,gBAAgB,CAAC,KAAK,EAAE,WAAW,EAAA;AAC/B,QAAA,IAAI,OAAO,GAAG,IAAI,WAAW,EAAE,CAAC,GAAG,CAAC,YAAY,EAAE,KAAK,CAAC,CAAC;QAEzD,OAAO,IAAI,CAAC,IAAI,CAAC,IAAI,CAAC,CAAG,EAAA,IAAI,CAAC,WAAW,CAAC,kBAAkB,iBAAiB,KAAK,CAAA,eAAA,CAAiB,EAAE,WAAW,EAAE,EAAE,OAAO,EAAE,OAAO,EAAE,CAAC,CAAC;KAC3I;IAED,8BAA8B,CAAC,KAAK,EAAE,WAAW,EAAA;AAC7C,QAAA,IAAI,OAAO,GAAG,IAAI,WAAW,EAAE,CAAC,GAAG,CAAC,YAAY,EAAE,KAAK,CAAC,CAAC;QAEzD,OAAO,IAAI,CAAC,IAAI,CAAC,IAAI,CAAe,CAAG,EAAA,IAAI,CAAC,WAAW,CAAC,kBAAkB,iBAAiB,KAAK,CAAA,WAAA,CAAa,EAAE,WAAW,EAAE,EAAE,OAAO,EAAE,OAAO,EAAE,CAAC,CAAA;KACpJ;IAED,sBAAsB,CAAC,KAAK,EAAE,WAAW,EAAA;AACrC,QAAA,IAAI,OAAO,GAAG,IAAI,WAAW,EAAE,CAAC,GAAG,CAAC,YAAY,EAAE,KAAK,CAAC,CAAC;QAEzD,OAAO,IAAI,CAAC,IAAI,CAAC,IAAI,CAAC,CAAG,EAAA,IAAI,CAAC,WAAW,CAAC,kBAAkB,iBAAiB,KAAK,CAAA,uBAAA,CAAyB,EAAE,WAAW,EAAE,EAAE,OAAO,EAAE,OAAO,EAAE,CAAC,CAAA;KAClJ;IAED,wBAAwB,CAAC,KAAK,EAAE,WAAW,EAAA;AACvC,QAAA,IAAI,OAAO,GAAG,IAAI,WAAW,EAAE,CAAC,GAAG,CAAC,YAAY,EAAE,KAAK,CAAC,CAAC;QAEzD,OAAO,IAAI,CAAC,IAAI,CAAC,IAAI,CAAC,CAAG,EAAA,IAAI,CAAC,WAAW,CAAC,kBAAkB,iBAAiB,KAAK,CAAA,YAAA,CAAc,EAAE,WAAW,EAAE,EAAE,OAAO,EAAE,OAAO,EAAE,CAAC,CAAC;KACxI;IAED,sBAAsB,CAAC,KAAK,EAAE,WAAW,EAAA;AACrC,QAAA,IAAI,OAAO,GAAG,IAAI,WAAW,EAAE,CAAC,GAAG,CAAC,YAAY,EAAE,KAAK,CAAC,CAAC;QAEzD,OAAO,IAAI,CAAC,IAAI,CAAC,IAAI,CAAC,CAAG,EAAA,IAAI,CAAC,WAAW,CAAC,kBAAkB,iBAAiB,KAAK,CAAA,sBAAA,CAAwB,EAAE,WAAW,EAAE,EAAE,OAAO,EAAE,OAAO,EAAE,CAAC,CAAC;KAClJ;IAED,sBAAsB,CAAC,KAAK,EAAE,WAAW,EAAA;AACrC,QAAA,IAAI,OAAO,GAAG,IAAI,WAAW,EAAE,CAAC,GAAG,CAAC,YAAY,EAAE,KAAK,CAAC,CAAC;QAEzD,OAAO,IAAI,CAAC,IAAI,CAAC,IAAI,CAAC,CAAG,EAAA,IAAI,CAAC,WAAW,CAAC,kBAAkB,iBAAiB,KAAK,CAAA,kBAAA,CAAoB,EAAE,WAAW,EAAE,EAAE,OAAO,EAAE,OAAO,EAAE,CAAC,CAAC;KAC9I;;AAzCQ,uBAAA,CAAA,IAAA,GAAA,EAAA,CAAA,kBAAA,CAAA,EAAA,UAAA,EAAA,QAAA,EAAA,OAAA,EAAA,SAAA,EAAA,QAAA,EAAA,EAAA,EAAA,IAAA,EAAA,uBAAuB,4CAIpB,aAAa,EAAA,CAAA,EAAA,MAAA,EAAA,EAAA,CAAA,eAAA,CAAA,UAAA,EAAA,CAAA,CAAA;AAJhB,uBAAA,CAAA,KAAA,GAAA,EAAA,CAAA,qBAAA,CAAA,EAAA,UAAA,EAAA,QAAA,EAAA,OAAA,EAAA,SAAA,EAAA,QAAA,EAAA,EAAA,EAAA,IAAA,EAAA,uBAAuB,cAFpB,MAAM,EAAA,CAAA,CAAA;4FAET,uBAAuB,EAAA,UAAA,EAAA,CAAA;kBAHnC,UAAU;AAAC,YAAA,IAAA,EAAA,CAAA;AACR,oBAAA,UAAU,EAAE,MAAM;AACrB,iBAAA,CAAA;;0BAKQ,MAAM;2BAAC,aAAa,CAAA;;;MCJhB,oBAAoB,CAAA;AAE7B,IAAA,WAAA,CACY,uBAAgD,EAAA;QAAhD,IAAuB,CAAA,uBAAA,GAAvB,uBAAuB,CAAyB;KACvD;IAEC,gBAAgB,CAAC,KAAK,EAAE,WAAW,EAAA;;AACrC,YAAA,IAAI,cAAc,CAAC;YACnB,IAAI;AACA,gBAAA,cAAc,GAAG,MAAM,IAAI,CAAC,uBAAuB,CAAC,gBAAgB,CAAC,KAAK,EAAE,WAAW,CAAC,CAAC,SAAS,EAAE,CAAC;AAErG,gBAAA,IAAI,cAAc,EAAE;AAChB,oBAAA,OAAO,cAAc,CAAC;AACzB,iBAAA;AACJ,aAAA;AAAC,YAAA,OAAO,KAAK,EAAE;AACZ,gBAAA,OAAO,CAAC,KAAK,CAAC,SAAS,EAAE,KAAK,CAAC,CAAC;AAChC,gBAAA,MAAM,KAAK,CAAC;AACf,aAAA;SACJ,CAAA,CAAA;AAAA,KAAA;IAEK,8BAA8B,CAAC,KAAK,EAAE,WAAW,EAAA;;AACnD,YAAA,IAAI,eAA6B,CAAC;YAClC,IAAI;AACA,gBAAA,eAAe,GAAG,MAAM,IAAI,CAAC,uBAAuB,CAAC,8BAA8B,CAAC,KAAK,EAAE,WAAW,CAAC,CAAC,SAAS,EAAE,CAAC;AAEpH,gBAAA,IAAI,eAAe,EAAE;AACjB,oBAAA,OAAO,CAAC,IAAI,SAAS,EAAE,CAAC,CAAC;AAC5B,iBAAA;AACJ,aAAA;AAAC,YAAA,OAAO,KAAK,EAAE;AACZ,gBAAA,OAAO,CAAC,KAAK,CAAC,SAAS,EAAE,KAAK,CAAC,CAAC;AAChC,gBAAA,MAAM,KAAK,CAAC;AACf,aAAA;SACJ,CAAA,CAAA;AAAA,KAAA;IAGK,sBAAsB,CAAC,KAAK,EAAE,WAAW,EAAA;;AAC3C,YAAA,IAAI,mBAAmB,CAAC;YACxB,IAAI;AACA,gBAAA,mBAAmB,GAAG,MAAM,IAAI,CAAC,uBAAuB,CAAC,sBAAsB,CAAC,KAAK,EAAE,WAAW,CAAC,CAAC,SAAS,EAAE,CAAC;AAEhH,gBAAA,IAAI,mBAAmB,EAAE;AACrB,oBAAA,OAAO,mBAAmB,CAAC;AAC9B,iBAAA;AACJ,aAAA;AAAC,YAAA,OAAO,KAAK,EAAE;AACZ,gBAAA,OAAO,CAAC,KAAK,CAAC,SAAS,EAAE,KAAK,CAAC,CAAC;AAChC,gBAAA,MAAM,KAAK,CAAC;AACf,aAAA;SACJ,CAAA,CAAA;AAAA,KAAA;;kHA/CQ,oBAAoB,EAAA,IAAA,EAAA,CAAA,EAAA,KAAA,EAAAC,uBAAA,EAAA,CAAA,EAAA,MAAA,EAAA,EAAA,CAAA,eAAA,CAAA,UAAA,EAAA,CAAA,CAAA;AAApB,oBAAA,CAAA,KAAA,GAAA,EAAA,CAAA,qBAAA,CAAA,EAAA,UAAA,EAAA,QAAA,EAAA,OAAA,EAAA,SAAA,EAAA,QAAA,EAAA,EAAA,EAAA,IAAA,EAAA,oBAAoB,cAHjB,MAAM,EAAA,CAAA,CAAA;4FAGT,oBAAoB,EAAA,UAAA,EAAA,CAAA;kBAJhC,UAAU;AAAC,YAAA,IAAA,EAAA,CAAA;AACR,oBAAA,UAAU,EAAE,MAAM;AACrB,iBAAA,CAAA;;;ACWD;MASa,cAAc,CAAA;IAuBvB,WACoC,CAAA,IAAI,EAC5B,cAA8B,EAC9B,WAAwB,EACxB,gBAAkC,EAClC,oBAA0C,EAC1C,gBAAkC,EAAA;QALV,IAAI,CAAA,IAAA,GAAJ,IAAI,CAAA;QAC5B,IAAc,CAAA,cAAA,GAAd,cAAc,CAAgB;QAC9B,IAAW,CAAA,WAAA,GAAX,WAAW,CAAa;QACxB,IAAgB,CAAA,gBAAA,GAAhB,gBAAgB,CAAkB;QAClC,IAAoB,CAAA,oBAAA,GAApB,oBAAoB,CAAsB;QAC1C,IAAgB,CAAA,gBAAA,GAAhB,gBAAgB,CAAkB;QA3B9C,IAAY,CAAA,YAAA,GAAG,aAAa,CAAC;QAE7B,IAA2B,CAAA,2BAAA,GAAG,2BAA2B,CAAC;QAC1D,IAAoB,CAAA,oBAAA,GAAG,oBAAoB,CAAC;QAC5C,IAAU,CAAA,UAAA,GAAG,UAAU,CAAC;AAQxB,QAAA,IAAA,CAAA,UAAU,GAAG,CAAC,IAAI,SAAS,EAAE,CAAC,CAAC;AAE/B,QAAA,IAAA,CAAA,SAAS,GAAW,aAAa,CAAC,gBAAgB,CAAC;AACnD,QAAA,IAAA,CAAA,aAAa,GAAW,kBAAkB,CAAC,OAAO,CAAC;AACnD,QAAA,IAAA,CAAA,UAAU,GAAG,IAAI,UAAU,EAAE,CAAC;AAC9B,QAAA,IAAA,CAAA,SAAS,GAAG,IAAI,qBAAqB,EAAE,CAAC;QAExC,IAAW,CAAA,WAAA,GAAgB,IAAI,WAAW,CAAC,aAAa,EAAE,UAAU,CAAC,QAAQ,CAAC,CAAC;AAU3E,QAAA,IAAI,CAAC,SAAS,GAAG,IAAI,CAAC,WAAW,CAAC,CAAC;KACtC;IAED,QAAQ,GAAA;QACJ,IAAI,CAAC,KAAK,GAAG,IAAI,CAAC,cAAc,CAAC,UAAU,CAAC,cAAc,CAAC,CAAC;QAE5D,IAAI,CAAC,eAAe,CAAC,IAAI,CAAC,WAAW,CAAC,KAAK,CAAC,CAAC;QAC7C,IAAI,CAAC,sBAAsB,EAAE,CAAC;KACjC;IAEK,sBAAsB,GAAA;;AACxB,YAAA,IAAI,CAAC,UAAU,IAAiB,MAAM,IAAI,CAAC,gBAAgB,CAAC,sBAAsB,CAAC,IAAI,CAAC,KAAK,CAAC,CAAA,CAAC;SAClG,CAAA,CAAA;AAAA,KAAA;AAED,IAAA,eAAe,CAAC,iBAAiB,EAAA;QAE7B,IAAI,CAAC,SAAS,GAAG,IAAI,CAAC,WAAW,CAAC,gBAAgB,CAAC,iBAAiB,CAAC,CAAC;AAEtE,QAAA,QAAQ,iBAAiB;YACrB,KAAK,oBAAoB,CAAC,WAAW;AACjC,gBAAA,IAAI,CAAC,OAAO,GAAG,IAAI,CAAC,WAAW,CAAC,cAAc,CAAC,oBAAoB,CAAC,YAAY,CAAC,CAAC;AAClF,gBAAA,IAAI,CAAC,QAAQ,GAAG,QAAQ,CAAC;gBACzB,MAAM;YAEV,KAAK,oBAAoB,CAAC,WAAW;AACjC,gBAAA,IAAI,CAAC,OAAO,GAAG,IAAI,CAAC,WAAW,CAAC,cAAc,CAAC,oBAAoB,CAAC,WAAW,CAAC,CAAC;AACjF,gBAAA,IAAI,CAAC,QAAQ,GAAG,QAAQ,CAAC;gBACzB,MAAM;YAEV,KAAK,oBAAoB,CAAC,YAAY;AAClC,gBAAA,IAAI,CAAC,OAAO,GAAG,IAAI,CAAC,WAAW,CAAC,cAAc,CAAC,oBAAoB,CAAC,WAAW,CAAC,CAAC;AACjF,gBAAA,IAAI,CAAC,QAAQ,GAAG,OAAO,CAAC;gBACxB,MAAM;AACV,YAAA;AACI,gBAAA,IAAI,CAAC,OAAO,GAAG,IAAI,CAAC;AACpB,gBAAA,IAAI,CAAC,QAAQ,GAAG,IAAI,CAAC;gBACrB,MAAM;AACb,SAAA;QAED,IAAI,CAAC,YAAY,EAAE,CAAC;KACvB;AAED,IAAA,mBAAmB,CAAC,gBAAgB,EAAA;AAChC,QAAA,MAAM,SAAS,GAAG,IAAI,CAAC,gBAAgB,CAAC,eAAe,CAAC,IAAI,CAAC,UAAU,EAAE,WAAW,EAAE,gBAAgB,CAAC,CAAC;QACxG,OAAO,SAAS,GAAG,SAAS,CAAC,SAAS,GAAG,KAAK,CAAC;KAClD;IAEK,YAAY,GAAA;;;AAEd,YAAA,IAAI,CAAC,aAAa,GAAG,kBAAkB,CAAC,OAAO,CAAC;YAEhD,IAAI;AACA,gBAAA,IAAI,WAAW,GAAG,IAAI,oBAAoB,EAAE,CAAC;AAE7C,gBAAA,MAAM,kBAAkB,GAAG,IAAI,CAAC,mBAAmB,CAAC,CAAA,EAAA,GAAA,IAAI,CAAC,SAAS,MAAE,IAAA,IAAA,EAAA,KAAA,KAAA,CAAA,GAAA,KAAA,CAAA,GAAA,EAAA,CAAA,WAAW,CAAC,CAAC;AAEjF,gBAAA,WAAW,CAAC,QAAQ,GAAG,IAAI,CAAC,QAAQ,CAAC;gBACrC,WAAW,CAAC,QAAQ,GAAG,CAAA,CAAA,EAAA,GAAA,IAAI,CAAC,SAAS,MAAE,IAAA,IAAA,EAAA,KAAA,KAAA,CAAA,GAAA,KAAA,CAAA,GAAA,EAAA,CAAA,QAAQ,IAAG,CAAC,IAAI,CAAC,SAAS,CAAC,QAAQ,CAAC,GAAG,IAAI,CAAC;gBACnF,WAAW,CAAC,QAAQ,GAAG,CAAA,CAAA,EAAA,GAAA,IAAI,CAAC,SAAS,MAAE,IAAA,IAAA,EAAA,KAAA,KAAA,CAAA,GAAA,KAAA,CAAA,GAAA,EAAA,CAAA,QAAQ,IAAG,CAAC,IAAI,CAAC,SAAS,CAAC,QAAQ,CAAC,GAAG,IAAI,CAAC;gBACnF,WAAW,CAAC,UAAU,GAAG,CAAA,EAAA,GAAA,IAAI,CAAC,SAAS,MAAE,IAAA,IAAA,EAAA,KAAA,KAAA,CAAA,GAAA,KAAA,CAAA,GAAA,EAAA,CAAA,UAAU,CAAC;gBAEpD,WAAW,CAAC,MAAM,GAAG;AACjB,oBAAA;AACI,wBAAA,IAAI,EAAE,IAAI,CAAC,SAAS,CAAC,WAAW;AAChC,wBAAA,KAAK,EAAE,KAAK;AACZ,wBAAA,GAAG,EAAE,KAAK;wBACV,cAAc,EAAE,kBAAkB,GAAG,KAAK,GAAG,IAAI;wBACjD,cAAc,EAAE,kBAAkB,GAAG,QAAQ,GAAG,IAAI;AACvD,qBAAA;iBACJ,CAAC;gBACF,WAAW,CAAC,aAAa,EAAE,CAAC;AAE5B,gBAAA,WAAW,CAAC,SAAS,GAAG,IAAI,CAAC,SAAS,CAAC;AACvC,gBAAA,WAAW,CAAC,OAAO,GAAG,IAAI,CAAC,OAAO,CAAC;AAEnC,gBAAA,MAAM,QAAQ,GAAG,MAAM,IAAI,CAAC,oBAAoB,CAAC,gBAAgB,CAAC,IAAI,CAAC,KAAK,EAAE,WAAW,CAAC,CAAC;AAE3F,gBAAA,IAAI,CAAA,CAAA,EAAA,GAAA,QAAQ,KAAR,IAAA,IAAA,QAAQ,uBAAR,QAAQ,CAAG,CAAC,CAAC,0CAAE,IAAI,CAAC,MAAM,IAAG,CAAC,EAAE;AAChC,oBAAA,IAAI,CAAC,UAAU,GAAG,QAAQ,KAAR,IAAA,IAAA,QAAQ,KAAR,KAAA,CAAA,GAAA,KAAA,CAAA,GAAA,QAAQ,CAAG,CAAC,CAAE,CAAA,UAAU,CAAC;oBAE3C,IAAI,CAAC,SAAS,CAAC,QAAQ,GAAG,QAAQ,KAAA,IAAA,IAAR,QAAQ,KAAR,KAAA,CAAA,GAAA,KAAA,CAAA,GAAA,QAAQ,CAAG,CAAC,CAAA,CAAE,IAAI,CAAC,GAAG,CAAC,IAAI,KAAK;AACtD,wBAAA,IAAI,EAAE,MAAM,CAAC,IAAI,IAAI,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC,CAAC,MAAM,CAAC,qBAAqB,CAAC;wBAC/D,KAAK,EAAE,IAAI,CAAC,KAAK;AACpB,qBAAA,CAAC,CAAC,CAAC;AAEJ,oBAAA,IAAI,CAAC,SAAS,CAAC,IAAI,GAAG;AAClB,wBAAA,IAAI,EAAE,EAAE;wBACR,IAAI,EAAE,QAAQ,KAAR,IAAA,IAAA,QAAQ,uBAAR,QAAQ,CAAG,CAAC,CAAA,CAAE,IAAI;qBAC3B,CAAC;AAEF,oBAAA,IAAI,CAAC,SAAS,CAAC,UAAU,GAAG,CAAA,QAAQ,KAAA,IAAA,IAAR,QAAQ,KAAA,KAAA,CAAA,GAAA,KAAA,CAAA,GAAR,QAAQ,CAAG,CAAC,CAAE,CAAA,UAAU,IAAG,IAAI,IAAG,QAAQ,KAAR,IAAA,IAAA,QAAQ,KAAR,KAAA,CAAA,GAAA,KAAA,CAAA,GAAA,QAAQ,CAAG,CAAC,CAAE,CAAA,IAAI,CAAA,GAAG,GAAG,CAAC;AACvF,oBAAA,IAAI,CAAC,SAAS,CAAC,kBAAkB,GAAG,IAAI,CAAC;AACzC,oBAAA,IAAI,CAAC,SAAS,CAAC,YAAY,GAAG,IAAI,CAAC;AACnC,oBAAA,IAAI,CAAC,SAAS,CAAC,aAAa,GAAG,IAAI,CAAC;AACpC,oBAAA,IAAI,CAAC,SAAS,CAAC,WAAW,GAAG,IAAI,CAAC;AAClC,oBAAA,IAAI,CAAC,SAAS,CAAC,iBAAiB,GAAG,IAAI,CAAC;AAExC,oBAAA,IAAI,CAAC,aAAa,GAAG,kBAAkB,CAAC,QAAQ,CAAC;AAEpD,iBAAA;AAAM,qBAAA;AACH,oBAAA,IAAI,CAAC,aAAa,GAAG,kBAAkB,CAAC,OAAO,CAAC;AACnD,iBAAA;AAEJ,aAAA;AAAC,YAAA,OAAO,KAAK,EAAE;AACZ,gBAAA,IAAI,CAAC,aAAa,GAAG,kBAAkB,CAAC,OAAO,CAAC;AAEhD,gBAAA,OAAO,CAAC,KAAK,CAAC,yBAAyB,EAAE,KAAK,CAAC,CAAC;AACnD,aAAA;;AACJ,KAAA;;AA3IQ,cAAA,CAAA,IAAA,GAAA,EAAA,CAAA,kBAAA,CAAA,EAAA,UAAA,EAAA,QAAA,EAAA,OAAA,EAAA,SAAA,EAAA,QAAA,EAAA,EAAA,EAAA,IAAA,EAAA,cAAc,kBAwBX,eAAe,EAAA,EAAA,EAAA,KAAA,EAAAJ,IAAA,CAAA,cAAA,EAAA,EAAA,EAAA,KAAA,EAAA,EAAA,CAAA,WAAA,EAAA,EAAA,EAAA,KAAA,EAAAK,gBAAA,EAAA,EAAA,EAAA,KAAA,EAAAC,oBAAA,EAAA,EAAA,EAAA,KAAA,EAAAC,EAAA,CAAA,gBAAA,EAAA,CAAA,EAAA,MAAA,EAAA,EAAA,CAAA,eAAA,CAAA,SAAA,EAAA,CAAA,CAAA;AAxBlB,cAAA,CAAA,IAAA,GAAA,EAAA,CAAA,oBAAA,CAAA,EAAA,UAAA,EAAA,QAAA,EAAA,OAAA,EAAA,SAAA,EAAA,IAAA,EAAA,cAAc,iDC5B3B,k+CAmCM,EAAA,UAAA,EAAA,CAAA,EAAA,IAAA,EAAA,EAAA,CAAA,SAAA,EAAA,QAAA,EAAA,4LAAA,EAAA,MAAA,EAAA,CAAA,UAAA,EAAA,eAAA,EAAA,OAAA,CAAA,EAAA,QAAA,EAAA,CAAA,WAAA,CAAA,EAAA,EAAA,EAAA,IAAA,EAAAC,IAAA,CAAA,YAAA,EAAA,QAAA,EAAA,gBAAA,EAAA,MAAA,EAAA,CAAA,OAAA,EAAA,YAAA,EAAA,YAAA,EAAA,oBAAA,EAAA,WAAA,CAAA,EAAA,QAAA,EAAA,CAAA,cAAA,CAAA,EAAA,EAAA,EAAA,IAAA,EAAAC,EAAA,CAAA,SAAA,EAAA,QAAA,EAAA,YAAA,EAAA,MAAA,EAAA,CAAA,UAAA,EAAA,eAAA,EAAA,UAAA,CAAA,EAAA,QAAA,EAAA,CAAA,WAAA,CAAA,EAAA,EAAA,EAAA,IAAA,EAAAC,GAAA,CAAA,SAAA,EAAA,QAAA,EAAA,YAAA,EAAA,QAAA,EAAA,CAAA,WAAA,CAAA,EAAA,EAAA,EAAA,IAAA,EAAAC,KAAA,CAAA,yBAAA,EAAA,QAAA,EAAA,yBAAA,EAAA,MAAA,EAAA,CAAA,cAAA,EAAA,cAAA,EAAA,eAAA,EAAA,SAAA,CAAA,EAAA,CAAA,EAAA,UAAA,EAAA,CAAA,EAAA,IAAA,EAAAC,IAAA,CAAA,cAAA,EAAA,QAAA,EAAA,sCAAA,EAAA,MAAA,EAAA,CAAA,IAAA,CAAA,EAAA,QAAA,EAAA,CAAA,gBAAA,CAAA,EAAA,EAAA,EAAA,IAAA,EAAAA,IAAA,CAAA,cAAA,EAAA,QAAA,EAAA,sCAAA,EAAA,MAAA,EAAA,CAAA,MAAA,EAAA,kBAAA,EAAA,YAAA,EAAA,gBAAA,CAAA,EAAA,QAAA,EAAA,CAAA,gBAAA,CAAA,EAAA,EAAA,EAAA,IAAA,EAAAC,GAAA,CAAA,UAAA,EAAA,QAAA,EAAA,cAAA,EAAA,QAAA,EAAA,CAAA,YAAA,CAAA,EAAA,EAAA,EAAA,IAAA,EAAAD,IAAA,CAAA,gBAAA,EAAA,QAAA,EAAA,8DAAA,EAAA,EAAA,EAAA,IAAA,EAAAJ,IAAA,CAAA,QAAA,EAAA,QAAA,EAAA,WAAA,EAAA,EAAA,EAAA,IAAA,EAAAM,IAAA,CAAA,eAAA,EAAA,QAAA,EAAA,2CAAA,EAAA,EAAA,EAAA,IAAA,EAAAA,IAAA,CAAA,oBAAA,EAAA,QAAA,EAAA,eAAA,EAAA,MAAA,EAAA,CAAA,UAAA,EAAA,aAAA,EAAA,SAAA,CAAA,EAAA,OAAA,EAAA,CAAA,eAAA,CAAA,EAAA,QAAA,EAAA,CAAA,QAAA,CAAA,EAAA,EAAA,EAAA,IAAA,EAAA,GAAA,CAAA,OAAA,EAAA,QAAA,EAAA,kBAAA,EAAA,MAAA,EAAA,CAAA,SAAA,EAAA,cAAA,EAAA,eAAA,CAAA,EAAA,CAAA,EAAA,CAAA,CAAA;4FDPO,cAAc,EAAA,UAAA,EAAA,CAAA;kBAP1B,SAAS;AAAC,YAAA,IAAA,EAAA,CAAA;AACP,oBAAA,QAAQ,EAAE,WAAW;AACrB,oBAAA,WAAW,EAAE,wBAAwB;AACrC,oBAAA,MAAM,EAAE,EACP;AACJ,iBAAA,CAAA;;0BA0BQ,MAAM;2BAAC,eAAe,CAAA;;;AErC/B;MAkBa,WAAW,CAAA;;yGAAX,WAAW,EAAA,IAAA,EAAA,EAAA,EAAA,MAAA,EAAA,EAAA,CAAA,eAAA,CAAA,QAAA,EAAA,CAAA,CAAA;0GAAX,WAAW,EAAA,YAAA,EAAA,CAdhB,cAAc,CAAA,EAAA,OAAA,EAAA,CAGd,YAAY;QACZ,sBAAsB;QACtB,mBAAmB;QACnB,eAAe;QACf,eAAe;QACf,cAAc;QACd,kBAAkB;QAClB,eAAe;QACf,gBAAgB,CAAA,EAAA,CAAA,CAAA;AAGX,WAAA,CAAA,IAAA,GAAA,EAAA,CAAA,mBAAA,CAAA,EAAA,UAAA,EAAA,QAAA,EAAA,OAAA,EAAA,SAAA,EAAA,QAAA,EAAA,EAAA,EAAA,IAAA,EAAA,WAAW,EAZX,OAAA,EAAA,CAAA;YACL,YAAY;YACZ,sBAAsB;YACtB,mBAAmB;YACnB,eAAe;YACf,eAAe;YACf,cAAc;YACd,kBAAkB;YAClB,eAAe;YACf,gBAAgB;AACnB,SAAA,CAAA,EAAA,CAAA,CAAA;4FAEQ,WAAW,EAAA,UAAA,EAAA,CAAA;kBAhBvB,QAAQ;AAAC,YAAA,IAAA,EAAA,CAAA;AACN,oBAAA,YAAY,EAAE;wBACV,cAAc;AACjB,qBAAA;AACD,oBAAA,OAAO,EAAE;wBACL,YAAY;wBACZ,sBAAsB;wBACtB,mBAAmB;wBACnB,eAAe;wBACf,eAAe;wBACf,cAAc;wBACd,kBAAkB;wBAClB,eAAe;wBACf,gBAAgB;AACnB,qBAAA;AACJ,iBAAA,CAAA;;;AC1BD;MAQa,qBAAqB,CAAA;IAU9B,WACW,CAAA,SAA8C,EACrB,IAAI,EAAA;QAD7B,IAAS,CAAA,SAAA,GAAT,SAAS,CAAqC;QACrB,IAAI,CAAA,IAAA,GAAJ,IAAI,CAAA;QAVxC,IAAU,CAAA,UAAA,GAAG,UAAU,CAAC;QAMxB,IAAQ,CAAA,QAAA,GAAgB,IAAI,WAAW,CAAC,EAAE,EAAE,UAAU,CAAC,QAAQ,CAAC,CAAC;QAM7D,IAAI,CAAC,QAAQ,GAAG,IAAI,KAAA,IAAA,IAAJ,IAAI,KAAJ,KAAA,CAAA,GAAA,KAAA,CAAA,GAAA,IAAI,CAAE,QAAQ,CAAC;QAC/B,IAAI,CAAC,UAAU,GAAG,IAAI,KAAA,IAAA,IAAJ,IAAI,KAAJ,KAAA,CAAA,GAAA,KAAA,CAAA,GAAA,IAAI,CAAE,UAAU,CAAC;QACnC,IAAI,CAAC,YAAY,GAAG,IAAI,KAAA,IAAA,IAAJ,IAAI,KAAJ,KAAA,CAAA,GAAA,KAAA,CAAA,GAAA,IAAI,CAAE,YAAY,CAAC;AACvC,QAAA,IAAI,CAAC,SAAS,CAAC,YAAY,GAAG,IAAI,CAAC;KACtC;IAED,QAAQ,GAAA;QACJ,IAAI,IAAI,CAAC,QAAQ,EAAE;YACf,IAAI,CAAC,QAAQ,CAAC,UAAU,CAAC,IAAI,CAAC,QAAQ,CAAC,CAAC;AAC3C,SAAA;KACJ;AAED,IAAA,cAAc,CAAC,aAAa,EAAA;AACxB,QAAA,IAAI,CAAC,QAAQ,CAAC,UAAU,CAAC,aAAa,CAAC,CAAC;AAExC,QAAA,IAAI,CAAC,SAAS,CAAC,KAAK,CAAC;YACjB,MAAM,EAAE,UAAU,CAAC,QAAQ;AAC3B,YAAA,QAAQ,EAAE,IAAI,CAAC,QAAQ,CAAC,KAAK;AAChC,SAAA,CAAC,CAAA;KACL;;AAjCQ,qBAAA,CAAA,IAAA,GAAA,EAAA,CAAA,kBAAA,CAAA,EAAA,UAAA,EAAA,QAAA,EAAA,OAAA,EAAA,SAAA,EAAA,QAAA,EAAA,EAAA,EAAA,IAAA,EAAA,qBAAqB,gDAYlB,eAAe,EAAA,CAAA,EAAA,MAAA,EAAA,EAAA,CAAA,eAAA,CAAA,SAAA,EAAA,CAAA,CAAA;AAZlB,qBAAA,CAAA,IAAA,GAAA,EAAA,CAAA,oBAAA,CAAA,EAAA,UAAA,EAAA,QAAA,EAAA,OAAA,EAAA,SAAA,EAAA,IAAA,EAAA,qBAAqB,kDCdlC,+7EA+CM,EAAA,UAAA,EAAA,CAAA,EAAA,IAAA,EAAAb,EAAA,CAAA,SAAA,EAAA,QAAA,EAAA,4LAAA,EAAA,MAAA,EAAA,CAAA,UAAA,EAAA,eAAA,EAAA,OAAA,CAAA,EAAA,QAAA,EAAA,CAAA,WAAA,CAAA,EAAA,EAAA,EAAA,IAAA,EAAAc,GAAA,CAAA,cAAA,EAAA,QAAA,EAAA,kBAAA,EAAA,MAAA,EAAA,CAAA,eAAA,EAAA,UAAA,CAAA,EAAA,QAAA,EAAA,CAAA,gBAAA,CAAA,EAAA,CAAA,EAAA,UAAA,EAAA,CAAA,EAAA,IAAA,EAAAf,IAAA,CAAA,cAAA,EAAA,QAAA,EAAA,sCAAA,EAAA,MAAA,EAAA,CAAA,IAAA,CAAA,EAAA,QAAA,EAAA,CAAA,gBAAA,CAAA,EAAA,EAAA,EAAA,IAAA,EAAAA,IAAA,CAAA,cAAA,EAAA,QAAA,EAAA,sCAAA,EAAA,MAAA,EAAA,CAAA,MAAA,EAAA,kBAAA,EAAA,YAAA,EAAA,gBAAA,CAAA,EAAA,QAAA,EAAA,CAAA,gBAAA,CAAA,EAAA,EAAA,EAAA,IAAA,EAAAgB,GAAA,CAAA,UAAA,EAAA,QAAA,EAAA,cAAA,EAAA,QAAA,EAAA,CAAA,YAAA,CAAA,EAAA,EAAA,EAAA,IAAA,EAAAhB,IAAA,CAAA,gBAAA,EAAA,QAAA,EAAA,8DAAA,EAAA,EAAA,EAAA,IAAA,EAAAO,GAAA,CAAA,IAAA,EAAA,QAAA,EAAA,QAAA,EAAA,MAAA,EAAA,CAAA,MAAA,EAAA,UAAA,EAAA,UAAA,CAAA,EAAA,EAAA,EAAA,IAAA,EAAAQ,GAAA,CAAA,aAAA,EAAA,QAAA,EAAA,iBAAA,EAAA,QAAA,EAAA,CAAA,eAAA,CAAA,EAAA,EAAA,EAAA,IAAA,EAAAE,IAAA,CAAA,eAAA,EAAA,QAAA,EAAA,2CAAA,EAAA,EAAA,EAAA,IAAA,EAAAA,IAAA,CAAA,oBAAA,EAAA,QAAA,EAAA,eAAA,EAAA,MAAA,EAAA,CAAA,UAAA,EAAA,aAAA,EAAA,SAAA,CAAA,EAAA,OAAA,EAAA,CAAA,eAAA,CAAA,EAAA,QAAA,EAAA,CAAA,QAAA,CAAA,EAAA,EAAA,EAAA,IAAA,EAAAV,GAAA,CAAA,OAAA,EAAA,QAAA,EAAA,kBAAA,EAAA,MAAA,EAAA,CAAA,SAAA,EAAA,cAAA,EAAA,eAAA,CAAA,EAAA,EAAA,EAAA,IAAA,EAAAA,GAAA,CAAA,OAAA,EAAA,QAAA,EAAA,WAAA,EAAA,MAAA,EAAA,CAAA,OAAA,EAAA,SAAA,CAAA,EAAA,EAAA,EAAA,IAAA,EAAAA,GAAA,CAAA,gBAAA,EAAA,QAAA,EAAA,oBAAA,EAAA,MAAA,EAAA,CAAA,yBAAA,EAAA,kBAAA,CAAA,EAAA,CAAA,EAAA,CAAA,CAAA;4FDjCO,qBAAqB,EAAA,UAAA,EAAA,CAAA;kBANjC,SAAS;AAAC,YAAA,IAAA,EAAA,CAAA;AACP,oBAAA,QAAQ,EAAE,YAAY;AACtB,oBAAA,WAAW,EAAE,yBAAyB;AACtC,oBAAA,MAAM,EAAE,EACP;AACJ,iBAAA,CAAA;;0BAaQ,MAAM;2BAAC,eAAe,CAAA;;;MEElB,kBAAkB,CAAA;;gHAAlB,kBAAkB,EAAA,IAAA,EAAA,EAAA,EAAA,MAAA,EAAA,EAAA,CAAA,eAAA,CAAA,QAAA,EAAA,CAAA,CAAA;iHAAlB,kBAAkB,EAAA,YAAA,EAAA,CAbvB,qBAAqB,CAAA,EAAA,OAAA,EAAA,CAGrB,YAAY;QACZ,WAAW;QACX,mBAAmB;QACnB,cAAc;QACd,aAAa;QACb,eAAe;QACf,gBAAgB;QAChB,eAAe,CAAA,EAAA,CAAA,CAAA;AAGV,kBAAA,CAAA,IAAA,GAAA,EAAA,CAAA,mBAAA,CAAA,EAAA,UAAA,EAAA,QAAA,EAAA,OAAA,EAAA,SAAA,EAAA,QAAA,EAAA,EAAA,EAAA,IAAA,EAAA,kBAAkB,EAXlB,OAAA,EAAA,CAAA;YACL,YAAY;YACZ,WAAW;YACX,mBAAmB;YACnB,cAAc;YACd,aAAa;YACb,eAAe;YACf,gBAAgB;YAChB,eAAe;AAClB,SAAA,CAAA,EAAA,CAAA,CAAA;4FAEQ,kBAAkB,EAAA,UAAA,EAAA,CAAA;kBAf9B,QAAQ;AAAC,YAAA,IAAA,EAAA,CAAA;AACN,oBAAA,YAAY,EAAE;wBACV,qBAAqB;AACxB,qBAAA;AACD,oBAAA,OAAO,EAAE;wBACL,YAAY;wBACZ,WAAW;wBACX,mBAAmB;wBACnB,cAAc;wBACd,aAAa;wBACb,eAAe;wBACf,gBAAgB;wBAChB,eAAe;AAClB,qBAAA;AACJ,iBAAA,CAAA;;;ACrBD;MAOa,uBAAuB,CAAA;AAchC,IAAA,WAAA,GAAA;QAZA,IAAY,CAAA,YAAA,GAAG,aAAa,CAAC;QAC7B,IAAgB,CAAA,gBAAA,GAAG,iBAAiB,CAAC;QACrC,IAAY,CAAA,YAAA,GAAG,YAAY,CAAC;AAM5B,QAAA,IAAA,CAAA,eAAe,GAAG,IAAI,YAAY,EAAU,CAAC;QAE7C,IAAe,CAAA,eAAA,GAAG,EAAE,CAAC;KAEJ;IAEjB,QAAQ,GAAA;KACP;AAED,IAAA,QAAQ,CAAC,YAAY,EAAA;AACjB,QAAA,IAAI,CAAC,eAAe,CAAC,IAAI,CAAC,YAAY,CAAC,CAAC;KAC3C;AAED,IAAA,WAAW,CAAC,OAAsB,EAAA;AAC9B,QAAA,IAAI,OAAO,CAAC,kBAAkB,IAAI,IAAI,CAAC,kBAAkB,EAAE;AACvD,YAAA,IAAI,CAAC,eAAe,GAAG,IAAI,CAAC,kBAAkB,CAAC;AAClD,SAAA;KACJ;;qHA3BQ,uBAAuB,EAAA,IAAA,EAAA,EAAA,EAAA,MAAA,EAAA,EAAA,CAAA,eAAA,CAAA,SAAA,EAAA,CAAA,CAAA;AAAvB,uBAAA,CAAA,IAAA,GAAA,EAAA,CAAA,oBAAA,CAAA,EAAA,UAAA,EAAA,QAAA,EAAA,OAAA,EAAA,SAAA,EAAA,IAAA,EAAA,uBAAuB,uLCbpC,uhDAkCM,EAAA,MAAA,EAAA,CAAA,kIAAA,CAAA,EAAA,UAAA,EAAA,CAAA,EAAA,IAAA,EAAAP,GAAA,CAAA,WAAA,EAAA,QAAA,EAAA,eAAA,EAAA,MAAA,EAAA,CAAA,WAAA,EAAA,eAAA,EAAA,MAAA,EAAA,WAAA,EAAA,WAAA,EAAA,SAAA,CAAA,EAAA,OAAA,EAAA,CAAA,YAAA,CAAA,EAAA,QAAA,EAAA,CAAA,aAAA,CAAA,EAAA,EAAA,EAAA,IAAA,EAAAA,GAAA,CAAA,iBAAA,EAAA,QAAA,EAAA,qBAAA,EAAA,EAAA,EAAA,IAAA,EAAAC,GAAA,CAAA,SAAA,EAAA,QAAA,EAAA,2BAAA,EAAA,MAAA,EAAA,CAAA,iBAAA,EAAA,mBAAA,EAAA,kBAAA,EAAA,gBAAA,EAAA,oBAAA,EAAA,mBAAA,EAAA,oBAAA,CAAA,EAAA,QAAA,EAAA,CAAA,WAAA,CAAA,EAAA,EAAA,EAAA,IAAA,EAAAD,GAAA,CAAA,eAAA,EAAA,QAAA,EAAA,mBAAA,EAAA,EAAA,EAAA,IAAA,EAAAe,GAAA,CAAA,OAAA,EAAA,QAAA,EAAA,kBAAA,EAAA,MAAA,EAAA,CAAA,SAAA,EAAA,cAAA,EAAA,eAAA,CAAA,EAAA,EAAA,EAAA,IAAA,EAAAA,GAAA,CAAA,QAAA,EAAA,QAAA,EAAA,YAAA,EAAA,MAAA,EAAA,CAAA,UAAA,CAAA,EAAA,EAAA,EAAA,IAAA,EAAAA,GAAA,CAAA,YAAA,EAAA,QAAA,EAAA,gBAAA,EAAA,MAAA,EAAA,CAAA,cAAA,CAAA,EAAA,CAAA,EAAA,CAAA,CAAA;4FDrBO,uBAAuB,EAAA,UAAA,EAAA,CAAA;kBALnC,SAAS;AAAC,YAAA,IAAA,EAAA,CAAA;AACP,oBAAA,QAAQ,EAAE,qBAAqB;AAC/B,oBAAA,WAAW,EAAE,kCAAkC;oBAC/C,SAAS,EAAE,CAAC,kCAAkC,CAAC;AAClD,iBAAA,CAAA;0EAQG,kBAAkB,EAAA,CAAA;sBADjB,KAAK;gBAIN,eAAe,EAAA,CAAA;sBADd,MAAM;;;MESE,oBAAoB,CAAA;;kHAApB,oBAAoB,EAAA,IAAA,EAAA,EAAA,EAAA,MAAA,EAAA,EAAA,CAAA,eAAA,CAAA,QAAA,EAAA,CAAA,CAAA;mHAApB,oBAAoB,EAAA,YAAA,EAAA,CAfzB,uBAAuB,CAAA,EAAA,OAAA,EAAA,CAGvB,YAAY;QACZ,SAAS;QACT,mBAAmB;QACnB,WAAW;QACX,cAAc;QACd,eAAe;QACf,aAAa;QACb,eAAe;AACf,QAAA,eAAe,aAET,uBAAuB,CAAA,EAAA,CAAA,CAAA;AAExB,oBAAA,CAAA,IAAA,GAAA,EAAA,CAAA,mBAAA,CAAA,EAAA,UAAA,EAAA,QAAA,EAAA,OAAA,EAAA,SAAA,EAAA,QAAA,EAAA,EAAA,EAAA,IAAA,EAAA,oBAAoB,EAbpB,OAAA,EAAA,CAAA;YACL,YAAY;YACZ,SAAS;YACT,mBAAmB;YACnB,WAAW;YACX,cAAc;YACd,eAAe;YACf,aAAa;YACb,eAAe;YACf,eAAe;AAClB,SAAA,CAAA,EAAA,CAAA,CAAA;4FAGQ,oBAAoB,EAAA,UAAA,EAAA,CAAA;kBAjBhC,QAAQ;AAAC,YAAA,IAAA,EAAA,CAAA;AACN,oBAAA,YAAY,EAAE;wBACV,uBAAuB;AAC1B,qBAAA;AACD,oBAAA,OAAO,EAAE;wBACL,YAAY;wBACZ,SAAS;wBACT,mBAAmB;wBACnB,WAAW;wBACX,cAAc;wBACd,eAAe;wBACf,aAAa;wBACb,eAAe;wBACf,eAAe;AAClB,qBAAA;oBACD,OAAO,EAAE,CAAC,uBAAuB,CAAC;AACrC,iBAAA,CAAA;;;MCvBY,uBAAuB,CAAA;AAEhC,IAAA,WAAA,GAAA,GAAiB;IAEjB,QAAQ,GAAA;KACP;;qHALQ,uBAAuB,EAAA,IAAA,EAAA,EAAA,EAAA,MAAA,EAAA,EAAA,CAAA,eAAA,CAAA,SAAA,EAAA,CAAA,CAAA;AAAvB,uBAAA,CAAA,IAAA,GAAA,EAAA,CAAA,oBAAA,CAAA,EAAA,UAAA,EAAA,QAAA,EAAA,OAAA,EAAA,SAAA,EAAA,IAAA,EAAA,uBAAuB,4DCPpC,koBAcA,EAAA,MAAA,EAAA,CAAA,sCAAA,CAAA,EAAA,CAAA,CAAA;4FDPa,uBAAuB,EAAA,UAAA,EAAA,CAAA;kBALnC,SAAS;AAAC,YAAA,IAAA,EAAA,CAAA;AACP,oBAAA,QAAQ,EAAE,sBAAsB;AAChC,oBAAA,WAAW,EAAE,mCAAmC;oBAChD,SAAS,EAAE,CAAC,mCAAmC,CAAC;AACnD,iBAAA,CAAA;;;MEWY,oBAAoB,CAAA;IAC7B,OAAO,OAAO,CAAC,WAAgB,EAAA;QAC3B,OAAO;AACH,YAAA,QAAQ,EAAE,oBAAoB;AAC9B,YAAA,SAAS,EAAE;AACP,gBAAA,EAAE,OAAO,EAAE,aAAa,EAAE,QAAQ,EAAE,WAAW,EAAE;AACpD,aAAA;SACJ,CAAC;KACL;;kHARQ,oBAAoB,EAAA,IAAA,EAAA,EAAA,EAAA,MAAA,EAAA,EAAA,CAAA,eAAA,CAAA,QAAA,EAAA,CAAA,CAAA;AAApB,oBAAA,CAAA,IAAA,GAAA,EAAA,CAAA,mBAAA,CAAA,EAAA,UAAA,EAAA,QAAA,EAAA,OAAA,EAAA,SAAA,EAAA,QAAA,EAAA,EAAA,EAAA,IAAA,EAAA,oBAAoB,EAVzB,YAAA,EAAA,CAAA,uBAAuB,CAGvB,EAAA,OAAA,EAAA,CAAA,YAAY,aAGZ,uBAAuB,CAAA,EAAA,CAAA,CAAA;AAIlB,oBAAA,CAAA,IAAA,GAAA,EAAA,CAAA,mBAAA,CAAA,EAAA,UAAA,EAAA,QAAA,EAAA,OAAA,EAAA,SAAA,EAAA,QAAA,EAAA,EAAA,EAAA,IAAA,EAAA,oBAAoB,EARpB,OAAA,EAAA,CAAA;YACL,YAAY;AACf,SAAA,CAAA,EAAA,CAAA,CAAA;4FAMQ,oBAAoB,EAAA,UAAA,EAAA,CAAA;kBAZhC,QAAQ;AAAC,YAAA,IAAA,EAAA,CAAA;AACN,oBAAA,YAAY,EAAE;wBACV,uBAAuB;AAC1B,qBAAA;AACD,oBAAA,OAAO,EAAE;wBACL,YAAY;AACf,qBAAA;AACD,oBAAA,OAAO,EAAE;wBACL,uBAAuB;AAC1B,qBAAA;AACJ,iBAAA,CAAA;;;ACPD;MAOa,oBAAoB,CAAA;IAS7B,WACY,CAAA,cAA8B,EAC9B,gBAAkC,EAAA;QADlC,IAAc,CAAA,cAAA,GAAd,cAAc,CAAgB;QAC9B,IAAgB,CAAA,gBAAA,GAAhB,gBAAgB,CAAkB;AAP9C,QAAA,IAAA,CAAA,oBAAoB,GAAG,CAAC,IAAI,yBAAyB,EAAE,CAAC,CAAC;QAEzD,IAAoB,CAAA,oBAAA,GAAG,cAAc,CAAC;QACtC,IAAyB,CAAA,yBAAA,GAAG,uCAAuC,CAAC;KAK/D;IAEL,QAAQ,GAAA;QACJ,IAAI,CAAC,KAAK,GAAG,IAAI,CAAC,cAAc,CAAC,UAAU,CAAC,cAAc,CAAC,CAAC;QAC5D,IAAI,CAAC,QAAQ,GAAG,IAAI,CAAC,cAAc,CAAC,UAAU,CAAC,UAAU,CAAC,CAAC;QAE3D,IAAI,CAAC,4BAA4B,EAAE,CAAC;KACvC;IAEK,4BAA4B,GAAA;;AAC9B,YAAA,IAAI,CAAC,oBAAoB,IAAiC,MAAM,IAAI,CAAC,gBAAgB,CAAC,4BAA4B,CAAC,IAAI,CAAC,KAAK,CAAC,CAAA,CAAC;SAClI,CAAA,CAAA;AAAA,KAAA;;kHAvBQ,oBAAoB,EAAA,IAAA,EAAA,CAAA,EAAA,KAAA,EAAAf,IAAA,CAAA,cAAA,EAAA,EAAA,EAAA,KAAA,EAAAkB,gBAAA,EAAA,CAAA,EAAA,MAAA,EAAA,EAAA,CAAA,eAAA,CAAA,SAAA,EAAA,CAAA,CAAA;AAApB,oBAAA,CAAA,IAAA,GAAA,EAAA,CAAA,oBAAA,CAAA,EAAA,UAAA,EAAA,QAAA,EAAA,OAAA,EAAA,SAAA,EAAA,IAAA,EAAA,oBAAoB,wDCfjC,0iEAqCM,EAAA,MAAA,EAAA,CAAA,yBAAA,CAAA,EAAA,UAAA,EAAA,CAAA,EAAA,IAAA,EAAAH,GAAA,CAAA,IAAA,EAAA,QAAA,EAAA,QAAA,EAAA,MAAA,EAAA,CAAA,MAAA,EAAA,UAAA,EAAA,UAAA,CAAA,EAAA,CAAA,EAAA,CAAA,CAAA;4FDtBO,oBAAoB,EAAA,UAAA,EAAA,CAAA;kBALhC,SAAS;AAAC,YAAA,IAAA,EAAA,CAAA;AACP,oBAAA,QAAQ,EAAE,kBAAkB;AAC5B,oBAAA,WAAW,EAAE,+BAA+B;oBAC5C,SAAS,EAAE,CAAC,+BAA+B,CAAC;AAC/C,iBAAA,CAAA;;;MEGY,iBAAiB,CAAA;IAC1B,OAAO,OAAO,CAAC,WAAgB,EAAA;QAC3B,OAAO;AACH,YAAA,QAAQ,EAAE,iBAAiB;AAC3B,YAAA,SAAS,EAAE;AACP,gBAAA,EAAE,OAAO,EAAE,aAAa,EAAE,QAAQ,EAAE,WAAW,EAAE;AACpD,aAAA;SACJ,CAAC;KACL;;+GARQ,iBAAiB,EAAA,IAAA,EAAA,EAAA,EAAA,MAAA,EAAA,EAAA,CAAA,eAAA,CAAA,QAAA,EAAA,CAAA,CAAA;AAAjB,iBAAA,CAAA,IAAA,GAAA,EAAA,CAAA,mBAAA,CAAA,EAAA,UAAA,EAAA,QAAA,EAAA,OAAA,EAAA,SAAA,EAAA,QAAA,EAAA,EAAA,EAAA,IAAA,EAAA,iBAAiB,EAVtB,YAAA,EAAA,CAAA,oBAAoB,CAGpB,EAAA,OAAA,EAAA,CAAA,YAAY,aAGZ,oBAAoB,CAAA,EAAA,CAAA,CAAA;AAIf,iBAAA,CAAA,IAAA,GAAA,EAAA,CAAA,mBAAA,CAAA,EAAA,UAAA,EAAA,QAAA,EAAA,OAAA,EAAA,SAAA,EAAA,QAAA,EAAA,EAAA,EAAA,IAAA,EAAA,iBAAiB,EARjB,OAAA,EAAA,CAAA;YACL,YAAY;AACf,SAAA,CAAA,EAAA,CAAA,CAAA;4FAMQ,iBAAiB,EAAA,UAAA,EAAA,CAAA;kBAZ7B,QAAQ;AAAC,YAAA,IAAA,EAAA,CAAA;AACN,oBAAA,YAAY,EAAE;wBACV,oBAAoB;AACvB,qBAAA;AACD,oBAAA,OAAO,EAAE;wBACL,YAAY;AACf,qBAAA;AACD,oBAAA,OAAO,EAAE;wBACL,oBAAoB;AACvB,qBAAA;AACJ,iBAAA,CAAA;;;ACRD;MAQa,gBAAgB,CAAA;IAMzB,WACY,CAAA,cAA8B,EAC9B,MAAc,EACd,aAA4B,EAC5B,mBAAwC,EACxC,cAA8B,EAAA;QAJ9B,IAAc,CAAA,cAAA,GAAd,cAAc,CAAgB;QAC9B,IAAM,CAAA,MAAA,GAAN,MAAM,CAAQ;QACd,IAAa,CAAA,aAAA,GAAb,aAAa,CAAe;QAC5B,IAAmB,CAAA,mBAAA,GAAnB,mBAAmB,CAAqB;QACxC,IAAc,CAAA,cAAA,GAAd,cAAc,CAAgB;QAV1C,IAAW,CAAA,WAAA,GAAW,GAAG,CAAC;QAC1B,IAAU,CAAA,UAAA,GAAW,sBAAsB,CAAC;AAC5C,QAAA,IAAA,CAAA,OAAO,GAAG,CAAC,IAAI,MAAM,EAAE,CAAC,CAAC;QACzB,IAAQ,CAAA,QAAA,GAAW,IAAI,CAAC;KAQnB;IAEL,QAAQ,GAAA;QACJ,IAAI,CAAC,cAAc,CAAC,WAAW,CAAC,SAAS,CAAC,UAAU,IAAG;YACnD,IAAI,UAAU,CAAC,WAAW,EAAE;AACxB,gBAAA,IAAI,CAAC,WAAW,GAAG,UAAU,CAAC,WAAW,CAAC;AAC7C,aAAA;AACL,SAAC,CAAC,CAAC;;;AAIH,QAAA,IAAI,CAAC,cAAc,CAAC,aAAa,CAAC,UAAU,CAAC,CAAC;QAC9C,IAAI,CAAC,aAAa,EAAE,CAAC;KACxB;IAEK,aAAa,GAAA;;YACf,IAAI,CAAC,QAAQ,IAAW,MAAM,IAAI,CAAC,mBAAmB,CAAC,cAAc,EAAE,CAAA,CAAC;YAExE,IAAI,IAAI,CAAC,QAAQ,EAAE;gBACf,IAAI,CAAC,cAAc,CAAC,UAAU,CAAC,UAAU,EAAE,IAAI,CAAC,QAAQ,CAAC,CAAC;gBAC1D,IAAI,CAAC,iBAAiB,EAAE,CAAC;AAC5B,aAAA;AAAM,iBAAA;gBACH,IAAI,CAAC,MAAM,CAAC,QAAQ,CAAC,CAAC,IAAI,CAAC,UAAU,CAAC,CAAC,CAAC;AAC3C,aAAA;SACJ,CAAA,CAAA;AAAA,KAAA;IAEK,iBAAiB,GAAA;;YACnB,IAAI,KAAK,GAAG,IAAI,CAAC,cAAc,CAAC,UAAU,CAAC,cAAc,CAAC,CAAC;AAE3D,YAAA,IAAI,CAAC,OAAO,IAAc,MAAM,IAAI,CAAC,aAAa,CAAC,gBAAgB,CAAC,KAAK,CAAC,CAAA,CAAC;AAE3E,YAAA,MAAM,aAAa,GAAG,IAAI,CAAC,OAAO,CAAC,IAAI,CAAC,MAAM,IAAI,MAAM,CAAC,SAAS,CAAC,CAAC;AAEpE,YAAA,IAAI,aAAa,EAAE;AACf,gBAAA,MAAM,eAAe,GAAG,aAAa,CAAC,EAAE,CAAC;gBACzC,IAAI,CAAC,cAAc,CAAC,UAAU,CAAC,UAAU,EAAE,eAAe,CAAC,CAAC;AAC/D,aAAA;AAAM,iBAAA;AACH,gBAAA,OAAO,CAAC,KAAK,CAAC,kBAAkB,CAAC,CAAC;AACrC,aAAA;YAED,IAAI,CAAC,MAAM,CAAC,QAAQ,CAAC,CAAC,IAAI,CAAC,WAAW,CAAC,CAAC,CAAC;SAC5C,CAAA,CAAA;AAAA,KAAA;;8GArDQ,gBAAgB,EAAA,IAAA,EAAA,CAAA,EAAA,KAAA,EAAAf,IAAA,CAAA,cAAA,EAAA,EAAA,EAAA,KAAA,EAAAA,IAAA,CAAA,MAAA,EAAA,EAAA,EAAA,KAAA,EAAAC,EAAA,CAAA,aAAA,EAAA,EAAA,EAAA,KAAA,EAAAc,IAAA,CAAA,mBAAA,EAAA,EAAA,EAAA,KAAA,EAAAC,IAAA,CAAA,cAAA,EAAA,CAAA,EAAA,MAAA,EAAA,EAAA,CAAA,eAAA,CAAA,SAAA,EAAA,CAAA,CAAA;AAAhB,gBAAA,CAAA,IAAA,GAAA,EAAA,CAAA,oBAAA,CAAA,EAAA,UAAA,EAAA,QAAA,EAAA,OAAA,EAAA,SAAA,EAAA,IAAA,EAAA,gBAAgB,mDCf7B,wVAQA,EAAA,MAAA,EAAA,CAAA,4BAAA,CAAA,EAAA,CAAA,CAAA;4FDOa,gBAAgB,EAAA,UAAA,EAAA,CAAA;kBAN5B,SAAS;AAAC,YAAA,IAAA,EAAA,CAAA;AACP,oBAAA,QAAQ,EAAE,aAAa;AACvB,oBAAA,WAAW,EAAE,0BAA0B;oBACvC,SAAS,EAAE,CAAC,0BAA0B,CAAC;AAC1C,iBAAA,CAAA;;;AEND;MAQa,oBAAoB,CAAA;AAc7B,IAAA,WAAA,GAAA;QAZA,IAAY,CAAA,YAAA,GAAG,aAAa,CAAC;QAC7B,IAA2B,CAAA,2BAAA,GAAG,2BAA2B,CAAC;QAE1D,IAAa,CAAA,aAAA,GAAG,aAAa,CAAC;QAE9B,IAAiB,CAAA,iBAAA,GAAU,EAAE,CAAC;QAC9B,IAAqB,CAAA,qBAAA,GAAW,CAAC,CAAC;AAClC,QAAA,IAAA,CAAA,aAAa,GAAgB,IAAI,WAAW,CAAC,CAAC,KAAK,CAAC,EAAE,CAAC,UAAU,CAAC,QAAQ,CAAC,CAAC,CAAC;AAG7E,QAAA,IAAA,CAAA,UAAU,GAAG,IAAI,YAAY,EAAE,CAAC;KAEf;IAEjB,QAAQ,GAAA;AACJ,QAAA,IAAI,eAAe,GAAG,IAAI,CAAC,YAAY,CAAC,WAAW,CAAC;AAEpD,QAAA,IAAI,CAAC,qBAAqB,GAAG,eAAe,CAAC,MAAM,CAAC;AACpD,QAAA,eAAe,CAAC,OAAO,CAAC,WAAW,IAAI,IAAI,CAAC,iBAAiB,CAAC,IAAI,CAAC,WAAW,CAAC,OAAO,CAAC,CAAC,CAAC,CAAC;KAC7F;IAED,eAAe,GAAA;AACX,QAAA,IAAI,CAAC,UAAU,CAAC,IAAI,EAAE,CAAC;KAC1B;IAED,oBAAoB,GAAA;AAChB,QAAA,IAAI,CAAC,IAAI,CAAC,aAAa,CAAC,KAAK,CAAC,QAAQ,CAAC,CAAC,CAAC,CAAC,EAAE;AACxC,YAAA,IAAI,CAAC,aAAa,CAAC,KAAK,CAAC,EAAE,CAAC,CAAC;YAC7B,OAAO;AACV,SAAA;AACD,QAAA,IAAI,CAAC,aAAa,CAAC,QAAQ,CAAC,CAAC,CAAC,CAAC,EAAE,GAAG,IAAI,CAAC,iBAAiB,CAAC,CAAC,CAAC;AAC7D,QAAA,IAAI,CAAC,UAAU,CAAC,IAAI,EAAE,CAAC;KAC1B;IAED,mBAAmB,GAAA;AACf,QAAA,MAAM,QAAQ,GAAG,IAAI,CAAC,aAAa,CAAC,KAAK,CAAC;AAE1C,QAAA,IAAI,QAAQ,CAAC,QAAQ,CAAC,CAAC,CAAC,CAAC,EAAE;YACvB,QAAQ,CAAC,KAAK,EAAE,CAAC;AACjB,YAAA,IAAI,CAAC,aAAa,CAAC,UAAU,CAAC,QAAQ,CAAC,CAAC;AAC3C,SAAA;aAAM,IAAI,IAAI,CAAC,aAAa,CAAC,KAAK,CAAC,MAAM,IAAI,IAAI,CAAC,qBAAqB,EAAE;AACtE,YAAA,IAAI,CAAC,iBAAiB,CAAC,MAAM,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC;YACxC,IAAI,CAAC,aAAa,CAAC,UAAU,CAAC,IAAI,CAAC,iBAAiB,CAAC,CAAC;AACzD,SAAA;AAAM,aAAA;AACH,YAAA,MAAM,gBAAgB,GAAG,QAAQ,CAAC,MAAM,CAAC,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC;AACvD,YAAA,IAAI,CAAC,aAAa,CAAC,UAAU,CAAC,gBAAgB,CAAC,CAAC;AACnD,SAAA;AAED,QAAA,IAAI,CAAC,UAAU,CAAC,IAAI,EAAE,CAAC;KAC1B;;kHAnDQ,oBAAoB,EAAA,IAAA,EAAA,EAAA,EAAA,MAAA,EAAA,EAAA,CAAA,eAAA,CAAA,SAAA,EAAA,CAAA,CAAA;AAApB,oBAAA,CAAA,IAAA,GAAA,EAAA,CAAA,oBAAA,CAAA,EAAA,UAAA,EAAA,QAAA,EAAA,OAAA,EAAA,SAAA,EAAA,IAAA,EAAA,oBAAoB,8FCfjC,quBAciB,EAAA,UAAA,EAAA,CAAA,EAAA,IAAA,EAAAhB,IAAA,CAAA,YAAA,EAAA,QAAA,EAAA,gBAAA,EAAA,MAAA,EAAA,CAAA,OAAA,EAAA,YAAA,EAAA,YAAA,EAAA,oBAAA,EAAA,WAAA,CAAA,EAAA,QAAA,EAAA,CAAA,cAAA,CAAA,EAAA,EAAA,EAAA,IAAA,EAAAC,EAAA,CAAA,SAAA,EAAA,QAAA,EAAA,YAAA,EAAA,MAAA,EAAA,CAAA,UAAA,EAAA,eAAA,EAAA,UAAA,CAAA,EAAA,QAAA,EAAA,CAAA,WAAA,CAAA,EAAA,EAAA,EAAA,IAAA,EAAAc,GAAA,CAAA,SAAA,EAAA,QAAA,EAAA,YAAA,EAAA,QAAA,EAAA,CAAA,WAAA,CAAA,EAAA,CAAA,EAAA,UAAA,EAAA,CAAA,EAAA,IAAA,EAAAf,IAAA,CAAA,QAAA,EAAA,QAAA,EAAA,WAAA,EAAA,EAAA,EAAA,IAAA,EAAAgB,IAAA,CAAA,iBAAA,EAAA,QAAA,EAAA,wIAAA,EAAA,MAAA,EAAA,CAAA,UAAA,CAAA,EAAA,EAAA,EAAA,IAAA,EAAAA,IAAA,CAAA,eAAA,EAAA,QAAA,EAAA,2CAAA,EAAA,EAAA,EAAA,IAAA,EAAAA,IAAA,CAAA,oBAAA,EAAA,QAAA,EAAA,eAAA,EAAA,MAAA,EAAA,CAAA,UAAA,EAAA,aAAA,EAAA,SAAA,CAAA,EAAA,OAAA,EAAA,CAAA,eAAA,CAAA,EAAA,QAAA,EAAA,CAAA,QAAA,CAAA,EAAA,EAAA,EAAA,IAAA,EAAAT,GAAA,CAAA,OAAA,EAAA,QAAA,EAAA,kBAAA,EAAA,MAAA,EAAA,CAAA,SAAA,EAAA,cAAA,EAAA,eAAA,CAAA,EAAA,EAAA,EAAA,IAAA,EAAAA,GAAA,CAAA,IAAA,EAAA,QAAA,EAAA,QAAA,EAAA,MAAA,EAAA,CAAA,MAAA,EAAA,UAAA,EAAA,UAAA,CAAA,EAAA,EAAA,EAAA,IAAA,EAAAP,IAAA,CAAA,QAAA,EAAA,QAAA,EAAA,WAAA,EAAA,MAAA,EAAA,CAAA,IAAA,CAAA,EAAA,CAAA,EAAA,CAAA,CAAA;4FDCJ,oBAAoB,EAAA,UAAA,EAAA,CAAA;kBANhC,SAAS;AAAC,YAAA,IAAA,EAAA,CAAA;AACP,oBAAA,QAAQ,EAAE,iBAAiB;AAC3B,oBAAA,WAAW,EAAE,8BAA8B;AAC3C,oBAAA,MAAM,EAAE,EACP;AACJ,iBAAA,CAAA;0EAaG,UAAU,EAAA,CAAA;sBADT,MAAM;;;MEGE,iBAAiB,CAAA;;+GAAjB,iBAAiB,EAAA,IAAA,EAAA,EAAA,EAAA,MAAA,EAAA,EAAA,CAAA,eAAA,CAAA,QAAA,EAAA,CAAA,CAAA;gHAAjB,iBAAiB,EAAA,YAAA,EAAA,CAftB,oBAAoB,CAAA,EAAA,OAAA,EAAA,CAGpB,YAAY;QACZ,WAAW;QACX,mBAAmB;QACnB,cAAc;QACd,eAAe;QACf,kBAAkB;AAClB,QAAA,wBAAwB,aAGxB,oBAAoB,CAAA,EAAA,CAAA,CAAA;AAGf,iBAAA,CAAA,IAAA,GAAA,EAAA,CAAA,mBAAA,CAAA,EAAA,UAAA,EAAA,QAAA,EAAA,OAAA,EAAA,SAAA,EAAA,QAAA,EAAA,EAAA,EAAA,IAAA,EAAA,iBAAiB,EAbjB,OAAA,EAAA,CAAA;YACL,YAAY;YACZ,WAAW;YACX,mBAAmB;YACnB,cAAc;YACd,eAAe;YACf,kBAAkB;YAClB,wBAAwB;AAC3B,SAAA,CAAA,EAAA,CAAA,CAAA;4FAKQ,iBAAiB,EAAA,UAAA,EAAA,CAAA;kBAjB7B,QAAQ;AAAC,YAAA,IAAA,EAAA,CAAA;AACN,oBAAA,YAAY,EAAE;wBACV,oBAAoB;AACvB,qBAAA;AACD,oBAAA,OAAO,EAAE;wBACL,YAAY;wBACZ,WAAW;wBACX,mBAAmB;wBACnB,cAAc;wBACd,eAAe;wBACf,kBAAkB;wBAClB,wBAAwB;AAC3B,qBAAA;AACD,oBAAA,OAAO,EAAE;wBACL,oBAAoB;AACvB,qBAAA;AACJ,iBAAA,CAAA;;;ACrBD;MASa,4BAA4B,CAAA;AAYrC,IAAA,WAAA,GAAA;QAVA,IAAY,CAAA,YAAA,GAAG,aAAa,CAAC;QAC7B,IAA2B,CAAA,2BAAA,GAAG,2BAA2B,CAAC;QAE1D,IAAa,CAAA,aAAA,GAAG,aAAa,CAAC;AAE9B,QAAA,IAAA,CAAA,aAAa,GAAgB,IAAI,WAAW,CAAC,QAAQ,EAAE,CAAC,UAAU,CAAC,QAAQ,CAAC,CAAC,CAAC;AAG9E,QAAA,IAAA,CAAA,UAAU,GAAG,IAAI,YAAY,EAAE,CAAC;KAEf;IAEjB,QAAQ,GAAA;KACP;IAED,eAAe,GAAA;AACX,QAAA,IAAI,CAAC,UAAU,CAAC,IAAI,EAAE,CAAC;KAC1B;AAED,IAAA,QAAQ,CAAC,UAAU,EAAA;AACf,QAAA,IAAI,CAAC,aAAa,CAAC,UAAU,CAAC,UAAU,CAAC,CAAC;AAC1C,QAAA,IAAI,CAAC,UAAU,CAAC,IAAI,EAAE,CAAC;KAC1B;;0HAxBQ,4BAA4B,EAAA,IAAA,EAAA,EAAA,EAAA,MAAA,EAAA,EAAA,CAAA,eAAA,CAAA,SAAA,EAAA,CAAA,CAAA;AAA5B,4BAAA,CAAA,IAAA,GAAA,EAAA,CAAA,oBAAA,CAAA,EAAA,UAAA,EAAA,QAAA,EAAA,OAAA,EAAA,SAAA,EAAA,IAAA,EAAA,4BAA4B,uGChBzC,4mBAUiB,EAAA,UAAA,EAAA,CAAA,EAAA,IAAA,EAAAA,IAAA,CAAA,YAAA,EAAA,QAAA,EAAA,gBAAA,EAAA,MAAA,EAAA,CAAA,OAAA,EAAA,YAAA,EAAA,YAAA,EAAA,oBAAA,EAAA,WAAA,CAAA,EAAA,QAAA,EAAA,CAAA,cAAA,CAAA,EAAA,EAAA,EAAA,IAAA,EAAAC,EAAA,CAAA,SAAA,EAAA,QAAA,EAAA,YAAA,EAAA,MAAA,EAAA,CAAA,UAAA,EAAA,eAAA,EAAA,UAAA,CAAA,EAAA,QAAA,EAAA,CAAA,WAAA,CAAA,EAAA,EAAA,EAAA,IAAA,EAAAc,GAAA,CAAA,SAAA,EAAA,QAAA,EAAA,YAAA,EAAA,QAAA,EAAA,CAAA,WAAA,CAAA,EAAA,CAAA,EAAA,UAAA,EAAA,CAAA,EAAA,IAAA,EAAAf,IAAA,CAAA,QAAA,EAAA,QAAA,EAAA,WAAA,EAAA,EAAA,EAAA,IAAA,EAAAgB,IAAA,CAAA,iBAAA,EAAA,QAAA,EAAA,wIAAA,EAAA,MAAA,EAAA,CAAA,UAAA,CAAA,EAAA,EAAA,EAAA,IAAA,EAAAA,IAAA,CAAA,eAAA,EAAA,QAAA,EAAA,2CAAA,EAAA,EAAA,EAAA,IAAA,EAAAA,IAAA,CAAA,oBAAA,EAAA,QAAA,EAAA,eAAA,EAAA,MAAA,EAAA,CAAA,UAAA,EAAA,aAAA,EAAA,SAAA,CAAA,EAAA,OAAA,EAAA,CAAA,eAAA,CAAA,EAAA,QAAA,EAAA,CAAA,QAAA,CAAA,EAAA,EAAA,EAAA,IAAA,EAAAT,GAAA,CAAA,OAAA,EAAA,QAAA,EAAA,kBAAA,EAAA,MAAA,EAAA,CAAA,SAAA,EAAA,cAAA,EAAA,eAAA,CAAA,EAAA,EAAA,EAAA,IAAA,EAAAA,GAAA,CAAA,IAAA,EAAA,QAAA,EAAA,QAAA,EAAA,MAAA,EAAA,CAAA,MAAA,EAAA,UAAA,EAAA,UAAA,CAAA,EAAA,EAAA,EAAA,IAAA,EAAAP,IAAA,CAAA,QAAA,EAAA,QAAA,EAAA,WAAA,EAAA,MAAA,EAAA,CAAA,IAAA,CAAA,EAAA,CAAA,EAAA,CAAA,CAAA;4FDMJ,4BAA4B,EAAA,UAAA,EAAA,CAAA;kBAPxC,SAAS;AAAC,YAAA,IAAA,EAAA,CAAA;AACP,oBAAA,QAAQ,EAAE,0BAA0B;AACpC,oBAAA,WAAW,EAAE,uCAAuC;AACpD,oBAAA,MAAM,EAAE,EACP;AACJ,iBAAA,CAAA;0EAYG,UAAU,EAAA,CAAA;sBADT,MAAM;;;MEIE,yBAAyB,CAAA;;uHAAzB,yBAAyB,EAAA,IAAA,EAAA,EAAA,EAAA,MAAA,EAAA,EAAA,CAAA,eAAA,CAAA,QAAA,EAAA,CAAA,CAAA;wHAAzB,yBAAyB,EAAA,YAAA,EAAA,CAf9B,4BAA4B,CAAA,EAAA,OAAA,EAAA,CAG5B,YAAY;QACZ,WAAW;QACX,mBAAmB;QACnB,cAAc;QACd,eAAe;QACf,kBAAkB;AAClB,QAAA,wBAAwB,aAGxB,4BAA4B,CAAA,EAAA,CAAA,CAAA;AAGvB,yBAAA,CAAA,IAAA,GAAA,EAAA,CAAA,mBAAA,CAAA,EAAA,UAAA,EAAA,QAAA,EAAA,OAAA,EAAA,SAAA,EAAA,QAAA,EAAA,EAAA,EAAA,IAAA,EAAA,yBAAyB,EAbzB,OAAA,EAAA,CAAA;YACL,YAAY;YACZ,WAAW;YACX,mBAAmB;YACnB,cAAc;YACd,eAAe;YACf,kBAAkB;YAClB,wBAAwB;AAC3B,SAAA,CAAA,EAAA,CAAA,CAAA;4FAKQ,yBAAyB,EAAA,UAAA,EAAA,CAAA;kBAjBrC,QAAQ;AAAC,YAAA,IAAA,EAAA,CAAA;AACN,oBAAA,YAAY,EAAE;wBACV,4BAA4B;AAC/B,qBAAA;AACD,oBAAA,OAAO,EAAE;wBACL,YAAY;wBACZ,WAAW;wBACX,mBAAmB;wBACnB,cAAc;wBACd,eAAe;wBACf,kBAAkB;wBAClB,wBAAwB;AAC3B,qBAAA;AACD,oBAAA,OAAO,EAAE;wBACL,4BAA4B;AAC/B,qBAAA;AACJ,iBAAA,CAAA;;;AClBD;MAQa,oBAAoB,CAAA;IAqB7B,WACY,CAAA,cAA8B,EAC9B,gBAAkC,EAAA;QADlC,IAAc,CAAA,cAAA,GAAd,cAAc,CAAgB;QAC9B,IAAgB,CAAA,gBAAA,GAAhB,gBAAgB,CAAkB;QAtB9C,IAA2B,CAAA,2BAAA,GAAG,2BAA2B,CAAA;QACzD,IAAc,CAAA,cAAA,GAAG,eAAe,CAAC;QAEjC,IAAa,CAAA,aAAA,GAAG,aAAa,CAAC;AAM9B,QAAA,IAAA,CAAA,UAAU,GAAG,CAAC,IAAI,SAAS,EAAE,CAAC,CAAC;QAE/B,IAAc,CAAA,cAAA,GAAU,EAAE,CAAC;QAC3B,IAAmB,CAAA,mBAAA,GAAW,CAAC,CAAC;AAEhC,QAAA,IAAA,CAAA,WAAW,GAAgB,IAAI,WAAW,CAAC,EAAE,EAAE,CAAC,UAAU,CAAC,QAAQ,CAAC,CAAC,CAAC;QACtE,IAAe,CAAA,eAAA,GAA2B,IAAI,sBAAsB,CAAC,CAAC,OAAO,CAAC,CAAC,CAAC;AAGhF,QAAA,IAAA,CAAA,UAAU,GAAG,IAAI,YAAY,EAAE,CAAC;KAK3B;IAEL,QAAQ,GAAA;QACJ,IAAI,CAAC,KAAK,GAAG,IAAI,CAAC,cAAc,CAAC,UAAU,CAAC,cAAc,CAAC,CAAC;KAC/D;AAED,IAAA,WAAW,CAAC,OAAsB,EAAA;AAC9B,QAAA,IAAI,OAAO,CAAC,SAAS,IAAI,IAAI,CAAC,SAAS,EAAE;AACrC,YAAA,IAAI,CAAC,sBAAsB,CAAC,IAAI,CAAC,SAAS,CAAC,CAAC;AAE5C,YAAA,IAAI,CAAC,WAAW,CAAC,KAAK,CAAC,EAAE,CAAC,CAAC;AAC3B,YAAA,IAAI,CAAC,UAAU,CAAC,IAAI,EAAE,CAAC;AAC1B,SAAA;KACJ;AAEK,IAAA,sBAAsB,CAAC,eAAe,EAAA;;AACxC,YAAA,IAAI,CAAC,cAAc,GAAG,EAAE,CAAC;YAEzB,IAAI,WAAW,GAAG,EAAE,CAAC;AACrB,YAAA,WAAW,CAAC,UAAU,CAAC,GAAG,CAAC,eAAe,CAAC,CAAC;AAE5C,YAAA,IAAI,CAAC,UAAU,IAAiB,MAAM,IAAI,CAAC,gBAAgB,CAAC,sBAAsB,CAAC,IAAI,CAAC,KAAK,EAAE,WAAW,CAAC,CAAA,CAAC;YAE5G,IAAI,CAAC,eAAe,CAAC,SAAS,GAAG,IAAI,CAAC,UAAU,CAAC;AACjD,YAAA,IAAI,CAAC,eAAe,CAAC,kBAAkB,EAAE,CAAC;YAE1C,IAAI,CAAC,mBAAmB,GAAG,IAAI,CAAC,UAAU,CAAC,MAAM,CAAC;YAClD,IAAI,CAAC,UAAU,CAAC,OAAO,CAAC,SAAS,IAAI,IAAI,CAAC,cAAc,CAAC,IAAI,CAAC,SAAS,CAAC,aAAa,CAAC,CAAC,CAAC,CAAC;AAEzF,YAAA,IAAI,CAAC,UAAU,CAAC,IAAI,EAAE,CAAC;SAC1B,CAAA,CAAA;AAAA,KAAA;IAED,mBAAmB,GAAA;AACf,QAAA,IAAI,CAAC,IAAI,CAAC,WAAW,CAAC,KAAK,CAAC,QAAQ,CAAC,CAAC,CAAC,CAAC,EAAE;AACtC,YAAA,IAAI,CAAC,WAAW,CAAC,KAAK,CAAC,EAAE,CAAC,CAAC;YAC3B,OAAO;AACV,SAAA;AACD,QAAA,IAAI,CAAC,WAAW,CAAC,QAAQ,CAAC,CAAC,CAAC,CAAC,EAAE,GAAG,IAAI,CAAC,cAAc,CAAC,CAAC,CAAC;AAExD,QAAA,IAAI,CAAC,UAAU,CAAC,IAAI,EAAE,CAAC;KAC1B;IAED,kBAAkB,GAAA;AACd,QAAA,MAAM,QAAQ,GAAG,IAAI,CAAC,WAAW,CAAC,KAAK,CAAC;AAExC,QAAA,IAAI,QAAQ,CAAC,QAAQ,CAAC,CAAC,CAAC,CAAC,EAAE;YACvB,QAAQ,CAAC,KAAK,EAAE,CAAC;AACjB,YAAA,IAAI,CAAC,WAAW,CAAC,UAAU,CAAC,QAAQ,CAAC,CAAC;AACzC,SAAA;aAAM,IAAI,IAAI,CAAC,WAAW,CAAC,KAAK,CAAC,MAAM,IAAI,IAAI,CAAC,mBAAmB,EAAE;AAClE,YAAA,IAAI,CAAC,cAAc,CAAC,MAAM,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC;YACrC,IAAI,CAAC,WAAW,CAAC,UAAU,CAAC,IAAI,CAAC,cAAc,CAAC,CAAC;AACpD,SAAA;AAAM,aAAA;AACH,YAAA,MAAM,gBAAgB,GAAG,QAAQ,CAAC,MAAM,CAAC,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC;AACvD,YAAA,IAAI,CAAC,WAAW,CAAC,UAAU,CAAC,gBAAgB,CAAC,CAAC;AACjD,SAAA;AAED,QAAA,IAAI,CAAC,UAAU,CAAC,IAAI,EAAE,CAAC;KAC1B;;kHAjFQ,oBAAoB,EAAA,IAAA,EAAA,CAAA,EAAA,KAAA,EAAAA,IAAA,CAAA,cAAA,EAAA,EAAA,EAAA,KAAA,EAAAkB,gBAAA,EAAA,CAAA,EAAA,MAAA,EAAA,EAAA,CAAA,eAAA,CAAA,SAAA,EAAA,CAAA,CAAA;AAApB,oBAAA,CAAA,IAAA,GAAA,EAAA,CAAA,oBAAA,CAAA,EAAA,UAAA,EAAA,QAAA,EAAA,OAAA,EAAA,SAAA,EAAA,IAAA,EAAA,oBAAoB,wJClBjC,m7CA6BiB,EAAA,UAAA,EAAA,CAAA,EAAA,IAAA,EAAAH,IAAA,CAAA,YAAA,EAAA,QAAA,EAAA,gBAAA,EAAA,MAAA,EAAA,CAAA,OAAA,EAAA,YAAA,EAAA,YAAA,EAAA,oBAAA,EAAA,WAAA,CAAA,EAAA,QAAA,EAAA,CAAA,cAAA,CAAA,EAAA,EAAA,EAAA,IAAA,EAAA,EAAA,CAAA,SAAA,EAAA,QAAA,EAAA,YAAA,EAAA,MAAA,EAAA,CAAA,UAAA,EAAA,eAAA,EAAA,UAAA,CAAA,EAAA,QAAA,EAAA,CAAA,WAAA,CAAA,EAAA,EAAA,EAAA,IAAA,EAAAR,IAAA,CAAA,wBAAA,EAAA,QAAA,EAAA,uBAAA,EAAA,MAAA,EAAA,CAAA,kBAAA,EAAA,MAAA,EAAA,WAAA,EAAA,cAAA,EAAA,qBAAA,EAAA,gCAAA,EAAA,kBAAA,EAAA,WAAA,EAAA,qBAAA,EAAA,4BAAA,EAAA,8BAAA,EAAA,uCAAA,EAAA,WAAA,EAAA,uBAAA,EAAA,0BAAA,EAAA,gCAAA,EAAA,iCAAA,EAAA,kCAAA,EAAA,uBAAA,EAAA,mCAAA,CAAA,EAAA,OAAA,EAAA,CAAA,WAAA,CAAA,EAAA,EAAA,EAAA,IAAA,EAAAU,GAAA,CAAA,SAAA,EAAA,QAAA,EAAA,YAAA,EAAA,QAAA,EAAA,CAAA,WAAA,CAAA,EAAA,CAAA,EAAA,UAAA,EAAA,CAAA,EAAA,IAAA,EAAAF,IAAA,CAAA,QAAA,EAAA,QAAA,EAAA,WAAA,EAAA,EAAA,EAAA,IAAA,EAAAP,IAAA,CAAA,iBAAA,EAAA,QAAA,EAAA,wIAAA,EAAA,MAAA,EAAA,CAAA,UAAA,CAAA,EAAA,EAAA,EAAA,IAAA,EAAAA,IAAA,CAAA,eAAA,EAAA,QAAA,EAAA,2CAAA,EAAA,EAAA,EAAA,IAAA,EAAAA,IAAA,CAAA,oBAAA,EAAA,QAAA,EAAA,eAAA,EAAA,MAAA,EAAA,CAAA,UAAA,EAAA,aAAA,EAAA,SAAA,CAAA,EAAA,OAAA,EAAA,CAAA,eAAA,CAAA,EAAA,QAAA,EAAA,CAAA,QAAA,CAAA,EAAA,EAAA,EAAA,IAAA,EAAAC,GAAA,CAAA,IAAA,EAAA,QAAA,EAAA,QAAA,EAAA,MAAA,EAAA,CAAA,MAAA,EAAA,UAAA,EAAA,UAAA,CAAA,EAAA,EAAA,EAAA,IAAA,EAAAA,GAAA,CAAA,OAAA,EAAA,QAAA,EAAA,kBAAA,EAAA,MAAA,EAAA,CAAA,SAAA,EAAA,cAAA,EAAA,eAAA,CAAA,EAAA,EAAA,EAAA,IAAA,EAAAM,IAAA,CAAA,QAAA,EAAA,QAAA,EAAA,WAAA,EAAA,MAAA,EAAA,CAAA,IAAA,CAAA,EAAA,CAAA,EAAA,KAAA,EAAA,EAAA,OAAA,EAAAN,GAAA,CAAA,SAAA,EAAA,EAAA,CAAA,CAAA;4FDXJ,oBAAoB,EAAA,UAAA,EAAA,CAAA;kBANhC,SAAS;AAAC,YAAA,IAAA,EAAA,CAAA;AACP,oBAAA,QAAQ,EAAE,kBAAkB;AAC5B,oBAAA,WAAW,EAAE,+BAA+B;AAC5C,oBAAA,MAAM,EAAE,EACP;AACJ,iBAAA,CAAA;mIAQG,SAAS,EAAA,CAAA;sBADR,KAAK;gBAaN,UAAU,EAAA,CAAA;sBADT,MAAM;;;MEPE,iBAAiB,CAAA;;+GAAjB,iBAAiB,EAAA,IAAA,EAAA,EAAA,EAAA,MAAA,EAAA,EAAA,CAAA,eAAA,CAAA,QAAA,EAAA,CAAA,CAAA;gHAAjB,iBAAiB,EAAA,YAAA,EAAA,CAftB,oBAAoB,CAAA,EAAA,OAAA,EAAA,CAGpB,YAAY;QACZ,WAAW;QACX,mBAAmB;QACnB,cAAc;QACd,eAAe;QACf,kBAAkB;AAClB,QAAA,wBAAwB,aAGxB,oBAAoB,CAAA,EAAA,CAAA,CAAA;AAGf,iBAAA,CAAA,IAAA,GAAA,EAAA,CAAA,mBAAA,CAAA,EAAA,UAAA,EAAA,QAAA,EAAA,OAAA,EAAA,SAAA,EAAA,QAAA,EAAA,EAAA,EAAA,IAAA,EAAA,iBAAiB,EAbjB,OAAA,EAAA,CAAA;YACL,YAAY;YACZ,WAAW;YACX,mBAAmB;YACnB,cAAc;YACd,eAAe;YACf,kBAAkB;YAClB,wBAAwB;AAC3B,SAAA,CAAA,EAAA,CAAA,CAAA;4FAKQ,iBAAiB,EAAA,UAAA,EAAA,CAAA;kBAjB7B,QAAQ;AAAC,YAAA,IAAA,EAAA,CAAA;AACN,oBAAA,YAAY,EAAE;wBACV,oBAAoB;AACvB,qBAAA;AACD,oBAAA,OAAO,EAAE;wBACL,YAAY;wBACZ,WAAW;wBACX,mBAAmB;wBACnB,cAAc;wBACd,eAAe;wBACf,kBAAkB;wBAClB,wBAAwB;AAC3B,qBAAA;AACD,oBAAA,OAAO,EAAE;wBACL,oBAAoB;AACvB,qBAAA;AACJ,iBAAA,CAAA;;;AClBD;MAQa,kBAAkB,CAAA;IAkB3B,WACY,CAAA,cAA8B,EAC9B,gBAAkC,EAAA;QADlC,IAAc,CAAA,cAAA,GAAd,cAAc,CAAgB;QAC9B,IAAgB,CAAA,gBAAA,GAAhB,gBAAgB,CAAkB;QAlB9C,IAAe,CAAA,eAAA,GAAG,eAAe,CAAC;QAClC,IAA2B,CAAA,2BAAA,GAAG,2BAA2B,CAAC;QAE1D,IAAa,CAAA,aAAA,GAAG,aAAa,CAAC;AAG9B,QAAA,IAAA,CAAA,UAAU,GAAG,IAAI,YAAY,EAAE,CAAC;AAIhC,QAAA,IAAA,CAAA,UAAU,GAAG,CAAC,IAAI,SAAS,EAAE,CAAC,CAAC;AAE/B,QAAA,IAAA,CAAA,mBAAmB,GAAgB,IAAI,WAAW,CAAC,EAAE,EAAE,CAAC,UAAU,CAAC,QAAQ,CAAC,CAAC,CAAC;QAE9E,IAAmB,CAAA,mBAAA,GAA2B,IAAI,sBAAsB,CAAC,CAAC,OAAO,CAAC,CAAC,CAAC;KAK/E;IAEL,QAAQ,GAAA;QACJ,IAAI,CAAC,KAAK,GAAG,IAAI,CAAC,cAAc,CAAC,UAAU,CAAC,cAAc,CAAC,CAAC;QAE5D,IAAI,CAAC,sBAAsB,EAAE,CAAC;KACjC;IAEK,sBAAsB,GAAA;;AACxB,YAAA,IAAI,CAAC,UAAU,IAAiB,MAAM,IAAI,CAAC,gBAAgB,CAAC,sBAAsB,CAAC,IAAI,CAAC,KAAK,CAAC,CAAA,CAAC;YAE/F,IAAI,CAAC,mBAAmB,CAAC,SAAS,GAAG,IAAI,CAAC,UAAU,CAAC;AACrD,YAAA,IAAI,CAAC,mBAAmB,CAAC,kBAAkB,EAAE,CAAC;SACjD,CAAA,CAAA;AAAA,KAAA;AAED,IAAA,eAAe,CAAC,iBAAiB,EAAA;AAC7B,QAAA,IAAI,CAAC,mBAAmB,CAAC,UAAU,CAAC,iBAAiB,CAAC,CAAC;AACvD,QAAA,IAAI,CAAC,UAAU,CAAC,IAAI,EAAE,CAAC;KAC1B;;gHAvCQ,kBAAkB,EAAA,IAAA,EAAA,CAAA,EAAA,KAAA,EAAAT,IAAA,CAAA,cAAA,EAAA,EAAA,EAAA,KAAA,EAAAkB,gBAAA,EAAA,CAAA,EAAA,MAAA,EAAA,EAAA,CAAA,eAAA,CAAA,SAAA,EAAA,CAAA,CAAA;AAAlB,kBAAA,CAAA,IAAA,GAAA,EAAA,CAAA,oBAAA,CAAA,EAAA,UAAA,EAAA,QAAA,EAAA,OAAA,EAAA,SAAA,EAAA,IAAA,EAAA,kBAAkB,4FClB/B,k0CAwBM,EAAA,UAAA,EAAA,CAAA,EAAA,IAAA,EAAAH,IAAA,CAAA,YAAA,EAAA,QAAA,EAAA,gBAAA,EAAA,MAAA,EAAA,CAAA,OAAA,EAAA,YAAA,EAAA,YAAA,EAAA,oBAAA,EAAA,WAAA,CAAA,EAAA,QAAA,EAAA,CAAA,cAAA,CAAA,EAAA,EAAA,EAAA,IAAA,EAAA,EAAA,CAAA,SAAA,EAAA,QAAA,EAAA,YAAA,EAAA,MAAA,EAAA,CAAA,UAAA,EAAA,eAAA,EAAA,UAAA,CAAA,EAAA,QAAA,EAAA,CAAA,WAAA,CAAA,EAAA,EAAA,EAAA,IAAA,EAAAR,GAAA,CAAA,SAAA,EAAA,QAAA,EAAA,YAAA,EAAA,QAAA,EAAA,CAAA,WAAA,CAAA,EAAA,EAAA,EAAA,IAAA,EAAAU,IAAA,CAAA,wBAAA,EAAA,QAAA,EAAA,uBAAA,EAAA,MAAA,EAAA,CAAA,kBAAA,EAAA,MAAA,EAAA,WAAA,EAAA,cAAA,EAAA,qBAAA,EAAA,gCAAA,EAAA,kBAAA,EAAA,WAAA,EAAA,qBAAA,EAAA,4BAAA,EAAA,8BAAA,EAAA,uCAAA,EAAA,WAAA,EAAA,uBAAA,EAAA,0BAAA,EAAA,gCAAA,EAAA,iCAAA,EAAA,kCAAA,EAAA,uBAAA,EAAA,mCAAA,CAAA,EAAA,OAAA,EAAA,CAAA,WAAA,CAAA,EAAA,CAAA,EAAA,UAAA,EAAA,CAAA,EAAA,IAAA,EAAAF,IAAA,CAAA,QAAA,EAAA,QAAA,EAAA,WAAA,EAAA,EAAA,EAAA,IAAA,EAAAP,IAAA,CAAA,iBAAA,EAAA,QAAA,EAAA,wIAAA,EAAA,MAAA,EAAA,CAAA,UAAA,CAAA,EAAA,EAAA,EAAA,IAAA,EAAAA,IAAA,CAAA,eAAA,EAAA,QAAA,EAAA,2CAAA,EAAA,EAAA,EAAA,IAAA,EAAAA,IAAA,CAAA,oBAAA,EAAA,QAAA,EAAA,eAAA,EAAA,MAAA,EAAA,CAAA,UAAA,EAAA,aAAA,EAAA,SAAA,CAAA,EAAA,OAAA,EAAA,CAAA,eAAA,CAAA,EAAA,QAAA,EAAA,CAAA,QAAA,CAAA,EAAA,EAAA,EAAA,IAAA,EAAAC,GAAA,CAAA,IAAA,EAAA,QAAA,EAAA,QAAA,EAAA,MAAA,EAAA,CAAA,MAAA,EAAA,UAAA,EAAA,UAAA,CAAA,EAAA,EAAA,EAAA,IAAA,EAAAA,GAAA,CAAA,OAAA,EAAA,QAAA,EAAA,kBAAA,EAAA,MAAA,EAAA,CAAA,SAAA,EAAA,cAAA,EAAA,eAAA,CAAA,EAAA,EAAA,EAAA,IAAA,EAAAM,IAAA,CAAA,QAAA,EAAA,QAAA,EAAA,WAAA,EAAA,MAAA,EAAA,CAAA,IAAA,CAAA,EAAA,CAAA,EAAA,KAAA,EAAA,EAAA,OAAA,EAAAN,GAAA,CAAA,SAAA,EAAA,EAAA,CAAA,CAAA;4FDNO,kBAAkB,EAAA,UAAA,EAAA,CAAA;kBAN9B,SAAS;AAAC,YAAA,IAAA,EAAA,CAAA;AACP,oBAAA,QAAQ,EAAE,eAAe;AACzB,oBAAA,WAAW,EAAE,4BAA4B;AACzC,oBAAA,MAAM,EAAE,EACP;AACJ,iBAAA,CAAA;mIASG,UAAU,EAAA,CAAA;sBADT,MAAM;;;MEIE,eAAe,CAAA;;6GAAf,eAAe,EAAA,IAAA,EAAA,EAAA,EAAA,MAAA,EAAA,EAAA,CAAA,eAAA,CAAA,QAAA,EAAA,CAAA,CAAA;8GAAf,eAAe,EAAA,YAAA,EAAA,CAhBpB,kBAAkB,CAAA,EAAA,OAAA,EAAA,CAGlB,YAAY;QACZ,WAAW;QACX,mBAAmB;QACnB,cAAc;QACd,eAAe;QACf,kBAAkB;AAClB,QAAA,wBAAwB,aAGxB,kBAAkB,CAAA,EAAA,CAAA,CAAA;AAIb,eAAA,CAAA,IAAA,GAAA,EAAA,CAAA,mBAAA,CAAA,EAAA,UAAA,EAAA,QAAA,EAAA,OAAA,EAAA,SAAA,EAAA,QAAA,EAAA,EAAA,EAAA,IAAA,EAAA,eAAe,EAdf,OAAA,EAAA,CAAA;YACL,YAAY;YACZ,WAAW;YACX,mBAAmB;YACnB,cAAc;YACd,eAAe;YACf,kBAAkB;YAClB,wBAAwB;AAC3B,SAAA,CAAA,EAAA,CAAA,CAAA;4FAMQ,eAAe,EAAA,UAAA,EAAA,CAAA;kBAlB3B,QAAQ;AAAC,YAAA,IAAA,EAAA,CAAA;AACN,oBAAA,YAAY,EAAE;wBACV,kBAAkB;AACrB,qBAAA;AACD,oBAAA,OAAO,EAAE;wBACL,YAAY;wBACZ,WAAW;wBACX,mBAAmB;wBACnB,cAAc;wBACd,eAAe;wBACf,kBAAkB;wBAClB,wBAAwB;AAC3B,qBAAA;AACD,oBAAA,OAAO,EAAE;wBACL,kBAAkB;AACrB,qBAAA;AACJ,iBAAA,CAAA;;;AC3BD,IAAY,gBAGX,CAAA;AAHD,CAAA,UAAY,gBAAgB,EAAA;AACxB,IAAA,gBAAA,CAAA,iBAAA,CAAA,GAAA,QAA0B,CAAA;AAC1B,IAAA,gBAAA,CAAA,mBAAA,CAAA,GAAA,UAA8B,CAAA;AAClC,CAAC,EAHW,gBAAgB,KAAhB,gBAAgB,GAG3B,EAAA,CAAA,CAAA;;ACMD;MAMa,gBAAgB,CAAA;IAEzB,WACY,CAAA,IAAgB,EACO,WAAgB,EAAA;QADvC,IAAI,CAAA,IAAA,GAAJ,IAAI,CAAY;QACO,IAAW,CAAA,WAAA,GAAX,WAAW,CAAK;KAC9C;AAEL,IAAA,mBAAmB,CAAC,KAAK,EAAA;AACrB,QAAA,OAAO,IAAI,CAAC,IAAI,CAAC,GAAG,CAAc,CAAG,EAAA,IAAI,CAAC,WAAW,CAAC,kBAAkB,CAAA,cAAA,EAAiB,KAAK,CAAA,eAAA,CAAiB,CAAC,CAAC;KACpH;IAED,oBAAoB,CAAC,KAAK,EAAE,WAAW,EAAA;AACnC,QAAA,OAAO,IAAI,CAAC,IAAI,CAAC,IAAI,CAAY,GAAG,IAAI,CAAC,WAAW,CAAC,kBAAkB,CAAiB,cAAA,EAAA,KAAK,mBAAmB,EAAE,WAAW,CAAC,CAAC;KAClI;AAED,IAAA,kBAAkB,CAAC,MAAc,EAAE,QAAgB,EAAE,MAAc,EAAE,OAAe,EAAE,MAAa,EAAE,KAAa,EAAE,QAAgB,EAAE,QAAgB,EAAA;AAClJ,QAAA,IAAI,MAAM,GAAG,IAAI,UAAU,EAAE,CAAC;QAE9B,MAAM,GAAG,MAAM,CAAC,MAAM,CAAC,QAAQ,EAAE,MAAM,CAAC,CAAC;QACzC,MAAM,GAAG,MAAM,CAAC,MAAM,CAAC,UAAU,EAAE,QAAQ,CAAC,CAAC;QAC7C,MAAM,GAAG,MAAM,CAAC,MAAM,CAAC,QAAQ,EAAE,MAAM,CAAC,CAAC;QACzC,MAAM,GAAG,MAAM,CAAC,MAAM,CAAC,SAAS,EAAE,OAAO,CAAC,CAAC;AAE3C,QAAA,MAAM,CAAC,OAAO,CAAC,MAAM,IAAI,MAAM,GAAG,MAAM,CAAC,MAAM,CAAC,QAAQ,EAAE,MAAM,CAAC,CAAC,CAAC;QACnE,OAAO,IAAI,CAAC,IAAI,CAAC,GAAG,CAAwB,CAAA,EAAG,IAAI,CAAC,WAAW,CAAC,kBAAkB,CAAA,cAAA,EAAiB,KAAK,CAAY,SAAA,EAAA,QAAQ,CAAa,UAAA,EAAA,QAAQ,CAAmB,iBAAA,CAAA,EAAE,EAAE,MAAM,EAAE,MAAM,EAAE,CAAC,CAAC;KAC7L;IAED,gBAAgB,CAAC,MAAc,EAAE,QAAgB,EAAE,MAAa,EAAE,KAAa,EAAE,QAAgB,EAAE,QAAgB,EAAA;AAC/G,QAAA,IAAI,MAAM,GAAG,IAAI,UAAU,EAAE,CAAC;QAE9B,MAAM,GAAG,MAAM,CAAC,MAAM,CAAC,QAAQ,EAAE,MAAM,CAAC,CAAC;QACzC,MAAM,GAAG,MAAM,CAAC,MAAM,CAAC,UAAU,EAAE,QAAQ,CAAC,CAAC;AAE7C,QAAA,MAAM,CAAC,OAAO,CAAC,MAAM,IAAI,MAAM,GAAG,MAAM,CAAC,MAAM,CAAC,QAAQ,EAAE,MAAM,CAAC,CAAC,CAAC;QACnE,OAAO,IAAI,CAAC,IAAI,CAAC,GAAG,CAAwB,CAAA,EAAG,IAAI,CAAC,WAAW,CAAC,kBAAkB,CAAA,cAAA,EAAiB,KAAK,CAAY,SAAA,EAAA,QAAQ,CAAa,UAAA,EAAA,QAAQ,CAAiB,eAAA,CAAA,EAAE,EAAE,MAAM,EAAE,MAAM,EAAE,CAAC,CAAC;KAC3L;AAED,IAAA,iBAAiB,CAAC,KAAK,EAAE,QAAQ,EAAE,QAAQ,EAAE,OAAO,EAAA;QAChD,OAAO,IAAI,CAAC,IAAI,CAAC,KAAK,CAAC,CAAA,EAAG,IAAI,CAAC,WAAW,CAAC,kBAAkB,CAAiB,cAAA,EAAA,KAAK,YAAY,QAAQ,CAAA,UAAA,EAAa,QAAQ,CAAc,YAAA,CAAA,EAAE,OAAO,CAAC,CAAC;KACxJ;AAED,IAAA,mBAAmB,CAAC,KAAK,EAAE,QAAQ,EAAE,QAAQ,EAAE,QAAQ,EAAA;AACnD,QAAA,IAAI,MAAM,GAAG,IAAI,UAAU,EAAE,CAAC;QAC9B,MAAM,GAAG,MAAM,CAAC,MAAM,CAAC,UAAU,EAAE,QAAQ,CAAC,CAAC;QAE7C,OAAO,IAAI,CAAC,IAAI,CAAC,MAAM,CAAC,CAAA,EAAG,IAAI,CAAC,WAAW,CAAC,kBAAkB,CAAA,cAAA,EAAiB,KAAK,CAAY,SAAA,EAAA,QAAQ,CAAa,UAAA,EAAA,QAAQ,CAAU,QAAA,CAAA,EAAE,EAAE,MAAM,EAAE,MAAM,EAAE,CAAC,CAAC;KAChK;IAED,gBAAgB,CAAC,KAAK,EAAE,QAAQ,EAAE,QAAQ,EAAE,QAAQ,EAAE,WAAW,EAAA;QAC7D,OAAO,IAAI,CAAC,IAAI,CAAC,KAAK,CAAC,CAAG,EAAA,IAAI,CAAC,WAAW,CAAC,kBAAkB,iBAAiB,KAAK,CAAA,SAAA,EAAY,QAAQ,CAAA,UAAA,EAAa,QAAQ,CAAA,SAAA,EAAY,QAAQ,CAAc,YAAA,CAAA,EAAE,WAAW,CAAC,CAAC;KAChL;;AAlDQ,gBAAA,CAAA,IAAA,GAAA,EAAA,CAAA,kBAAA,CAAA,EAAA,UAAA,EAAA,QAAA,EAAA,OAAA,EAAA,SAAA,EAAA,QAAA,EAAA,EAAA,EAAA,IAAA,EAAA,gBAAgB,4CAIb,aAAa,EAAA,CAAA,EAAA,MAAA,EAAA,EAAA,CAAA,eAAA,CAAA,UAAA,EAAA,CAAA,CAAA;AAJhB,gBAAA,CAAA,KAAA,GAAA,EAAA,CAAA,qBAAA,CAAA,EAAA,UAAA,EAAA,QAAA,EAAA,OAAA,EAAA,SAAA,EAAA,QAAA,EAAA,EAAA,EAAA,IAAA,EAAA,gBAAgB,cAHb,MAAM,EAAA,CAAA,CAAA;4FAGT,gBAAgB,EAAA,UAAA,EAAA,CAAA;kBAJ5B,UAAU;AAAC,YAAA,IAAA,EAAA,CAAA;AACR,oBAAA,UAAU,EAAE,MAAM;AACrB,iBAAA,CAAA;;0BAMQ,MAAM;2BAAC,aAAa,CAAA;;;MCThB,aAAa,CAAA;AAEtB,IAAA,WAAA,CACY,gBAAkC,EAAA;QAAlC,IAAgB,CAAA,gBAAA,GAAhB,gBAAgB,CAAkB;KACzC;IAEC,oBAAoB,CAAC,KAAK,EAAE,WAAW,EAAA;;AACzC,YAAA,IAAI,OAAkB,CAAC;YACvB,IAAI;AACA,gBAAA,OAAO,GAAG,MAAM,IAAI,CAAC,gBAAgB,CAAC,oBAAoB,CAAC,KAAK,EAAE,WAAW,CAAC,CAAC,SAAS,EAAE,CAAC;AAE3F,gBAAA,IAAI,OAAO,EAAE;AACT,oBAAA,OAAO,OAAO,CAAC;AAClB,iBAAA;AAAM,qBAAA;AACH,oBAAA,OAAO,CAAC,IAAI,MAAM,EAAE,CAAC,CAAC;AACzB,iBAAA;AACJ,aAAA;AAAC,YAAA,OAAO,KAAK,EAAE;AACZ,gBAAA,OAAO,CAAC,KAAK,CAAC,SAAS,EAAE,KAAK,CAAC,CAAC;AAChC,gBAAA,OAAO,CAAC,IAAI,MAAM,EAAE,CAAC,CAAC;AACzB,aAAA;SACJ,CAAA,CAAA;AAAA,KAAA;;2GApBQ,aAAa,EAAA,IAAA,EAAA,CAAA,EAAA,KAAA,EAAAU,gBAAA,EAAA,CAAA,EAAA,MAAA,EAAA,EAAA,CAAA,eAAA,CAAA,UAAA,EAAA,CAAA,CAAA;AAAb,aAAA,CAAA,KAAA,GAAA,EAAA,CAAA,qBAAA,CAAA,EAAA,UAAA,EAAA,QAAA,EAAA,OAAA,EAAA,SAAA,EAAA,QAAA,EAAA,EAAA,EAAA,IAAA,EAAA,aAAa,cAHV,MAAM,EAAA,CAAA,CAAA;4FAGT,aAAa,EAAA,UAAA,EAAA,CAAA;kBAJzB,UAAU;AAAC,YAAA,IAAA,EAAA,CAAA;AACR,oBAAA,UAAU,EAAE,MAAM;AACrB,iBAAA,CAAA;;;ACGD;MASa,eAAe,CAAA;IA4BxB,WACY,CAAA,cAA8B,EAC9B,aAA4B,EAAA;QAD5B,IAAc,CAAA,cAAA,GAAd,cAAc,CAAgB;QAC9B,IAAa,CAAA,aAAA,GAAb,aAAa,CAAe;QAtBxC,IAAc,CAAA,cAAA,GAAG,eAAe,CAAC;QACjC,IAA2B,CAAA,2BAAA,GAAG,2BAA2B,CAAC;QAC1D,IAAgB,CAAA,gBAAA,GAAG,gBAAgB,CAAC;QACpC,IAAa,CAAA,aAAA,GAAG,aAAa,CAAC;AAE9B,QAAA,IAAA,CAAA,OAAO,GAAG,CAAC,IAAI,MAAM,EAAE,CAAC,CAAC;QAIzB,IAAW,CAAA,WAAA,GAAU,EAAE,CAAC;QACxB,IAAgB,CAAA,gBAAA,GAAW,CAAC,CAAC;AAE7B,QAAA,IAAA,CAAA,QAAQ,GAAgB,IAAI,WAAW,CAAC,EAAE,EAAE,CAAC,UAAU,CAAC,QAAQ,CAAC,CAAC,CAAC;AACnE,QAAA,IAAA,CAAA,gBAAgB,GAAgB,IAAI,WAAW,CAAC,EAAE,EAAE,CAAC,UAAU,CAAC,QAAQ,CAAC,CAAC,CAAC;QAE3E,IAAgB,CAAA,gBAAA,GAA2B,IAAI,sBAAsB,CAAC,CAAC,MAAM,CAAC,CAAC,CAAC;AAGhF,QAAA,IAAA,CAAA,UAAU,GAAG,IAAI,YAAY,EAAE,CAAC;KAK3B;IAEL,QAAQ,GAAA;QACJ,IAAI,CAAC,KAAK,GAAG,IAAI,CAAC,cAAc,CAAC,UAAU,CAAC,cAAc,CAAC,CAAC;KAC/D;AAED,IAAA,WAAW,CAAC,OAAsB,EAAA;;AAC9B,QAAA,IAAI,OAAO,CAAC,eAAe,IAAI,IAAI,CAAC,eAAe,EAAE;AACjD,YAAA,IAAI,CAAC,YAAY,GAAG,IAAI,CAAC,eAAe,CAAC;AAC5C,SAAA;AAED,QAAA,IAAI,IAAI,CAAC,SAAS,IAAI,CAAA,CAAA,EAAA,GAAA,IAAI,CAAC,SAAS,MAAA,IAAA,IAAA,EAAA,KAAA,KAAA,CAAA,GAAA,KAAA,CAAA,GAAA,EAAA,CAAE,MAAM,KAAI,CAAC,EAAE;YAC/C,IAAI,OAAO,CAAC,SAAS,EAAE;AACnB,gBAAA,IAAI,CAAC,oBAAoB,CAAC,IAAI,CAAC,SAAS,CAAC,CAAC;AAE1C,gBAAA,IAAI,CAAC,QAAQ,CAAC,UAAU,CAAC,IAAI,CAAC,CAAC;AAC/B,gBAAA,IAAI,CAAC,UAAU,CAAC,IAAI,EAAE,CAAC;AAC1B,aAAA;AACJ,SAAA;KACJ;AAEK,IAAA,oBAAoB,CAAC,QAAQ,EAAA;;YAC/B,MAAM,WAAW,GAAG,EAAE,UAAU,EAAE,IAAI,CAAC,eAAe,IAAI,QAAQ,GAAG,CAAC,QAAQ,CAAC,GAAG,QAAQ,EAAE,CAAC;AAE7F,YAAA,IAAI,CAAC,OAAO,IAAc,MAAM,IAAI,CAAC,aAAa,CAAC,oBAAoB,CAAC,IAAI,CAAC,KAAK,EAAE,WAAW,CAAC,CAAA,CAAC;YAEjG,IAAI,CAAC,gBAAgB,CAAC,SAAS,GAAG,IAAI,CAAC,OAAO,CAAC;AAC/C,YAAA,IAAI,CAAC,gBAAgB,CAAC,kBAAkB,EAAE,CAAC;YAE3C,IAAI,CAAC,gBAAgB,GAAG,IAAI,CAAC,OAAO,CAAC,MAAM,CAAC;YAC5C,IAAI,CAAC,OAAO,CAAC,OAAO,CAAC,MAAM,IAAI,IAAI,CAAC,WAAW,CAAC,IAAI,CAAC,MAAM,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC;AACpE,YAAA,IAAI,CAAC,UAAU,CAAC,IAAI,EAAE,CAAC;SAC1B,CAAA,CAAA;AAAA,KAAA;AAED,IAAA,QAAQ,CAAC,cAAc,EAAA;AACnB,QAAA,IAAI,CAAC,QAAQ,CAAC,UAAU,CAAC,cAAc,CAAC,CAAC;AACzC,QAAA,IAAI,CAAC,UAAU,CAAC,IAAI,EAAE,CAAC;KAC1B;IAED,gBAAgB,GAAA;AACZ,QAAA,IAAI,CAAC,IAAI,CAAC,gBAAgB,CAAC,KAAK,CAAC,QAAQ,CAAC,CAAC,CAAC,CAAC,EAAE;AAC3C,YAAA,IAAI,CAAC,gBAAgB,CAAC,KAAK,CAAC,EAAE,CAAC,CAAC;YAChC,OAAO;AACV,SAAA;AACD,QAAA,IAAI,CAAC,gBAAgB,CAAC,QAAQ,CAAC,CAAC,CAAC,CAAC,EAAE,GAAG,IAAI,CAAC,WAAW,CAAC,CAAC,CAAC;AAC1D,QAAA,IAAI,CAAC,UAAU,CAAC,IAAI,EAAE,CAAC;KAC1B;IAED,eAAe,GAAA;AACX,QAAA,MAAM,QAAQ,GAAG,IAAI,CAAC,gBAAgB,CAAC,KAAK,CAAC;AAE7C,QAAA,IAAI,QAAQ,CAAC,QAAQ,CAAC,CAAC,CAAC,CAAC,EAAE;YACvB,QAAQ,CAAC,KAAK,EAAE,CAAC;AACjB,YAAA,IAAI,CAAC,gBAAgB,CAAC,UAAU,CAAC,QAAQ,CAAC,CAAC;AAC9C,SAAA;aAAM,IAAI,IAAI,CAAC,gBAAgB,CAAC,KAAK,CAAC,MAAM,IAAI,IAAI,CAAC,gBAAgB,EAAE;AACpE,YAAA,IAAI,CAAC,WAAW,CAAC,MAAM,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC;YAClC,IAAI,CAAC,gBAAgB,CAAC,UAAU,CAAC,IAAI,CAAC,WAAW,CAAC,CAAC;AACtD,SAAA;AAAM,aAAA;AACH,YAAA,MAAM,gBAAgB,GAAG,QAAQ,CAAC,MAAM,CAAC,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC;AACvD,YAAA,IAAI,CAAC,gBAAgB,CAAC,UAAU,CAAC,gBAAgB,CAAC,CAAC;AACtD,SAAA;AAED,QAAA,IAAI,CAAC,UAAU,CAAC,IAAI,EAAE,CAAC;KAC1B;;6GA9FQ,eAAe,EAAA,IAAA,EAAA,CAAA,EAAA,KAAA,EAAAnB,IAAA,CAAA,cAAA,EAAA,EAAA,EAAA,KAAA,EAAAoB,aAAA,EAAA,CAAA,EAAA,MAAA,EAAA,EAAA,CAAA,eAAA,CAAA,SAAA,EAAA,CAAA,CAAA;AAAf,eAAA,CAAA,IAAA,GAAA,EAAA,CAAA,oBAAA,CAAA,EAAA,UAAA,EAAA,QAAA,EAAA,OAAA,EAAA,SAAA,EAAA,IAAA,EAAA,eAAe,sLCpB5B,ozFA0DiB,EAAA,UAAA,EAAA,CAAA,EAAA,IAAA,EAAAL,IAAA,CAAA,YAAA,EAAA,QAAA,EAAA,gBAAA,EAAA,MAAA,EAAA,CAAA,OAAA,EAAA,YAAA,EAAA,YAAA,EAAA,oBAAA,EAAA,WAAA,CAAA,EAAA,QAAA,EAAA,CAAA,cAAA,CAAA,EAAA,EAAA,EAAA,IAAA,EAAA,EAAA,CAAA,SAAA,EAAA,QAAA,EAAA,YAAA,EAAA,MAAA,EAAA,CAAA,UAAA,EAAA,eAAA,EAAA,UAAA,CAAA,EAAA,QAAA,EAAA,CAAA,WAAA,CAAA,EAAA,EAAA,EAAA,IAAA,EAAAR,GAAA,CAAA,SAAA,EAAA,QAAA,EAAA,YAAA,EAAA,QAAA,EAAA,CAAA,WAAA,CAAA,EAAA,EAAA,EAAA,IAAA,EAAAU,IAAA,CAAA,wBAAA,EAAA,QAAA,EAAA,uBAAA,EAAA,MAAA,EAAA,CAAA,kBAAA,EAAA,MAAA,EAAA,WAAA,EAAA,cAAA,EAAA,qBAAA,EAAA,gCAAA,EAAA,kBAAA,EAAA,WAAA,EAAA,qBAAA,EAAA,4BAAA,EAAA,8BAAA,EAAA,uCAAA,EAAA,WAAA,EAAA,uBAAA,EAAA,0BAAA,EAAA,gCAAA,EAAA,iCAAA,EAAA,kCAAA,EAAA,uBAAA,EAAA,mCAAA,CAAA,EAAA,OAAA,EAAA,CAAA,WAAA,CAAA,EAAA,CAAA,EAAA,UAAA,EAAA,CAAA,EAAA,IAAA,EAAAT,GAAA,CAAA,IAAA,EAAA,QAAA,EAAA,QAAA,EAAA,MAAA,EAAA,CAAA,MAAA,EAAA,UAAA,EAAA,UAAA,CAAA,EAAA,EAAA,EAAA,IAAA,EAAAO,IAAA,CAAA,QAAA,EAAA,QAAA,EAAA,WAAA,EAAA,EAAA,EAAA,IAAA,EAAAN,IAAA,CAAA,iBAAA,EAAA,QAAA,EAAA,wIAAA,EAAA,MAAA,EAAA,CAAA,UAAA,CAAA,EAAA,EAAA,EAAA,IAAA,EAAAA,IAAA,CAAA,eAAA,EAAA,QAAA,EAAA,2CAAA,EAAA,EAAA,EAAA,IAAA,EAAAA,IAAA,CAAA,oBAAA,EAAA,QAAA,EAAA,eAAA,EAAA,MAAA,EAAA,CAAA,UAAA,EAAA,aAAA,EAAA,SAAA,CAAA,EAAA,OAAA,EAAA,CAAA,eAAA,CAAA,EAAA,QAAA,EAAA,CAAA,QAAA,CAAA,EAAA,EAAA,EAAA,IAAA,EAAAD,GAAA,CAAA,OAAA,EAAA,QAAA,EAAA,kBAAA,EAAA,MAAA,EAAA,CAAA,SAAA,EAAA,cAAA,EAAA,eAAA,CAAA,EAAA,EAAA,EAAA,IAAA,EAAAO,IAAA,CAAA,QAAA,EAAA,QAAA,EAAA,WAAA,EAAA,MAAA,EAAA,CAAA,IAAA,CAAA,EAAA,CAAA,EAAA,KAAA,EAAA,EAAA,OAAA,EAAAP,GAAA,CAAA,SAAA,EAAA,EAAA,CAAA,CAAA;4FDtCJ,eAAe,EAAA,UAAA,EAAA,CAAA;kBAP3B,SAAS;AAAC,YAAA,IAAA,EAAA,CAAA;AACP,oBAAA,QAAQ,EAAE,YAAY;AACtB,oBAAA,WAAW,EAAE,yBAAyB;AACtC,oBAAA,MAAM,EAAE,EACP;AACJ,iBAAA,CAAA;gIAKG,eAAe,EAAA,CAAA;sBADd,KAAK;gBAIN,SAAS,EAAA,CAAA;sBADR,KAAK;gBAqBN,UAAU,EAAA,CAAA;sBADT,MAAM;;;MEfE,YAAY,CAAA;;0GAAZ,YAAY,EAAA,IAAA,EAAA,EAAA,EAAA,MAAA,EAAA,EAAA,CAAA,eAAA,CAAA,QAAA,EAAA,CAAA,CAAA;2GAAZ,YAAY,EAAA,YAAA,EAAA,CAhBjB,eAAe,CAAA,EAAA,OAAA,EAAA,CAGf,YAAY;QACZ,WAAW;QACX,mBAAmB;QACnB,cAAc;QACd,eAAe;QACf,kBAAkB;AAClB,QAAA,wBAAwB,aAGxB,eAAe,CAAA,EAAA,CAAA,CAAA;AAIV,YAAA,CAAA,IAAA,GAAA,EAAA,CAAA,mBAAA,CAAA,EAAA,UAAA,EAAA,QAAA,EAAA,OAAA,EAAA,SAAA,EAAA,QAAA,EAAA,EAAA,EAAA,IAAA,EAAA,YAAY,EAdZ,OAAA,EAAA,CAAA;YACL,YAAY;YACZ,WAAW;YACX,mBAAmB;YACnB,cAAc;YACd,eAAe;YACf,kBAAkB;YAClB,wBAAwB;AAC3B,SAAA,CAAA,EAAA,CAAA,CAAA;4FAMQ,YAAY,EAAA,UAAA,EAAA,CAAA;kBAlBxB,QAAQ;AAAC,YAAA,IAAA,EAAA,CAAA;AACN,oBAAA,YAAY,EAAE;wBACV,eAAe;AAClB,qBAAA;AACD,oBAAA,OAAO,EAAE;wBACL,YAAY;wBACZ,WAAW;wBACX,mBAAmB;wBACnB,cAAc;wBACd,eAAe;wBACf,kBAAkB;wBAClB,wBAAwB;AAC3B,qBAAA;AACD,oBAAA,OAAO,EAAE;wBACL,eAAe;AAClB,qBAAA;AACJ,iBAAA,CAAA;;;MChBY,gBAAgB,CAAA;IAEzB,WACY,CAAA,IAAgB,EACO,WAAgB,EAAA;QADvC,IAAI,CAAA,IAAA,GAAJ,IAAI,CAAY;QACO,IAAW,CAAA,WAAA,GAAX,WAAW,CAAK;KAC9C;AAEL,IAAA,+BAA+B,CAAC,KAAK,EAAA;AACjC,QAAA,OAAO,IAAI,CAAC,IAAI,CAAC,GAAG,CAAY,CAAG,EAAA,IAAI,CAAC,WAAW,CAAC,kBAAkB,CAAA,cAAA,EAAiB,KAAK,CAAA,wBAAA,CAA0B,CAAC,CAAC;KAC3H;AAED,IAAA,aAAa,CAAC,KAAK,EAAE,QAAQ,EAAE,QAAQ,EAAA;QACnC,OAAO,IAAI,CAAC,IAAI,CAAC,GAAG,CAAU,CAAA,EAAG,IAAI,CAAC,WAAW,CAAC,kBAAkB,CAAA,cAAA,EAAiB,KAAK,CAAY,SAAA,EAAA,QAAQ,aAAa,QAAQ,CAAA,CAAE,CAAC,CAAC;KAC1I;AAED,IAAA,sBAAsB,CAAC,KAAK,EAAA;AACxB,QAAA,OAAO,IAAI,CAAC,IAAI,CAAC,GAAG,CAAsB,CAAG,EAAA,IAAI,CAAC,WAAW,CAAC,kBAAkB,CAAA,cAAA,EAAiB,KAAK,CAAA,6BAAA,CAA+B,CAAC,CAAC;KAC1I;IAED,wBAAwB,CAAC,KAAK,EAAE,WAAW,EAAA;AACvC,QAAA,OAAO,IAAI,CAAC,IAAI,CAAC,GAAG,CAAqB,GAAG,IAAI,CAAC,WAAW,CAAC,kBAAkB,CAAiB,cAAA,EAAA,KAAK,uBAAuB,WAAW,CAAA,SAAA,CAAW,CAAC,CAAC;KACvJ;IAED,qBAAqB,CAAC,KAAK,EAAE,QAAQ,EAAA;AACjC,QAAA,OAAO,IAAI,CAAC,IAAI,CAAC,GAAG,CAAqB,GAAG,IAAI,CAAC,WAAW,CAAC,kBAAkB,CAAiB,cAAA,EAAA,KAAK,YAAY,QAAQ,CAAA,SAAA,CAAW,CAAC,CAAC;KACzI;AAED,IAAA,gCAAgC,CAAC,KAAK,EAAE,QAAQ,EAAE,WAAW,EAAE,UAAU,EAAA;AACrE,QAAA,IAAI,OAAO,GAAG,IAAI,WAAW,EAAE,CAAC,GAAG,CAAC,YAAY,EAAE,UAAU,CAAC,CAAC;QAE9D,OAAO,IAAI,CAAC,IAAI,CAAC,IAAI,CAAmB,CAAA,EAAG,IAAI,CAAC,WAAW,CAAC,kBAAkB,CAAA,cAAA,EAAiB,KAAK,CAAY,SAAA,EAAA,QAAQ,CAAgB,cAAA,CAAA,EAAE,WAAW,EAAE,EAAE,OAAO,EAAE,OAAO,EAAE,CAAC,CAAC;KAChL;IAED,uBAAuB,CAAC,KAAK,EAAE,WAAW,EAAA;AACtC,QAAA,OAAO,IAAI,CAAC,IAAI,CAAC,IAAI,CAAsB,GAAG,IAAI,CAAC,WAAW,CAAC,kBAAkB,CAAiB,cAAA,EAAA,KAAK,uBAAuB,EAAE,WAAW,CAAC,CAAC;KAChJ;IAED,wBAAwB,CAAC,KAAK,EAAE,SAAS,EAAA;AACrC,QAAA,IAAI,MAAM,GAAG,IAAI,UAAU,EAAE,CAAC;QAC9B,MAAM,GAAG,MAAM,CAAC,MAAM,CAAC,WAAW,EAAE,SAAS,CAAC,CAAC;QAE/C,OAAO,IAAI,CAAC,IAAI,CAAC,GAAG,CAAY,CAAA,EAAG,IAAI,CAAC,WAAW,CAAC,kBAAkB,CAAiB,cAAA,EAAA,KAAK,qBAAqB,EAAE,EAAE,MAAM,EAAE,MAAM,EAAE,CAAC,CAAC;KAC1I;IAED,yBAAyB,CAAC,KAAK,EAAE,WAAW,EAAA;AACxC,QAAA,OAAO,IAAI,CAAC,IAAI,CAAC,IAAI,CAAC,GAAG,IAAI,CAAC,WAAW,CAAC,kBAAkB,CAAiB,cAAA,EAAA,KAAK,4BAA4B,EAAE,WAAW,CAAC,CAAC;KAChI;IAED,uBAAuB,CAAC,KAAK,EAAE,UAAU,EAAA;AACrC,QAAA,IAAI,OAAO,GAAG,IAAI,WAAW,EAAE,CAAC,GAAG,CAAC,YAAY,EAAE,UAAU,CAAC,CAAC;QAE9D,OAAO,IAAI,CAAC,IAAI,CAAC,GAAG,CAAgB,CAAA,EAAG,IAAI,CAAC,WAAW,CAAC,kBAAkB,CAAiB,cAAA,EAAA,KAAK,gBAAgB,EAAE,EAAE,OAAO,EAAE,OAAO,EAAE,CAAC,CAAC;KAC3I;AAED,IAAA,YAAY,CAAC,KAAK,EAAE,QAAQ,EAAE,QAAQ,EAAE,MAAM,EAAA;QAC1C,OAAO,IAAI,CAAC,IAAI,CAAC,IAAI,CAAC,CAAA,EAAG,IAAI,CAAC,WAAW,CAAC,kBAAkB,CAAiB,cAAA,EAAA,KAAK,YAAY,QAAQ,CAAA,UAAA,EAAa,QAAQ,CAAY,UAAA,CAAA,EAAE,MAAM,CAAC,CAAC;KACpJ;AAED,IAAA,YAAY,CAAC,KAAK,EAAE,QAAQ,EAAE,QAAQ,EAAE,MAAM,EAAA;QAC1C,OAAO,IAAI,CAAC,IAAI,CAAC,KAAK,CAAC,CAAA,EAAG,IAAI,CAAC,WAAW,CAAC,kBAAkB,CAAiB,cAAA,EAAA,KAAK,YAAY,QAAQ,CAAA,UAAA,EAAa,QAAQ,CAAE,CAAA,EAAE,MAAM,CAAC,CAAC;KAC3I;AAED,IAAA,YAAY,CAAC,KAAK,EAAE,QAAQ,EAAE,QAAQ,EAAA;QAClC,OAAO,IAAI,CAAC,IAAI,CAAC,MAAM,CAAC,CAAA,EAAG,IAAI,CAAC,WAAW,CAAC,kBAAkB,CAAA,cAAA,EAAiB,KAAK,CAAY,SAAA,EAAA,QAAQ,aAAa,QAAQ,CAAA,CAAE,CAAC,CAAC;KACpI;AAED,IAAA,mBAAmB,CAAC,KAAK,EAAA;AACrB,QAAA,OAAO,IAAI,CAAC,IAAI,CAAC,GAAG,CAAc,CAAG,EAAA,IAAI,CAAC,WAAW,CAAC,kBAAkB,CAAA,cAAA,EAAiB,KAAK,CAAA,gBAAA,CAAkB,CAAC,CAAC;KACrH;IAED,oBAAoB,CAAC,mBAAmB,EAAE,KAAK,EAAA;AAC3C,QAAA,IAAI,MAAM,GAAG,IAAI,UAAU,EAAE,CAAC;AAC9B,QAAA,mBAAmB,CAAC,OAAO,CAAC,MAAM,IAAI,MAAM,GAAG,MAAM,CAAC,MAAM,CAAC,QAAQ,EAAE,MAAM,CAAC,CAAC,CAAC;QAEhF,OAAO,IAAI,CAAC,IAAI,CAAC,GAAG,CAAuB,CAAA,EAAG,IAAI,CAAC,WAAW,CAAC,kBAAkB,CAAiB,cAAA,EAAA,KAAK,6BAA6B,EAAE,EAAE,MAAM,EAAE,MAAM,EAAE,CAAC,CAAC;KAC7J;;AA3EQ,gBAAA,CAAA,IAAA,GAAA,EAAA,CAAA,kBAAA,CAAA,EAAA,UAAA,EAAA,QAAA,EAAA,OAAA,EAAA,SAAA,EAAA,QAAA,EAAA,EAAA,EAAA,IAAA,EAAA,gBAAgB,4CAIb,aAAa,EAAA,CAAA,EAAA,MAAA,EAAA,EAAA,CAAA,eAAA,CAAA,UAAA,EAAA,CAAA,CAAA;AAJhB,gBAAA,CAAA,KAAA,GAAA,EAAA,CAAA,qBAAA,CAAA,EAAA,UAAA,EAAA,QAAA,EAAA,OAAA,EAAA,SAAA,EAAA,QAAA,EAAA,EAAA,EAAA,IAAA,EAAA,gBAAgB,cAHb,MAAM,EAAA,CAAA,CAAA;4FAGT,gBAAgB,EAAA,UAAA,EAAA,CAAA;kBAJ5B,UAAU;AAAC,YAAA,IAAA,EAAA,CAAA;AACR,oBAAA,UAAU,EAAE,MAAM;AACrB,iBAAA,CAAA;;0BAMQ,MAAM;2BAAC,aAAa,CAAA;;;MCNhB,aAAa,CAAA;AAEtB,IAAA,WAAA,CACY,gBAAkC,EAAA;QAAlC,IAAgB,CAAA,gBAAA,GAAhB,gBAAgB,CAAkB;KACzC;AAEC,IAAA,+BAA+B,CAAC,KAAK,EAAA;;AACvC,YAAA,IAAI,OAAkB,CAAC;YACvB,IAAI;AACA,gBAAA,OAAO,GAAG,MAAM,IAAI,CAAC,gBAAgB,CAAC,+BAA+B,CAAC,KAAK,CAAC,CAAC,SAAS,EAAE,CAAC;AAEzF,gBAAA,IAAI,OAAO,EAAE;AACT,oBAAA,OAAO,OAAO,CAAC;AAClB,iBAAA;AAAM,qBAAA;AACH,oBAAA,OAAO,CAAC,IAAI,MAAM,EAAE,CAAC,CAAC;AACzB,iBAAA;AACJ,aAAA;AAAC,YAAA,OAAO,KAAK,EAAE;AACZ,gBAAA,OAAO,CAAC,KAAK,CAAC,SAAS,EAAE,KAAK,CAAC,CAAC;AAChC,gBAAA,OAAO,CAAC,IAAI,MAAM,EAAE,CAAC,CAAC;AACzB,aAAA;SACJ,CAAA,CAAA;AAAA,KAAA;IAEK,wBAAwB,CAAC,KAAK,EAAE,WAAW,EAAA;;AAC7C,YAAA,IAAI,WAA+B,CAAC;YACpC,IAAI;AACA,gBAAA,WAAW,GAAG,MAAM,IAAI,CAAC,gBAAgB,CAAC,wBAAwB,CAAC,KAAK,EAAE,WAAW,CAAC,CAAC,SAAS,EAAE,CAAC;AAEnG,gBAAA,IAAI,WAAW,EAAE;AACb,oBAAA,OAAO,WAAW,CAAC;AACtB,iBAAA;AAAM,qBAAA;AACH,oBAAA,OAAO,CAAC,IAAI,eAAe,EAAE,CAAC,CAAC;AAClC,iBAAA;AACJ,aAAA;AAAC,YAAA,OAAO,KAAK,EAAE;AACZ,gBAAA,OAAO,CAAC,KAAK,CAAC,SAAS,EAAE,KAAK,CAAC,CAAC;AAChC,gBAAA,OAAO,CAAC,IAAI,eAAe,EAAE,CAAC,CAAC;AAClC,aAAA;SACJ,CAAA,CAAA;AAAA,KAAA;IAEK,uBAAuB,CAAC,KAAK,EAAE,UAAU,EAAA;;AAC3C,YAAA,IAAI,WAA0B,CAAC;YAC/B,IAAI;AACA,gBAAA,WAAW,GAAG,MAAM,IAAI,CAAC,gBAAgB,CAAC,uBAAuB,CAAC,KAAK,EAAE,UAAU,CAAC,CAAC,SAAS,EAAE,CAAC;AAEjG,gBAAA,IAAI,WAAW,EAAE;AACb,oBAAA,OAAO,WAAW,CAAC;AACtB,iBAAA;AAAM,qBAAA;AACH,oBAAA,OAAO,CAAC,IAAI,UAAU,EAAE,CAAC,CAAC;AAC7B,iBAAA;AACJ,aAAA;AAAC,YAAA,OAAO,KAAK,EAAE;AACZ,gBAAA,OAAO,CAAC,KAAK,CAAC,SAAS,EAAE,KAAK,CAAC,CAAC;AAChC,gBAAA,OAAO,CAAC,IAAI,UAAU,EAAE,CAAC,CAAC;AAC7B,aAAA;SACJ,CAAA,CAAA;AAAA,KAAA;AAEK,IAAA,gCAAgC,CAAC,KAAK,EAAE,QAAQ,EAAE,WAAW,EAAE,UAAU,EAAA;;AAC3E,YAAA,IAAI,aAA+B,CAAC;YACpC,IAAI;AACA,gBAAA,aAAa,GAAG,MAAM,IAAI,CAAC,gBAAgB,CAAC,gCAAgC,CAAC,KAAK,EAAE,QAAQ,EAAE,WAAW,EAAE,UAAU,CAAC,CAAC,SAAS,EAAE,CAAC;AAEnI,gBAAA,IAAI,aAAa,EAAE;AACf,oBAAA,OAAO,aAAa,CAAC;AACxB,iBAAA;AAAM,qBAAA;oBACH,OAAO,IAAI,eAAe,EAAE,CAAC;AAChC,iBAAA;AACJ,aAAA;AAAC,YAAA,OAAO,KAAK,EAAE;AACZ,gBAAA,OAAO,CAAC,KAAK,CAAC,SAAS,EAAE,KAAK,CAAC,CAAC;gBAChC,OAAO,IAAI,eAAe,EAAE,CAAC;AAChC,aAAA;SACJ,CAAA,CAAA;AAAA,KAAA;AAEK,IAAA,aAAa,CAAC,KAAK,EAAE,QAAQ,EAAE,QAAQ,EAAA;;AACzC,YAAA,IAAI,OAAgB,CAAC;YACrB,IAAI;AACA,gBAAA,OAAO,GAAG,MAAM,IAAI,CAAC,gBAAgB,CAAC,aAAa,CAAC,KAAK,EAAE,QAAQ,EAAE,QAAQ,CAAC,CAAC,SAAS,EAAE,CAAC;AAE3F,gBAAA,IAAI,OAAO,EAAE;AACT,oBAAA,OAAO,OAAO,CAAC;AAClB,iBAAA;AAAM,qBAAA;oBACH,OAAO,IAAI,MAAM,EAAE,CAAC;AACvB,iBAAA;AACJ,aAAA;AAAC,YAAA,OAAO,KAAK,EAAE;AACZ,gBAAA,OAAO,CAAC,KAAK,CAAC,SAAS,EAAE,KAAK,CAAC,CAAC;gBAChC,OAAO,IAAI,MAAM,EAAE,CAAC;AACvB,aAAA;SACJ,CAAA,CAAA;AAAA,KAAA;IAEK,wBAAwB,CAAC,KAAK,EAAE,SAAS,EAAA;;AAC3C,YAAA,IAAI,OAAkB,CAAC;YACvB,IAAI;AACA,gBAAA,OAAO,GAAG,MAAM,IAAI,CAAC,gBAAgB,CAAC,wBAAwB,CAAC,KAAK,EAAE,SAAS,CAAC,CAAC,SAAS,EAAE,CAAC;AAE7F,gBAAA,IAAI,OAAO,EAAE;AACT,oBAAA,OAAO,OAAO,CAAC;AAClB,iBAAA;AAAM,qBAAA;AACH,oBAAA,OAAO,CAAC,IAAI,MAAM,EAAE,CAAC,CAAC;AACzB,iBAAA;AACJ,aAAA;AAAC,YAAA,OAAO,KAAK,EAAE;AACZ,gBAAA,OAAO,CAAC,KAAK,CAAC,SAAS,EAAE,KAAK,CAAC,CAAC;AAChC,gBAAA,OAAO,CAAC,IAAI,MAAM,EAAE,CAAC,CAAC;AACzB,aAAA;SACJ,CAAA,CAAA;AAAA,KAAA;;2GApGQ,aAAa,EAAA,IAAA,EAAA,CAAA,EAAA,KAAA,EAAAa,gBAAA,EAAA,CAAA,EAAA,MAAA,EAAA,EAAA,CAAA,eAAA,CAAA,UAAA,EAAA,CAAA,CAAA;AAAb,aAAA,CAAA,KAAA,GAAA,EAAA,CAAA,qBAAA,CAAA,EAAA,UAAA,EAAA,QAAA,EAAA,OAAA,EAAA,SAAA,EAAA,QAAA,EAAA,EAAA,EAAA,IAAA,EAAA,aAAa,cAHV,MAAM,EAAA,CAAA,CAAA;4FAGT,aAAa,EAAA,UAAA,EAAA,CAAA;kBAJzB,UAAU;AAAC,YAAA,IAAA,EAAA,CAAA;AACR,oBAAA,UAAU,EAAE,MAAM;AACrB,iBAAA,CAAA;;;ACGD;MASa,eAAe,CAAA;IAwBxB,WACY,CAAA,cAA8B,EAC9B,aAA4B,EAAA;QAD5B,IAAc,CAAA,cAAA,GAAd,cAAc,CAAgB;QAC9B,IAAa,CAAA,aAAA,GAAb,aAAa,CAAe;QAtBxC,IAAc,CAAA,cAAA,GAAG,eAAe,CAAC;QAEjC,IAA2B,CAAA,2BAAA,GAAG,2BAA2B,CAAA;QACzD,IAAgB,CAAA,gBAAA,GAAG,gBAAgB,CAAC;QACpC,IAAa,CAAA,aAAA,GAAG,aAAa,CAAC;AAG9B,QAAA,IAAA,CAAA,OAAO,GAAG,CAAC,IAAI,MAAM,EAAE,CAAC,CAAC;AACzB,QAAA,IAAA,CAAA,YAAY,GAAW,IAAI,CAAC,gBAAgB,CAAC,eAAe,CAAC;QAC7D,IAAW,CAAA,WAAA,GAAU,EAAE,CAAC;QACxB,IAAgB,CAAA,gBAAA,GAAW,CAAC,CAAC;AAE7B,QAAA,IAAA,CAAA,QAAQ,GAAgB,IAAI,WAAW,CAAC,EAAE,EAAE,CAAC,UAAU,CAAC,QAAQ,CAAC,CAAC,CAAC;AACnE,QAAA,IAAA,CAAA,gBAAgB,GAAgB,IAAI,WAAW,CAAC,EAAE,EAAE,CAAC,UAAU,CAAC,QAAQ,CAAC,CAAC,CAAC;QAE3E,IAAgB,CAAA,gBAAA,GAA2B,IAAI,sBAAsB,CAAC,CAAC,MAAM,CAAC,CAAC,CAAC;AAGhF,QAAA,IAAA,CAAA,UAAU,GAAG,IAAI,YAAY,EAAE,CAAC;KAK3B;IAEL,QAAQ,GAAA;QACJ,IAAI,CAAC,KAAK,GAAG,IAAI,CAAC,cAAc,CAAC,UAAU,CAAC,cAAc,CAAC,CAAC;QAE5D,IAAI,CAAC,+BAA+B,EAAE,CAAC;KAC1C;AAED,IAAA,WAAW,CAAC,OAAsB,EAAA;AAC9B,QAAA,IAAI,OAAO,CAAC,eAAe,IAAI,IAAI,CAAC,eAAe,EAAE;AACjD,YAAA,IAAI,CAAC,YAAY,GAAG,IAAI,CAAC,eAAe,CAAC;AAC5C,SAAA;KACJ;IAEK,+BAA+B,GAAA;;AACjC,YAAA,IAAI,CAAC,OAAO,IAAc,MAAM,IAAI,CAAC,aAAa,CAAC,+BAA+B,CAAC,IAAI,CAAC,KAAK,CAAC,CAAA,CAAC;YAE/F,IAAI,CAAC,gBAAgB,CAAC,SAAS,GAAG,IAAI,CAAC,OAAO,CAAC;AAC/C,YAAA,IAAI,CAAC,gBAAgB,CAAC,kBAAkB,EAAE,CAAC;YAE3C,IAAI,CAAC,gBAAgB,GAAG,IAAI,CAAC,OAAO,CAAC,MAAM,CAAC;YAC5C,IAAI,CAAC,OAAO,CAAC,OAAO,CAAC,MAAM,IAAI,IAAI,CAAC,WAAW,CAAC,IAAI,CAAC,MAAM,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC;AAEpE,YAAA,IAAI,IAAI,CAAC,OAAO,CAAC,MAAM,GAAG,CAAC,EAAE;AACzB,gBAAA,IAAI,CAAC,QAAQ,CAAC,UAAU,CAAC,IAAI,CAAC,OAAO,CAAC,CAAC,CAAC,CAAC,IAAI,CAAC,CAAC,CAAC;AAChD,gBAAA,IAAI,CAAC,UAAU,CAAC,IAAI,EAAE,CAAC;AAC1B,aAAA;SACJ,CAAA,CAAA;AAAA,KAAA;AAED,IAAA,QAAQ,CAAC,cAAc,EAAA;AACnB,QAAA,IAAI,CAAC,QAAQ,CAAC,UAAU,CAAC,cAAc,CAAC,CAAC;AACzC,QAAA,IAAI,CAAC,UAAU,CAAC,IAAI,EAAE,CAAC;KAC1B;IAED,iBAAiB,GAAA;AACb,QAAA,IAAI,CAAC,IAAI,CAAC,gBAAgB,CAAC,KAAK,CAAC,QAAQ,CAAC,CAAC,CAAC,CAAC,EAAE;AAC3C,YAAA,IAAI,CAAC,gBAAgB,CAAC,KAAK,CAAC,EAAE,CAAC,CAAC;YAChC,OAAO;AACV,SAAA;AACD,QAAA,IAAI,CAAC,gBAAgB,CAAC,QAAQ,CAAC,CAAC,CAAC,CAAC,EAAE,GAAG,IAAI,CAAC,WAAW,CAAC,CAAC,CAAC;AAC1D,QAAA,IAAI,CAAC,UAAU,CAAC,IAAI,EAAE,CAAC;KAC1B;IAED,gBAAgB,GAAA;AACZ,QAAA,MAAM,QAAQ,GAAG,IAAI,CAAC,gBAAgB,CAAC,KAAK,CAAC;AAE7C,QAAA,IAAI,QAAQ,CAAC,QAAQ,CAAC,CAAC,CAAC,CAAC,EAAE;YACvB,QAAQ,CAAC,KAAK,EAAE,CAAC;AACjB,YAAA,IAAI,CAAC,gBAAgB,CAAC,UAAU,CAAC,QAAQ,CAAC,CAAC;AAC9C,SAAA;aAAM,IAAI,IAAI,CAAC,gBAAgB,CAAC,KAAK,CAAC,MAAM,IAAI,IAAI,CAAC,gBAAgB,EAAE;AACpE,YAAA,IAAI,CAAC,WAAW,CAAC,MAAM,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC;YAClC,IAAI,CAAC,gBAAgB,CAAC,UAAU,CAAC,IAAI,CAAC,WAAW,CAAC,CAAC;AACtD,SAAA;AAAM,aAAA;AACH,YAAA,MAAM,gBAAgB,GAAG,QAAQ,CAAC,MAAM,CAAC,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC;AACvD,YAAA,IAAI,CAAC,gBAAgB,CAAC,UAAU,CAAC,gBAAgB,CAAC,CAAC;AACtD,SAAA;AAED,QAAA,IAAI,CAAC,UAAU,CAAC,IAAI,EAAE,CAAC;KAC1B;;6GArFQ,eAAe,EAAA,IAAA,EAAA,CAAA,EAAA,KAAA,EAAArB,IAAA,CAAA,cAAA,EAAA,EAAA,EAAA,KAAA,EAAAsB,aAAA,EAAA,CAAA,EAAA,MAAA,EAAA,EAAA,CAAA,eAAA,CAAA,SAAA,EAAA,CAAA,CAAA;AAAf,eAAA,CAAA,IAAA,GAAA,EAAA,CAAA,oBAAA,CAAA,EAAA,UAAA,EAAA,QAAA,EAAA,OAAA,EAAA,SAAA,EAAA,IAAA,EAAA,eAAe,8JCpB5B,kkFAmDiB,EAAA,UAAA,EAAA,CAAA,EAAA,IAAA,EAAAP,IAAA,CAAA,YAAA,EAAA,QAAA,EAAA,gBAAA,EAAA,MAAA,EAAA,CAAA,OAAA,EAAA,YAAA,EAAA,YAAA,EAAA,oBAAA,EAAA,WAAA,CAAA,EAAA,QAAA,EAAA,CAAA,cAAA,CAAA,EAAA,EAAA,EAAA,IAAA,EAAA,EAAA,CAAA,SAAA,EAAA,QAAA,EAAA,YAAA,EAAA,MAAA,EAAA,CAAA,UAAA,EAAA,eAAA,EAAA,UAAA,CAAA,EAAA,QAAA,EAAA,CAAA,WAAA,CAAA,EAAA,EAAA,EAAA,IAAA,EAAAR,GAAA,CAAA,SAAA,EAAA,QAAA,EAAA,YAAA,EAAA,QAAA,EAAA,CAAA,WAAA,CAAA,EAAA,EAAA,EAAA,IAAA,EAAAU,IAAA,CAAA,wBAAA,EAAA,QAAA,EAAA,uBAAA,EAAA,MAAA,EAAA,CAAA,kBAAA,EAAA,MAAA,EAAA,WAAA,EAAA,cAAA,EAAA,qBAAA,EAAA,gCAAA,EAAA,kBAAA,EAAA,WAAA,EAAA,qBAAA,EAAA,4BAAA,EAAA,8BAAA,EAAA,uCAAA,EAAA,WAAA,EAAA,uBAAA,EAAA,0BAAA,EAAA,gCAAA,EAAA,iCAAA,EAAA,kCAAA,EAAA,uBAAA,EAAA,mCAAA,CAAA,EAAA,OAAA,EAAA,CAAA,WAAA,CAAA,EAAA,CAAA,EAAA,UAAA,EAAA,CAAA,EAAA,IAAA,EAAAT,GAAA,CAAA,IAAA,EAAA,QAAA,EAAA,QAAA,EAAA,MAAA,EAAA,CAAA,MAAA,EAAA,UAAA,EAAA,UAAA,CAAA,EAAA,EAAA,EAAA,IAAA,EAAAO,IAAA,CAAA,QAAA,EAAA,QAAA,EAAA,WAAA,EAAA,EAAA,EAAA,IAAA,EAAAN,IAAA,CAAA,iBAAA,EAAA,QAAA,EAAA,wIAAA,EAAA,MAAA,EAAA,CAAA,UAAA,CAAA,EAAA,EAAA,EAAA,IAAA,EAAAA,IAAA,CAAA,eAAA,EAAA,QAAA,EAAA,2CAAA,EAAA,EAAA,EAAA,IAAA,EAAAA,IAAA,CAAA,oBAAA,EAAA,QAAA,EAAA,eAAA,EAAA,MAAA,EAAA,CAAA,UAAA,EAAA,aAAA,EAAA,SAAA,CAAA,EAAA,OAAA,EAAA,CAAA,eAAA,CAAA,EAAA,QAAA,EAAA,CAAA,QAAA,CAAA,EAAA,EAAA,EAAA,IAAA,EAAAD,GAAA,CAAA,OAAA,EAAA,QAAA,EAAA,kBAAA,EAAA,MAAA,EAAA,CAAA,SAAA,EAAA,cAAA,EAAA,eAAA,CAAA,EAAA,EAAA,EAAA,IAAA,EAAAO,IAAA,CAAA,QAAA,EAAA,QAAA,EAAA,WAAA,EAAA,MAAA,EAAA,CAAA,IAAA,CAAA,EAAA,CAAA,EAAA,KAAA,EAAA,EAAA,OAAA,EAAAP,GAAA,CAAA,SAAA,EAAA,EAAA,CAAA,CAAA;4FD/BJ,eAAe,EAAA,UAAA,EAAA,CAAA;kBAP3B,SAAS;AAAC,YAAA,IAAA,EAAA,CAAA;AACP,oBAAA,QAAQ,EAAE,YAAY;AACtB,oBAAA,WAAW,EAAE,yBAAyB;AACtC,oBAAA,MAAM,EAAE,EACP;AACJ,iBAAA,CAAA;gIAIG,eAAe,EAAA,CAAA;sBADd,KAAK;gBAqBN,UAAU,EAAA,CAAA;sBADT,MAAM;;;MEZE,YAAY,CAAA;;0GAAZ,YAAY,EAAA,IAAA,EAAA,EAAA,EAAA,MAAA,EAAA,EAAA,CAAA,eAAA,CAAA,QAAA,EAAA,CAAA,CAAA;2GAAZ,YAAY,EAAA,YAAA,EAAA,CAfjB,eAAe,CAAA,EAAA,OAAA,EAAA,CAGf,YAAY;QACZ,WAAW;QACX,mBAAmB;QACnB,cAAc;QACd,eAAe;QACf,kBAAkB;AAClB,QAAA,wBAAwB,aAGxB,eAAe,CAAA,EAAA,CAAA,CAAA;AAGV,YAAA,CAAA,IAAA,GAAA,EAAA,CAAA,mBAAA,CAAA,EAAA,UAAA,EAAA,QAAA,EAAA,OAAA,EAAA,SAAA,EAAA,QAAA,EAAA,EAAA,EAAA,IAAA,EAAA,YAAY,EAbZ,OAAA,EAAA,CAAA;YACL,YAAY;YACZ,WAAW;YACX,mBAAmB;YACnB,cAAc;YACd,eAAe;YACf,kBAAkB;YAClB,wBAAwB;AAC3B,SAAA,CAAA,EAAA,CAAA,CAAA;4FAKQ,YAAY,EAAA,UAAA,EAAA,CAAA;kBAjBxB,QAAQ;AAAC,YAAA,IAAA,EAAA,CAAA;AACN,oBAAA,YAAY,EAAE;wBACV,eAAe;AAClB,qBAAA;AACD,oBAAA,OAAO,EAAE;wBACL,YAAY;wBACZ,WAAW;wBACX,mBAAmB;wBACnB,cAAc;wBACd,eAAe;wBACf,kBAAkB;wBAClB,wBAAwB;AAC3B,qBAAA;AACD,oBAAA,OAAO,EAAE;wBACL,eAAe;AAClB,qBAAA;AACJ,iBAAA,CAAA;;;AClBD;MAQa,mBAAmB,CAAA;IAiB5B,WACY,CAAA,cAA8B,EAC9B,aAA4B,EAAA;QAD5B,IAAc,CAAA,cAAA,GAAd,cAAc,CAAgB;QAC9B,IAAa,CAAA,aAAA,GAAb,aAAa,CAAe;QAjBxC,IAA2B,CAAA,2BAAA,GAAG,2BAA2B,CAAC;QAC1D,IAAc,CAAA,cAAA,GAAG,eAAe,CAAC;QAEjC,IAAa,CAAA,aAAA,GAAG,aAAa,CAAC;AAI9B,QAAA,IAAA,CAAA,WAAW,GAAG,CAAC,IAAI,UAAU,EAAE,CAAC,CAAC;QACjC,IAAY,CAAA,YAAA,GAAgB,IAAI,WAAW,CAAC,EAAE,EAAE,UAAU,CAAC,QAAQ,CAAC,CAAC;QAErE,IAAoB,CAAA,oBAAA,GAA2B,IAAI,sBAAsB,CAAC,CAAC,MAAM,CAAC,CAAC,CAAC;AAGpF,QAAA,IAAA,CAAA,UAAU,GAAG,IAAI,YAAY,EAAE,CAAC;KAK3B;IAEL,QAAQ,GAAA;QACJ,IAAI,CAAC,KAAK,GAAG,IAAI,CAAC,cAAc,CAAC,UAAU,CAAC,cAAc,CAAC,CAAC;QAC5D,IAAI,CAAC,QAAQ,GAAG,IAAI,CAAC,cAAc,CAAC,UAAU,CAAC,UAAU,CAAC,CAAC;QAE3D,IAAI,CAAC,uBAAuB,EAAE,CAAC;KAClC;IAEK,uBAAuB,GAAA;;AACzB,YAAA,IAAI,CAAC,WAAW,IAAkB,MAAM,IAAI,CAAC,aAAa,CAAC,uBAAuB,CAAC,IAAI,CAAC,KAAK,EAAE,IAAI,CAAC,CAAA,CAAC;YAErG,IAAI,CAAC,oBAAoB,CAAC,SAAS,GAAG,IAAI,CAAC,WAAW,CAAC;AACvD,YAAA,IAAI,CAAC,oBAAoB,CAAC,kBAAkB,EAAE,CAAC;YAE/C,IAAI,IAAI,CAAC,WAAW,IAAI,IAAI,CAAC,WAAW,CAAC,MAAM,GAAG,CAAC,EAAE;gBACjD,MAAM,iBAAiB,GAAG,IAAI,CAAC,WAAW,CAAC,CAAC,CAAC,CAAC,IAAI,CAAC;AAEnD,gBAAA,IAAI,iBAAiB,EAAE;AACnB,oBAAA,IAAI,CAAC,YAAY,CAAC,UAAU,CAAC,iBAAiB,CAAC,CAAC;AAChD,oBAAA,IAAI,CAAC,UAAU,CAAC,IAAI,EAAE,CAAC;AAC1B,iBAAA;AACJ,aAAA;SACJ,CAAA,CAAA;AAAA,KAAA;AAED,IAAA,QAAQ,CAAC,YAAY,EAAA;AACjB,QAAA,IAAI,CAAC,YAAY,CAAC,UAAU,CAAC,YAAY,CAAC,CAAC;AAC3C,QAAA,IAAI,CAAC,UAAU,CAAC,IAAI,EAAE,CAAC;KAC1B;;iHAhDQ,mBAAmB,EAAA,IAAA,EAAA,CAAA,EAAA,KAAA,EAAAR,IAAA,CAAA,cAAA,EAAA,EAAA,EAAA,KAAA,EAAAsB,aAAA,EAAA,CAAA,EAAA,MAAA,EAAA,EAAA,CAAA,eAAA,CAAA,SAAA,EAAA,CAAA,CAAA;AAAnB,mBAAA,CAAA,IAAA,GAAA,EAAA,CAAA,oBAAA,CAAA,EAAA,UAAA,EAAA,QAAA,EAAA,OAAA,EAAA,SAAA,EAAA,IAAA,EAAA,mBAAmB,8FClBhC,ktCAsBiB,EAAA,UAAA,EAAA,CAAA,EAAA,IAAA,EAAAP,IAAA,CAAA,YAAA,EAAA,QAAA,EAAA,gBAAA,EAAA,MAAA,EAAA,CAAA,OAAA,EAAA,YAAA,EAAA,YAAA,EAAA,oBAAA,EAAA,WAAA,CAAA,EAAA,QAAA,EAAA,CAAA,cAAA,CAAA,EAAA,EAAA,EAAA,IAAA,EAAA,EAAA,CAAA,SAAA,EAAA,QAAA,EAAA,YAAA,EAAA,MAAA,EAAA,CAAA,UAAA,EAAA,eAAA,EAAA,UAAA,CAAA,EAAA,QAAA,EAAA,CAAA,WAAA,CAAA,EAAA,EAAA,EAAA,IAAA,EAAAR,GAAA,CAAA,SAAA,EAAA,QAAA,EAAA,YAAA,EAAA,QAAA,EAAA,CAAA,WAAA,CAAA,EAAA,EAAA,EAAA,IAAA,EAAAU,IAAA,CAAA,wBAAA,EAAA,QAAA,EAAA,uBAAA,EAAA,MAAA,EAAA,CAAA,kBAAA,EAAA,MAAA,EAAA,WAAA,EAAA,cAAA,EAAA,qBAAA,EAAA,gCAAA,EAAA,kBAAA,EAAA,WAAA,EAAA,qBAAA,EAAA,4BAAA,EAAA,8BAAA,EAAA,uCAAA,EAAA,WAAA,EAAA,uBAAA,EAAA,0BAAA,EAAA,gCAAA,EAAA,iCAAA,EAAA,kCAAA,EAAA,uBAAA,EAAA,mCAAA,CAAA,EAAA,OAAA,EAAA,CAAA,WAAA,CAAA,EAAA,CAAA,EAAA,UAAA,EAAA,CAAA,EAAA,IAAA,EAAAF,IAAA,CAAA,QAAA,EAAA,QAAA,EAAA,WAAA,EAAA,EAAA,EAAA,IAAA,EAAAP,IAAA,CAAA,iBAAA,EAAA,QAAA,EAAA,wIAAA,EAAA,MAAA,EAAA,CAAA,UAAA,CAAA,EAAA,EAAA,EAAA,IAAA,EAAAA,IAAA,CAAA,eAAA,EAAA,QAAA,EAAA,2CAAA,EAAA,EAAA,EAAA,IAAA,EAAAA,IAAA,CAAA,oBAAA,EAAA,QAAA,EAAA,eAAA,EAAA,MAAA,EAAA,CAAA,UAAA,EAAA,aAAA,EAAA,SAAA,CAAA,EAAA,OAAA,EAAA,CAAA,eAAA,CAAA,EAAA,QAAA,EAAA,CAAA,QAAA,CAAA,EAAA,EAAA,EAAA,IAAA,EAAAC,GAAA,CAAA,IAAA,EAAA,QAAA,EAAA,QAAA,EAAA,MAAA,EAAA,CAAA,MAAA,EAAA,UAAA,EAAA,UAAA,CAAA,EAAA,EAAA,EAAA,IAAA,EAAAA,GAAA,CAAA,OAAA,EAAA,QAAA,EAAA,kBAAA,EAAA,MAAA,EAAA,CAAA,SAAA,EAAA,cAAA,EAAA,eAAA,CAAA,EAAA,EAAA,EAAA,IAAA,EAAAM,IAAA,CAAA,QAAA,EAAA,QAAA,EAAA,WAAA,EAAA,MAAA,EAAA,CAAA,IAAA,CAAA,EAAA,CAAA,EAAA,KAAA,EAAA,EAAA,OAAA,EAAAN,GAAA,CAAA,SAAA,EAAA,WAAA,EAAAA,GAAA,CAAA,aAAA,EAAA,EAAA,CAAA,CAAA;4FDJJ,mBAAmB,EAAA,UAAA,EAAA,CAAA;kBAN/B,SAAS;AAAC,YAAA,IAAA,EAAA,CAAA;AACP,oBAAA,QAAQ,EAAE,iBAAiB;AAC3B,oBAAA,WAAW,EAAE,8BAA8B;AAC3C,oBAAA,MAAM,EAAE,EACP;AACJ,iBAAA,CAAA;gIAgBG,UAAU,EAAA,CAAA;sBADT,MAAM;;;MEHE,gBAAgB,CAAA;;8GAAhB,gBAAgB,EAAA,IAAA,EAAA,EAAA,EAAA,MAAA,EAAA,EAAA,CAAA,eAAA,CAAA,QAAA,EAAA,CAAA,CAAA;+GAAhB,gBAAgB,EAAA,YAAA,EAAA,CAfrB,mBAAmB,CAAA,EAAA,OAAA,EAAA,CAGnB,YAAY;QACZ,WAAW;QACX,mBAAmB;QACnB,cAAc;QACd,eAAe;QACf,kBAAkB;AAClB,QAAA,wBAAwB,aAGxB,mBAAmB,CAAA,EAAA,CAAA,CAAA;AAGd,gBAAA,CAAA,IAAA,GAAA,EAAA,CAAA,mBAAA,CAAA,EAAA,UAAA,EAAA,QAAA,EAAA,OAAA,EAAA,SAAA,EAAA,QAAA,EAAA,EAAA,EAAA,IAAA,EAAA,gBAAgB,EAbhB,OAAA,EAAA,CAAA;YACL,YAAY;YACZ,WAAW;YACX,mBAAmB;YACnB,cAAc;YACd,eAAe;YACf,kBAAkB;YAClB,wBAAwB;AAC3B,SAAA,CAAA,EAAA,CAAA,CAAA;4FAKQ,gBAAgB,EAAA,UAAA,EAAA,CAAA;kBAjB5B,QAAQ;AAAC,YAAA,IAAA,EAAA,CAAA;AACN,oBAAA,YAAY,EAAE;wBACV,mBAAmB;AACtB,qBAAA;AACD,oBAAA,OAAO,EAAE;wBACL,YAAY;wBACZ,WAAW;wBACX,mBAAmB;wBACnB,cAAc;wBACd,eAAe;wBACf,kBAAkB;wBAClB,wBAAwB;AAC3B,qBAAA;AACD,oBAAA,OAAO,EAAE;wBACL,mBAAmB;AACtB,qBAAA;AACJ,iBAAA,CAAA;;;MCjBY,cAAc,CAAA;IAEvB,WACY,CAAA,IAAgB,EACO,WAAgB,EAAA;QADvC,IAAI,CAAA,IAAA,GAAJ,IAAI,CAAY;QACO,IAAW,CAAA,WAAA,GAAX,WAAW,CAAK;KAC9C;IAEL,oBAAoB,CAAC,KAAK,EAAE,WAAW,EAAA;AACnC,QAAA,OAAO,IAAI,CAAC,IAAI,CAAC,GAAG,CAAU,GAAG,IAAI,CAAC,WAAW,CAAC,kBAAkB,CAAiB,cAAA,EAAA,KAAK,eAAe,WAAW,CAAA,UAAA,CAAY,CAAC,CAAC;KACrI;;AATQ,cAAA,CAAA,IAAA,GAAA,EAAA,CAAA,kBAAA,CAAA,EAAA,UAAA,EAAA,QAAA,EAAA,OAAA,EAAA,SAAA,EAAA,QAAA,EAAA,EAAA,EAAA,IAAA,EAAA,cAAc,4CAIX,aAAa,EAAA,CAAA,EAAA,MAAA,EAAA,EAAA,CAAA,eAAA,CAAA,UAAA,EAAA,CAAA,CAAA;AAJhB,cAAA,CAAA,KAAA,GAAA,EAAA,CAAA,qBAAA,CAAA,EAAA,UAAA,EAAA,QAAA,EAAA,OAAA,EAAA,SAAA,EAAA,QAAA,EAAA,EAAA,EAAA,IAAA,EAAA,cAAc,cAHX,MAAM,EAAA,CAAA,CAAA;4FAGT,cAAc,EAAA,UAAA,EAAA,CAAA;kBAJ1B,UAAU;AAAC,YAAA,IAAA,EAAA,CAAA;AACR,oBAAA,UAAU,EAAE,MAAM;AACrB,iBAAA,CAAA;;0BAMQ,MAAM;2BAAC,aAAa,CAAA;;;MCLhB,WAAW,CAAA;AAEpB,IAAA,WAAA,CACY,cAA8B,EAAA;QAA9B,IAAc,CAAA,cAAA,GAAd,cAAc,CAAgB;KACrC;IAEC,oBAAoB,CAAC,KAAK,EAAE,WAAW,EAAA;;AACzC,YAAA,IAAI,KAAc,CAAC;YACnB,IAAI;AACA,gBAAA,KAAK,GAAG,MAAM,IAAI,CAAC,cAAc,CAAC,oBAAoB,CAAC,KAAK,EAAE,WAAW,CAAC,CAAC,SAAS,EAAE,CAAC;AAEvF,gBAAA,IAAI,KAAK,EAAE;AACP,oBAAA,OAAO,KAAK,CAAC;AAChB,iBAAA;AAAM,qBAAA;AACH,oBAAA,OAAO,CAAC,IAAI,IAAI,EAAE,CAAC,CAAC;AACvB,iBAAA;AACJ,aAAA;AAAC,YAAA,OAAO,KAAK,EAAE;AACZ,gBAAA,OAAO,CAAC,KAAK,CAAC,SAAS,EAAE,KAAK,CAAC,CAAC;AAChC,gBAAA,OAAO,CAAC,IAAI,IAAI,EAAE,CAAC,CAAC;AACvB,aAAA;SACJ,CAAA,CAAA;AAAA,KAAA;;yGApBQ,WAAW,EAAA,IAAA,EAAA,CAAA,EAAA,KAAA,EAAAc,cAAA,EAAA,CAAA,EAAA,MAAA,EAAA,EAAA,CAAA,eAAA,CAAA,UAAA,EAAA,CAAA,CAAA;AAAX,WAAA,CAAA,KAAA,GAAA,EAAA,CAAA,qBAAA,CAAA,EAAA,UAAA,EAAA,QAAA,EAAA,OAAA,EAAA,SAAA,EAAA,QAAA,EAAA,EAAA,EAAA,IAAA,EAAA,WAAW,cAHR,MAAM,EAAA,CAAA,CAAA;4FAGT,WAAW,EAAA,UAAA,EAAA,CAAA;kBAJvB,UAAU;AAAC,YAAA,IAAA,EAAA,CAAA;AACR,oBAAA,UAAU,EAAE,MAAM;AACrB,iBAAA,CAAA;;;ACED;MASa,aAAa,CAAA;IAqBtB,WACY,CAAA,cAA8B,EAC9B,WAAwB,EAAA;QADxB,IAAc,CAAA,cAAA,GAAd,cAAc,CAAgB;QAC9B,IAAW,CAAA,WAAA,GAAX,WAAW,CAAa;QAlBpC,IAAe,CAAA,eAAA,GAAG,eAAe,CAAC;QAClC,IAA2B,CAAA,2BAAA,GAAG,2BAA2B,CAAC;QAE1D,IAAa,CAAA,aAAA,GAAG,aAAa,CAAC;AAG9B,QAAA,IAAA,CAAA,UAAU,GAAG,IAAI,YAAY,EAAE,CAAC;AAIhC,QAAA,IAAA,CAAA,KAAK,GAAG,CAAC,IAAI,IAAI,EAAE,CAAC,CAAC;AAErB,QAAA,IAAA,CAAA,cAAc,GAAgB,IAAI,WAAW,CAAC,EAAE,EAAE,CAAC,UAAU,CAAC,QAAQ,CAAC,CAAC,CAAC;QAEzE,IAAc,CAAA,cAAA,GAA2B,IAAI,sBAAsB,CAAC,CAAC,MAAM,CAAC,CAAC,CAAC;KAKzE;IAEL,QAAQ,GAAA;QACJ,IAAI,CAAC,KAAK,GAAG,IAAI,CAAC,cAAc,CAAC,UAAU,CAAC,cAAc,CAAC,CAAC;KAC/D;AAED,IAAA,WAAW,CAAC,OAAsB,EAAA;QAC9B,IAAI,IAAI,CAAC,mBAAmB,EAAE;YAC1B,IAAI,OAAO,CAAC,mBAAmB,EAAE;AAC7B,gBAAA,IAAI,CAAC,oBAAoB,CAAC,IAAI,CAAC,mBAAmB,CAAC,CAAC;AACvD,aAAA;AACJ,SAAA;KACJ;AAEK,IAAA,oBAAoB,CAAC,WAAW,EAAA;;AAClC,YAAA,IAAI,CAAC,KAAK,IAAY,MAAM,IAAI,CAAC,WAAW,CAAC,oBAAoB,CAAC,IAAI,CAAC,KAAK,EAAE,WAAW,CAAC,CAAA,CAAC;YAE3F,IAAI,CAAC,cAAc,CAAC,SAAS,GAAG,IAAI,CAAC,KAAK,CAAC;AAC3C,YAAA,IAAI,CAAC,cAAc,CAAC,kBAAkB,EAAE,CAAC;SAC5C,CAAA,CAAA;AAAA,KAAA;AAED,IAAA,UAAU,CAAC,YAAY,EAAA;AACnB,QAAA,IAAI,CAAC,cAAc,CAAC,UAAU,CAAC,YAAY,CAAC,CAAC;AAC7C,QAAA,IAAI,CAAC,UAAU,CAAC,IAAI,EAAE,CAAC;KAC1B;;2GAhDQ,aAAa,EAAA,IAAA,EAAA,CAAA,EAAA,KAAA,EAAAvB,IAAA,CAAA,cAAA,EAAA,EAAA,EAAA,KAAA,EAAAwB,WAAA,EAAA,CAAA,EAAA,MAAA,EAAA,EAAA,CAAA,eAAA,CAAA,SAAA,EAAA,CAAA,CAAA;AAAb,aAAA,CAAA,IAAA,GAAA,EAAA,CAAA,oBAAA,CAAA,EAAA,UAAA,EAAA,QAAA,EAAA,OAAA,EAAA,SAAA,EAAA,IAAA,EAAA,aAAa,oKCnB1B,q5CA6BM,EAAA,UAAA,EAAA,CAAA,EAAA,IAAA,EAAAT,IAAA,CAAA,YAAA,EAAA,QAAA,EAAA,gBAAA,EAAA,MAAA,EAAA,CAAA,OAAA,EAAA,YAAA,EAAA,YAAA,EAAA,oBAAA,EAAA,WAAA,CAAA,EAAA,QAAA,EAAA,CAAA,cAAA,CAAA,EAAA,EAAA,EAAA,IAAA,EAAA,EAAA,CAAA,SAAA,EAAA,QAAA,EAAA,YAAA,EAAA,MAAA,EAAA,CAAA,UAAA,EAAA,eAAA,EAAA,UAAA,CAAA,EAAA,QAAA,EAAA,CAAA,WAAA,CAAA,EAAA,EAAA,EAAA,IAAA,EAAAR,GAAA,CAAA,SAAA,EAAA,QAAA,EAAA,YAAA,EAAA,QAAA,EAAA,CAAA,WAAA,CAAA,EAAA,EAAA,EAAA,IAAA,EAAAU,IAAA,CAAA,wBAAA,EAAA,QAAA,EAAA,uBAAA,EAAA,MAAA,EAAA,CAAA,kBAAA,EAAA,MAAA,EAAA,WAAA,EAAA,cAAA,EAAA,qBAAA,EAAA,gCAAA,EAAA,kBAAA,EAAA,WAAA,EAAA,qBAAA,EAAA,4BAAA,EAAA,8BAAA,EAAA,uCAAA,EAAA,WAAA,EAAA,uBAAA,EAAA,0BAAA,EAAA,gCAAA,EAAA,iCAAA,EAAA,kCAAA,EAAA,uBAAA,EAAA,mCAAA,CAAA,EAAA,OAAA,EAAA,CAAA,WAAA,CAAA,EAAA,CAAA,EAAA,UAAA,EAAA,CAAA,EAAA,IAAA,EAAAF,IAAA,CAAA,QAAA,EAAA,QAAA,EAAA,WAAA,EAAA,EAAA,EAAA,IAAA,EAAAP,IAAA,CAAA,iBAAA,EAAA,QAAA,EAAA,wIAAA,EAAA,MAAA,EAAA,CAAA,UAAA,CAAA,EAAA,EAAA,EAAA,IAAA,EAAAA,IAAA,CAAA,eAAA,EAAA,QAAA,EAAA,2CAAA,EAAA,EAAA,EAAA,IAAA,EAAAA,IAAA,CAAA,oBAAA,EAAA,QAAA,EAAA,eAAA,EAAA,MAAA,EAAA,CAAA,UAAA,EAAA,aAAA,EAAA,SAAA,CAAA,EAAA,OAAA,EAAA,CAAA,eAAA,CAAA,EAAA,QAAA,EAAA,CAAA,QAAA,CAAA,EAAA,EAAA,EAAA,IAAA,EAAAC,GAAA,CAAA,IAAA,EAAA,QAAA,EAAA,QAAA,EAAA,MAAA,EAAA,CAAA,MAAA,EAAA,UAAA,EAAA,UAAA,CAAA,EAAA,EAAA,EAAA,IAAA,EAAAA,GAAA,CAAA,OAAA,EAAA,QAAA,EAAA,kBAAA,EAAA,MAAA,EAAA,CAAA,SAAA,EAAA,cAAA,EAAA,eAAA,CAAA,EAAA,EAAA,EAAA,IAAA,EAAAM,IAAA,CAAA,QAAA,EAAA,QAAA,EAAA,WAAA,EAAA,MAAA,EAAA,CAAA,IAAA,CAAA,EAAA,CAAA,EAAA,KAAA,EAAA,EAAA,OAAA,EAAAN,GAAA,CAAA,SAAA,EAAA,EAAA,CAAA,CAAA;4FDVO,aAAa,EAAA,UAAA,EAAA,CAAA;kBAPzB,SAAS;AAAC,YAAA,IAAA,EAAA,CAAA;AACP,oBAAA,QAAQ,EAAE,UAAU;AACpB,oBAAA,WAAW,EAAE,uBAAuB;AACpC,oBAAA,MAAM,EAAE,EACP;AACJ,iBAAA,CAAA;8HAKG,mBAAmB,EAAA,CAAA;sBADlB,KAAK;gBASN,UAAU,EAAA,CAAA;sBADT,MAAM;;;MEAE,UAAU,CAAA;;wGAAV,UAAU,EAAA,IAAA,EAAA,EAAA,EAAA,MAAA,EAAA,EAAA,CAAA,eAAA,CAAA,QAAA,EAAA,CAAA,CAAA;yGAAV,UAAU,EAAA,YAAA,EAAA,CAhBf,aAAa,CAAA,EAAA,OAAA,EAAA,CAGb,YAAY;QACZ,WAAW;QACX,mBAAmB;QACnB,cAAc;QACd,eAAe;QACf,kBAAkB;AAClB,QAAA,wBAAwB,aAGxB,aAAa,CAAA,EAAA,CAAA,CAAA;AAIR,UAAA,CAAA,IAAA,GAAA,EAAA,CAAA,mBAAA,CAAA,EAAA,UAAA,EAAA,QAAA,EAAA,OAAA,EAAA,SAAA,EAAA,QAAA,EAAA,EAAA,EAAA,IAAA,EAAA,UAAU,EAdV,OAAA,EAAA,CAAA;YACL,YAAY;YACZ,WAAW;YACX,mBAAmB;YACnB,cAAc;YACd,eAAe;YACf,kBAAkB;YAClB,wBAAwB;AAC3B,SAAA,CAAA,EAAA,CAAA,CAAA;4FAMQ,UAAU,EAAA,UAAA,EAAA,CAAA;kBAlBtB,QAAQ;AAAC,YAAA,IAAA,EAAA,CAAA;AACN,oBAAA,YAAY,EAAE;wBACV,aAAa;AAChB,qBAAA;AACD,oBAAA,OAAO,EAAE;wBACL,YAAY;wBACZ,WAAW;wBACX,mBAAmB;wBACnB,cAAc;wBACd,eAAe;wBACf,kBAAkB;wBAClB,wBAAwB;AAC3B,qBAAA;AACD,oBAAA,OAAO,EAAE;wBACL,aAAa;AAChB,qBAAA;AACJ,iBAAA,CAAA;;;ACXD;MAQa,aAAa,CAAA;IAsBtB,WACY,CAAA,cAA8B,EAC9B,WAAwB,EACxB,oBAA0C,EAC1C,gBAAkC,EAClC,gBAAkC,EAAA;QAJlC,IAAc,CAAA,cAAA,GAAd,cAAc,CAAgB;QAC9B,IAAW,CAAA,WAAA,GAAX,WAAW,CAAa;QACxB,IAAoB,CAAA,oBAAA,GAApB,oBAAoB,CAAsB;QAC1C,IAAgB,CAAA,gBAAA,GAAhB,gBAAgB,CAAkB;QAClC,IAAgB,CAAA,gBAAA,GAAhB,gBAAgB,CAAkB;QA1B9C,IAAc,CAAA,cAAA,GAAG,eAAe,CAAC;AAkBjC,QAAA,IAAA,CAAA,iBAAiB,GAAG,CAAC,IAAI,sBAAsB,EAAE,CAAC,CAAC;AACnD,QAAA,IAAA,CAAA,WAAW,GAAG,IAAI,UAAU,EAAE,CAAC;KAQ1B;IAEL,QAAQ,GAAA;QACJ,IAAI,CAAC,KAAK,GAAG,IAAI,CAAC,cAAc,CAAC,UAAU,CAAC,cAAc,CAAC,CAAC;QAC5D,IAAI,CAAC,gBAAgB,GAAG,IAAI,CAAC,cAAc,CAAC,UAAU,CAAC,kBAAkB,CAAC,CAAC;AAE3E,QAAA,IAAI,IAAI,CAAC,gBAAgB,IAAI,gBAAgB,CAAC,aAAa,EAAE;AACzD,YAAA,IAAI,CAAC,KAAK,GAAG,QAAQ,CAAC;AACtB,YAAA,IAAI,CAAC,IAAI,GAAG,MAAM,CAAC;AACnB,YAAA,IAAI,CAAC,QAAQ,GAAG,eAAe,CAAC;AAChC,YAAA,IAAI,CAAC,gBAAgB,GAAG,SAAS,CAAC;AAClC,YAAA,IAAI,CAAC,4BAA4B,GAAG,SAAS,CAAC;AAC9C,YAAA,IAAI,CAAC,gBAAgB,GAAG,SAAS,CAAC;AACrC,SAAA;AAAM,aAAA,IAAI,IAAI,CAAC,gBAAgB,IAAI,gBAAgB,CAAC,YAAY,EAAE;AAC/D,YAAA,IAAI,CAAC,KAAK,GAAG,OAAO,CAAC;AACrB,YAAA,IAAI,CAAC,IAAI,GAAG,YAAY,CAAC;AACzB,YAAA,IAAI,CAAC,QAAQ,GAAG,iBAAiB,CAAC;AAClC,YAAA,IAAI,CAAC,gBAAgB,GAAG,SAAS,CAAC;AAClC,YAAA,IAAI,CAAC,4BAA4B,GAAG,SAAS,CAAC;AAC9C,YAAA,IAAI,CAAC,gBAAgB,GAAG,SAAS,CAAC;AACrC,SAAA;AAED,QAAA,IAAI,CAAC,mBAAmB,CAAC,oBAAoB,CAAC,WAAW,CAAC;aACrD,IAAI,CAAC,GAAG,IAAG;AACR,YAAA,IAAI,CAAC,gBAAgB,GAAG,GAAG,CAAC;AAChC,SAAC,CAAC,CAAA;AAEN,QAAA,IAAI,CAAC,mBAAmB,CAAC,oBAAoB,CAAC,aAAa,CAAC;aACvD,IAAI,CAAC,GAAG,IAAG;;AACR,YAAA,IAAI,CAAC,uBAAuB,GAAG,GAAG,CAAC;YACnC,MAAM,qBAAqB,GAAG,CAAA,EAAA,GAAA,CAAA,EAAA,GAAA,MAAA,CAAA,EAAA,GAAA,IAAI,CAAC,uBAAuB,MAAA,IAAA,IAAA,EAAA,KAAA,KAAA,CAAA,GAAA,KAAA,CAAA,GAAA,EAAA,CAAG,CAAC,CAAC,MAAA,IAAA,IAAA,EAAA,KAAA,KAAA,CAAA,GAAA,KAAA,CAAA,GAAA,EAAA,CAAG,MAAM,CAAC,MAAA,IAAA,IAAA,EAAA,KAAA,KAAA,CAAA,GAAA,KAAA,CAAA,GAAA,EAAA,CAAG,CAAC,CAAC,MAAA,IAAA,IAAA,EAAA,KAAA,KAAA,CAAA,GAAA,KAAA,CAAA,GAAA,EAAA,CAAG,OAAO,CAAC,CAAC;YAE1F,IAAI,CAAC,0BAA0B,GAAG;AAC9B,gBAAA,OAAO,EAAE,qBAAqB;AAC9B,gBAAA,UAAU,EAAE,SAAS;gBACrB,KAAK,EAAE,CAAA,EAAA,GAAA,CAAA,EAAA,GAAA,IAAI,CAAC,uBAAuB,MAAG,IAAA,IAAA,EAAA,KAAA,KAAA,CAAA,GAAA,KAAA,CAAA,GAAA,EAAA,CAAA,CAAC,CAAC,MAAA,IAAA,IAAA,EAAA,KAAA,KAAA,CAAA,GAAA,KAAA,CAAA,GAAA,EAAA,CAAE,IAAI;AAC9C,gBAAA,SAAS,EAAE,IAAI;AACf,gBAAA,MAAM,EAAE,EAAE;AACV,gBAAA,KAAK,EAAE,CAAC;AACR,gBAAA,mBAAmB,EAAE,IAAI;AACzB,gBAAA,gBAAgB,EAAE,EAAE;gBACpB,gBAAgB,EAAE,IAAI,CAAC,gBAAgB;gBACvC,4BAA4B,EAAE,IAAI,CAAC,4BAA4B;gBAC/D,gBAAgB,EAAE,IAAI,CAAC,gBAAgB;AACvC,gBAAA,cAAc,EAAE,KAAK;AACrB,gBAAA,gBAAgB,EAAE,CAAC;AACnB,gBAAA,YAAY,EAAE,KAAK;AACnB,gBAAA,cAAc,EAAE,KAAK;AACrB,gBAAA,aAAa,EAAE,KAAK;AACpB,gBAAA,iBAAiB,EAAE,GAAG;AACtB,gBAAA,eAAe,EAAE,SAAS;aAC7B,CAAA;AACL,SAAC,CAAC,CAAA;AAEN,QAAA,IAAI,CAAC,mBAAmB,CAAC,oBAAoB,CAAC,YAAY,CAAC;aACtD,IAAI,CAAC,GAAG,IAAG;AACR,YAAA,IAAI,CAAC,sBAAsB,GAAG,GAAG,CAAC;AACtC,SAAC,CAAC,CAAA;QAEN,IAAI,CAAC,2BAA2B,EAAE,CAAC;QACnC,IAAI,CAAC,yBAAyB,EAAE,CAAC;QACjC,IAAI,CAAC,mBAAmB,EAAE,CAAC;KAC9B;AAEK,IAAA,mBAAmB,CAAC,aAAa,EAAA;;YACnC,IAAI;AACA,gBAAA,MAAM,WAAW,GAAG,IAAI,oBAAoB,EAAE,CAAC;AAE/C,gBAAA,IAAI,aAAa,IAAI,oBAAoB,CAAC,WAAW,EAAE;AACnD,oBAAA,WAAW,CAAC,SAAS,GAAG,IAAI,CAAC,WAAW,CAAC,gBAAgB,CAAC,oBAAoB,CAAC,WAAW,CAAC,CAAC;AAC5F,oBAAA,WAAW,CAAC,QAAQ,GAAG,OAAO,CAAC;AAClC,iBAAA;AAAM,qBAAA,IAAI,aAAa,IAAI,oBAAoB,CAAC,aAAa,EAAE;AAC5D,oBAAA,WAAW,CAAC,SAAS,GAAG,IAAI,CAAC,WAAW,CAAC,gBAAgB,CAAC,oBAAoB,CAAC,aAAa,CAAC,CAAC;AAC9F,oBAAA,WAAW,CAAC,QAAQ,GAAG,SAAS,CAAC;AACpC,iBAAA;AAAM,qBAAA,IAAI,aAAa,IAAI,oBAAoB,CAAC,YAAY,EAAE;AAC3D,oBAAA,WAAW,CAAC,SAAS,GAAG,IAAI,CAAC,WAAW,CAAC,gBAAgB,CAAC,oBAAoB,CAAC,YAAY,CAAC,CAAC;AAC7F,oBAAA,WAAW,CAAC,QAAQ,GAAG,QAAQ,CAAC;AACnC,iBAAA;AAED,gBAAA,WAAW,CAAC,OAAO,GAAG,IAAI,CAAC,WAAW,CAAC,cAAc,CAAC,oBAAoB,CAAC,YAAY,CAAC,CAAC;gBACzF,WAAW,CAAC,MAAM,GAAG;AACjB,oBAAA;wBACI,IAAI,EAAE,IAAI,CAAC,QAAQ;AACnB,wBAAA,KAAK,EAAE,KAAK;AACZ,wBAAA,GAAG,EAAE,KAAK;AACV,wBAAA,cAAc,EAAE,QAAQ;AACxB,wBAAA,cAAc,EAAE,KAAK;AACxB,qBAAA;iBACJ,CAAC;gBACF,WAAW,CAAC,aAAa,EAAE,CAAC;AAC5B,gBAAA,WAAW,CAAC,QAAQ,GAAG,IAAI,CAAC;AAE5B,gBAAA,MAAM,MAAM,GAAG,MAAM,IAAI,CAAC,oBAAoB,CAAC,gBAAgB,CAAC,IAAI,CAAC,KAAK,EAAE,WAAW,CAAC,CAAC;AACzF,gBAAA,OAAO,MAAM,CAAC;AACjB,aAAA;AAAC,YAAA,OAAO,KAAK,EAAE;gBACZ,OAAO,CAAC,KAAK,CAAC,CAAA,kCAAA,EAAqC,aAAa,CAAG,CAAA,CAAA,EAAE,KAAK,CAAC,CAAC;AAC/E,aAAA;SACJ,CAAA,CAAA;AAAA,KAAA;IAEK,2BAA2B,GAAA;;;YAC7B,IAAI;AACA,gBAAA,IAAI,WAAW,GAAG,IAAI,oBAAoB,EAAE,CAAC;AAE7C,gBAAA,WAAW,CAAC,SAAS,GAAG,IAAI,CAAC,WAAW,CAAC,gBAAgB,CAAC,oBAAoB,CAAC,aAAa,CAAC,CAAC;AAC9F,gBAAA,WAAW,CAAC,OAAO,GAAG,IAAI,CAAC,WAAW,CAAC,cAAc,CAAC,oBAAoB,CAAC,YAAY,CAAC,CAAC;AACzF,gBAAA,WAAW,CAAC,QAAQ,GAAG,SAAS,CAAC;gBACjC,WAAW,CAAC,MAAM,GAAG;AACjB,oBAAA;wBACI,IAAI,EAAE,IAAI,CAAC,QAAQ;AACnB,wBAAA,KAAK,EAAE,KAAK;AACZ,wBAAA,GAAG,EAAE,KAAK;AACV,wBAAA,cAAc,EAAE,MAAM;AACtB,wBAAA,cAAc,EAAE,KAAK;AACxB,qBAAA;iBACJ,CAAC;gBACF,WAAW,CAAC,aAAa,EAAE,CAAC;AAC5B,gBAAA,WAAW,CAAC,QAAQ,GAAG,IAAI,CAAC;AAE5B,gBAAA,MAAM,uBAAuB,GAAG,MAAM,IAAI,CAAC,oBAAoB,CAAC,gBAAgB,CAAC,IAAI,CAAC,KAAK,EAAE,WAAW,CAAC,CAAC;gBAC1G,MAAM,uBAAuB,GAAG,CAAA,EAAA,GAAA,CAAA,EAAA,GAAA,MAAA,uBAAuB,KAAA,IAAA,IAAvB,uBAAuB,KAAA,KAAA,CAAA,GAAA,KAAA,CAAA,GAAvB,uBAAuB,CAAG,CAAC,CAAC,MAAA,IAAA,IAAA,EAAA,KAAA,KAAA,CAAA,GAAA,KAAA,CAAA,GAAA,EAAA,CAAG,MAAM,CAAC,MAAA,IAAA,IAAA,EAAA,KAAA,KAAA,CAAA,GAAA,KAAA,CAAA,GAAA,EAAA,CAAG,CAAC,CAAC,MAAA,IAAA,IAAA,EAAA,KAAA,KAAA,CAAA,GAAA,KAAA,CAAA,GAAA,EAAA,CAAG,OAAO,CAAC,CAAC;gBAEvF,IAAI,CAAC,4BAA4B,GAAG;AAChC,oBAAA,OAAO,EAAE,uBAAuB;AAChC,oBAAA,UAAU,EAAE,SAAS;oBACrB,KAAK,EAAE,CAAA,EAAA,GAAA,uBAAuB,KAAvB,IAAA,IAAA,uBAAuB,KAAvB,KAAA,CAAA,GAAA,KAAA,CAAA,GAAA,uBAAuB,CAAG,CAAC,CAAC,MAAA,IAAA,IAAA,EAAA,KAAA,KAAA,CAAA,GAAA,KAAA,CAAA,GAAA,EAAA,CAAE,IAAI;AACzC,oBAAA,SAAS,EAAE,IAAI;AACf,oBAAA,MAAM,EAAE,EAAE;AACV,oBAAA,KAAK,EAAE,CAAC;AACR,oBAAA,mBAAmB,EAAE,IAAI;AACzB,oBAAA,gBAAgB,EAAE,EAAE;oBACpB,gBAAgB,EAAE,IAAI,CAAC,gBAAgB;oBACvC,4BAA4B,EAAE,IAAI,CAAC,4BAA4B;oBAC/D,gBAAgB,EAAE,IAAI,CAAC,gBAAgB;AACvC,oBAAA,cAAc,EAAE,KAAK;AACrB,oBAAA,gBAAgB,EAAE,CAAC;AACnB,oBAAA,YAAY,EAAE,KAAK;AACnB,oBAAA,cAAc,EAAE,KAAK;AACrB,oBAAA,aAAa,EAAE,KAAK;AACpB,oBAAA,iBAAiB,EAAE,GAAG;AACtB,oBAAA,eAAe,EAAE,SAAS;iBAC7B,CAAA;AACJ,aAAA;AAAC,YAAA,OAAO,KAAK,EAAE;AACZ,gBAAA,OAAO,CAAC,KAAK,CAAC,wCAAwC,EAAE,KAAK,CAAC,CAAC;AAClE,aAAA;;AACJ,KAAA;IAED,yBAAyB,GAAA;AACrB,QAAA,IAAI,WAAW,GAAG,IAAI,oBAAoB,EAAE,CAAC;AAE7C,QAAA,WAAW,CAAC,SAAS,GAAG,IAAI,CAAC,WAAW,CAAC,gBAAgB,CAAC,oBAAoB,CAAC,aAAa,CAAC,CAAC;AAC9F,QAAA,WAAW,CAAC,OAAO,GAAG,IAAI,CAAC,WAAW,CAAC,cAAc,CAAC,oBAAoB,CAAC,YAAY,CAAC,CAAC;AACzF,QAAA,WAAW,CAAC,QAAQ,GAAG,SAAS,CAAC;QACjC,WAAW,CAAC,MAAM,GAAG;AACjB,YAAA;gBACI,IAAI,EAAE,IAAI,CAAC,QAAQ;AACnB,gBAAA,KAAK,EAAE,KAAK;AACZ,gBAAA,GAAG,EAAE,KAAK;AACV,gBAAA,cAAc,EAAE,MAAM;AACtB,gBAAA,cAAc,EAAE,KAAK;AACxB,aAAA;SACJ,CAAC;QACF,WAAW,CAAC,aAAa,EAAE,CAAC;AAC5B,QAAA,WAAW,CAAC,QAAQ,GAAG,KAAK,CAAC;QAE7B,IAAI,CAAC,gBAAgB,CAAC,yBAAyB,CAAC,IAAI,CAAC,KAAK,EAAE,WAAW,CAAC;AACnE,aAAA,SAAS,CAAC,CAAC,eAAyC,KAAI;AACrD,YAAA,IAAI,CAAC,iBAAiB,GAAG,eAAe,CAAC;SAC5C,EACG,KAAK,IAAG;AACJ,YAAA,OAAO,CAAC,GAAG,CAAC,wCAAwC,EAAE,KAAK,CAAC,CAAC;AACjE,SAAC,CAAC,CAAC;KACd;IAED,wBAAwB,GAAA;;QACpB,IAAI,CAAA,MAAA,IAAI,CAAC,iBAAiB,MAAE,IAAA,IAAA,EAAA,KAAA,KAAA,CAAA,GAAA,KAAA,CAAA,GAAA,EAAA,CAAA,MAAM,KAAI,CAAC,EAAE;AACrC,YAAA,OAAO,IAAI,CAAC;AACf,SAAA;AACD,QAAA,OAAO,CAAA,EAAA,GAAA,IAAI,CAAC,iBAAiB,MAAE,IAAA,IAAA,EAAA,KAAA,KAAA,CAAA,GAAA,KAAA,CAAA,GAAA,EAAA,CAAA,MAAM,CAAC,CAAC,SAAS,EAAE,aAAa,KAAI;AAC/D,YAAA,OAAO,aAAa,CAAC,KAAK,GAAG,SAAS,CAAC,KAAK,GAAG,aAAa,GAAG,SAAS,CAAC;SAC5E,EAAE,MAAA,IAAI,CAAC,iBAAiB,MAAG,IAAA,IAAA,EAAA,KAAA,KAAA,CAAA,GAAA,KAAA,CAAA,GAAA,EAAA,CAAA,CAAC,CAAC,CAAC,CAAC;KACnC;AAED,IAAA,iBAAiB,CAAC,MAAM,EAAA;AACpB,QAAA,MAAM,kBAAkB,GAAG,IAAI,CAAC,wBAAwB,EAAE,CAAC;QAC3D,IAAI,CAAC,kBAAkB,EAAE;AACrB,YAAA,OAAO,CAAC,CAAC;AACZ,SAAA;AACD,QAAA,MAAM,QAAQ,GAAG,CAAC,MAAM,CAAC,KAAK,GAAG,kBAAkB,CAAC,KAAK,IAAI,GAAG,CAAC;AACjE,QAAA,OAAO,QAAQ,CAAC;KACnB;IAED,mBAAmB,GAAA;QACf,IAAI,CAAC,gBAAgB,CAAC,mBAAmB,CAAC,IAAI,CAAC,KAAK,CAAC;AAChD,aAAA,SAAS,CAAC,CAAC,SAAqB,KAAI;AACjC,YAAA,IAAI,CAAC,WAAW,GAAG,SAAS,CAAC;SAChC,EACG,KAAK,IAAG;AACJ,YAAA,OAAO,CAAC,GAAG,CAAC,kCAAkC,EAAE,KAAK,CAAC,CAAC;AAC3D,SAAC,CAAC,CAAC;KACd;;2GAnOQ,aAAa,EAAA,IAAA,EAAA,CAAA,EAAA,KAAA,EAAAT,IAAA,CAAA,cAAA,EAAA,EAAA,EAAA,KAAA,EAAA,EAAA,CAAA,WAAA,EAAA,EAAA,EAAA,KAAA,EAAAyB,oBAAA,EAAA,EAAA,EAAA,KAAA,EAAAC,gBAAA,EAAA,EAAA,EAAA,KAAA,EAAAC,gBAAA,EAAA,CAAA,EAAA,MAAA,EAAA,EAAA,CAAA,eAAA,CAAA,SAAA,EAAA,CAAA,CAAA;AAAb,aAAA,CAAA,IAAA,GAAA,EAAA,CAAA,oBAAA,CAAA,EAAA,UAAA,EAAA,QAAA,EAAA,OAAA,EAAA,SAAA,EAAA,IAAA,EAAA,aAAa,gDCxB1B,ouWAwNc,EAAA,MAAA,EAAA,CAAA,s2BAAA,CAAA,EAAA,UAAA,EAAA,CAAA,EAAA,IAAA,EAAAV,EAAA,CAAA,OAAA,EAAA,QAAA,EAAA,UAAA,EAAA,QAAA,EAAA,CAAA,SAAA,CAAA,EAAA,EAAA,EAAA,IAAA,EAAA,EAAA,CAAA,uBAAA,EAAA,QAAA,EAAA,iBAAA,EAAA,MAAA,EAAA,CAAA,MAAA,EAAA,OAAA,EAAA,oBAAA,EAAA,iBAAA,EAAA,6BAAA,EAAA,mBAAA,EAAA,kBAAA,EAAA,uBAAA,EAAA,mBAAA,EAAA,QAAA,EAAA,OAAA,EAAA,SAAA,EAAA,SAAA,EAAA,YAAA,EAAA,eAAA,EAAA,OAAA,EAAA,eAAA,EAAA,iBAAA,EAAA,YAAA,EAAA,qBAAA,EAAA,kBAAA,EAAA,kBAAA,EAAA,8BAAA,EAAA,oBAAA,EAAA,kBAAA,EAAA,kBAAA,EAAA,aAAA,EAAA,OAAA,EAAA,YAAA,EAAA,eAAA,EAAA,iBAAA,EAAA,gBAAA,EAAA,UAAA,EAAA,eAAA,EAAA,kBAAA,EAAA,oBAAA,EAAA,UAAA,EAAA,aAAA,EAAA,YAAA,EAAA,WAAA,EAAA,cAAA,EAAA,iBAAA,EAAA,mBAAA,EAAA,WAAA,EAAA,cAAA,EAAA,WAAA,EAAA,WAAA,EAAA,gBAAA,EAAA,iBAAA,EAAA,WAAA,EAAA,YAAA,EAAA,eAAA,EAAA,qBAAA,EAAA,MAAA,EAAA,SAAA,CAAA,EAAA,OAAA,EAAA,CAAA,SAAA,CAAA,EAAA,CAAA,EAAA,UAAA,EAAA,CAAA,EAAA,IAAA,EAAAR,GAAA,CAAA,gBAAA,EAAA,QAAA,EAAA,oBAAA,EAAA,MAAA,EAAA,CAAA,yBAAA,EAAA,kBAAA,CAAA,EAAA,EAAA,EAAA,IAAA,EAAAA,GAAA,CAAA,IAAA,EAAA,QAAA,EAAA,QAAA,EAAA,MAAA,EAAA,CAAA,MAAA,EAAA,UAAA,EAAA,UAAA,CAAA,EAAA,CAAA,EAAA,CAAA,CAAA;4FDhMD,aAAa,EAAA,UAAA,EAAA,CAAA;kBANzB,SAAS;AAAC,YAAA,IAAA,EAAA,CAAA;AACP,oBAAA,QAAQ,EAAE,UAAU;AACpB,oBAAA,WAAW,EAAE,uBAAuB;oBACpC,SAAS,EAAE,CAAC,uBAAuB,CAAC;AACvC,iBAAA,CAAA;;;AEjBD,MAAMmB,QAAM,GAAW;AACnB,IAAA;AACI,QAAA,IAAI,EAAE,EAAE;AACR,QAAA,SAAS,EAAE,aAAa;AAC3B,KAAA;CACJ,CAAC;MAMW,iBAAiB,CAAA;;+GAAjB,iBAAiB,EAAA,IAAA,EAAA,EAAA,EAAA,MAAA,EAAA,EAAA,CAAA,eAAA,CAAA,QAAA,EAAA,CAAA,CAAA;AAAjB,iBAAA,CAAA,IAAA,GAAA,EAAA,CAAA,mBAAA,CAAA,EAAA,UAAA,EAAA,QAAA,EAAA,OAAA,EAAA,SAAA,EAAA,QAAA,EAAA,EAAA,EAAA,IAAA,EAAA,iBAAiB,0CAFhB,YAAY,CAAA,EAAA,CAAA,CAAA;gHAEb,iBAAiB,EAAA,OAAA,EAAA,CAHjB,CAAC,YAAY,CAAC,QAAQ,CAACA,QAAM,CAAC,CAAC,EAC9B,YAAY,CAAA,EAAA,CAAA,CAAA;4FAEb,iBAAiB,EAAA,UAAA,EAAA,CAAA;kBAJ7B,QAAQ;AAAC,YAAA,IAAA,EAAA,CAAA;oBACN,OAAO,EAAE,CAAC,YAAY,CAAC,QAAQ,CAACA,QAAM,CAAC,CAAC;oBACxC,OAAO,EAAE,CAAC,YAAY,CAAC;AAC1B,iBAAA,CAAA;;;MCUY,UAAU,CAAA;;wGAAV,UAAU,EAAA,IAAA,EAAA,EAAA,EAAA,MAAA,EAAA,EAAA,CAAA,eAAA,CAAA,QAAA,EAAA,CAAA,CAAA;yGAAV,UAAU,EAAA,YAAA,EAAA,CAXf,aAAa,CAAA,EAAA,OAAA,EAAA,CAGb,YAAY;QACZ,iBAAiB;QACjB,aAAa;QACb,gBAAgB;QAChB,sBAAsB,EAAA5B,EAAA,CAAA,sBAAA,CAAA,EAAA,CAAA,CAAA;AAIjB,UAAA,CAAA,IAAA,GAAA,EAAA,CAAA,mBAAA,CAAA,EAAA,UAAA,EAAA,QAAA,EAAA,OAAA,EAAA,SAAA,EAAA,QAAA,EAAA,EAAA,EAAA,IAAA,EAAA,UAAU,EATV,OAAA,EAAA,CAAA;YACL,YAAY;YACZ,iBAAiB;YACjB,aAAa;YACb,gBAAgB;YAChB,sBAAsB;YACtB,sBAAsB,CAAC,OAAO,EAAE;AACnC,SAAA,CAAA,EAAA,CAAA,CAAA;4FAEQ,UAAU,EAAA,UAAA,EAAA,CAAA;kBAbtB,QAAQ;AAAC,YAAA,IAAA,EAAA,CAAA;AACN,oBAAA,YAAY,EAAE;wBACV,aAAa;AAChB,qBAAA;AACD,oBAAA,OAAO,EAAE;wBACL,YAAY;wBACZ,iBAAiB;wBACjB,aAAa;wBACb,gBAAgB;wBAChB,sBAAsB;wBACtB,sBAAsB,CAAC,OAAO,EAAE;AACnC,qBAAA;AACJ,iBAAA,CAAA;;;MCbY,eAAe,CAAA;IAExB,WACY,CAAA,IAAgB,EACO,WAAgB,EAAA;QADvC,IAAI,CAAA,IAAA,GAAJ,IAAI,CAAY;QACO,IAAW,CAAA,WAAA,GAAX,WAAW,CAAK;KAC9C;IAEL,QAAQ,CAAC,KAAK,EAAE,UAAU,EAAA;AACtB,QAAA,IAAI,OAAO,GAAG,IAAI,WAAW,EAAE,CAAC,GAAG,CAAC,YAAY,EAAE,UAAU,CAAC,CAAC;QAE9D,OAAO,IAAI,CAAC,IAAI,CAAC,GAAG,CAAW,CAAA,EAAG,IAAI,CAAC,WAAW,CAAC,kBAAkB,CAAiB,cAAA,EAAA,KAAK,SAAS,EAAE,EAAE,OAAO,EAAE,OAAO,EAAE,CAAC,CAAC;KAC/H;;AAXQ,eAAA,CAAA,IAAA,GAAA,EAAA,CAAA,kBAAA,CAAA,EAAA,UAAA,EAAA,QAAA,EAAA,OAAA,EAAA,SAAA,EAAA,QAAA,EAAA,EAAA,EAAA,IAAA,EAAA,eAAe,4CAIZ,aAAa,EAAA,CAAA,EAAA,MAAA,EAAA,EAAA,CAAA,eAAA,CAAA,UAAA,EAAA,CAAA,CAAA;AAJhB,eAAA,CAAA,KAAA,GAAA,EAAA,CAAA,qBAAA,CAAA,EAAA,UAAA,EAAA,QAAA,EAAA,OAAA,EAAA,SAAA,EAAA,QAAA,EAAA,EAAA,EAAA,IAAA,EAAA,eAAe,cAHZ,MAAM,EAAA,CAAA,CAAA;4FAGT,eAAe,EAAA,UAAA,EAAA,CAAA;kBAJ3B,UAAU;AAAC,YAAA,IAAA,EAAA,CAAA;AACR,oBAAA,UAAU,EAAE,MAAM;AACrB,iBAAA,CAAA;;0BAMQ,MAAM;2BAAC,aAAa,CAAA;;;MCLhB,YAAY,CAAA;AAErB,IAAA,WAAA,CACY,eAAgC,EAAA;QAAhC,IAAe,CAAA,eAAA,GAAf,eAAe,CAAiB;KACvC;IAEC,QAAQ,CAAC,KAAK,EAAE,UAAU,EAAA;;AAC5B,YAAA,IAAI,MAAgB,CAAC;YACrB,IAAI;AACA,gBAAA,MAAM,GAAG,MAAM,IAAI,CAAC,eAAe,CAAC,QAAQ,CAAC,KAAK,EAAE,UAAU,CAAC,CAAC,SAAS,EAAE,CAAC;AAE5E,gBAAA,IAAI,MAAM,EAAE;AACR,oBAAA,OAAO,MAAM,CAAC;AACjB,iBAAA;AAAM,qBAAA;AACH,oBAAA,OAAO,CAAC,IAAI,KAAK,EAAE,CAAC,CAAC;AACxB,iBAAA;AACJ,aAAA;AAAC,YAAA,OAAO,KAAK,EAAE;AACZ,gBAAA,OAAO,CAAC,KAAK,CAAC,SAAS,EAAE,KAAK,CAAC,CAAC;AAChC,gBAAA,OAAO,CAAC,IAAI,KAAK,EAAE,CAAC,CAAC;AACxB,aAAA;SACJ,CAAA,CAAA;AAAA,KAAA;;0GApBQ,YAAY,EAAA,IAAA,EAAA,CAAA,EAAA,KAAA,EAAA6B,eAAA,EAAA,CAAA,EAAA,MAAA,EAAA,EAAA,CAAA,eAAA,CAAA,UAAA,EAAA,CAAA,CAAA;AAAZ,YAAA,CAAA,KAAA,GAAA,EAAA,CAAA,qBAAA,CAAA,EAAA,UAAA,EAAA,QAAA,EAAA,OAAA,EAAA,SAAA,EAAA,QAAA,EAAA,EAAA,EAAA,IAAA,EAAA,YAAY,cAHT,MAAM,EAAA,CAAA,CAAA;4FAGT,YAAY,EAAA,UAAA,EAAA,CAAA;kBAJxB,UAAU;AAAC,YAAA,IAAA,EAAA,CAAA;AACR,oBAAA,UAAU,EAAE,MAAM;AACrB,iBAAA,CAAA;;;ACED;MAQa,cAAc,CAAA;IAqBvB,WACY,CAAA,cAA8B,EAC9B,YAA0B,EAAA;QAD1B,IAAc,CAAA,cAAA,GAAd,cAAc,CAAgB;QAC9B,IAAY,CAAA,YAAA,GAAZ,YAAY,CAAc;AApBtC,QAAA,IAAA,CAAA,UAAU,GAAG,IAAI,YAAY,EAAE,CAAC;QAEhC,IAAe,CAAA,eAAA,GAAG,eAAe,CAAC;QAClC,IAA2B,CAAA,2BAAA,GAAG,2BAA2B,CAAC;QAE1D,IAAa,CAAA,aAAA,GAAG,aAAa,CAAC;AAI9B,QAAA,IAAA,CAAA,MAAM,GAAG,CAAC,IAAI,KAAK,EAAE,CAAC,CAAC;QAEvB,IAAU,CAAA,UAAA,GAAU,EAAE,CAAC;QACvB,IAAe,CAAA,eAAA,GAAW,CAAC,CAAC;AAE5B,QAAA,IAAA,CAAA,oBAAoB,GAAgB,IAAI,WAAW,CAAC,EAAE,EAAE,CAAC,UAAU,CAAC,QAAQ,CAAC,CAAC,CAAC;QAE/E,IAAe,CAAA,eAAA,GAA2B,IAAI,sBAAsB,CAAC,CAAC,MAAM,CAAC,CAAC,CAAC;KAK1E;IAEL,QAAQ,GAAA;QACJ,IAAI,CAAC,KAAK,GAAG,IAAI,CAAC,cAAc,CAAC,UAAU,CAAC,cAAc,CAAC,CAAC;QAE5D,IAAI,CAAC,QAAQ,EAAE,CAAC;KACnB;IAEK,QAAQ,GAAA;;AACV,YAAA,IAAI,CAAC,MAAM,IAAa,MAAM,IAAI,CAAC,YAAY,CAAC,QAAQ,CAAC,IAAI,CAAC,KAAK,EAAE,IAAI,CAAC,CAAA,CAAC;YAE3E,IAAI,CAAC,eAAe,CAAC,SAAS,GAAG,IAAI,CAAC,MAAM,CAAC;AAC7C,YAAA,IAAI,CAAC,eAAe,CAAC,kBAAkB,EAAE,CAAC;YAE1C,IAAI,CAAC,eAAe,GAAG,IAAI,CAAC,MAAM,CAAC,MAAM,CAAC;YAC1C,IAAI,CAAC,MAAM,CAAC,OAAO,CAAC,KAAK,IAAI,IAAI,CAAC,UAAU,CAAC,IAAI,CAAC,KAAK,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC;AAChE,YAAA,IAAI,CAAC,UAAU,CAAC,IAAI,EAAE,CAAC;SAC1B,CAAA,CAAA;AAAA,KAAA;IAED,eAAe,GAAA;AACX,QAAA,IAAI,CAAC,IAAI,CAAC,oBAAoB,CAAC,KAAK,CAAC,QAAQ,CAAC,CAAC,CAAC,CAAC,EAAE;AAC/C,YAAA,IAAI,CAAC,oBAAoB,CAAC,KAAK,CAAC,EAAE,CAAC,CAAC;YACpC,OAAO;AACV,SAAA;AACD,QAAA,IAAI,CAAC,oBAAoB,CAAC,QAAQ,CAAC,CAAC,CAAC,CAAC,EAAE,GAAG,IAAI,CAAC,UAAU,CAAC,CAAC,CAAC;AAC7D,QAAA,IAAI,CAAC,UAAU,CAAC,IAAI,EAAE,CAAC;KAC1B;IAED,aAAa,GAAA;AACT,QAAA,MAAM,QAAQ,GAAG,IAAI,CAAC,oBAAoB,CAAC,KAAK,CAAC;AAEjD,QAAA,IAAI,QAAQ,CAAC,QAAQ,CAAC,CAAC,CAAC,CAAC,EAAE;YACvB,QAAQ,CAAC,KAAK,EAAE,CAAC;AACjB,YAAA,IAAI,CAAC,oBAAoB,CAAC,UAAU,CAAC,QAAQ,CAAC,CAAC;AAClD,SAAA;aAAM,IAAI,IAAI,CAAC,oBAAoB,CAAC,KAAK,CAAC,MAAM,IAAI,IAAI,CAAC,eAAe,EAAE;AACvE,YAAA,IAAI,CAAC,UAAU,CAAC,MAAM,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC;YACjC,IAAI,CAAC,oBAAoB,CAAC,UAAU,CAAC,IAAI,CAAC,UAAU,CAAC,CAAC;AACzD,SAAA;AAAM,aAAA;AACH,YAAA,MAAM,gBAAgB,GAAG,QAAQ,CAAC,MAAM,CAAC,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC;AACvD,YAAA,IAAI,CAAC,oBAAoB,CAAC,UAAU,CAAC,gBAAgB,CAAC,CAAC;AAC1D,SAAA;AACD,QAAA,IAAI,CAAC,UAAU,CAAC,IAAI,EAAE,CAAC;KAC1B;;4GAlEQ,cAAc,EAAA,IAAA,EAAA,CAAA,EAAA,KAAA,EAAA7B,IAAA,CAAA,cAAA,EAAA,EAAA,EAAA,KAAA,EAAA8B,YAAA,EAAA,CAAA,EAAA,MAAA,EAAA,EAAA,CAAA,eAAA,CAAA,SAAA,EAAA,CAAA,CAAA;AAAd,cAAA,CAAA,IAAA,GAAA,EAAA,CAAA,oBAAA,CAAA,EAAA,UAAA,EAAA,QAAA,EAAA,OAAA,EAAA,SAAA,EAAA,IAAA,EAAA,cAAc,wFClB3B,q7CA8BM,EAAA,UAAA,EAAA,CAAA,EAAA,IAAA,EAAAf,IAAA,CAAA,YAAA,EAAA,QAAA,EAAA,gBAAA,EAAA,MAAA,EAAA,CAAA,OAAA,EAAA,YAAA,EAAA,YAAA,EAAA,oBAAA,EAAA,WAAA,CAAA,EAAA,QAAA,EAAA,CAAA,cAAA,CAAA,EAAA,EAAA,EAAA,IAAA,EAAA,EAAA,CAAA,SAAA,EAAA,QAAA,EAAA,YAAA,EAAA,MAAA,EAAA,CAAA,UAAA,EAAA,eAAA,EAAA,UAAA,CAAA,EAAA,QAAA,EAAA,CAAA,WAAA,CAAA,EAAA,EAAA,EAAA,IAAA,EAAAR,GAAA,CAAA,SAAA,EAAA,QAAA,EAAA,YAAA,EAAA,QAAA,EAAA,CAAA,WAAA,CAAA,EAAA,EAAA,EAAA,IAAA,EAAAU,IAAA,CAAA,wBAAA,EAAA,QAAA,EAAA,uBAAA,EAAA,MAAA,EAAA,CAAA,kBAAA,EAAA,MAAA,EAAA,WAAA,EAAA,cAAA,EAAA,qBAAA,EAAA,gCAAA,EAAA,kBAAA,EAAA,WAAA,EAAA,qBAAA,EAAA,4BAAA,EAAA,8BAAA,EAAA,uCAAA,EAAA,WAAA,EAAA,uBAAA,EAAA,0BAAA,EAAA,gCAAA,EAAA,iCAAA,EAAA,kCAAA,EAAA,uBAAA,EAAA,mCAAA,CAAA,EAAA,OAAA,EAAA,CAAA,WAAA,CAAA,EAAA,CAAA,EAAA,UAAA,EAAA,CAAA,EAAA,IAAA,EAAAF,IAAA,CAAA,QAAA,EAAA,QAAA,EAAA,WAAA,EAAA,EAAA,EAAA,IAAA,EAAAP,IAAA,CAAA,iBAAA,EAAA,QAAA,EAAA,wIAAA,EAAA,MAAA,EAAA,CAAA,UAAA,CAAA,EAAA,EAAA,EAAA,IAAA,EAAAA,IAAA,CAAA,eAAA,EAAA,QAAA,EAAA,2CAAA,EAAA,EAAA,EAAA,IAAA,EAAAA,IAAA,CAAA,oBAAA,EAAA,QAAA,EAAA,eAAA,EAAA,MAAA,EAAA,CAAA,UAAA,EAAA,aAAA,EAAA,SAAA,CAAA,EAAA,OAAA,EAAA,CAAA,eAAA,CAAA,EAAA,QAAA,EAAA,CAAA,QAAA,CAAA,EAAA,EAAA,EAAA,IAAA,EAAAC,GAAA,CAAA,IAAA,EAAA,QAAA,EAAA,QAAA,EAAA,MAAA,EAAA,CAAA,MAAA,EAAA,UAAA,EAAA,UAAA,CAAA,EAAA,EAAA,EAAA,IAAA,EAAAA,GAAA,CAAA,OAAA,EAAA,QAAA,EAAA,kBAAA,EAAA,MAAA,EAAA,CAAA,SAAA,EAAA,cAAA,EAAA,eAAA,CAAA,EAAA,EAAA,EAAA,IAAA,EAAAM,IAAA,CAAA,QAAA,EAAA,QAAA,EAAA,WAAA,EAAA,MAAA,EAAA,CAAA,IAAA,CAAA,EAAA,CAAA,EAAA,KAAA,EAAA,EAAA,OAAA,EAAAN,GAAA,CAAA,SAAA,EAAA,EAAA,CAAA,CAAA;4FDZO,cAAc,EAAA,UAAA,EAAA,CAAA;kBAN1B,SAAS;AAAC,YAAA,IAAA,EAAA,CAAA;AACP,oBAAA,QAAQ,EAAE,WAAW;AACrB,oBAAA,WAAW,EAAE,wBAAwB;AACrC,oBAAA,MAAM,EAAE,EACP;AACJ,iBAAA,CAAA;+HAIG,UAAU,EAAA,CAAA;sBADT,MAAM;;;MESE,WAAW,CAAA;;yGAAX,WAAW,EAAA,IAAA,EAAA,EAAA,EAAA,MAAA,EAAA,EAAA,CAAA,eAAA,CAAA,QAAA,EAAA,CAAA,CAAA;0GAAX,WAAW,EAAA,YAAA,EAAA,CAhBhB,cAAc,CAAA,EAAA,OAAA,EAAA,CAGd,YAAY;QACZ,WAAW;QACX,mBAAmB;QACnB,cAAc;QACd,eAAe;QACf,kBAAkB;AAClB,QAAA,wBAAwB,aAGxB,cAAc,CAAA,EAAA,CAAA,CAAA;AAIT,WAAA,CAAA,IAAA,GAAA,EAAA,CAAA,mBAAA,CAAA,EAAA,UAAA,EAAA,QAAA,EAAA,OAAA,EAAA,SAAA,EAAA,QAAA,EAAA,EAAA,EAAA,IAAA,EAAA,WAAW,EAdX,OAAA,EAAA,CAAA;YACL,YAAY;YACZ,WAAW;YACX,mBAAmB;YACnB,cAAc;YACd,eAAe;YACf,kBAAkB;YAClB,wBAAwB;AAC3B,SAAA,CAAA,EAAA,CAAA,CAAA;4FAMQ,WAAW,EAAA,UAAA,EAAA,CAAA;kBAlBvB,QAAQ;AAAC,YAAA,IAAA,EAAA,CAAA;AACN,oBAAA,YAAY,EAAE;wBACV,cAAc;AACjB,qBAAA;AACD,oBAAA,OAAO,EAAE;wBACL,YAAY;wBACZ,WAAW;wBACX,mBAAmB;wBACnB,cAAc;wBACd,eAAe;wBACf,kBAAkB;wBAClB,wBAAwB;AAC3B,qBAAA;AACD,oBAAA,OAAO,EAAE;wBACL,cAAc;AACjB,qBAAA;AACJ,iBAAA,CAAA;;;ACRD;MAOa,oBAAoB,CAAA;IA0B7B,WACY,CAAA,cAA8B,EAC9B,cAA8B,EAC9B,aAA4B,EAC5B,gBAAkC,EAClC,uBAAgD,EAChD,MAAiB,EAAA;QALjB,IAAc,CAAA,cAAA,GAAd,cAAc,CAAgB;QAC9B,IAAc,CAAA,cAAA,GAAd,cAAc,CAAgB;QAC9B,IAAa,CAAA,aAAA,GAAb,aAAa,CAAe;QAC5B,IAAgB,CAAA,gBAAA,GAAhB,gBAAgB,CAAkB;QAClC,IAAuB,CAAA,uBAAA,GAAvB,uBAAuB,CAAyB;QAChD,IAAM,CAAA,MAAA,GAAN,MAAM,CAAW;QA9B7B,IAAc,CAAA,cAAA,GAAG,eAAe,CAAC;QACjC,IAAiB,CAAA,iBAAA,GAAG,kBAAkB,CAAC;QACvC,IAAa,CAAA,aAAA,GAAG,aAAa,CAAC;QAS9B,IAAS,CAAA,SAAA,GAAU,EAAE,CAAC;AAMtB,QAAA,IAAA,CAAA,OAAO,GAAG,IAAI,MAAM,EAAE,CAAC;AACvB,QAAA,IAAA,CAAA,kBAAkB,GAAG,CAAC,IAAI,kBAAkB,EAAE,CAAC,CAAC;AAEhD,QAAA,IAAA,CAAA,aAAa,GAAW,kBAAkB,CAAC,OAAO,CAAC;AACnD,QAAA,IAAA,CAAA,UAAU,GAAG,IAAI,UAAU,EAAE,CAAC;AAC9B,QAAA,IAAA,CAAA,SAAS,GAAG,IAAI,aAAa,EAAE,CAAC;KAS3B;IAEL,QAAQ,GAAA;QACJ,IAAI,CAAC,KAAK,GAAG,IAAI,CAAC,cAAc,CAAC,UAAU,CAAC,cAAc,CAAC,CAAC;QAC5D,IAAI,CAAC,QAAQ,GAAG,IAAI,CAAC,cAAc,CAAC,UAAU,CAAC,UAAU,CAAC,CAAC;QAC3D,IAAI,CAAC,gBAAgB,GAAG,IAAI,CAAC,cAAc,CAAC,UAAU,CAAC,kBAAkB,CAAC,CAAC;QAC3E,IAAI,CAAC,QAAQ,GAAG,IAAI,CAAC,cAAc,CAAC,UAAU,CAAC,UAAU,CAAC,CAAC;QAE3D,IAAI,CAAC,cAAc,CAAC,WAAW;aAC1B,SAAS,CAAC,UAAU,IAAG;AACpB,YAAA,IAAI,CAAC,QAAQ,GAAG,UAAU,CAAC,QAAQ,CAAC;YACpC,IAAI,IAAI,CAAC,QAAQ,EAAE;AACf,gBAAA,IAAI,CAAC,aAAa,CAAC,IAAI,CAAC,QAAQ,CAAC,CAAC;AACrC,aAAA;AACL,SAAC,CAAC,CAAC;AAEP,QAAA,IAAI,CAAC,SAAS,GAAG,IAAI,CAAC,iBAAiB,CAAC,MAAM,CAAC,SAAS,IAAI,SAAS,CAAC,KAAK,IAAI,QAAQ,CAAC,CAAC;QACzF,IAAI,CAAC,gBAAgB,GAAG,IAAI,CAAC,aAAa,CAAC,OAAO,CAAC;AACnD,QAAA,IAAI,CAAC,QAAQ,GAAG,YAAY,CAAC,SAAS,CAAC;QAEvC,IAAI,CAAC,sBAAsB,EAAE,CAAC;KACjC;AAEK,IAAA,aAAa,CAAC,QAAQ,EAAA;;YACxB,IAAI,CAAC,OAAO,GAAG,MAAM,IAAI,CAAC,aAAa,CAAC,aAAa,CAAC,IAAI,CAAC,KAAK,EAAE,IAAI,CAAC,QAAQ,EAAE,QAAQ,CAAC,CAAC;YAC3F,IAAI,CAAC,UAAU,GAAG,IAAI,CAAC,OAAO,CAAC,IAAI,CAAC;SACvC,CAAA,CAAA;AAAA,KAAA;IAED,sBAAsB,GAAA;QAClB,IAAI,CAAC,gBAAgB,CAAC,sBAAsB,CAAC,IAAI,CAAC,KAAK,CAAC;AACnD,aAAA,SAAS,CAAC,CAAC,GAAwB,KAAI;AACpC,YAAA,IAAI,CAAC,kBAAkB,GAAG,CAAC,GAAG,CAAC,CAAC;SACnC,EACG,KAAK,IAAG;AACJ,YAAA,OAAO,CAAC,GAAG,CAAC,sCAAsC,EAAE,KAAK,CAAC,CAAC;AAC/D,SAAC,CAAC,CAAC;KACd;AAED,IAAA,iBAAiB,CAAC,IAAS,EAAA;AACvB,QAAA,IAAI,CAAC,SAAS,GAAG,IAAI,CAAC,SAAS,CAAC;AAChC,QAAA,IAAI,CAAC,OAAO,GAAG,IAAI,CAAC,OAAO,CAAC;AAC5B,QAAA,IAAI,iBAAiB,GAAG,IAAI,CAAC,SAAS,CAAC;AAEvC,QAAA,IAAI,iBAAiB,IAAI,IAAI,CAAC,aAAa,CAAC,KAAK,EAAE;AAC/C,YAAA,IAAI,CAAC,QAAQ,GAAG,QAAQ,CAAC;AAC5B,SAAA;AAAM,aAAA,IAAI,iBAAiB,IAAI,IAAI,CAAC,aAAa,CAAC,OAAO,EAAE;AACxD,YAAA,IAAI,CAAC,QAAQ,GAAG,OAAO,CAAC;AAC3B,SAAA;AAAM,aAAA,IAAI,iBAAiB,IAAI,IAAI,CAAC,aAAa,CAAC,MAAM,EAAE;AACvD,YAAA,IAAI,CAAC,QAAQ,GAAG,SAAS,CAAC;AAC7B,SAAA;QAED,IAAI,CAAC,wBAAwB,EAAE,CAAC;KACnC;IAED,wBAAwB,GAAA;AAEpB,QAAA,IAAI,CAAC,aAAa,GAAG,kBAAkB,CAAC,OAAO,CAAC;AAEhD,QAAA,MAAM,WAAW,GAAG,IAAI,CAAC,iBAAiB,EAAE,CAAC;QAE7C,IAAI,CAAC,uBAAuB,CAAC,wBAAwB,CAAC,IAAI,CAAC,KAAK,EAAE,WAAW,CAAC;AACzE,aAAA,SAAS,CAAC,CAAC,cAAmB,KAAI;;AAE/B,YAAA,IAAI,CAAA,CAAA,EAAA,GAAA,cAAc,KAAA,IAAA,IAAd,cAAc,KAAA,KAAA,CAAA,GAAA,KAAA,CAAA,GAAd,cAAc,CAAE,OAAO,MAAA,IAAA,IAAA,EAAA,KAAA,KAAA,CAAA,GAAA,KAAA,CAAA,GAAA,EAAA,CAAE,MAAM,IAAG,CAAC,EAAE;AAErC,gBAAA,IAAI,CAAC,SAAS,CAAC,QAAQ,GAAG,cAAc,CAAC,OAAO,CAAC,GAAG,CAAC,MAAM,KAAK;oBAC5D,WAAW,EAAE,MAAM,CAAC,MAAM,CAAC,IAAI,CAAC,CAAC,MAAM,CAAC,qBAAqB,CAAC;AAC9D,oBAAA,SAAS,EAAE;AACP,wBAAA,KAAK,EAAE,MAAM,CAAC,gBAAgB,CAAC,KAAK;AACpC,wBAAA,QAAQ,EAAE,MAAM,CAAC,gBAAgB,CAAC,IAAI;AACzC,qBAAA;oBACD,OAAO,EAAE,MAAM,CAAC,SAAS,CAAC,GAAG,CAAC,KAAK,KAAK;wBACpC,IAAI,EAAE,KAAK,CAAC,KAAK;wBACjB,KAAK,EAAE,KAAK,CAAC,KAAK;AAClB,wBAAA,IAAI,EAAE;4BACF,IAAI,EAAE,KAAK,CAAC,IAAI;AACnB,yBAAA;AACJ,qBAAA,CAAC,CAAC;AACN,iBAAA,CAAC,CAAC,CAAC;AAEJ,gBAAA,IAAI,CAAC,SAAS,CAAC,cAAc,GAAG,mBAAmB,CAAC;AACpD,gBAAA,IAAI,CAAC,SAAS,CAAC,YAAY,GAAG,IAAI,CAAC;AACnC,gBAAA,IAAI,CAAC,SAAS,CAAC,aAAa,GAAG,IAAI,CAAC;AACpC,gBAAA,IAAI,CAAC,SAAS,CAAC,WAAW,GAAG,IAAI,CAAC;AAClC,gBAAA,IAAI,CAAC,SAAS,CAAC,iBAAiB,GAAG,IAAI,CAAC;AAExC,gBAAA,IAAI,CAAC,aAAa,GAAG,kBAAkB,CAAC,QAAQ,CAAC;AAEpD,aAAA;AAAM,iBAAA;AACH,gBAAA,IAAI,CAAC,aAAa,GAAG,kBAAkB,CAAC,OAAO,CAAC;AACnD,aAAA;SACJ,EACG,KAAK,IAAG;AACJ,YAAA,IAAI,CAAC,aAAa,GAAG,kBAAkB,CAAC,OAAO,CAAC;AAEhD,YAAA,OAAO,CAAC,GAAG,CAAC,uCAAuC,EAAE,KAAK,CAAC,CAAC;AAChE,SAAC,CAAC,CAAC;KACd;IAED,gBAAgB,GAAA;QACZ,MAAM,MAAM,GAAG,IAAI,CAAC,MAAM,CAAC,IAAI,CAAC,qBAAqB,EACjD;AACI,YAAA,IAAI,EAAE;gBACF,QAAQ,EAAE,IAAI,CAAC,QAAQ;gBACvB,YAAY,EAAE,IAAI,CAAC,kBAAkB;AACxC,aAAA;AACD,YAAA,KAAK,EAAE,MAAM;AACb,YAAA,MAAM,EAAE,MAAM;YACd,QAAQ,EAAE,EAAE,KAAK,EAAE,MAAM,EAAE,GAAG,EAAE,KAAK,EAAE;AAC1C,SAAA,CAAC,CAAC;QACP,MAAM,CAAC,WAAW,EAAE,CAAC,SAAS,CAAC,CAAC,SAAS,KAAI;YACzC,IAAI,SAAS,CAAC,QAAQ,EAAE;AACpB,gBAAA,IAAI,CAAC,QAAQ,GAAG,SAAS,CAAC,QAAQ,CAAC;AAEnC,gBAAA,IAAI,CAAC,aAAa,CAAC,IAAI,CAAC,QAAQ,CAAC,CAAC;gBAClC,IAAI,CAAC,wBAAwB,EAAE,CAAC;AACnC,aAAA;AACL,SAAC,CAAC,CAAA;KACL;IAED,iBAAiB,GAAA;QAEb,IAAI,WAAW,GAAG,EAAE,CAAC;AAErB,QAAA,WAAW,CAAC,WAAW,CAAC,GAAG,IAAI,CAAC,SAAS,CAAC;AAC1C,QAAA,WAAW,CAAC,SAAS,CAAC,GAAG,IAAI,CAAC,OAAO,CAAC;AACtC,QAAA,WAAW,CAAC,UAAU,CAAC,GAAG,IAAI,CAAC,QAAQ,CAAC;AACxC,QAAA,WAAW,CAAC,UAAU,CAAC,GAAG,IAAI,CAAC,QAAQ,GAAG,IAAI,CAAC,QAAQ,GAAG,IAAI,CAAC;AAE/D,QAAA,OAAO,WAAW,CAAC;KACtB;;kHAnKQ,oBAAoB,EAAA,IAAA,EAAA,CAAA,EAAA,KAAA,EAAAT,IAAA,CAAA,cAAA,EAAA,EAAA,EAAA,KAAA,EAAAC,IAAA,CAAA,cAAA,EAAA,EAAA,EAAA,KAAA,EAAA8B,aAAA,EAAA,EAAA,EAAA,KAAA,EAAAL,gBAAA,EAAA,EAAA,EAAA,KAAA,EAAAM,uBAAA,EAAA,EAAA,EAAA,KAAA,EAAAf,IAAA,CAAA,SAAA,EAAA,CAAA,EAAA,MAAA,EAAA,EAAA,CAAA,eAAA,CAAA,SAAA,EAAA,CAAA,CAAA;AAApB,oBAAA,CAAA,IAAA,GAAA,EAAA,CAAA,oBAAA,CAAA,EAAA,UAAA,EAAA,QAAA,EAAA,OAAA,EAAA,SAAA,EAAA,IAAA,EAAA,oBAAoB,uDC1BjC,4/CAkCM,EAAA,MAAA,EAAA,CAAA,uCAAA,CAAA,EAAA,UAAA,EAAA,CAAA,EAAA,IAAA,EAAAT,EAAA,CAAA,sBAAA,EAAA,QAAA,EAAA,qBAAA,EAAA,MAAA,EAAA,CAAA,gCAAA,EAAA,cAAA,EAAA,qBAAA,EAAA,aAAA,EAAA,aAAA,EAAA,UAAA,EAAA,wBAAA,EAAA,cAAA,EAAA,UAAA,EAAA,cAAA,EAAA,kBAAA,EAAA,sBAAA,CAAA,EAAA,OAAA,EAAA,CAAA,mBAAA,CAAA,EAAA,EAAA,EAAA,IAAA,EAAAC,EAAA,CAAA,OAAA,EAAA,QAAA,EAAA,UAAA,EAAA,QAAA,EAAA,CAAA,SAAA,CAAA,EAAA,EAAA,EAAA,IAAA,EAAAC,KAAA,CAAA,iBAAA,EAAA,QAAA,EAAA,eAAA,EAAA,MAAA,EAAA,CAAA,cAAA,EAAA,eAAA,EAAA,SAAA,CAAA,EAAA,CAAA,EAAA,CAAA,CAAA;4FDRO,oBAAoB,EAAA,UAAA,EAAA,CAAA;kBALhC,SAAS;AAAC,YAAA,IAAA,EAAA,CAAA;AACP,oBAAA,QAAQ,EAAE,iBAAiB;AAC3B,oBAAA,WAAW,EAAE,8BAA8B;oBAC3C,SAAS,EAAE,CAAC,8BAA8B,CAAC;AAC9C,iBAAA,CAAA;;;AEpBD,MAAMkB,QAAM,GAAW;AACnB,IAAA;AACI,QAAA,IAAI,EAAE,EAAE;AACR,QAAA,SAAS,EAAE,oBAAoB;AAClC,KAAA;CACJ,CAAC;MAMW,wBAAwB,CAAA;;sHAAxB,wBAAwB,EAAA,IAAA,EAAA,EAAA,EAAA,MAAA,EAAA,EAAA,CAAA,eAAA,CAAA,QAAA,EAAA,CAAA,CAAA;AAAxB,wBAAA,CAAA,IAAA,GAAA,EAAA,CAAA,mBAAA,CAAA,EAAA,UAAA,EAAA,QAAA,EAAA,OAAA,EAAA,SAAA,EAAA,QAAA,EAAA,EAAA,EAAA,IAAA,EAAA,wBAAwB,0CAFvB,YAAY,CAAA,EAAA,CAAA,CAAA;uHAEb,wBAAwB,EAAA,OAAA,EAAA,CAHxB,CAAC,YAAY,CAAC,QAAQ,CAACA,QAAM,CAAC,CAAC,EAC9B,YAAY,CAAA,EAAA,CAAA,CAAA;4FAEb,wBAAwB,EAAA,UAAA,EAAA,CAAA;kBAJpC,QAAQ;AAAC,YAAA,IAAA,EAAA,CAAA;oBACN,OAAO,EAAE,CAAC,YAAY,CAAC,QAAQ,CAACA,QAAM,CAAC,CAAC;oBACxC,OAAO,EAAE,CAAC,YAAY,CAAC;AAC1B,iBAAA,CAAA;;;ACHD;MAgBa,iBAAiB,CAAA;;+GAAjB,iBAAiB,EAAA,IAAA,EAAA,EAAA,EAAA,MAAA,EAAA,EAAA,CAAA,eAAA,CAAA,QAAA,EAAA,CAAA,CAAA;gHAAjB,iBAAiB,EAAA,YAAA,EAAA,CAXtB,oBAAoB,CAAA,EAAA,OAAA,EAAA,CAGpB,YAAY;QACZ,wBAAwB;QACxB,kBAAkB;QAClB,mBAAmB;QACnB,cAAc;QACd,aAAa,CAAA,EAAA,CAAA,CAAA;AAGR,iBAAA,CAAA,IAAA,GAAA,EAAA,CAAA,mBAAA,CAAA,EAAA,UAAA,EAAA,QAAA,EAAA,OAAA,EAAA,SAAA,EAAA,QAAA,EAAA,EAAA,EAAA,IAAA,EAAA,iBAAiB,EATjB,OAAA,EAAA,CAAA;YACL,YAAY;YACZ,wBAAwB;YACxB,kBAAkB;YAClB,mBAAmB;YACnB,cAAc;YACd,aAAa;AAChB,SAAA,CAAA,EAAA,CAAA,CAAA;4FAEQ,iBAAiB,EAAA,UAAA,EAAA,CAAA;kBAb7B,QAAQ;AAAC,YAAA,IAAA,EAAA,CAAA;AACN,oBAAA,YAAY,EAAE;wBACV,oBAAoB;AACvB,qBAAA;AACD,oBAAA,OAAO,EAAE;wBACL,YAAY;wBACZ,wBAAwB;wBACxB,kBAAkB;wBAClB,mBAAmB;wBACnB,cAAc;wBACd,aAAa;AAChB,qBAAA;AACJ,iBAAA,CAAA;;;ACfD;MAQa,oCAAoC,CAAA;AAoC7C,IAAA,WAAA,CACY,cAA8B,EAC9B,oBAA0C,EAC3C,gBAAkC,EAAA;QAFjC,IAAc,CAAA,cAAA,GAAd,cAAc,CAAgB;QAC9B,IAAoB,CAAA,oBAAA,GAApB,oBAAoB,CAAsB;QAC3C,IAAgB,CAAA,gBAAA,GAAhB,gBAAgB,CAAkB;QArC7C,IAAc,CAAA,cAAA,GAAG,eAAe,CAAC;QACjC,IAAiB,CAAA,iBAAA,GAAG,kBAAkB,CAAC;QACvC,IAAa,CAAA,aAAA,GAAG,aAAa,CAAC;QAO9B,IAAS,CAAA,SAAA,GAAU,EAAE,CAAC;QAQtB,IAAU,CAAA,UAAA,GAAY,IAAI,CAAC;AAE3B,QAAA,IAAA,CAAA,sBAAsB,GAAW,kBAAkB,CAAC,OAAO,CAAC;AAC5D,QAAA,IAAA,CAAA,oBAAoB,GAAW,kBAAkB,CAAC,OAAO,CAAC;AAC1D,QAAA,IAAA,CAAA,kBAAkB,GAAG,IAAI,aAAa,EAAE,CAAC;AACzC,QAAA,IAAA,CAAA,gBAAgB,GAAG,IAAI,aAAa,EAAE,CAAC;AAEvC,QAAA,IAAA,CAAA,mBAAmB,GAAgB;AAC/B,YAAA,IAAI,EAAE,SAAS;AACf,YAAA,KAAK,EAAE,MAAM;SAChB,CAAC;AAEF,QAAA,IAAA,CAAA,iBAAiB,GAAgB;AAC7B,YAAA,IAAI,EAAE,UAAU;AAChB,YAAA,KAAK,EAAE,MAAM;SAChB,CAAC;KAMG;IAEL,QAAQ,GAAA;QACJ,IAAI,CAAC,KAAK,GAAG,IAAI,CAAC,cAAc,CAAC,UAAU,CAAC,cAAc,CAAC,CAAC;QAC5D,IAAI,CAAC,gBAAgB,GAAG,IAAI,CAAC,cAAc,CAAC,UAAU,CAAC,kBAAkB,CAAC,CAAC;QAC3E,IAAI,CAAC,QAAQ,GAAG,IAAI,CAAC,cAAc,CAAC,UAAU,CAAC,UAAU,CAAC,CAAC;AAE3D,QAAA,IAAI,IAAI,CAAC,gBAAgB,IAAI,gBAAgB,CAAC,aAAa,EAAE;AACzD,YAAA,IAAI,CAAC,WAAW,GAAG,eAAe,CAAC;AACtC,SAAA;AAAM,aAAA,IAAI,IAAI,CAAC,gBAAgB,IAAI,gBAAgB,CAAC,YAAY,EAAE;AAC/D,YAAA,IAAI,CAAC,WAAW,GAAG,iBAAiB,CAAC;AACxC,SAAA;AAED,QAAA,IAAI,CAAC,SAAS,GAAG,IAAI,CAAC,iBAAiB,CAAC,MAAM,CAAC,SAAS,IAAI,SAAS,CAAC,KAAK,IAAI,QAAQ,CAAC,CAAC;QACzF,IAAI,CAAC,gBAAgB,GAAG,IAAI,CAAC,aAAa,CAAC,OAAO,CAAC;AACnD,QAAA,IAAI,CAAC,QAAQ,GAAG,YAAY,CAAC,SAAS,CAAC;KAC1C;AAED,IAAA,iBAAiB,CAAC,IAAS,EAAA;AACvB,QAAA,IAAI,CAAC,SAAS,GAAG,IAAI,CAAC,SAAS,CAAC;AAChC,QAAA,IAAI,CAAC,OAAO,GAAG,IAAI,CAAC,OAAO,CAAC;AAC5B,QAAA,IAAI,iBAAiB,GAAG,IAAI,CAAC,SAAS,CAAC;AAEvC,QAAA,IAAI,iBAAiB,IAAI,IAAI,CAAC,aAAa,CAAC,KAAK,EAAE;AAC/C,YAAA,IAAI,CAAC,QAAQ,GAAG,OAAO,CAAC;AAC3B,SAAA;AAAM,aAAA,IAAI,iBAAiB,IAAI,IAAI,CAAC,aAAa,CAAC,OAAO,EAAE;AACxD,YAAA,IAAI,CAAC,QAAQ,GAAG,SAAS,CAAC;AAC7B,SAAA;AAAM,aAAA,IAAI,iBAAiB,IAAI,IAAI,CAAC,aAAa,CAAC,MAAM,EAAE;AACvD,YAAA,IAAI,CAAC,QAAQ,GAAG,QAAQ,CAAC;AAC5B,SAAA;QAED,IAAI,CAAC,uBAAuB,CAAC,QAAQ,CAAC,CAAC,IAAI,CAAC,GAAG,IAAG;AAC9C,YAAA,IAAI,CAAC,YAAY,GAAG,GAAG,CAAC;AAC5B,SAAC,CAAC,CAAA;QAEF,IAAI,CAAC,uBAAuB,CAAC,MAAM,CAAC,CAAC,IAAI,CAAC,GAAG,IAAG;AAC5C,YAAA,IAAI,CAAC,cAAc,GAAG,GAAG,CAAC;AAC9B,SAAC,CAAC,CAAA;QAEF,IAAI,CAAC,wBAAwB,EAAE,CAAC;KACnC;AAEK,IAAA,uBAAuB,CAAC,QAAgB,EAAA;;YAC1C,IAAI;gBACA,MAAM,WAAW,GAAG,IAAI,CAAC,iBAAiB,CAAC,QAAQ,EAAE,IAAI,CAAC,CAAC;AAE3D,gBAAA,MAAM,MAAM,GAAG,MAAM,IAAI,CAAC,oBAAoB,CAAC,gBAAgB,CAAC,IAAI,CAAC,KAAK,EAAE,WAAW,CAAC,CAAC;AACzF,gBAAA,OAAO,MAAM,CAAC;AAEjB,aAAA;AAAC,YAAA,OAAO,KAAK,EAAE;gBACZ,OAAO,CAAC,KAAK,CAAC,CAAA,iCAAA,EAAoC,QAAQ,CAAG,CAAA,CAAA,EAAE,KAAK,CAAC,CAAC;AACzE,aAAA;AAAS,oBAAA;AACN,gBAAA,IAAI,CAAC,UAAU,GAAG,KAAK,CAAC;AAC3B,aAAA;SACJ,CAAA,CAAA;AAAA,KAAA;IAEK,wBAAwB,GAAA;;AAC1B,YAAA,MAAM,IAAI,CAAC,0BAA0B,CAAC,QAAQ,CAAC,CAAC;AAChD,YAAA,MAAM,IAAI,CAAC,0BAA0B,CAAC,MAAM,CAAC,CAAC;SACjD,CAAA,CAAA;AAAA,KAAA;AAEK,IAAA,0BAA0B,CAAC,QAAgB,EAAA;;YAE7C,IAAI,QAAQ,IAAI,QAAQ,EAAE;AACtB,gBAAA,IAAI,CAAC,sBAAsB,GAAG,kBAAkB,CAAC,OAAO,CAAC;AAC5D,aAAA;AAAM,iBAAA;AACH,gBAAA,IAAI,CAAC,oBAAoB,GAAG,kBAAkB,CAAC,OAAO,CAAC;AAC1D,aAAA;YAED,IAAI;gBACA,MAAM,WAAW,GAAG,IAAI,CAAC,iBAAiB,CAAC,QAAQ,EAAE,KAAK,CAAC,CAAC;AAC5D,gBAAA,MAAM,MAAM,GAAG,MAAM,IAAI,CAAC,oBAAoB,CAAC,gBAAgB,CAAC,IAAI,CAAC,KAAK,EAAE,WAAW,CAAC,CAAC;gBAEzF,IAAI,CAAA,MAAM,KAAA,IAAA,IAAN,MAAM,KAAA,KAAA,CAAA,GAAA,KAAA,CAAA,GAAN,MAAM,CAAE,MAAM,IAAG,CAAC,EAAE;oBACpB,IAAI,MAAM,aAAN,MAAM,KAAA,KAAA,CAAA,GAAA,KAAA,CAAA,GAAN,MAAM,CAAE,KAAK,CAAC,IAAI,IAAI,IAAI,CAAC,IAAI,CAAC,MAAM,IAAI,CAAC,CAAC,EAAE;wBAC9C,IAAI,QAAQ,IAAI,QAAQ,EAAE;AACtB,4BAAA,IAAI,CAAC,sBAAsB,GAAG,kBAAkB,CAAC,OAAO,CAAC;AAC5D,yBAAA;AAAM,6BAAA;AACH,4BAAA,IAAI,CAAC,oBAAoB,GAAG,kBAAkB,CAAC,OAAO,CAAC;AAC1D,yBAAA;AACJ,qBAAA;AAAM,yBAAA;AACH,wBAAA,IAAI,SAAS,GAAG,IAAI,aAAa,EAAE,CAAC;AAEpC,wBAAA,SAAS,GAAG;AACR,4BAAA,YAAY,EAAE,IAAI;AAClB,4BAAA,WAAW,EAAE,IAAI;AACjB,4BAAA,iBAAiB,EAAE,IAAI;AACvB,4BAAA,QAAQ,EAAE,MAAM,CAAC,GAAG,CAAC,IAAI,IAAG;;AAAC,gCAAA,QAAC;oCAC1B,IAAI,EAAE,IAAI,CAAC,cAAc;oCACzB,KAAK,EAAE,CAAA,EAAA,GAAA,CAAA,EAAA,GAAA,IAAI,CAAC,IAAI,MAAG,IAAA,IAAA,EAAA,KAAA,KAAA,CAAA,GAAA,KAAA,CAAA,GAAA,EAAA,CAAA,CAAC,CAAC,MAAA,IAAA,IAAA,EAAA,KAAA,KAAA,CAAA,GAAA,KAAA,CAAA,GAAA,EAAA,CAAE,KAAK;AAC5B,oCAAA,IAAI,EAAE;wCACF,IAAI,EAAE,IAAI,CAAC,IAAI;AAClB,qCAAA;AACJ,iCAAA,EAAC;6BAAA,CAAC;yBACN,CAAC;wBAEF,IAAI,QAAQ,IAAI,QAAQ,EAAE;AACtB,4BAAA,IAAI,CAAC,kBAAkB,GAAG,SAAS,CAAC;AACpC,4BAAA,IAAI,CAAC,sBAAsB,GAAG,kBAAkB,CAAC,QAAQ,CAAC;AAC7D,yBAAA;AAAM,6BAAA;AACH,4BAAA,IAAI,CAAC,gBAAgB,GAAG,SAAS,CAAC;AAClC,4BAAA,IAAI,CAAC,oBAAoB,GAAG,kBAAkB,CAAC,QAAQ,CAAC;AAC3D,yBAAA;AACJ,qBAAA;AAEJ,iBAAA;AAAM,qBAAA;oBACH,IAAI,QAAQ,IAAI,QAAQ,EAAE;AACtB,wBAAA,IAAI,CAAC,sBAAsB,GAAG,kBAAkB,CAAC,OAAO,CAAC;AAC5D,qBAAA;AAAM,yBAAA;AACH,wBAAA,IAAI,CAAC,oBAAoB,GAAG,kBAAkB,CAAC,OAAO,CAAC;AAC1D,qBAAA;AACJ,iBAAA;AAEJ,aAAA;AAAC,YAAA,OAAO,KAAK,EAAE;gBACZ,IAAI,QAAQ,IAAI,QAAQ,EAAE;AACtB,oBAAA,IAAI,CAAC,sBAAsB,GAAG,kBAAkB,CAAC,OAAO,CAAC;AAC5D,iBAAA;AAAM,qBAAA;AACH,oBAAA,IAAI,CAAC,oBAAoB,GAAG,kBAAkB,CAAC,OAAO,CAAC;AAC1D,iBAAA;gBAED,OAAO,CAAC,KAAK,CAAC,CAAA,oCAAA,EAAuC,QAAQ,CAAG,CAAA,CAAA,EAAE,KAAK,CAAC,CAAC;AAC5E,aAAA;SACJ,CAAA,CAAA;AAAA,KAAA;IAED,iBAAiB,CAAC,QAAgB,EAAE,QAAiB,EAAA;AAEjD,QAAA,MAAM,WAAW,GAAG,IAAI,oBAAoB,EAAE,CAAC;AAE/C,QAAA,WAAW,CAAC,SAAS,GAAG,IAAI,CAAC,SAAS,CAAC;AACvC,QAAA,WAAW,CAAC,OAAO,GAAG,IAAI,CAAC,OAAO,CAAC;AACnC,QAAA,WAAW,CAAC,QAAQ,GAAG,IAAI,CAAC,QAAQ,CAAC;QACrC,WAAW,CAAC,MAAM,GAAG;AACjB,YAAA;gBACI,IAAI,EAAE,IAAI,CAAC,WAAW;AACtB,gBAAA,KAAK,EAAE,KAAK;AACZ,gBAAA,GAAG,EAAE,KAAK;AACV,gBAAA,cAAc,EAAE,QAAQ;AACxB,gBAAA,cAAc,EAAE,KAAK;AACxB,aAAA;SACJ,CAAC;QACF,WAAW,CAAC,aAAa,EAAE,CAAC;AAC5B,QAAA,WAAW,CAAC,QAAQ,GAAG,QAAQ,CAAC;AAEhC,QAAA,OAAO,WAAW,CAAC;KACtB;;kIAxLQ,oCAAoC,EAAA,IAAA,EAAA,CAAA,EAAA,KAAA,EAAA5B,IAAA,CAAA,cAAA,EAAA,EAAA,EAAA,KAAA,EAAAiC,oBAAA,EAAA,EAAA,EAAA,KAAA,EAAA,EAAA,CAAA,gBAAA,EAAA,CAAA,EAAA,MAAA,EAAA,EAAA,CAAA,eAAA,CAAA,SAAA,EAAA,CAAA,CAAA;AAApC,oCAAA,CAAA,IAAA,GAAA,EAAA,CAAA,oBAAA,CAAA,EAAA,UAAA,EAAA,QAAA,EAAA,OAAA,EAAA,SAAA,EAAA,IAAA,EAAA,oCAAoC,+DCpBjD,utHAmFc,EAAA,UAAA,EAAA,CAAA,EAAA,IAAA,EAAAjB,EAAA,CAAA,sBAAA,EAAA,QAAA,EAAA,qBAAA,EAAA,MAAA,EAAA,CAAA,gCAAA,EAAA,cAAA,EAAA,qBAAA,EAAA,aAAA,EAAA,aAAA,EAAA,UAAA,EAAA,wBAAA,EAAA,cAAA,EAAA,UAAA,EAAA,cAAA,EAAA,kBAAA,EAAA,sBAAA,CAAA,EAAA,OAAA,EAAA,CAAA,mBAAA,CAAA,EAAA,EAAA,EAAA,IAAA,EAAAT,EAAA,CAAA,OAAA,EAAA,QAAA,EAAA,UAAA,EAAA,QAAA,EAAA,CAAA,SAAA,CAAA,EAAA,EAAA,EAAA,IAAA,EAAAU,KAAA,CAAA,iBAAA,EAAA,QAAA,EAAA,cAAA,EAAA,MAAA,EAAA,CAAA,cAAA,EAAA,eAAA,EAAA,SAAA,CAAA,EAAA,EAAA,EAAA,IAAA,EAAA,EAAA,CAAA,iBAAA,EAAA,QAAA,EAAA,qBAAA,EAAA,MAAA,EAAA,CAAA,OAAA,EAAA,YAAA,EAAA,OAAA,CAAA,EAAA,CAAA,EAAA,UAAA,EAAA,CAAA,EAAA,IAAA,EAAAT,GAAA,CAAA,gBAAA,EAAA,QAAA,EAAA,oBAAA,EAAA,MAAA,EAAA,CAAA,yBAAA,EAAA,kBAAA,CAAA,EAAA,EAAA,EAAA,IAAA,EAAAA,GAAA,CAAA,IAAA,EAAA,QAAA,EAAA,QAAA,EAAA,MAAA,EAAA,CAAA,MAAA,EAAA,UAAA,EAAA,UAAA,CAAA,EAAA,CAAA,EAAA,CAAA,CAAA;4FD/DD,oCAAoC,EAAA,UAAA,EAAA,CAAA;kBANhD,SAAS;AAAC,YAAA,IAAA,EAAA,CAAA;AACP,oBAAA,QAAQ,EAAE,yBAAyB;AACnC,oBAAA,WAAW,EAAE,sCAAsC;AACnD,oBAAA,MAAM,EAAE,EACP;AACJ,iBAAA,CAAA;;;AEdD,MAAMoB,QAAM,GAAW;AACnB,IAAA;AACI,QAAA,IAAI,EAAE,EAAE;AACR,QAAA,SAAS,EAAE,oCAAoC;AAClD,KAAA;CACJ,CAAC;MAMW,wCAAwC,CAAA;;sIAAxC,wCAAwC,EAAA,IAAA,EAAA,EAAA,EAAA,MAAA,EAAA,EAAA,CAAA,eAAA,CAAA,QAAA,EAAA,CAAA,CAAA;AAAxC,wCAAA,CAAA,IAAA,GAAA,EAAA,CAAA,mBAAA,CAAA,EAAA,UAAA,EAAA,QAAA,EAAA,OAAA,EAAA,SAAA,EAAA,QAAA,EAAA,EAAA,EAAA,IAAA,EAAA,wCAAwC,0CAFvC,YAAY,CAAA,EAAA,CAAA,CAAA;uIAEb,wCAAwC,EAAA,OAAA,EAAA,CAHxC,CAAC,YAAY,CAAC,QAAQ,CAACA,QAAM,CAAC,CAAC,EAC9B,YAAY,CAAA,EAAA,CAAA,CAAA;4FAEb,wCAAwC,EAAA,UAAA,EAAA,CAAA;kBAJpD,QAAQ;AAAC,YAAA,IAAA,EAAA,CAAA;oBACN,OAAO,EAAE,CAAC,YAAY,CAAC,QAAQ,CAACA,QAAM,CAAC,CAAC;oBACxC,OAAO,EAAE,CAAC,YAAY,CAAC;AAC1B,iBAAA,CAAA;;;ACJD;MAgBa,iCAAiC,CAAA;;+HAAjC,iCAAiC,EAAA,IAAA,EAAA,EAAA,EAAA,MAAA,EAAA,EAAA,CAAA,eAAA,CAAA,QAAA,EAAA,CAAA,CAAA;gIAAjC,iCAAiC,EAAA,YAAA,EAAA,CAXtC,oCAAoC,CAAA,EAAA,OAAA,EAAA,CAGpC,YAAY;QACZ,wCAAwC;QACxC,mBAAmB;QACnB,cAAc;QACd,cAAc;QACd,aAAa,CAAA,EAAA,CAAA,CAAA;AAGR,iCAAA,CAAA,IAAA,GAAA,EAAA,CAAA,mBAAA,CAAA,EAAA,UAAA,EAAA,QAAA,EAAA,OAAA,EAAA,SAAA,EAAA,QAAA,EAAA,EAAA,EAAA,IAAA,EAAA,iCAAiC,EATjC,OAAA,EAAA,CAAA;YACL,YAAY;YACZ,wCAAwC;YACxC,mBAAmB;YACnB,cAAc;YACd,cAAc;YACd,aAAa;AAChB,SAAA,CAAA,EAAA,CAAA,CAAA;4FAEQ,iCAAiC,EAAA,UAAA,EAAA,CAAA;kBAb7C,QAAQ;AAAC,YAAA,IAAA,EAAA,CAAA;AACN,oBAAA,YAAY,EAAE;wBACV,oCAAoC;AACvC,qBAAA;AACD,oBAAA,OAAO,EAAE;wBACL,YAAY;wBACZ,wCAAwC;wBACxC,mBAAmB;wBACnB,cAAc;wBACd,cAAc;wBACd,aAAa;AAChB,qBAAA;AACJ,iBAAA,CAAA;;;MCjBY,YAAY,CAAA;AAErB,IAAA,WAAA,CACY,MAAiB,EAAA;QAAjB,IAAM,CAAA,MAAA,GAAN,MAAM,CAAW;KACxB;AAEL,IAAA,UAAU,CAAC,SAAS,EAAA;AAChB,QAAA,IAAI,SAAS,CAAC;QACd,SAAS,GAAG,IAAI,CAAC,MAAM,CAAC,IAAI,CAAC,cAAc,EAAE;AACzC,YAAA,IAAI,EAAE;AACF,gBAAA,SAAS,EAAE,SAAS;AACvB,aAAA;AACD,YAAA,QAAQ,EAAE,OAAO;AACjB,YAAA,QAAQ,EAAE,OAAO;AACpB,SAAA,CAAC,CAAC;KACN;;0GAfQ,YAAY,EAAA,IAAA,EAAA,CAAA,EAAA,KAAA,EAAA5B,IAAA,CAAA,SAAA,EAAA,CAAA,EAAA,MAAA,EAAA,EAAA,CAAA,eAAA,CAAA,UAAA,EAAA,CAAA,CAAA;AAAZ,YAAA,CAAA,KAAA,GAAA,EAAA,CAAA,qBAAA,CAAA,EAAA,UAAA,EAAA,QAAA,EAAA,OAAA,EAAA,SAAA,EAAA,QAAA,EAAA,EAAA,EAAA,IAAA,EAAA,YAAY,cAHT,MAAM,EAAA,CAAA,CAAA;4FAGT,YAAY,EAAA,UAAA,EAAA,CAAA;kBAJxB,UAAU;AAAC,YAAA,IAAA,EAAA,CAAA;AACR,oBAAA,UAAU,EAAE,MAAM;AACrB,iBAAA,CAAA;;;MCGY,oBAAoB,CAAA;IAE7B,WACY,CAAA,IAAgB,EACO,WAAgB,EAAA;QADvC,IAAI,CAAA,IAAA,GAAJ,IAAI,CAAY;QACO,IAAW,CAAA,WAAA,GAAX,WAAW,CAAK;KAC9C;IAEL,sBAAsB,CAAC,KAAK,EAAE,WAAW,EAAA;AACrC,QAAA,IAAI,OAAO,GAAG,IAAI,WAAW,EAAE,CAAC,GAAG,CAAC,YAAY,EAAE,KAAK,CAAC,CAAC;QAEzD,OAAO,IAAI,CAAC,IAAI,CAAC,IAAI,CAAC,CAAG,EAAA,IAAI,CAAC,WAAW,CAAC,kBAAkB,iBAAiB,KAAK,CAAA,YAAA,CAAc,EAAE,WAAW,EAAE,EAAE,OAAO,EAAE,OAAO,EAAE,CAAC,CAAC;KACxI;IAED,gBAAgB,CAAC,KAAK,EAAE,WAAW,EAAA;AAC/B,QAAA,IAAI,OAAO,GAAG,IAAI,WAAW,EAAE,CAAC,GAAG,CAAC,YAAY,EAAE,KAAK,CAAC,CAAC;QAEzD,OAAO,IAAI,CAAC,IAAI,CAAC,IAAI,CAAmB,CAAG,EAAA,IAAI,CAAC,WAAW,CAAC,kBAAkB,iBAAiB,KAAK,CAAA,oBAAA,CAAsB,EAAE,WAAW,EAAE,EAAE,OAAO,EAAE,OAAO,EAAE,CAAC,CAAC;KAClK;IAED,mBAAmB,CAAC,KAAK,EAAE,WAAW,EAAA;AAClC,QAAA,IAAI,OAAO,GAAG,IAAI,WAAW,EAAE,CAAC,GAAG,CAAC,YAAY,EAAE,KAAK,CAAC,CAAC;QAEzD,OAAO,IAAI,CAAC,IAAI,CAAC,IAAI,CAAsB,CAAG,EAAA,IAAI,CAAC,WAAW,CAAC,kBAAkB,iBAAiB,KAAK,CAAA,oBAAA,CAAsB,EAAE,WAAW,EAAE,EAAE,OAAO,EAAE,OAAO,EAAE,CAAC,CAAC;KACrK;;AAvBQ,oBAAA,CAAA,IAAA,GAAA,EAAA,CAAA,kBAAA,CAAA,EAAA,UAAA,EAAA,QAAA,EAAA,OAAA,EAAA,SAAA,EAAA,QAAA,EAAA,EAAA,EAAA,IAAA,EAAA,oBAAoB,4CAIjB,aAAa,EAAA,CAAA,EAAA,MAAA,EAAA,EAAA,CAAA,eAAA,CAAA,UAAA,EAAA,CAAA,CAAA;AAJhB,oBAAA,CAAA,KAAA,GAAA,EAAA,CAAA,qBAAA,CAAA,EAAA,UAAA,EAAA,QAAA,EAAA,OAAA,EAAA,SAAA,EAAA,QAAA,EAAA,EAAA,EAAA,IAAA,EAAA,oBAAoB,cAFjB,MAAM,EAAA,CAAA,CAAA;4FAET,oBAAoB,EAAA,UAAA,EAAA,CAAA;kBAHhC,UAAU;AAAC,YAAA,IAAA,EAAA,CAAA;AACR,oBAAA,UAAU,EAAE,MAAM;AACrB,iBAAA,CAAA;;0BAKQ,MAAM;2BAAC,aAAa,CAAA;;;MCJhB,iBAAiB,CAAA;AAE1B,IAAA,WAAA,CACY,oBAA0C,EAAA;QAA1C,IAAoB,CAAA,oBAAA,GAApB,oBAAoB,CAAsB;KACjD;IAEC,sBAAsB,CAAC,KAAK,EAAE,WAAW,EAAA;;AAC3C,YAAA,IAAI,mBAAmB,CAAC;YACxB,IAAI;AACA,gBAAA,mBAAmB,GAAG,MAAM,IAAI,CAAC,oBAAoB,CAAC,sBAAsB,CAAC,KAAK,EAAE,WAAW,CAAC,CAAC,SAAS,EAAE,CAAC;AAE7G,gBAAA,IAAI,mBAAmB,EAAE;AACrB,oBAAA,OAAO,mBAAmB,CAAC;AAC9B,iBAAA;AACJ,aAAA;AAAC,YAAA,OAAO,KAAK,EAAE;AACZ,gBAAA,OAAO,CAAC,KAAK,CAAC,SAAS,EAAE,KAAK,CAAC,CAAC;AAChC,gBAAA,MAAM,KAAK,CAAC;AACf,aAAA;SACJ,CAAA,CAAA;AAAA,KAAA;IAEK,gBAAgB,CAAC,KAAK,EAAE,WAAW,EAAA;;AACrC,YAAA,IAAI,MAAM,CAAC;YACX,IAAI;AACA,gBAAA,MAAM,GAAG,MAAM,IAAI,CAAC,oBAAoB,CAAC,gBAAgB,CAAC,KAAK,EAAE,WAAW,CAAC,CAAC,SAAS,EAAE,CAAC;AAE1F,gBAAA,IAAI,MAAM,EAAE;AACR,oBAAA,OAAO,MAAM,CAAC;AACjB,iBAAA;AAAM,qBAAA;AACH,oBAAA,OAAO,CAAC,IAAI,aAAa,EAAE,CAAC,CAAC;AAChC,iBAAA;AACJ,aAAA;AAAC,YAAA,OAAO,KAAK,EAAE;AACZ,gBAAA,OAAO,CAAC,KAAK,CAAC,SAAS,EAAE,KAAK,CAAC,CAAC;AAChC,gBAAA,MAAM,KAAK,CAAC;AACf,aAAA;SACJ,CAAA,CAAA;AAAA,KAAA;IAEK,mBAAmB,CAAC,KAAK,EAAE,WAAW,EAAA;;AACxC,YAAA,IAAI,SAAS,CAAC;YACd,IAAI;AACA,gBAAA,SAAS,GAAG,MAAM,IAAI,CAAC,oBAAoB,CAAC,mBAAmB,CAAC,KAAK,EAAE,WAAW,CAAC,CAAC,SAAS,EAAE,CAAC;AAEhG,gBAAA,IAAI,SAAS,EAAE;AACX,oBAAA,OAAO,SAAS,CAAC;AACpB,iBAAA;AAAM,qBAAA;AACH,oBAAA,OAAO,CAAC,IAAI,gBAAgB,EAAE,CAAC,CAAC;AACnC,iBAAA;AACJ,aAAA;AAAC,YAAA,OAAO,KAAK,EAAE;AACZ,gBAAA,OAAO,CAAC,KAAK,CAAC,SAAS,EAAE,KAAK,CAAC,CAAC;AAChC,gBAAA,MAAM,KAAK,CAAC;AACf,aAAA;SACJ,CAAA,CAAA;AAAA,KAAA;;+GAlDQ,iBAAiB,EAAA,IAAA,EAAA,CAAA,EAAA,KAAA,EAAAkC,oBAAA,EAAA,CAAA,EAAA,MAAA,EAAA,EAAA,CAAA,eAAA,CAAA,UAAA,EAAA,CAAA,CAAA;AAAjB,iBAAA,CAAA,KAAA,GAAA,EAAA,CAAA,qBAAA,CAAA,EAAA,UAAA,EAAA,QAAA,EAAA,OAAA,EAAA,SAAA,EAAA,QAAA,EAAA,EAAA,EAAA,IAAA,EAAA,iBAAiB,cAHd,MAAM,EAAA,CAAA,CAAA;4FAGT,iBAAiB,EAAA,UAAA,EAAA,CAAA;kBAJ7B,UAAU;AAAC,YAAA,IAAA,EAAA,CAAA;AACR,oBAAA,UAAU,EAAE,MAAM;AACrB,iBAAA,CAAA;;;ACMD;MAOa,wBAAwB,CAAA;IA+BjC,WACY,CAAA,cAA8B,EAC9B,aAA4B,EAC5B,iBAAoC,EACrC,WAAwB,EACvB,YAA0B,EAAA;QAJ1B,IAAc,CAAA,cAAA,GAAd,cAAc,CAAgB;QAC9B,IAAa,CAAA,aAAA,GAAb,aAAa,CAAe;QAC5B,IAAiB,CAAA,iBAAA,GAAjB,iBAAiB,CAAmB;QACrC,IAAW,CAAA,WAAA,GAAX,WAAW,CAAa;QACvB,IAAY,CAAA,YAAA,GAAZ,YAAY,CAAc;QAlCtC,IAAc,CAAA,cAAA,GAAG,eAAe,CAAC;QACjC,IAA2B,CAAA,2BAAA,GAAG,2BAA2B,CAAC;QAE1D,IAAa,CAAA,aAAA,GAAG,aAAa,CAAC;QAM9B,IAAe,CAAA,eAAA,GAAY,IAAI,CAAC;;QAGhC,IAAgB,CAAA,gBAAA,GAAY,IAAI,CAAC;QACjC,IAAkB,CAAA,kBAAA,GAAY,KAAK,CAAC;QACpC,IAAwB,CAAA,wBAAA,GAAY,KAAK,CAAC;AAE1C,QAAA,IAAA,CAAA,WAAW,GAAG,CAAC,IAAI,UAAU,EAAE,CAAC,CAAC;AACjC,QAAA,IAAA,CAAA,aAAa,GAAG,IAAI,eAAe,EAAE,CAAC;QACtC,IAAqB,CAAA,qBAAA,GAAU,EAAE,CAAC;AAClC,QAAA,IAAA,CAAA,cAAc,GAAG,CAAC,IAAI,aAAa,EAAE,CAAC,CAAC;QAEvC,IAAY,CAAA,YAAA,GAAgB,IAAI,WAAW,CAAC,EAAE,EAAE,UAAU,CAAC,QAAQ,CAAC,CAAC;QACrE,IAAQ,CAAA,QAAA,GAAgB,IAAI,WAAW,CAAC,EAAE,EAAE,UAAU,CAAC,QAAQ,CAAC,CAAC;QAEjE,IAAoB,CAAA,oBAAA,GAA2B,IAAI,sBAAsB,CAAC,CAAC,MAAM,CAAC,CAAC,CAAC;KAW/E;IAEL,QAAQ,GAAA;QACJ,IAAI,CAAC,KAAK,GAAG,IAAI,CAAC,cAAc,CAAC,UAAU,CAAC,cAAc,CAAC,CAAC;QAC5D,IAAI,CAAC,QAAQ,GAAG,IAAI,CAAC,cAAc,CAAC,UAAU,CAAC,UAAU,CAAC,CAAC;QAC3D,IAAI,CAAC,QAAQ,GAAG,IAAI,CAAC,cAAc,CAAC,UAAU,CAAC,UAAU,CAAC,CAAC;QAE3D,IAAI,CAAC,uBAAuB,EAAE,CAAC;KAClC;IAEK,uBAAuB,GAAA;;YACzB,IAAI;AACA,gBAAA,IAAI,CAAC,WAAW,IAAkB,MAAM,IAAI,CAAC,aAAa,CAAC,uBAAuB,CAAC,IAAI,CAAC,KAAK,EAAE,KAAK,CAAC,CAAA,CAAC;gBAEtG,IAAI,CAAC,oBAAoB,CAAC,SAAS,GAAG,IAAI,CAAC,WAAW,CAAC;AACvD,gBAAA,IAAI,CAAC,oBAAoB,CAAC,kBAAkB,EAAE,CAAC;gBAE/C,IAAI,IAAI,CAAC,WAAW,IAAI,IAAI,CAAC,WAAW,CAAC,MAAM,GAAG,CAAC,EAAE;oBACjD,MAAM,iBAAiB,GAAG,IAAI,CAAC,WAAW,CAAC,CAAC,CAAC,CAAC,IAAI,CAAC;AAEnD,oBAAA,IAAI,iBAAiB,EAAE;AACnB,wBAAA,IAAI,CAAC,YAAY,CAAC,UAAU,CAAC,iBAAiB,CAAC,CAAC;wBAChD,IAAI,CAAC,gCAAgC,CAAC,IAAI,CAAC,YAAY,CAAC,KAAK,CAAC,CAAC;AAClE,qBAAA;AACJ,iBAAA;AACJ,aAAA;AAAC,YAAA,OAAO,KAAK,EAAE;AACZ,gBAAA,OAAO,CAAC,KAAK,CAAC,oCAAoC,EAAE,KAAK,CAAC,CAAC;AAC9D,aAAA;AAAS,oBAAA;AACN,gBAAA,IAAI,CAAC,gBAAgB,GAAG,KAAK,CAAC;AACjC,aAAA;SACJ,CAAA,CAAA;AAAA,KAAA;AAED,IAAA,gBAAgB,CAAC,YAAY,EAAA;AACzB,QAAA,IAAI,CAAC,QAAQ,CAAC,QAAQ,CAAC,EAAE,CAAC,CAAC;AAC3B,QAAA,IAAI,CAAC,YAAY,CAAC,UAAU,CAAC,YAAY,CAAC,CAAC;QAE3C,IAAI,CAAC,cAAc,GAAG,CAAC,IAAI,aAAa,EAAE,CAAC,CAAC;AAC5C,QAAA,IAAI,CAAC,gCAAgC,CAAC,YAAY,CAAC,CAAC;KACvD;AAEK,IAAA,gCAAgC,CAAC,UAAU,EAAA;;YAC7C,IAAI;AACA,gBAAA,IAAI,CAAC,kBAAkB,GAAG,IAAI,CAAC;AAE/B,gBAAA,IAAI,WAAW,GAAG;oBACd,YAAY,EAAE,CAAC,UAAU,CAAC;iBAC7B,CAAC;gBAEF,IAAI,CAAC,aAAa,GAAG,MAAM,IAAI,CAAC,aAAa,CAAC,gCAAgC,CAAC,IAAI,CAAC,KAAK,EAAE,IAAI,CAAC,QAAQ,EAAE,WAAW,EAAE,KAAK,CAAC,CAAC;gBAC9H,IAAI,CAAC,qBAAqB,GAAG,CAAC,IAAI,CAAC,aAAa,CAAC,CAAC;AAErD,aAAA;AAAC,YAAA,OAAO,KAAK,EAAE;AACZ,gBAAA,OAAO,CAAC,KAAK,CAAC,6CAA6C,EAAE,KAAK,CAAC,CAAC;AACvE,aAAA;AAAS,oBAAA;AACN,gBAAA,IAAI,CAAC,kBAAkB,GAAG,KAAK,CAAC;AACnC,aAAA;SACJ,CAAA,CAAA;AAAA,KAAA;AAED,IAAA,QAAQ,CAAC,KAAa,EAAA;QAClB,MAAM,UAAU,GAAG,KAAK,CAAC,IAAI,EAAE,CAAC,WAAW,EAAE,CAAC;AAE9C,QAAA,IAAI,UAAU,CAAC,MAAM,GAAG,CAAC,EAAE;AACvB,YAAA,IAAI,CAAC,qBAAqB,GAAG,IAAI,CAAC,cAAc,CAAC,CAAC,IAAI,CAAC,aAAa,CAAC,EAAE,UAAU,CAAC,CAAC;AACtF,SAAA;AAAM,aAAA;AACH,YAAA,IAAI,CAAC,SAAS,CAAC,WAAW,EAAE,CAAC;YAC7B,IAAI,CAAC,qBAAqB,GAAG,CAAC,IAAI,CAAC,aAAa,CAAC,CAAC;AACrD,SAAA;KACJ;IAED,cAAc,CAAC,QAAe,EAAE,UAAkB,EAAA;QAC9C,IAAI,OAAO,GAAU,EAAE,CAAC;AAExB,QAAA,QAAQ,CAAC,OAAO,CAAC,MAAM,IAAG;YACtB,IAAI,MAAM,CAAC,IAAI,CAAC,WAAW,EAAE,CAAC,QAAQ,CAAC,UAAU,CAAC,EAAE;AAChD,gBAAA,OAAO,CAAC,IAAI,CAAC,MAAM,CAAC,CAAC;AACxB,aAAA;iBAAM,IAAI,MAAM,CAAC,QAAQ,IAAI,MAAM,CAAC,QAAQ,CAAC,MAAM,GAAG,CAAC,EAAE;AACtD,gBAAA,MAAM,gBAAgB,GAAG,IAAI,CAAC,cAAc,CAAC,MAAM,CAAC,QAAQ,EAAE,UAAU,CAAC,CAAC;AAC1E,gBAAA,IAAI,gBAAgB,CAAC,MAAM,GAAG,CAAC,EAAE;oBAC7B,MAAM,UAAU,GAAG,MAAM,CAAC,MAAM,CAAC,EAAE,EAAE,MAAM,CAAC,CAAC;AAC7C,oBAAA,UAAU,CAAC,QAAQ,GAAG,gBAAgB,CAAC;AACvC,oBAAA,OAAO,CAAC,IAAI,CAAC,UAAU,CAAC,CAAC;AAC5B,iBAAA;AACJ,aAAA;AACL,SAAC,CAAC,CAAC;AAEH,QAAA,OAAO,OAAO,CAAC;KAClB;IAED,aAAa,GAAA;AACT,QAAA,IAAI,CAAC,eAAe,GAAG,IAAI,CAAC;KAC/B;IAED,cAAc,GAAA;AACV,QAAA,IAAI,CAAC,eAAe,GAAG,KAAK,CAAC;KAChC;AAED,IAAA,gBAAgB,CAAC,MAAW,EAAA;AACxB,QAAA,OAAO,CAAC,MAAM,CAAC,IAAI,IAAI,UAAU,IAAI,MAAM,CAAC,IAAI,IAAI,QAAQ,KAAK,MAAM,CAAC,QAAQ,IAAI,MAAM,CAAC,QAAQ,CAAC,IAAI,CAAC,KAAK,IAAI,KAAK,CAAC,IAAI,IAAI,QAAQ,CAAC,CAAC;KAC7I;IAED,uBAAuB,GAAA;AACnB,QAAA,MAAM,aAAa,GAAG,IAAI,CAAC,QAAQ,CAAC,KAAK,CAAC;AAC1C,QAAA,IAAI,CAAC,wBAAwB,GAAG,IAAI,CAAC;AACrC,QAAA,IAAI,CAAC,gBAAgB,CAAC,aAAa,CAAC,CAAC;KACxC;AAED,IAAA,eAAe,CAAC,MAAW,EAAA;AACvB,QAAA,IAAI,MAAM,CAAC,IAAI,IAAI,UAAU,EAAE;AAC3B,YAAA,OAAO,UAAU,CAAC;AACrB,SAAA;AAAM,aAAA,IAAI,MAAM,CAAC,IAAI,IAAI,QAAQ,EAAE;AAChC,YAAA,OAAO,QAAQ,CAAC;AACnB,SAAA;AAAM,aAAA,IAAI,MAAM,CAAC,IAAI,IAAI,QAAQ,EAAE;AAChC,YAAA,OAAO,QAAQ,CAAC;AACnB,SAAA;KACJ;AAEK,IAAA,gBAAgB,CAAC,aAAa,EAAA;;YAChC,IAAI;AACA,gBAAA,IAAI,WAAW,GAAG,IAAI,6BAA6B,EAAE,CAAC;AAEtD,gBAAA,WAAW,CAAC,QAAQ,GAAG,aAAa,CAAC;AACrC,gBAAA,WAAW,CAAC,QAAQ,GAAG,IAAI,CAAC,QAAQ,CAAC;AACrC,gBAAA,WAAW,CAAC,QAAQ,GAAG,CAAC,CAAC;AAEzB,gBAAA,IAAI,CAAC,cAAc,IAAqB,MAAM,IAAI,CAAC,iBAAiB,CAAC,gBAAgB,CAAC,IAAI,CAAC,KAAK,EAAE,WAAW,CAAC,CAAA,CAAC;AAClH,aAAA;AAAC,YAAA,OAAO,KAAK,EAAE;AACZ,gBAAA,OAAO,CAAC,KAAK,CAAC,6BAA6B,EAAE,KAAK,CAAC,CAAC;AACvD,aAAA;AAAS,oBAAA;AACN,gBAAA,IAAI,CAAC,wBAAwB,GAAG,KAAK,CAAC;AACzC,aAAA;SACJ,CAAA,CAAA;AAAA,KAAA;AAED,IAAA,SAAS,CAAC,WAAW,EAAE,QAAQ,EAAE,QAAQ,EAAA;AACrC,QAAA,IAAI,WAAW,GAAG;AACd,YAAA,WAAW,EAAE,WAAW;AACxB,YAAA,QAAQ,EAAE,QAAQ;AAClB,YAAA,QAAQ,EAAE,QAAQ;SACrB,CAAC;AACF,QAAA,IAAI,CAAC,YAAY,CAAC,UAAU,CAAC,WAAW,CAAC,CAAC;KAC7C;;sHAhLQ,wBAAwB,EAAA,IAAA,EAAA,CAAA,EAAA,KAAA,EAAAlC,IAAA,CAAA,cAAA,EAAA,EAAA,EAAA,KAAA,EAAAsB,aAAA,EAAA,EAAA,EAAA,KAAA,EAAAa,iBAAA,EAAA,EAAA,EAAA,KAAA,EAAAnB,EAAA,CAAA,WAAA,EAAA,EAAA,EAAA,KAAA,EAAAoB,YAAA,EAAA,CAAA,EAAA,MAAA,EAAA,EAAA,CAAA,eAAA,CAAA,SAAA,EAAA,CAAA,CAAA;AAAxB,wBAAA,CAAA,IAAA,GAAA,EAAA,CAAA,oBAAA,CAAA,EAAA,UAAA,EAAA,QAAA,EAAA,OAAA,EAAA,SAAA,EAAA,IAAA,EAAA,wBAAwB,+PCrBrC,ynXA8Lc,EAAA,MAAA,EAAA,CAAA,iaAAA,CAAA,EAAA,UAAA,EAAA,CAAA,EAAA,IAAA,EAAAnB,IAAA,CAAA,YAAA,EAAA,QAAA,EAAA,gBAAA,EAAA,MAAA,EAAA,CAAA,OAAA,EAAA,YAAA,EAAA,YAAA,EAAA,oBAAA,EAAA,WAAA,CAAA,EAAA,QAAA,EAAA,CAAA,cAAA,CAAA,EAAA,EAAA,EAAA,IAAA,EAAAT,EAAA,CAAA,SAAA,EAAA,QAAA,EAAA,YAAA,EAAA,MAAA,EAAA,CAAA,UAAA,EAAA,eAAA,EAAA,UAAA,CAAA,EAAA,QAAA,EAAA,CAAA,WAAA,CAAA,EAAA,EAAA,EAAA,IAAA,EAAAC,GAAA,CAAA,SAAA,EAAA,QAAA,EAAA,YAAA,EAAA,QAAA,EAAA,CAAA,WAAA,CAAA,EAAA,EAAA,EAAA,IAAA,EAAAC,IAAA,CAAA,wBAAA,EAAA,QAAA,EAAA,uBAAA,EAAA,MAAA,EAAA,CAAA,kBAAA,EAAA,MAAA,EAAA,WAAA,EAAA,cAAA,EAAA,qBAAA,EAAA,gCAAA,EAAA,kBAAA,EAAA,WAAA,EAAA,qBAAA,EAAA,4BAAA,EAAA,8BAAA,EAAA,uCAAA,EAAA,WAAA,EAAA,uBAAA,EAAA,0BAAA,EAAA,gCAAA,EAAA,iCAAA,EAAA,kCAAA,EAAA,uBAAA,EAAA,mCAAA,CAAA,EAAA,OAAA,EAAA,CAAA,WAAA,CAAA,EAAA,EAAA,EAAA,IAAA,EAAAC,IAAA,CAAA,iBAAA,EAAA,QAAA,EAAA,qBAAA,EAAA,MAAA,EAAA,CAAA,UAAA,EAAA,UAAA,EAAA,YAAA,EAAA,gBAAA,CAAA,EAAA,OAAA,EAAA,CAAA,QAAA,EAAA,QAAA,EAAA,gBAAA,EAAA,aAAA,EAAA,eAAA,CAAA,EAAA,QAAA,EAAA,CAAA,mBAAA,CAAA,EAAA,EAAA,EAAA,IAAA,EAAAA,IAAA,CAAA,uBAAA,EAAA,QAAA,EAAA,4BAAA,EAAA,MAAA,EAAA,CAAA,UAAA,EAAA,gBAAA,EAAA,iBAAA,CAAA,EAAA,EAAA,EAAA,IAAA,EAAAC,EAAA,CAAA,qBAAA,EAAA,QAAA,EAAA,oBAAA,EAAA,MAAA,EAAA,CAAA,MAAA,EAAA,UAAA,EAAA,OAAA,CAAA,EAAA,OAAA,EAAA,CAAA,YAAA,CAAA,EAAA,EAAA,EAAA,IAAA,EAAAC,KAAA,CAAA,yBAAA,EAAA,QAAA,EAAA,mBAAA,EAAA,MAAA,EAAA,CAAA,UAAA,EAAA,YAAA,EAAA,iBAAA,EAAA,kBAAA,EAAA,QAAA,CAAA,EAAA,OAAA,EAAA,CAAA,WAAA,EAAA,WAAA,EAAA,YAAA,EAAA,cAAA,EAAA,cAAA,EAAA,eAAA,EAAA,aAAA,EAAA,eAAA,EAAA,aAAA,EAAA,eAAA,CAAA,EAAA,QAAA,EAAA,CAAA,qBAAA,CAAA,EAAA,EAAA,EAAA,IAAA,EAAA,GAAA,CAAA,cAAA,EAAA,QAAA,EAAA,kBAAA,EAAA,MAAA,EAAA,CAAA,eAAA,EAAA,UAAA,CAAA,EAAA,QAAA,EAAA,CAAA,gBAAA,CAAA,EAAA,EAAA,EAAA,IAAA,EAAAwB,EAAA,CAAA,OAAA,EAAA,QAAA,EAAA,UAAA,EAAA,QAAA,EAAA,CAAA,SAAA,CAAA,EAAA,EAAA,EAAA,IAAA,EAAAzB,EAAA,CAAA,iBAAA,EAAA,QAAA,EAAA,qBAAA,EAAA,MAAA,EAAA,CAAA,OAAA,EAAA,YAAA,EAAA,OAAA,CAAA,EAAA,CAAA,EAAA,UAAA,EAAA,CAAA,EAAA,IAAA,EAAA0B,GAAA,CAAA,IAAA,EAAA,QAAA,EAAA,QAAA,EAAA,MAAA,EAAA,CAAA,MAAA,EAAA,UAAA,EAAA,UAAA,CAAA,EAAA,EAAA,EAAA,IAAA,EAAAA,GAAA,CAAA,gBAAA,EAAA,QAAA,EAAA,oBAAA,EAAA,MAAA,EAAA,CAAA,yBAAA,EAAA,kBAAA,CAAA,EAAA,EAAA,EAAA,IAAA,EAAArB,IAAA,CAAA,QAAA,EAAA,QAAA,EAAA,WAAA,EAAA,EAAA,EAAA,IAAA,EAAAsB,IAAA,CAAA,iBAAA,EAAA,QAAA,EAAA,wIAAA,EAAA,MAAA,EAAA,CAAA,UAAA,CAAA,EAAA,EAAA,EAAA,IAAA,EAAAA,IAAA,CAAA,eAAA,EAAA,QAAA,EAAA,2CAAA,EAAA,EAAA,EAAA,IAAA,EAAAA,IAAA,CAAA,oBAAA,EAAA,QAAA,EAAA,eAAA,EAAA,MAAA,EAAA,CAAA,UAAA,EAAA,aAAA,EAAA,SAAA,CAAA,EAAA,OAAA,EAAA,CAAA,eAAA,CAAA,EAAA,QAAA,EAAA,CAAA,QAAA,CAAA,EAAA,EAAA,EAAA,IAAA,EAAAD,GAAA,CAAA,OAAA,EAAA,QAAA,EAAA,kBAAA,EAAA,MAAA,EAAA,CAAA,SAAA,EAAA,cAAA,EAAA,eAAA,CAAA,EAAA,EAAA,EAAA,IAAA,EAAArB,IAAA,CAAA,QAAA,EAAA,QAAA,EAAA,WAAA,EAAA,MAAA,EAAA,CAAA,IAAA,CAAA,EAAA,EAAA,EAAA,IAAA,EAAAN,IAAA,CAAA,YAAA,EAAA,QAAA,EAAA,eAAA,EAAA,MAAA,EAAA,CAAA,OAAA,EAAA,aAAA,EAAA,gBAAA,EAAA,YAAA,CAAA,EAAA,QAAA,EAAA,CAAA,cAAA,CAAA,EAAA,EAAA,EAAA,IAAA,EAAAA,IAAA,CAAA,sBAAA,EAAA,QAAA,EAAA,iBAAA,EAAA,EAAA,EAAA,IAAA,EAAA,GAAA,CAAA,aAAA,EAAA,QAAA,EAAA,iBAAA,EAAA,QAAA,EAAA,CAAA,eAAA,CAAA,EAAA,EAAA,EAAA,IAAA,EAAA2B,GAAA,CAAA,OAAA,EAAA,QAAA,EAAA,WAAA,EAAA,MAAA,EAAA,CAAA,OAAA,EAAA,SAAA,CAAA,EAAA,EAAA,EAAA,IAAA,EAAAE,GAAA,CAAA,UAAA,EAAA,QAAA,EAAA,cAAA,EAAA,QAAA,EAAA,CAAA,YAAA,CAAA,EAAA,CAAA,EAAA,KAAA,EAAA,EAAA,OAAA,EAAAF,GAAA,CAAA,SAAA,EAAA,WAAA,EAAAA,GAAA,CAAA,aAAA,EAAA,EAAA,CAAA,CAAA;4FDzKD,wBAAwB,EAAA,UAAA,EAAA,CAAA;kBALpC,SAAS;AAAC,YAAA,IAAA,EAAA,CAAA;AACP,oBAAA,QAAQ,EAAE,YAAY;AACtB,oBAAA,WAAW,EAAE,yBAAyB;oBACtC,SAAS,EAAE,CAAC,yBAAyB,CAAC;AACzC,iBAAA,CAAA;+MA6B2B,SAAS,EAAA,CAAA;sBAAhC,SAAS;uBAAC,WAAW,CAAA;gBACQ,eAAe,EAAA,CAAA;sBAA5C,SAAS;uBAAC,iBAAiB,CAAA;;;AE7ChC,MAAMV,QAAM,GAAW;AACnB,IAAA;AACI,QAAA,IAAI,EAAE,EAAE;AACR,QAAA,SAAS,EAAE,wBAAwB;AACtC,KAAA;CACJ,CAAC;MAMW,4BAA4B,CAAA;;0HAA5B,4BAA4B,EAAA,IAAA,EAAA,EAAA,EAAA,MAAA,EAAA,EAAA,CAAA,eAAA,CAAA,QAAA,EAAA,CAAA,CAAA;AAA5B,4BAAA,CAAA,IAAA,GAAA,EAAA,CAAA,mBAAA,CAAA,EAAA,UAAA,EAAA,QAAA,EAAA,OAAA,EAAA,SAAA,EAAA,QAAA,EAAA,EAAA,EAAA,IAAA,EAAA,4BAA4B,0CAF3B,YAAY,CAAA,EAAA,CAAA,CAAA;2HAEb,4BAA4B,EAAA,OAAA,EAAA,CAH5B,CAAC,YAAY,CAAC,QAAQ,CAACA,QAAM,CAAC,CAAC,EAC9B,YAAY,CAAA,EAAA,CAAA,CAAA;4FAEb,4BAA4B,EAAA,UAAA,EAAA,CAAA;kBAJxC,QAAQ;AAAC,YAAA,IAAA,EAAA,CAAA;oBACN,OAAO,EAAE,CAAC,YAAY,CAAC,QAAQ,CAACA,QAAM,CAAC,CAAC;oBACxC,OAAO,EAAE,CAAC,YAAY,CAAC;AAC1B,iBAAA,CAAA;;;ACUD;MA2Ba,qBAAqB,CAAA;;mHAArB,qBAAqB,EAAA,IAAA,EAAA,EAAA,EAAA,MAAA,EAAA,EAAA,CAAA,eAAA,CAAA,QAAA,EAAA,CAAA,CAAA;oHAArB,qBAAqB,EAAA,YAAA,EAAA,CAvB1B,wBAAwB,CAAA,EAAA,OAAA,EAAA,CAGxB,YAAY;QACZ,4BAA4B;QAC5B,mBAAmB;QACnB,aAAa;QACb,kBAAkB;QAClB,cAAc;QACd,eAAe;QACf,qBAAqB;QACrB,kBAAkB;QAClB,eAAe;QACf,cAAc;QACd,gBAAgB;QAChB,wBAAwB;QACxB,sBAAsB;QACtB,WAAW;QACX,cAAc;QACd,kBAAkB,CAAA,EAAA,CAAA,CAAA;AAIb,qBAAA,CAAA,IAAA,GAAA,EAAA,CAAA,mBAAA,CAAA,EAAA,UAAA,EAAA,QAAA,EAAA,OAAA,EAAA,SAAA,EAAA,QAAA,EAAA,EAAA,EAAA,IAAA,EAAA,qBAAqB,EAFnB,SAAA,EAAA,CAAC,YAAY,CAAC,EAnBhB,OAAA,EAAA,CAAA;YACL,YAAY;YACZ,4BAA4B;YAC5B,mBAAmB;YACnB,aAAa;YACb,kBAAkB;YAClB,cAAc;YACd,eAAe;YACf,qBAAqB;YACrB,kBAAkB;YAClB,eAAe;YACf,cAAc;YACd,gBAAgB;YAChB,wBAAwB;YACxB,sBAAsB;YACtB,WAAW;YACX,cAAc;YACd,kBAAkB;AACrB,SAAA,CAAA,EAAA,CAAA,CAAA;4FAGQ,qBAAqB,EAAA,UAAA,EAAA,CAAA;kBAzBjC,QAAQ;AAAC,YAAA,IAAA,EAAA,CAAA;AACN,oBAAA,YAAY,EAAE;wBACV,wBAAwB;AAC3B,qBAAA;AACD,oBAAA,OAAO,EAAE;wBACL,YAAY;wBACZ,4BAA4B;wBAC5B,mBAAmB;wBACnB,aAAa;wBACb,kBAAkB;wBAClB,cAAc;wBACd,eAAe;wBACf,qBAAqB;wBACrB,kBAAkB;wBAClB,eAAe;wBACf,cAAc;wBACd,gBAAgB;wBAChB,wBAAwB;wBACxB,sBAAsB;wBACtB,WAAW;wBACX,cAAc;wBACd,kBAAkB;AACrB,qBAAA;oBACD,SAAS,EAAE,CAAC,YAAY,CAAC;AAC5B,iBAAA,CAAA;;;MC3CY,YAAY,CAAA;IAErB,kBAAkB,CAAC,WAAmB,EAAE,KAAa,EAAE,OAAe,EAAE,IAAY,EAAE,IAAY,EAAA;AAC9F,QAAA,WAAW,CAAC,SAAS,GAAG,IAAI,CAAC;AAC7B,QAAA,WAAW,CAAC,UAAU,GAAG,KAAK,CAAC;AAC/B,QAAA,WAAW,CAAC,YAAY,GAAG,OAAO,CAAC;AACnC,QAAA,WAAW,CAAC,gBAAgB,GAAG,IAAI,CAAC;AACpC,QAAA,WAAW,CAAC,gBAAgB,GAAG,IAAI,CAAC;AAEpC,QAAA,OAAO,WAAW,CAAC;KACtB;AAED,IAAA,oBAAoB,CAAC,WAAmB,EAAA;AACpC,QAAA,WAAW,CAAC,SAAS,GAAG,KAAK,CAAC;AAC9B,QAAA,WAAW,CAAC,UAAU,GAAG,EAAE,CAAC;AAC5B,QAAA,WAAW,CAAC,YAAY,GAAG,EAAE,CAAC;AAC9B,QAAA,WAAW,CAAC,gBAAgB,GAAG,EAAE,CAAC;AAClC,QAAA,WAAW,CAAC,gBAAgB,GAAG,EAAE,CAAC;AAElC,QAAA,OAAO,WAAW,CAAC;KACtB;;0GApBQ,YAAY,EAAA,IAAA,EAAA,EAAA,EAAA,MAAA,EAAA,EAAA,CAAA,eAAA,CAAA,UAAA,EAAA,CAAA,CAAA;AAAZ,YAAA,CAAA,KAAA,GAAA,EAAA,CAAA,qBAAA,CAAA,EAAA,UAAA,EAAA,QAAA,EAAA,OAAA,EAAA,SAAA,EAAA,QAAA,EAAA,EAAA,EAAA,IAAA,EAAA,YAAY,cAHT,MAAM,EAAA,CAAA,CAAA;4FAGT,YAAY,EAAA,UAAA,EAAA,CAAA;kBAJxB,UAAU;AAAC,YAAA,IAAA,EAAA,CAAA;AACR,oBAAA,UAAU,EAAE,MAAM;AACrB,iBAAA,CAAA;;;ACaD;MAQa,iBAAiB,CAAA;AAsB1B,IAAA,WAAA,CACY,MAAc,EACd,cAA8B,EAC/B,WAAwB,EACvB,aAA4B,EAC5B,YAA0B,EAC1B,iBAAoC,EACpC,YAA0B,EAAA;QAN1B,IAAM,CAAA,MAAA,GAAN,MAAM,CAAQ;QACd,IAAc,CAAA,cAAA,GAAd,cAAc,CAAgB;QAC/B,IAAW,CAAA,WAAA,GAAX,WAAW,CAAa;QACvB,IAAa,CAAA,aAAA,GAAb,aAAa,CAAe;QAC5B,IAAY,CAAA,YAAA,GAAZ,YAAY,CAAc;QAC1B,IAAiB,CAAA,iBAAA,GAAjB,iBAAiB,CAAmB;QACpC,IAAY,CAAA,YAAA,GAAZ,YAAY,CAAc;QA3BtC,IAAc,CAAA,cAAA,GAAG,eAAe,CAAC;QACjC,IAA2B,CAAA,2BAAA,GAAG,2BAA2B,CAAC;QAE1D,IAAa,CAAA,aAAA,GAAG,aAAa,CAAC;QAK9B,IAAgB,CAAA,gBAAA,GAAY,IAAI,CAAC;QACjC,IAAkB,CAAA,kBAAA,GAAY,KAAK,CAAC;AAEpC,QAAA,IAAA,CAAA,WAAW,GAAG,CAAC,IAAI,UAAU,EAAE,CAAC,CAAC;AACjC,QAAA,IAAA,CAAA,cAAc,GAAG,CAAC,IAAI,aAAa,EAAE,CAAC,CAAC;AACvC,QAAA,IAAA,CAAA,QAAQ,GAAW,IAAI,KAAK,EAAE,CAAC;QAE/B,IAAkB,CAAA,kBAAA,GAAyD,EAAE,CAAC;QAE9E,IAAY,CAAA,YAAA,GAAgB,IAAI,WAAW,CAAC,EAAE,EAAE,UAAU,CAAC,QAAQ,CAAC,CAAC;QACrE,IAAoB,CAAA,oBAAA,GAA2B,IAAI,sBAAsB,CAAC,CAAC,MAAM,CAAC,CAAC,CAAC;KAU/E;IAEL,QAAQ,GAAA;QACJ,IAAI,CAAC,KAAK,GAAG,IAAI,CAAC,cAAc,CAAC,UAAU,CAAC,cAAc,CAAC,CAAC;QAC5D,IAAI,CAAC,QAAQ,GAAG,IAAI,CAAC,cAAc,CAAC,UAAU,CAAC,UAAU,CAAC,CAAC;QAE3D,IAAI,CAAC,uBAAuB,EAAE,CAAC;KAClC;IAEK,uBAAuB,GAAA;;YACzB,IAAI;AACA,gBAAA,IAAI,CAAC,WAAW,IAAkB,MAAM,IAAI,CAAC,aAAa,CAAC,uBAAuB,CAAC,IAAI,CAAC,KAAK,EAAE,KAAK,CAAC,CAAA,CAAC;gBAEtG,IAAI,CAAC,oBAAoB,CAAC,SAAS,GAAG,IAAI,CAAC,WAAW,CAAC;AACvD,gBAAA,IAAI,CAAC,oBAAoB,CAAC,kBAAkB,EAAE,CAAC;gBAE/C,IAAI,IAAI,CAAC,WAAW,IAAI,IAAI,CAAC,WAAW,CAAC,MAAM,GAAG,CAAC,EAAE;oBACjD,MAAM,iBAAiB,GAAG,IAAI,CAAC,WAAW,CAAC,CAAC,CAAC,CAAC,IAAI,CAAC;AAEnD,oBAAA,IAAI,iBAAiB,EAAE;AACnB,wBAAA,IAAI,CAAC,YAAY,CAAC,UAAU,CAAC,iBAAiB,CAAC,CAAC;wBAChD,IAAI,CAAC,gBAAgB,CAAC,IAAI,CAAC,YAAY,CAAC,KAAK,CAAC,CAAC;AAClD,qBAAA;AACJ,iBAAA;AACJ,aAAA;AAAC,YAAA,OAAO,KAAK,EAAE;AACZ,gBAAA,OAAO,CAAC,KAAK,CAAC,oCAAoC,EAAE,KAAK,CAAC,CAAC;AAC9D,aAAA;AAAS,oBAAA;AACN,gBAAA,IAAI,CAAC,gBAAgB,GAAG,KAAK,CAAC;AACjC,aAAA;SACJ,CAAA,CAAA;AAAA,KAAA;AAED,IAAA,gBAAgB,CAAC,YAAY,EAAA;;AAGzB,QAAA,YAAY,CAAC,IAAI,CAAC,QAAQ,CAAC,CAAC;AAE5B,QAAA,IAAI,CAAC,YAAY,CAAC,UAAU,CAAC,YAAY,CAAC,CAAC;QAE3C,IAAI,CAAC,cAAc,GAAG,CAAC,IAAI,aAAa,EAAE,CAAC,CAAC;AAC5C,QAAA,IAAI,CAAC,gBAAgB,CAAC,YAAY,CAAC,CAAC;KACvC;AAEK,IAAA,gBAAgB,CAAC,UAAU,EAAA;;AAE7B,YAAA,IAAI,CAAC,kBAAkB,GAAG,IAAI,CAAC;YAC/B,IAAI,CAAC,YAAY,CAAC,oBAAoB,CAAC,IAAI,CAAC,QAAQ,CAAC,CAAC;YAEtD,IAAI;AACA,gBAAA,IAAI,WAAW,GAAG,IAAI,6BAA6B,EAAE,CAAC;AAEtD,gBAAA,WAAW,CAAC,QAAQ,GAAG,IAAI,CAAC,QAAQ,CAAC;AACrC,gBAAA,WAAW,CAAC,UAAU,GAAG,UAAU,CAAC;AACpC,gBAAA,WAAW,CAAC,QAAQ,GAAG,CAAC,CAAC;AAEzB,gBAAA,IAAI,CAAC,cAAc,IAAqB,MAAM,IAAI,CAAC,iBAAiB,CAAC,gBAAgB,CAAC,IAAI,CAAC,KAAK,EAAE,WAAW,CAAC,CAAA,CAAC;gBAE/G,IAAI,IAAI,CAAC,cAAc,IAAI,IAAI,CAAC,cAAc,CAAC,MAAM,IAAI,CAAC,EAAE;oBACxD,IAAI,CAAC,YAAY,CAAC,kBAAkB,CAAC,IAAI,CAAC,QAAQ,EAAE,kBAAkB,CAAC,oBAAoB,EAAE,kBAAkB,CAAC,sBAAsB,EAAE,oBAAoB,CAAC,OAAO,EAAE,oBAAoB,CAAC,YAAY,CAAC,CAAC;AAC5M,iBAAA;AAEJ,aAAA;AAAC,YAAA,OAAO,KAAK,EAAE;AAEZ,gBAAA,OAAO,CAAC,KAAK,CAAC,6BAA6B,EAAE,KAAK,CAAC,CAAC;gBACpD,IAAI,CAAC,YAAY,CAAC,kBAAkB,CAAC,IAAI,CAAC,QAAQ,EAAE,kBAAkB,CAAC,mBAAmB,EAAE,kBAAkB,CAAC,qBAAqB,EAAE,oBAAoB,CAAC,MAAM,EAAE,oBAAoB,CAAC,WAAW,CAAC,CAAC;AAExM,aAAA;AAAS,oBAAA;AACN,gBAAA,IAAI,CAAC,QAAQ,GAAG,UAAU,CAAC,MAAK;AAC5B,oBAAA,IAAI,CAAC,gBAAgB,CAAC,UAAU,CAAC,CAAC;iBACrC,EAAE,MAAM,CAAC,CAAC;AACX,gBAAA,IAAI,CAAC,kBAAkB,GAAG,KAAK,CAAC;AACnC,aAAA;SACJ,CAAA,CAAA;AAAA,KAAA;IAEK,qBAAqB,CAAC,QAAQ,EAAE,SAAS,EAAA;;YAC3C,IAAI;AACA,gBAAA,IAAI,WAAW,GAAG,IAAI,0BAA0B,EAAE,CAAC;gBAEnD,WAAW,CAAC,MAAM,GAAG,CAAC,EAAE,IAAI,EAAE,SAAS,EAAE,CAAC,CAAC;AAC3C,gBAAA,WAAW,CAAC,QAAQ,GAAG,CAAC,QAAQ,CAAC,CAAC;AAClC,gBAAA,WAAW,CAAC,QAAQ,GAAG,EAAE,CAAC;AAC1B,gBAAA,WAAW,CAAC,QAAQ,GAAG,IAAI,CAAC,QAAQ,CAAC;AAErC,gBAAA,MAAM,MAAM,GAAG,MAAM,IAAI,CAAC,iBAAiB,CAAC,sBAAsB,CAAC,IAAI,CAAC,KAAK,EAAE,WAAW,CAAC,CAAC;AAE5F,gBAAA,IAAI,MAAM,CAAC,MAAM,GAAG,CAAC,EAAE;AACnB,oBAAA,IAAI,CAAC,IAAI,CAAC,kBAAkB,CAAC,QAAQ,CAAC,EAAE;AACpC,wBAAA,IAAI,CAAC,kBAAkB,CAAC,QAAQ,CAAC,GAAG,EAAE,CAAC;AAC1C,qBAAA;AACD,oBAAA,IAAI,CAAC,kBAAkB,CAAC,QAAQ,CAAC,CAAC,SAAS,CAAC,GAAG,MAAM,CAAC,CAAC,CAAC,CAAC;AAC5D,iBAAA;AAAM,qBAAA;AACH,oBAAA,IAAI,CAAC,IAAI,CAAC,kBAAkB,CAAC,QAAQ,CAAC,EAAE;AACpC,wBAAA,IAAI,CAAC,kBAAkB,CAAC,QAAQ,CAAC,GAAG,EAAE,CAAC;AAC1C,qBAAA;oBACD,IAAI,CAAC,kBAAkB,CAAC,QAAQ,CAAC,CAAC,SAAS,CAAC,GAAG,IAAI,CAAC;AACvD,iBAAA;AAEJ,aAAA;AAAC,YAAA,OAAO,KAAK,EAAE;AACZ,gBAAA,OAAO,CAAC,KAAK,CAAC,kCAAkC,EAAE,KAAK,CAAC,CAAC;AAC5D,aAAA;SACJ,CAAA,CAAA;AAAA,KAAA;AAED,IAAA,qBAAqB,CAAC,EAAE,EAAA;AACpB,QAAA,IAAI,CAAC,MAAM,CAAC,QAAQ,CAAC,CAAC,iCAAiC,CAAC,EAAE,EAAE,WAAW,EAAE,EAAE,QAAQ,EAAE,EAAE,EAAE,EAAE,CAAC,CAAC;KAChG;AAED,IAAA,SAAS,CAAC,WAAW,EAAE,QAAQ,EAAE,QAAQ,EAAA;AACrC,QAAA,IAAI,WAAW,GAAG;AACd,YAAA,WAAW,EAAE,WAAW;AACxB,YAAA,QAAQ,EAAE,QAAQ;AAClB,YAAA,QAAQ,EAAE,QAAQ;SACrB,CAAC;AACF,QAAA,IAAI,CAAC,YAAY,CAAC,UAAU,CAAC,WAAW,CAAC,CAAC;KAC7C;IAED,WAAW,GAAA;AACP,QAAA,YAAY,CAAC,IAAI,CAAC,QAAQ,CAAC,CAAC;KAC/B;;+GAlJQ,iBAAiB,EAAA,IAAA,EAAA,CAAA,EAAA,KAAA,EAAA5B,IAAA,CAAA,MAAA,EAAA,EAAA,EAAA,KAAA,EAAAC,IAAA,CAAA,cAAA,EAAA,EAAA,EAAA,KAAA,EAAAc,EAAA,CAAA,WAAA,EAAA,EAAA,EAAA,KAAA,EAAA0B,aAAA,EAAA,EAAA,EAAA,KAAA,EAAAL,YAAA,EAAA,EAAA,EAAA,KAAA,EAAAM,iBAAA,EAAA,EAAA,EAAA,KAAA,EAAAC,YAAA,EAAA,CAAA,EAAA,MAAA,EAAA,EAAA,CAAA,eAAA,CAAA,SAAA,EAAA,CAAA,CAAA;AAAjB,iBAAA,CAAA,IAAA,GAAA,EAAA,CAAA,oBAAA,CAAA,EAAA,UAAA,EAAA,QAAA,EAAA,OAAA,EAAA,SAAA,EAAA,IAAA,EAAA,iBAAiB,oDC3B9B,g0QAoJc,EAAA,UAAA,EAAA,CAAA,EAAA,IAAA,EAAAlC,IAAA,CAAA,YAAA,EAAA,QAAA,EAAA,gBAAA,EAAA,MAAA,EAAA,CAAA,OAAA,EAAA,YAAA,EAAA,YAAA,EAAA,oBAAA,EAAA,WAAA,CAAA,EAAA,QAAA,EAAA,CAAA,cAAA,CAAA,EAAA,EAAA,EAAA,IAAA,EAAAC,EAAA,CAAA,SAAA,EAAA,QAAA,EAAA,YAAA,EAAA,MAAA,EAAA,CAAA,UAAA,EAAA,eAAA,EAAA,UAAA,CAAA,EAAA,QAAA,EAAA,CAAA,WAAA,CAAA,EAAA,EAAA,EAAA,IAAA,EAAA,GAAA,CAAA,SAAA,EAAA,QAAA,EAAA,YAAA,EAAA,QAAA,EAAA,CAAA,WAAA,CAAA,EAAA,EAAA,EAAA,IAAA,EAAAE,IAAA,CAAA,wBAAA,EAAA,QAAA,EAAA,uBAAA,EAAA,MAAA,EAAA,CAAA,kBAAA,EAAA,MAAA,EAAA,WAAA,EAAA,cAAA,EAAA,qBAAA,EAAA,gCAAA,EAAA,kBAAA,EAAA,WAAA,EAAA,qBAAA,EAAA,4BAAA,EAAA,8BAAA,EAAA,uCAAA,EAAA,WAAA,EAAA,uBAAA,EAAA,0BAAA,EAAA,gCAAA,EAAA,iCAAA,EAAA,kCAAA,EAAA,uBAAA,EAAA,mCAAA,CAAA,EAAA,OAAA,EAAA,CAAA,WAAA,CAAA,EAAA,EAAA,EAAA,IAAA,EAAAC,EAAA,CAAA,qBAAA,EAAA,QAAA,EAAA,mBAAA,EAAA,MAAA,EAAA,CAAA,qBAAA,EAAA,qBAAA,EAAA,UAAA,EAAA,YAAA,EAAA,iBAAA,CAAA,EAAA,EAAA,EAAA,IAAA,EAAAC,EAAA,CAAA,OAAA,EAAA,QAAA,EAAA,UAAA,EAAA,QAAA,EAAA,CAAA,SAAA,CAAA,EAAA,EAAA,EAAA,IAAA,EAAAD,EAAA,CAAA,iBAAA,EAAA,QAAA,EAAA,qBAAA,EAAA,MAAA,EAAA,CAAA,OAAA,EAAA,YAAA,EAAA,OAAA,CAAA,EAAA,CAAA,EAAA,UAAA,EAAA,CAAA,EAAA,IAAA,EAAA,GAAA,CAAA,IAAA,EAAA,QAAA,EAAA,QAAA,EAAA,MAAA,EAAA,CAAA,MAAA,EAAA,UAAA,EAAA,UAAA,CAAA,EAAA,EAAA,EAAA,IAAA,EAAA,GAAA,CAAA,gBAAA,EAAA,QAAA,EAAA,oBAAA,EAAA,MAAA,EAAA,CAAA,yBAAA,EAAA,kBAAA,CAAA,EAAA,EAAA,EAAA,IAAA,EAAAJ,IAAA,CAAA,QAAA,EAAA,QAAA,EAAA,WAAA,EAAA,EAAA,EAAA,IAAA,EAAA6B,IAAA,CAAA,iBAAA,EAAA,QAAA,EAAA,wIAAA,EAAA,MAAA,EAAA,CAAA,UAAA,CAAA,EAAA,EAAA,EAAA,IAAA,EAAAA,IAAA,CAAA,eAAA,EAAA,QAAA,EAAA,2CAAA,EAAA,EAAA,EAAA,IAAA,EAAAA,IAAA,CAAA,oBAAA,EAAA,QAAA,EAAA,eAAA,EAAA,MAAA,EAAA,CAAA,UAAA,EAAA,aAAA,EAAA,SAAA,CAAA,EAAA,OAAA,EAAA,CAAA,eAAA,CAAA,EAAA,QAAA,EAAA,CAAA,QAAA,CAAA,EAAA,EAAA,EAAA,IAAA,EAAA,GAAA,CAAA,OAAA,EAAA,QAAA,EAAA,kBAAA,EAAA,MAAA,EAAA,CAAA,SAAA,EAAA,cAAA,EAAA,eAAA,CAAA,EAAA,EAAA,EAAA,IAAA,EAAA7B,IAAA,CAAA,QAAA,EAAA,QAAA,EAAA,WAAA,EAAA,MAAA,EAAA,CAAA,IAAA,CAAA,EAAA,EAAA,EAAA,IAAA,EAAA8B,GAAA,CAAA,UAAA,EAAA,QAAA,EAAA,cAAA,EAAA,QAAA,EAAA,CAAA,YAAA,CAAA,EAAA,EAAA,EAAA,IAAA,EAAA,GAAA,CAAA,OAAA,EAAA,QAAA,EAAA,WAAA,EAAA,MAAA,EAAA,CAAA,OAAA,EAAA,SAAA,CAAA,EAAA,CAAA,EAAA,KAAA,EAAA,EAAA,OAAA,EAAA,GAAA,CAAA,SAAA,EAAA,WAAA,EAAA,GAAA,CAAA,aAAA,EAAA,EAAA,CAAA,CAAA;4FDzHD,iBAAiB,EAAA,UAAA,EAAA,CAAA;kBAN7B,SAAS;AAAC,YAAA,IAAA,EAAA,CAAA;AACP,oBAAA,QAAQ,EAAE,cAAc;AACxB,oBAAA,WAAW,EAAE,2BAA2B;AACxC,oBAAA,SAAS,EAAE,EAAE;AAChB,iBAAA,CAAA;;;AEpBD,MAAMX,QAAM,GAAW;AACnB,IAAA;AACI,QAAA,IAAI,EAAE,EAAE;AACR,QAAA,SAAS,EAAE,iBAAiB;AAC/B,KAAA;CACJ,CAAC;MAMW,qBAAqB,CAAA;;mHAArB,qBAAqB,EAAA,IAAA,EAAA,EAAA,EAAA,MAAA,EAAA,EAAA,CAAA,eAAA,CAAA,QAAA,EAAA,CAAA,CAAA;AAArB,qBAAA,CAAA,IAAA,GAAA,EAAA,CAAA,mBAAA,CAAA,EAAA,UAAA,EAAA,QAAA,EAAA,OAAA,EAAA,SAAA,EAAA,QAAA,EAAA,EAAA,EAAA,IAAA,EAAA,qBAAqB,0CAFpB,YAAY,CAAA,EAAA,CAAA,CAAA;oHAEb,qBAAqB,EAAA,OAAA,EAAA,CAHrB,CAAC,YAAY,CAAC,QAAQ,CAACA,QAAM,CAAC,CAAC,EAC9B,YAAY,CAAA,EAAA,CAAA,CAAA;4FAEb,qBAAqB,EAAA,UAAA,EAAA,CAAA;kBAJjC,QAAQ;AAAC,YAAA,IAAA,EAAA,CAAA;oBACN,OAAO,EAAE,CAAC,YAAY,CAAC,QAAQ,CAACA,QAAM,CAAC,CAAC;oBACxC,OAAO,EAAE,CAAC,YAAY,CAAC;AAC1B,iBAAA,CAAA;;;ACMD;MAwBa,cAAc,CAAA;;4GAAd,cAAc,EAAA,IAAA,EAAA,EAAA,EAAA,MAAA,EAAA,EAAA,CAAA,eAAA,CAAA,QAAA,EAAA,CAAA,CAAA;6GAAd,cAAc,EAAA,YAAA,EAAA,CApBnB,iBAAiB,CAAA,EAAA,OAAA,EAAA,CAGjB,YAAY;QACZ,qBAAqB;QACrB,mBAAmB;QACnB,aAAa;QACb,gBAAgB;QAChB,kBAAkB;QAClB,cAAc;QACd,eAAe;QACf,eAAe;QACf,wBAAwB;QACxB,WAAW;QACX,cAAc;QACd,kBAAkB;QAClB,kBAAkB,CAAA,EAAA,CAAA,CAAA;AAIb,cAAA,CAAA,IAAA,GAAA,EAAA,CAAA,mBAAA,CAAA,EAAA,UAAA,EAAA,QAAA,EAAA,OAAA,EAAA,SAAA,EAAA,QAAA,EAAA,EAAA,EAAA,IAAA,EAAA,cAAc,EAFZ,SAAA,EAAA,CAAC,YAAY,CAAC,EAhBhB,OAAA,EAAA,CAAA;YACL,YAAY;YACZ,qBAAqB;YACrB,mBAAmB;YACnB,aAAa;YACb,gBAAgB;YAChB,kBAAkB;YAClB,cAAc;YACd,eAAe;YACf,eAAe;YACf,wBAAwB;YACxB,WAAW;YACX,cAAc;YACd,kBAAkB;YAClB,kBAAkB;AACrB,SAAA,CAAA,EAAA,CAAA,CAAA;4FAGQ,cAAc,EAAA,UAAA,EAAA,CAAA;kBAtB1B,QAAQ;AAAC,YAAA,IAAA,EAAA,CAAA;AACN,oBAAA,YAAY,EAAE;wBACV,iBAAiB;AACpB,qBAAA;AACD,oBAAA,OAAO,EAAE;wBACL,YAAY;wBACZ,qBAAqB;wBACrB,mBAAmB;wBACnB,aAAa;wBACb,gBAAgB;wBAChB,kBAAkB;wBAClB,cAAc;wBACd,eAAe;wBACf,eAAe;wBACf,wBAAwB;wBACxB,WAAW;wBACX,cAAc;wBACd,kBAAkB;wBAClB,kBAAkB;AACrB,qBAAA;oBACD,SAAS,EAAE,CAAC,YAAY,CAAC;AAC5B,iBAAA,CAAA;;;MCjCY,sBAAsB,CAAA;IAE/B,WACY,CAAA,IAAgB,EACO,WAAgB,EAAA;QADvC,IAAI,CAAA,IAAA,GAAJ,IAAI,CAAY;QACO,IAAW,CAAA,WAAA,GAAX,WAAW,CAAK;KAC9C;IAEL,sBAAsB,CAAC,KAAK,EAAE,WAAW,EAAA;AACrC,QAAA,OAAO,IAAI,CAAC,IAAI,CAAC,IAAI,CAAyB,GAAG,IAAI,CAAC,WAAW,CAAC,kBAAkB,CAAiB,cAAA,EAAA,KAAK,2BAA2B,EAAE,WAAW,CAAC,CAAC;KACvJ;IAED,iCAAiC,CAAC,KAAK,EAAE,SAAS,EAAA;AAC9C,QAAA,IAAI,MAAM,GAAG,IAAI,UAAU,EAAE,CAAC;QAC9B,MAAM,GAAG,MAAM,CAAC,MAAM,CAAC,WAAW,EAAE,SAAS,CAAC,CAAC;QAE/C,OAAO,IAAI,CAAC,IAAI,CAAC,GAAG,CAAyB,CAAA,EAAG,IAAI,CAAC,WAAW,CAAC,kBAAkB,CAAiB,cAAA,EAAA,KAAK,mBAAmB,EAAE,EAAE,MAAM,EAAE,MAAM,EAAE,CAAC,CAAC;KACrJ;;AAhBQ,sBAAA,CAAA,IAAA,GAAA,EAAA,CAAA,kBAAA,CAAA,EAAA,UAAA,EAAA,QAAA,EAAA,OAAA,EAAA,SAAA,EAAA,QAAA,EAAA,EAAA,EAAA,IAAA,EAAA,sBAAsB,4CAInB,aAAa,EAAA,CAAA,EAAA,MAAA,EAAA,EAAA,CAAA,eAAA,CAAA,UAAA,EAAA,CAAA,CAAA;AAJhB,sBAAA,CAAA,KAAA,GAAA,EAAA,CAAA,qBAAA,CAAA,EAAA,UAAA,EAAA,QAAA,EAAA,OAAA,EAAA,SAAA,EAAA,QAAA,EAAA,EAAA,EAAA,IAAA,EAAA,sBAAsB,cAHnB,MAAM,EAAA,CAAA,CAAA;4FAGT,sBAAsB,EAAA,UAAA,EAAA,CAAA;kBAJlC,UAAU;AAAC,YAAA,IAAA,EAAA,CAAA;AACR,oBAAA,UAAU,EAAE,MAAM;AACrB,iBAAA,CAAA;;0BAMQ,MAAM;2BAAC,aAAa,CAAA;;;MCLhB,mBAAmB,CAAA;AAE5B,IAAA,WAAA,CACY,sBAA8C,EAAA;QAA9C,IAAsB,CAAA,sBAAA,GAAtB,sBAAsB,CAAwB;KACrD;IAEC,sBAAsB,CAAC,KAAK,EAAE,WAAW,EAAA;;AAC3C,YAAA,IAAI,oBAA4C,CAAC;YACjD,IAAI;AACA,gBAAA,oBAAoB,GAAG,MAAM,IAAI,CAAC,sBAAsB,CAAC,sBAAsB,CAAC,KAAK,EAAE,WAAW,CAAC,CAAC,SAAS,EAAE,CAAC;AAEhH,gBAAA,IAAI,oBAAoB,EAAE;AACtB,oBAAA,OAAO,oBAAoB,CAAC;AAC/B,iBAAA;AAAM,qBAAA;AACH,oBAAA,OAAO,CAAC,IAAI,mBAAmB,EAAE,CAAC,CAAC;AACtC,iBAAA;AACJ,aAAA;AAAC,YAAA,OAAO,KAAK,EAAE;AACZ,gBAAA,OAAO,CAAC,KAAK,CAAC,SAAS,EAAE,KAAK,CAAC,CAAC;AAChC,gBAAA,OAAO,CAAC,IAAI,mBAAmB,EAAE,CAAC,CAAC;AACtC,aAAA;SACJ,CAAA,CAAA;AAAA,KAAA;IAEK,iCAAiC,CAAC,KAAK,EAAE,WAAW,EAAA;;AACtD,YAAA,IAAI,oBAA4C,CAAC;YACjD,IAAI;AACA,gBAAA,oBAAoB,GAAG,MAAM,IAAI,CAAC,sBAAsB,CAAC,iCAAiC,CAAC,KAAK,EAAE,WAAW,CAAC,CAAC,SAAS,EAAE,CAAC;AAE3H,gBAAA,IAAI,oBAAoB,EAAE;AACtB,oBAAA,OAAO,oBAAoB,CAAC;AAC/B,iBAAA;AAAM,qBAAA;AACH,oBAAA,OAAO,CAAC,IAAI,mBAAmB,EAAE,CAAC,CAAC;AACtC,iBAAA;AACJ,aAAA;AAAC,YAAA,OAAO,KAAK,EAAE;AACZ,gBAAA,OAAO,CAAC,KAAK,CAAC,SAAS,EAAE,KAAK,CAAC,CAAC;AAChC,gBAAA,OAAO,CAAC,IAAI,mBAAmB,EAAE,CAAC,CAAC;AACtC,aAAA;SACJ,CAAA,CAAA;AAAA,KAAA;;iHApCQ,mBAAmB,EAAA,IAAA,EAAA,CAAA,EAAA,KAAA,EAAAgB,sBAAA,EAAA,CAAA,EAAA,MAAA,EAAA,EAAA,CAAA,eAAA,CAAA,UAAA,EAAA,CAAA,CAAA;AAAnB,mBAAA,CAAA,KAAA,GAAA,EAAA,CAAA,qBAAA,CAAA,EAAA,UAAA,EAAA,QAAA,EAAA,OAAA,EAAA,SAAA,EAAA,QAAA,EAAA,EAAA,EAAA,IAAA,EAAA,mBAAmB,cAHhB,MAAM,EAAA,CAAA,CAAA;4FAGT,mBAAmB,EAAA,UAAA,EAAA,CAAA;kBAJ/B,UAAU;AAAC,YAAA,IAAA,EAAA,CAAA;AACR,oBAAA,UAAU,EAAE,MAAM;AACrB,iBAAA,CAAA;;;ACaD;MAQa,2BAA2B,CAAA;AA2BpC,IAAA,WAAA,CACY,cAA8B,EAC9B,iBAAoC,EACpC,mBAAwC,EACxC,gBAAkC,EAClC,YAA0B,EAC3B,WAAwB,EACvB,YAA0B,EAAA;QAN1B,IAAc,CAAA,cAAA,GAAd,cAAc,CAAgB;QAC9B,IAAiB,CAAA,iBAAA,GAAjB,iBAAiB,CAAmB;QACpC,IAAmB,CAAA,mBAAA,GAAnB,mBAAmB,CAAqB;QACxC,IAAgB,CAAA,gBAAA,GAAhB,gBAAgB,CAAkB;QAClC,IAAY,CAAA,YAAA,GAAZ,YAAY,CAAc;QAC3B,IAAW,CAAA,WAAA,GAAX,WAAW,CAAa;QACvB,IAAY,CAAA,YAAA,GAAZ,YAAY,CAAc;QAhCtC,IAAe,CAAA,eAAA,GAAG,eAAe,CAAC;QAElC,IAA2B,CAAA,2BAAA,GAAG,2BAA2B,CAAC;QAC1D,IAAa,CAAA,aAAA,GAAG,aAAa,CAAC;QAQ9B,IAAkB,CAAA,kBAAA,GAA2B,EAAE,CAAC;QAGhD,IAAS,CAAA,SAAA,GAAY,KAAK,CAAC;QAC3B,IAAU,CAAA,UAAA,GAAY,KAAK,CAAC;AAE5B,QAAA,IAAA,CAAA,aAAa,GAAG,CAAC,IAAI,mBAAmB,EAAE,CAAC,CAAC;AAC5C,QAAA,IAAA,CAAA,UAAU,GAAG,CAAC,IAAI,SAAS,EAAE,CAAC,CAAC;AAC/B,QAAA,IAAA,CAAA,QAAQ,GAAW,IAAI,KAAK,EAAE,CAAC;AAE/B,QAAA,IAAA,CAAA,OAAO,GAAgB,IAAI,WAAW,EAAE,CAAC;QAEzC,IAAe,CAAA,eAAA,GAA2B,IAAI,sBAAsB,CAAC,CAAC,MAAM,CAAC,CAAC,CAAC;KAU1E;IAEL,QAAQ,GAAA;QACJ,IAAI,CAAC,KAAK,GAAG,IAAI,CAAC,cAAc,CAAC,UAAU,CAAC,cAAc,CAAC,CAAC;QAC5D,IAAI,CAAC,QAAQ,GAAG,IAAI,CAAC,cAAc,CAAC,UAAU,CAAC,UAAU,CAAC,CAAC;QAC3D,IAAI,CAAC,gBAAgB,GAAG,IAAI,CAAC,cAAc,CAAC,UAAU,CAAC,kBAAkB,CAAC,CAAC;AAE3E,QAAA,IAAI,IAAI,CAAC,gBAAgB,IAAI,gBAAgB,CAAC,aAAa,EAAE;AACzD,YAAA,IAAI,CAAC,WAAW,GAAG,eAAe,CAAC;AACtC,SAAA;AAAM,aAAA,IAAI,IAAI,CAAC,gBAAgB,IAAI,gBAAgB,CAAC,YAAY,EAAE;AAC/D,YAAA,IAAI,CAAC,WAAW,GAAG,iBAAiB,CAAC;AACxC,SAAA;QAED,IAAI,CAAC,iCAAiC,EAAE,CAAC;KAC5C;IAEK,iCAAiC,GAAA;;;AACnC,YAAA,IAAI,CAAC,aAAa,IAA2B,MAAM,IAAI,CAAC,mBAAmB,CAAC,iCAAiC,CAAC,IAAI,CAAC,KAAK,EAAE,IAAI,CAAC,WAAW,CAAC,CAAA,CAAC;YAE5I,IAAI,CAAC,eAAe,CAAC,SAAS,GAAG,IAAI,CAAC,aAAa,CAAC;AACpD,YAAA,IAAI,CAAC,eAAe,CAAC,kBAAkB,EAAE,CAAC;AAE1C,YAAA,IAAI,IAAI,CAAC,aAAa,CAAC,MAAM,GAAG,CAAC,KAAI,CAAA,EAAA,GAAA,MAAA,IAAI,CAAC,aAAa,MAAG,IAAA,IAAA,EAAA,KAAA,KAAA,CAAA,GAAA,KAAA,CAAA,GAAA,EAAA,CAAA,CAAC,CAAC,MAAE,IAAA,IAAA,EAAA,KAAA,KAAA,CAAA,GAAA,KAAA,CAAA,GAAA,EAAA,CAAA,EAAE,CAAA,EAAE;gBAC9D,MAAM,QAAQ,GAAG,CAAA,EAAA,GAAA,CAAA,EAAA,GAAA,MAAA,CAAA,EAAA,GAAA,IAAI,CAAC,aAAa,MAAA,IAAA,IAAA,EAAA,KAAA,KAAA,CAAA,GAAA,KAAA,CAAA,GAAA,EAAA,CAAG,CAAC,CAAC,MAAA,IAAA,IAAA,EAAA,KAAA,KAAA,CAAA,GAAA,KAAA,CAAA,GAAA,EAAA,CAAG,SAAS,CAAC,MAAA,IAAA,IAAA,EAAA,KAAA,KAAA,CAAA,GAAA,KAAA,CAAA,GAAA,EAAA,CAAG,CAAC,CAAC,MAAA,IAAA,IAAA,EAAA,KAAA,KAAA,CAAA,GAAA,KAAA,CAAA,GAAA,EAAA,CAAG,IAAI,CAAC,CAAC;AACnE,gBAAA,IAAI,CAAC,OAAO,CAAC,UAAU,CAAC,QAAQ,CAAC,CAAC;gBAElC,IAAI,CAAC,gBAAgB,EAAE,CAAC;AAC3B,aAAA;;AACJ,KAAA;AAED,IAAA,WAAW,CAAC,aAAa,EAAA;AACrB,QAAA,YAAY,CAAC,IAAI,CAAC,QAAQ,CAAC,CAAC;AAC5B,QAAA,IAAI,CAAC,UAAU,GAAG,IAAI,CAAC;AAEvB,QAAA,IAAI,CAAC,OAAO,CAAC,UAAU,CAAC,aAAa,CAAC,CAAC;QACvC,IAAI,CAAC,gBAAgB,EAAE,CAAC;KAC3B;IAED,gBAAgB,GAAA;AACZ,QAAA,MAAM,aAAa,GAAG,IAAI,CAAC,OAAO,CAAC,KAAK,CAAC;AACzC,QAAA,IAAI,CAAC,sBAAsB,CAAC,aAAa,CAAC,CAAC;KAC9C;AAEK,IAAA,sBAAsB,CAAC,QAAQ,EAAA;;;YACjC,IAAI,WAAW,GAAG,EAAE,CAAC;AACrB,YAAA,WAAW,CAAC,UAAU,CAAC,GAAG,CAAC,QAAQ,CAAC,CAAC;AAErC,YAAA,IAAI,CAAC,UAAU,IAAiB,MAAM,IAAI,CAAC,gBAAgB,CAAC,sBAAsB,CAAC,IAAI,CAAC,KAAK,EAAE,WAAW,CAAC,CAAA,CAAC;AAE5G,YAAA,IAAI,IAAI,CAAC,UAAU,CAAC,MAAM,GAAG,CAAC,KAAI,CAAA,EAAA,GAAA,MAAA,IAAI,CAAC,UAAU,MAAG,IAAA,IAAA,EAAA,KAAA,KAAA,CAAA,GAAA,KAAA,CAAA,GAAA,EAAA,CAAA,CAAC,CAAC,MAAE,IAAA,IAAA,EAAA,KAAA,KAAA,CAAA,GAAA,KAAA,CAAA,GAAA,EAAA,CAAA,EAAE,CAAA,EAAE;AACxD,gBAAA,IAAI,CAAC,kBAAkB,CAAC,QAAQ,CAAC,CAAC;AACrC,aAAA;;AACJ,KAAA;AAEK,IAAA,kBAAkB,CAAC,QAAQ,EAAA;;;YAE7B,IAAI,CAAC,YAAY,CAAC,oBAAoB,CAAC,IAAI,CAAC,QAAQ,CAAC,CAAC;YAEtD,IAAI;AACA,gBAAA,IAAI,WAAW,GAAG,IAAI,0BAA0B,EAAE,CAAC;gBAEnD,WAAW,CAAC,MAAM,GAAG,IAAI,CAAC,UAAU,CAAC,GAAG,CAAC,KAAK,KAAK,EAAE,IAAI,EAAE,KAAK,CAAC,WAAW,EAAE,CAAC,CAAC,CAAC;AACjF,gBAAA,WAAW,CAAC,QAAQ,GAAG,CAAC,QAAQ,CAAC,CAAC;AAClC,gBAAA,WAAW,CAAC,QAAQ,GAAG,CAAC,CAAC;AACzB,gBAAA,WAAW,CAAC,QAAQ,GAAG,IAAI,CAAC,QAAQ,CAAC;AAErC,gBAAA,IAAI,CAAC,YAAY,GAAG,MAAM,IAAI,CAAC,iBAAiB,CAAC,sBAAsB,CAAC,IAAI,CAAC,KAAK,EAAE,WAAW,CAAC,CAAC;gBAEjG,IAAI,CAAA,MAAA,IAAI,CAAC,YAAY,MAAE,IAAA,IAAA,EAAA,KAAA,KAAA,CAAA,GAAA,KAAA,CAAA,GAAA,EAAA,CAAA,MAAM,KAAI,CAAC,EAAE;oBAChC,IAAI,CAAC,YAAY,CAAC,kBAAkB,CAAC,IAAI,CAAC,QAAQ,EAAE,kBAAkB,CAAC,oBAAoB,EAAE,kBAAkB,CAAC,sBAAsB,EAAE,oBAAoB,CAAC,OAAO,EAAE,oBAAoB,CAAC,YAAY,CAAC,CAAC;AAC5M,iBAAA;AAEJ,aAAA;AAAC,YAAA,OAAO,KAAK,EAAE;AACZ,gBAAA,OAAO,CAAC,KAAK,CAAC,+BAA+B,EAAE,KAAK,CAAC,CAAC;gBACtD,IAAI,CAAC,YAAY,CAAC,kBAAkB,CAAC,IAAI,CAAC,QAAQ,EAAE,kBAAkB,CAAC,mBAAmB,EAAE,kBAAkB,CAAC,qBAAqB,EAAE,oBAAoB,CAAC,MAAM,EAAE,oBAAoB,CAAC,WAAW,CAAC,CAAC;AACxM,aAAA;AAAS,oBAAA;AACN,gBAAA,IAAI,CAAC,QAAQ,GAAG,UAAU,CAAC,MAAK;AAC5B,oBAAA,IAAI,CAAC,kBAAkB,CAAC,QAAQ,CAAC,CAAC;iBACrC,EAAE,MAAM,CAAC,CAAC;AACX,gBAAA,IAAI,CAAC,UAAU,GAAG,KAAK,CAAC;AAC3B,aAAA;;AACJ,KAAA;AAEK,IAAA,qBAAqB,CAAC,SAAS,EAAA;;YACjC,IAAI;AACA,gBAAA,IAAI,WAAW,GAAG,IAAI,0BAA0B,EAAE,CAAC;gBAEnD,WAAW,CAAC,MAAM,GAAG,CAAC,EAAE,IAAI,EAAE,SAAS,EAAE,CAAC,CAAC;gBAC3C,WAAW,CAAC,QAAQ,GAAG,CAAC,IAAI,CAAC,OAAO,CAAC,KAAK,CAAC,CAAC;AAC5C,gBAAA,WAAW,CAAC,QAAQ,GAAG,EAAE,CAAC;AAC1B,gBAAA,WAAW,CAAC,QAAQ,GAAG,IAAI,CAAC,QAAQ,CAAC;AAErC,gBAAA,MAAM,MAAM,GAAG,MAAM,IAAI,CAAC,iBAAiB,CAAC,sBAAsB,CAAC,IAAI,CAAC,KAAK,EAAE,WAAW,CAAC,CAAC;AAE5F,gBAAA,IAAI,MAAM,CAAC,MAAM,GAAG,CAAC,EAAE;oBACnB,IAAI,CAAC,kBAAkB,CAAC,SAAS,CAAC,GAAG,MAAM,CAAC,CAAC,CAAC,CAAC;AAClD,iBAAA;AAAM,qBAAA;AACH,oBAAA,IAAI,CAAC,kBAAkB,CAAC,SAAS,CAAC,GAAG,IAAI,CAAC;AAC7C,iBAAA;AACD,gBAAA,IAAI,CAAC,gBAAgB,GAAG,SAAS,CAAC;AAErC,aAAA;AAAC,YAAA,OAAO,KAAK,EAAE;AACZ,gBAAA,OAAO,CAAC,KAAK,CAAC,kCAAkC,EAAE,KAAK,CAAC,CAAC;AAC5D,aAAA;SACJ,CAAA,CAAA;AAAA,KAAA;IAED,SAAS,CAAC,WAAW,EAAE,QAAQ,EAAA;AAC3B,QAAA,IAAI,WAAW,GAAG;AACd,YAAA,WAAW,EAAE,WAAW;AACxB,YAAA,QAAQ,EAAE,QAAQ;AAClB,YAAA,QAAQ,EAAE,IAAI,CAAC,OAAO,CAAC,KAAK;SAC/B,CAAC;AACF,QAAA,IAAI,CAAC,YAAY,CAAC,UAAU,CAAC,WAAW,CAAC,CAAC;KAC7C;IAED,WAAW,GAAA;AACP,QAAA,YAAY,CAAC,IAAI,CAAC,QAAQ,CAAC,CAAC;KAC/B;;yHAxJQ,2BAA2B,EAAA,IAAA,EAAA,CAAA,EAAA,KAAA,EAAA5C,IAAA,CAAA,cAAA,EAAA,EAAA,EAAA,KAAA,EAAA6C,iBAAA,EAAA,EAAA,EAAA,KAAA,EAAAC,mBAAA,EAAA,EAAA,EAAA,KAAA,EAAAC,gBAAA,EAAA,EAAA,EAAA,KAAA,EAAAC,YAAA,EAAA,EAAA,EAAA,KAAA,EAAA/B,EAAA,CAAA,WAAA,EAAA,EAAA,EAAA,KAAA,EAAAgC,YAAA,EAAA,CAAA,EAAA,MAAA,EAAA,EAAA,CAAA,eAAA,CAAA,SAAA,EAAA,CAAA,CAAA;AAA3B,2BAAA,CAAA,IAAA,GAAA,EAAA,CAAA,oBAAA,CAAA,EAAA,UAAA,EAAA,QAAA,EAAA,OAAA,EAAA,SAAA,EAAA,IAAA,EAAA,2BAA2B,sDC7BxC,gvLA0Gc,EAAA,UAAA,EAAA,CAAA,EAAA,IAAA,EAAAxC,IAAA,CAAA,YAAA,EAAA,QAAA,EAAA,gBAAA,EAAA,MAAA,EAAA,CAAA,OAAA,EAAA,YAAA,EAAA,YAAA,EAAA,oBAAA,EAAA,WAAA,CAAA,EAAA,QAAA,EAAA,CAAA,cAAA,CAAA,EAAA,EAAA,EAAA,IAAA,EAAAC,EAAA,CAAA,SAAA,EAAA,QAAA,EAAA,YAAA,EAAA,MAAA,EAAA,CAAA,UAAA,EAAA,eAAA,EAAA,UAAA,CAAA,EAAA,QAAA,EAAA,CAAA,WAAA,CAAA,EAAA,EAAA,EAAA,IAAA,EAAA,GAAA,CAAA,SAAA,EAAA,QAAA,EAAA,YAAA,EAAA,QAAA,EAAA,CAAA,WAAA,CAAA,EAAA,EAAA,EAAA,IAAA,EAAAE,IAAA,CAAA,wBAAA,EAAA,QAAA,EAAA,uBAAA,EAAA,MAAA,EAAA,CAAA,kBAAA,EAAA,MAAA,EAAA,WAAA,EAAA,cAAA,EAAA,qBAAA,EAAA,gCAAA,EAAA,kBAAA,EAAA,WAAA,EAAA,qBAAA,EAAA,4BAAA,EAAA,8BAAA,EAAA,uCAAA,EAAA,WAAA,EAAA,uBAAA,EAAA,0BAAA,EAAA,gCAAA,EAAA,iCAAA,EAAA,kCAAA,EAAA,uBAAA,EAAA,mCAAA,CAAA,EAAA,OAAA,EAAA,CAAA,WAAA,CAAA,EAAA,EAAA,EAAA,IAAA,EAAA,GAAA,CAAA,WAAA,EAAA,QAAA,EAAA,cAAA,EAAA,MAAA,EAAA,CAAA,UAAA,CAAA,EAAA,QAAA,EAAA,CAAA,aAAA,CAAA,EAAA,EAAA,EAAA,IAAA,EAAAC,EAAA,CAAA,qBAAA,EAAA,QAAA,EAAA,mBAAA,EAAA,MAAA,EAAA,CAAA,qBAAA,EAAA,qBAAA,EAAA,UAAA,EAAA,YAAA,EAAA,iBAAA,CAAA,EAAA,EAAA,EAAA,IAAA,EAAAA,EAAA,CAAA,iBAAA,EAAA,QAAA,EAAA,qBAAA,EAAA,MAAA,EAAA,CAAA,OAAA,EAAA,YAAA,EAAA,OAAA,CAAA,EAAA,EAAA,EAAA,IAAA,EAAAC,EAAA,CAAA,OAAA,EAAA,QAAA,EAAA,UAAA,EAAA,QAAA,EAAA,CAAA,SAAA,CAAA,EAAA,CAAA,EAAA,UAAA,EAAA,CAAA,EAAA,IAAA,EAAAL,IAAA,CAAA,QAAA,EAAA,QAAA,EAAA,WAAA,EAAA,EAAA,EAAA,IAAA,EAAA4B,IAAA,CAAA,iBAAA,EAAA,QAAA,EAAA,wIAAA,EAAA,MAAA,EAAA,CAAA,UAAA,CAAA,EAAA,EAAA,EAAA,IAAA,EAAAA,IAAA,CAAA,eAAA,EAAA,QAAA,EAAA,2CAAA,EAAA,EAAA,EAAA,IAAA,EAAAA,IAAA,CAAA,oBAAA,EAAA,QAAA,EAAA,eAAA,EAAA,MAAA,EAAA,CAAA,UAAA,EAAA,aAAA,EAAA,SAAA,CAAA,EAAA,OAAA,EAAA,CAAA,eAAA,CAAA,EAAA,QAAA,EAAA,CAAA,QAAA,CAAA,EAAA,EAAA,EAAA,IAAA,EAAAC,GAAA,CAAA,IAAA,EAAA,QAAA,EAAA,QAAA,EAAA,MAAA,EAAA,CAAA,MAAA,EAAA,UAAA,EAAA,UAAA,CAAA,EAAA,EAAA,EAAA,IAAA,EAAAA,GAAA,CAAA,OAAA,EAAA,QAAA,EAAA,kBAAA,EAAA,MAAA,EAAA,CAAA,SAAA,EAAA,cAAA,EAAA,eAAA,CAAA,EAAA,EAAA,EAAA,IAAA,EAAA7B,IAAA,CAAA,QAAA,EAAA,QAAA,EAAA,WAAA,EAAA,MAAA,EAAA,CAAA,IAAA,CAAA,EAAA,EAAA,EAAA,IAAA,EAAA6B,GAAA,CAAA,gBAAA,EAAA,QAAA,EAAA,oBAAA,EAAA,MAAA,EAAA,CAAA,yBAAA,EAAA,kBAAA,CAAA,EAAA,EAAA,EAAA,IAAA,EAAAC,GAAA,CAAA,UAAA,EAAA,QAAA,EAAA,cAAA,EAAA,QAAA,EAAA,CAAA,YAAA,CAAA,EAAA,CAAA,EAAA,KAAA,EAAA,EAAA,OAAA,EAAAD,GAAA,CAAA,SAAA,EAAA,QAAA,EAAAA,GAAA,CAAA,WAAA,EAAA,EAAA,CAAA,CAAA;4FD7ED,2BAA2B,EAAA,UAAA,EAAA,CAAA;kBANvC,SAAS;AAAC,YAAA,IAAA,EAAA,CAAA;AACP,oBAAA,QAAQ,EAAE,gBAAgB;AAC1B,oBAAA,WAAW,EAAE,6BAA6B;AAC1C,oBAAA,MAAM,EAAE,EACP;AACJ,iBAAA,CAAA;;;AEvBD,MAAMV,QAAM,GAAW;AACnB,IAAA;AACI,QAAA,IAAI,EAAE,EAAE;AACR,QAAA,SAAS,EAAE,2BAA2B;AACzC,KAAA;CACJ,CAAC;MAMW,sBAAsB,CAAA;;oHAAtB,sBAAsB,EAAA,IAAA,EAAA,EAAA,EAAA,MAAA,EAAA,EAAA,CAAA,eAAA,CAAA,QAAA,EAAA,CAAA,CAAA;AAAtB,sBAAA,CAAA,IAAA,GAAA,EAAA,CAAA,mBAAA,CAAA,EAAA,UAAA,EAAA,QAAA,EAAA,OAAA,EAAA,SAAA,EAAA,QAAA,EAAA,EAAA,EAAA,IAAA,EAAA,sBAAsB,0CAFrB,YAAY,CAAA,EAAA,CAAA,CAAA;qHAEb,sBAAsB,EAAA,OAAA,EAAA,CAHtB,CAAC,YAAY,CAAC,QAAQ,CAACA,QAAM,CAAC,CAAC,EAC9B,YAAY,CAAA,EAAA,CAAA,CAAA;4FAEb,sBAAsB,EAAA,UAAA,EAAA,CAAA;kBAJlC,QAAQ;AAAC,YAAA,IAAA,EAAA,CAAA;oBACN,OAAO,EAAE,CAAC,YAAY,CAAC,QAAQ,CAACA,QAAM,CAAC,CAAC;oBACxC,OAAO,EAAE,CAAC,YAAY,CAAC;AAC1B,iBAAA,CAAA;;;ACKD;MAwBa,wBAAwB,CAAA;;sHAAxB,wBAAwB,EAAA,IAAA,EAAA,EAAA,EAAA,MAAA,EAAA,EAAA,CAAA,eAAA,CAAA,QAAA,EAAA,CAAA,CAAA;uHAAxB,wBAAwB,EAAA,YAAA,EAAA,CAnB7B,2BAA2B,CAAA,EAAA,OAAA,EAAA,CAG3B,YAAY;QACZ,sBAAsB;QACtB,WAAW;QACX,mBAAmB;QACnB,aAAa;QACb,gBAAgB;QAChB,cAAc;QACd,kBAAkB;QAClB,eAAe;QACf,wBAAwB;QACxB,WAAW;QACX,kBAAkB;QAClB,cAAc,CAAA,EAAA,CAAA,CAAA;AAIT,wBAAA,CAAA,IAAA,GAAA,EAAA,CAAA,mBAAA,CAAA,EAAA,UAAA,EAAA,QAAA,EAAA,OAAA,EAAA,SAAA,EAAA,QAAA,EAAA,EAAA,EAAA,IAAA,EAAA,wBAAwB,EAFtB,SAAA,EAAA,CAAC,YAAY,CAAC,EAfhB,OAAA,EAAA,CAAA;YACL,YAAY;YACZ,sBAAsB;YACtB,WAAW;YACX,mBAAmB;YACnB,aAAa;YACb,gBAAgB;YAChB,cAAc;YACd,kBAAkB;YAClB,eAAe;YACf,wBAAwB;YACxB,WAAW;YACX,kBAAkB;YAClB,cAAc;AACjB,SAAA,CAAA,EAAA,CAAA,CAAA;4FAGQ,wBAAwB,EAAA,UAAA,EAAA,CAAA;kBArBpC,QAAQ;AAAC,YAAA,IAAA,EAAA,CAAA;AACN,oBAAA,YAAY,EAAE;wBACV,2BAA2B;AAC9B,qBAAA;AACD,oBAAA,OAAO,EAAE;wBACL,YAAY;wBACZ,sBAAsB;wBACtB,WAAW;wBACX,mBAAmB;wBACnB,aAAa;wBACb,gBAAgB;wBAChB,cAAc;wBACd,kBAAkB;wBAClB,eAAe;wBACf,wBAAwB;wBACxB,WAAW;wBACX,kBAAkB;wBAClB,cAAc;AACjB,qBAAA;oBACD,SAAS,EAAE,CAAC,YAAY,CAAC;AAC5B,iBAAA,CAAA;;;ACxCD,MAAMA,QAAM,GAAW,EAAE,CAAC;MAMb,yBAAyB,CAAA;;uHAAzB,yBAAyB,EAAA,IAAA,EAAA,EAAA,EAAA,MAAA,EAAA,EAAA,CAAA,eAAA,CAAA,QAAA,EAAA,CAAA,CAAA;AAAzB,yBAAA,CAAA,IAAA,GAAA,EAAA,CAAA,mBAAA,CAAA,EAAA,UAAA,EAAA,QAAA,EAAA,OAAA,EAAA,SAAA,EAAA,QAAA,EAAA,EAAA,EAAA,IAAA,EAAA,yBAAyB,0CAFxB,YAAY,CAAA,EAAA,CAAA,CAAA;wHAEb,yBAAyB,EAAA,OAAA,EAAA,CAHzB,CAAC,YAAY,CAAC,QAAQ,CAACA,QAAM,CAAC,CAAC,EAC9B,YAAY,CAAA,EAAA,CAAA,CAAA;4FAEb,yBAAyB,EAAA,UAAA,EAAA,CAAA;kBAJrC,QAAQ;AAAC,YAAA,IAAA,EAAA,CAAA;oBACN,OAAO,EAAE,CAAC,YAAY,CAAC,QAAQ,CAACA,QAAM,CAAC,CAAC;oBACxC,OAAO,EAAE,CAAC,YAAY,CAAC;AAC1B,iBAAA,CAAA;;;MCGY,qBAAqB,CAAA;AAO9B,IAAA,WAAA,CACY,MAAc,EAAA;QAAd,IAAM,CAAA,MAAA,GAAN,MAAM,CAAQ;QAH1B,IAAG,CAAA,GAAA,GAAQ,EAAE,CAAC;KAIT;IAEL,QAAQ,GAAA;QACJ,IAAI,CAAC,GAAG,GAAG;AACP,YAAA;AACI,gBAAA,IAAI,EAAE,oBAAoB;AAC1B,gBAAA,KAAK,EAAE,WAAW;AAClB,gBAAA,UAAU,EAAE,2BAA2B;AAC1C,aAAA;AACD,YAAA;AACI,gBAAA,IAAI,EAAE,YAAY;AAClB,gBAAA,KAAK,EAAE,cAAc;AACrB,gBAAA,UAAU,EAAE,6BAA6B;AAC5C,aAAA;SACJ,CAAC;QAEF,IAAI,CAAC,aAAa,EAAE,CAAC;QAErB,IAAI,CAAC,MAAM,CAAC,MAAM,CAAC,SAAS,CAAC,CAAC,GAAG,KAAI;YACjC,IAAI,GAAG,YAAY,aAAa,EAAE;gBAC9B,IAAI,CAAC,aAAa,EAAE,CAAC;AACxB,aAAA;AACL,SAAC,CAAC,CAAC;KACN;IAED,aAAa,GAAA;AACT,QAAA,IAAI,WAAW,GAAG,MAAM,CAAC,QAAQ,CAAC,QAAQ,CAAC;AAE3C,QAAA,KAAK,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,IAAI,CAAC,GAAG,CAAC,MAAM,EAAE,CAAC,EAAE,EAAE;AACtC,YAAA,IAAI,WAAW,CAAC,QAAQ,CAAC,IAAI,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,UAAU,CAAC,EAAE;gBAC9C,IAAI,CAAC,UAAU,GAAG,IAAI,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,UAAU,CAAC;gBACzC,MAAM;AACT,aAAA;AACJ,SAAA;KACJ;;mHA3CQ,qBAAqB,EAAA,IAAA,EAAA,CAAA,EAAA,KAAA,EAAA5B,IAAA,CAAA,MAAA,EAAA,CAAA,EAAA,MAAA,EAAA,EAAA,CAAA,eAAA,CAAA,SAAA,EAAA,CAAA,CAAA;AAArB,qBAAA,CAAA,IAAA,GAAA,EAAA,CAAA,oBAAA,CAAA,EAAA,UAAA,EAAA,QAAA,EAAA,OAAA,EAAA,SAAA,EAAA,IAAA,EAAA,qBAAqB,+CCXlC,+0BAsBM,EAAA,UAAA,EAAA,CAAA,EAAA,IAAA,EAAAC,IAAA,CAAA,SAAA,EAAA,QAAA,EAAA,mBAAA,EAAA,MAAA,EAAA,CAAA,OAAA,CAAA,EAAA,QAAA,EAAA,CAAA,cAAA,EAAA,WAAA,CAAA,EAAA,CAAA,EAAA,UAAA,EAAA,CAAA,EAAA,IAAA,EAAAc,GAAA,CAAA,OAAA,EAAA,QAAA,EAAA,kBAAA,EAAA,MAAA,EAAA,CAAA,SAAA,EAAA,cAAA,EAAA,eAAA,CAAA,EAAA,EAAA,EAAA,IAAA,EAAAf,IAAA,CAAA,kBAAA,EAAA,QAAA,EAAA,gCAAA,EAAA,MAAA,EAAA,CAAA,YAAA,EAAA,QAAA,EAAA,aAAA,EAAA,UAAA,EAAA,qBAAA,EAAA,kBAAA,EAAA,oBAAA,EAAA,YAAA,EAAA,OAAA,EAAA,YAAA,CAAA,EAAA,EAAA,EAAA,IAAA,EAAAC,IAAA,CAAA,UAAA,EAAA,QAAA,EAAA,8BAAA,EAAA,MAAA,EAAA,CAAA,UAAA,EAAA,eAAA,EAAA,UAAA,CAAA,EAAA,QAAA,EAAA,CAAA,YAAA,CAAA,EAAA,EAAA,EAAA,IAAA,EAAAD,IAAA,CAAA,YAAA,EAAA,QAAA,EAAA,eAAA,EAAA,OAAA,EAAA,CAAA,UAAA,EAAA,YAAA,CAAA,EAAA,QAAA,EAAA,CAAA,QAAA,CAAA,EAAA,CAAA,EAAA,CAAA,CAAA;4FDXO,qBAAqB,EAAA,UAAA,EAAA,CAAA;kBAPjC,SAAS;AAAC,YAAA,IAAA,EAAA,CAAA;AACP,oBAAA,QAAQ,EAAE,SAAS;AACnB,oBAAA,WAAW,EAAE,sBAAsB;AACnC,oBAAA,MAAM,EAAE,EACP;AACJ,iBAAA,CAAA;;;MEYY,kBAAkB,CAAA;;gHAAlB,kBAAkB,EAAA,IAAA,EAAA,EAAA,EAAA,MAAA,EAAA,EAAA,CAAA,eAAA,CAAA,QAAA,EAAA,CAAA,CAAA;iHAAlB,kBAAkB,EAAA,YAAA,EAAA,CATvB,qBAAqB,CAAA,EAAA,OAAA,EAAA,CAGrB,YAAY;QACZ,yBAAyB;QACzB,aAAa;QACb,SAAS,CAAA,EAAA,CAAA,CAAA;AAGJ,kBAAA,CAAA,IAAA,GAAA,EAAA,CAAA,mBAAA,CAAA,EAAA,UAAA,EAAA,QAAA,EAAA,OAAA,EAAA,SAAA,EAAA,QAAA,EAAA,EAAA,EAAA,IAAA,EAAA,kBAAkB,EAPlB,OAAA,EAAA,CAAA;YACL,YAAY;YACZ,yBAAyB;YACzB,aAAa;YACb,SAAS;AACZ,SAAA,CAAA,EAAA,CAAA,CAAA;4FAEQ,kBAAkB,EAAA,UAAA,EAAA,CAAA;kBAX9B,QAAQ;AAAC,YAAA,IAAA,EAAA,CAAA;AACN,oBAAA,YAAY,EAAE;wBACV,qBAAqB;AACxB,qBAAA;AACD,oBAAA,OAAO,EAAE;wBACL,YAAY;wBACZ,yBAAyB;wBACzB,aAAa;wBACb,SAAS;AACZ,qBAAA;AACJ,iBAAA,CAAA;;;ACMD;MAOa,iBAAiB,CAAA;IAsC1B,WACY,CAAA,cAA8B,EAC9B,YAA0B,EAC1B,YAA2B,EAC3B,gBAAkC,EAClC,uBAAgD,EAChD,MAAiB,EAAA;QALjB,IAAc,CAAA,cAAA,GAAd,cAAc,CAAgB;QAC9B,IAAY,CAAA,YAAA,GAAZ,YAAY,CAAc;QAC1B,IAAY,CAAA,YAAA,GAAZ,YAAY,CAAe;QAC3B,IAAgB,CAAA,gBAAA,GAAhB,gBAAgB,CAAkB;QAClC,IAAuB,CAAA,uBAAA,GAAvB,uBAAuB,CAAyB;QAChD,IAAM,CAAA,MAAA,GAAN,MAAM,CAAW;QA1C7B,IAAgB,CAAA,gBAAA,GAAG,iBAAiB,CAAC;QACrC,IAAc,CAAA,cAAA,GAAG,eAAe,CAAC;QACjC,IAAmB,CAAA,mBAAA,GAAG,oCAAoC,CAAC;QAE3D,IAA2B,CAAA,2BAAA,GAAG,2BAA2B,CAAC;QAC1D,IAAc,CAAA,cAAA,GAAG,cAAc,CAAC;QAChC,IAAiB,CAAA,iBAAA,GAAG,iBAAiB,CAAC;QACtC,IAAY,CAAA,YAAA,GAAG,YAAY,CAAC;QAC5B,IAAe,CAAA,eAAA,GAAG,eAAe,CAAC;QASlC,IAAgB,CAAA,gBAAA,GAAY,KAAK,CAAC;QAClC,IAAU,CAAA,UAAA,GAAY,KAAK,CAAC;QAC5B,IAAS,CAAA,SAAA,GAAY,KAAK,CAAC;QAC3B,IAAU,CAAA,UAAA,GAAY,KAAK,CAAC;AAE5B,QAAA,IAAA,CAAA,mBAAmB,GAAG,CAAC,IAAI,kBAAkB,EAAE,CAAC,CAAC;AACjD,QAAA,IAAA,CAAA,QAAQ,GAAW,IAAI,KAAK,EAAE,CAAC;AAE/B,QAAA,IAAA,CAAA,QAAQ,GAAgB,IAAI,WAAW,CAAC,EAAE,EAAE,CAAC,UAAU,CAAC,QAAQ,CAAC,CAAC,CAAC;AAEnE,QAAA,IAAA,CAAA,SAAS,GAAW,aAAa,CAAC,gBAAgB,CAAC;AACnD,QAAA,IAAA,CAAA,aAAa,GAAW,kBAAkB,CAAC,OAAO,CAAC;AACnD,QAAA,IAAA,CAAA,UAAU,GAAG,IAAI,UAAU,EAAE,CAAC;QAC9B,IAAS,CAAA,SAAA,GAA4B,EAAE,CAAC;KAanC;IAEL,QAAQ,GAAA;QACJ,IAAI,CAAC,KAAK,GAAG,IAAI,CAAC,cAAc,CAAC,UAAU,CAAC,cAAc,CAAC,CAAC;QAC5D,IAAI,CAAC,QAAQ,GAAG,IAAI,CAAC,cAAc,CAAC,UAAU,CAAC,UAAU,CAAC,CAAC;KAC9D;IAED,aAAa,GAAA;QACT,IAAI,CAAC,SAAS,GAAG,IAAI,CAAC,eAAe,CAAC,WAAW,CAAC,KAAK,CAAC;QACxD,IAAI,CAAC,OAAO,GAAG,IAAI,CAAC,eAAe,CAAC,SAAS,CAAC,KAAK,CAAC;KACvD;IAED,oBAAoB,GAAA;QAChB,IAAI,CAAC,WAAW,GAAG,IAAI,CAAC,gBAAgB,CAAC,aAAa,CAAC,KAAK,CAAC;KAChE;IAED,mBAAmB,GAAA;QACf,IAAI,CAAC,UAAU,GAAG,IAAI,CAAC,eAAe,CAAC,YAAY,CAAC,KAAK,CAAC;AAE1D,QAAA,IAAI,CAAC,QAAQ,CAAC,KAAK,CAAC,EAAE,CAAC,CAAC;AACxB,QAAA,IAAI,CAAC,uBAAuB,CAAC,IAAI,CAAC,UAAU,CAAC,CAAC;KACjD;AAED,IAAA,uBAAuB,CAAC,UAAU,EAAA;QAC9B,IAAI,WAAW,GAAG,EAAE,CAAC;AACrB,QAAA,WAAW,CAAC,YAAY,CAAC,GAAG,CAAC,UAAU,CAAC,CAAC;QAEzC,IAAI,CAAC,gBAAgB,CAAC,uBAAuB,CAAC,IAAI,CAAC,KAAK,EAAE,WAAW,CAAC;AACjE,aAAA,SAAS,CAAC,CAAC,GAAwB,KAAI;AACpC,YAAA,IAAI,CAAC,mBAAmB,GAAG,CAAC,GAAG,CAAC,CAAC;SACpC,EACG,KAAK,IAAG;AACJ,YAAA,OAAO,CAAC,GAAG,CAAC,uCAAuC,EAAE,KAAK,CAAC,CAAC;AAChE,SAAC,CAAC,CAAC;KACd;IAED,gBAAgB,GAAA;QACZ,IAAI,IAAI,CAAC,UAAU,EAAE;YACjB,MAAM,MAAM,GAAG,IAAI,CAAC,MAAM,CAAC,IAAI,CAAC,qBAAqB,EACjD;AACI,gBAAA,IAAI,EAAE;AACF,oBAAA,UAAU,EAAE,IAAI,CAAC,eAAe,CAAC,YAAY,CAAC,KAAK;oBACnD,YAAY,EAAE,IAAI,CAAC,mBAAmB;AACzC,iBAAA;AACD,gBAAA,KAAK,EAAE,MAAM;AACb,gBAAA,MAAM,EAAE,MAAM;gBACd,QAAQ,EAAE,EAAE,KAAK,EAAE,MAAM,EAAE,GAAG,EAAE,KAAK,EAAE;AAC1C,aAAA,CAAC,CAAC;YACP,MAAM,CAAC,WAAW,EAAE,CAAC,SAAS,CAAC,CAAC,SAAS,KAAI;gBACzC,IAAI,SAAS,CAAC,QAAQ,EAAE;AACpB,oBAAA,IAAI,CAAC,QAAQ,GAAG,SAAS,CAAC,QAAQ,CAAC;oBACnC,IAAI,CAAC,QAAQ,CAAC,UAAU,CAAC,IAAI,CAAC,QAAQ,CAAC,CAAA;AAC1C,iBAAA;AACL,aAAC,CAAC,CAAA;AACL,SAAA;AAAM,aAAA;AACH,YAAA,IAAI,CAAC,gBAAgB,GAAG,IAAI,CAAC;AAChC,SAAA;KACJ;IAED,uBAAuB,GAAA;AACnB,QAAA,IAAI,CAAC,SAAS,GAAG,EAAE,CAAC;AACpB,QAAA,IAAI,CAAC,UAAU,GAAG,IAAI,CAAC;QACvB,IAAI,CAAC,YAAY,CAAC,oBAAoB,CAAC,IAAI,CAAC,QAAQ,CAAC,CAAC;AAEtD,QAAA,IAAI,IAAI,CAAC,iBAAiB,EAAE,EAAE;AAC1B,YAAA,IAAI,CAAC,YAAY,CAAC,SAAS,CAAC,WAAW,CAAC,kBAAkB,EAAE,WAAW,CAAC,oBAAoB,EAAE,WAAW,CAAC,KAAK,CAAC,CAAC;YACjH,OAAO;AACV,SAAA;AAED,QAAA,IAAI,IAAI,CAAC,SAAS,IAAI,IAAI,CAAC,OAAO,EAAE;YAChC,IAAI,CAAC,YAAY,CAAC,kBAAkB,CAAC,IAAI,CAAC,QAAQ,EAAE,eAAe,CAAC,kBAAkB,EAAE,eAAe,CAAC,oBAAoB,EAAE,oBAAoB,CAAC,IAAI,EAAE,oBAAoB,CAAC,SAAS,CAAC,CAAC;YACzL,OAAO;AACV,SAAA;AAED,QAAA,IAAI,CAAC,UAAU,GAAG,IAAI,CAAC;QAEvB,IAAI;AACA,YAAA,MAAM,WAAW,GAAG,IAAI,CAAC,iBAAiB,EAAE,CAAC;YAE7C,IAAI,CAAC,uBAAuB,CAAC,sBAAsB,CAAC,IAAI,CAAC,KAAK,EAAE,WAAW,CAAC;AACvE,iBAAA,SAAS,CAAC,CAAC,cAAmB,KAAI;gBAE/B,IAAI,mBAAmB,GAAG,cAAc,KAAA,IAAA,IAAd,cAAc,KAAd,KAAA,CAAA,GAAA,KAAA,CAAA,GAAA,cAAc,CAAE,SAAS,CAAC;AACpD,gBAAA,IAAI,CAAC,UAAU,GAAG,KAAK,CAAC;AAExB,gBAAA,IAAI,mBAAmB,IAAI,mBAAmB,CAAC,KAAK,CAAC,IAAI,IAAI,IAAI,CAAC,IAAI,CAAC,MAAM,IAAI,CAAC,CAAE,EAAE;oBAClF,IAAI,CAAC,YAAY,CAAC,kBAAkB,CAAC,IAAI,CAAC,QAAQ,EAAE,kBAAkB,CAAC,oBAAoB,EAAE,kBAAkB,CAAC,sBAAsB,EAAE,oBAAoB,CAAC,OAAO,EAAE,oBAAoB,CAAC,YAAY,CAAC,CAAC;AAC5M,iBAAA;AAAM,qBAAA;AACH,oBAAA,IAAI,CAAC,aAAa,GAAG,kBAAkB,CAAC,QAAQ,CAAC;AACjD,oBAAA,IAAI,CAAC,SAAS,GAAG,EAAE,CAAC;AAEpB,oBAAA,mBAAmB,CAAC,OAAO,CAAC,CAAC,GAAG,KAAI;AAChC,wBAAA,IAAI,GAAG,CAAC,IAAI,CAAC,MAAM,GAAG,CAAC,EAAE;AAErB,4BAAA,MAAM,YAAY,GAA0B,IAAI,qBAAqB,EAAE,CAAC;AAExE,4BAAA,YAAY,CAAC,QAAQ,GAAG,GAAG,CAAC,IAAI,CAAC,GAAG,CAAC,IAAI,KAAK;AAC1C,gCAAA,IAAI,EAAE,MAAM,CAAC,IAAI,IAAI,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC,CAAC,MAAM,CAAC,qBAAqB,CAAC;gCAC/D,KAAK,EAAE,IAAI,CAAC,KAAK;AACpB,6BAAA,CAAC,CAAC,CAAC;4BACJ,YAAY,CAAC,IAAI,GAAG;AAChB,gCAAA,IAAI,EAAE,EAAE;gCACR,IAAI,EAAE,GAAG,CAAC,IAAI;6BACjB,CAAC;4BACF,YAAY,CAAC,QAAQ,GAAG;AACpB,gCAAA;AACI,oCAAA,KAAK,EAAE,KAAK;oCACZ,KAAK,EAAE,GAAG,CAAC,QAAQ;AACnB,oCAAA,KAAK,EAAE,SAAS;AACnB,iCAAA;AACD,gCAAA;AACI,oCAAA,KAAK,EAAE,KAAK;oCACZ,KAAK,EAAE,GAAG,CAAC,QAAQ;AACnB,oCAAA,KAAK,EAAE,SAAS;AACnB,iCAAA;6BACJ,CAAA;AACD,4BAAA,YAAY,CAAC,UAAU,GAAG,GAAG,CAAC,KAAK,GAAG,IAAI,GAAG,GAAG,CAAC,IAAI,GAAG,GAAG,CAAC;AAC5D,4BAAA,YAAY,CAAC,YAAY,GAAG,EAAE,CAAC;AAC/B,4BAAA,YAAY,CAAC,YAAY,GAAG,IAAI,CAAC;AACjC,4BAAA,YAAY,CAAC,aAAa,GAAG,IAAI,CAAC;AAClC,4BAAA,YAAY,CAAC,WAAW,GAAG,IAAI,CAAC;AAChC,4BAAA,YAAY,CAAC,iBAAiB,GAAG,IAAI,CAAC;4BACtC,YAAY,CAAC,UAAU,GAAG;gCACtB,IAAI,EAAE,GAAG,CAAC,KAAK;AACf,gCAAA,KAAK,EAAE,MAAM;6BAChB,CAAA;AAED,4BAAA,IAAI,CAAC,SAAS,CAAC,IAAI,CAAC,YAAY,CAAC,CAAC;AACrC,yBAAA;AACL,qBAAC,CAAC,CAAC;AACN,iBAAA;aAEJ,EACG,KAAK,IAAG;AACJ,gBAAA,OAAO,CAAC,GAAG,CAAC,iCAAiC,EAAE,KAAK,CAAC,CAAC;gBACtD,IAAI,CAAC,YAAY,CAAC,kBAAkB,CAAC,IAAI,CAAC,QAAQ,EAAE,kBAAkB,CAAC,mBAAmB,EAAE,kBAAkB,CAAC,qBAAqB,EAAE,oBAAoB,CAAC,MAAM,EAAE,oBAAoB,CAAC,WAAW,CAAC,CAAC;AACrM,gBAAA,MAAM,KAAK,CAAC;AAChB,aAAC,CAAC,CAAC;AAEd,SAAA;AAAC,QAAA,OAAO,KAAK,EAAE;AAEZ,YAAA,OAAO,CAAC,KAAK,CAAC,oCAAoC,EAAE,KAAK,CAAC,CAAC;YAC3D,IAAI,CAAC,YAAY,CAAC,kBAAkB,CAAC,IAAI,CAAC,QAAQ,EAAE,kBAAkB,CAAC,mBAAmB,EAAE,kBAAkB,CAAC,qBAAqB,EAAE,oBAAoB,CAAC,MAAM,EAAE,oBAAoB,CAAC,WAAW,CAAC,CAAC;AAExM,SAAA;AAAS,gBAAA;AACN,YAAA,IAAI,CAAC,UAAU,GAAG,KAAK,CAAC;AAC3B,SAAA;KACJ;IAED,iBAAiB,GAAA;AACb,QAAA,MAAM,QAAQ,GAAG;YACb,IAAI,CAAC,eAAe,CAAC,WAAW;YAChC,IAAI,CAAC,gBAAgB,CAAC,aAAa;YACnC,IAAI,CAAC,eAAe,CAAC,YAAY;AACjC,YAAA,IAAI,CAAC,QAAQ;SAChB,CAAC;AAEF,QAAA,QAAQ,CAAC,OAAO,CAAC,OAAO,IAAI,OAAO,CAAC,aAAa,EAAE,CAAC,CAAC;AACrD,QAAA,OAAO,QAAQ,CAAC,IAAI,CAAC,OAAO,IAAI,OAAO,CAAC,OAAO,CAAC,CAAC;KACpD;IAED,iBAAiB,GAAA;QACb,MAAM,WAAW,GAAG,EAAE,CAAC;AAEvB,QAAA,WAAW,CAAC,WAAW,CAAC,GAAG,IAAI,CAAC,SAAS,CAAC;AAC1C,QAAA,WAAW,CAAC,SAAS,CAAC,GAAG,IAAI,CAAC,OAAO,CAAC;AACtC,QAAA,WAAW,CAAC,UAAU,CAAC,GAAG,IAAI,CAAC,WAAW,CAAC;QAC3C,WAAW,CAAC,UAAU,CAAC,GAAG,CAAC,IAAI,CAAC,QAAQ,CAAC,CAAC;AAC1C,QAAA,WAAW,CAAC,YAAY,CAAC,GAAG,CAAC,IAAI,CAAC,eAAe,CAAC,YAAY,CAAC,KAAK,CAAC,CAAC;AAEtE,QAAA,OAAO,WAAW,CAAC;KACtB;;+GAxNQ,iBAAiB,EAAA,IAAA,EAAA,CAAA,EAAA,KAAA,EAAAA,IAAA,CAAA,cAAA,EAAA,EAAA,EAAA,KAAA,EAAAkD,YAAA,EAAA,EAAA,EAAA,KAAA,EAAAnC,IAAA,CAAA,aAAA,EAAA,EAAA,EAAA,KAAA,EAAAW,gBAAA,EAAA,EAAA,EAAA,KAAA,EAAAM,uBAAA,EAAA,EAAA,EAAA,KAAA,EAAAf,IAAA,CAAA,SAAA,EAAA,CAAA,EAAA,MAAA,EAAA,EAAA,CAAA,eAAA,CAAA,SAAA,EAAA,CAAA,CAAA;AAAjB,iBAAA,CAAA,IAAA,GAAA,EAAA,CAAA,oBAAA,CAAA,EAAA,UAAA,EAAA,QAAA,EAAA,OAAA,EAAA,SAAA,EAAA,IAAA,EAAA,iBAAiB,qXCjC9B,2gIAiFM,EAAA,MAAA,EAAA,CAAA,uCAAA,CAAA,EAAA,UAAA,EAAA,CAAA,EAAA,IAAA,EAAAT,EAAA,CAAA,kBAAA,EAAA,QAAA,EAAA,gBAAA,EAAA,MAAA,EAAA,CAAA,gCAAA,EAAA,uBAAA,EAAA,cAAA,EAAA,kBAAA,EAAA,aAAA,EAAA,aAAA,EAAA,UAAA,EAAA,UAAA,EAAA,cAAA,EAAA,qBAAA,EAAA,cAAA,EAAA,sBAAA,EAAA,wBAAA,EAAA,kBAAA,CAAA,EAAA,OAAA,EAAA,CAAA,YAAA,CAAA,EAAA,EAAA,EAAA,IAAA,EAAA2C,4BAAA,EAAA,QAAA,EAAA,0BAAA,EAAA,OAAA,EAAA,CAAA,YAAA,CAAA,EAAA,EAAA,EAAA,IAAA,EAAAC,mBAAA,EAAA,QAAA,EAAA,iBAAA,EAAA,OAAA,EAAA,CAAA,YAAA,CAAA,EAAA,EAAA,EAAA,IAAA,EAAAzC,EAAA,CAAA,qBAAA,EAAA,QAAA,EAAA,mBAAA,EAAA,MAAA,EAAA,CAAA,qBAAA,EAAA,qBAAA,EAAA,UAAA,EAAA,YAAA,EAAA,iBAAA,CAAA,EAAA,EAAA,EAAA,IAAA,EAAAA,EAAA,CAAA,iBAAA,EAAA,QAAA,EAAA,qBAAA,EAAA,MAAA,EAAA,CAAA,OAAA,EAAA,YAAA,EAAA,OAAA,CAAA,EAAA,EAAA,EAAA,IAAA,EAAAC,EAAA,CAAA,OAAA,EAAA,QAAA,EAAA,UAAA,EAAA,QAAA,EAAA,CAAA,SAAA,CAAA,EAAA,EAAA,EAAA,IAAA,EAAAC,KAAA,CAAA,yBAAA,EAAA,QAAA,EAAA,yBAAA,EAAA,MAAA,EAAA,CAAA,cAAA,EAAA,cAAA,EAAA,eAAA,EAAA,SAAA,CAAA,EAAA,CAAA,EAAA,UAAA,EAAA,CAAA,EAAA,IAAA,EAAAC,GAAA,CAAA,OAAA,EAAA,QAAA,EAAA,WAAA,EAAA,MAAA,EAAA,CAAA,OAAA,EAAA,SAAA,CAAA,EAAA,EAAA,EAAA,IAAA,EAAAA,GAAA,CAAA,IAAA,EAAA,QAAA,EAAA,QAAA,EAAA,MAAA,EAAA,CAAA,MAAA,EAAA,UAAA,EAAA,UAAA,CAAA,EAAA,EAAA,EAAA,IAAA,EAAAuB,GAAA,CAAA,SAAA,EAAA,QAAA,EAAA,2BAAA,EAAA,MAAA,EAAA,CAAA,iBAAA,EAAA,mBAAA,EAAA,kBAAA,EAAA,gBAAA,EAAA,oBAAA,EAAA,mBAAA,EAAA,oBAAA,CAAA,EAAA,QAAA,EAAA,CAAA,WAAA,CAAA,EAAA,EAAA,EAAA,IAAA,EAAAvB,GAAA,CAAA,OAAA,EAAA,QAAA,EAAA,kBAAA,EAAA,MAAA,EAAA,CAAA,SAAA,EAAA,cAAA,EAAA,eAAA,CAAA,EAAA,CAAA,EAAA,CAAA,CAAA;4FDhDO,iBAAiB,EAAA,UAAA,EAAA,CAAA;kBAL7B,SAAS;AAAC,YAAA,IAAA,EAAA,CAAA;AACP,oBAAA,QAAQ,EAAE,eAAe;AACzB,oBAAA,WAAW,EAAE,4BAA4B;oBACzC,SAAS,EAAE,CAAC,4BAA4B,CAAC;AAC5C,iBAAA,CAAA;sPAmCiC,eAAe,EAAA,CAAA;sBAA5C,SAAS;uBAAC,iBAAiB,CAAA;gBACG,gBAAgB,EAAA,CAAA;sBAA9C,SAAS;uBAAC,kBAAkB,CAAA;gBACC,eAAe,EAAA,CAAA;sBAA5C,SAAS;uBAAC,iBAAiB,CAAA;;;AEhEhC,MAAMc,QAAM,GAAW;AACnB,IAAA;AACI,QAAA,IAAI,EAAE,EAAE;AACR,QAAA,SAAS,EAAE,iBAAiB;AAC/B,KAAA;CACJ,CAAC;MAMW,qBAAqB,CAAA;;mHAArB,qBAAqB,EAAA,IAAA,EAAA,EAAA,EAAA,MAAA,EAAA,EAAA,CAAA,eAAA,CAAA,QAAA,EAAA,CAAA,CAAA;AAArB,qBAAA,CAAA,IAAA,GAAA,EAAA,CAAA,mBAAA,CAAA,EAAA,UAAA,EAAA,QAAA,EAAA,OAAA,EAAA,SAAA,EAAA,QAAA,EAAA,EAAA,EAAA,IAAA,EAAA,qBAAqB,0CAFpB,YAAY,CAAA,EAAA,CAAA,CAAA;oHAEb,qBAAqB,EAAA,OAAA,EAAA,CAHrB,CAAC,YAAY,CAAC,QAAQ,CAACA,QAAM,CAAC,CAAC,EAC9B,YAAY,CAAA,EAAA,CAAA,CAAA;4FAEb,qBAAqB,EAAA,UAAA,EAAA,CAAA;kBAJjC,QAAQ;AAAC,YAAA,IAAA,EAAA,CAAA;oBACN,OAAO,EAAE,CAAC,YAAY,CAAC,QAAQ,CAACA,QAAM,CAAC,CAAC;oBACxC,OAAO,EAAE,CAAC,YAAY,CAAC;AAC1B,iBAAA,CAAA;;;ACGD;MAsBa,cAAc,CAAA;;4GAAd,cAAc,EAAA,IAAA,EAAA,EAAA,EAAA,MAAA,EAAA,EAAA,CAAA,eAAA,CAAA,QAAA,EAAA,CAAA,CAAA;6GAAd,cAAc,EAAA,YAAA,EAAA,CAlBnB,iBAAiB,CAAA,EAAA,OAAA,EAAA,CAGjB,YAAY;QACZ,qBAAqB;QACrB,WAAW;QACX,mBAAmB;QACnB,eAAe;QACf,yBAAyB;QACzB,gBAAgB;QAChB,kBAAkB;QAClB,kBAAkB;QAClB,cAAc;QACd,sBAAsB;QACtB,aAAa;QACb,eAAe,CAAA,EAAA,CAAA,CAAA;AAGV,cAAA,CAAA,IAAA,GAAA,EAAA,CAAA,mBAAA,CAAA,EAAA,UAAA,EAAA,QAAA,EAAA,OAAA,EAAA,SAAA,EAAA,QAAA,EAAA,EAAA,EAAA,IAAA,EAAA,cAAc,EAhBd,OAAA,EAAA,CAAA;YACL,YAAY;YACZ,qBAAqB;YACrB,WAAW;YACX,mBAAmB;YACnB,eAAe;YACf,yBAAyB;YACzB,gBAAgB;YAChB,kBAAkB;YAClB,kBAAkB;YAClB,cAAc;YACd,sBAAsB;YACtB,aAAa;YACb,eAAe;AAClB,SAAA,CAAA,EAAA,CAAA,CAAA;4FAEQ,cAAc,EAAA,UAAA,EAAA,CAAA;kBApB1B,QAAQ;AAAC,YAAA,IAAA,EAAA,CAAA;AACN,oBAAA,YAAY,EAAE;wBACV,iBAAiB;AACpB,qBAAA;AACD,oBAAA,OAAO,EAAE;wBACL,YAAY;wBACZ,qBAAqB;wBACrB,WAAW;wBACX,mBAAmB;wBACnB,eAAe;wBACf,yBAAyB;wBACzB,gBAAgB;wBAChB,kBAAkB;wBAClB,kBAAkB;wBAClB,cAAc;wBACd,sBAAsB;wBACtB,aAAa;wBACb,eAAe;AAClB,qBAAA;AACJ,iBAAA,CAAA;;;ACbD;MAQa,oBAAoB,CAAA;AAuC7B,IAAA,WAAA,CACY,cAA8B,EAC9B,YAA0B,EAC1B,YAA2B,EAC3B,mBAAwC,EACxC,gBAAkC,EAClC,oBAA0C,EAC1C,gBAAkC,EAAA;QANlC,IAAc,CAAA,cAAA,GAAd,cAAc,CAAgB;QAC9B,IAAY,CAAA,YAAA,GAAZ,YAAY,CAAc;QAC1B,IAAY,CAAA,YAAA,GAAZ,YAAY,CAAe;QAC3B,IAAmB,CAAA,mBAAA,GAAnB,mBAAmB,CAAqB;QACxC,IAAgB,CAAA,gBAAA,GAAhB,gBAAgB,CAAkB;QAClC,IAAoB,CAAA,oBAAA,GAApB,oBAAoB,CAAsB;QAC1C,IAAgB,CAAA,gBAAA,GAAhB,gBAAgB,CAAkB;QA5C9C,IAAgB,CAAA,gBAAA,GAAG,iBAAiB,CAAC;QACrC,IAAc,CAAA,cAAA,GAAG,eAAe,CAAC;QACjC,IAAmB,CAAA,mBAAA,GAAG,oCAAoC,CAAC;QAE3D,IAAe,CAAA,eAAA,GAAG,eAAe,CAAC;QAClC,IAA2B,CAAA,2BAAA,GAAG,2BAA2B,CAAC;QAC1D,IAAc,CAAA,cAAA,GAAG,cAAc,CAAC;QAChC,IAAiB,CAAA,iBAAA,GAAG,iBAAiB,CAAC;QACtC,IAAY,CAAA,YAAA,GAAG,YAAY,CAAC;QAC5B,IAAa,CAAA,aAAA,GAAG,aAAa,CAAC;QAS9B,IAAS,CAAA,SAAA,GAAY,KAAK,CAAC;QAC3B,IAAU,CAAA,UAAA,GAAY,KAAK,CAAC;AAE5B,QAAA,IAAA,CAAA,UAAU,GAAG,CAAC,IAAI,SAAS,EAAE,CAAC,CAAC;AAC/B,QAAA,IAAA,CAAA,sBAAsB,GAAG,CAAC,IAAI,SAAS,EAAE,CAAC,CAAC;AAC3C,QAAA,IAAA,CAAA,QAAQ,GAAW,IAAI,KAAK,EAAE,CAAC;AAE/B,QAAA,IAAA,CAAA,WAAW,GAAgB,IAAI,WAAW,CAAC,EAAE,EAAE,CAAC,UAAU,CAAC,QAAQ,CAAC,CAAC,CAAC;QACtE,IAAmB,CAAA,mBAAA,GAA2B,IAAI,sBAAsB,CAAC,CAAC,OAAO,CAAC,CAAC,CAAC;AAEpF,QAAA,IAAA,CAAA,SAAS,GAAW,aAAa,CAAC,gBAAgB,CAAC;AACnD,QAAA,IAAA,CAAA,aAAa,GAAW,kBAAkB,CAAC,OAAO,CAAC;AACnD,QAAA,IAAA,CAAA,UAAU,GAAG,IAAI,UAAU,EAAE,CAAC;QAC9B,IAAS,CAAA,SAAA,GAA4B,EAAE,CAAC;KAcnC;IAEL,QAAQ,GAAA;QACJ,IAAI,CAAC,KAAK,GAAG,IAAI,CAAC,cAAc,CAAC,UAAU,CAAC,cAAc,CAAC,CAAC;QAC5D,IAAI,CAAC,QAAQ,GAAG,IAAI,CAAC,cAAc,CAAC,UAAU,CAAC,UAAU,CAAC,CAAC;KAC9D;IAEK,sBAAsB,GAAA;;AACxB,YAAA,IAAI,CAAC,UAAU,IAAiB,MAAM,IAAI,CAAC,gBAAgB,CAAC,sBAAsB,CAAC,IAAI,CAAC,KAAK,CAAC,CAAA,CAAC;SAClG,CAAA,CAAA;AAAA,KAAA;IAED,aAAa,GAAA;QACT,IAAI,CAAC,SAAS,GAAG,IAAI,CAAC,eAAe,CAAC,WAAW,CAAC,KAAK,CAAC;QACxD,IAAI,CAAC,OAAO,GAAG,IAAI,CAAC,eAAe,CAAC,SAAS,CAAC,KAAK,CAAC;KACvD;IAED,oBAAoB,GAAA;QAChB,IAAI,CAAC,WAAW,GAAG,IAAI,CAAC,gBAAgB,CAAC,aAAa,CAAC,KAAK,CAAC;KAChE;IAED,mBAAmB,GAAA;QACf,IAAI,CAAC,UAAU,GAAG,IAAI,CAAC,eAAe,CAAC,YAAY,CAAC,KAAK,CAAC;AAE1D,QAAA,IAAI,CAAC,wBAAwB,CAAC,IAAI,CAAC,UAAU,CAAC,CAAC;KAClD;AAED,IAAA,wBAAwB,CAAC,UAAU,EAAA;QAC/B,IAAI,WAAW,GAAG,EAAE,CAAC;AACrB,QAAA,WAAW,CAAC,YAAY,CAAC,GAAG,CAAC,UAAU,CAAC,CAAC;QAEzC,IAAI,CAAC,mBAAmB,CAAC,wBAAwB,CAAC,IAAI,CAAC,KAAK,EAAE,WAAW,CAAC;AACrE,aAAA,SAAS,CAAC,CAAC,GAAiB,KAAI;AAC7B,YAAA,IAAI,CAAC,sBAAsB,GAAG,GAAG,CAAC;YAElC,IAAI,CAAC,mBAAmB,CAAC,SAAS,GAAG,IAAI,CAAC,sBAAsB,CAAC;AACjE,YAAA,IAAI,CAAC,mBAAmB,CAAC,kBAAkB,EAAE,CAAC;SACjD,EACG,KAAK,IAAG;AACJ,YAAA,OAAO,CAAC,GAAG,CAAC,wCAAwC,EAAE,KAAK,CAAC,CAAC;AACjE,SAAC,CAAC,CAAC;KACd;AAED,IAAA,iBAAiB,CAAC,iBAAiB,EAAA;AAC/B,QAAA,IAAI,CAAC,WAAW,CAAC,UAAU,CAAC,iBAAiB,CAAC,CAAC;KAClD;IAEK,iBAAiB,GAAA;;AACnB,YAAA,IAAI,CAAC,SAAS,GAAG,EAAE,CAAC;YACpB,IAAI,CAAC,YAAY,CAAC,oBAAoB,CAAC,IAAI,CAAC,QAAQ,CAAC,CAAC;AAEtD,YAAA,IAAI,IAAI,CAAC,iBAAiB,EAAE,EAAE;AAC1B,gBAAA,IAAI,CAAC,YAAY,CAAC,SAAS,CAAC,WAAW,CAAC,kBAAkB,EAAE,WAAW,CAAC,oBAAoB,EAAE,WAAW,CAAC,KAAK,CAAC,CAAC;gBACjH,OAAO;AACV,aAAA;AAED,YAAA,IAAI,IAAI,CAAC,SAAS,IAAI,IAAI,CAAC,OAAO,EAAE;gBAChC,IAAI,CAAC,YAAY,CAAC,kBAAkB,CAAC,IAAI,CAAC,QAAQ,EAAE,eAAe,CAAC,kBAAkB,EAAE,eAAe,CAAC,oBAAoB,EAAE,oBAAoB,CAAC,IAAI,EAAE,oBAAoB,CAAC,SAAS,CAAC,CAAC;gBACzL,OAAO;AACV,aAAA;AAED,YAAA,IAAI,CAAC,UAAU,GAAG,IAAI,CAAC;YAEvB,IAAI;AACA,gBAAA,MAAM,WAAW,GAAG,IAAI,CAAC,iBAAiB,EAAE,CAAC;AAC7C,gBAAA,MAAM,YAAY,GAAG,MAAM,IAAI,CAAC,oBAAoB,CAAC,gBAAgB,CAAC,IAAI,CAAC,KAAK,EAAE,WAAW,CAAC,CAAC;AAE/F,gBAAA,IAAI,CAAC,UAAU,GAAG,KAAK,CAAC;AAExB,gBAAA,IAAI,YAAY,IAAI,YAAY,CAAC,KAAK,CAAC,IAAI,IAAI,IAAI,CAAC,IAAI,CAAC,MAAM,IAAI,CAAC,CAAE,EAAE;oBACpE,IAAI,CAAC,YAAY,CAAC,kBAAkB,CAAC,IAAI,CAAC,QAAQ,EAAE,kBAAkB,CAAC,oBAAoB,EAAE,kBAAkB,CAAC,sBAAsB,EAAE,oBAAoB,CAAC,OAAO,EAAE,oBAAoB,CAAC,YAAY,CAAC,CAAC;AAC5M,iBAAA;AAAM,qBAAA;AACH,oBAAA,IAAI,CAAC,aAAa,GAAG,kBAAkB,CAAC,QAAQ,CAAC;AACjD,oBAAA,IAAI,CAAC,SAAS,GAAG,EAAE,CAAC;AAEpB,oBAAA,YAAY,CAAC,OAAO,CAAC,CAAC,GAAG,KAAI;AACzB,wBAAA,IAAI,GAAG,CAAC,IAAI,CAAC,MAAM,GAAG,CAAC,EAAE;AAErB,4BAAA,MAAM,YAAY,GAA0B,IAAI,qBAAqB,EAAE,CAAC;AAExE,4BAAA,YAAY,CAAC,QAAQ,GAAG,GAAG,CAAC,IAAI,CAAC,GAAG,CAAC,IAAI,KAAK;AAC1C,gCAAA,IAAI,EAAE,MAAM,CAAC,IAAI,IAAI,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC,CAAC,MAAM,CAAC,qBAAqB,CAAC;gCAC/D,KAAK,EAAE,IAAI,CAAC,KAAK;AACpB,6BAAA,CAAC,CAAC,CAAC;4BACJ,YAAY,CAAC,IAAI,GAAG;AAChB,gCAAA,IAAI,EAAE,EAAE;gCACR,IAAI,EAAE,GAAG,CAAC,IAAI;6BACjB,CAAC;AACF,4BAAA,YAAY,CAAC,UAAU,GAAG,GAAG,CAAC,UAAU,GAAG,IAAI,GAAG,GAAG,CAAC,IAAI,GAAG,GAAG,CAAC;AACjE,4BAAA,YAAY,CAAC,YAAY,GAAG,IAAI,CAAC;AACjC,4BAAA,YAAY,CAAC,aAAa,GAAG,IAAI,CAAC;AAClC,4BAAA,YAAY,CAAC,WAAW,GAAG,IAAI,CAAC;AAChC,4BAAA,YAAY,CAAC,iBAAiB,GAAG,IAAI,CAAC;4BACtC,YAAY,CAAC,UAAU,GAAG;gCACtB,IAAI,EAAE,GAAG,CAAC,UAAU;AACpB,gCAAA,KAAK,EAAE,MAAM;6BAChB,CAAA;AAED,4BAAA,IAAI,CAAC,SAAS,CAAC,IAAI,CAAC,YAAY,CAAC,CAAC;AACrC,yBAAA;AACL,qBAAC,CAAC,CAAC;AACN,iBAAA;AAEJ,aAAA;AAAC,YAAA,OAAO,KAAK,EAAE;AAEZ,gBAAA,OAAO,CAAC,KAAK,CAAC,6BAA6B,EAAE,KAAK,CAAC,CAAC;gBACpD,IAAI,CAAC,YAAY,CAAC,kBAAkB,CAAC,IAAI,CAAC,QAAQ,EAAE,kBAAkB,CAAC,mBAAmB,EAAE,kBAAkB,CAAC,qBAAqB,EAAE,oBAAoB,CAAC,MAAM,EAAE,oBAAoB,CAAC,WAAW,CAAC,CAAC;AAExM,aAAA;AAAS,oBAAA;AACN,gBAAA,IAAI,CAAC,UAAU,GAAG,KAAK,CAAC;AAC3B,aAAA;SACJ,CAAA,CAAA;AAAA,KAAA;IAED,iBAAiB,GAAA;AACb,QAAA,MAAM,QAAQ,GAAG;YACb,IAAI,CAAC,eAAe,CAAC,WAAW;YAChC,IAAI,CAAC,gBAAgB,CAAC,aAAa;YACnC,IAAI,CAAC,eAAe,CAAC,YAAY;AACjC,YAAA,IAAI,CAAC,WAAW;SACnB,CAAC;AAEF,QAAA,QAAQ,CAAC,OAAO,CAAC,OAAO,IAAI,OAAO,CAAC,aAAa,EAAE,CAAC,CAAC;AACrD,QAAA,OAAO,QAAQ,CAAC,IAAI,CAAC,OAAO,IAAI,OAAO,CAAC,OAAO,CAAC,CAAC;KACpD;IAED,iBAAiB,GAAA;AAEb,QAAA,MAAM,WAAW,GAAG,IAAI,oBAAoB,EAAE,CAAC;AAE/C,QAAA,MAAM,kBAAkB,GAAG,IAAI,CAAC,mBAAmB,CAAC,IAAI,CAAC,WAAW,CAAC,KAAK,CAAC,CAAC;AAE5E,QAAA,WAAW,CAAC,SAAS,GAAG,IAAI,CAAC,SAAS,CAAC;AACvC,QAAA,WAAW,CAAC,OAAO,GAAG,IAAI,CAAC,OAAO,CAAC;AACnC,QAAA,WAAW,CAAC,QAAQ,GAAG,IAAI,CAAC,WAAW,CAAC;QACxC,WAAW,CAAC,UAAU,GAAG,IAAI,CAAC,eAAe,CAAC,YAAY,CAAC,KAAK,CAAC;QACjE,WAAW,CAAC,MAAM,GAAG;AACjB,YAAA;AACI,gBAAA,IAAI,EAAE,IAAI,CAAC,WAAW,CAAC,KAAK;AAC5B,gBAAA,KAAK,EAAE,KAAK;AACZ,gBAAA,GAAG,EAAE,KAAK;gBACV,cAAc,EAAE,kBAAkB,GAAG,KAAK,GAAG,IAAI;gBACjD,cAAc,EAAE,kBAAkB,GAAG,QAAQ,GAAG,IAAI;AACvD,aAAA;SACJ,CAAC;QACF,WAAW,CAAC,aAAa,EAAE,CAAC;AAE5B,QAAA,OAAO,WAAW,CAAC;KACtB;AAED,IAAA,mBAAmB,CAAC,gBAAgB,EAAA;AAChC,QAAA,MAAM,SAAS,GAAG,IAAI,CAAC,gBAAgB,CAAC,eAAe,CAAC,IAAI,CAAC,UAAU,EAAE,WAAW,EAAE,gBAAgB,CAAC,CAAC;QACxG,OAAO,SAAS,GAAG,SAAS,CAAC,SAAS,GAAG,KAAK,CAAC;KAClD;;kHAtMQ,oBAAoB,EAAA,IAAA,EAAA,CAAA,EAAA,KAAA,EAAA5B,IAAA,CAAA,cAAA,EAAA,EAAA,EAAA,KAAA,EAAAkD,YAAA,EAAA,EAAA,EAAA,KAAA,EAAAnC,IAAA,CAAA,aAAA,EAAA,EAAA,EAAA,KAAA,EAAAsC,mBAAA,EAAA,EAAA,EAAA,KAAA,EAAAC,gBAAA,EAAA,EAAA,EAAA,KAAA,EAAAC,oBAAA,EAAA,EAAA,EAAA,KAAA,EAAA/C,EAAA,CAAA,gBAAA,EAAA,CAAA,EAAA,MAAA,EAAA,EAAA,CAAA,eAAA,CAAA,SAAA,EAAA,CAAA,CAAA;AAApB,oBAAA,CAAA,IAAA,GAAA,EAAA,CAAA,oBAAA,CAAA,EAAA,UAAA,EAAA,QAAA,EAAA,OAAA,EAAA,SAAA,EAAA,IAAA,EAAA,oBAAoB,wXClCjC,4vKAsGM,EAAA,UAAA,EAAA,CAAA,EAAA,IAAA,EAAAC,EAAA,CAAA,kBAAA,EAAA,QAAA,EAAA,gBAAA,EAAA,MAAA,EAAA,CAAA,gCAAA,EAAA,uBAAA,EAAA,cAAA,EAAA,kBAAA,EAAA,aAAA,EAAA,aAAA,EAAA,UAAA,EAAA,UAAA,EAAA,cAAA,EAAA,qBAAA,EAAA,cAAA,EAAA,sBAAA,EAAA,wBAAA,EAAA,kBAAA,CAAA,EAAA,OAAA,EAAA,CAAA,YAAA,CAAA,EAAA,EAAA,EAAA,IAAA,EAAA+C,4BAAA,EAAA,QAAA,EAAA,0BAAA,EAAA,OAAA,EAAA,CAAA,YAAA,CAAA,EAAA,EAAA,EAAA,IAAA,EAAAC,mBAAA,EAAA,QAAA,EAAA,iBAAA,EAAA,OAAA,EAAA,CAAA,YAAA,CAAA,EAAA,EAAA,EAAA,IAAA,EAAA7C,IAAA,CAAA,YAAA,EAAA,QAAA,EAAA,gBAAA,EAAA,MAAA,EAAA,CAAA,OAAA,EAAA,YAAA,EAAA,YAAA,EAAA,oBAAA,EAAA,WAAA,CAAA,EAAA,QAAA,EAAA,CAAA,cAAA,CAAA,EAAA,EAAA,EAAA,IAAA,EAAAC,EAAA,CAAA,SAAA,EAAA,QAAA,EAAA,YAAA,EAAA,MAAA,EAAA,CAAA,UAAA,EAAA,eAAA,EAAA,UAAA,CAAA,EAAA,QAAA,EAAA,CAAA,WAAA,CAAA,EAAA,EAAA,EAAA,IAAA,EAAAC,GAAA,CAAA,SAAA,EAAA,QAAA,EAAA,YAAA,EAAA,QAAA,EAAA,CAAA,WAAA,CAAA,EAAA,EAAA,EAAA,IAAA,EAAAuB,IAAA,CAAA,wBAAA,EAAA,QAAA,EAAA,uBAAA,EAAA,MAAA,EAAA,CAAA,kBAAA,EAAA,MAAA,EAAA,WAAA,EAAA,cAAA,EAAA,qBAAA,EAAA,gCAAA,EAAA,kBAAA,EAAA,WAAA,EAAA,qBAAA,EAAA,4BAAA,EAAA,8BAAA,EAAA,uCAAA,EAAA,WAAA,EAAA,uBAAA,EAAA,0BAAA,EAAA,gCAAA,EAAA,iCAAA,EAAA,kCAAA,EAAA,uBAAA,EAAA,mCAAA,CAAA,EAAA,OAAA,EAAA,CAAA,WAAA,CAAA,EAAA,EAAA,EAAA,IAAA,EAAA7B,EAAA,CAAA,qBAAA,EAAA,QAAA,EAAA,mBAAA,EAAA,MAAA,EAAA,CAAA,qBAAA,EAAA,qBAAA,EAAA,UAAA,EAAA,YAAA,EAAA,iBAAA,CAAA,EAAA,EAAA,EAAA,IAAA,EAAAA,EAAA,CAAA,iBAAA,EAAA,QAAA,EAAA,qBAAA,EAAA,MAAA,EAAA,CAAA,OAAA,EAAA,YAAA,EAAA,OAAA,CAAA,EAAA,EAAA,EAAA,IAAA,EAAA8B,EAAA,CAAA,OAAA,EAAA,QAAA,EAAA,UAAA,EAAA,QAAA,EAAA,CAAA,SAAA,CAAA,EAAA,EAAA,EAAA,IAAA,EAAAC,KAAA,CAAA,yBAAA,EAAA,QAAA,EAAA,yBAAA,EAAA,MAAA,EAAA,CAAA,cAAA,EAAA,cAAA,EAAA,eAAA,EAAA,SAAA,CAAA,EAAA,CAAA,EAAA,UAAA,EAAA,CAAA,EAAA,IAAA,EAAA3B,IAAA,CAAA,QAAA,EAAA,QAAA,EAAA,WAAA,EAAA,EAAA,EAAA,IAAA,EAAA4B,IAAA,CAAA,iBAAA,EAAA,QAAA,EAAA,wIAAA,EAAA,MAAA,EAAA,CAAA,UAAA,CAAA,EAAA,EAAA,EAAA,IAAA,EAAAA,IAAA,CAAA,eAAA,EAAA,QAAA,EAAA,2CAAA,EAAA,EAAA,EAAA,IAAA,EAAAA,IAAA,CAAA,oBAAA,EAAA,QAAA,EAAA,eAAA,EAAA,MAAA,EAAA,CAAA,UAAA,EAAA,aAAA,EAAA,SAAA,CAAA,EAAA,OAAA,EAAA,CAAA,eAAA,CAAA,EAAA,QAAA,EAAA,CAAA,QAAA,CAAA,EAAA,EAAA,EAAA,IAAA,EAAAkB,GAAA,CAAA,IAAA,EAAA,QAAA,EAAA,QAAA,EAAA,MAAA,EAAA,CAAA,MAAA,EAAA,UAAA,EAAA,UAAA,CAAA,EAAA,EAAA,EAAA,IAAA,EAAAA,GAAA,CAAA,OAAA,EAAA,QAAA,EAAA,kBAAA,EAAA,MAAA,EAAA,CAAA,SAAA,EAAA,cAAA,EAAA,eAAA,CAAA,EAAA,EAAA,EAAA,IAAA,EAAA9C,IAAA,CAAA,QAAA,EAAA,QAAA,EAAA,WAAA,EAAA,MAAA,EAAA,CAAA,IAAA,CAAA,EAAA,EAAA,EAAA,IAAA,EAAAE,GAAA,CAAA,SAAA,EAAA,QAAA,EAAA,2BAAA,EAAA,MAAA,EAAA,CAAA,iBAAA,EAAA,mBAAA,EAAA,kBAAA,EAAA,gBAAA,EAAA,oBAAA,EAAA,mBAAA,EAAA,oBAAA,CAAA,EAAA,QAAA,EAAA,CAAA,WAAA,CAAA,EAAA,CAAA,EAAA,KAAA,EAAA,EAAA,OAAA,EAAA4C,GAAA,CAAA,SAAA,EAAA,EAAA,CAAA,CAAA;4FDpEO,oBAAoB,EAAA,UAAA,EAAA,CAAA;kBANhC,SAAS;AAAC,YAAA,IAAA,EAAA,CAAA;AACP,oBAAA,QAAQ,EAAE,kBAAkB;AAC5B,oBAAA,WAAW,EAAE,+BAA+B;AAC5C,oBAAA,MAAM,EAAE,EACP;AACJ,iBAAA,CAAA;uRAoCiC,eAAe,EAAA,CAAA;sBAA5C,SAAS;uBAAC,iBAAiB,CAAA;gBACG,gBAAgB,EAAA,CAAA;sBAA9C,SAAS;uBAAC,kBAAkB,CAAA;gBACC,eAAe,EAAA,CAAA;sBAA5C,SAAS;uBAAC,iBAAiB,CAAA;;;AElEhC,MAAM9B,QAAM,GAAW;AACnB,IAAA;AACI,QAAA,IAAI,EAAE,EAAE;AACR,QAAA,SAAS,EAAE,oBAAoB;AAClC,KAAA;CACJ,CAAC;MAMW,wBAAwB,CAAA;;sHAAxB,wBAAwB,EAAA,IAAA,EAAA,EAAA,EAAA,MAAA,EAAA,EAAA,CAAA,eAAA,CAAA,QAAA,EAAA,CAAA,CAAA;AAAxB,wBAAA,CAAA,IAAA,GAAA,EAAA,CAAA,mBAAA,CAAA,EAAA,UAAA,EAAA,QAAA,EAAA,OAAA,EAAA,SAAA,EAAA,QAAA,EAAA,EAAA,EAAA,IAAA,EAAA,wBAAwB,0CAFvB,YAAY,CAAA,EAAA,CAAA,CAAA;uHAEb,wBAAwB,EAAA,OAAA,EAAA,CAHxB,CAAC,YAAY,CAAC,QAAQ,CAACA,QAAM,CAAC,CAAC,EAC9B,YAAY,CAAA,EAAA,CAAA,CAAA;4FAEb,wBAAwB,EAAA,UAAA,EAAA,CAAA;kBAJpC,QAAQ;AAAC,YAAA,IAAA,EAAA,CAAA;oBACN,OAAO,EAAE,CAAC,YAAY,CAAC,QAAQ,CAACA,QAAM,CAAC,CAAC;oBACxC,OAAO,EAAE,CAAC,YAAY,CAAC;AAC1B,iBAAA,CAAA;;;ACQD;MAyBa,iBAAiB,CAAA;;+GAAjB,iBAAiB,EAAA,IAAA,EAAA,EAAA,EAAA,MAAA,EAAA,EAAA,CAAA,eAAA,CAAA,QAAA,EAAA,CAAA,CAAA;gHAAjB,iBAAiB,EAAA,YAAA,EAAA,CArBtB,oBAAoB,CAAA,EAAA,OAAA,EAAA,CAGpB,YAAY;QACZ,wBAAwB;QACxB,eAAe;QACf,yBAAyB;QACzB,gBAAgB;QAChB,kBAAkB;QAClB,cAAc;QACd,sBAAsB;QACtB,WAAW;QACX,mBAAmB;QACnB,aAAa;QACb,cAAc;QACd,kBAAkB;QAClB,eAAe;QACf,eAAe;QACf,wBAAwB,CAAA,EAAA,CAAA,CAAA;AAGnB,iBAAA,CAAA,IAAA,GAAA,EAAA,CAAA,mBAAA,CAAA,EAAA,UAAA,EAAA,QAAA,EAAA,OAAA,EAAA,SAAA,EAAA,QAAA,EAAA,EAAA,EAAA,IAAA,EAAA,iBAAiB,EAnBjB,OAAA,EAAA,CAAA;YACL,YAAY;YACZ,wBAAwB;YACxB,eAAe;YACf,yBAAyB;YACzB,gBAAgB;YAChB,kBAAkB;YAClB,cAAc;YACd,sBAAsB;YACtB,WAAW;YACX,mBAAmB;YACnB,aAAa;YACb,cAAc;YACd,kBAAkB;YAClB,eAAe;YACf,eAAe;YACf,wBAAwB;AAC3B,SAAA,CAAA,EAAA,CAAA,CAAA;4FAEQ,iBAAiB,EAAA,UAAA,EAAA,CAAA;kBAvB7B,QAAQ;AAAC,YAAA,IAAA,EAAA,CAAA;AACN,oBAAA,YAAY,EAAE;wBACV,oBAAoB;AACvB,qBAAA;AACD,oBAAA,OAAO,EAAE;wBACL,YAAY;wBACZ,wBAAwB;wBACxB,eAAe;wBACf,yBAAyB;wBACzB,gBAAgB;wBAChB,kBAAkB;wBAClB,cAAc;wBACd,sBAAsB;wBACtB,WAAW;wBACX,mBAAmB;wBACnB,aAAa;wBACb,cAAc;wBACd,kBAAkB;wBAClB,eAAe;wBACf,eAAe;wBACf,wBAAwB;AAC3B,qBAAA;AACJ,iBAAA,CAAA;;;MCpCY+B,qBAAmB,CAAA;AAY5B,IAAA,WAAA,GAAA;QAPA,IAAY,CAAA,YAAA,GAAG,aAAa,CAAC;AAE7B,QAAA,IAAA,CAAA,UAAU,GAAG,IAAI,WAAW,CAAC,QAAQ,CAAC,CAAC;AAGvC,QAAA,IAAA,CAAA,UAAU,GAAG,IAAI,YAAY,EAAE,CAAC;KAEf;IAEjB,QAAQ,GAAA;KACP;AAED,IAAA,WAAW,CAAC,OAAsB,EAAA;AAC9B,QAAA,IAAI,OAAO,CAAC,kBAAkB,IAAI,IAAI,CAAC,kBAAkB,EAAE;YACvD,IAAI,CAAC,UAAU,CAAC,UAAU,CAAC,IAAI,CAAC,kBAAkB,CAAC,CAAC;AACvD,SAAA;KACJ;IAED,eAAe,GAAA;AACX,QAAA,IAAI,CAAC,UAAU,CAAC,IAAI,EAAE,CAAC;KAC1B;AAED,IAAA,cAAc,CAAC,gBAAgB,EAAA;AAC3B,QAAA,IAAI,CAAC,UAAU,CAAC,UAAU,CAAC,gBAAgB,CAAC,CAAC;AAC7C,QAAA,IAAI,CAAC,UAAU,CAAC,IAAI,EAAE,CAAC;KAC1B;;mHA9BQA,qBAAmB,EAAA,IAAA,EAAA,EAAA,EAAA,MAAA,EAAA,EAAA,CAAA,eAAA,CAAA,SAAA,EAAA,CAAA,CAAA;AAAnBA,qBAAA,CAAA,IAAA,GAAA,EAAA,CAAA,oBAAA,CAAA,EAAA,UAAA,EAAA,QAAA,EAAA,OAAA,EAAA,SAAA,EAAA,IAAA,EAAAA,qBAAmB,yKCXhC,6TAI0B,EAAA,UAAA,EAAA,CAAA,EAAA,IAAA,EAAA3D,IAAA,CAAA,eAAA,EAAA,QAAA,EAAA,mBAAA,EAAA,MAAA,EAAA,CAAA,eAAA,EAAA,iBAAA,EAAA,UAAA,EAAA,YAAA,EAAA,SAAA,EAAA,UAAA,EAAA,IAAA,EAAA,MAAA,EAAA,YAAA,EAAA,OAAA,CAAA,EAAA,OAAA,EAAA,CAAA,QAAA,CAAA,EAAA,QAAA,EAAA,CAAA,iBAAA,CAAA,EAAA,CAAA,EAAA,UAAA,EAAA,CAAA,EAAA,IAAA,EAAAA,IAAA,CAAA,oBAAA,EAAA,QAAA,EAAA,yBAAA,EAAA,MAAA,EAAA,CAAA,YAAA,EAAA,MAAA,EAAA,UAAA,EAAA,OAAA,EAAA,UAAA,EAAA,UAAA,CAAA,EAAA,OAAA,EAAA,CAAA,aAAA,EAAA,QAAA,CAAA,EAAA,QAAA,EAAA,CAAA,sBAAA,CAAA,EAAA,EAAA,EAAA,IAAA,EAAAC,IAAA,CAAA,eAAA,EAAA,QAAA,EAAA,2CAAA,EAAA,EAAA,EAAA,IAAA,EAAAA,IAAA,CAAA,oBAAA,EAAA,QAAA,EAAA,eAAA,EAAA,MAAA,EAAA,CAAA,UAAA,EAAA,aAAA,EAAA,SAAA,CAAA,EAAA,OAAA,EAAA,CAAA,eAAA,CAAA,EAAA,QAAA,EAAA,CAAA,QAAA,CAAA,EAAA,EAAA,EAAA,IAAA,EAAAc,GAAA,CAAA,OAAA,EAAA,QAAA,EAAA,kBAAA,EAAA,MAAA,EAAA,CAAA,SAAA,EAAA,cAAA,EAAA,eAAA,CAAA,EAAA,CAAA,EAAA,CAAA,CAAA;4FDOb4C,qBAAmB,EAAA,UAAA,EAAA,CAAA;kBAN/B,SAAS;AAAC,YAAA,IAAA,EAAA,CAAA;AACP,oBAAA,QAAQ,EAAE,iBAAiB;AAC3B,oBAAA,WAAW,EAAE,8BAA8B;AAC3C,oBAAA,MAAM,EAAE,EACP;AACJ,iBAAA,CAAA;0EAIG,kBAAkB,EAAA,CAAA;sBADjB,KAAK;gBAQN,UAAU,EAAA,CAAA;sBADT,MAAM;;;MEIEC,kBAAgB,CAAA;;gHAAhBA,kBAAgB,EAAA,IAAA,EAAA,EAAA,EAAA,MAAA,EAAA,EAAA,CAAA,eAAA,CAAA,QAAA,EAAA,CAAA,CAAA;iHAAhBA,kBAAgB,EAAA,YAAA,EAAA,CAbrBD,qBAAmB,CAAA,EAAA,OAAA,EAAA,CAGnB,YAAY;QACZ,WAAW;QACX,mBAAmB;QACnB,cAAc;AACd,QAAA,qBAAqB,aAGrBA,qBAAmB,CAAA,EAAA,CAAA,CAAA;AAGdC,kBAAA,CAAA,IAAA,GAAA,EAAA,CAAA,mBAAA,CAAA,EAAA,UAAA,EAAA,QAAA,EAAA,OAAA,EAAA,SAAA,EAAA,QAAA,EAAA,EAAA,EAAA,IAAA,EAAAA,kBAAgB,EAXhB,OAAA,EAAA,CAAA;YACL,YAAY;YACZ,WAAW;YACX,mBAAmB;YACnB,cAAc;YACd,qBAAqB;AACxB,SAAA,CAAA,EAAA,CAAA,CAAA;4FAKQA,kBAAgB,EAAA,UAAA,EAAA,CAAA;kBAf5B,QAAQ;AAAC,YAAA,IAAA,EAAA,CAAA;AACN,oBAAA,YAAY,EAAE;wBACVD,qBAAmB;AACtB,qBAAA;AACD,oBAAA,OAAO,EAAE;wBACL,YAAY;wBACZ,WAAW;wBACX,mBAAmB;wBACnB,cAAc;wBACd,qBAAqB;AACxB,qBAAA;AACD,oBAAA,OAAO,EAAE;wBACLA,qBAAmB;AACtB,qBAAA;AACJ,iBAAA,CAAA;;;ACTD;MAMa,aAAa,CAAA;AAItB,IAAA,WAAA,CACY,IAAgB,EAChB,WAAwB,EACxB,YAA0B,EACH,WAAgB,EAAA;QAHvC,IAAI,CAAA,IAAA,GAAJ,IAAI,CAAY;QAChB,IAAW,CAAA,WAAA,GAAX,WAAW,CAAa;QACxB,IAAY,CAAA,YAAA,GAAZ,YAAY,CAAc;QACH,IAAW,CAAA,WAAA,GAAX,WAAW,CAAK;AANnD,QAAA,IAAA,CAAA,cAAc,GAAW,IAAI,KAAK,EAAE,CAAC;KAOhC;AAEL,IAAA,gBAAgB,CAAC,OAAO,EAAA;QACpB,IAAI,CAAC,OAAO,EAAE;AACV,YAAA,OAAO,EAAE,CAAC;AACb,SAAA;QAED,MAAM,YAAY,GAAG,OAAO,CAAC,MAAM,CAAC,CAAC,UAAU,EAAE,UAAU,KAAI;AAC3D,YAAA,IAAI,UAAU,IAAI,UAAU,CAAC,IAAI,EAAE;AAC/B,gBAAA,UAAU,CAAC,IAAI,CAAC,OAAO,CAAC,KAAK,IAAG;AAC5B,oBAAA,IAAI,KAAK,IAAI,KAAK,CAAC,IAAI,EAAE;AACrB,wBAAA,UAAU,CAAC,GAAG,CAAC,KAAK,CAAC,IAAI,CAAC,CAAC;AAC9B,qBAAA;AACL,iBAAC,CAAC,CAAC;AACN,aAAA;AACD,YAAA,OAAO,UAAU,CAAC;AACtB,SAAC,EAAE,IAAI,GAAG,EAAU,CAAC,CAAC;QAEtB,OAAO,KAAK,CAAC,IAAI,CAAC,YAAY,CAAC,CAAC,IAAI,EAAE,CAAC;KAC1C;AAED,IAAA,aAAa,CAAC,SAAS,EAAE,OAAO,EAAE,MAAM,EAAA;QACpC,OAAO,SAAS,CAAC,GAAG,CAAC,CAAC,IAAI,EAAE,KAAK,MAAM;YACnC,KAAK,EAAE,KAAK,GAAG,CAAC;YAChB,IAAI,EAAE,IAAI,CAAC,WAAW,CAAC,UAAU,CAAC,IAAI,EAAE,MAAM,CAAC;AAC/C,YAAA,IAAI,EAAE,OAAO,CAAC,GAAG,CAAC,WAAW,IAAG;AAC5B,gBAAA,MAAM,aAAa,GAAG,WAAW,CAAC,IAAI,CAAC,IAAI,CAAC,KAAK,IAAI,KAAK,CAAC,IAAI,IAAI,IAAI,CAAC,CAAC;AACzE,gBAAA,OAAO,aAAa,GAAG,aAAa,CAAC,KAAK,GAAG,eAAe,CAAC,MAAM,CAAC;AACxE,aAAC,CAAC;AACL,SAAA,CAAC,CAAC,CAAC;KACP;IAEK,cAAc,CAAC,KAAK,EAAE,WAAW,EAAA;;YACnC,MAAM,GAAG,GAAG,CAAA,EAAG,IAAI,CAAC,WAAW,CAAC,kBAAkB,CAAA,qBAAA,EAAwB,KAAK,CAAA,OAAA,CAAS,CAAC;YAEzF,IAAI;gBACA,MAAM,QAAQ,GAAuB,MAAM,IAAI,CAAC,IAAI,CAAC,IAAI,CAAC,GAAG,EAAE,WAAW,EAAE,EAAE,OAAO,EAAE,UAAU,EAAE,YAAY,EAAE,MAAM,EAAE,CAAC,CAAC,SAAS,EAAE,CAAC;AAEvI,gBAAA,IAAI,QAAQ,IAAI,QAAQ,CAAC,IAAI,EAAE;oBAC3B,MAAM,IAAI,GAAG,IAAI,IAAI,CAAC,CAAC,QAAQ,CAAC,IAAI,CAAC,EAAE,EAAE,IAAI,EAAE,QAAQ,CAAC,OAAO,CAAC,GAAG,CAAC,cAAc,CAAC,EAAE,CAAC,CAAC;oBACvF,MAAM,YAAY,GAAG,QAAQ,CAAC,aAAa,CAAC,GAAG,CAAC,CAAC;oBACjD,MAAM,WAAW,GAAG,MAAM,EAAE,CAAC,MAAM,CAAC,mBAAmB,CAAC,CAAC;oBACzD,YAAY,CAAC,IAAI,GAAG,MAAM,CAAC,GAAG,CAAC,eAAe,CAAC,IAAI,CAAC,CAAC;AACrD,oBAAA,YAAY,CAAC,QAAQ,GAAG,WAAW,CAAC,UAAU,GAAG,GAAG,GAAG,WAAW,GAAG,GAAG,GAAG,WAAW,CAAC,YAAY,CAAC;AACpG,oBAAA,QAAQ,CAAC,IAAI,CAAC,WAAW,CAAC,YAAY,CAAC,CAAC;oBACxC,YAAY,CAAC,KAAK,EAAE,CAAC;AACrB,oBAAA,QAAQ,CAAC,IAAI,CAAC,WAAW,CAAC,YAAY,CAAC,CAAC;AAC3C,iBAAA;AAAM,qBAAA;oBACH,IAAI,CAAC,YAAY,CAAC,kBAAkB,CAAC,IAAI,CAAC,cAAc,EAAE,eAAe,CAAC,oBAAoB,EAAE,eAAe,CAAC,sBAAsB,EAAE,oBAAoB,CAAC,OAAO,EAAE,oBAAoB,CAAC,YAAY,CAAC,CAAC;AAC5M,iBAAA;AACJ,aAAA;AAAC,YAAA,OAAO,KAAK,EAAE;gBACZ,IAAI,CAAC,YAAY,CAAC,kBAAkB,CAAC,IAAI,CAAC,cAAc,EAAE,eAAe,CAAC,mBAAmB,EAAE,eAAe,CAAC,qBAAqB,EAAE,oBAAoB,CAAC,MAAM,EAAE,oBAAoB,CAAC,WAAW,CAAC,CAAC;AACxM,aAAA;SACJ,CAAA,CAAA;AAAA,KAAA;IAEK,yBAAyB,CAAC,KAAK,EAAE,WAAW,EAAA;;YAC9C,MAAM,GAAG,GAAG,CAAA,EAAG,IAAI,CAAC,WAAW,CAAC,kBAAkB,CAAA,cAAA,EAAiB,KAAK,CAAA,aAAA,CAAe,CAAC;YAExF,IAAI;gBACA,MAAM,QAAQ,GAAuB,MAAM,IAAI,CAAC,IAAI,CAAC,IAAI,CAAC,GAAG,EAAE,WAAW,EAAE,EAAE,OAAO,EAAE,UAAU,EAAE,YAAY,EAAE,MAAM,EAAE,CAAC,CAAC,SAAS,EAAE,CAAC;AAEvI,gBAAA,IAAI,QAAQ,IAAI,QAAQ,CAAC,IAAI,EAAE;oBAC3B,MAAM,IAAI,GAAG,IAAI,IAAI,CAAC,CAAC,QAAQ,CAAC,IAAI,CAAC,EAAE,EAAE,IAAI,EAAE,QAAQ,CAAC,OAAO,CAAC,GAAG,CAAC,cAAc,CAAC,EAAE,CAAC,CAAC;oBACvF,MAAM,YAAY,GAAG,QAAQ,CAAC,aAAa,CAAC,GAAG,CAAC,CAAC;oBACjD,MAAM,WAAW,GAAG,MAAM,EAAE,CAAC,MAAM,CAAC,mBAAmB,CAAC,CAAC;oBACzD,YAAY,CAAC,IAAI,GAAG,MAAM,CAAC,GAAG,CAAC,eAAe,CAAC,IAAI,CAAC,CAAC;AACrD,oBAAA,YAAY,CAAC,QAAQ,GAAG,WAAW,CAAC,UAAU,GAAG,GAAG,GAAG,WAAW,GAAG,GAAG,GAAG,WAAW,CAAC,YAAY,CAAC;AACpG,oBAAA,QAAQ,CAAC,IAAI,CAAC,WAAW,CAAC,YAAY,CAAC,CAAC;oBACxC,YAAY,CAAC,KAAK,EAAE,CAAC;AACrB,oBAAA,QAAQ,CAAC,IAAI,CAAC,WAAW,CAAC,YAAY,CAAC,CAAC;AAC3C,iBAAA;AAAM,qBAAA;oBACH,IAAI,CAAC,YAAY,CAAC,kBAAkB,CAAC,IAAI,CAAC,cAAc,EAAE,eAAe,CAAC,oBAAoB,EAAE,eAAe,CAAC,sBAAsB,EAAE,oBAAoB,CAAC,OAAO,EAAE,oBAAoB,CAAC,YAAY,CAAC,CAAC;AAC5M,iBAAA;AACJ,aAAA;AAAC,YAAA,OAAO,KAAK,EAAE;gBACZ,IAAI,CAAC,YAAY,CAAC,kBAAkB,CAAC,IAAI,CAAC,cAAc,EAAE,eAAe,CAAC,mBAAmB,EAAE,eAAe,CAAC,qBAAqB,EAAE,oBAAoB,CAAC,MAAM,EAAE,oBAAoB,CAAC,WAAW,CAAC,CAAC;AACxM,aAAA;SACJ,CAAA,CAAA;AAAA,KAAA;;AArFQ,aAAA,CAAA,IAAA,GAAA,EAAA,CAAA,kBAAA,CAAA,EAAA,UAAA,EAAA,QAAA,EAAA,OAAA,EAAA,SAAA,EAAA,QAAA,EAAA,EAAA,EAAA,IAAA,EAAA,aAAa,gGAQV,aAAa,EAAA,CAAA,EAAA,MAAA,EAAA,EAAA,CAAA,eAAA,CAAA,UAAA,EAAA,CAAA,CAAA;AARhB,aAAA,CAAA,KAAA,GAAA,EAAA,CAAA,qBAAA,CAAA,EAAA,UAAA,EAAA,QAAA,EAAA,OAAA,EAAA,SAAA,EAAA,QAAA,EAAA,EAAA,EAAA,IAAA,EAAA,aAAa,cAHV,MAAM,EAAA,CAAA,CAAA;4FAGT,aAAa,EAAA,UAAA,EAAA,CAAA;kBAJzB,UAAU;AAAC,YAAA,IAAA,EAAA,CAAA;AACR,oBAAA,UAAU,EAAE,MAAM;AACrB,iBAAA,CAAA;;0BAUQ,MAAM;2BAAC,aAAa,CAAA;;;ACD7B;MAQa,sBAAsB,CAAA;AA2C/B,IAAA,WAAA,CACY,MAAc,EACd,cAA8B,EAC9B,YAA2B,EAC3B,gBAAkC,EAClC,oBAA0C,EAC1C,aAA4B,EAC5B,YAA0B,EAC1B,gBAAkC,EAAA;QAPlC,IAAM,CAAA,MAAA,GAAN,MAAM,CAAQ;QACd,IAAc,CAAA,cAAA,GAAd,cAAc,CAAgB;QAC9B,IAAY,CAAA,YAAA,GAAZ,YAAY,CAAe;QAC3B,IAAgB,CAAA,gBAAA,GAAhB,gBAAgB,CAAkB;QAClC,IAAoB,CAAA,oBAAA,GAApB,oBAAoB,CAAsB;QAC1C,IAAa,CAAA,aAAA,GAAb,aAAa,CAAe;QAC5B,IAAY,CAAA,YAAA,GAAZ,YAAY,CAAc;QAC1B,IAAgB,CAAA,gBAAA,GAAhB,gBAAgB,CAAkB;QAjD9C,IAAiB,CAAA,iBAAA,GAAG,iBAAiB,CAAC;QACtC,IAAe,CAAA,eAAA,GAAG,eAAe,CAAC;QAClC,IAAqB,CAAA,qBAAA,GAAG,oCAAoC,CAAC;QAE7D,IAA2B,CAAA,2BAAA,GAAG,2BAA2B,CAAC;QAC1D,IAAe,CAAA,eAAA,GAAG,eAAe,CAAC;QAClC,IAAgB,CAAA,gBAAA,GAAG,gBAAgB,CAAC;QACpC,IAAc,CAAA,cAAA,GAAG,cAAc,CAAC;QAChC,IAAiB,CAAA,iBAAA,GAAG,iBAAiB,CAAC;QACtC,IAAY,CAAA,YAAA,GAAG,YAAY,CAAC;QAC5B,IAAa,CAAA,aAAA,GAAG,aAAa,CAAC;QAmB9B,IAAS,CAAA,SAAA,GAAY,KAAK,CAAC;QAC3B,IAAU,CAAA,UAAA,GAAY,KAAK,CAAC;AAE5B,QAAA,IAAA,CAAA,cAAc,GAAW,IAAI,KAAK,EAAE,CAAC;AAErC,QAAA,IAAA,CAAA,WAAW,GAAgB,IAAI,WAAW,CAAC,EAAE,EAAE,CAAC,UAAU,CAAC,QAAQ,CAAC,CAAC,CAAC;KAgBjE;IAEL,QAAQ,GAAA;QACJ,IAAI,CAAC,KAAK,GAAG,IAAI,CAAC,cAAc,CAAC,UAAU,CAAC,cAAc,CAAC,CAAC;QAC5D,IAAI,CAAC,QAAQ,GAAG,IAAI,CAAC,cAAc,CAAC,UAAU,CAAC,UAAU,CAAC,CAAC;QAC3D,IAAI,CAAC,gBAAgB,GAAG,IAAI,CAAC,cAAc,CAAC,UAAU,CAAC,kBAAkB,CAAC,CAAC;AAE3E,QAAA,IAAI,IAAI,CAAC,gBAAgB,IAAI,gBAAgB,CAAC,aAAa,EAAE;AACzD,YAAA,IAAI,CAAC,SAAS,GAAG,uBAAuB,CAAC;AAC5C,SAAA;AAAM,aAAA,IAAI,IAAI,CAAC,gBAAgB,IAAI,gBAAgB,CAAC,YAAY,EAAE;AAC/D,YAAA,IAAI,CAAC,SAAS,GAAG,sBAAsB,CAAC;AAC3C,SAAA;QAED,IAAI,CAAC,uBAAuB,EAAE,CAAC;KAClC;IAEK,uBAAuB,GAAA;;AACzB,YAAA,MAAM,iBAAiB,GAA0B,MAAM,IAAI,CAAC,gBAAgB,CAAC,uBAAuB,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC;AAEjH,YAAA,IAAI,CAAC,iBAAiB,GAAG,iBAAiB,CAAC,oBAAoB,CAAC;SACnE,CAAA,CAAA;AAAA,KAAA;IAED,mBAAmB,GAAA;QACf,IAAI,CAAC,QAAQ,GAAG,IAAI,CAAC,eAAe,CAAC,UAAU,CAAC,KAAK,CAAC;QAEtD,IAAI,CAAC,YAAY,CAAC,oBAAoB,CAAC,IAAI,CAAC,cAAc,CAAC,CAAC;KAC/D;IAED,aAAa,GAAA;QACT,IAAI,CAAC,SAAS,GAAG,IAAI,CAAC,eAAe,CAAC,WAAW,CAAC,KAAK,CAAC;QACxD,IAAI,CAAC,OAAO,GAAG,IAAI,CAAC,eAAe,CAAC,SAAS,CAAC,KAAK,CAAC;QAEpD,IAAI,CAAC,YAAY,CAAC,oBAAoB,CAAC,IAAI,CAAC,cAAc,CAAC,CAAC;KAC/D;IAED,oBAAoB,GAAA;QAChB,IAAI,CAAC,WAAW,GAAG,IAAI,CAAC,gBAAgB,CAAC,aAAa,CAAC,KAAK,CAAC;QAE7D,IAAI,CAAC,YAAY,CAAC,oBAAoB,CAAC,IAAI,CAAC,cAAc,CAAC,CAAC;KAC/D;IAED,eAAe,GAAA;QACX,IAAI,CAAC,QAAQ,GAAG,IAAI,CAAC,WAAW,CAAC,gBAAgB,CAAC,KAAK,CAAC;QAExD,IAAI,CAAC,YAAY,CAAC,oBAAoB,CAAC,IAAI,CAAC,cAAc,CAAC,CAAC;KAC/D;IAEK,UAAU,GAAA;;;YAEZ,IAAI,CAAC,YAAY,CAAC,oBAAoB,CAAC,IAAI,CAAC,cAAc,CAAC,CAAC;AAE5D,YAAA,IAAI,IAAI,CAAC,iBAAiB,EAAE,EAAE;AAC1B,gBAAA,IAAI,CAAC,YAAY,CAAC,SAAS,CAAC,WAAW,CAAC,kBAAkB,EAAE,WAAW,CAAC,oBAAoB,EAAE,WAAW,CAAC,KAAK,CAAC,CAAC;gBACjH,OAAO;AACV,aAAA;AAED,YAAA,IAAI,IAAI,CAAC,SAAS,IAAI,IAAI,CAAC,OAAO,EAAE;gBAChC,IAAI,CAAC,YAAY,CAAC,kBAAkB,CAAC,IAAI,CAAC,cAAc,EAAE,eAAe,CAAC,kBAAkB,EAAE,eAAe,CAAC,oBAAoB,EAAE,oBAAoB,CAAC,IAAI,EAAE,oBAAoB,CAAC,SAAS,CAAC,CAAC;gBAC/L,OAAO;AACV,aAAA;AAED,YAAA,IAAI,CAAC,UAAU,GAAG,IAAI,CAAC;YAEvB,IAAI;AACA,gBAAA,MAAM,WAAW,GAAG,IAAI,CAAC,iBAAiB,EAAE,CAAC;AAE7C,gBAAA,IAAI,CAAC,UAAU,GAAG,MAAM,IAAI,CAAC,oBAAoB,CAAC,gBAAgB,CAAC,IAAI,CAAC,KAAK,EAAE,WAAW,CAAC,CAAC;AAE5F,gBAAA,IAAI,CAAA,CAAA,EAAA,GAAA,IAAI,CAAC,UAAU,MAAE,IAAA,IAAA,EAAA,KAAA,KAAA,CAAA,GAAA,KAAA,CAAA,GAAA,EAAA,CAAA,MAAM,IAAG,CAAC,IAAI,EAAC,CAAA,EAAA,GAAA,IAAI,CAAC,UAAU,MAAE,IAAA,IAAA,EAAA,KAAA,KAAA,CAAA,GAAA,KAAA,CAAA,GAAA,EAAA,CAAA,KAAK,CAAC,IAAI,IAAI,IAAI,CAAC,IAAI,CAAC,MAAM,IAAI,CAAC,CAAC,CAAA,EAAE;AACvF,oBAAA,IAAI,CAAC,SAAS,GAAG,IAAI,CAAC,aAAa,CAAC,gBAAgB,CAAC,IAAI,CAAC,UAAU,CAAC,CAAC;oBACtE,IAAI,CAAC,WAAW,GAAG,IAAI,CAAC,aAAa,CAAC,aAAa,CAAC,IAAI,CAAC,SAAS,EAAE,IAAI,CAAC,UAAU,EAAE,IAAI,CAAC,cAAc,CAAC,SAAS,CAAC,CAAC;AACvH,iBAAA;AAAM,qBAAA;oBACH,IAAI,CAAC,YAAY,CAAC,kBAAkB,CAAC,IAAI,CAAC,cAAc,EAAE,eAAe,CAAC,oBAAoB,EAAE,eAAe,CAAC,sBAAsB,EAAE,oBAAoB,CAAC,OAAO,EAAE,oBAAoB,CAAC,YAAY,CAAC,CAAC;AAC5M,iBAAA;AAEJ,aAAA;AAAC,YAAA,OAAO,KAAK,EAAE;AACZ,gBAAA,OAAO,CAAC,KAAK,CAAC,uBAAuB,EAAE,KAAK,CAAC,CAAC;gBAC9C,IAAI,CAAC,YAAY,CAAC,kBAAkB,CAAC,IAAI,CAAC,cAAc,EAAE,eAAe,CAAC,mBAAmB,EAAE,eAAe,CAAC,qBAAqB,EAAE,oBAAoB,CAAC,MAAM,EAAE,oBAAoB,CAAC,WAAW,CAAC,CAAC;AACxM,aAAA;AAAS,oBAAA;AACN,gBAAA,IAAI,CAAC,UAAU,GAAG,KAAK,CAAC;AAC3B,aAAA;;AACJ,KAAA;IAED,iBAAiB,GAAA;;QAEb,IAAI,CAAA,MAAA,IAAI,CAAC,QAAQ,MAAE,IAAA,IAAA,EAAA,KAAA,KAAA,CAAA,GAAA,KAAA,CAAA,GAAA,EAAA,CAAA,MAAM,IAAG,CAAC,EAAE;AAC3B,YAAA,IAAI,CAAC,QAAQ,GAAG,IAAI,CAAC,gBAAgB,CAAC,iBAAiB,CAAC,IAAI,CAAC,QAAQ,CAAC,CAAC;AAC1E,SAAA;AAED,QAAA,MAAM,WAAW,GAAG,IAAI,oBAAoB,EAAE,CAAC;AAE/C,QAAA,WAAW,CAAC,SAAS,GAAG,IAAI,CAAC,SAAS,CAAC;AACvC,QAAA,WAAW,CAAC,OAAO,GAAG,IAAI,CAAC,OAAO,CAAC;AACnC,QAAA,WAAW,CAAC,QAAQ,GAAG,IAAI,CAAC,WAAW,CAAC;AACxC,QAAA,WAAW,CAAC,QAAQ,GAAG,IAAI,CAAC,QAAQ,CAAC;QACrC,WAAW,CAAC,MAAM,GAAG;AACjB,YAAA;AACI,gBAAA,IAAI,EAAE,IAAI,CAAC,WAAW,CAAC,KAAK;AAC5B,gBAAA,KAAK,EAAE,KAAK;AACZ,gBAAA,GAAG,EAAE,KAAK;gBACV,cAAc,EAAE,IAAI,CAAC,QAAQ;AAC7B,gBAAA,cAAc,EAAE,KAAK;AACxB,aAAA;SACJ,CAAC;QACF,WAAW,CAAC,aAAa,EAAE,CAAC;AAE5B,QAAA,OAAO,WAAW,CAAC;KACtB;AAEK,IAAA,cAAc,CAAC,MAAc,EAAA;;YAC/B,IAAI,CAAC,YAAY,CAAC,oBAAoB,CAAC,IAAI,CAAC,cAAc,CAAC,CAAC;AAE5D,YAAA,IAAI,IAAI,CAAC,iBAAiB,EAAE,EAAE;AAC1B,gBAAA,IAAI,CAAC,YAAY,CAAC,SAAS,CAAC,WAAW,CAAC,kBAAkB,EAAE,WAAW,CAAC,oBAAoB,EAAE,WAAW,CAAC,KAAK,CAAC,CAAC;gBACjH,OAAO;AACV,aAAA;AAED,YAAA,IAAI,IAAI,CAAC,SAAS,IAAI,IAAI,CAAC,OAAO,EAAE;gBAChC,IAAI,CAAC,YAAY,CAAC,kBAAkB,CAAC,IAAI,CAAC,cAAc,EAAE,eAAe,CAAC,kBAAkB,EAAE,eAAe,CAAC,oBAAoB,EAAE,oBAAoB,CAAC,IAAI,EAAE,oBAAoB,CAAC,SAAS,CAAC,CAAC;gBAC/L,OAAO;AACV,aAAA;AAED,YAAA,IAAI,CAAC,UAAU,GAAG,IAAI,CAAC;YAEvB,IAAI;AACA,gBAAA,MAAM,WAAW,GAAG,IAAI,qBAAqB,EAAE,CAAC;AAEhD,gBAAA,WAAW,CAAC,OAAO,GAAG,IAAI,CAAC,iBAAiB,EAAE,CAAC;AAC/C,gBAAA,WAAW,CAAC,UAAU,GAAG,IAAI,CAAC,SAAS,CAAC;AACxC,gBAAA,WAAW,CAAC,YAAY,GAAG,MAAM,CAAC;AAElC,gBAAA,MAAM,IAAI,CAAC,aAAa,CAAC,cAAc,CAAC,IAAI,CAAC,KAAK,EAAE,WAAW,CAAC,CAAC;AAEpE,aAAA;AAAC,YAAA,OAAO,KAAK,EAAE;AACZ,gBAAA,OAAO,CAAC,KAAK,CAAC,2BAA2B,EAAE,KAAK,CAAC,CAAC;AACrD,aAAA;AAAS,oBAAA;AACN,gBAAA,IAAI,CAAC,UAAU,GAAG,KAAK,CAAC;AAC3B,aAAA;SACJ,CAAA,CAAA;AAAA,KAAA;IAED,iBAAiB,GAAA;AACb,QAAA,MAAM,QAAQ,GAAG;YACb,IAAI,CAAC,eAAe,CAAC,WAAW;YAChC,IAAI,CAAC,gBAAgB,CAAC,aAAa;YACnC,IAAI,CAAC,WAAW,CAAC,gBAAgB;AACjC,YAAA,IAAI,CAAC,WAAW;SACnB,CAAC;AAEF,QAAA,QAAQ,CAAC,OAAO,CAAC,OAAO,IAAI,OAAO,CAAC,aAAa,EAAE,CAAC,CAAC;AACrD,QAAA,OAAO,QAAQ,CAAC,IAAI,CAAC,OAAO,IAAI,OAAO,CAAC,OAAO,CAAC,CAAC;KACpD;AAED,IAAA,cAAc,CAAC,KAAK,EAAA;AAChB,QAAA,IAAI,KAAK,EAAE;AACP,YAAA,MAAM,eAAe,GAAG,IAAI,CAAC,gBAAgB,IAAI,gBAAgB,CAAC,YAAY,GAAG,OAAO,GAAG,QAAQ,CAAC;YACpG,IAAI,CAAC,MAAM,CAAC,QAAQ,CAAC,CAAC,CAAA,gBAAA,EAAmB,eAAe,CAAA,QAAA,CAAU,CAAC,CAAC,CAAC;AACxE,SAAA;KACJ;;oHAjNQ,sBAAsB,EAAA,IAAA,EAAA,CAAA,EAAA,KAAA,EAAA3D,IAAA,CAAA,MAAA,EAAA,EAAA,EAAA,KAAA,EAAAC,IAAA,CAAA,cAAA,EAAA,EAAA,EAAA,KAAA,EAAAc,IAAA,CAAA,aAAA,EAAA,EAAA,EAAA,KAAA,EAAAgC,gBAAA,EAAA,EAAA,EAAA,KAAA,EAAAc,oBAAA,EAAA,EAAA,EAAA,KAAA,EAAAC,aAAA,EAAA,EAAA,EAAA,KAAA,EAAAnB,YAAA,EAAA,EAAA,EAAA,KAAA,EAAAlC,EAAA,CAAA,gBAAA,EAAA,CAAA,EAAA,MAAA,EAAA,EAAA,CAAA,eAAA,CAAA,SAAA,EAAA,CAAA,CAAA;AAAtB,sBAAA,CAAA,IAAA,GAAA,EAAA,CAAA,oBAAA,CAAA,EAAA,UAAA,EAAA,QAAA,EAAA,OAAA,EAAA,SAAA,EAAA,IAAA,EAAA,sBAAsB,gdCnCnC,49LAyHM,EAAA,UAAA,EAAA,CAAA,EAAA,IAAA,EAAAC,IAAA,CAAA,cAAA,EAAA,QAAA,EAAA,kBAAA,EAAA,MAAA,EAAA,CAAA,UAAA,EAAA,eAAA,EAAA,OAAA,EAAA,UAAA,EAAA,MAAA,EAAA,IAAA,EAAA,eAAA,EAAA,YAAA,EAAA,iBAAA,EAAA,UAAA,EAAA,SAAA,EAAA,kBAAA,CAAA,EAAA,OAAA,EAAA,CAAA,QAAA,EAAA,cAAA,CAAA,EAAA,QAAA,EAAA,CAAA,gBAAA,CAAA,EAAA,EAAA,EAAA,IAAA,EAAAqD,qBAAA,EAAA,QAAA,EAAA,iBAAA,EAAA,MAAA,EAAA,CAAA,oBAAA,CAAA,EAAA,OAAA,EAAA,CAAA,YAAA,CAAA,EAAA,EAAA,EAAA,IAAA,EAAAnD,EAAA,CAAA,kBAAA,EAAA,QAAA,EAAA,gBAAA,EAAA,MAAA,EAAA,CAAA,gCAAA,EAAA,uBAAA,EAAA,cAAA,EAAA,kBAAA,EAAA,aAAA,EAAA,aAAA,EAAA,UAAA,EAAA,UAAA,EAAA,cAAA,EAAA,qBAAA,EAAA,cAAA,EAAA,sBAAA,EAAA,wBAAA,EAAA,kBAAA,CAAA,EAAA,OAAA,EAAA,CAAA,YAAA,CAAA,EAAA,EAAA,EAAA,IAAA,EAAAoD,4BAAA,EAAA,QAAA,EAAA,0BAAA,EAAA,OAAA,EAAA,CAAA,YAAA,CAAA,EAAA,EAAA,EAAA,IAAA,EAAAC,eAAA,EAAA,QAAA,EAAA,YAAA,EAAA,MAAA,EAAA,CAAA,iBAAA,CAAA,EAAA,OAAA,EAAA,CAAA,YAAA,CAAA,EAAA,EAAA,EAAA,IAAA,EAAA5B,IAAA,CAAA,YAAA,EAAA,QAAA,EAAA,gBAAA,EAAA,MAAA,EAAA,CAAA,OAAA,EAAA,YAAA,EAAA,YAAA,EAAA,oBAAA,EAAA,WAAA,CAAA,EAAA,QAAA,EAAA,CAAA,cAAA,CAAA,EAAA,EAAA,EAAA,IAAA,EAAAC,EAAA,CAAA,SAAA,EAAA,QAAA,EAAA,YAAA,EAAA,MAAA,EAAA,CAAA,UAAA,EAAA,eAAA,EAAA,UAAA,CAAA,EAAA,QAAA,EAAA,CAAA,WAAA,CAAA,EAAA,EAAA,EAAA,IAAA,EAAAC,GAAA,CAAA,SAAA,EAAA,QAAA,EAAA,YAAA,EAAA,QAAA,EAAA,CAAA,WAAA,CAAA,EAAA,EAAA,EAAA,IAAA,EAAA2B,uBAAA,EAAA,QAAA,EAAA,qBAAA,EAAA,MAAA,EAAA,CAAA,oBAAA,CAAA,EAAA,OAAA,EAAA,CAAA,iBAAA,CAAA,EAAA,EAAA,EAAA,IAAA,EAAAzD,EAAA,CAAA,qBAAA,EAAA,QAAA,EAAA,mBAAA,EAAA,MAAA,EAAA,CAAA,qBAAA,EAAA,qBAAA,EAAA,UAAA,EAAA,YAAA,EAAA,iBAAA,CAAA,EAAA,EAAA,EAAA,IAAA,EAAAA,EAAA,CAAA,iBAAA,EAAA,QAAA,EAAA,qBAAA,EAAA,MAAA,EAAA,CAAA,OAAA,EAAA,YAAA,EAAA,OAAA,CAAA,EAAA,CAAA,EAAA,UAAA,EAAA,CAAA,EAAA,IAAA,EAAA4B,IAAA,CAAA,QAAA,EAAA,QAAA,EAAA,WAAA,EAAA,EAAA,EAAA,IAAA,EAAAqB,IAAA,CAAA,iBAAA,EAAA,QAAA,EAAA,wIAAA,EAAA,MAAA,EAAA,CAAA,UAAA,CAAA,EAAA,EAAA,EAAA,IAAA,EAAAA,IAAA,CAAA,eAAA,EAAA,QAAA,EAAA,2CAAA,EAAA,EAAA,EAAA,IAAA,EAAAA,IAAA,CAAA,oBAAA,EAAA,QAAA,EAAA,eAAA,EAAA,MAAA,EAAA,CAAA,UAAA,EAAA,aAAA,EAAA,SAAA,CAAA,EAAA,OAAA,EAAA,CAAA,eAAA,CAAA,EAAA,QAAA,EAAA,CAAA,QAAA,CAAA,EAAA,EAAA,EAAA,IAAA,EAAAS,GAAA,CAAA,IAAA,EAAA,QAAA,EAAA,QAAA,EAAA,MAAA,EAAA,CAAA,MAAA,EAAA,UAAA,EAAA,UAAA,CAAA,EAAA,EAAA,EAAA,IAAA,EAAAA,GAAA,CAAA,OAAA,EAAA,QAAA,EAAA,kBAAA,EAAA,MAAA,EAAA,CAAA,SAAA,EAAA,cAAA,EAAA,eAAA,CAAA,EAAA,EAAA,EAAA,IAAA,EAAA9B,IAAA,CAAA,QAAA,EAAA,QAAA,EAAA,WAAA,EAAA,MAAA,EAAA,CAAA,IAAA,CAAA,EAAA,EAAA,EAAA,IAAA,EAAAE,GAAA,CAAA,SAAA,EAAA,QAAA,EAAA,2BAAA,EAAA,MAAA,EAAA,CAAA,iBAAA,EAAA,mBAAA,EAAA,kBAAA,EAAA,gBAAA,EAAA,oBAAA,EAAA,mBAAA,EAAA,oBAAA,CAAA,EAAA,QAAA,EAAA,CAAA,WAAA,CAAA,EAAA,CAAA,EAAA,CAAA,CAAA;4FDtFO,sBAAsB,EAAA,UAAA,EAAA,CAAA;kBANlC,SAAS;AAAC,YAAA,IAAA,EAAA,CAAA;AACP,oBAAA,QAAQ,EAAE,aAAa;AACvB,oBAAA,WAAW,EAAE,0BAA0B;AACvC,oBAAA,MAAM,EAAE,EACP;AACJ,iBAAA,CAAA;wSAuCiC,eAAe,EAAA,CAAA;sBAA5C,SAAS;uBAAC,iBAAiB,CAAA;gBACE,eAAe,EAAA,CAAA;sBAA5C,SAAS;uBAAC,iBAAiB,CAAA;gBACG,gBAAgB,EAAA,CAAA;sBAA9C,SAAS;uBAAC,kBAAkB,CAAA;gBACH,WAAW,EAAA,CAAA;sBAApC,SAAS;uBAAC,aAAa,CAAA;;;AEvE5B,MAAMX,QAAM,GAAW;AACnB,IAAA;AACI,QAAA,IAAI,EAAE,EAAE;AACR,QAAA,SAAS,EAAE,sBAAsB;AACpC,KAAA;CACJ,CAAC;MAMW,0BAA0B,CAAA;;wHAA1B,0BAA0B,EAAA,IAAA,EAAA,EAAA,EAAA,MAAA,EAAA,EAAA,CAAA,eAAA,CAAA,QAAA,EAAA,CAAA,CAAA;AAA1B,0BAAA,CAAA,IAAA,GAAA,EAAA,CAAA,mBAAA,CAAA,EAAA,UAAA,EAAA,QAAA,EAAA,OAAA,EAAA,SAAA,EAAA,QAAA,EAAA,EAAA,EAAA,IAAA,EAAA,0BAA0B,0CAFzB,YAAY,CAAA,EAAA,CAAA,CAAA;yHAEb,0BAA0B,EAAA,OAAA,EAAA,CAH1B,CAAC,YAAY,CAAC,QAAQ,CAACA,QAAM,CAAC,CAAC,EAC9B,YAAY,CAAA,EAAA,CAAA,CAAA;4FAEb,0BAA0B,EAAA,UAAA,EAAA,CAAA;kBAJtC,QAAQ;AAAC,YAAA,IAAA,EAAA,CAAA;oBACN,OAAO,EAAE,CAAC,YAAY,CAAC,QAAQ,CAACA,QAAM,CAAC,CAAC;oBACxC,OAAO,EAAE,CAAC,YAAY,CAAC;AAC1B,iBAAA,CAAA;;;ACUD;MA8Ba,mBAAmB,CAAA;;iHAAnB,mBAAmB,EAAA,IAAA,EAAA,EAAA,EAAA,MAAA,EAAA,EAAA,CAAA,eAAA,CAAA,QAAA,EAAA,CAAA,CAAA;kHAAnB,mBAAmB,EAAA,YAAA,EAAA,CAzBxB,sBAAsB,CAAA,EAAA,OAAA,EAAA,CAGtB,YAAY;QACZ,0BAA0B;QAE1B,WAAW;QACX,mBAAmB;QAEnB,kBAAkB;QAClB,eAAe;QACf,cAAc;QACd,eAAe;QACf,oBAAoB;QAEpBgC,kBAAgB;QAChB,yBAAyB;QACzB,YAAY;QACZ,oBAAoB;QAEpB,eAAe;QACf,kBAAkB;QAClB,cAAc,CAAA,EAAA,CAAA,CAAA;AAGT,mBAAA,CAAA,IAAA,GAAA,EAAA,CAAA,mBAAA,CAAA,EAAA,UAAA,EAAA,QAAA,EAAA,OAAA,EAAA,SAAA,EAAA,QAAA,EAAA,EAAA,EAAA,IAAA,EAAA,mBAAmB,EAvBnB,OAAA,EAAA,CAAA;YACL,YAAY;YACZ,0BAA0B;YAE1B,WAAW;YACX,mBAAmB;YAEnB,kBAAkB;YAClB,eAAe;YACf,cAAc;YACd,eAAe;YACf,oBAAoB;YAEpBA,kBAAgB;YAChB,yBAAyB;YACzB,YAAY;YACZ,oBAAoB;YAEpB,eAAe;YACf,kBAAkB;YAClB,cAAc;AACjB,SAAA,CAAA,EAAA,CAAA,CAAA;4FAEQ,mBAAmB,EAAA,UAAA,EAAA,CAAA;kBA3B/B,QAAQ;AAAC,YAAA,IAAA,EAAA,CAAA;AACN,oBAAA,YAAY,EAAE;wBACV,sBAAsB;AACzB,qBAAA;AACD,oBAAA,OAAO,EAAE;wBACL,YAAY;wBACZ,0BAA0B;wBAE1B,WAAW;wBACX,mBAAmB;wBAEnB,kBAAkB;wBAClB,eAAe;wBACf,cAAc;wBACd,eAAe;wBACf,oBAAoB;wBAEpBA,kBAAgB;wBAChB,yBAAyB;wBACzB,YAAY;wBACZ,oBAAoB;wBAEpB,eAAe;wBACf,kBAAkB;wBAClB,cAAc;AACjB,qBAAA;AACJ,iBAAA,CAAA;;;ACpCD;MAQa,mBAAmB,CAAA;AA0B5B,IAAA,WAAA,CACY,MAAc,EACd,WAAwB,EACxB,cAA8B,EAC9B,YAA2B,EAC3B,YAA0B,EAC1B,oBAA0C,EAC1C,aAA4B,EAAA;QAN5B,IAAM,CAAA,MAAA,GAAN,MAAM,CAAQ;QACd,IAAW,CAAA,WAAA,GAAX,WAAW,CAAa;QACxB,IAAc,CAAA,cAAA,GAAd,cAAc,CAAgB;QAC9B,IAAY,CAAA,YAAA,GAAZ,YAAY,CAAe;QAC3B,IAAY,CAAA,YAAA,GAAZ,YAAY,CAAc;QAC1B,IAAoB,CAAA,oBAAA,GAApB,oBAAoB,CAAsB;QAC1C,IAAa,CAAA,aAAA,GAAb,aAAa,CAAe;QA/BxC,IAAiB,CAAA,iBAAA,GAAG,iBAAiB,CAAC;QACtC,IAAe,CAAA,eAAA,GAAG,eAAe,CAAC;QAElC,IAA2B,CAAA,2BAAA,GAAG,2BAA2B,CAAC;QAC1D,IAAe,CAAA,eAAA,GAAG,eAAe,CAAC;QAClC,IAAc,CAAA,cAAA,GAAG,cAAc,CAAC;QAChC,IAAiB,CAAA,iBAAA,GAAG,iBAAiB,CAAC;QACtC,IAAY,CAAA,YAAA,GAAG,YAAY,CAAC;QAC5B,IAAY,CAAA,YAAA,GAAG,YAAY,CAAC;QAC5B,IAAa,CAAA,aAAA,GAAG,aAAa,CAAC;AAK9B,QAAA,IAAA,CAAA,UAAU,GAAG,CAAC,IAAI,SAAS,EAAE,CAAC,CAAC;QAC/B,IAAS,CAAA,SAAA,GAAY,KAAK,CAAC;QAC3B,IAAU,CAAA,UAAA,GAAY,KAAK,CAAC;AAE5B,QAAA,IAAA,CAAA,cAAc,GAAW,IAAI,KAAK,EAAE,CAAC;QAiHrC,IAAa,CAAA,aAAA,GAAG,CAAC,SAAoB,EAAE,WAAmB,EAAE,KAAa,KAAa;YAClF,OAAO,SAAS,CAAC,GAAG,CAAC,WAAW,CAAC,CAAC,QAAQ,CAAC,KAAK,CAAC,CAAC;AACtD,SAAC,CAAA;KArGI;IAEL,QAAQ,GAAA;QACJ,IAAI,CAAC,KAAK,GAAG,IAAI,CAAC,cAAc,CAAC,UAAU,CAAC,cAAc,CAAC,CAAC;QAC5D,IAAI,CAAC,QAAQ,GAAG,IAAI,CAAC,cAAc,CAAC,UAAU,CAAC,UAAU,CAAC,CAAC;QAE3D,IAAI,CAAC,YAAY,EAAE,CAAC;KACvB;IAED,YAAY,GAAA;QACR,IAAI,CAAC,QAAQ,GAAG,IAAI,CAAC,WAAW,CAAC,KAAK,CAAC;AACnC,YAAA,SAAS,EAAE,GAAG,UAAU,CAAC,QAAQ,CAAC;AAClC,YAAA,OAAO,EAAE,GAAG,UAAU,CAAC,QAAQ,CAAC;AAChC,YAAA,cAAc,EAAE,IAAI,CAAC,WAAW,CAAC,KAAK,CAAC;AACnC,gBAAA,IAAI,EAAE,CAAC,QAAQ,EAAE,UAAU,CAAC,QAAQ,CAAC;AACrC,gBAAA,KAAK,EAAE,CAAC,UAAU,EAAE,UAAU,CAAC,QAAQ,CAAC;aAC3C,CAAC;AACF,YAAA,MAAM,EAAE,IAAI,CAAC,WAAW,CAAC,KAAK,CAAC,CAAC,IAAI,CAAC,iBAAiB,EAAE,CAAC,CAAC;AAC1D,YAAA,QAAQ,EAAE,GAAG,UAAU,CAAC,QAAQ,CAAC;AACpC,SAAA,CAAC,CAAC;KACN;IAED,iBAAiB,GAAA;AACb,QAAA,OAAO,IAAI,CAAC,WAAW,CAAC,KAAK,CAAC;AAC1B,YAAA,IAAI,EAAE,CAAC,iBAAiB,EAAE,UAAU,CAAC,QAAQ,CAAC;AAC9C,YAAA,KAAK,EAAE,CAAC,KAAK,EAAE,UAAU,CAAC,QAAQ,CAAC;AACnC,YAAA,GAAG,EAAE,CAAC,KAAK,EAAE,UAAU,CAAC,QAAQ,CAAC;AACpC,SAAA,CAAC,CAAC;KACN;IAED,aAAa,GAAA;QACT,IAAI,SAAS,GAAG,IAAI,CAAC,cAAc,CAAC,WAAW,CAAC,KAAK,CAAC;QACtD,IAAI,OAAO,GAAG,IAAI,CAAC,cAAc,CAAC,SAAS,CAAC,KAAK,CAAC;AAElD,QAAA,IAAI,CAAC,QAAQ,CAAC,GAAG,CAAC,WAAW,CAAC,CAAC,UAAU,CAAC,SAAS,CAAC,CAAC;AACrD,QAAA,IAAI,CAAC,QAAQ,CAAC,GAAG,CAAC,SAAS,CAAC,CAAC,UAAU,CAAC,OAAO,CAAC,CAAC;KACpD;IAED,YAAY,GAAA;QAER,IAAI,CAAC,YAAY,CAAC,oBAAoB,CAAC,IAAI,CAAC,cAAc,CAAC,CAAC;AAE5D,QAAA,IAAI,IAAI,CAAC,QAAQ,CAAC,OAAO,EAAE;YACvB,OAAO,CAAC,GAAG,CAAC,eAAe,EAAE,IAAI,CAAC,QAAQ,CAAC,KAAK,CAAC,CAAC;AAClD,YAAA,IAAI,CAAC,YAAY,CAAC,SAAS,CAAC,WAAW,CAAC,kBAAkB,EAAE,WAAW,CAAC,oBAAoB,EAAE,WAAW,CAAC,KAAK,CAAC,CAAC;YACjH,OAAO;AACV,SAAA;AAAM,aAAA;AACH,YAAA,IAAI,CAAC,UAAU,GAAG,IAAI,CAAC;YACvB,IAAI,CAAC,YAAY,CAAC,oBAAoB,CAAC,IAAI,CAAC,cAAc,CAAC,CAAC;YAC5D,IAAI,CAAC,UAAU,EAAE,CAAC;AACrB,SAAA;KACJ;IAEK,UAAU,GAAA;;YACZ,IAAI;AACA,gBAAA,MAAM,MAAM,GAAiB,MAAM,IAAI,CAAC,oBAAoB,CAAC,8BAA8B,CAAC,IAAI,CAAC,KAAK,EAAE,IAAI,CAAC,QAAQ,CAAC,KAAK,CAAC,CAAC;AAE7H,gBAAA,IAAI,MAAM,IAAI,MAAM,CAAC,MAAM,GAAG,CAAC,IAAI,MAAM,CAAC,CAAC,CAAC,CAAC,MAAM,CAAC,EAAE;AAClD,oBAAA,IAAI,CAAC,UAAU,GAAG,MAAM,CAAC;AAC5B,iBAAA;AAAM,qBAAA;oBACH,IAAI,CAAC,YAAY,CAAC,kBAAkB,CAAC,IAAI,CAAC,cAAc,EAAE,eAAe,CAAC,oBAAoB,EAAE,eAAe,CAAC,sBAAsB,EAAE,oBAAoB,CAAC,OAAO,EAAE,oBAAoB,CAAC,YAAY,CAAC,CAAC;AAC5M,iBAAA;AAEJ,aAAA;AAAC,YAAA,OAAO,KAAK,EAAE;AACZ,gBAAA,OAAO,CAAC,KAAK,CAAC,uBAAuB,EAAE,KAAK,CAAC,CAAC;gBAC9C,IAAI,CAAC,YAAY,CAAC,kBAAkB,CAAC,IAAI,CAAC,cAAc,EAAE,eAAe,CAAC,mBAAmB,EAAE,eAAe,CAAC,qBAAqB,EAAE,oBAAoB,CAAC,MAAM,EAAE,oBAAoB,CAAC,WAAW,CAAC,CAAC;AACxM,aAAA;AAAS,oBAAA;AACN,gBAAA,IAAI,CAAC,UAAU,GAAG,KAAK,CAAC;AAC3B,aAAA;SACJ,CAAA,CAAA;AAAA,KAAA;AAEK,IAAA,cAAc,CAAC,MAAc,EAAA;;YAC/B,IAAI,CAAC,YAAY,CAAC,oBAAoB,CAAC,IAAI,CAAC,cAAc,CAAC,CAAC;AAE5D,YAAA,IAAI,IAAI,CAAC,QAAQ,CAAC,OAAO,EAAE;gBACvB,OAAO,CAAC,GAAG,CAAC,eAAe,EAAE,IAAI,CAAC,QAAQ,CAAC,KAAK,CAAC,CAAC;AAClD,gBAAA,IAAI,CAAC,QAAQ,CAAC,gBAAgB,EAAE,CAAC;AACjC,gBAAA,IAAI,CAAC,YAAY,CAAC,SAAS,CAAC,WAAW,CAAC,kBAAkB,EAAE,WAAW,CAAC,oBAAoB,EAAE,WAAW,CAAC,KAAK,CAAC,CAAC;gBACjH,OAAO;AACV,aAAA;AAED,YAAA,IAAI,CAAC,UAAU,GAAG,IAAI,CAAC;YAEvB,IAAI;gBACA,MAAM,WAAW,GAAG,EAAE,CAAC;gBAEvB,WAAW,CAAC,SAAS,CAAC,GAAG,IAAI,CAAC,QAAQ,CAAC,KAAK,CAAC;AAC7C,gBAAA,WAAW,CAAC,YAAY,CAAC,GAAG,aAAa,CAAC;AAC1C,gBAAA,WAAW,CAAC,cAAc,CAAC,GAAG,MAAM,CAAC;AAErC,gBAAA,MAAM,IAAI,CAAC,aAAa,CAAC,yBAAyB,CAAC,IAAI,CAAC,KAAK,EAAE,WAAW,CAAC,CAAC;AAE/E,aAAA;AAAC,YAAA,OAAO,KAAK,EAAE;AACZ,gBAAA,OAAO,CAAC,KAAK,CAAC,sCAAsC,EAAE,KAAK,CAAC,CAAC;AAChE,aAAA;AAAS,oBAAA;AACN,gBAAA,IAAI,CAAC,UAAU,GAAG,KAAK,CAAC;AAC3B,aAAA;SACJ,CAAA,CAAA;AAAA,KAAA;AAMD,IAAA,cAAc,CAAC,KAAK,EAAA;AAChB,QAAA,IAAI,KAAK,EAAE;YACP,IAAI,CAAC,MAAM,CAAC,QAAQ,CAAC,CAAC,CAAA,oBAAA,CAAsB,CAAC,CAAC,CAAC;AAClD,SAAA;KACJ;;iHA7IQ,mBAAmB,EAAA,IAAA,EAAA,CAAA,EAAA,KAAA,EAAA5D,IAAA,CAAA,MAAA,EAAA,EAAA,EAAA,KAAA,EAAAC,IAAA,CAAA,WAAA,EAAA,EAAA,EAAA,KAAA,EAAAc,IAAA,CAAA,cAAA,EAAA,EAAA,EAAA,KAAA,EAAAC,IAAA,CAAA,aAAA,EAAA,EAAA,EAAA,KAAA,EAAAgC,YAAA,EAAA,EAAA,EAAA,KAAA,EAAAO,oBAAA,EAAA,EAAA,EAAA,KAAA,EAAAa,aAAA,EAAA,CAAA,EAAA,MAAA,EAAA,EAAA,CAAA,eAAA,CAAA,SAAA,EAAA,CAAA,CAAA;AAAnB,mBAAA,CAAA,IAAA,GAAA,EAAA,CAAA,oBAAA,CAAA,EAAA,UAAA,EAAA,QAAA,EAAA,OAAA,EAAA,SAAA,EAAA,IAAA,EAAA,mBAAmB,kKC1BhC,w9JA+FM,EAAA,UAAA,EAAA,CAAA,EAAA,IAAA,EAAA3D,IAAA,CAAA,cAAA,EAAA,QAAA,EAAA,kBAAA,EAAA,MAAA,EAAA,CAAA,UAAA,EAAA,eAAA,EAAA,OAAA,EAAA,UAAA,EAAA,MAAA,EAAA,IAAA,EAAA,eAAA,EAAA,YAAA,EAAA,iBAAA,EAAA,UAAA,EAAA,SAAA,EAAA,kBAAA,CAAA,EAAA,OAAA,EAAA,CAAA,QAAA,EAAA,cAAA,CAAA,EAAA,QAAA,EAAA,CAAA,gBAAA,CAAA,EAAA,EAAA,EAAA,IAAA,EAAAC,EAAA,CAAA,kBAAA,EAAA,QAAA,EAAA,gBAAA,EAAA,MAAA,EAAA,CAAA,gCAAA,EAAA,uBAAA,EAAA,cAAA,EAAA,kBAAA,EAAA,aAAA,EAAA,aAAA,EAAA,UAAA,EAAA,UAAA,EAAA,cAAA,EAAA,qBAAA,EAAA,cAAA,EAAA,sBAAA,EAAA,wBAAA,EAAA,kBAAA,CAAA,EAAA,OAAA,EAAA,CAAA,YAAA,CAAA,EAAA,EAAA,EAAA,IAAA,EAAAC,IAAA,CAAA,YAAA,EAAA,QAAA,EAAA,gBAAA,EAAA,MAAA,EAAA,CAAA,OAAA,EAAA,YAAA,EAAA,YAAA,EAAA,oBAAA,EAAA,WAAA,CAAA,EAAA,QAAA,EAAA,CAAA,cAAA,CAAA,EAAA,EAAA,EAAA,IAAA,EAAAC,EAAA,CAAA,SAAA,EAAA,QAAA,EAAA,YAAA,EAAA,MAAA,EAAA,CAAA,UAAA,EAAA,eAAA,EAAA,UAAA,CAAA,EAAA,QAAA,EAAA,CAAA,WAAA,CAAA,EAAA,EAAA,EAAA,IAAA,EAAAC,GAAA,CAAA,SAAA,EAAA,QAAA,EAAA,YAAA,EAAA,QAAA,EAAA,CAAA,WAAA,CAAA,EAAA,EAAA,EAAA,IAAA,EAAAwD,uBAAA,EAAA,QAAA,EAAA,qBAAA,EAAA,MAAA,EAAA,CAAA,oBAAA,CAAA,EAAA,OAAA,EAAA,CAAA,iBAAA,CAAA,EAAA,EAAA,EAAA,IAAA,EAAAhC,EAAA,CAAA,qBAAA,EAAA,QAAA,EAAA,mBAAA,EAAA,MAAA,EAAA,CAAA,qBAAA,EAAA,qBAAA,EAAA,UAAA,EAAA,YAAA,EAAA,iBAAA,CAAA,EAAA,EAAA,EAAA,IAAA,EAAAA,EAAA,CAAA,iBAAA,EAAA,QAAA,EAAA,qBAAA,EAAA,MAAA,EAAA,CAAA,OAAA,EAAA,YAAA,EAAA,OAAA,CAAA,EAAA,CAAA,EAAA,UAAA,EAAA,CAAA,EAAA,IAAA,EAAApC,IAAA,CAAA,aAAA,EAAA,QAAA,EAAA,8CAAA,EAAA,EAAA,EAAA,IAAA,EAAAA,IAAA,CAAA,oBAAA,EAAA,QAAA,EAAA,0FAAA,EAAA,EAAA,EAAA,IAAA,EAAAA,IAAA,CAAA,kBAAA,EAAA,QAAA,EAAA,aAAA,EAAA,MAAA,EAAA,CAAA,WAAA,CAAA,EAAA,OAAA,EAAA,CAAA,UAAA,CAAA,EAAA,QAAA,EAAA,CAAA,QAAA,CAAA,EAAA,EAAA,EAAA,IAAA,EAAAU,IAAA,CAAA,QAAA,EAAA,QAAA,EAAA,WAAA,EAAA,EAAA,EAAA,IAAA,EAAAV,IAAA,CAAA,eAAA,EAAA,QAAA,EAAA,2CAAA,EAAA,EAAA,EAAA,IAAA,EAAAA,IAAA,CAAA,eAAA,EAAA,QAAA,EAAA,mBAAA,EAAA,MAAA,EAAA,CAAA,UAAA,EAAA,iBAAA,EAAA,SAAA,CAAA,EAAA,OAAA,EAAA,CAAA,eAAA,CAAA,EAAA,EAAA,EAAA,IAAA,EAAAA,IAAA,CAAA,iBAAA,EAAA,QAAA,EAAA,wIAAA,EAAA,MAAA,EAAA,CAAA,UAAA,CAAA,EAAA,EAAA,EAAA,IAAA,EAAAqC,GAAA,CAAA,IAAA,EAAA,QAAA,EAAA,QAAA,EAAA,MAAA,EAAA,CAAA,MAAA,EAAA,UAAA,EAAA,UAAA,CAAA,EAAA,EAAA,EAAA,IAAA,EAAA3B,IAAA,CAAA,QAAA,EAAA,QAAA,EAAA,WAAA,EAAA,MAAA,EAAA,CAAA,IAAA,CAAA,EAAA,EAAA,EAAA,IAAA,EAAAE,GAAA,CAAA,SAAA,EAAA,QAAA,EAAA,2BAAA,EAAA,MAAA,EAAA,CAAA,iBAAA,EAAA,mBAAA,EAAA,kBAAA,EAAA,gBAAA,EAAA,oBAAA,EAAA,mBAAA,EAAA,oBAAA,CAAA,EAAA,QAAA,EAAA,CAAA,WAAA,CAAA,EAAA,EAAA,EAAA,IAAA,EAAAyB,GAAA,CAAA,OAAA,EAAA,QAAA,EAAA,kBAAA,EAAA,MAAA,EAAA,CAAA,SAAA,EAAA,cAAA,EAAA,eAAA,CAAA,EAAA,CAAA,EAAA,KAAA,EAAA,EAAA,MAAA,EAAAA,GAAA,CAAA,QAAA,EAAA,EAAA,CAAA,CAAA;4FDrEO,mBAAmB,EAAA,UAAA,EAAA,CAAA;kBAN/B,SAAS;AAAC,YAAA,IAAA,EAAA,CAAA;AACP,oBAAA,QAAQ,EAAE,UAAU;AACpB,oBAAA,WAAW,EAAE,uBAAuB;AACpC,oBAAA,MAAM,EAAE,EACP;AACJ,iBAAA,CAAA;yQAyBgC,cAAc,EAAA,CAAA;sBAA1C,SAAS;uBAAC,gBAAgB,CAAA;;;AE7C/B,MAAMV,QAAM,GAAW;AACnB,IAAA;AACI,QAAA,IAAI,EAAE,EAAE;AACR,QAAA,SAAS,EAAE,mBAAmB;AACjC,KAAA;CACJ,CAAC;MAOW,uBAAuB,CAAA;;qHAAvB,uBAAuB,EAAA,IAAA,EAAA,EAAA,EAAA,MAAA,EAAA,EAAA,CAAA,eAAA,CAAA,QAAA,EAAA,CAAA,CAAA;AAAvB,uBAAA,CAAA,IAAA,GAAA,EAAA,CAAA,mBAAA,CAAA,EAAA,UAAA,EAAA,QAAA,EAAA,OAAA,EAAA,SAAA,EAAA,QAAA,EAAA,EAAA,EAAA,IAAA,EAAA,uBAAuB,0CAHtB,YAAY,CAAA,EAAA,CAAA,CAAA;sHAGb,uBAAuB,EAAA,OAAA,EAAA,CAJvB,CAAC,YAAY,CAAC,QAAQ,CAACA,QAAM,CAAC,CAAC,EAC9B,YAAY,CAAA,EAAA,CAAA,CAAA;4FAGb,uBAAuB,EAAA,UAAA,EAAA,CAAA;kBALnC,QAAQ;AAAC,YAAA,IAAA,EAAA,CAAA;oBACN,OAAO,EAAE,CAAC,YAAY,CAAC,QAAQ,CAACA,QAAM,CAAC,CAAC;oBACxC,OAAO,EAAE,CAAC,YAAY,CAAC;AAC1B,iBAAA,CAAA;;;ACOD;MA0Ba,gBAAgB,CAAA;;8GAAhB,gBAAgB,EAAA,IAAA,EAAA,EAAA,EAAA,MAAA,EAAA,EAAA,CAAA,eAAA,CAAA,QAAA,EAAA,CAAA,CAAA;+GAAhB,gBAAgB,EAAA,YAAA,EAAA,CAtBrB,mBAAmB,CAAA,EAAA,OAAA,EAAA,CAGnB,YAAY;QACZ,uBAAuB;QAEvB,WAAW;QACX,mBAAmB;QAEnB,kBAAkB;QAClB,eAAe;QACf,cAAc;QACd,eAAe;QACf,oBAAoB;QAEpB,oBAAoB;QAEpB,eAAe;QACf,kBAAkB;QAClB,cAAc,CAAA,EAAA,CAAA,CAAA;AAGT,gBAAA,CAAA,IAAA,GAAA,EAAA,CAAA,mBAAA,CAAA,EAAA,UAAA,EAAA,QAAA,EAAA,OAAA,EAAA,SAAA,EAAA,QAAA,EAAA,EAAA,EAAA,IAAA,EAAA,gBAAgB,EApBhB,OAAA,EAAA,CAAA;YACL,YAAY;YACZ,uBAAuB;YAEvB,WAAW;YACX,mBAAmB;YAEnB,kBAAkB;YAClB,eAAe;YACf,cAAc;YACd,eAAe;YACf,oBAAoB;YAEpB,oBAAoB;YAEpB,eAAe;YACf,kBAAkB;YAClB,cAAc;AACjB,SAAA,CAAA,EAAA,CAAA,CAAA;4FAEQ,gBAAgB,EAAA,UAAA,EAAA,CAAA;kBAxB5B,QAAQ;AAAC,YAAA,IAAA,EAAA,CAAA;AACN,oBAAA,YAAY,EAAE;wBACV,mBAAmB;AACtB,qBAAA;AACD,oBAAA,OAAO,EAAE;wBACL,YAAY;wBACZ,uBAAuB;wBAEvB,WAAW;wBACX,mBAAmB;wBAEnB,kBAAkB;wBAClB,eAAe;wBACf,cAAc;wBACd,eAAe;wBACf,oBAAoB;wBAEpB,oBAAoB;wBAEpB,eAAe;wBACf,kBAAkB;wBAClB,cAAc;AACjB,qBAAA;AACJ,iBAAA,CAAA;;;ACxBD;MASa,2BAA2B,CAAA;IAmCpC,WACY,CAAA,cAA8B,EAC9B,YAA2B,EAC3B,gBAAkC,EAClC,oBAA0C,EAC1C,aAA4B,EAC5B,YAA0B,EAAA;QAL1B,IAAc,CAAA,cAAA,GAAd,cAAc,CAAgB;QAC9B,IAAY,CAAA,YAAA,GAAZ,YAAY,CAAe;QAC3B,IAAgB,CAAA,gBAAA,GAAhB,gBAAgB,CAAkB;QAClC,IAAoB,CAAA,oBAAA,GAApB,oBAAoB,CAAsB;QAC1C,IAAa,CAAA,aAAA,GAAb,aAAa,CAAe;QAC5B,IAAY,CAAA,YAAA,GAAZ,YAAY,CAAc;QAvCtC,IAAgB,CAAA,gBAAA,GAAG,iBAAiB,CAAC;QACrC,IAAc,CAAA,cAAA,GAAG,eAAe,CAAC;QACjC,IAAmB,CAAA,mBAAA,GAAG,oCAAoC,CAAC;QAE3D,IAA2B,CAAA,2BAAA,GAAG,2BAA2B,CAAC;QAC1D,IAAe,CAAA,eAAA,GAAG,eAAe,CAAC;QAClC,IAAgB,CAAA,gBAAA,GAAG,gBAAgB,CAAC;QACpC,IAAc,CAAA,cAAA,GAAG,cAAc,CAAC;QAChC,IAAiB,CAAA,iBAAA,GAAG,iBAAiB,CAAC;QACtC,IAAY,CAAA,YAAA,GAAG,YAAY,CAAC;QAc5B,IAAS,CAAA,SAAA,GAAY,KAAK,CAAC;QAC3B,IAAU,CAAA,UAAA,GAAY,KAAK,CAAC;AAE5B,QAAA,IAAA,CAAA,cAAc,GAAW,IAAI,KAAK,EAAE,CAAC;KAchC;IAEL,QAAQ,GAAA;QACJ,IAAI,CAAC,KAAK,GAAG,IAAI,CAAC,cAAc,CAAC,UAAU,CAAC,cAAc,CAAC,CAAC;QAC5D,IAAI,CAAC,QAAQ,GAAG,IAAI,CAAC,cAAc,CAAC,UAAU,CAAC,UAAU,CAAC,CAAC;QAC3D,IAAI,CAAC,gBAAgB,GAAG,IAAI,CAAC,cAAc,CAAC,UAAU,CAAC,kBAAkB,CAAC,CAAC;AAE3E,QAAA,IAAI,IAAI,CAAC,gBAAgB,IAAI,gBAAgB,CAAC,aAAa,EAAE;AACzD,YAAA,IAAI,CAAC,WAAW,GAAG,eAAe,CAAC;AACtC,SAAA;AAAM,aAAA,IAAI,IAAI,CAAC,gBAAgB,IAAI,gBAAgB,CAAC,YAAY,EAAE;AAC/D,YAAA,IAAI,CAAC,WAAW,GAAG,iBAAiB,CAAC;AACxC,SAAA;KACJ;IAED,mBAAmB,GAAA;QACf,IAAI,CAAC,QAAQ,GAAG,IAAI,CAAC,eAAe,CAAC,UAAU,CAAC,KAAK,CAAC;KACzD;IAED,aAAa,GAAA;QACT,IAAI,CAAC,SAAS,GAAG,IAAI,CAAC,eAAe,CAAC,WAAW,CAAC,KAAK,CAAC;QACxD,IAAI,CAAC,OAAO,GAAG,IAAI,CAAC,eAAe,CAAC,SAAS,CAAC,KAAK,CAAC;QAEpD,IAAI,CAAC,YAAY,CAAC,oBAAoB,CAAC,IAAI,CAAC,cAAc,CAAC,CAAC;KAC/D;IAED,oBAAoB,GAAA;QAChB,IAAI,CAAC,WAAW,GAAG,IAAI,CAAC,gBAAgB,CAAC,aAAa,CAAC,KAAK,CAAC;QAE7D,IAAI,CAAC,YAAY,CAAC,oBAAoB,CAAC,IAAI,CAAC,cAAc,CAAC,CAAC;KAC/D;IAED,eAAe,GAAA;QACX,IAAI,CAAC,QAAQ,GAAG,IAAI,CAAC,WAAW,CAAC,gBAAgB,CAAC,KAAK,CAAC;QAExD,IAAI,CAAC,YAAY,CAAC,oBAAoB,CAAC,IAAI,CAAC,cAAc,CAAC,CAAC;KAC/D;IAEK,UAAU,GAAA;;;YAEZ,IAAI,CAAC,YAAY,CAAC,oBAAoB,CAAC,IAAI,CAAC,cAAc,CAAC,CAAC;AAE5D,YAAA,IAAI,IAAI,CAAC,iBAAiB,EAAE,EAAE;AAC1B,gBAAA,IAAI,CAAC,YAAY,CAAC,SAAS,CAAC,WAAW,CAAC,kBAAkB,EAAE,WAAW,CAAC,oBAAoB,EAAE,WAAW,CAAC,KAAK,CAAC,CAAC;gBACjH,OAAO;AACV,aAAA;AAED,YAAA,IAAI,IAAI,CAAC,SAAS,IAAI,IAAI,CAAC,OAAO,EAAE;gBAChC,IAAI,CAAC,YAAY,CAAC,kBAAkB,CAAC,IAAI,CAAC,cAAc,EAAE,eAAe,CAAC,kBAAkB,EAAE,eAAe,CAAC,oBAAoB,EAAE,oBAAoB,CAAC,IAAI,EAAE,oBAAoB,CAAC,SAAS,CAAC,CAAC;gBAC/L,OAAO;AACV,aAAA;AAED,YAAA,IAAI,CAAC,UAAU,GAAG,IAAI,CAAC;YAEvB,IAAI;AACA,gBAAA,MAAM,WAAW,GAAG,IAAI,CAAC,iBAAiB,EAAE,CAAC;AAE7C,gBAAA,IAAI,CAAC,UAAU,GAAG,MAAM,IAAI,CAAC,oBAAoB,CAAC,gBAAgB,CAAC,IAAI,CAAC,KAAK,EAAE,WAAW,CAAC,CAAC;AAE5F,gBAAA,IAAI,CAAA,CAAA,EAAA,GAAA,IAAI,CAAC,UAAU,MAAE,IAAA,IAAA,EAAA,KAAA,KAAA,CAAA,GAAA,KAAA,CAAA,GAAA,EAAA,CAAA,MAAM,IAAG,CAAC,IAAI,EAAC,CAAA,EAAA,GAAA,IAAI,CAAC,UAAU,MAAE,IAAA,IAAA,EAAA,KAAA,KAAA,CAAA,GAAA,KAAA,CAAA,GAAA,EAAA,CAAA,KAAK,CAAC,IAAI,IAAI,IAAI,CAAC,IAAI,CAAC,MAAM,IAAI,CAAC,CAAC,CAAA,EAAE;AACvF,oBAAA,IAAI,CAAC,SAAS,GAAG,IAAI,CAAC,aAAa,CAAC,gBAAgB,CAAC,IAAI,CAAC,UAAU,CAAC,CAAC;oBACtE,IAAI,CAAC,WAAW,GAAG,IAAI,CAAC,aAAa,CAAC,aAAa,CAAC,IAAI,CAAC,SAAS,EAAE,IAAI,CAAC,UAAU,EAAE,IAAI,CAAC,cAAc,CAAC,SAAS,CAAC,CAAC;AACvH,iBAAA;AAAM,qBAAA;oBACH,IAAI,CAAC,YAAY,CAAC,kBAAkB,CAAC,IAAI,CAAC,cAAc,EAAE,eAAe,CAAC,oBAAoB,EAAE,eAAe,CAAC,sBAAsB,EAAE,oBAAoB,CAAC,OAAO,EAAE,oBAAoB,CAAC,YAAY,CAAC,CAAC;AAC5M,iBAAA;AAEJ,aAAA;AAAC,YAAA,OAAO,KAAK,EAAE;AACZ,gBAAA,OAAO,CAAC,KAAK,CAAC,uBAAuB,EAAE,KAAK,CAAC,CAAC;gBAC9C,IAAI,CAAC,YAAY,CAAC,kBAAkB,CAAC,IAAI,CAAC,cAAc,EAAE,eAAe,CAAC,mBAAmB,EAAE,eAAe,CAAC,qBAAqB,EAAE,oBAAoB,CAAC,MAAM,EAAE,oBAAoB,CAAC,WAAW,CAAC,CAAC;AACxM,aAAA;AAAS,oBAAA;AACN,gBAAA,IAAI,CAAC,UAAU,GAAG,KAAK,CAAC;AAC3B,aAAA;;AACJ,KAAA;IAED,iBAAiB,GAAA;;QAEb,IAAI,CAAA,MAAA,IAAI,CAAC,QAAQ,MAAE,IAAA,IAAA,EAAA,KAAA,KAAA,CAAA,GAAA,KAAA,CAAA,GAAA,EAAA,CAAA,MAAM,IAAG,CAAC,EAAE;AAC3B,YAAA,IAAI,CAAC,QAAQ,GAAG,IAAI,CAAC,gBAAgB,CAAC,iBAAiB,CAAC,IAAI,CAAC,QAAQ,CAAC,CAAC;AAC1E,SAAA;AAED,QAAA,MAAM,WAAW,GAAG,IAAI,oBAAoB,EAAE,CAAC;AAE/C,QAAA,WAAW,CAAC,SAAS,GAAG,IAAI,CAAC,SAAS,CAAC;AACvC,QAAA,WAAW,CAAC,OAAO,GAAG,IAAI,CAAC,OAAO,CAAC;AACnC,QAAA,WAAW,CAAC,QAAQ,GAAG,IAAI,CAAC,WAAW,CAAC;AACxC,QAAA,WAAW,CAAC,QAAQ,GAAG,IAAI,CAAC,QAAQ,CAAC;QACrC,WAAW,CAAC,MAAM,GAAG;AACjB,YAAA;gBACI,IAAI,EAAE,IAAI,CAAC,WAAW;AACtB,gBAAA,KAAK,EAAE,KAAK;AACZ,gBAAA,GAAG,EAAE,KAAK;gBACV,cAAc,EAAE,IAAI,CAAC,QAAQ;AAC7B,gBAAA,cAAc,EAAE,KAAK;AACxB,aAAA;SACJ,CAAC;QACF,WAAW,CAAC,aAAa,EAAE,CAAC;AAE5B,QAAA,OAAO,WAAW,CAAC;KACtB;AAEK,IAAA,cAAc,CAAC,MAAc,EAAA;;YAC/B,IAAI,CAAC,YAAY,CAAC,oBAAoB,CAAC,IAAI,CAAC,cAAc,CAAC,CAAC;AAE5D,YAAA,IAAI,IAAI,CAAC,iBAAiB,EAAE,EAAE;AAC1B,gBAAA,IAAI,CAAC,YAAY,CAAC,SAAS,CAAC,WAAW,CAAC,kBAAkB,EAAE,WAAW,CAAC,oBAAoB,EAAE,WAAW,CAAC,KAAK,CAAC,CAAC;gBACjH,OAAO;AACV,aAAA;AAED,YAAA,IAAI,IAAI,CAAC,SAAS,IAAI,IAAI,CAAC,OAAO,EAAE;gBAChC,IAAI,CAAC,YAAY,CAAC,kBAAkB,CAAC,IAAI,CAAC,cAAc,EAAE,eAAe,CAAC,kBAAkB,EAAE,eAAe,CAAC,oBAAoB,EAAE,oBAAoB,CAAC,IAAI,EAAE,oBAAoB,CAAC,SAAS,CAAC,CAAC;gBAC/L,OAAO;AACV,aAAA;AAED,YAAA,IAAI,CAAC,UAAU,GAAG,IAAI,CAAC;YAEvB,IAAI;AACA,gBAAA,MAAM,WAAW,GAAG,IAAI,qBAAqB,EAAE,CAAC;AAEhD,gBAAA,WAAW,CAAC,OAAO,GAAG,IAAI,CAAC,iBAAiB,EAAE,CAAC;AAC/C,gBAAA,WAAW,CAAC,UAAU,GAAG,4BAA4B,CAAC;AACtD,gBAAA,WAAW,CAAC,YAAY,GAAG,MAAM,CAAC;AAElC,gBAAA,MAAM,IAAI,CAAC,aAAa,CAAC,cAAc,CAAC,IAAI,CAAC,KAAK,EAAE,WAAW,CAAC,CAAC;AAEpE,aAAA;AAAC,YAAA,OAAO,KAAK,EAAE;AACZ,gBAAA,OAAO,CAAC,KAAK,CAAC,2BAA2B,EAAE,KAAK,CAAC,CAAC;AACrD,aAAA;AAAS,oBAAA;AACN,gBAAA,IAAI,CAAC,UAAU,GAAG,KAAK,CAAC;AAC3B,aAAA;SACJ,CAAA,CAAA;AAAA,KAAA;IAED,iBAAiB,GAAA;AACb,QAAA,MAAM,QAAQ,GAAG;YACb,IAAI,CAAC,eAAe,CAAC,WAAW;YAChC,IAAI,CAAC,gBAAgB,CAAC,aAAa;YACnC,IAAI,CAAC,WAAW,CAAC,gBAAgB;SACpC,CAAC;AAEF,QAAA,QAAQ,CAAC,OAAO,CAAC,OAAO,IAAI,OAAO,CAAC,aAAa,EAAE,CAAC,CAAC;AACrD,QAAA,OAAO,QAAQ,CAAC,IAAI,CAAC,OAAO,IAAI,OAAO,CAAC,OAAO,CAAC,CAAC;KACpD;;yHArLQ,2BAA2B,EAAA,IAAA,EAAA,CAAA,EAAA,KAAA,EAAA5B,IAAA,CAAA,cAAA,EAAA,EAAA,EAAA,KAAA,EAAAC,IAAA,CAAA,aAAA,EAAA,EAAA,EAAA,KAAA,EAAA,EAAA,CAAA,gBAAA,EAAA,EAAA,EAAA,KAAA,EAAAK,oBAAA,EAAA,EAAA,EAAA,KAAA,EAAAgE,aAAA,EAAA,EAAA,EAAA,KAAA,EAAAC,YAAA,EAAA,CAAA,EAAA,MAAA,EAAA,EAAA,CAAA,eAAA,CAAA,SAAA,EAAA,CAAA,CAAA;AAA3B,2BAAA,CAAA,IAAA,GAAA,EAAA,CAAA,oBAAA,CAAA,EAAA,UAAA,EAAA,QAAA,EAAA,OAAA,EAAA,SAAA,EAAA,IAAA,EAAA,2BAA2B,4dChCxC,i9IA2FM,EAAA,UAAA,EAAA,CAAA,EAAA,IAAA,EAAAC,qBAAA,EAAA,QAAA,EAAA,iBAAA,EAAA,MAAA,EAAA,CAAA,oBAAA,CAAA,EAAA,OAAA,EAAA,CAAA,YAAA,CAAA,EAAA,EAAA,EAAA,IAAA,EAAA/D,EAAA,CAAA,kBAAA,EAAA,QAAA,EAAA,gBAAA,EAAA,MAAA,EAAA,CAAA,gCAAA,EAAA,uBAAA,EAAA,cAAA,EAAA,kBAAA,EAAA,aAAA,EAAA,aAAA,EAAA,UAAA,EAAA,UAAA,EAAA,cAAA,EAAA,qBAAA,EAAA,cAAA,EAAA,sBAAA,EAAA,wBAAA,EAAA,kBAAA,CAAA,EAAA,OAAA,EAAA,CAAA,YAAA,CAAA,EAAA,EAAA,EAAA,IAAA,EAAA+C,4BAAA,EAAA,QAAA,EAAA,0BAAA,EAAA,OAAA,EAAA,CAAA,YAAA,CAAA,EAAA,EAAA,EAAA,IAAA,EAAAiB,eAAA,EAAA,QAAA,EAAA,YAAA,EAAA,MAAA,EAAA,CAAA,iBAAA,CAAA,EAAA,OAAA,EAAA,CAAA,YAAA,CAAA,EAAA,EAAA,EAAA,IAAA,EAAAC,uBAAA,EAAA,QAAA,EAAA,qBAAA,EAAA,MAAA,EAAA,CAAA,oBAAA,CAAA,EAAA,OAAA,EAAA,CAAA,iBAAA,CAAA,EAAA,EAAA,EAAA,IAAA,EAAA,EAAA,CAAA,qBAAA,EAAA,QAAA,EAAA,mBAAA,EAAA,MAAA,EAAA,CAAA,qBAAA,EAAA,qBAAA,EAAA,UAAA,EAAA,YAAA,EAAA,iBAAA,CAAA,EAAA,EAAA,EAAA,IAAA,EAAA,EAAA,CAAA,iBAAA,EAAA,QAAA,EAAA,qBAAA,EAAA,MAAA,EAAA,CAAA,OAAA,EAAA,YAAA,EAAA,OAAA,CAAA,EAAA,CAAA,EAAA,UAAA,EAAA,CAAA,EAAA,IAAA,EAAA7D,GAAA,CAAA,SAAA,EAAA,QAAA,EAAA,2BAAA,EAAA,MAAA,EAAA,CAAA,iBAAA,EAAA,mBAAA,EAAA,kBAAA,EAAA,gBAAA,EAAA,oBAAA,EAAA,mBAAA,EAAA,oBAAA,CAAA,EAAA,QAAA,EAAA,CAAA,WAAA,CAAA,EAAA,EAAA,EAAA,IAAA,EAAAC,GAAA,CAAA,IAAA,EAAA,QAAA,EAAA,QAAA,EAAA,MAAA,EAAA,CAAA,MAAA,EAAA,UAAA,EAAA,UAAA,CAAA,EAAA,EAAA,EAAA,IAAA,EAAAA,GAAA,CAAA,OAAA,EAAA,QAAA,EAAA,kBAAA,EAAA,MAAA,EAAA,CAAA,SAAA,EAAA,cAAA,EAAA,eAAA,CAAA,EAAA,CAAA,EAAA,CAAA,CAAA;4FD3DO,2BAA2B,EAAA,UAAA,EAAA,CAAA;kBAPvC,SAAS;AAAC,YAAA,IAAA,EAAA,CAAA;AACP,oBAAA,QAAQ,EAAE,yBAAyB;AACnC,oBAAA,WAAW,EAAE,sCAAsC;AACnD,oBAAA,MAAM,EAAE,EACP;AACJ,iBAAA,CAAA;qPAgCiC,eAAe,EAAA,CAAA;sBAA5C,SAAS;uBAAC,iBAAiB,CAAA;gBACE,eAAe,EAAA,CAAA;sBAA5C,SAAS;uBAAC,iBAAiB,CAAA;gBACG,gBAAgB,EAAA,CAAA;sBAA9C,SAAS;uBAAC,kBAAkB,CAAA;gBACH,WAAW,EAAA,CAAA;sBAApC,SAAS;uBAAC,aAAa,CAAA;;;AE5D5B,MAAMc,QAAM,GAAW;AACnB,IAAA;AACI,QAAA,IAAI,EAAE,EAAE;AACR,QAAA,SAAS,EAAE,2BAA2B;AACzC,KAAA;CACJ,CAAC;MAMW,+BAA+B,CAAA;;6HAA/B,+BAA+B,EAAA,IAAA,EAAA,EAAA,EAAA,MAAA,EAAA,EAAA,CAAA,eAAA,CAAA,QAAA,EAAA,CAAA,CAAA;AAA/B,+BAAA,CAAA,IAAA,GAAA,EAAA,CAAA,mBAAA,CAAA,EAAA,UAAA,EAAA,QAAA,EAAA,OAAA,EAAA,SAAA,EAAA,QAAA,EAAA,EAAA,EAAA,IAAA,EAAA,+BAA+B,0CAF9B,YAAY,CAAA,EAAA,CAAA,CAAA;8HAEb,+BAA+B,EAAA,OAAA,EAAA,CAH/B,CAAC,YAAY,CAAC,QAAQ,CAACA,QAAM,CAAC,CAAC,EAC9B,YAAY,CAAA,EAAA,CAAA,CAAA;4FAEb,+BAA+B,EAAA,UAAA,EAAA,CAAA;kBAJ3C,QAAQ;AAAC,YAAA,IAAA,EAAA,CAAA;oBACN,OAAO,EAAE,CAAC,YAAY,CAAC,QAAQ,CAACA,QAAM,CAAC,CAAC;oBACxC,OAAO,EAAE,CAAC,YAAY,CAAC;AAC1B,iBAAA,CAAA;;;ACED;MAoBa,wBAAwB,CAAA;;sHAAxB,wBAAwB,EAAA,IAAA,EAAA,EAAA,EAAA,MAAA,EAAA,EAAA,CAAA,eAAA,CAAA,QAAA,EAAA,CAAA,CAAA;uHAAxB,wBAAwB,EAAA,YAAA,EAAA,CAhB7B,2BAA2B,CAAA,EAAA,OAAA,EAAA,CAG3B,YAAY;QACZ,+BAA+B;QAC/BgC,kBAAgB;QAChB,eAAe;QACf,yBAAyB;QACzB,YAAY;QACZ,oBAAoB;QACpB,cAAc;QACd,kBAAkB;QAClB,cAAc;QACd,eAAe,CAAA,EAAA,CAAA,CAAA;AAGV,wBAAA,CAAA,IAAA,GAAA,EAAA,CAAA,mBAAA,CAAA,EAAA,UAAA,EAAA,QAAA,EAAA,OAAA,EAAA,SAAA,EAAA,QAAA,EAAA,EAAA,EAAA,IAAA,EAAA,wBAAwB,EAdxB,OAAA,EAAA,CAAA;YACL,YAAY;YACZ,+BAA+B;YAC/BA,kBAAgB;YAChB,eAAe;YACf,yBAAyB;YACzB,YAAY;YACZ,oBAAoB;YACpB,cAAc;YACd,kBAAkB;YAClB,cAAc;YACd,eAAe;AAClB,SAAA,CAAA,EAAA,CAAA,CAAA;4FAEQ,wBAAwB,EAAA,UAAA,EAAA,CAAA;kBAlBpC,QAAQ;AAAC,YAAA,IAAA,EAAA,CAAA;AACN,oBAAA,YAAY,EAAE;wBACV,2BAA2B;AAC9B,qBAAA;AACD,oBAAA,OAAO,EAAE;wBACL,YAAY;wBACZ,+BAA+B;wBAC/BA,kBAAgB;wBAChB,eAAe;wBACf,yBAAyB;wBACzB,YAAY;wBACZ,oBAAoB;wBACpB,cAAc;wBACd,kBAAkB;wBAClB,cAAc;wBACd,eAAe;AAClB,qBAAA;AACJ,iBAAA,CAAA;;;MC3BY,kBAAkB,CAAA;AAK9B,CAAA;MASY,MAAM,CAAA;AAKlB,CAAA;MASY,QAAQ,CAAA;AAKpB,CAAA;MAWY,iBAAiB,CAAA;AAE7B,CAAA;MAOY,uBAAuB,CAAA;AAGnC;;ACpDD;MAMa,gBAAgB,CAAA;IAEzB,WACY,CAAA,IAAgB,EACO,WAAgB,EAAA;QADvC,IAAI,CAAA,IAAA,GAAJ,IAAI,CAAY;QACO,IAAW,CAAA,WAAA,GAAX,WAAW,CAAK;KAC9C;IAEL,gBAAgB,CAAC,KAAK,EAAE,MAAM,EAAA;AAC1B,QAAA,OAAO,IAAI,CAAC,IAAI,CAAC,IAAI,CAAC,GAAG,IAAI,CAAC,WAAW,CAAC,kBAAkB,CAAiB,cAAA,EAAA,KAAK,gBAAgB,EAAE,MAAM,CAAC,CAAC;KAC/G;IAED,iBAAiB,CAAC,KAAK,EAAE,QAAQ,EAAA;AAC7B,QAAA,OAAO,IAAI,CAAC,IAAI,CAAC,GAAG,CAAU,GAAG,IAAI,CAAC,WAAW,CAAC,kBAAkB,CAAiB,cAAA,EAAA,KAAK,kBAAkB,QAAQ,CAAA,CAAE,CAAC,CAAC;KAC3H;AAED,IAAA,gBAAgB,CAAC,KAAK,EAAE,QAAQ,EAAE,MAAM,EAAA;QACpC,OAAO,IAAI,CAAC,IAAI,CAAC,KAAK,CAAC,CAAA,EAAG,IAAI,CAAC,WAAW,CAAC,kBAAkB,CAAA,cAAA,EAAiB,KAAK,CAAkB,eAAA,EAAA,QAAQ,EAAE,EAAE,MAAM,CAAC,CAAC;KAC5H;IAED,gBAAgB,CAAC,KAAK,EAAE,QAAQ,EAAA;AAC5B,QAAA,OAAO,IAAI,CAAC,IAAI,CAAC,MAAM,CAAC,GAAG,IAAI,CAAC,WAAW,CAAC,kBAAkB,CAAiB,cAAA,EAAA,KAAK,kBAAkB,QAAQ,CAAA,CAAE,CAAC,CAAC;KACrH;AAED,IAAA,mBAAmB,CAAC,MAAc,EAAE,QAAgB,EAAE,MAAc,EAAE,OAAe,EAAE,WAAW,EAAE,SAAS,EAAE,KAAK,EAAA;AAChH,QAAA,IAAI,MAAM,GAAG,IAAI,UAAU,EAAE,CAAC;QAE9B,MAAM,GAAG,MAAM,CAAC,MAAM,CAAC,QAAQ,EAAE,MAAM,CAAC,CAAC;QACzC,MAAM,GAAG,MAAM,CAAC,MAAM,CAAC,UAAU,EAAE,QAAQ,CAAC,CAAC;QAC7C,MAAM,GAAG,MAAM,CAAC,MAAM,CAAC,QAAQ,EAAE,MAAM,CAAC,CAAC;QACzC,MAAM,GAAG,MAAM,CAAC,MAAM,CAAC,SAAS,EAAE,OAAO,CAAC,CAAC;AAE3C,QAAA,IAAI,WAAW,EAAE;YACb,MAAM,GAAG,MAAM,CAAC,MAAM,CAAC,UAAU,EAAE,WAAW,CAAC,CAAC;AACnD,SAAA;AAED,QAAA,SAAS,CAAC,OAAO,CAAC,MAAM,IAAI,MAAM,GAAG,MAAM,CAAC,MAAM,CAAC,QAAQ,EAAE,MAAM,CAAC,CAAC,CAAC;QAEtE,OAAO,IAAI,CAAC,IAAI,CAAC,GAAG,CAA6B,CAAA,EAAG,IAAI,CAAC,WAAW,CAAC,kBAAkB,CAAiB,cAAA,EAAA,KAAK,qBAAqB,EAAE,EAAE,MAAM,EAAE,MAAM,EAAE,CAAC,CAAC;KAC3J;AAED,IAAA,uBAAuB,CAAC,KAAK,EAAA;AACzB,QAAA,OAAO,IAAI,CAAC,IAAI,CAAC,GAAG,CAAqB,CAAG,EAAA,IAAI,CAAC,WAAW,CAAC,kBAAkB,CAAA,cAAA,EAAiB,KAAK,CAAA,sBAAA,CAAwB,CAAC,CAAC;KAClI;IAED,qBAAqB,CAAC,KAAK,EAAE,IAAI,EAAA;AAC7B,QAAA,OAAO,IAAI,CAAC,IAAI,CAAC,IAAI,CAAY,GAAG,IAAI,CAAC,WAAW,CAAC,kBAAkB,CAAiB,cAAA,EAAA,KAAK,yBAAyB,EAAE,IAAI,CAAC,CAAC;KACjI;AAED,IAAA,uBAAuB,CAAC,KAAK,EAAA;AACzB,QAAA,OAAO,IAAI,CAAC,IAAI,CAAC,GAAG,CAA2B,CAAG,EAAA,IAAI,CAAC,WAAW,CAAC,kBAAkB,CAAA,cAAA,EAAiB,KAAK,CAAA,4BAAA,CAA8B,CAAC,CAAC;KAC9I;;AAlDQ,gBAAA,CAAA,IAAA,GAAA,EAAA,CAAA,kBAAA,CAAA,EAAA,UAAA,EAAA,QAAA,EAAA,OAAA,EAAA,SAAA,EAAA,QAAA,EAAA,EAAA,EAAA,IAAA,EAAA,gBAAgB,4CAIb,aAAa,EAAA,CAAA,EAAA,MAAA,EAAA,EAAA,CAAA,eAAA,CAAA,UAAA,EAAA,CAAA,CAAA;AAJhB,gBAAA,CAAA,KAAA,GAAA,EAAA,CAAA,qBAAA,CAAA,EAAA,UAAA,EAAA,QAAA,EAAA,OAAA,EAAA,SAAA,EAAA,QAAA,EAAA,EAAA,EAAA,IAAA,EAAA,gBAAgB,cAHb,MAAM,EAAA,CAAA,CAAA;4FAGT,gBAAgB,EAAA,UAAA,EAAA,CAAA;kBAJ5B,UAAU;AAAC,YAAA,IAAA,EAAA,CAAA;AACR,oBAAA,UAAU,EAAE,MAAM;AACrB,iBAAA,CAAA;;0BAMQ,MAAM;2BAAC,aAAa,CAAA;;;ACf7B;MAMa,aAAa,CAAA;AAEtB,IAAA,WAAA,CACY,gBAAkC,EAAA;QAAlC,IAAgB,CAAA,gBAAA,GAAhB,gBAAgB,CAAkB;KACzC;AAEC,IAAA,uBAAuB,CAAC,KAAK,EAAA;;AAC/B,YAAA,IAAI,gBAAoC,CAAC;YACzC,IAAI;AACA,gBAAA,gBAAgB,GAAG,MAAM,IAAI,CAAC,gBAAgB,CAAC,uBAAuB,CAAC,KAAK,CAAC,CAAC,SAAS,EAAE,CAAC;AAE1F,gBAAA,IAAI,gBAAgB,EAAE;AAClB,oBAAA,OAAO,gBAAgB,CAAC;AAC3B,iBAAA;AAAM,qBAAA;oBACH,OAAO,IAAI,iBAAiB,EAAE,CAAC;AAClC,iBAAA;AACJ,aAAA;AAAC,YAAA,OAAO,KAAK,EAAE;AACZ,gBAAA,OAAO,CAAC,KAAK,CAAC,SAAS,EAAE,KAAK,CAAC,CAAC;gBAChC,OAAO,IAAI,iBAAiB,EAAE,CAAC;AAClC,aAAA;SACJ,CAAA,CAAA;AAAA,KAAA;IAEK,qBAAqB,CAAC,KAAK,EAAE,IAAI,EAAA;;AACnC,YAAA,IAAI,cAAyB,CAAC;YAC9B,IAAI;AACA,gBAAA,cAAc,GAAG,MAAM,IAAI,CAAC,gBAAgB,CAAC,qBAAqB,CAAC,KAAK,EAAE,IAAI,CAAC,CAAC,SAAS,EAAE,CAAC;AAE5F,gBAAA,IAAI,cAAc,EAAE;AAChB,oBAAA,OAAO,cAAc,CAAC;AACzB,iBAAA;AAAM,qBAAA;AACH,oBAAA,OAAO,CAAC,IAAI,MAAM,EAAE,CAAC,CAAC;AACzB,iBAAA;AACJ,aAAA;AAAC,YAAA,OAAO,KAAK,EAAE;AACZ,gBAAA,OAAO,CAAC,KAAK,CAAC,SAAS,EAAE,KAAK,CAAC,CAAC;AAChC,gBAAA,OAAO,CAAC,IAAI,MAAM,EAAE,CAAC,CAAC;AACzB,aAAA;SACJ,CAAA,CAAA;AAAA,KAAA;;2GApCQ,aAAa,EAAA,IAAA,EAAA,CAAA,EAAA,KAAA,EAAAe,gBAAA,EAAA,CAAA,EAAA,MAAA,EAAA,EAAA,CAAA,eAAA,CAAA,UAAA,EAAA,CAAA,CAAA;AAAb,aAAA,CAAA,KAAA,GAAA,EAAA,CAAA,qBAAA,CAAA,EAAA,UAAA,EAAA,QAAA,EAAA,OAAA,EAAA,SAAA,EAAA,QAAA,EAAA,EAAA,EAAA,IAAA,EAAA,aAAa,cAHV,MAAM,EAAA,CAAA,CAAA;4FAGT,aAAa,EAAA,UAAA,EAAA,CAAA;kBAJzB,UAAU;AAAC,YAAA,IAAA,EAAA,CAAA;AACR,oBAAA,UAAU,EAAE,MAAM;AACrB,iBAAA,CAAA;;;ACUD;MAQa,0BAA0B,CAAA;AA+BnC,IAAA,WAAA,CACY,MAAc,EACd,WAAwB,EACxB,cAA8B,EAC9B,YAA2B,EAC3B,YAA0B,EAC1B,aAA4B,EAC5B,gBAAkC,EAClC,oBAA0C,EAC1C,aAA4B,EAAA;QAR5B,IAAM,CAAA,MAAA,GAAN,MAAM,CAAQ;QACd,IAAW,CAAA,WAAA,GAAX,WAAW,CAAa;QACxB,IAAc,CAAA,cAAA,GAAd,cAAc,CAAgB;QAC9B,IAAY,CAAA,YAAA,GAAZ,YAAY,CAAe;QAC3B,IAAY,CAAA,YAAA,GAAZ,YAAY,CAAc;QAC1B,IAAa,CAAA,aAAA,GAAb,aAAa,CAAe;QAC5B,IAAgB,CAAA,gBAAA,GAAhB,gBAAgB,CAAkB;QAClC,IAAoB,CAAA,oBAAA,GAApB,oBAAoB,CAAsB;QAC1C,IAAa,CAAA,aAAA,GAAb,aAAa,CAAe;QAtCxC,IAAiB,CAAA,iBAAA,GAAG,iBAAiB,CAAC;QACtC,IAAe,CAAA,eAAA,GAAG,eAAe,CAAC;QAElC,IAA2B,CAAA,2BAAA,GAAG,2BAA2B,CAAC;QAC1D,IAAe,CAAA,eAAA,GAAG,eAAe,CAAC;QAClC,IAAc,CAAA,cAAA,GAAG,cAAc,CAAC;QAChC,IAAiB,CAAA,iBAAA,GAAG,iBAAiB,CAAC;QACtC,IAAY,CAAA,YAAA,GAAG,YAAY,CAAC;QAC5B,IAAY,CAAA,YAAA,GAAG,YAAY,CAAC;QAC5B,IAAa,CAAA,aAAA,GAAG,aAAa,CAAC;AAQ9B,QAAA,IAAA,CAAA,UAAU,GAAG,CAAC,IAAI,SAAS,EAAE,CAAC,CAAC;QAC/B,IAAS,CAAA,SAAA,GAAY,KAAK,CAAC;QAC3B,IAAU,CAAA,UAAA,GAAY,KAAK,CAAC;AAE5B,QAAA,IAAA,CAAA,kBAAkB,GAAG,CAAC,IAAI,MAAM,EAAE,CAAC,CAAC;AAEpC,QAAA,IAAA,CAAA,cAAc,GAAW,IAAI,KAAK,EAAE,CAAC;QA+JrC,IAAa,CAAA,aAAA,GAAG,CAAC,SAAoB,EAAE,WAAmB,EAAE,KAAa,KAAa;YAClF,OAAO,SAAS,CAAC,GAAG,CAAC,WAAW,CAAC,CAAC,QAAQ,CAAC,KAAK,CAAC,CAAC;AACtD,SAAC,CAAA;KAjJI;IAEL,QAAQ,GAAA;QACJ,IAAI,CAAC,KAAK,GAAG,IAAI,CAAC,cAAc,CAAC,UAAU,CAAC,cAAc,CAAC,CAAC;QAC5D,IAAI,CAAC,QAAQ,GAAG,IAAI,CAAC,cAAc,CAAC,UAAU,CAAC,UAAU,CAAC,CAAC;QAC3D,IAAI,CAAC,gBAAgB,GAAG,IAAI,CAAC,cAAc,CAAC,UAAU,CAAC,kBAAkB,CAAC,CAAC;AAE3E,QAAA,IAAI,IAAI,CAAC,gBAAgB,IAAI,gBAAgB,CAAC,aAAa,EAAE;AACzD,YAAA,IAAI,CAAC,SAAS,GAAG,2BAA2B,CAAC;AAChD,SAAA;AAAM,aAAA,IAAI,IAAI,CAAC,gBAAgB,IAAI,gBAAgB,CAAC,YAAY,EAAE;AAC/D,YAAA,IAAI,CAAC,SAAS,GAAG,0BAA0B,CAAC;AAC/C,SAAA;QAED,IAAI,CAAC,YAAY,EAAE,CAAC;AAEpB,QAAA,IAAI,IAAI,CAAC,QAAQ,CAAC,GAAG,CAAC,qBAAqB,CAAC,CAAC,KAAK,IAAI,QAAQ,EAAE;AAC5D,YAAA,IAAI,CAAC,qBAAqB,CAAC,QAAQ,CAAC,CAAC;AACxC,SAAA;AAAM,aAAA;AACH,YAAA,IAAI,CAAC,qBAAqB,CAAC,MAAM,CAAC,CAAC;AACtC,SAAA;QAED,IAAI,CAAC,uBAAuB,EAAE,CAAC;KAClC;IAED,YAAY,GAAA;QACR,IAAI,CAAC,QAAQ,GAAG,IAAI,CAAC,WAAW,CAAC,KAAK,CAAC;AACnC,YAAA,SAAS,EAAE,GAAG,UAAU,CAAC,QAAQ,CAAC;AAClC,YAAA,OAAO,EAAE,GAAG,UAAU,CAAC,QAAQ,CAAC;AAChC,YAAA,cAAc,EAAE,IAAI,CAAC,WAAW,CAAC,KAAK,CAAC;AACnC,gBAAA,IAAI,EAAE,CAAC,QAAQ,EAAE,UAAU,CAAC,QAAQ,CAAC;AACrC,gBAAA,KAAK,EAAE,GAAG,UAAU,CAAC,QAAQ,CAAC;aACjC,CAAC;AACF,YAAA,MAAM,EAAE,IAAI,CAAC,WAAW,CAAC,KAAK,CAAC;AAC3B,gBAAA,IAAI,EAAE,CAAC,EAAE,EAAE,UAAU,CAAC,QAAQ,CAAC;AAC/B,gBAAA,KAAK,EAAE,CAAC,KAAK,EAAE,UAAU,CAAC,QAAQ,CAAC;AACnC,gBAAA,GAAG,EAAE,CAAC,KAAK,EAAE,UAAU,CAAC,QAAQ,CAAC;aACpC,CAAC;AACF,YAAA,QAAQ,EAAE,GAAG,UAAU,CAAC,QAAQ,CAAC;AACpC,SAAA,CAAC,CAAC;AAEH,QAAA,IAAI,CAAC,QAAQ,CAAC,GAAG,CAAC,qBAAqB,CAAC,CAAC,YAAY,CAAC,SAAS,CAAC,CAAO,KAAK,KAAI,SAAA,CAAA,IAAA,EAAA,KAAA,CAAA,EAAA,KAAA,CAAA,EAAA,aAAA;YAC5E,IAAI,KAAK,IAAI,QAAQ,EAAE;AACnB,gBAAA,IAAI,CAAC,qBAAqB,CAAC,QAAQ,CAAC,CAAC;AACxC,aAAA;iBAAM,IAAI,KAAK,IAAI,UAAU,EAAE;AAC5B,gBAAA,IAAI,CAAC,qBAAqB,CAAC,MAAM,CAAC,CAAC;AACtC,aAAA;SACJ,CAAA,CAAC,CAAC;KACN;AAEK,IAAA,qBAAqB,CAAC,kBAAkB,EAAA;;AAC1C,YAAA,MAAM,WAAW,GAAG;AAChB,gBAAA,IAAI,EAAE,kBAAkB;aAC3B,CAAC;AAEF,YAAA,IAAI,CAAC,kBAAkB,IAAc,MAAM,IAAI,CAAC,aAAa,CAAC,qBAAqB,CAAC,IAAI,CAAC,KAAK,EAAE,WAAW,CAAC,CAAA,CAAC;SAChH,CAAA,CAAA;AAAA,KAAA;IAED,aAAa,GAAA;QACT,IAAI,SAAS,GAAG,IAAI,CAAC,cAAc,CAAC,WAAW,CAAC,KAAK,CAAC;QACtD,IAAI,OAAO,GAAG,IAAI,CAAC,cAAc,CAAC,SAAS,CAAC,KAAK,CAAC;AAElD,QAAA,IAAI,CAAC,QAAQ,CAAC,GAAG,CAAC,WAAW,CAAC,CAAC,UAAU,CAAC,SAAS,CAAC,CAAC;AACrD,QAAA,IAAI,CAAC,QAAQ,CAAC,GAAG,CAAC,SAAS,CAAC,CAAC,UAAU,CAAC,OAAO,CAAC,CAAC;KACpD;IAEK,uBAAuB,GAAA;;AACzB,YAAA,MAAM,iBAAiB,GAA0B,MAAM,IAAI,CAAC,gBAAgB,CAAC,uBAAuB,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC;AAEjH,YAAA,IAAI,CAAC,iBAAiB,GAAG,iBAAiB,CAAC,oBAAoB,CAAC;SACnE,CAAA,CAAA;AAAA,KAAA;IAED,YAAY,GAAA;AACR,QAAA,MAAM,SAAS,GAAG,IAAI,CAAC,QAAQ,CAAC,KAAK,CAAC;AACtC,QAAA,MAAM,aAAa,GAAA,MAAA,CAAA,MAAA,CAAA,MAAA,CAAA,MAAA,CAAA,EAAA,EACZ,SAAS,CAAA,EAAA,EACZ,MAAM,EAAE,CAAC,SAAS,CAAC,MAAM,CAAC,EAAA,CAC7B,CAAC;QAEF,IAAI,CAAC,YAAY,CAAC,oBAAoB,CAAC,IAAI,CAAC,cAAc,CAAC,CAAC;AAE5D,QAAA,IAAI,IAAI,CAAC,QAAQ,CAAC,OAAO,EAAE;YACvB,OAAO,CAAC,GAAG,CAAC,eAAe,EAAE,IAAI,CAAC,QAAQ,CAAC,KAAK,CAAC,CAAC;AAClD,YAAA,IAAI,CAAC,YAAY,CAAC,SAAS,CAAC,WAAW,CAAC,kBAAkB,EAAE,WAAW,CAAC,oBAAoB,EAAE,WAAW,CAAC,KAAK,CAAC,CAAC;YACjH,OAAO;AACV,SAAA;AAAM,aAAA;AACH,YAAA,IAAI,CAAC,UAAU,GAAG,IAAI,CAAC;YACvB,IAAI,CAAC,YAAY,CAAC,oBAAoB,CAAC,IAAI,CAAC,cAAc,CAAC,CAAC;AAC5D,YAAA,IAAI,CAAC,UAAU,CAAC,aAAa,CAAC,CAAC;AAClC,SAAA;KACJ;AAEK,IAAA,UAAU,CAAC,aAAa,EAAA;;YAC1B,IAAI;AACA,gBAAA,MAAM,MAAM,GAAiB,MAAM,IAAI,CAAC,oBAAoB,CAAC,8BAA8B,CAAC,IAAI,CAAC,KAAK,EAAE,aAAa,CAAC,CAAC;AAEvH,gBAAA,IAAI,MAAM,IAAI,MAAM,CAAC,MAAM,GAAG,CAAC,IAAI,MAAM,CAAC,CAAC,CAAC,CAAC,MAAM,CAAC,EAAE;AAClD,oBAAA,IAAI,CAAC,UAAU,GAAG,MAAM,CAAC;AAC5B,iBAAA;AAAM,qBAAA;oBACH,IAAI,CAAC,YAAY,CAAC,kBAAkB,CAAC,IAAI,CAAC,cAAc,EAAE,eAAe,CAAC,oBAAoB,EAAE,eAAe,CAAC,sBAAsB,EAAE,oBAAoB,CAAC,OAAO,EAAE,oBAAoB,CAAC,YAAY,CAAC,CAAC;AAC5M,iBAAA;AAEJ,aAAA;AAAC,YAAA,OAAO,KAAK,EAAE;AACZ,gBAAA,OAAO,CAAC,KAAK,CAAC,uBAAuB,EAAE,KAAK,CAAC,CAAC;gBAC9C,IAAI,CAAC,YAAY,CAAC,kBAAkB,CAAC,IAAI,CAAC,cAAc,EAAE,eAAe,CAAC,mBAAmB,EAAE,eAAe,CAAC,qBAAqB,EAAE,oBAAoB,CAAC,MAAM,EAAE,oBAAoB,CAAC,WAAW,CAAC,CAAC;AACxM,aAAA;AAAS,oBAAA;AACN,gBAAA,IAAI,CAAC,UAAU,GAAG,KAAK,CAAC;AAC3B,aAAA;SACJ,CAAA,CAAA;AAAA,KAAA;AAEK,IAAA,cAAc,CAAC,MAAc,EAAA;;AAC/B,YAAA,MAAM,SAAS,GAAG,IAAI,CAAC,QAAQ,CAAC,KAAK,CAAC;AACtC,YAAA,MAAM,aAAa,GAAA,MAAA,CAAA,MAAA,CAAA,MAAA,CAAA,MAAA,CAAA,EAAA,EACZ,SAAS,CAAA,EAAA,EACZ,MAAM,EAAE,CAAC,SAAS,CAAC,MAAM,CAAC,EAAA,CAC7B,CAAC;YAEF,IAAI,CAAC,YAAY,CAAC,oBAAoB,CAAC,IAAI,CAAC,cAAc,CAAC,CAAC;AAE5D,YAAA,IAAI,IAAI,CAAC,QAAQ,CAAC,OAAO,EAAE;gBACvB,OAAO,CAAC,GAAG,CAAC,eAAe,EAAE,IAAI,CAAC,QAAQ,CAAC,KAAK,CAAC,CAAC;AAClD,gBAAA,IAAI,CAAC,QAAQ,CAAC,gBAAgB,EAAE,CAAC;AACjC,gBAAA,IAAI,CAAC,YAAY,CAAC,SAAS,CAAC,WAAW,CAAC,kBAAkB,EAAE,WAAW,CAAC,oBAAoB,EAAE,WAAW,CAAC,KAAK,CAAC,CAAC;gBACjH,OAAO;AACV,aAAA;AAED,YAAA,IAAI,CAAC,UAAU,GAAG,IAAI,CAAC;YAEvB,IAAI;gBACA,MAAM,WAAW,GAAG,EAAE,CAAC;AAEvB,gBAAA,WAAW,CAAC,SAAS,CAAC,GAAG,aAAa,CAAC;AACvC,gBAAA,WAAW,CAAC,YAAY,CAAC,GAAG,oBAAoB,CAAC;AACjD,gBAAA,WAAW,CAAC,cAAc,CAAC,GAAG,MAAM,CAAC;AAErC,gBAAA,MAAM,IAAI,CAAC,aAAa,CAAC,yBAAyB,CAAC,IAAI,CAAC,KAAK,EAAE,WAAW,CAAC,CAAC;AAE/E,aAAA;AAAC,YAAA,OAAO,KAAK,EAAE;AACZ,gBAAA,OAAO,CAAC,KAAK,CAAC,sCAAsC,EAAE,KAAK,CAAC,CAAC;AAChE,aAAA;AAAS,oBAAA;AACN,gBAAA,IAAI,CAAC,UAAU,GAAG,KAAK,CAAC;AAC3B,aAAA;SACJ,CAAA,CAAA;AAAA,KAAA;AAMD,IAAA,cAAc,CAAC,KAAK,EAAA;AAChB,QAAA,IAAI,KAAK,EAAE;AACP,YAAA,MAAM,eAAe,GAAG,IAAI,CAAC,gBAAgB,IAAI,gBAAgB,CAAC,YAAY,GAAG,OAAO,GAAG,QAAQ,CAAC;YACpG,IAAI,CAAC,MAAM,CAAC,QAAQ,CAAC,CAAC,CAAA,gBAAA,EAAmB,eAAe,CAAA,YAAA,CAAc,CAAC,CAAC,CAAC;AAC5E,SAAA;KACJ;;wHAjMQ,0BAA0B,EAAA,IAAA,EAAA,CAAA,EAAA,KAAA,EAAA3E,IAAA,CAAA,MAAA,EAAA,EAAA,EAAA,KAAA,EAAAC,IAAA,CAAA,WAAA,EAAA,EAAA,EAAA,KAAA,EAAAc,IAAA,CAAA,cAAA,EAAA,EAAA,EAAA,KAAA,EAAAC,IAAA,CAAA,aAAA,EAAA,EAAA,EAAA,KAAA,EAAAgC,YAAA,EAAA,EAAA,EAAA,KAAA,EAAA4B,aAAA,EAAA,EAAA,EAAA,KAAA,EAAAC,gBAAA,EAAA,EAAA,EAAA,KAAA,EAAAC,oBAAA,EAAA,EAAA,EAAA,KAAA,EAAAC,aAAA,EAAA,CAAA,EAAA,MAAA,EAAA,EAAA,CAAA,eAAA,CAAA,SAAA,EAAA,CAAA,CAAA;AAA1B,0BAAA,CAAA,IAAA,GAAA,EAAA,CAAA,oBAAA,CAAA,EAAA,UAAA,EAAA,QAAA,EAAA,OAAA,EAAA,SAAA,EAAA,IAAA,EAAA,0BAA0B,yKC9BvC,i4RAuKM,EAAA,UAAA,EAAA,CAAA,EAAA,IAAA,EAAApE,IAAA,CAAA,cAAA,EAAA,QAAA,EAAA,kBAAA,EAAA,MAAA,EAAA,CAAA,UAAA,EAAA,eAAA,EAAA,OAAA,EAAA,UAAA,EAAA,MAAA,EAAA,IAAA,EAAA,eAAA,EAAA,YAAA,EAAA,iBAAA,EAAA,UAAA,EAAA,SAAA,EAAA,kBAAA,CAAA,EAAA,OAAA,EAAA,CAAA,QAAA,EAAA,cAAA,CAAA,EAAA,QAAA,EAAA,CAAA,gBAAA,CAAA,EAAA,EAAA,EAAA,IAAA,EAAAC,IAAA,CAAA,eAAA,EAAA,QAAA,EAAA,mBAAA,EAAA,MAAA,EAAA,CAAA,eAAA,EAAA,iBAAA,EAAA,UAAA,EAAA,YAAA,EAAA,SAAA,EAAA,UAAA,EAAA,IAAA,EAAA,MAAA,EAAA,YAAA,EAAA,OAAA,CAAA,EAAA,OAAA,EAAA,CAAA,QAAA,CAAA,EAAA,QAAA,EAAA,CAAA,iBAAA,CAAA,EAAA,EAAA,EAAA,IAAA,EAAAC,EAAA,CAAA,kBAAA,EAAA,QAAA,EAAA,gBAAA,EAAA,MAAA,EAAA,CAAA,gCAAA,EAAA,uBAAA,EAAA,cAAA,EAAA,kBAAA,EAAA,aAAA,EAAA,aAAA,EAAA,UAAA,EAAA,UAAA,EAAA,cAAA,EAAA,qBAAA,EAAA,cAAA,EAAA,sBAAA,EAAA,wBAAA,EAAA,kBAAA,CAAA,EAAA,OAAA,EAAA,CAAA,YAAA,CAAA,EAAA,EAAA,EAAA,IAAA,EAAAC,IAAA,CAAA,YAAA,EAAA,QAAA,EAAA,gBAAA,EAAA,MAAA,EAAA,CAAA,OAAA,EAAA,YAAA,EAAA,YAAA,EAAA,oBAAA,EAAA,WAAA,CAAA,EAAA,QAAA,EAAA,CAAA,cAAA,CAAA,EAAA,EAAA,EAAA,IAAA,EAAAuB,EAAA,CAAA,SAAA,EAAA,QAAA,EAAA,YAAA,EAAA,MAAA,EAAA,CAAA,UAAA,EAAA,eAAA,EAAA,UAAA,CAAA,EAAA,QAAA,EAAA,CAAA,WAAA,CAAA,EAAA,EAAA,EAAA,IAAA,EAAAC,GAAA,CAAA,SAAA,EAAA,QAAA,EAAA,YAAA,EAAA,QAAA,EAAA,CAAA,WAAA,CAAA,EAAA,EAAA,EAAA,IAAA,EAAA0C,uBAAA,EAAA,QAAA,EAAA,qBAAA,EAAA,MAAA,EAAA,CAAA,oBAAA,CAAA,EAAA,OAAA,EAAA,CAAA,iBAAA,CAAA,EAAA,EAAA,EAAA,IAAA,EAAAxC,EAAA,CAAA,qBAAA,EAAA,QAAA,EAAA,mBAAA,EAAA,MAAA,EAAA,CAAA,qBAAA,EAAA,qBAAA,EAAA,UAAA,EAAA,YAAA,EAAA,iBAAA,CAAA,EAAA,EAAA,EAAA,IAAA,EAAAA,EAAA,CAAA,iBAAA,EAAA,QAAA,EAAA,qBAAA,EAAA,MAAA,EAAA,CAAA,OAAA,EAAA,YAAA,EAAA,OAAA,CAAA,EAAA,CAAA,EAAA,UAAA,EAAA,CAAA,EAAA,IAAA,EAAAvC,IAAA,CAAA,aAAA,EAAA,QAAA,EAAA,8CAAA,EAAA,EAAA,EAAA,IAAA,EAAAA,IAAA,CAAA,oBAAA,EAAA,QAAA,EAAA,0FAAA,EAAA,EAAA,EAAA,IAAA,EAAAA,IAAA,CAAA,kBAAA,EAAA,QAAA,EAAA,aAAA,EAAA,MAAA,EAAA,CAAA,WAAA,CAAA,EAAA,OAAA,EAAA,CAAA,UAAA,CAAA,EAAA,QAAA,EAAA,CAAA,QAAA,CAAA,EAAA,EAAA,EAAA,IAAA,EAAAA,IAAA,CAAA,aAAA,EAAA,QAAA,EAAA,iBAAA,EAAA,MAAA,EAAA,CAAA,eAAA,CAAA,EAAA,EAAA,EAAA,IAAA,EAAAW,IAAA,CAAA,oBAAA,EAAA,QAAA,EAAA,yBAAA,EAAA,MAAA,EAAA,CAAA,YAAA,EAAA,MAAA,EAAA,UAAA,EAAA,OAAA,EAAA,UAAA,EAAA,UAAA,CAAA,EAAA,OAAA,EAAA,CAAA,aAAA,EAAA,QAAA,CAAA,EAAA,QAAA,EAAA,CAAA,sBAAA,CAAA,EAAA,EAAA,EAAA,IAAA,EAAAX,IAAA,CAAA,eAAA,EAAA,QAAA,EAAA,2CAAA,EAAA,EAAA,EAAA,IAAA,EAAAA,IAAA,CAAA,eAAA,EAAA,QAAA,EAAA,mBAAA,EAAA,MAAA,EAAA,CAAA,UAAA,EAAA,iBAAA,EAAA,SAAA,CAAA,EAAA,OAAA,EAAA,CAAA,eAAA,CAAA,EAAA,EAAA,EAAA,IAAA,EAAAyD,GAAA,CAAA,IAAA,EAAA,QAAA,EAAA,QAAA,EAAA,MAAA,EAAA,CAAA,MAAA,EAAA,UAAA,EAAA,UAAA,CAAA,EAAA,EAAA,EAAA,IAAA,EAAA5C,IAAA,CAAA,QAAA,EAAA,QAAA,EAAA,WAAA,EAAA,MAAA,EAAA,CAAA,IAAA,CAAA,EAAA,EAAA,EAAA,IAAA,EAAAA,IAAA,CAAA,QAAA,EAAA,QAAA,EAAA,WAAA,EAAA,EAAA,EAAA,IAAA,EAAAb,IAAA,CAAA,iBAAA,EAAA,QAAA,EAAA,wIAAA,EAAA,MAAA,EAAA,CAAA,UAAA,CAAA,EAAA,EAAA,EAAA,IAAA,EAAAyD,GAAA,CAAA,OAAA,EAAA,QAAA,EAAA,kBAAA,EAAA,MAAA,EAAA,CAAA,SAAA,EAAA,cAAA,EAAA,eAAA,CAAA,EAAA,EAAA,EAAA,IAAA,EAAApB,GAAA,CAAA,SAAA,EAAA,QAAA,EAAA,2BAAA,EAAA,MAAA,EAAA,CAAA,iBAAA,EAAA,mBAAA,EAAA,kBAAA,EAAA,gBAAA,EAAA,oBAAA,EAAA,mBAAA,EAAA,oBAAA,CAAA,EAAA,QAAA,EAAA,CAAA,WAAA,CAAA,EAAA,CAAA,EAAA,KAAA,EAAA,EAAA,MAAA,EAAAoB,GAAA,CAAA,QAAA,EAAA,EAAA,CAAA,CAAA;4FDzIO,0BAA0B,EAAA,UAAA,EAAA,CAAA;kBANtC,SAAS;AAAC,YAAA,IAAA,EAAA,CAAA;AACP,oBAAA,QAAQ,EAAE,iBAAiB;AAC3B,oBAAA,WAAW,EAAE,8BAA8B;AAC3C,oBAAA,MAAM,EAAE,EACP;AACJ,iBAAA,CAAA;8TA8BgC,cAAc,EAAA,CAAA;sBAA1C,SAAS;uBAAC,gBAAgB,CAAA;;;AEtD/B,MAAM9B,QAAM,GAAW;AACnB,IAAA;AACI,QAAA,IAAI,EAAE,EAAE;AACR,QAAA,SAAS,EAAE,0BAA0B;AACxC,KAAA;CACJ,CAAC;MAMW,8BAA8B,CAAA;;4HAA9B,8BAA8B,EAAA,IAAA,EAAA,EAAA,EAAA,MAAA,EAAA,EAAA,CAAA,eAAA,CAAA,QAAA,EAAA,CAAA,CAAA;AAA9B,8BAAA,CAAA,IAAA,GAAA,EAAA,CAAA,mBAAA,CAAA,EAAA,UAAA,EAAA,QAAA,EAAA,OAAA,EAAA,SAAA,EAAA,QAAA,EAAA,EAAA,EAAA,IAAA,EAAA,8BAA8B,0CAF7B,YAAY,CAAA,EAAA,CAAA,CAAA;6HAEb,8BAA8B,EAAA,OAAA,EAAA,CAH9B,CAAC,YAAY,CAAC,QAAQ,CAACA,QAAM,CAAC,CAAC,EAC9B,YAAY,CAAA,EAAA,CAAA,CAAA;4FAEb,8BAA8B,EAAA,UAAA,EAAA,CAAA;kBAJ1C,QAAQ;AAAC,YAAA,IAAA,EAAA,CAAA;oBACN,OAAO,EAAE,CAAC,YAAY,CAAC,QAAQ,CAACA,QAAM,CAAC,CAAC;oBACxC,OAAO,EAAE,CAAC,YAAY,CAAC;AAC1B,iBAAA,CAAA;;;ACUD;MA6Ba,uBAAuB,CAAA;;qHAAvB,uBAAuB,EAAA,IAAA,EAAA,EAAA,EAAA,MAAA,EAAA,EAAA,CAAA,eAAA,CAAA,QAAA,EAAA,CAAA,CAAA;sHAAvB,uBAAuB,EAAA,YAAA,EAAA,CAzB5B,0BAA0B,CAAA,EAAA,OAAA,EAAA,CAG1B,YAAY;QACZ,8BAA8B;QAE9B,WAAW;QACX,mBAAmB;QAEnB,kBAAkB;QAClB,eAAe;QACf,cAAc;QACd,eAAe;QACf,qBAAqB;QACrB,oBAAoB;QAEpB,wBAAwB;QAExB,oBAAoB;QAEpB,eAAe;QACf,kBAAkB;QAClB,cAAc,CAAA,EAAA,CAAA,CAAA;AAGT,uBAAA,CAAA,IAAA,GAAA,EAAA,CAAA,mBAAA,CAAA,EAAA,UAAA,EAAA,QAAA,EAAA,OAAA,EAAA,SAAA,EAAA,QAAA,EAAA,EAAA,EAAA,IAAA,EAAA,uBAAuB,EAvBvB,OAAA,EAAA,CAAA;YACL,YAAY;YACZ,8BAA8B;YAE9B,WAAW;YACX,mBAAmB;YAEnB,kBAAkB;YAClB,eAAe;YACf,cAAc;YACd,eAAe;YACf,qBAAqB;YACrB,oBAAoB;YAEpB,wBAAwB;YAExB,oBAAoB;YAEpB,eAAe;YACf,kBAAkB;YAClB,cAAc;AACjB,SAAA,CAAA,EAAA,CAAA,CAAA;4FAEQ,uBAAuB,EAAA,UAAA,EAAA,CAAA;kBA3BnC,QAAQ;AAAC,YAAA,IAAA,EAAA,CAAA;AACN,oBAAA,YAAY,EAAE;wBACV,0BAA0B;AAC7B,qBAAA;AACD,oBAAA,OAAO,EAAE;wBACL,YAAY;wBACZ,8BAA8B;wBAE9B,WAAW;wBACX,mBAAmB;wBAEnB,kBAAkB;wBAClB,eAAe;wBACf,cAAc;wBACd,eAAe;wBACf,qBAAqB;wBACrB,oBAAoB;wBAEpB,wBAAwB;wBAExB,oBAAoB;wBAEpB,eAAe;wBACf,kBAAkB;wBAClB,cAAc;AACjB,qBAAA;AACJ,iBAAA,CAAA;;;MCzCY,gBAAgB,CAAA;AAU5B;;MCXY,0BAA0B,CAAA;IAEnC,WACY,CAAA,IAAgB,EACO,WAAgB,EAAA;QADvC,IAAI,CAAA,IAAA,GAAJ,IAAI,CAAY;QACO,IAAW,CAAA,WAAA,GAAX,WAAW,CAAK;KAC9C;IAEL,mBAAmB,CAAC,KAAK,EAAE,WAAW,EAAA;AAClC,QAAA,IAAI,OAAO,GAAG,IAAI,WAAW,EAAE,CAAC,GAAG,CAAC,YAAY,EAAE,KAAK,CAAC,CAAC;QAEzD,OAAO,IAAI,CAAC,IAAI,CAAC,IAAI,CAAsB,CAAG,EAAA,IAAI,CAAC,WAAW,CAAC,kBAAkB,iBAAiB,KAAK,CAAA,kBAAA,CAAoB,EAAE,WAAW,EAAE,EAAE,OAAO,EAAE,OAAO,EAAE,CAAC,CAAC;KACnK;;AAXQ,0BAAA,CAAA,IAAA,GAAA,EAAA,CAAA,kBAAA,CAAA,EAAA,UAAA,EAAA,QAAA,EAAA,OAAA,EAAA,SAAA,EAAA,QAAA,EAAA,EAAA,EAAA,IAAA,EAAA,0BAA0B,4CAIvB,aAAa,EAAA,CAAA,EAAA,MAAA,EAAA,EAAA,CAAA,eAAA,CAAA,UAAA,EAAA,CAAA,CAAA;AAJhB,0BAAA,CAAA,KAAA,GAAA,EAAA,CAAA,qBAAA,CAAA,EAAA,UAAA,EAAA,QAAA,EAAA,OAAA,EAAA,SAAA,EAAA,QAAA,EAAA,EAAA,EAAA,IAAA,EAAA,0BAA0B,cAHvB,MAAM,EAAA,CAAA,CAAA;4FAGT,0BAA0B,EAAA,UAAA,EAAA,CAAA;kBAJtC,UAAU;AAAC,YAAA,IAAA,EAAA,CAAA;AACR,oBAAA,UAAU,EAAE,MAAM;AACrB,iBAAA,CAAA;;0BAMQ,MAAM;2BAAC,aAAa,CAAA;;;ACS7B;MAQa,+BAA+B,CAAA;AA4CxC,IAAA,WAAA,CACY,cAA8B,EAC9B,YAA2B,EAC3B,gBAAkC,EAClC,0BAAsD,EACvD,WAAwB,EACvB,aAA4B,EAC5B,YAA0B,EAAA;QAN1B,IAAc,CAAA,cAAA,GAAd,cAAc,CAAgB;QAC9B,IAAY,CAAA,YAAA,GAAZ,YAAY,CAAe;QAC3B,IAAgB,CAAA,gBAAA,GAAhB,gBAAgB,CAAkB;QAClC,IAA0B,CAAA,0BAAA,GAA1B,0BAA0B,CAA4B;QACvD,IAAW,CAAA,WAAA,GAAX,WAAW,CAAa;QACvB,IAAa,CAAA,aAAA,GAAb,aAAa,CAAe;QAC5B,IAAY,CAAA,YAAA,GAAZ,YAAY,CAAc;QAjDtC,IAAgB,CAAA,gBAAA,GAAG,iBAAiB,CAAC;QACrC,IAAc,CAAA,cAAA,GAAG,eAAe,CAAC;QACjC,IAAiB,CAAA,iBAAA,GAAG,kBAAkB,CAAC;QAEvC,IAA2B,CAAA,2BAAA,GAAG,2BAA2B,CAAC;QAC1D,IAAe,CAAA,eAAA,GAAG,eAAe,CAAC;QAClC,IAAgB,CAAA,gBAAA,GAAG,gBAAgB,CAAC;QACpC,IAAc,CAAA,cAAA,GAAG,cAAc,CAAC;QAChC,IAAiB,CAAA,iBAAA,GAAG,iBAAiB,CAAC;QACtC,IAAY,CAAA,YAAA,GAAG,YAAY,CAAC;QAC5B,IAAa,CAAA,aAAA,GAAG,aAAa,CAAC;QAC9B,IAAa,CAAA,aAAA,GAAG,aAAa,CAAC;QAQ9B,IAAa,CAAA,aAAA,GAAU,EAAE,CAAC;QAI1B,IAAS,CAAA,SAAA,GAAY,KAAK,CAAC;QAC3B,IAAU,CAAA,UAAA,GAAY,KAAK,CAAC;AAC5B,QAAA,IAAA,CAAA,MAAM,GAAG,cAAc,CAAC,SAAS,CAAC;QAGlC,IAAS,CAAA,SAAA,GAAU,EAAE,CAAC;AAItB,QAAA,IAAA,CAAA,iBAAiB,GAAG,CAAC,IAAI,gBAAgB,EAAE,CAAC,CAAC;AAE7C,QAAA,IAAA,CAAA,cAAc,GAAW,IAAI,KAAK,EAAE,CAAC;AAErC,QAAA,IAAA,CAAA,aAAa,GAAgB,IAAI,WAAW,CAAC,OAAO,EAAE,CAAC,UAAU,CAAC,QAAQ,CAAC,CAAC,CAAC;KAcxE;IAEL,QAAQ,GAAA;QACJ,IAAI,CAAC,KAAK,GAAG,IAAI,CAAC,cAAc,CAAC,UAAU,CAAC,cAAc,CAAC,CAAC;QAC5D,IAAI,CAAC,QAAQ,GAAG,IAAI,CAAC,cAAc,CAAC,UAAU,CAAC,UAAU,CAAC,CAAC;QAE3D,IAAI,CAAC,SAAS,GAAG,IAAI,CAAC,iBAAiB,CAAC,MAAM,CAAC,SAAS,IAAI,SAAS,CAAC,KAAK,IAAI,QAAQ,IAAI,SAAS,CAAC,KAAK,IAAI,QAAQ,CAAC,CAAC;QACxH,IAAI,CAAC,gBAAgB,GAAG,IAAI,CAAC,aAAa,CAAC,KAAK,CAAC;AACjD,QAAA,IAAI,CAAC,QAAQ,GAAG,YAAY,CAAC,SAAS,CAAC;KAC1C;AAED,IAAA,iBAAiB,CAAC,IAAS,EAAA;AACvB,QAAA,IAAI,CAAC,SAAS,GAAG,IAAI,CAAC,SAAS,CAAC;AAChC,QAAA,IAAI,CAAC,OAAO,GAAG,IAAI,CAAC,OAAO,CAAC;AAC5B,QAAA,IAAI,CAAC,iBAAiB,GAAG,IAAI,CAAC,SAAS,CAAC;QAExC,IAAI,CAAC,YAAY,CAAC,oBAAoB,CAAC,IAAI,CAAC,cAAc,CAAC,CAAC;KAC/D;AAED,IAAA,iBAAiB,CAAC,UAAU,EAAA;AACxB,QAAA,IAAI,CAAC,aAAa,CAAC,UAAU,CAAC,UAAU,CAAC,CAAC;QAE1C,IAAI,CAAC,YAAY,CAAC,oBAAoB,CAAC,IAAI,CAAC,cAAc,CAAC,CAAC;KAC/D;IAED,eAAe,GAAA;;QACX,IAAI,CAAC,QAAQ,GAAG,IAAI,CAAC,WAAW,CAAC,QAAQ,CAAC,KAAK,CAAC;QAEhD,CAAA,EAAA,GAAA,IAAI,CAAC,UAAU,MAAA,IAAA,IAAA,EAAA,KAAA,KAAA,CAAA,GAAA,KAAA,CAAA,GAAA,EAAA,CAAE,WAAW,CAAC,KAAK,EAAE,CAAC;QACrC,CAAA,EAAA,GAAA,IAAI,CAAC,UAAU,MAAA,IAAA,IAAA,EAAA,KAAA,KAAA,CAAA,GAAA,KAAA,CAAA,GAAA,EAAA,CAAE,WAAW,CAAC,sBAAsB,EAAE,CAAC;QAEtD,IAAI,CAAC,YAAY,CAAC,oBAAoB,CAAC,IAAI,CAAC,cAAc,CAAC,CAAC;KAC/D;IAED,eAAe,GAAA;;QACX,IAAI,CAAC,QAAQ,GAAG,IAAI,CAAC,WAAW,CAAC,QAAQ,CAAC,KAAK,CAAC;QAEhD,CAAA,EAAA,GAAA,IAAI,CAAC,UAAU,MAAA,IAAA,IAAA,EAAA,KAAA,KAAA,CAAA,GAAA,KAAA,CAAA,GAAA,EAAA,CAAE,WAAW,CAAC,KAAK,EAAE,CAAC;QACrC,CAAA,EAAA,GAAA,IAAI,CAAC,UAAU,MAAA,IAAA,IAAA,EAAA,KAAA,KAAA,CAAA,GAAA,KAAA,CAAA,GAAA,EAAA,CAAE,WAAW,CAAC,sBAAsB,EAAE,CAAC;QAEtD,IAAI,CAAC,YAAY,CAAC,oBAAoB,CAAC,IAAI,CAAC,cAAc,CAAC,CAAC;KAC/D;IAED,cAAc,GAAA;;QACV,IAAI,WAAW,GAAG,CAAA,EAAA,GAAA,IAAI,CAAC,UAAU,MAAE,IAAA,IAAA,EAAA,KAAA,KAAA,CAAA,GAAA,KAAA,CAAA,GAAA,EAAA,CAAA,WAAW,CAAC,KAAK,CAAC;AAErD,QAAA,IAAI,WAAW,CAAC,MAAM,GAAG,CAAC,EAAE;YACxB,IAAI,CAAC,aAAa,GAAG,IAAI,CAAC,gBAAgB,CAAC,iBAAiB,CAAC,WAAW,CAAC,CAAC;AAC7E,SAAA;QAED,IAAI,CAAC,YAAY,CAAC,oBAAoB,CAAC,IAAI,CAAC,cAAc,CAAC,CAAC;KAC/D;IAEK,UAAU,GAAA;;YAEZ,IAAI,CAAC,YAAY,CAAC,oBAAoB,CAAC,IAAI,CAAC,cAAc,CAAC,CAAC;AAE5D,YAAA,IAAI,IAAI,CAAC,iBAAiB,EAAE,EAAE;AAC1B,gBAAA,IAAI,CAAC,YAAY,CAAC,SAAS,CAAC,WAAW,CAAC,kBAAkB,EAAE,WAAW,CAAC,oBAAoB,EAAE,WAAW,CAAC,KAAK,CAAC,CAAC;gBACjH,OAAO;AACV,aAAA;AAED,YAAA,IAAI,IAAI,CAAC,SAAS,IAAI,IAAI,CAAC,OAAO,EAAE;gBAChC,IAAI,CAAC,YAAY,CAAC,kBAAkB,CAAC,IAAI,CAAC,cAAc,EAAE,eAAe,CAAC,kBAAkB,EAAE,eAAe,CAAC,oBAAoB,EAAE,oBAAoB,CAAC,IAAI,EAAE,oBAAoB,CAAC,SAAS,CAAC,CAAC;gBAC/L,OAAO;AACV,aAAA;YAED,IAAI;AACA,gBAAA,IAAI,CAAC,UAAU,GAAG,IAAI,CAAC;AACvB,gBAAA,MAAM,WAAW,GAAG,IAAI,CAAC,iBAAiB,EAAE,CAAC;gBAE7C,IAAI,CAAC,0BAA0B,CAAC,mBAAmB,CAAC,IAAI,CAAC,KAAK,EAAE,WAAW,CAAC;AACvE,qBAAA,SAAS,CAAC,CAAC,GAAwB,KAAI;oBACpC,IAAI,CAAA,GAAG,KAAA,IAAA,IAAH,GAAG,KAAA,KAAA,CAAA,GAAA,KAAA,CAAA,GAAH,GAAG,CAAE,MAAM,IAAG,CAAC,EAAE;AACjB,wBAAA,IAAI,CAAC,iBAAiB,GAAG,GAAG,CAAC;AAChC,qBAAA;AAAM,yBAAA;wBACH,IAAI,CAAC,YAAY,CAAC,kBAAkB,CAAC,IAAI,CAAC,cAAc,EAAE,eAAe,CAAC,oBAAoB,EAAE,eAAe,CAAC,sBAAsB,EAAE,oBAAoB,CAAC,OAAO,EAAE,oBAAoB,CAAC,YAAY,CAAC,CAAC;AAC5M,qBAAA;iBACJ,EACG,KAAK,IAAG;AACJ,oBAAA,OAAO,CAAC,GAAG,CAAC,mCAAmC,EAAE,KAAK,CAAC,CAAC;AACxD,oBAAA,MAAM,KAAK,CAAC;AAChB,iBAAC,CAAC,CAAC;AAEd,aAAA;AAAC,YAAA,OAAO,KAAK,EAAE;AACZ,gBAAA,OAAO,CAAC,KAAK,CAAC,uBAAuB,EAAE,KAAK,CAAC,CAAC;gBAC9C,IAAI,CAAC,YAAY,CAAC,kBAAkB,CAAC,IAAI,CAAC,cAAc,EAAE,eAAe,CAAC,mBAAmB,EAAE,eAAe,CAAC,qBAAqB,EAAE,oBAAoB,CAAC,MAAM,EAAE,oBAAoB,CAAC,WAAW,CAAC,CAAC;AACxM,aAAA;AAAS,oBAAA;AACN,gBAAA,IAAI,CAAC,UAAU,GAAG,KAAK,CAAC;AAC3B,aAAA;SACJ,CAAA,CAAA;AAAA,KAAA;AAEK,IAAA,cAAc,CAAC,MAAc,EAAA;;YAC/B,IAAI,CAAC,YAAY,CAAC,oBAAoB,CAAC,IAAI,CAAC,cAAc,CAAC,CAAC;AAE5D,YAAA,IAAI,IAAI,CAAC,iBAAiB,EAAE,EAAE;AAC1B,gBAAA,IAAI,CAAC,YAAY,CAAC,SAAS,CAAC,WAAW,CAAC,kBAAkB,EAAE,WAAW,CAAC,oBAAoB,EAAE,WAAW,CAAC,KAAK,CAAC,CAAC;gBACjH,OAAO;AACV,aAAA;AAED,YAAA,IAAI,IAAI,CAAC,SAAS,IAAI,IAAI,CAAC,OAAO,EAAE;gBAChC,IAAI,CAAC,YAAY,CAAC,kBAAkB,CAAC,IAAI,CAAC,cAAc,EAAE,eAAe,CAAC,kBAAkB,EAAE,eAAe,CAAC,oBAAoB,EAAE,oBAAoB,CAAC,IAAI,EAAE,oBAAoB,CAAC,SAAS,CAAC,CAAC;gBAC/L,OAAO;AACV,aAAA;YAED,IAAI;AACA,gBAAA,IAAI,CAAC,UAAU,GAAG,IAAI,CAAC;AACvB,gBAAA,MAAM,WAAW,GAAG,IAAI,qBAAqB,EAAE,CAAC;AAEhD,gBAAA,WAAW,CAAC,OAAO,GAAG,IAAI,CAAC,iBAAiB,EAAE,CAAC;AAC/C,gBAAA,WAAW,CAAC,UAAU,GAAG,0BAA0B,CAAC;AACpD,gBAAA,WAAW,CAAC,YAAY,GAAG,MAAM,CAAC;AAElC,gBAAA,MAAM,IAAI,CAAC,aAAa,CAAC,cAAc,CAAC,IAAI,CAAC,KAAK,EAAE,WAAW,CAAC,CAAC;AAEpE,aAAA;AAAC,YAAA,OAAO,KAAK,EAAE;AACZ,gBAAA,OAAO,CAAC,KAAK,CAAC,2BAA2B,EAAE,KAAK,CAAC,CAAC;AACrD,aAAA;AAAS,oBAAA;AACN,gBAAA,IAAI,CAAC,UAAU,GAAG,KAAK,CAAC;AAC3B,aAAA;SACJ,CAAA,CAAA;AAAA,KAAA;IAED,iBAAiB,GAAA;;AACb,QAAA,IAAI,SAAS,CAAC;AAEd,QAAA,IAAI,CAAA,CAAA,EAAA,GAAA,IAAI,CAAC,UAAU,CAAC,WAAW,CAAC,KAAK,MAAA,IAAA,IAAA,EAAA,KAAA,KAAA,CAAA,GAAA,KAAA,CAAA,GAAA,EAAA,CAAE,MAAM,IAAG,CAAC,EAAE;AAC/C,YAAA,SAAS,GAAG,IAAI,CAAC,gBAAgB,CAAC,iBAAiB,CAAC,IAAI,CAAC,UAAU,CAAC,WAAW,CAAC,KAAK,CAAC,CAAC;AAC1F,SAAA;QAED,IAAI,WAAW,GAAG,EAAE,CAAC;AAErB,QAAA,WAAW,CAAC,WAAW,CAAC,GAAG,IAAI,CAAC,SAAS,CAAC;AAC1C,QAAA,WAAW,CAAC,SAAS,CAAC,GAAG,IAAI,CAAC,OAAO,CAAC;QACtC,WAAW,CAAC,UAAU,CAAC,GAAG,IAAI,CAAC,aAAa,CAAC,KAAK,CAAC;QACnD,WAAW,CAAC,UAAU,CAAC,GAAG,IAAI,CAAC,WAAW,CAAC,QAAQ,CAAC,KAAK,CAAC;QAC1D,WAAW,CAAC,UAAU,CAAC,GAAG,IAAI,CAAC,WAAW,CAAC,QAAQ,CAAC,KAAK,CAAC;AAC1D,QAAA,WAAW,CAAC,YAAY,CAAC,GAAG,SAAS,CAAC;AAEtC,QAAA,OAAO,WAAW,CAAC;KACtB;IAED,iBAAiB,GAAA;AACb,QAAA,MAAM,QAAQ,GAAG;YACb,IAAI,CAAC,WAAW,CAAC,QAAQ;YACzB,IAAI,CAAC,WAAW,CAAC,QAAQ;YACzB,IAAI,CAAC,UAAU,CAAC,WAAW;SAC9B,CAAC;AAEF,QAAA,QAAQ,CAAC,OAAO,CAAC,OAAO,IAAI,OAAO,CAAC,aAAa,EAAE,CAAC,CAAC;AACrD,QAAA,OAAO,QAAQ,CAAC,IAAI,CAAC,OAAO,IAAI,OAAO,CAAC,OAAO,CAAC,CAAC;KACpD;;6HA1MQ,+BAA+B,EAAA,IAAA,EAAA,CAAA,EAAA,KAAA,EAAA5B,IAAA,CAAA,cAAA,EAAA,EAAA,EAAA,KAAA,EAAAC,IAAA,CAAA,aAAA,EAAA,EAAA,EAAA,KAAA,EAAA,EAAA,CAAA,gBAAA,EAAA,EAAA,EAAA,KAAA,EAAAgF,0BAAA,EAAA,EAAA,EAAA,KAAA,EAAA1E,EAAA,CAAA,WAAA,EAAA,EAAA,EAAA,KAAA,EAAAuD,aAAA,EAAA,EAAA,EAAA,KAAA,EAAAnB,YAAA,EAAA,CAAA,EAAA,MAAA,EAAA,EAAA,CAAA,eAAA,CAAA,SAAA,EAAA,CAAA,CAAA;AAA/B,+BAAA,CAAA,IAAA,GAAA,EAAA,CAAA,oBAAA,CAAA,EAAA,UAAA,EAAA,QAAA,EAAA,OAAA,EAAA,SAAA,EAAA,IAAA,EAAA,+BAA+B,iWChC5C,uqLA+GM,EAAA,UAAA,EAAA,CAAA,EAAA,IAAA,EAAApC,EAAA,CAAA,sBAAA,EAAA,QAAA,EAAA,qBAAA,EAAA,MAAA,EAAA,CAAA,gCAAA,EAAA,cAAA,EAAA,qBAAA,EAAA,aAAA,EAAA,aAAA,EAAA,UAAA,EAAA,wBAAA,EAAA,cAAA,EAAA,UAAA,EAAA,cAAA,EAAA,kBAAA,EAAA,sBAAA,CAAA,EAAA,OAAA,EAAA,CAAA,mBAAA,CAAA,EAAA,EAAA,EAAA,IAAA,EAAAE,IAAA,CAAA,YAAA,EAAA,QAAA,EAAA,gBAAA,EAAA,MAAA,EAAA,CAAA,OAAA,EAAA,YAAA,EAAA,YAAA,EAAA,oBAAA,EAAA,WAAA,CAAA,EAAA,QAAA,EAAA,CAAA,cAAA,CAAA,EAAA,EAAA,EAAA,IAAA,EAAAC,EAAA,CAAA,SAAA,EAAA,QAAA,EAAA,YAAA,EAAA,MAAA,EAAA,CAAA,UAAA,EAAA,eAAA,EAAA,UAAA,CAAA,EAAA,QAAA,EAAA,CAAA,WAAA,CAAA,EAAA,EAAA,EAAA,IAAA,EAAA,GAAA,CAAA,SAAA,EAAA,QAAA,EAAA,YAAA,EAAA,QAAA,EAAA,CAAA,WAAA,CAAA,EAAA,EAAA,EAAA,IAAA,EAAAwE,eAAA,EAAA,QAAA,EAAA,YAAA,EAAA,MAAA,EAAA,CAAA,iBAAA,CAAA,EAAA,OAAA,EAAA,CAAA,YAAA,CAAA,EAAA,EAAA,EAAA,IAAA,EAAAC,eAAA,EAAA,QAAA,EAAA,YAAA,EAAA,MAAA,EAAA,CAAA,iBAAA,EAAA,WAAA,CAAA,EAAA,OAAA,EAAA,CAAA,YAAA,CAAA,EAAA,EAAA,EAAA,IAAA,EAAAC,oBAAA,EAAA,QAAA,EAAA,kBAAA,EAAA,MAAA,EAAA,CAAA,WAAA,CAAA,EAAA,OAAA,EAAA,CAAA,YAAA,CAAA,EAAA,EAAA,EAAA,IAAA,EAAAC,uBAAA,EAAA,QAAA,EAAA,qBAAA,EAAA,MAAA,EAAA,CAAA,oBAAA,CAAA,EAAA,OAAA,EAAA,CAAA,iBAAA,CAAA,EAAA,EAAA,EAAA,IAAA,EAAA,EAAA,CAAA,qBAAA,EAAA,QAAA,EAAA,mBAAA,EAAA,MAAA,EAAA,CAAA,qBAAA,EAAA,qBAAA,EAAA,UAAA,EAAA,YAAA,EAAA,iBAAA,CAAA,EAAA,EAAA,EAAA,IAAA,EAAA,EAAA,CAAA,iBAAA,EAAA,QAAA,EAAA,qBAAA,EAAA,MAAA,EAAA,CAAA,OAAA,EAAA,YAAA,EAAA,OAAA,CAAA,EAAA,CAAA,EAAA,UAAA,EAAA,CAAA,EAAA,IAAA,EAAA5E,IAAA,CAAA,QAAA,EAAA,QAAA,EAAA,WAAA,EAAA,EAAA,EAAA,IAAA,EAAA6B,IAAA,CAAA,iBAAA,EAAA,QAAA,EAAA,wIAAA,EAAA,MAAA,EAAA,CAAA,UAAA,CAAA,EAAA,EAAA,EAAA,IAAA,EAAAA,IAAA,CAAA,eAAA,EAAA,QAAA,EAAA,2CAAA,EAAA,EAAA,EAAA,IAAA,EAAAA,IAAA,CAAA,oBAAA,EAAA,QAAA,EAAA,eAAA,EAAA,MAAA,EAAA,CAAA,UAAA,EAAA,aAAA,EAAA,SAAA,CAAA,EAAA,OAAA,EAAA,CAAA,eAAA,CAAA,EAAA,QAAA,EAAA,CAAA,QAAA,CAAA,EAAA,EAAA,EAAA,IAAA,EAAAC,GAAA,CAAA,IAAA,EAAA,QAAA,EAAA,QAAA,EAAA,MAAA,EAAA,CAAA,MAAA,EAAA,UAAA,EAAA,UAAA,CAAA,EAAA,EAAA,EAAA,IAAA,EAAA9B,IAAA,CAAA,QAAA,EAAA,QAAA,EAAA,WAAA,EAAA,MAAA,EAAA,CAAA,IAAA,CAAA,EAAA,EAAA,EAAA,IAAA,EAAA,GAAA,CAAA,SAAA,EAAA,QAAA,EAAA,2BAAA,EAAA,MAAA,EAAA,CAAA,iBAAA,EAAA,mBAAA,EAAA,kBAAA,EAAA,gBAAA,EAAA,oBAAA,EAAA,mBAAA,EAAA,oBAAA,CAAA,EAAA,QAAA,EAAA,CAAA,WAAA,CAAA,EAAA,EAAA,EAAA,IAAA,EAAA8B,GAAA,CAAA,OAAA,EAAA,QAAA,EAAA,kBAAA,EAAA,MAAA,EAAA,CAAA,SAAA,EAAA,cAAA,EAAA,eAAA,CAAA,EAAA,CAAA,EAAA,CAAA,CAAA;4FD/EO,+BAA+B,EAAA,UAAA,EAAA,CAAA;kBAN3C,SAAS;AAAC,YAAA,IAAA,EAAA,CAAA;AACP,oBAAA,QAAQ,EAAE,uBAAuB;AACjC,oBAAA,WAAW,EAAE,oCAAoC;AACjD,oBAAA,MAAM,EAAE,EACP;AACJ,iBAAA,CAAA;qRAyC6B,WAAW,EAAA,CAAA;sBAApC,SAAS;uBAAC,aAAa,CAAA;gBACE,WAAW,EAAA,CAAA;sBAApC,SAAS;uBAAC,aAAa,CAAA;gBACC,UAAU,EAAA,CAAA;sBAAlC,SAAS;uBAAC,YAAY,CAAA;;;AErE3B,MAAMX,QAAM,GAAW;AACnB,IAAA;AACI,QAAA,IAAI,EAAE,EAAE;AACR,QAAA,SAAS,EAAE,+BAA+B;AAC7C,KAAA;CACJ,CAAC;MAOW,mCAAmC,CAAA;;iIAAnC,mCAAmC,EAAA,IAAA,EAAA,EAAA,EAAA,MAAA,EAAA,EAAA,CAAA,eAAA,CAAA,QAAA,EAAA,CAAA,CAAA;AAAnC,mCAAA,CAAA,IAAA,GAAA,EAAA,CAAA,mBAAA,CAAA,EAAA,UAAA,EAAA,QAAA,EAAA,OAAA,EAAA,SAAA,EAAA,QAAA,EAAA,EAAA,EAAA,IAAA,EAAA,mCAAmC,0CAHlC,YAAY,CAAA,EAAA,CAAA,CAAA;kIAGb,mCAAmC,EAAA,OAAA,EAAA,CAJnC,CAAC,YAAY,CAAC,QAAQ,CAACA,QAAM,CAAC,CAAC,EAC9B,YAAY,CAAA,EAAA,CAAA,CAAA;4FAGb,mCAAmC,EAAA,UAAA,EAAA,CAAA;kBAL/C,QAAQ;AAAC,YAAA,IAAA,EAAA,CAAA;oBACN,OAAO,EAAE,CAAC,YAAY,CAAC,QAAQ,CAACA,QAAM,CAAC,CAAC;oBACxC,OAAO,EAAE,CAAC,YAAY,CAAC;AAC1B,iBAAA,CAAA;;;ACMD;MAyBa,4BAA4B,CAAA;;0HAA5B,4BAA4B,EAAA,IAAA,EAAA,EAAA,EAAA,MAAA,EAAA,EAAA,CAAA,eAAA,CAAA,QAAA,EAAA,CAAA,CAAA;2HAA5B,4BAA4B,EAAA,YAAA,EAAA,CArBjC,+BAA+B,CAAA,EAAA,OAAA,EAAA,CAG/B,YAAY;QACZ,mCAAmC;QACnC,mBAAmB;QACnB,WAAW;QACX,mBAAmB;QACnB,YAAY;QACZ,YAAY;QACZ,iBAAiB;QACjB,oBAAoB;QACpB,cAAc;QACd,kBAAkB;QAClB,cAAc;QACd,cAAc;QACd,kBAAkB;QAClB,eAAe;QACf,eAAe,CAAA,EAAA,CAAA,CAAA;AAGV,4BAAA,CAAA,IAAA,GAAA,EAAA,CAAA,mBAAA,CAAA,EAAA,UAAA,EAAA,QAAA,EAAA,OAAA,EAAA,SAAA,EAAA,QAAA,EAAA,EAAA,EAAA,IAAA,EAAA,4BAA4B,EAnB5B,OAAA,EAAA,CAAA;YACL,YAAY;YACZ,mCAAmC;YACnC,mBAAmB;YACnB,WAAW;YACX,mBAAmB;YACnB,YAAY;YACZ,YAAY;YACZ,iBAAiB;YACjB,oBAAoB;YACpB,cAAc;YACd,kBAAkB;YAClB,cAAc;YACd,cAAc;YACd,kBAAkB;YAClB,eAAe;YACf,eAAe;AAClB,SAAA,CAAA,EAAA,CAAA,CAAA;4FAEQ,4BAA4B,EAAA,UAAA,EAAA,CAAA;kBAvBxC,QAAQ;AAAC,YAAA,IAAA,EAAA,CAAA;AACN,oBAAA,YAAY,EAAE;wBACV,+BAA+B;AAClC,qBAAA;AACD,oBAAA,OAAO,EAAE;wBACL,YAAY;wBACZ,mCAAmC;wBACnC,mBAAmB;wBACnB,WAAW;wBACX,mBAAmB;wBACnB,YAAY;wBACZ,YAAY;wBACZ,iBAAiB;wBACjB,oBAAoB;wBACpB,cAAc;wBACd,kBAAkB;wBAClB,cAAc;wBACd,cAAc;wBACd,kBAAkB;wBAClB,eAAe;wBACf,eAAe;AAClB,qBAAA;AACJ,iBAAA,CAAA;;;ACrBD;MAQa,oBAAoB,CAAA;AAuC7B,IAAA,WAAA,CACY,cAA8B,EAC9B,YAA2B,EAC3B,gBAAkC,EAClC,mBAAwC,EACxC,oBAA0C,EAC1C,aAA4B,EAC5B,YAA0B,EAAA;QAN1B,IAAc,CAAA,cAAA,GAAd,cAAc,CAAgB;QAC9B,IAAY,CAAA,YAAA,GAAZ,YAAY,CAAe;QAC3B,IAAgB,CAAA,gBAAA,GAAhB,gBAAgB,CAAkB;QAClC,IAAmB,CAAA,mBAAA,GAAnB,mBAAmB,CAAqB;QACxC,IAAoB,CAAA,oBAAA,GAApB,oBAAoB,CAAsB;QAC1C,IAAa,CAAA,aAAA,GAAb,aAAa,CAAe;QAC5B,IAAY,CAAA,YAAA,GAAZ,YAAY,CAAc;QA5CtC,IAAgB,CAAA,gBAAA,GAAG,iBAAiB,CAAC;QACrC,IAAc,CAAA,cAAA,GAAG,eAAe,CAAC;QACjC,IAAmB,CAAA,mBAAA,GAAG,oCAAoC,CAAC;QAE3D,IAA2B,CAAA,2BAAA,GAAG,2BAA2B,CAAC;QAC1D,IAAe,CAAA,eAAA,GAAG,eAAe,CAAC;QAClC,IAAc,CAAA,cAAA,GAAG,cAAc,CAAC;QAChC,IAAiB,CAAA,iBAAA,GAAG,iBAAiB,CAAC;QACtC,IAAY,CAAA,YAAA,GAAG,YAAY,CAAC;QAC5B,IAAa,CAAA,aAAA,GAAG,aAAa,CAAC;QAU9B,IAAa,CAAA,aAAA,GAAU,EAAE,CAAC;QAI1B,IAAS,CAAA,SAAA,GAAY,KAAK,CAAC;QAC3B,IAAU,CAAA,UAAA,GAAY,KAAK,CAAC;AAE5B,QAAA,IAAA,CAAA,aAAa,GAAG,CAAC,IAAI,mBAAmB,EAAE,CAAC,CAAC;AAC5C,QAAA,IAAA,CAAA,cAAc,GAAW,IAAI,KAAK,EAAE,CAAC;AAErC,QAAA,IAAA,CAAA,OAAO,GAAgB,IAAI,WAAW,EAAE,CAAC;QAEzC,IAAe,CAAA,eAAA,GAA2B,IAAI,sBAAsB,CAAC,CAAC,MAAM,CAAC,CAAC,CAAC;KAc1E;IAEL,QAAQ,GAAA;QACJ,IAAI,CAAC,KAAK,GAAG,IAAI,CAAC,cAAc,CAAC,UAAU,CAAC,cAAc,CAAC,CAAC;QAC5D,IAAI,CAAC,QAAQ,GAAG,IAAI,CAAC,cAAc,CAAC,UAAU,CAAC,UAAU,CAAC,CAAC;QAC3D,IAAI,CAAC,gBAAgB,GAAG,IAAI,CAAC,cAAc,CAAC,UAAU,CAAC,kBAAkB,CAAC,CAAC;AAE3E,QAAA,IAAI,IAAI,CAAC,gBAAgB,IAAI,gBAAgB,CAAC,aAAa,EAAE;AACzD,YAAA,IAAI,CAAC,WAAW,GAAG,eAAe,CAAC;AACtC,SAAA;AAAM,aAAA,IAAI,IAAI,CAAC,gBAAgB,IAAI,gBAAgB,CAAC,YAAY,EAAE;AAC/D,YAAA,IAAI,CAAC,WAAW,GAAG,iBAAiB,CAAC;AACxC,SAAA;QAED,IAAI,CAAC,iCAAiC,EAAE,CAAC;KAC5C;IAEK,iCAAiC,GAAA;;;AACnC,YAAA,IAAI,CAAC,aAAa,IAA2B,MAAM,IAAI,CAAC,mBAAmB,CAAC,iCAAiC,CAAC,IAAI,CAAC,KAAK,EAAE,IAAI,CAAC,WAAW,CAAC,CAAA,CAAC;YAE5I,IAAI,CAAC,eAAe,CAAC,SAAS,GAAG,IAAI,CAAC,aAAa,CAAC;AACpD,YAAA,IAAI,CAAC,eAAe,CAAC,kBAAkB,EAAE,CAAC;AAE1C,YAAA,IAAI,IAAI,CAAC,aAAa,CAAC,MAAM,GAAG,CAAC,KAAI,CAAA,EAAA,GAAA,MAAA,IAAI,CAAC,aAAa,MAAG,IAAA,IAAA,EAAA,KAAA,KAAA,CAAA,GAAA,KAAA,CAAA,GAAA,EAAA,CAAA,CAAC,CAAC,MAAE,IAAA,IAAA,EAAA,KAAA,KAAA,CAAA,GAAA,KAAA,CAAA,GAAA,EAAA,CAAA,EAAE,CAAA,EAAE;gBAC9D,MAAM,QAAQ,GAAG,CAAA,EAAA,GAAA,CAAA,EAAA,GAAA,MAAA,CAAA,EAAA,GAAA,IAAI,CAAC,aAAa,MAAA,IAAA,IAAA,EAAA,KAAA,KAAA,CAAA,GAAA,KAAA,CAAA,GAAA,EAAA,CAAG,CAAC,CAAC,MAAA,IAAA,IAAA,EAAA,KAAA,KAAA,CAAA,GAAA,KAAA,CAAA,GAAA,EAAA,CAAG,SAAS,CAAC,MAAA,IAAA,IAAA,EAAA,KAAA,KAAA,CAAA,GAAA,KAAA,CAAA,GAAA,EAAA,CAAG,CAAC,CAAC,MAAA,IAAA,IAAA,EAAA,KAAA,KAAA,CAAA,GAAA,KAAA,CAAA,GAAA,EAAA,CAAG,IAAI,CAAC,CAAC;AACnE,gBAAA,IAAI,CAAC,OAAO,CAAC,UAAU,CAAC,QAAQ,CAAC,CAAC;gBAClC,IAAI,CAAC,QAAQ,GAAG,IAAI,CAAC,qBAAqB,CAAC,QAAQ,CAAC,CAAC;AACxD,aAAA;;AACJ,KAAA;AAED,IAAA,WAAW,CAAC,aAAa,EAAA;;QACrB,CAAA,EAAA,GAAA,IAAI,CAAC,UAAU,MAAA,IAAA,IAAA,EAAA,KAAA,KAAA,CAAA,GAAA,KAAA,CAAA,GAAA,EAAA,CAAE,WAAW,CAAC,KAAK,EAAE,CAAC;QACrC,CAAA,EAAA,GAAA,IAAI,CAAC,UAAU,MAAA,IAAA,IAAA,EAAA,KAAA,KAAA,CAAA,GAAA,KAAA,CAAA,GAAA,EAAA,CAAE,WAAW,CAAC,sBAAsB,EAAE,CAAC;AAEtD,QAAA,IAAI,CAAC,OAAO,CAAC,UAAU,CAAC,aAAa,CAAC,CAAC;QACvC,IAAI,CAAC,QAAQ,GAAG,IAAI,CAAC,qBAAqB,CAAC,aAAa,CAAC,CAAC;KAC7D;AAED,IAAA,qBAAqB,CAAC,QAAQ,EAAA;AAC1B,QAAA,KAAK,MAAM,MAAM,IAAI,IAAI,CAAC,aAAa,EAAE;AACrC,YAAA,KAAK,MAAM,MAAM,IAAI,MAAM,CAAC,OAAO,EAAE;AACjC,gBAAA,IAAI,MAAM,CAAC,EAAE,IAAI,QAAQ,EAAE;oBACvB,OAAO,MAAM,CAAC,EAAE,CAAC;AACpB,iBAAA;AACJ,aAAA;AACJ,SAAA;AACD,QAAA,OAAO,IAAI,CAAC;KACf;IAED,aAAa,GAAA;QACT,IAAI,CAAC,SAAS,GAAG,IAAI,CAAC,eAAe,CAAC,WAAW,CAAC,KAAK,CAAC;QACxD,IAAI,CAAC,OAAO,GAAG,IAAI,CAAC,eAAe,CAAC,SAAS,CAAC,KAAK,CAAC;QAEpD,IAAI,CAAC,YAAY,CAAC,oBAAoB,CAAC,IAAI,CAAC,cAAc,CAAC,CAAC;KAE/D;IAED,oBAAoB,GAAA;QAChB,IAAI,CAAC,WAAW,GAAG,IAAI,CAAC,gBAAgB,CAAC,aAAa,CAAC,KAAK,CAAC;QAE7D,IAAI,CAAC,YAAY,CAAC,oBAAoB,CAAC,IAAI,CAAC,cAAc,CAAC,CAAC;KAE/D;IAED,cAAc,GAAA;;QACV,IAAI,WAAW,GAAG,CAAA,EAAA,GAAA,IAAI,CAAC,UAAU,MAAE,IAAA,IAAA,EAAA,KAAA,KAAA,CAAA,GAAA,KAAA,CAAA,GAAA,EAAA,CAAA,WAAW,CAAC,KAAK,CAAC;AAErD,QAAA,IAAI,WAAW,CAAC,MAAM,GAAG,CAAC,EAAE;YACxB,IAAI,CAAC,aAAa,GAAG,IAAI,CAAC,gBAAgB,CAAC,iBAAiB,CAAC,WAAW,CAAC,CAAC;AAC7E,SAAA;QAED,IAAI,CAAC,YAAY,CAAC,oBAAoB,CAAC,IAAI,CAAC,cAAc,CAAC,CAAC;KAE/D;IAEK,UAAU,GAAA;;;YAEZ,IAAI,CAAC,YAAY,CAAC,oBAAoB,CAAC,IAAI,CAAC,cAAc,CAAC,CAAC;AAE5D,YAAA,IAAI,IAAI,CAAC,iBAAiB,EAAE,EAAE;AAC1B,gBAAA,IAAI,CAAC,YAAY,CAAC,SAAS,CAAC,WAAW,CAAC,kBAAkB,EAAE,WAAW,CAAC,oBAAoB,EAAE,WAAW,CAAC,KAAK,CAAC,CAAC;gBACjH,OAAO;AACV,aAAA;AAED,YAAA,IAAI,IAAI,CAAC,SAAS,IAAI,IAAI,CAAC,OAAO,EAAE;gBAChC,IAAI,CAAC,YAAY,CAAC,kBAAkB,CAAC,IAAI,CAAC,cAAc,EAAE,eAAe,CAAC,kBAAkB,EAAE,eAAe,CAAC,oBAAoB,EAAE,oBAAoB,CAAC,IAAI,EAAE,oBAAoB,CAAC,SAAS,CAAC,CAAC;gBAC/L,OAAO;AACV,aAAA;AAED,YAAA,IAAI,CAAC,UAAU,GAAG,IAAI,CAAC;YAEvB,IAAI;AACA,gBAAA,MAAM,WAAW,GAAG,IAAI,CAAC,iBAAiB,EAAE,CAAC;AAE7C,gBAAA,IAAI,CAAC,UAAU,GAAG,MAAM,IAAI,CAAC,oBAAoB,CAAC,gBAAgB,CAAC,IAAI,CAAC,KAAK,EAAE,WAAW,CAAC,CAAC;AAE5F,gBAAA,IAAI,CAAA,CAAA,EAAA,GAAA,IAAI,CAAC,UAAU,MAAE,IAAA,IAAA,EAAA,KAAA,KAAA,CAAA,GAAA,KAAA,CAAA,GAAA,EAAA,CAAA,MAAM,IAAG,CAAC,IAAI,EAAC,CAAA,EAAA,GAAA,IAAI,CAAC,UAAU,MAAE,IAAA,IAAA,EAAA,KAAA,KAAA,CAAA,GAAA,KAAA,CAAA,GAAA,EAAA,CAAA,KAAK,CAAC,IAAI,IAAI,IAAI,CAAC,IAAI,CAAC,MAAM,IAAI,CAAC,CAAC,CAAA,EAAG;AACxF,oBAAA,IAAI,CAAC,SAAS,GAAG,IAAI,CAAC,aAAa,CAAC,gBAAgB,CAAC,IAAI,CAAC,UAAU,CAAC,CAAC;oBACtE,IAAI,CAAC,WAAW,GAAG,IAAI,CAAC,aAAa,CAAC,aAAa,CAAC,IAAI,CAAC,SAAS,EAAE,IAAI,CAAC,UAAU,EAAE,IAAI,CAAC,cAAc,CAAC,SAAS,CAAC,CAAC;AACvH,iBAAA;AAAM,qBAAA;oBACH,IAAI,CAAC,YAAY,CAAC,kBAAkB,CAAC,IAAI,CAAC,cAAc,EAAE,eAAe,CAAC,oBAAoB,EAAE,eAAe,CAAC,sBAAsB,EAAE,oBAAoB,CAAC,OAAO,EAAE,oBAAoB,CAAC,YAAY,CAAC,CAAC;AAC5M,iBAAA;AAEJ,aAAA;AAAC,YAAA,OAAO,KAAK,EAAE;AACZ,gBAAA,OAAO,CAAC,KAAK,CAAC,uBAAuB,EAAE,KAAK,CAAC,CAAC;gBAC9C,IAAI,CAAC,YAAY,CAAC,kBAAkB,CAAC,IAAI,CAAC,cAAc,EAAE,eAAe,CAAC,mBAAmB,EAAE,eAAe,CAAC,qBAAqB,EAAE,oBAAoB,CAAC,MAAM,EAAE,oBAAoB,CAAC,WAAW,CAAC,CAAC;AACxM,aAAA;AAAS,oBAAA;AACN,gBAAA,IAAI,CAAC,UAAU,GAAG,KAAK,CAAC;AAC3B,aAAA;;AACJ,KAAA;AAEK,IAAA,cAAc,CAAC,MAAc,EAAA;;YAC/B,IAAI,CAAC,YAAY,CAAC,oBAAoB,CAAC,IAAI,CAAC,cAAc,CAAC,CAAC;AAE5D,YAAA,IAAI,IAAI,CAAC,iBAAiB,EAAE,EAAE;AAC1B,gBAAA,IAAI,CAAC,YAAY,CAAC,SAAS,CAAC,WAAW,CAAC,kBAAkB,EAAE,WAAW,CAAC,oBAAoB,EAAE,WAAW,CAAC,KAAK,CAAC,CAAC;gBACjH,OAAO;AACV,aAAA;AAED,YAAA,IAAI,IAAI,CAAC,SAAS,IAAI,IAAI,CAAC,OAAO,EAAE;gBAChC,IAAI,CAAC,YAAY,CAAC,kBAAkB,CAAC,IAAI,CAAC,cAAc,EAAE,eAAe,CAAC,kBAAkB,EAAE,eAAe,CAAC,oBAAoB,EAAE,oBAAoB,CAAC,IAAI,EAAE,oBAAoB,CAAC,SAAS,CAAC,CAAC;gBAC/L,OAAO;AACV,aAAA;AAED,YAAA,IAAI,CAAC,UAAU,GAAG,IAAI,CAAC;YAEvB,IAAI;AAEA,gBAAA,MAAM,WAAW,GAAG,IAAI,qBAAqB,EAAE,CAAC;AAEhD,gBAAA,WAAW,CAAC,OAAO,GAAG,IAAI,CAAC,iBAAiB,EAAE,CAAC;AAC/C,gBAAA,WAAW,CAAC,UAAU,GAAG,cAAc,CAAC;AACxC,gBAAA,WAAW,CAAC,YAAY,GAAG,MAAM,CAAC;AAElC,gBAAA,MAAM,IAAI,CAAC,aAAa,CAAC,cAAc,CAAC,IAAI,CAAC,KAAK,EAAE,WAAW,CAAC,CAAC;AAEpE,aAAA;AAAC,YAAA,OAAO,KAAK,EAAE;AACZ,gBAAA,OAAO,CAAC,KAAK,CAAC,2BAA2B,EAAE,KAAK,CAAC,CAAC;AACrD,aAAA;AAAS,oBAAA;AACN,gBAAA,IAAI,CAAC,UAAU,GAAG,KAAK,CAAC;AAC3B,aAAA;SACJ,CAAA,CAAA;AAAA,KAAA;IAED,iBAAiB,GAAA;AAEb,QAAA,MAAM,WAAW,GAAG,IAAI,oBAAoB,EAAE,CAAC;AAE/C,QAAA,WAAW,CAAC,SAAS,GAAG,IAAI,CAAC,SAAS,CAAC;AACvC,QAAA,WAAW,CAAC,OAAO,GAAG,IAAI,CAAC,OAAO,CAAC;AACnC,QAAA,WAAW,CAAC,QAAQ,GAAG,IAAI,CAAC,WAAW,CAAC;QACxC,WAAW,CAAC,QAAQ,GAAG,CAAC,IAAI,CAAC,QAAQ,CAAC,CAAC;QACvC,WAAW,CAAC,QAAQ,GAAG,CAAC,IAAI,CAAC,OAAO,CAAC,KAAK,CAAC,CAAC;AAC5C,QAAA,WAAW,CAAC,MAAM,GAAG,EAAE,CAAC;AACxB,QAAA,KAAK,MAAM,WAAW,IAAI,IAAI,CAAC,aAAa,EAAE;AAC1C,YAAA,WAAW,CAAC,MAAM,CAAC,IAAI,CAAC;AACpB,gBAAA,IAAI,EAAE,WAAW;AACjB,gBAAA,KAAK,EAAE,KAAK;AACZ,gBAAA,GAAG,EAAE,KAAK;AACb,aAAA,CAAC,CAAC;AACN,SAAA;QACD,WAAW,CAAC,aAAa,EAAE,CAAC;AAE5B,QAAA,OAAO,WAAW,CAAC;KACtB;IAED,iBAAiB,GAAA;AACb,QAAA,MAAM,QAAQ,GAAG;YACb,IAAI,CAAC,eAAe,CAAC,WAAW;YAChC,IAAI,CAAC,gBAAgB,CAAC,aAAa;AACnC,YAAA,IAAI,CAAC,OAAO;YACZ,IAAI,CAAC,UAAU,CAAC,WAAW;SAC9B,CAAC;AAEF,QAAA,QAAQ,CAAC,OAAO,CAAC,OAAO,IAAI,OAAO,CAAC,aAAa,EAAE,CAAC,CAAC;AACrD,QAAA,OAAO,QAAQ,CAAC,IAAI,CAAC,OAAO,IAAI,OAAO,CAAC,OAAO,CAAC,CAAC;KACpD;;kHA7NQ,oBAAoB,EAAA,IAAA,EAAA,CAAA,EAAA,KAAA,EAAA5B,IAAA,CAAA,cAAA,EAAA,EAAA,EAAA,KAAA,EAAAC,IAAA,CAAA,aAAA,EAAA,EAAA,EAAA,KAAA,EAAA,EAAA,CAAA,gBAAA,EAAA,EAAA,EAAA,KAAA,EAAAqF,mBAAA,EAAA,EAAA,EAAA,KAAA,EAAAzB,oBAAA,EAAA,EAAA,EAAA,KAAA,EAAAC,aAAA,EAAA,EAAA,EAAA,KAAA,EAAAnB,YAAA,EAAA,CAAA,EAAA,MAAA,EAAA,EAAA,CAAA,eAAA,CAAA,SAAA,EAAA,CAAA,CAAA;AAApB,oBAAA,CAAA,IAAA,GAAA,EAAA,CAAA,oBAAA,CAAA,EAAA,UAAA,EAAA,QAAA,EAAA,OAAA,EAAA,SAAA,EAAA,IAAA,EAAA,oBAAoB,uWChCjC,28LAgHM,EAAA,UAAA,EAAA,CAAA,EAAA,IAAA,EAAAlC,EAAA,CAAA,kBAAA,EAAA,QAAA,EAAA,gBAAA,EAAA,MAAA,EAAA,CAAA,gCAAA,EAAA,uBAAA,EAAA,cAAA,EAAA,kBAAA,EAAA,aAAA,EAAA,aAAA,EAAA,UAAA,EAAA,UAAA,EAAA,cAAA,EAAA,qBAAA,EAAA,cAAA,EAAA,sBAAA,EAAA,wBAAA,EAAA,kBAAA,CAAA,EAAA,OAAA,EAAA,CAAA,YAAA,CAAA,EAAA,EAAA,EAAA,IAAA,EAAA+C,4BAAA,EAAA,QAAA,EAAA,0BAAA,EAAA,OAAA,EAAA,CAAA,YAAA,CAAA,EAAA,EAAA,EAAA,IAAA,EAAA7C,IAAA,CAAA,YAAA,EAAA,QAAA,EAAA,gBAAA,EAAA,MAAA,EAAA,CAAA,OAAA,EAAA,YAAA,EAAA,YAAA,EAAA,oBAAA,EAAA,WAAA,CAAA,EAAA,QAAA,EAAA,CAAA,cAAA,CAAA,EAAA,EAAA,EAAA,IAAA,EAAAC,EAAA,CAAA,SAAA,EAAA,QAAA,EAAA,YAAA,EAAA,MAAA,EAAA,CAAA,UAAA,EAAA,eAAA,EAAA,UAAA,CAAA,EAAA,QAAA,EAAA,CAAA,WAAA,CAAA,EAAA,EAAA,EAAA,IAAA,EAAAC,GAAA,CAAA,SAAA,EAAA,QAAA,EAAA,YAAA,EAAA,QAAA,EAAA,CAAA,WAAA,CAAA,EAAA,EAAA,EAAA,IAAA,EAAAC,IAAA,CAAA,wBAAA,EAAA,QAAA,EAAA,uBAAA,EAAA,MAAA,EAAA,CAAA,kBAAA,EAAA,MAAA,EAAA,WAAA,EAAA,cAAA,EAAA,qBAAA,EAAA,gCAAA,EAAA,kBAAA,EAAA,WAAA,EAAA,qBAAA,EAAA,4BAAA,EAAA,8BAAA,EAAA,uCAAA,EAAA,WAAA,EAAA,uBAAA,EAAA,0BAAA,EAAA,gCAAA,EAAA,iCAAA,EAAA,kCAAA,EAAA,uBAAA,EAAA,mCAAA,CAAA,EAAA,OAAA,EAAA,CAAA,WAAA,CAAA,EAAA,EAAA,EAAA,IAAA,EAAAD,GAAA,CAAA,WAAA,EAAA,QAAA,EAAA,cAAA,EAAA,MAAA,EAAA,CAAA,UAAA,CAAA,EAAA,QAAA,EAAA,CAAA,aAAA,CAAA,EAAA,EAAA,EAAA,IAAA,EAAA0E,oBAAA,EAAA,QAAA,EAAA,kBAAA,EAAA,MAAA,EAAA,CAAA,WAAA,CAAA,EAAA,OAAA,EAAA,CAAA,YAAA,CAAA,EAAA,EAAA,EAAA,IAAA,EAAAC,uBAAA,EAAA,QAAA,EAAA,qBAAA,EAAA,MAAA,EAAA,CAAA,oBAAA,CAAA,EAAA,OAAA,EAAA,CAAA,iBAAA,CAAA,EAAA,EAAA,EAAA,IAAA,EAAA,EAAA,CAAA,qBAAA,EAAA,QAAA,EAAA,mBAAA,EAAA,MAAA,EAAA,CAAA,qBAAA,EAAA,qBAAA,EAAA,UAAA,EAAA,YAAA,EAAA,iBAAA,CAAA,EAAA,EAAA,EAAA,IAAA,EAAA,EAAA,CAAA,iBAAA,EAAA,QAAA,EAAA,qBAAA,EAAA,MAAA,EAAA,CAAA,OAAA,EAAA,YAAA,EAAA,OAAA,CAAA,EAAA,CAAA,EAAA,UAAA,EAAA,CAAA,EAAA,IAAA,EAAA7E,IAAA,CAAA,QAAA,EAAA,QAAA,EAAA,WAAA,EAAA,EAAA,EAAA,IAAA,EAAA4B,IAAA,CAAA,iBAAA,EAAA,QAAA,EAAA,wIAAA,EAAA,MAAA,EAAA,CAAA,UAAA,CAAA,EAAA,EAAA,EAAA,IAAA,EAAAA,IAAA,CAAA,eAAA,EAAA,QAAA,EAAA,2CAAA,EAAA,EAAA,EAAA,IAAA,EAAAA,IAAA,CAAA,oBAAA,EAAA,QAAA,EAAA,eAAA,EAAA,MAAA,EAAA,CAAA,UAAA,EAAA,aAAA,EAAA,SAAA,CAAA,EAAA,OAAA,EAAA,CAAA,eAAA,CAAA,EAAA,QAAA,EAAA,CAAA,QAAA,CAAA,EAAA,EAAA,EAAA,IAAA,EAAAC,GAAA,CAAA,IAAA,EAAA,QAAA,EAAA,QAAA,EAAA,MAAA,EAAA,CAAA,MAAA,EAAA,UAAA,EAAA,UAAA,CAAA,EAAA,EAAA,EAAA,IAAA,EAAAA,GAAA,CAAA,OAAA,EAAA,QAAA,EAAA,kBAAA,EAAA,MAAA,EAAA,CAAA,SAAA,EAAA,cAAA,EAAA,eAAA,CAAA,EAAA,EAAA,EAAA,IAAA,EAAA7B,IAAA,CAAA,QAAA,EAAA,QAAA,EAAA,WAAA,EAAA,MAAA,EAAA,CAAA,IAAA,CAAA,EAAA,EAAA,EAAA,IAAA,EAAAE,GAAA,CAAA,SAAA,EAAA,QAAA,EAAA,2BAAA,EAAA,MAAA,EAAA,CAAA,iBAAA,EAAA,mBAAA,EAAA,kBAAA,EAAA,gBAAA,EAAA,oBAAA,EAAA,mBAAA,EAAA,oBAAA,CAAA,EAAA,QAAA,EAAA,CAAA,WAAA,CAAA,EAAA,CAAA,EAAA,KAAA,EAAA,EAAA,OAAA,EAAA2B,GAAA,CAAA,SAAA,EAAA,EAAA,CAAA,CAAA;4FDhFO,oBAAoB,EAAA,UAAA,EAAA,CAAA;kBANhC,SAAS;AAAC,YAAA,IAAA,EAAA,CAAA;AACP,oBAAA,QAAQ,EAAE,WAAW;AACrB,oBAAA,WAAW,EAAE,wBAAwB;AACrC,oBAAA,MAAM,EAAE,EACP;AACJ,iBAAA,CAAA;oRAoCiC,eAAe,EAAA,CAAA;sBAA5C,SAAS;uBAAC,iBAAiB,CAAA;gBACG,gBAAgB,EAAA,CAAA;sBAA9C,SAAS;uBAAC,kBAAkB,CAAA;gBACJ,UAAU,EAAA,CAAA;sBAAlC,SAAS;uBAAC,YAAY,CAAA;;;AEhE3B,MAAMZ,QAAM,GAAW;AACnB,IAAA;AACI,QAAA,IAAI,EAAE,EAAE;AACR,QAAA,SAAS,EAAE,oBAAoB;AAClC,KAAA;CACJ,CAAC;MAMW,wBAAwB,CAAA;;sHAAxB,wBAAwB,EAAA,IAAA,EAAA,EAAA,EAAA,MAAA,EAAA,EAAA,CAAA,eAAA,CAAA,QAAA,EAAA,CAAA,CAAA;AAAxB,wBAAA,CAAA,IAAA,GAAA,EAAA,CAAA,mBAAA,CAAA,EAAA,UAAA,EAAA,QAAA,EAAA,OAAA,EAAA,SAAA,EAAA,QAAA,EAAA,EAAA,EAAA,IAAA,EAAA,wBAAwB,0CAFzB,YAAY,CAAA,EAAA,CAAA,CAAA;uHAEX,wBAAwB,EAAA,OAAA,EAAA,CAH1B,CAAC,YAAY,CAAC,QAAQ,CAACA,QAAM,CAAC,CAAC,EAC9B,YAAY,CAAA,EAAA,CAAA,CAAA;4FAEX,wBAAwB,EAAA,UAAA,EAAA,CAAA;kBAJpC,QAAQ;AAAC,YAAA,IAAA,EAAA,CAAA;oBACR,OAAO,EAAE,CAAC,YAAY,CAAC,QAAQ,CAACA,QAAM,CAAC,CAAC;oBACxC,OAAO,EAAE,CAAC,YAAY,CAAC;AACxB,iBAAA,CAAA;;;ACOD;MAyBa,iBAAiB,CAAA;;+GAAjB,iBAAiB,EAAA,IAAA,EAAA,EAAA,EAAA,MAAA,EAAA,EAAA,CAAA,eAAA,CAAA,QAAA,EAAA,CAAA,CAAA;gHAAjB,iBAAiB,EAAA,YAAA,EAAA,CArBtB,oBAAoB,CAAA,EAAA,OAAA,EAAA,CAGpB,YAAY;QACZ,wBAAwB;QACxB,WAAW;QACX,mBAAmB;QACnB,eAAe;QACf,yBAAyB;QACzB,iBAAiB;QACjB,oBAAoB;QACpB,kBAAkB;QAClB,cAAc;QACd,wBAAwB;QACxB,cAAc;QACd,kBAAkB;QAClB,eAAe;QACf,cAAc;QACd,eAAe,CAAA,EAAA,CAAA,CAAA;AAGV,iBAAA,CAAA,IAAA,GAAA,EAAA,CAAA,mBAAA,CAAA,EAAA,UAAA,EAAA,QAAA,EAAA,OAAA,EAAA,SAAA,EAAA,QAAA,EAAA,EAAA,EAAA,IAAA,EAAA,iBAAiB,EAnBjB,OAAA,EAAA,CAAA;YACL,YAAY;YACZ,wBAAwB;YACxB,WAAW;YACX,mBAAmB;YACnB,eAAe;YACf,yBAAyB;YACzB,iBAAiB;YACjB,oBAAoB;YACpB,kBAAkB;YAClB,cAAc;YACd,wBAAwB;YACxB,cAAc;YACd,kBAAkB;YAClB,eAAe;YACf,cAAc;YACd,eAAe;AAClB,SAAA,CAAA,EAAA,CAAA,CAAA;4FAEQ,iBAAiB,EAAA,UAAA,EAAA,CAAA;kBAvB7B,QAAQ;AAAC,YAAA,IAAA,EAAA,CAAA;AACN,oBAAA,YAAY,EAAE;wBACV,oBAAoB;AACvB,qBAAA;AACD,oBAAA,OAAO,EAAE;wBACL,YAAY;wBACZ,wBAAwB;wBACxB,WAAW;wBACX,mBAAmB;wBACnB,eAAe;wBACf,yBAAyB;wBACzB,iBAAiB;wBACjB,oBAAoB;wBACpB,kBAAkB;wBAClB,cAAc;wBACd,wBAAwB;wBACxB,cAAc;wBACd,kBAAkB;wBAClB,eAAe;wBACf,cAAc;wBACd,eAAe;AAClB,qBAAA;AACJ,iBAAA,CAAA;;;ACpBD;MAQa,wBAAwB,CAAA;AAuCjC,IAAA,WAAA,CACY,cAA8B,EAC9B,YAA2B,EAC3B,gBAAkC,EAClC,oBAA0C,EAC1C,gBAAkC,EAClC,aAA4B,EAC5B,YAA0B,EAAA;QAN1B,IAAc,CAAA,cAAA,GAAd,cAAc,CAAgB;QAC9B,IAAY,CAAA,YAAA,GAAZ,YAAY,CAAe;QAC3B,IAAgB,CAAA,gBAAA,GAAhB,gBAAgB,CAAkB;QAClC,IAAoB,CAAA,oBAAA,GAApB,oBAAoB,CAAsB;QAC1C,IAAgB,CAAA,gBAAA,GAAhB,gBAAgB,CAAkB;QAClC,IAAa,CAAA,aAAA,GAAb,aAAa,CAAe;QAC5B,IAAY,CAAA,YAAA,GAAZ,YAAY,CAAc;QA5CtC,IAAgB,CAAA,gBAAA,GAAG,iBAAiB,CAAC;QACrC,IAAc,CAAA,cAAA,GAAG,eAAe,CAAC;QACjC,IAAmB,CAAA,mBAAA,GAAG,oCAAoC,CAAC;QAE3D,IAA2B,CAAA,2BAAA,GAAG,2BAA2B,CAAC;QAC1D,IAAe,CAAA,eAAA,GAAG,eAAe,CAAC;QAClC,IAAgB,CAAA,gBAAA,GAAG,gBAAgB,CAAC;QACpC,IAAc,CAAA,cAAA,GAAG,cAAc,CAAC;QAChC,IAAiB,CAAA,iBAAA,GAAG,iBAAiB,CAAC;QACtC,IAAY,CAAA,YAAA,GAAG,YAAY,CAAC;QAa5B,IAAW,CAAA,WAAA,GAAU,EAAE,CAAC;QACxB,IAAe,CAAA,eAAA,GAAU,EAAE,CAAC;QAC5B,IAAS,CAAA,SAAA,GAAY,KAAK,CAAC;QAC3B,IAAU,CAAA,UAAA,GAAY,KAAK,CAAC;AAE5B,QAAA,IAAA,CAAA,UAAU,GAAG,CAAC,IAAI,SAAS,EAAE,CAAC,CAAC;AAC/B,QAAA,IAAA,CAAA,cAAc,GAAW,IAAI,KAAK,EAAE,CAAC;KAiBhC;IAEL,QAAQ,GAAA;QACJ,IAAI,CAAC,KAAK,GAAG,IAAI,CAAC,cAAc,CAAC,UAAU,CAAC,cAAc,CAAC,CAAC;QAC5D,IAAI,CAAC,QAAQ,GAAG,IAAI,CAAC,cAAc,CAAC,UAAU,CAAC,UAAU,CAAC,CAAC;QAE3D,IAAI,CAAC,sBAAsB,EAAE,CAAC;KACjC;IAEK,sBAAsB,GAAA;;AACxB,YAAA,IAAI,CAAC,UAAU,IAAiB,MAAM,IAAI,CAAC,gBAAgB,CAAC,sBAAsB,CAAC,IAAI,CAAC,KAAK,CAAC,CAAA,CAAC;SAClG,CAAA,CAAA;AAAA,KAAA;IAED,aAAa,GAAA;QACT,IAAI,CAAC,SAAS,GAAG,IAAI,CAAC,eAAe,CAAC,WAAW,CAAC,KAAK,CAAC;QACxD,IAAI,CAAC,OAAO,GAAG,IAAI,CAAC,eAAe,CAAC,SAAS,CAAC,KAAK,CAAC;QAEpD,IAAI,CAAC,YAAY,CAAC,oBAAoB,CAAC,IAAI,CAAC,cAAc,CAAC,CAAC;KAC/D;IAED,oBAAoB,GAAA;QAChB,IAAI,CAAC,WAAW,GAAG,IAAI,CAAC,gBAAgB,CAAC,aAAa,CAAC,KAAK,CAAC;QAE7D,IAAI,CAAC,YAAY,CAAC,oBAAoB,CAAC,IAAI,CAAC,cAAc,CAAC,CAAC;KAC/D;IAED,eAAe,GAAA;QACX,IAAI,CAAC,QAAQ,GAAG,IAAI,CAAC,WAAW,CAAC,QAAQ,CAAC,KAAK,CAAC;QAEhD,IAAI,CAAC,YAAY,CAAC,oBAAoB,CAAC,IAAI,CAAC,cAAc,CAAC,CAAC;KAC/D;IAED,eAAe,GAAA;QACX,IAAI,CAAC,QAAQ,GAAG,IAAI,CAAC,WAAW,CAAC,QAAQ,CAAC,KAAK,CAAC;QAEhD,IAAI,CAAC,YAAY,CAAC,oBAAoB,CAAC,IAAI,CAAC,cAAc,CAAC,CAAC;KAC/D;IAED,cAAc,GAAA;;QACV,IAAI,CAAC,WAAW,GAAG,CAAA,EAAA,GAAA,IAAI,CAAC,UAAU,MAAE,IAAA,IAAA,EAAA,KAAA,KAAA,CAAA,GAAA,KAAA,CAAA,GAAA,EAAA,CAAA,WAAW,CAAC,KAAK,CAAC;QAEtD,IAAI,CAAA,MAAA,IAAI,CAAC,WAAW,MAAE,IAAA,IAAA,EAAA,KAAA,KAAA,CAAA,GAAA,KAAA,CAAA,GAAA,EAAA,CAAA,MAAM,IAAG,CAAC,EAAE;AAC9B,YAAA,IAAI,CAAC,aAAa,GAAG,IAAI,CAAC,gBAAgB,CAAC,iBAAiB,CAAC,IAAI,CAAC,WAAW,CAAC,CAAC;AAClF,SAAA;QAED,IAAI,CAAC,YAAY,CAAC,oBAAoB,CAAC,IAAI,CAAC,cAAc,CAAC,CAAC;KAC/D;IAED,YAAY,CAAC,KAAW,EAAE,MAAY,EAAA;QAClC,MAAM,UAAU,GAAU,EAAE,CAAC;AAE7B,QAAA,IAAI,KAAK,EAAE;AACP,YAAA,KAAK,CAAC,OAAO,CAAC,WAAW,IAAG;AACxB,gBAAA,MAAM,YAAY,GAAG;AACjB,oBAAA,IAAI,EAAE,MAAM;AACZ,oBAAA,KAAK,EAAE,WAAW;AAClB,oBAAA,GAAG,EAAE,KAAK;iBACb,CAAC;AACF,gBAAA,UAAU,CAAC,IAAI,CAAC,YAAY,CAAC,CAAC;AAClC,aAAC,CAAC,CAAC;AACN,SAAA;AAED,QAAA,IAAI,CAAC,eAAe,GAAG,IAAI,CAAC,eAAe,CAAC,MAAM,CAAC,KAAK,IAAI,KAAK,CAAC,IAAI,IAAI,MAAM,CAAC,CAAC;QAElF,IAAI,CAAC,eAAe,CAAC,IAAI,CAAC,GAAG,UAAU,CAAC,CAAC;KAC5C;IAEK,UAAU,GAAA;;;YAEZ,IAAI,CAAC,YAAY,CAAC,oBAAoB,CAAC,IAAI,CAAC,cAAc,CAAC,CAAC;AAE5D,YAAA,IAAI,IAAI,CAAC,iBAAiB,EAAE,EAAE;AAC1B,gBAAA,IAAI,CAAC,YAAY,CAAC,SAAS,CAAC,WAAW,CAAC,kBAAkB,EAAE,WAAW,CAAC,oBAAoB,EAAE,WAAW,CAAC,KAAK,CAAC,CAAC;gBACjH,OAAO;AACV,aAAA;AAED,YAAA,IAAI,IAAI,CAAC,SAAS,IAAI,IAAI,CAAC,OAAO,EAAE;gBAChC,IAAI,CAAC,YAAY,CAAC,kBAAkB,CAAC,IAAI,CAAC,cAAc,EAAE,eAAe,CAAC,kBAAkB,EAAE,eAAe,CAAC,oBAAoB,EAAE,oBAAoB,CAAC,IAAI,EAAE,oBAAoB,CAAC,SAAS,CAAC,CAAC;gBAC/L,OAAO;AACV,aAAA;AAED,YAAA,IAAI,CAAC,UAAU,GAAG,IAAI,CAAC;YAEvB,IAAI;AACA,gBAAA,MAAM,WAAW,GAAG,IAAI,CAAC,iBAAiB,EAAE,CAAC;AAE7C,gBAAA,IAAI,CAAC,UAAU,GAAG,MAAM,IAAI,CAAC,oBAAoB,CAAC,gBAAgB,CAAC,IAAI,CAAC,KAAK,EAAE,WAAW,CAAC,CAAC;AAE5F,gBAAA,IAAI,CAAA,CAAA,EAAA,GAAA,IAAI,CAAC,UAAU,MAAE,IAAA,IAAA,EAAA,KAAA,KAAA,CAAA,GAAA,KAAA,CAAA,GAAA,EAAA,CAAA,MAAM,IAAG,CAAC,IAAI,EAAC,CAAA,EAAA,GAAA,IAAI,CAAC,UAAU,MAAE,IAAA,IAAA,EAAA,KAAA,KAAA,CAAA,GAAA,KAAA,CAAA,GAAA,EAAA,CAAA,KAAK,CAAC,IAAI,IAAI,IAAI,CAAC,IAAI,CAAC,MAAM,IAAI,CAAC,CAAC,CAAA,EAAE;AACvF,oBAAA,IAAI,CAAC,SAAS,GAAG,IAAI,CAAC,aAAa,CAAC,gBAAgB,CAAC,IAAI,CAAC,UAAU,CAAC,CAAC;oBACtE,IAAI,CAAC,WAAW,GAAG,IAAI,CAAC,aAAa,CAAC,aAAa,CAAC,IAAI,CAAC,SAAS,EAAE,IAAI,CAAC,UAAU,EAAE,IAAI,CAAC,cAAc,CAAC,SAAS,CAAC,CAAC;AACvH,iBAAA;AAAM,qBAAA;oBACH,IAAI,CAAC,YAAY,CAAC,kBAAkB,CAAC,IAAI,CAAC,cAAc,EAAE,eAAe,CAAC,oBAAoB,EAAE,eAAe,CAAC,sBAAsB,EAAE,oBAAoB,CAAC,OAAO,EAAE,oBAAoB,CAAC,YAAY,CAAC,CAAC;AAC5M,iBAAA;AAEJ,aAAA;AAAC,YAAA,OAAO,KAAK,EAAE;AACZ,gBAAA,OAAO,CAAC,KAAK,CAAC,uBAAuB,EAAE,KAAK,CAAC,CAAC;gBAC9C,IAAI,CAAC,YAAY,CAAC,kBAAkB,CAAC,IAAI,CAAC,cAAc,EAAE,eAAe,CAAC,mBAAmB,EAAE,eAAe,CAAC,qBAAqB,EAAE,oBAAoB,CAAC,MAAM,EAAE,oBAAoB,CAAC,WAAW,CAAC,CAAC;AACxM,aAAA;AAAS,oBAAA;AACN,gBAAA,IAAI,CAAC,UAAU,GAAG,KAAK,CAAC;AAC3B,aAAA;;AACJ,KAAA;AAEK,IAAA,cAAc,CAAC,MAAc,EAAA;;YAC/B,IAAI,CAAC,YAAY,CAAC,oBAAoB,CAAC,IAAI,CAAC,cAAc,CAAC,CAAC;AAE5D,YAAA,IAAI,IAAI,CAAC,iBAAiB,EAAE,EAAE;AAC1B,gBAAA,IAAI,CAAC,YAAY,CAAC,SAAS,CAAC,WAAW,CAAC,kBAAkB,EAAE,WAAW,CAAC,oBAAoB,EAAE,WAAW,CAAC,KAAK,CAAC,CAAC;gBACjH,OAAO;AACV,aAAA;AAED,YAAA,IAAI,IAAI,CAAC,SAAS,IAAI,IAAI,CAAC,OAAO,EAAE;gBAChC,IAAI,CAAC,YAAY,CAAC,kBAAkB,CAAC,IAAI,CAAC,cAAc,EAAE,eAAe,CAAC,kBAAkB,EAAE,eAAe,CAAC,oBAAoB,EAAE,oBAAoB,CAAC,IAAI,EAAE,oBAAoB,CAAC,SAAS,CAAC,CAAC;gBAC/L,OAAO;AACV,aAAA;AAED,YAAA,IAAI,CAAC,UAAU,GAAG,IAAI,CAAC;YAEvB,IAAI;AACA,gBAAA,MAAM,WAAW,GAAG,IAAI,qBAAqB,EAAE,CAAC;AAEhD,gBAAA,WAAW,CAAC,OAAO,GAAG,IAAI,CAAC,iBAAiB,EAAE,CAAC;AAC/C,gBAAA,WAAW,CAAC,UAAU,GAAG,kBAAkB,CAAC;AAC5C,gBAAA,WAAW,CAAC,YAAY,GAAG,MAAM,CAAC;AAElC,gBAAA,MAAM,IAAI,CAAC,aAAa,CAAC,cAAc,CAAC,IAAI,CAAC,KAAK,EAAE,WAAW,CAAC,CAAC;AAEpE,aAAA;AAAC,YAAA,OAAO,KAAK,EAAE;AACZ,gBAAA,OAAO,CAAC,KAAK,CAAC,2BAA2B,EAAE,KAAK,CAAC,CAAC;AACrD,aAAA;AAAS,oBAAA;AACN,gBAAA,IAAI,CAAC,UAAU,GAAG,KAAK,CAAC;AAC3B,aAAA;SACJ,CAAA,CAAA;AAAA,KAAA;IAED,iBAAiB,GAAA;QAEb,MAAM,uBAAuB,GAAG,IAAI,CAAC,eAAe,CAAC,MAAM,CAAC,MAAM,IAAI,IAAI,CAAC,aAAa,CAAC,QAAQ,CAAC,MAAM,CAAC,IAAI,CAAC,CAAC,CAAC;AAEhH,QAAA,MAAM,WAAW,GAAG,IAAI,oBAAoB,EAAE,CAAC;AAE/C,QAAA,WAAW,CAAC,SAAS,GAAG,IAAI,CAAC,SAAS,CAAC;AACvC,QAAA,WAAW,CAAC,OAAO,GAAG,IAAI,CAAC,OAAO,CAAC;AACnC,QAAA,WAAW,CAAC,QAAQ,GAAG,IAAI,CAAC,WAAW,CAAC;QACxC,WAAW,CAAC,QAAQ,GAAG,CAAC,IAAI,CAAC,QAAQ,CAAC,CAAC;QACvC,WAAW,CAAC,QAAQ,GAAG,CAAC,IAAI,CAAC,QAAQ,CAAC,CAAC;AACvC,QAAA,WAAW,CAAC,MAAM,GAAG,EAAE,CAAC;AACxB,QAAA,WAAW,CAAC,MAAM,CAAC,IAAI,CACnB,GAAG,uBAAuB,CAAC,GAAG,CAAC,MAAM,KAAK;YACtC,IAAI,EAAE,MAAM,CAAC,IAAI;YACjB,KAAK,EAAE,MAAM,CAAC,KAAK;YACnB,GAAG,EAAE,MAAM,CAAC,GAAG;SAClB,CAAC,CAAC,CACN,CAAC;QACF,WAAW,CAAC,aAAa,EAAE,CAAC;AAE5B,QAAA,OAAO,WAAW,CAAC;KACtB;IAED,iBAAiB,GAAA;AACb,QAAA,MAAM,QAAQ,GAAG;YACb,IAAI,CAAC,eAAe,CAAC,WAAW;YAChC,IAAI,CAAC,gBAAgB,CAAC,aAAa;YACnC,IAAI,CAAC,WAAW,CAAC,QAAQ;YACzB,IAAI,CAAC,WAAW,CAAC,QAAQ;YACzB,IAAI,CAAC,UAAU,CAAC,WAAW;SAC9B,CAAC;AAEF,QAAA,QAAQ,CAAC,OAAO,CAAC,OAAO,IAAI,OAAO,CAAC,aAAa,EAAE,CAAC,CAAC;AACrD,QAAA,OAAO,QAAQ,CAAC,IAAI,CAAC,OAAO,IAAI,OAAO,CAAC,OAAO,CAAC,CAAC;KACpD;AAED,IAAA,iBAAiB,CAAC,gBAAgB,EAAA;AAC9B,QAAA,MAAM,SAAS,GAAG,IAAI,CAAC,gBAAgB,CAAC,eAAe,CAAC,IAAI,CAAC,UAAU,EAAE,aAAa,EAAE,gBAAgB,CAAC,CAAC;QAC1G,OAAO,SAAS,GAAG,SAAS,CAAC,KAAK,GAAG,EAAE,CAAC;KAC3C;;sHA7NQ,wBAAwB,EAAA,IAAA,EAAA,CAAA,EAAA,KAAA,EAAA5B,IAAA,CAAA,cAAA,EAAA,EAAA,EAAA,KAAA,EAAAC,IAAA,CAAA,aAAA,EAAA,EAAA,EAAA,KAAA,EAAA,EAAA,CAAA,gBAAA,EAAA,EAAA,EAAA,KAAA,EAAAK,oBAAA,EAAA,EAAA,EAAA,KAAA,EAAAgD,gBAAA,EAAA,EAAA,EAAA,KAAA,EAAAQ,aAAA,EAAA,EAAA,EAAA,KAAA,EAAAnB,YAAA,EAAA,CAAA,EAAA,MAAA,EAAA,EAAA,CAAA,eAAA,CAAA,SAAA,EAAA,CAAA,CAAA;AAAxB,wBAAA,CAAA,IAAA,GAAA,EAAA,CAAA,oBAAA,CAAA,EAAA,UAAA,EAAA,QAAA,EAAA,OAAA,EAAA,SAAA,EAAA,IAAA,EAAA,wBAAwB,4nBClCrC,2sLAsHM,EAAA,UAAA,EAAA,CAAA,EAAA,IAAA,EAAAlC,EAAA,CAAA,kBAAA,EAAA,QAAA,EAAA,gBAAA,EAAA,MAAA,EAAA,CAAA,gCAAA,EAAA,uBAAA,EAAA,cAAA,EAAA,kBAAA,EAAA,aAAA,EAAA,aAAA,EAAA,UAAA,EAAA,UAAA,EAAA,cAAA,EAAA,qBAAA,EAAA,cAAA,EAAA,sBAAA,EAAA,wBAAA,EAAA,kBAAA,CAAA,EAAA,OAAA,EAAA,CAAA,YAAA,CAAA,EAAA,EAAA,EAAA,IAAA,EAAA+C,4BAAA,EAAA,QAAA,EAAA,0BAAA,EAAA,OAAA,EAAA,CAAA,YAAA,CAAA,EAAA,EAAA,EAAA,IAAA,EAAAiB,eAAA,EAAA,QAAA,EAAA,YAAA,EAAA,MAAA,EAAA,CAAA,iBAAA,CAAA,EAAA,OAAA,EAAA,CAAA,YAAA,CAAA,EAAA,EAAA,EAAA,IAAA,EAAAgB,eAAA,EAAA,QAAA,EAAA,YAAA,EAAA,MAAA,EAAA,CAAA,iBAAA,EAAA,WAAA,CAAA,EAAA,OAAA,EAAA,CAAA,YAAA,CAAA,EAAA,EAAA,EAAA,IAAA,EAAAC,oBAAA,EAAA,QAAA,EAAA,kBAAA,EAAA,MAAA,EAAA,CAAA,WAAA,CAAA,EAAA,OAAA,EAAA,CAAA,YAAA,CAAA,EAAA,EAAA,EAAA,IAAA,EAAArB,uBAAA,EAAA,QAAA,EAAA,qBAAA,EAAA,MAAA,EAAA,CAAA,oBAAA,CAAA,EAAA,OAAA,EAAA,CAAA,iBAAA,CAAA,EAAA,EAAA,EAAA,IAAA,EAAAsB,oBAAA,EAAA,QAAA,EAAA,iBAAA,EAAA,OAAA,EAAA,CAAA,YAAA,CAAA,EAAA,EAAA,EAAA,IAAA,EAAA,EAAA,CAAA,qBAAA,EAAA,QAAA,EAAA,mBAAA,EAAA,MAAA,EAAA,CAAA,qBAAA,EAAA,qBAAA,EAAA,UAAA,EAAA,YAAA,EAAA,iBAAA,CAAA,EAAA,EAAA,EAAA,IAAA,EAAA,EAAA,CAAA,iBAAA,EAAA,QAAA,EAAA,qBAAA,EAAA,MAAA,EAAA,CAAA,OAAA,EAAA,YAAA,EAAA,OAAA,CAAA,EAAA,CAAA,EAAA,UAAA,EAAA,CAAA,EAAA,IAAA,EAAArD,GAAA,CAAA,SAAA,EAAA,QAAA,EAAA,2BAAA,EAAA,MAAA,EAAA,CAAA,iBAAA,EAAA,mBAAA,EAAA,kBAAA,EAAA,gBAAA,EAAA,oBAAA,EAAA,mBAAA,EAAA,oBAAA,CAAA,EAAA,QAAA,EAAA,CAAA,WAAA,CAAA,EAAA,EAAA,EAAA,IAAA,EAAAC,GAAA,CAAA,IAAA,EAAA,QAAA,EAAA,QAAA,EAAA,MAAA,EAAA,CAAA,MAAA,EAAA,UAAA,EAAA,UAAA,CAAA,EAAA,EAAA,EAAA,IAAA,EAAAA,GAAA,CAAA,OAAA,EAAA,QAAA,EAAA,kBAAA,EAAA,MAAA,EAAA,CAAA,SAAA,EAAA,cAAA,EAAA,eAAA,CAAA,EAAA,CAAA,EAAA,CAAA,CAAA;4FDpFO,wBAAwB,EAAA,UAAA,EAAA,CAAA;kBANpC,SAAS;AAAC,YAAA,IAAA,EAAA,CAAA;AACP,oBAAA,QAAQ,EAAE,eAAe;AACzB,oBAAA,WAAW,EAAE,4BAA4B;AACzC,oBAAA,MAAM,EAAE,EACP;AACJ,iBAAA,CAAA;iRAiCiC,eAAe,EAAA,CAAA;sBAA5C,SAAS;uBAAC,iBAAiB,CAAA;gBACG,gBAAgB,EAAA,CAAA;sBAA9C,SAAS;uBAAC,kBAAkB,CAAA;gBACH,WAAW,EAAA,CAAA;sBAApC,SAAS;uBAAC,aAAa,CAAA;gBACE,WAAW,EAAA,CAAA;sBAApC,SAAS;uBAAC,aAAa,CAAA;gBACC,UAAU,EAAA,CAAA;sBAAlC,SAAS;uBAAC,YAAY,CAAA;gBACA,QAAQ,EAAA,CAAA;sBAA9B,SAAS;uBAAC,UAAU,CAAA;;;AElEzB,MAAMX,QAAM,GAAW;AACnB,IAAA;AACI,QAAA,IAAI,EAAE,EAAE;AACR,QAAA,SAAS,EAAE,wBAAwB;AACtC,KAAA;CACJ,CAAC;MAOW,4BAA4B,CAAA;;0HAA5B,4BAA4B,EAAA,IAAA,EAAA,EAAA,EAAA,MAAA,EAAA,EAAA,CAAA,eAAA,CAAA,QAAA,EAAA,CAAA,CAAA;AAA5B,4BAAA,CAAA,IAAA,GAAA,EAAA,CAAA,mBAAA,CAAA,EAAA,UAAA,EAAA,QAAA,EAAA,OAAA,EAAA,SAAA,EAAA,QAAA,EAAA,EAAA,EAAA,IAAA,EAAA,4BAA4B,0CAH3B,YAAY,CAAA,EAAA,CAAA,CAAA;2HAGb,4BAA4B,EAAA,OAAA,EAAA,CAJ5B,CAAC,YAAY,CAAC,QAAQ,CAACA,QAAM,CAAC,CAAC,EAC9B,YAAY,CAAA,EAAA,CAAA,CAAA;4FAGb,4BAA4B,EAAA,UAAA,EAAA,CAAA;kBALxC,QAAQ;AAAC,YAAA,IAAA,EAAA,CAAA;oBACN,OAAO,EAAE,CAAC,YAAY,CAAC,QAAQ,CAACA,QAAM,CAAC,CAAC;oBACxC,OAAO,EAAE,CAAC,YAAY,CAAC;AAC1B,iBAAA,CAAA;;;ACID;MAsBa,qBAAqB,CAAA;;mHAArB,qBAAqB,EAAA,IAAA,EAAA,EAAA,EAAA,MAAA,EAAA,EAAA,CAAA,eAAA,CAAA,QAAA,EAAA,CAAA,CAAA;oHAArB,qBAAqB,EAAA,YAAA,EAAA,CAlB1B,wBAAwB,CAAA,EAAA,OAAA,EAAA,CAGxB,YAAY;QACZ,4BAA4B;QAC5B,eAAe;QACf,yBAAyB;QACzB,YAAY;QACZ,YAAY;QACZ,iBAAiB;QACjB,iBAAiB;QACjB,cAAc;QACd,kBAAkB;QAClB,oBAAoB;QACpB,cAAc;QACd,eAAe,CAAA,EAAA,CAAA,CAAA;AAGV,qBAAA,CAAA,IAAA,GAAA,EAAA,CAAA,mBAAA,CAAA,EAAA,UAAA,EAAA,QAAA,EAAA,OAAA,EAAA,SAAA,EAAA,QAAA,EAAA,EAAA,EAAA,IAAA,EAAA,qBAAqB,EAhBrB,OAAA,EAAA,CAAA;YACL,YAAY;YACZ,4BAA4B;YAC5B,eAAe;YACf,yBAAyB;YACzB,YAAY;YACZ,YAAY;YACZ,iBAAiB;YACjB,iBAAiB;YACjB,cAAc;YACd,kBAAkB;YAClB,oBAAoB;YACpB,cAAc;YACd,eAAe;AAClB,SAAA,CAAA,EAAA,CAAA,CAAA;4FAEQ,qBAAqB,EAAA,UAAA,EAAA,CAAA;kBApBjC,QAAQ;AAAC,YAAA,IAAA,EAAA,CAAA;AACN,oBAAA,YAAY,EAAE;wBACV,wBAAwB;AAC3B,qBAAA;AACD,oBAAA,OAAO,EAAE;wBACL,YAAY;wBACZ,4BAA4B;wBAC5B,eAAe;wBACf,yBAAyB;wBACzB,YAAY;wBACZ,YAAY;wBACZ,iBAAiB;wBACjB,iBAAiB;wBACjB,cAAc;wBACd,kBAAkB;wBAClB,oBAAoB;wBACpB,cAAc;wBACd,eAAe;AAClB,qBAAA;AACJ,iBAAA,CAAA;;;ACjBD;MASa,sBAAsB,CAAA;IAiC/B,WACY,CAAA,cAA8B,EAC9B,YAA2B,EAC3B,oBAA0C,EAC1C,gBAAkC,EAClC,aAA4B,EAC5B,YAA0B,EAAA;QAL1B,IAAc,CAAA,cAAA,GAAd,cAAc,CAAgB;QAC9B,IAAY,CAAA,YAAA,GAAZ,YAAY,CAAe;QAC3B,IAAoB,CAAA,oBAAA,GAApB,oBAAoB,CAAsB;QAC1C,IAAgB,CAAA,gBAAA,GAAhB,gBAAgB,CAAkB;QAClC,IAAa,CAAA,aAAA,GAAb,aAAa,CAAe;QAC5B,IAAY,CAAA,YAAA,GAAZ,YAAY,CAAc;QArCtC,IAAgB,CAAA,gBAAA,GAAG,iBAAiB,CAAC;QACrC,IAAc,CAAA,cAAA,GAAG,eAAe,CAAC;QACjC,IAAmB,CAAA,mBAAA,GAAG,oCAAoC,CAAC;QAE3D,IAA2B,CAAA,2BAAA,GAAG,2BAA2B,CAAC;QAC1D,IAAe,CAAA,eAAA,GAAG,eAAe,CAAC;QAClC,IAAgB,CAAA,gBAAA,GAAG,gBAAgB,CAAC;QACpC,IAAc,CAAA,cAAA,GAAG,cAAc,CAAC;QAChC,IAAiB,CAAA,iBAAA,GAAG,iBAAiB,CAAC;QACtC,IAAY,CAAA,YAAA,GAAG,YAAY,CAAC;QAY5B,IAAS,CAAA,SAAA,GAAY,KAAK,CAAC;QAC3B,IAAU,CAAA,UAAA,GAAY,KAAK,CAAC;AAE5B,QAAA,IAAA,CAAA,UAAU,GAAG,CAAC,IAAI,SAAS,EAAE,CAAC,CAAC;AAC/B,QAAA,IAAA,CAAA,cAAc,GAAW,IAAI,KAAK,EAAE,CAAC;KAahC;IAEL,QAAQ,GAAA;QACJ,IAAI,CAAC,KAAK,GAAG,IAAI,CAAC,cAAc,CAAC,UAAU,CAAC,cAAc,CAAC,CAAC;QAC5D,IAAI,CAAC,QAAQ,GAAG,IAAI,CAAC,cAAc,CAAC,UAAU,CAAC,UAAU,CAAC,CAAC;KAC9D;IAED,aAAa,GAAA;QACT,IAAI,CAAC,SAAS,GAAG,IAAI,CAAC,eAAe,CAAC,WAAW,CAAC,KAAK,CAAC;QACxD,IAAI,CAAC,OAAO,GAAG,IAAI,CAAC,eAAe,CAAC,SAAS,CAAC,KAAK,CAAC;QAEpD,IAAI,CAAC,YAAY,CAAC,oBAAoB,CAAC,IAAI,CAAC,cAAc,CAAC,CAAC;KAC/D;IAED,eAAe,GAAA;QACX,IAAI,CAAC,QAAQ,GAAG,IAAI,CAAC,WAAW,CAAC,QAAQ,CAAC,KAAK,CAAC;QAEhD,IAAI,CAAC,YAAY,CAAC,oBAAoB,CAAC,IAAI,CAAC,cAAc,CAAC,CAAC;KAC/D;IAED,eAAe,GAAA;QACX,IAAI,CAAC,QAAQ,GAAG,IAAI,CAAC,WAAW,CAAC,QAAQ,CAAC,KAAK,CAAC;QAEhD,IAAI,IAAI,CAAC,QAAQ,EAAE;AACf,YAAA,IAAI,CAAC,sBAAsB,CAAC,IAAI,CAAC,QAAQ,CAAC,CAAC;AAC9C,SAAA;QAED,IAAI,CAAC,YAAY,CAAC,oBAAoB,CAAC,IAAI,CAAC,cAAc,CAAC,CAAC;KAC/D;AAEK,IAAA,sBAAsB,CAAC,QAAQ,EAAA;;YACjC,IAAI,WAAW,GAAG,EAAE,CAAC;AACrB,YAAA,WAAW,CAAC,UAAU,CAAC,GAAG,CAAC,QAAQ,CAAC,CAAC;AAErC,YAAA,IAAI,CAAC,UAAU,IAAiB,MAAM,IAAI,CAAC,gBAAgB,CAAC,sBAAsB,CAAC,IAAI,CAAC,KAAK,EAAE,WAAW,CAAC,CAAA,CAAC;SAC/G,CAAA,CAAA;AAAA,KAAA;IAEK,UAAU,GAAA;;;YAEZ,IAAI,CAAC,YAAY,CAAC,oBAAoB,CAAC,IAAI,CAAC,cAAc,CAAC,CAAC;YAE5D,IAAI,CAAC,IAAI,CAAC,UAAU,IAAI,IAAI,CAAC,UAAU,CAAC,MAAM,IAAI,CAAC,IAAI,CAAC,IAAI,CAAC,UAAU,CAAC,CAAC,CAAC,CAAC,IAAI,CAAC,EAAE;gBAC9E,MAAM,IAAI,CAAC,sBAAsB,CAAC,IAAI,CAAC,QAAQ,CAAC,CAAC;AACpD,aAAA;AAED,YAAA,IAAI,IAAI,CAAC,iBAAiB,EAAE,EAAE;AAC1B,gBAAA,IAAI,CAAC,YAAY,CAAC,SAAS,CAAC,WAAW,CAAC,kBAAkB,EAAE,WAAW,CAAC,oBAAoB,EAAE,WAAW,CAAC,KAAK,CAAC,CAAC;gBACjH,OAAO;AACV,aAAA;AAED,YAAA,IAAI,IAAI,CAAC,SAAS,IAAI,IAAI,CAAC,OAAO,EAAE;gBAChC,IAAI,CAAC,YAAY,CAAC,kBAAkB,CAAC,IAAI,CAAC,cAAc,EAAE,eAAe,CAAC,kBAAkB,EAAE,eAAe,CAAC,oBAAoB,EAAE,oBAAoB,CAAC,IAAI,EAAE,oBAAoB,CAAC,SAAS,CAAC,CAAC;gBAC/L,OAAO;AACV,aAAA;AAED,YAAA,IAAI,CAAC,aAAa,GAAG,IAAI,CAAC,iBAAiB,CAAC,IAAI,CAAC,SAAS,EAAE,IAAI,CAAC,OAAO,CAAC,CAAC;AAE1E,YAAA,IAAI,IAAI,CAAC,aAAa,IAAI,CAAC,EAAE;gBAEzB,IAAI;AACA,oBAAA,IAAI,CAAC,UAAU,GAAG,IAAI,CAAC;AAEvB,oBAAA,MAAM,WAAW,GAAG,IAAI,CAAC,iBAAiB,EAAE,CAAC;AAE7C,oBAAA,IAAI,CAAC,UAAU,GAAG,MAAM,IAAI,CAAC,oBAAoB,CAAC,gBAAgB,CAAC,IAAI,CAAC,KAAK,EAAE,WAAW,CAAC,CAAC;AAE5F,oBAAA,IAAI,CAAA,CAAA,EAAA,GAAA,IAAI,CAAC,UAAU,MAAE,IAAA,IAAA,EAAA,KAAA,KAAA,CAAA,GAAA,KAAA,CAAA,GAAA,EAAA,CAAA,MAAM,IAAG,CAAC,IAAI,EAAC,CAAA,EAAA,GAAA,IAAI,CAAC,UAAU,MAAE,IAAA,IAAA,EAAA,KAAA,KAAA,CAAA,GAAA,KAAA,CAAA,GAAA,EAAA,CAAA,KAAK,CAAC,IAAI,IAAI,IAAI,CAAC,IAAI,CAAC,MAAM,IAAI,CAAC,CAAC,CAAA,EAAE;AACvF,wBAAA,IAAI,CAAC,SAAS,GAAG,IAAI,CAAC,aAAa,CAAC,gBAAgB,CAAC,IAAI,CAAC,UAAU,CAAC,CAAC;wBACtE,IAAI,CAAC,WAAW,GAAG,IAAI,CAAC,aAAa,CAAC,aAAa,CAAC,IAAI,CAAC,SAAS,EAAE,IAAI,CAAC,UAAU,EAAE,IAAI,CAAC,cAAc,CAAC,SAAS,CAAC,CAAC;AACvH,qBAAA;AAAM,yBAAA;wBACH,IAAI,CAAC,YAAY,CAAC,kBAAkB,CAAC,IAAI,CAAC,cAAc,EAAE,eAAe,CAAC,oBAAoB,EAAE,eAAe,CAAC,sBAAsB,EAAE,oBAAoB,CAAC,OAAO,EAAE,oBAAoB,CAAC,YAAY,CAAC,CAAC;AAC5M,qBAAA;AAEJ,iBAAA;AAAC,gBAAA,OAAO,KAAK,EAAE;AACZ,oBAAA,OAAO,CAAC,KAAK,CAAC,uBAAuB,EAAE,KAAK,CAAC,CAAC;oBAC9C,IAAI,CAAC,YAAY,CAAC,kBAAkB,CAAC,IAAI,CAAC,cAAc,EAAE,eAAe,CAAC,mBAAmB,EAAE,eAAe,CAAC,qBAAqB,EAAE,oBAAoB,CAAC,MAAM,EAAE,oBAAoB,CAAC,WAAW,CAAC,CAAC;AACxM,iBAAA;AAAS,wBAAA;AACN,oBAAA,IAAI,CAAC,UAAU,GAAG,KAAK,CAAC;AAC3B,iBAAA;AAEJ,aAAA;AAAM,iBAAA;gBACH,IAAI,CAAC,YAAY,CAAC,kBAAkB,CAAC,IAAI,CAAC,cAAc,EAAE,eAAe,CAAC,mBAAmB,EAAE,eAAe,CAAC,6BAA6B,EAAE,oBAAoB,CAAC,IAAI,EAAE,oBAAoB,CAAC,SAAS,CAAC,CAAC;AAC5M,aAAA;;AAEJ,KAAA;AAEK,IAAA,cAAc,CAAC,MAAc,EAAA;;YAC/B,IAAI,CAAC,YAAY,CAAC,oBAAoB,CAAC,IAAI,CAAC,cAAc,CAAC,CAAC;YAE5D,IAAI,CAAC,IAAI,CAAC,UAAU,IAAI,IAAI,CAAC,UAAU,CAAC,MAAM,IAAI,CAAC,IAAI,CAAC,IAAI,CAAC,UAAU,CAAC,CAAC,CAAC,CAAC,IAAI,CAAC,EAAE;gBAC9E,MAAM,IAAI,CAAC,sBAAsB,CAAC,IAAI,CAAC,QAAQ,CAAC,CAAC;AACpD,aAAA;AAED,YAAA,IAAI,IAAI,CAAC,iBAAiB,EAAE,EAAE;AAC1B,gBAAA,IAAI,CAAC,YAAY,CAAC,SAAS,CAAC,WAAW,CAAC,kBAAkB,EAAE,WAAW,CAAC,oBAAoB,EAAE,WAAW,CAAC,KAAK,CAAC,CAAC;gBACjH,OAAO;AACV,aAAA;AAED,YAAA,IAAI,IAAI,CAAC,SAAS,IAAI,IAAI,CAAC,OAAO,EAAE;gBAChC,IAAI,CAAC,YAAY,CAAC,kBAAkB,CAAC,IAAI,CAAC,cAAc,EAAE,eAAe,CAAC,kBAAkB,EAAE,eAAe,CAAC,oBAAoB,EAAE,oBAAoB,CAAC,IAAI,EAAE,oBAAoB,CAAC,SAAS,CAAC,CAAC;gBAC/L,OAAO;AACV,aAAA;AAED,YAAA,IAAI,CAAC,aAAa,GAAG,IAAI,CAAC,iBAAiB,CAAC,IAAI,CAAC,SAAS,EAAE,IAAI,CAAC,OAAO,CAAC,CAAC;AAE1E,YAAA,IAAI,IAAI,CAAC,aAAa,IAAI,CAAC,EAAE;gBACzB,IAAI;AACA,oBAAA,MAAM,WAAW,GAAG,IAAI,qBAAqB,EAAE,CAAC;AAEhD,oBAAA,WAAW,CAAC,OAAO,GAAG,IAAI,CAAC,iBAAiB,EAAE,CAAC;AAC/C,oBAAA,WAAW,CAAC,UAAU,GAAG,kBAAkB,CAAC;AAC5C,oBAAA,WAAW,CAAC,YAAY,GAAG,MAAM,CAAC;AAElC,oBAAA,MAAM,IAAI,CAAC,aAAa,CAAC,cAAc,CAAC,IAAI,CAAC,KAAK,EAAE,WAAW,CAAC,CAAC;AAEpE,iBAAA;AAAC,gBAAA,OAAO,KAAK,EAAE;AACZ,oBAAA,OAAO,CAAC,KAAK,CAAC,2BAA2B,EAAE,KAAK,CAAC,CAAC;AACrD,iBAAA;AAAS,wBAAA;AACN,oBAAA,IAAI,CAAC,UAAU,GAAG,KAAK,CAAC;AAC3B,iBAAA;AACJ,aAAA;AAAM,iBAAA;gBACH,IAAI,CAAC,YAAY,CAAC,kBAAkB,CAAC,IAAI,CAAC,cAAc,EAAE,eAAe,CAAC,mBAAmB,EAAE,eAAe,CAAC,6BAA6B,EAAE,oBAAoB,CAAC,IAAI,EAAE,oBAAoB,CAAC,SAAS,CAAC,CAAC;AAC5M,aAAA;SACJ,CAAA,CAAA;AAAA,KAAA;IAED,iBAAiB,GAAA;AACb,QAAA,MAAM,WAAW,GAAG,IAAI,oBAAoB,EAAE,CAAC;AAE/C,QAAA,WAAW,CAAC,SAAS,GAAG,IAAI,CAAC,SAAS,CAAC;AACvC,QAAA,WAAW,CAAC,OAAO,GAAG,IAAI,CAAC,OAAO,CAAC;AACnC,QAAA,WAAW,CAAC,QAAQ,GAAG,KAAK,CAAC;QAC7B,WAAW,CAAC,QAAQ,GAAG,CAAC,IAAI,CAAC,QAAQ,CAAC,CAAC;QACvC,WAAW,CAAC,QAAQ,GAAG,CAAC,IAAI,CAAC,QAAQ,CAAC,CAAC;AAEvC,QAAA,WAAW,CAAC,MAAM,GAAG,IAAI,CAAC,UAAU,CAAC,GAAG,CAAC,KAAK,KAAK;YAC/C,IAAI,EAAE,KAAK,CAAC,WAAW;AACvB,YAAA,KAAK,EAAE,KAAK;AACZ,YAAA,GAAG,EAAE,KAAK;AACb,SAAA,CAAC,CAAC,CAAC;QACJ,WAAW,CAAC,aAAa,EAAE,CAAC;AAE5B,QAAA,OAAO,WAAW,CAAC;KACtB;IAED,iBAAiB,GAAA;AACb,QAAA,MAAM,QAAQ,GAAG;YACb,IAAI,CAAC,eAAe,CAAC,WAAW;YAChC,IAAI,CAAC,WAAW,CAAC,QAAQ;YACzB,IAAI,CAAC,WAAW,CAAC,QAAQ;SAC5B,CAAC;AAEF,QAAA,QAAQ,CAAC,OAAO,CAAC,OAAO,IAAI,OAAO,CAAC,aAAa,EAAE,CAAC,CAAC;AACrD,QAAA,OAAO,QAAQ,CAAC,IAAI,CAAC,OAAO,IAAI,OAAO,CAAC,OAAO,CAAC,CAAC;KACpD;IAED,iBAAiB,CAAC,SAAiB,EAAE,OAAe,EAAA;QAChD,MAAM,KAAK,GAAG,IAAI,IAAI,CAAC,SAAS,CAAC,CAAC,OAAO,EAAE,CAAC;QAC5C,MAAM,KAAK,GAAG,IAAI,IAAI,CAAC,OAAO,CAAC,CAAC,OAAO,EAAE,CAAC;QAC1C,MAAM,QAAQ,GAAG,IAAI,CAAC,GAAG,CAAC,KAAK,GAAG,KAAK,CAAC,CAAC;AACzC,QAAA,MAAM,QAAQ,GAAG,IAAI,CAAC,IAAI,CAAC,QAAQ,IAAI,IAAI,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,CAAC,CAAC,CAAC;AAC7D,QAAA,OAAO,QAAQ,CAAC;KACnB;;oHAzMQ,sBAAsB,EAAA,IAAA,EAAA,CAAA,EAAA,KAAA,EAAA5B,IAAA,CAAA,cAAA,EAAA,EAAA,EAAA,KAAA,EAAAC,IAAA,CAAA,aAAA,EAAA,EAAA,EAAA,KAAA,EAAAwB,oBAAA,EAAA,EAAA,EAAA,KAAA,EAAAsB,gBAAA,EAAA,EAAA,EAAA,KAAA,EAAAuB,aAAA,EAAA,EAAA,EAAA,KAAA,EAAAC,YAAA,EAAA,CAAA,EAAA,MAAA,EAAA,EAAA,CAAA,eAAA,CAAA,SAAA,EAAA,CAAA,CAAA;AAAtB,sBAAA,CAAA,IAAA,GAAA,EAAA,CAAA,oBAAA,CAAA,EAAA,UAAA,EAAA,QAAA,EAAA,OAAA,EAAA,SAAA,EAAA,IAAA,EAAA,sBAAsB,kWChCnC,gnIAiFM,EAAA,UAAA,EAAA,CAAA,EAAA,IAAA,EAAA/D,EAAA,CAAA,kBAAA,EAAA,QAAA,EAAA,gBAAA,EAAA,MAAA,EAAA,CAAA,gCAAA,EAAA,uBAAA,EAAA,cAAA,EAAA,kBAAA,EAAA,aAAA,EAAA,aAAA,EAAA,UAAA,EAAA,UAAA,EAAA,cAAA,EAAA,qBAAA,EAAA,cAAA,EAAA,sBAAA,EAAA,wBAAA,EAAA,kBAAA,CAAA,EAAA,OAAA,EAAA,CAAA,YAAA,CAAA,EAAA,EAAA,EAAA,IAAA,EAAAoF,eAAA,EAAA,QAAA,EAAA,YAAA,EAAA,MAAA,EAAA,CAAA,iBAAA,CAAA,EAAA,OAAA,EAAA,CAAA,YAAA,CAAA,EAAA,EAAA,EAAA,IAAA,EAAAC,eAAA,EAAA,QAAA,EAAA,YAAA,EAAA,MAAA,EAAA,CAAA,iBAAA,EAAA,WAAA,CAAA,EAAA,OAAA,EAAA,CAAA,YAAA,CAAA,EAAA,EAAA,EAAA,IAAA,EAAAC,uBAAA,EAAA,QAAA,EAAA,qBAAA,EAAA,MAAA,EAAA,CAAA,oBAAA,CAAA,EAAA,OAAA,EAAA,CAAA,iBAAA,CAAA,EAAA,EAAA,EAAA,IAAA,EAAAlF,EAAA,CAAA,qBAAA,EAAA,QAAA,EAAA,mBAAA,EAAA,MAAA,EAAA,CAAA,qBAAA,EAAA,qBAAA,EAAA,UAAA,EAAA,YAAA,EAAA,iBAAA,CAAA,EAAA,EAAA,EAAA,IAAA,EAAAA,EAAA,CAAA,iBAAA,EAAA,QAAA,EAAA,qBAAA,EAAA,MAAA,EAAA,CAAA,OAAA,EAAA,YAAA,EAAA,OAAA,CAAA,EAAA,CAAA,EAAA,UAAA,EAAA,CAAA,EAAA,IAAA,EAAAC,GAAA,CAAA,SAAA,EAAA,QAAA,EAAA,2BAAA,EAAA,MAAA,EAAA,CAAA,iBAAA,EAAA,mBAAA,EAAA,kBAAA,EAAA,gBAAA,EAAA,oBAAA,EAAA,mBAAA,EAAA,oBAAA,CAAA,EAAA,QAAA,EAAA,CAAA,WAAA,CAAA,EAAA,EAAA,EAAA,IAAA,EAAAC,GAAA,CAAA,IAAA,EAAA,QAAA,EAAA,QAAA,EAAA,MAAA,EAAA,CAAA,MAAA,EAAA,UAAA,EAAA,UAAA,CAAA,EAAA,EAAA,EAAA,IAAA,EAAAA,GAAA,CAAA,OAAA,EAAA,QAAA,EAAA,kBAAA,EAAA,MAAA,EAAA,CAAA,SAAA,EAAA,cAAA,EAAA,eAAA,CAAA,EAAA,CAAA,EAAA,CAAA,CAAA;4FDjDO,sBAAsB,EAAA,UAAA,EAAA,CAAA;kBANlC,SAAS;AAAC,YAAA,IAAA,EAAA,CAAA;AACP,oBAAA,QAAQ,EAAE,cAAc;AACxB,oBAAA,WAAW,EAAE,2BAA2B;AACxC,oBAAA,MAAM,EAAE,EACP;AACJ,iBAAA,CAAA;kPA8BiC,eAAe,EAAA,CAAA;sBAA5C,SAAS;uBAAC,iBAAiB,CAAA;gBACF,WAAW,EAAA,CAAA;sBAApC,SAAS;uBAAC,aAAa,CAAA;gBACE,WAAW,EAAA,CAAA;sBAApC,SAAS;uBAAC,aAAa,CAAA;;;AE1D5B,MAAMc,QAAM,GAAW;AACnB,IAAA;AACI,QAAA,IAAI,EAAE,EAAE;AACR,QAAA,SAAS,EAAE,sBAAsB;AACpC,KAAA;CACJ,CAAC;MAOW,0BAA0B,CAAA;;wHAA1B,0BAA0B,EAAA,IAAA,EAAA,EAAA,EAAA,MAAA,EAAA,EAAA,CAAA,eAAA,CAAA,QAAA,EAAA,CAAA,CAAA;AAA1B,0BAAA,CAAA,IAAA,GAAA,EAAA,CAAA,mBAAA,CAAA,EAAA,UAAA,EAAA,QAAA,EAAA,OAAA,EAAA,SAAA,EAAA,QAAA,EAAA,EAAA,EAAA,IAAA,EAAA,0BAA0B,0CAHzB,YAAY,CAAA,EAAA,CAAA,CAAA;yHAGb,0BAA0B,EAAA,OAAA,EAAA,CAJ1B,CAAC,YAAY,CAAC,QAAQ,CAACA,QAAM,CAAC,CAAC,EAC9B,YAAY,CAAA,EAAA,CAAA,CAAA;4FAGb,0BAA0B,EAAA,UAAA,EAAA,CAAA;kBALtC,QAAQ;AAAC,YAAA,IAAA,EAAA,CAAA;oBACN,OAAO,EAAE,CAAC,YAAY,CAAC,QAAQ,CAACA,QAAM,CAAC,CAAC;oBACxC,OAAO,EAAE,CAAC,YAAY,CAAC;AAC1B,iBAAA,CAAA;;;ACCD;MAmBa,mBAAmB,CAAA;;iHAAnB,mBAAmB,EAAA,IAAA,EAAA,EAAA,EAAA,MAAA,EAAA,EAAA,CAAA,eAAA,CAAA,QAAA,EAAA,CAAA,CAAA;kHAAnB,mBAAmB,EAAA,YAAA,EAAA,CAfxB,sBAAsB,CAAA,EAAA,OAAA,EAAA,CAGtB,YAAY;QACZ,0BAA0B;QAC1B,eAAe;QACf,YAAY;QACZ,YAAY;QACZ,oBAAoB;QACpB,cAAc;QACd,kBAAkB;QAClB,cAAc;QACd,eAAe,CAAA,EAAA,CAAA,CAAA;AAGV,mBAAA,CAAA,IAAA,GAAA,EAAA,CAAA,mBAAA,CAAA,EAAA,UAAA,EAAA,QAAA,EAAA,OAAA,EAAA,SAAA,EAAA,QAAA,EAAA,EAAA,EAAA,IAAA,EAAA,mBAAmB,EAbnB,OAAA,EAAA,CAAA;YACL,YAAY;YACZ,0BAA0B;YAC1B,eAAe;YACf,YAAY;YACZ,YAAY;YACZ,oBAAoB;YACpB,cAAc;YACd,kBAAkB;YAClB,cAAc;YACd,eAAe;AAClB,SAAA,CAAA,EAAA,CAAA,CAAA;4FAEQ,mBAAmB,EAAA,UAAA,EAAA,CAAA;kBAjB/B,QAAQ;AAAC,YAAA,IAAA,EAAA,CAAA;AACN,oBAAA,YAAY,EAAE;wBACV,sBAAsB;AACzB,qBAAA;AACD,oBAAA,OAAO,EAAE;wBACL,YAAY;wBACZ,0BAA0B;wBAC1B,eAAe;wBACf,YAAY;wBACZ,YAAY;wBACZ,oBAAoB;wBACpB,cAAc;wBACd,kBAAkB;wBAClB,cAAc;wBACd,eAAe;AAClB,qBAAA;AACJ,iBAAA,CAAA;;;ACTD;MAQa,uBAAuB,CAAA;AA0ChC,IAAA,WAAA,CACY,MAAc,EACd,cAA8B,EAC9B,YAA2B,EAC3B,oBAA0C,EAC1C,gBAAkC,EAClC,aAA4B,EAC5B,YAA0B,EAC1B,gBAAkC,EAAA;QAPlC,IAAM,CAAA,MAAA,GAAN,MAAM,CAAQ;QACd,IAAc,CAAA,cAAA,GAAd,cAAc,CAAgB;QAC9B,IAAY,CAAA,YAAA,GAAZ,YAAY,CAAe;QAC3B,IAAoB,CAAA,oBAAA,GAApB,oBAAoB,CAAsB;QAC1C,IAAgB,CAAA,gBAAA,GAAhB,gBAAgB,CAAkB;QAClC,IAAa,CAAA,aAAA,GAAb,aAAa,CAAe;QAC5B,IAAY,CAAA,YAAA,GAAZ,YAAY,CAAc;QAC1B,IAAgB,CAAA,gBAAA,GAAhB,gBAAgB,CAAkB;QAhD9C,IAAiB,CAAA,iBAAA,GAAG,iBAAiB,CAAC;QACtC,IAAe,CAAA,eAAA,GAAG,eAAe,CAAC;QAClC,IAAqB,CAAA,qBAAA,GAAG,oCAAoC,CAAC;QAE7D,IAA2B,CAAA,2BAAA,GAAG,2BAA2B,CAAC;QAC1D,IAAe,CAAA,eAAA,GAAG,eAAe,CAAC;QAClC,IAAc,CAAA,cAAA,GAAG,cAAc,CAAC;QAChC,IAAiB,CAAA,iBAAA,GAAG,iBAAiB,CAAC;QACtC,IAAY,CAAA,YAAA,GAAG,YAAY,CAAC;QAC5B,IAAa,CAAA,aAAA,GAAG,aAAa,CAAC;QAa9B,IAAc,CAAA,cAAA,GAAU,EAAE,CAAC;QAC3B,IAAa,CAAA,aAAA,GAAU,EAAE,CAAC;QAC1B,IAAmB,CAAA,mBAAA,GAAW,CAAC,CAAC;QAMhC,IAAS,CAAA,SAAA,GAAY,KAAK,CAAC;QAC3B,IAAU,CAAA,UAAA,GAAY,KAAK,CAAC;AAE5B,QAAA,IAAA,CAAA,cAAc,GAAW,IAAI,KAAK,EAAE,CAAC;AAErC,QAAA,IAAA,CAAA,WAAW,GAAgB,IAAI,WAAW,CAAC,EAAE,EAAE,CAAC,UAAU,CAAC,QAAQ,CAAC,CAAC,CAAC;KAcjE;IAEL,QAAQ,GAAA;QACJ,IAAI,CAAC,KAAK,GAAG,IAAI,CAAC,cAAc,CAAC,UAAU,CAAC,cAAc,CAAC,CAAC;QAC5D,IAAI,CAAC,QAAQ,GAAG,IAAI,CAAC,cAAc,CAAC,UAAU,CAAC,UAAU,CAAC,CAAC;QAC3D,IAAI,CAAC,gBAAgB,GAAG,IAAI,CAAC,cAAc,CAAC,UAAU,CAAC,kBAAkB,CAAC,CAAC;AAE3E,QAAA,MAAM,eAAe,GAAG,IAAI,CAAC,gBAAgB,IAAI,gBAAgB,CAAC,YAAY,GAAG,OAAO,GAAG,QAAQ,CAAC;AACpG,QAAA,IAAI,CAAC,SAAS,GAAG,CAAG,EAAA,eAAe,kBAAkB,CAAC;QAEtD,IAAI,CAAC,uBAAuB,EAAE,CAAC;KAClC;IAEK,uBAAuB,GAAA;;AACzB,YAAA,MAAM,iBAAiB,GAA0B,MAAM,IAAI,CAAC,gBAAgB,CAAC,uBAAuB,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC;AAEjH,YAAA,IAAI,CAAC,iBAAiB,GAAG,iBAAiB,CAAC,oBAAoB,CAAC;YAEhE,IAAI,CAAC,mBAAmB,GAAG,IAAI,CAAC,iBAAiB,CAAC,MAAM,CAAC;YACzD,IAAI,CAAC,iBAAiB,CAAC,OAAO,CAAC,SAAS,IAAI,IAAI,CAAC,cAAc,CAAC,IAAI,CAAC,SAAS,CAAC,aAAa,CAAC,CAAC,CAAC,CAAC;SACnG,CAAA,CAAA;AAAA,KAAA;IAED,aAAa,GAAA;QACT,IAAI,CAAC,SAAS,GAAG,IAAI,CAAC,eAAe,CAAC,WAAW,CAAC,KAAK,CAAC;QACxD,IAAI,CAAC,OAAO,GAAG,IAAI,CAAC,eAAe,CAAC,SAAS,CAAC,KAAK,CAAC;QAEpD,IAAI,CAAC,YAAY,CAAC,oBAAoB,CAAC,IAAI,CAAC,cAAc,CAAC,CAAC;KAC/D;IAED,oBAAoB,GAAA;QAChB,IAAI,CAAC,WAAW,GAAG,IAAI,CAAC,gBAAgB,CAAC,aAAa,CAAC,KAAK,CAAC;QAE7D,IAAI,CAAC,YAAY,CAAC,oBAAoB,CAAC,IAAI,CAAC,cAAc,CAAC,CAAC;KAC/D;IAED,mBAAmB,GAAA;AACf,QAAA,IAAI,CAAC,IAAI,CAAC,WAAW,CAAC,KAAK,CAAC,QAAQ,CAAC,CAAC,CAAC,CAAC,EAAE;AACtC,YAAA,IAAI,CAAC,WAAW,CAAC,KAAK,CAAC,EAAE,CAAC,CAAC;YAC3B,OAAO;AACV,SAAA;AACD,QAAA,IAAI,CAAC,WAAW,CAAC,QAAQ,CAAC,CAAC,CAAC,CAAC,EAAE,GAAG,IAAI,CAAC,cAAc,CAAC,CAAC,CAAC;QAExD,IAAI,CAAC,cAAc,EAAE,CAAC;KACzB;IAED,kBAAkB,GAAA;AACd,QAAA,MAAM,QAAQ,GAAG,IAAI,CAAC,WAAW,CAAC,KAAK,CAAC;AAExC,QAAA,IAAI,QAAQ,CAAC,QAAQ,CAAC,CAAC,CAAC,CAAC,EAAE;YACvB,QAAQ,CAAC,KAAK,EAAE,CAAC;AACjB,YAAA,IAAI,CAAC,WAAW,CAAC,UAAU,CAAC,QAAQ,CAAC,CAAC;AACzC,SAAA;aAAM,IAAI,IAAI,CAAC,WAAW,CAAC,KAAK,CAAC,MAAM,IAAI,IAAI,CAAC,mBAAmB,EAAE;AAClE,YAAA,IAAI,CAAC,cAAc,CAAC,MAAM,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC;YACrC,IAAI,CAAC,WAAW,CAAC,UAAU,CAAC,IAAI,CAAC,cAAc,CAAC,CAAC;AACpD,SAAA;AAAM,aAAA;AACH,YAAA,MAAM,gBAAgB,GAAG,QAAQ,CAAC,MAAM,CAAC,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC;AACvD,YAAA,IAAI,CAAC,WAAW,CAAC,UAAU,CAAC,gBAAgB,CAAC,CAAC;AACjD,SAAA;QAED,IAAI,CAAC,cAAc,EAAE,CAAC;KACzB;IAED,cAAc,GAAA;AACV,QAAA,IAAI,WAAW,GAAG,IAAI,CAAC,WAAW,CAAC,KAAK,CAAC;AAEzC,QAAA,IAAI,WAAW,CAAC,MAAM,GAAG,CAAC,EAAE;YACxB,IAAI,CAAC,aAAa,GAAG,IAAI,CAAC,gBAAgB,CAAC,iBAAiB,CAAC,WAAW,CAAC,CAAC;AAC7E,SAAA;QAED,IAAI,CAAC,YAAY,CAAC,oBAAoB,CAAC,IAAI,CAAC,cAAc,CAAC,CAAC;KAC/D;IAEK,UAAU,GAAA;;;YAEZ,IAAI,CAAC,YAAY,CAAC,oBAAoB,CAAC,IAAI,CAAC,cAAc,CAAC,CAAC;AAE5D,YAAA,IAAI,IAAI,CAAC,iBAAiB,EAAE,EAAE;AAC1B,gBAAA,IAAI,CAAC,YAAY,CAAC,SAAS,CAAC,WAAW,CAAC,kBAAkB,EAAE,WAAW,CAAC,oBAAoB,EAAE,WAAW,CAAC,KAAK,CAAC,CAAC;gBACjH,OAAO;AACV,aAAA;AAED,YAAA,IAAI,IAAI,CAAC,SAAS,IAAI,IAAI,CAAC,OAAO,EAAE;gBAChC,IAAI,CAAC,YAAY,CAAC,kBAAkB,CAAC,IAAI,CAAC,cAAc,EAAE,eAAe,CAAC,kBAAkB,EAAE,eAAe,CAAC,oBAAoB,EAAE,oBAAoB,CAAC,IAAI,EAAE,oBAAoB,CAAC,SAAS,CAAC,CAAC;gBAC/L,OAAO;AACV,aAAA;AAED,YAAA,IAAI,CAAC,UAAU,GAAG,IAAI,CAAC;YAEvB,IAAI;AACA,gBAAA,MAAM,WAAW,GAAG,IAAI,CAAC,iBAAiB,EAAE,CAAC;AAE7C,gBAAA,IAAI,CAAC,UAAU,GAAG,MAAM,IAAI,CAAC,oBAAoB,CAAC,gBAAgB,CAAC,IAAI,CAAC,KAAK,EAAE,WAAW,CAAC,CAAC;AAE5F,gBAAA,IAAI,CAAA,CAAA,EAAA,GAAA,IAAI,CAAC,UAAU,MAAE,IAAA,IAAA,EAAA,KAAA,KAAA,CAAA,GAAA,KAAA,CAAA,GAAA,EAAA,CAAA,MAAM,IAAG,CAAC,IAAI,EAAC,CAAA,EAAA,GAAA,IAAI,CAAC,UAAU,MAAE,IAAA,IAAA,EAAA,KAAA,KAAA,CAAA,GAAA,KAAA,CAAA,GAAA,EAAA,CAAA,KAAK,CAAC,IAAI,IAAI,IAAI,CAAC,IAAI,CAAC,MAAM,IAAI,CAAC,CAAC,CAAA,EAAE;AACvF,oBAAA,IAAI,CAAC,SAAS,GAAG,IAAI,CAAC,aAAa,CAAC,gBAAgB,CAAC,IAAI,CAAC,UAAU,CAAC,CAAC;oBACtE,IAAI,CAAC,WAAW,GAAG,IAAI,CAAC,aAAa,CAAC,aAAa,CAAC,IAAI,CAAC,SAAS,EAAE,IAAI,CAAC,UAAU,EAAE,IAAI,CAAC,cAAc,CAAC,SAAS,CAAC,CAAC;AACvH,iBAAA;AAAM,qBAAA;oBACH,IAAI,CAAC,YAAY,CAAC,kBAAkB,CAAC,IAAI,CAAC,cAAc,EAAE,eAAe,CAAC,oBAAoB,EAAE,eAAe,CAAC,sBAAsB,EAAE,oBAAoB,CAAC,OAAO,EAAE,oBAAoB,CAAC,YAAY,CAAC,CAAC;AAC5M,iBAAA;AAEJ,aAAA;AAAC,YAAA,OAAO,KAAK,EAAE;AACZ,gBAAA,OAAO,CAAC,KAAK,CAAC,uBAAuB,EAAE,KAAK,CAAC,CAAC;gBAC9C,IAAI,CAAC,YAAY,CAAC,kBAAkB,CAAC,IAAI,CAAC,cAAc,EAAE,eAAe,CAAC,mBAAmB,EAAE,eAAe,CAAC,qBAAqB,EAAE,oBAAoB,CAAC,MAAM,EAAE,oBAAoB,CAAC,WAAW,CAAC,CAAC;AACxM,aAAA;AAAS,oBAAA;AACN,gBAAA,IAAI,CAAC,UAAU,GAAG,KAAK,CAAC;AAC3B,aAAA;;AACJ,KAAA;AAEK,IAAA,cAAc,CAAC,MAAc,EAAA;;YAC/B,IAAI,CAAC,YAAY,CAAC,oBAAoB,CAAC,IAAI,CAAC,cAAc,CAAC,CAAC;AAE5D,YAAA,IAAI,IAAI,CAAC,iBAAiB,EAAE,EAAE;AAC1B,gBAAA,IAAI,CAAC,YAAY,CAAC,SAAS,CAAC,WAAW,CAAC,kBAAkB,EAAE,WAAW,CAAC,oBAAoB,EAAE,WAAW,CAAC,KAAK,CAAC,CAAC;gBACjH,OAAO;AACV,aAAA;AAED,YAAA,IAAI,IAAI,CAAC,SAAS,IAAI,IAAI,CAAC,OAAO,EAAE;gBAChC,IAAI,CAAC,YAAY,CAAC,kBAAkB,CAAC,IAAI,CAAC,cAAc,EAAE,eAAe,CAAC,kBAAkB,EAAE,eAAe,CAAC,oBAAoB,EAAE,oBAAoB,CAAC,IAAI,EAAE,oBAAoB,CAAC,SAAS,CAAC,CAAC;gBAC/L,OAAO;AACV,aAAA;AAED,YAAA,IAAI,CAAC,UAAU,GAAG,IAAI,CAAC;YAEvB,IAAI;AACA,gBAAA,MAAM,WAAW,GAAG,IAAI,qBAAqB,EAAE,CAAC;AAEhD,gBAAA,WAAW,CAAC,OAAO,GAAG,IAAI,CAAC,iBAAiB,EAAE,CAAC;AAC/C,gBAAA,WAAW,CAAC,UAAU,GAAG,IAAI,CAAC,SAAS,CAAC;AACxC,gBAAA,WAAW,CAAC,YAAY,GAAG,MAAM,CAAC;AAElC,gBAAA,MAAM,IAAI,CAAC,aAAa,CAAC,cAAc,CAAC,IAAI,CAAC,KAAK,EAAE,WAAW,CAAC,CAAC;AAEpE,aAAA;AAAC,YAAA,OAAO,KAAK,EAAE;AACZ,gBAAA,OAAO,CAAC,KAAK,CAAC,2BAA2B,EAAE,KAAK,CAAC,CAAC;AACrD,aAAA;AAAS,oBAAA;AACN,gBAAA,IAAI,CAAC,UAAU,GAAG,KAAK,CAAC;AAC3B,aAAA;SACJ,CAAA,CAAA;AAAA,KAAA;IAED,iBAAiB,GAAA;;AAEb,QAAA,IAAI,SAAS,CAAC;QAEd,IAAI,CAAA,CAAA,EAAA,GAAA,IAAI,CAAC,WAAW,CAAC,KAAK,MAAE,IAAA,IAAA,EAAA,KAAA,KAAA,CAAA,GAAA,KAAA,CAAA,GAAA,EAAA,CAAA,MAAM,IAAG,CAAC,EAAE;AACpC,YAAA,SAAS,GAAG,IAAI,CAAC,gBAAgB,CAAC,iBAAiB,CAAC,IAAI,CAAC,WAAW,CAAC,KAAK,CAAC,CAAC;AAC/E,SAAA;AAED,QAAA,MAAM,WAAW,GAAG,IAAI,oBAAoB,EAAE,CAAC;AAE/C,QAAA,WAAW,CAAC,SAAS,GAAG,IAAI,CAAC,SAAS,CAAC;AACvC,QAAA,WAAW,CAAC,OAAO,GAAG,IAAI,CAAC,OAAO,CAAC;AACnC,QAAA,WAAW,CAAC,QAAQ,GAAG,IAAI,CAAC,WAAW,CAAC;QACxC,WAAW,CAAC,MAAM,GAAG,SAAS,CAAC,GAAG,CAAC,KAAK,KAAK;AACzC,YAAA,IAAI,EAAE,KAAK;AACX,YAAA,KAAK,EAAE,KAAK;AACZ,YAAA,GAAG,EAAE,KAAK;AACV,YAAA,cAAc,EAAE,QAAQ;AACxB,YAAA,cAAc,EAAE,KAAK;AACxB,SAAA,CAAC,CAAC,CAAC;QACJ,WAAW,CAAC,aAAa,EAAE,CAAC;AAE5B,QAAA,OAAO,WAAW,CAAC;KACtB;IAED,iBAAiB,GAAA;AACb,QAAA,MAAM,QAAQ,GAAG;YACb,IAAI,CAAC,eAAe,CAAC,WAAW;YAChC,IAAI,CAAC,gBAAgB,CAAC,aAAa;AACnC,YAAA,IAAI,CAAC,WAAW;SACnB,CAAC;AAEF,QAAA,QAAQ,CAAC,OAAO,CAAC,OAAO,IAAI,OAAO,CAAC,aAAa,EAAE,CAAC,CAAC;AACrD,QAAA,OAAO,QAAQ,CAAC,IAAI,CAAC,OAAO,IAAI,OAAO,CAAC,OAAO,CAAC,CAAC;KACpD;AAED,IAAA,cAAc,CAAC,KAAK,EAAA;AAChB,QAAA,IAAI,KAAK,EAAE;AACP,YAAA,MAAM,eAAe,GAAG,IAAI,CAAC,gBAAgB,IAAI,gBAAgB,CAAC,YAAY,GAAG,OAAO,GAAG,QAAQ,CAAC;YACpG,IAAI,CAAC,MAAM,CAAC,QAAQ,CAAC,CAAC,CAAA,gBAAA,EAAmB,eAAe,CAAA,SAAA,CAAW,CAAC,CAAC,CAAC;AACzE,SAAA;KACJ;;qHAvOQ,uBAAuB,EAAA,IAAA,EAAA,CAAA,EAAA,KAAA,EAAA5B,IAAA,CAAA,MAAA,EAAA,EAAA,EAAA,KAAA,EAAAC,IAAA,CAAA,cAAA,EAAA,EAAA,EAAA,KAAA,EAAAc,IAAA,CAAA,aAAA,EAAA,EAAA,EAAA,KAAA,EAAAT,oBAAA,EAAA,EAAA,EAAA,KAAA,EAAAgD,gBAAA,EAAA,EAAA,EAAA,KAAA,EAAAQ,aAAA,EAAA,EAAA,EAAA,KAAA,EAAAnB,YAAA,EAAA,EAAA,EAAA,KAAA,EAAAlC,EAAA,CAAA,gBAAA,EAAA,CAAA,EAAA,MAAA,EAAA,EAAA,CAAA,eAAA,CAAA,SAAA,EAAA,CAAA,CAAA;AAAvB,uBAAA,CAAA,IAAA,GAAA,EAAA,CAAA,oBAAA,CAAA,EAAA,UAAA,EAAA,QAAA,EAAA,OAAA,EAAA,SAAA,EAAA,IAAA,EAAA,uBAAuB,+QCjCpC,wtLAiHM,EAAA,UAAA,EAAA,CAAA,EAAA,IAAA,EAAAC,IAAA,CAAA,cAAA,EAAA,QAAA,EAAA,kBAAA,EAAA,MAAA,EAAA,CAAA,UAAA,EAAA,eAAA,EAAA,OAAA,EAAA,UAAA,EAAA,MAAA,EAAA,IAAA,EAAA,eAAA,EAAA,YAAA,EAAA,iBAAA,EAAA,UAAA,EAAA,SAAA,EAAA,kBAAA,CAAA,EAAA,OAAA,EAAA,CAAA,QAAA,EAAA,cAAA,CAAA,EAAA,QAAA,EAAA,CAAA,gBAAA,CAAA,EAAA,EAAA,EAAA,IAAA,EAAAC,EAAA,CAAA,kBAAA,EAAA,QAAA,EAAA,gBAAA,EAAA,MAAA,EAAA,CAAA,gCAAA,EAAA,uBAAA,EAAA,cAAA,EAAA,kBAAA,EAAA,aAAA,EAAA,aAAA,EAAA,UAAA,EAAA,UAAA,EAAA,cAAA,EAAA,qBAAA,EAAA,cAAA,EAAA,sBAAA,EAAA,wBAAA,EAAA,kBAAA,CAAA,EAAA,OAAA,EAAA,CAAA,YAAA,CAAA,EAAA,EAAA,EAAA,IAAA,EAAAoF,4BAAA,EAAA,QAAA,EAAA,0BAAA,EAAA,OAAA,EAAA,CAAA,YAAA,CAAA,EAAA,EAAA,EAAA,IAAA,EAAAlF,IAAA,CAAA,YAAA,EAAA,QAAA,EAAA,gBAAA,EAAA,MAAA,EAAA,CAAA,OAAA,EAAA,YAAA,EAAA,YAAA,EAAA,oBAAA,EAAA,WAAA,CAAA,EAAA,QAAA,EAAA,CAAA,cAAA,CAAA,EAAA,EAAA,EAAA,IAAA,EAAAC,EAAA,CAAA,SAAA,EAAA,QAAA,EAAA,YAAA,EAAA,MAAA,EAAA,CAAA,UAAA,EAAA,eAAA,EAAA,UAAA,CAAA,EAAA,QAAA,EAAA,CAAA,WAAA,CAAA,EAAA,EAAA,EAAA,IAAA,EAAAuB,GAAA,CAAA,SAAA,EAAA,QAAA,EAAA,YAAA,EAAA,QAAA,EAAA,CAAA,WAAA,CAAA,EAAA,EAAA,EAAA,IAAA,EAAAmD,uBAAA,EAAA,QAAA,EAAA,qBAAA,EAAA,MAAA,EAAA,CAAA,oBAAA,CAAA,EAAA,OAAA,EAAA,CAAA,iBAAA,CAAA,EAAA,EAAA,EAAA,IAAA,EAAA/E,EAAA,CAAA,qBAAA,EAAA,QAAA,EAAA,mBAAA,EAAA,MAAA,EAAA,CAAA,qBAAA,EAAA,qBAAA,EAAA,UAAA,EAAA,YAAA,EAAA,iBAAA,CAAA,EAAA,EAAA,EAAA,IAAA,EAAAA,EAAA,CAAA,iBAAA,EAAA,QAAA,EAAA,qBAAA,EAAA,MAAA,EAAA,CAAA,OAAA,EAAA,YAAA,EAAA,OAAA,CAAA,EAAA,CAAA,EAAA,UAAA,EAAA,CAAA,EAAA,IAAA,EAAAI,IAAA,CAAA,QAAA,EAAA,QAAA,EAAA,WAAA,EAAA,EAAA,EAAA,IAAA,EAAA0B,IAAA,CAAA,iBAAA,EAAA,QAAA,EAAA,wIAAA,EAAA,MAAA,EAAA,CAAA,UAAA,CAAA,EAAA,EAAA,EAAA,IAAA,EAAAA,IAAA,CAAA,eAAA,EAAA,QAAA,EAAA,2CAAA,EAAA,EAAA,EAAA,IAAA,EAAAA,IAAA,CAAA,oBAAA,EAAA,QAAA,EAAA,eAAA,EAAA,MAAA,EAAA,CAAA,UAAA,EAAA,aAAA,EAAA,SAAA,CAAA,EAAA,OAAA,EAAA,CAAA,eAAA,CAAA,EAAA,QAAA,EAAA,CAAA,QAAA,CAAA,EAAA,EAAA,EAAA,IAAA,EAAAC,GAAA,CAAA,IAAA,EAAA,QAAA,EAAA,QAAA,EAAA,MAAA,EAAA,CAAA,MAAA,EAAA,UAAA,EAAA,UAAA,CAAA,EAAA,EAAA,EAAA,IAAA,EAAAA,GAAA,CAAA,OAAA,EAAA,QAAA,EAAA,kBAAA,EAAA,MAAA,EAAA,CAAA,SAAA,EAAA,cAAA,EAAA,eAAA,CAAA,EAAA,EAAA,EAAA,IAAA,EAAA3B,IAAA,CAAA,QAAA,EAAA,QAAA,EAAA,WAAA,EAAA,MAAA,EAAA,CAAA,IAAA,CAAA,EAAA,EAAA,EAAA,IAAA,EAAAwB,GAAA,CAAA,SAAA,EAAA,QAAA,EAAA,2BAAA,EAAA,MAAA,EAAA,CAAA,iBAAA,EAAA,mBAAA,EAAA,kBAAA,EAAA,gBAAA,EAAA,oBAAA,EAAA,mBAAA,EAAA,oBAAA,CAAA,EAAA,QAAA,EAAA,CAAA,WAAA,CAAA,EAAA,CAAA,EAAA,CAAA,CAAA;4FDhFO,uBAAuB,EAAA,UAAA,EAAA,CAAA;kBANnC,SAAS;AAAC,YAAA,IAAA,EAAA,CAAA;AACP,oBAAA,QAAQ,EAAE,cAAc;AACxB,oBAAA,WAAW,EAAE,2BAA2B;AACxC,oBAAA,MAAM,EAAE,EACP;AACJ,iBAAA,CAAA;wSAwCiC,eAAe,EAAA,CAAA;sBAA5C,SAAS;uBAAC,iBAAiB,CAAA;gBACG,gBAAgB,EAAA,CAAA;sBAA9C,SAAS;uBAAC,kBAAkB,CAAA;;;AEpEjC,MAAMT,QAAM,GAAW;AACnB,IAAA;AACI,QAAA,IAAI,EAAE,EAAE;AACR,QAAA,SAAS,EAAE,uBAAuB;AACrC,KAAA;CACJ,CAAC;MAMW,2BAA2B,CAAA;;yHAA3B,2BAA2B,EAAA,IAAA,EAAA,EAAA,EAAA,MAAA,EAAA,EAAA,CAAA,eAAA,CAAA,QAAA,EAAA,CAAA,CAAA;AAA3B,2BAAA,CAAA,IAAA,GAAA,EAAA,CAAA,mBAAA,CAAA,EAAA,UAAA,EAAA,QAAA,EAAA,OAAA,EAAA,SAAA,EAAA,QAAA,EAAA,EAAA,EAAA,IAAA,EAAA,2BAA2B,0CAF1B,YAAY,CAAA,EAAA,CAAA,CAAA;0HAEb,2BAA2B,EAAA,OAAA,EAAA,CAH3B,CAAC,YAAY,CAAC,QAAQ,CAACA,QAAM,CAAC,CAAC,EAC9B,YAAY,CAAA,EAAA,CAAA,CAAA;4FAEb,2BAA2B,EAAA,UAAA,EAAA,CAAA;kBAJvC,QAAQ;AAAC,YAAA,IAAA,EAAA,CAAA;oBACN,OAAO,EAAE,CAAC,YAAY,CAAC,QAAQ,CAACA,QAAM,CAAC,CAAC;oBACxC,OAAO,EAAE,CAAC,YAAY,CAAC;AAC1B,iBAAA,CAAA;;;ACQD;MA2Ba,oBAAoB,CAAA;;kHAApB,oBAAoB,EAAA,IAAA,EAAA,EAAA,EAAA,MAAA,EAAA,EAAA,CAAA,eAAA,CAAA,QAAA,EAAA,CAAA,CAAA;mHAApB,oBAAoB,EAAA,YAAA,EAAA,CAvBzB,uBAAuB,CAAA,EAAA,OAAA,EAAA,CAGvB,YAAY;QACZ,2BAA2B;QAE3B,WAAW;QACX,mBAAmB;QAEnB,kBAAkB;QAClB,eAAe;QACf,cAAc;QACd,eAAe;QACf,oBAAoB;QAEpB,yBAAyB;QACzB,oBAAoB;QAEpB,eAAe;QACf,kBAAkB;QAClB,cAAc,CAAA,EAAA,CAAA,CAAA;AAGT,oBAAA,CAAA,IAAA,GAAA,EAAA,CAAA,mBAAA,CAAA,EAAA,UAAA,EAAA,QAAA,EAAA,OAAA,EAAA,SAAA,EAAA,QAAA,EAAA,EAAA,EAAA,IAAA,EAAA,oBAAoB,EArBpB,OAAA,EAAA,CAAA;YACL,YAAY;YACZ,2BAA2B;YAE3B,WAAW;YACX,mBAAmB;YAEnB,kBAAkB;YAClB,eAAe;YACf,cAAc;YACd,eAAe;YACf,oBAAoB;YAEpB,yBAAyB;YACzB,oBAAoB;YAEpB,eAAe;YACf,kBAAkB;YAClB,cAAc;AACjB,SAAA,CAAA,EAAA,CAAA,CAAA;4FAEQ,oBAAoB,EAAA,UAAA,EAAA,CAAA;kBAzBhC,QAAQ;AAAC,YAAA,IAAA,EAAA,CAAA;AACN,oBAAA,YAAY,EAAE;wBACV,uBAAuB;AAC1B,qBAAA;AACD,oBAAA,OAAO,EAAE;wBACL,YAAY;wBACZ,2BAA2B;wBAE3B,WAAW;wBACX,mBAAmB;wBAEnB,kBAAkB;wBAClB,eAAe;wBACf,cAAc;wBACd,eAAe;wBACf,oBAAoB;wBAEpB,yBAAyB;wBACzB,oBAAoB;wBAEpB,eAAe;wBACf,kBAAkB;wBAClB,cAAc;AACjB,qBAAA;AACJ,iBAAA,CAAA;;;AC5BD;MASa,4BAA4B,CAAA;IAgCrC,WACY,CAAA,cAA8B,EAC9B,YAA2B,EAC3B,oBAA0C,EAC1C,aAA4B,EAC5B,YAA0B,EAAA;QAJ1B,IAAc,CAAA,cAAA,GAAd,cAAc,CAAgB;QAC9B,IAAY,CAAA,YAAA,GAAZ,YAAY,CAAe;QAC3B,IAAoB,CAAA,oBAAA,GAApB,oBAAoB,CAAsB;QAC1C,IAAa,CAAA,aAAA,GAAb,aAAa,CAAe;QAC5B,IAAY,CAAA,YAAA,GAAZ,YAAY,CAAc;QAnCtC,IAAgB,CAAA,gBAAA,GAAG,iBAAiB,CAAC;QACrC,IAAc,CAAA,cAAA,GAAG,eAAe,CAAC;QACjC,IAAmB,CAAA,mBAAA,GAAG,oCAAoC,CAAC;QAE3D,IAA2B,CAAA,2BAAA,GAAG,2BAA2B,CAAC;QAC1D,IAAe,CAAA,eAAA,GAAG,eAAe,CAAC;QAClC,IAAc,CAAA,cAAA,GAAG,cAAc,CAAC;QAChC,IAAiB,CAAA,iBAAA,GAAG,iBAAiB,CAAC;QACtC,IAAY,CAAA,YAAA,GAAG,YAAY,CAAC;QAa5B,IAAS,CAAA,SAAA,GAAY,KAAK,CAAC;QAC3B,IAAU,CAAA,UAAA,GAAY,KAAK,CAAC;AAE5B,QAAA,IAAA,CAAA,cAAc,GAAW,IAAI,KAAK,EAAE,CAAC;KAYhC;IAEL,QAAQ,GAAA;QACJ,IAAI,CAAC,KAAK,GAAG,IAAI,CAAC,cAAc,CAAC,UAAU,CAAC,cAAc,CAAC,CAAC;QAC5D,IAAI,CAAC,QAAQ,GAAG,IAAI,CAAC,cAAc,CAAC,UAAU,CAAC,UAAU,CAAC,CAAC;QAC3D,IAAI,CAAC,gBAAgB,GAAG,IAAI,CAAC,cAAc,CAAC,UAAU,CAAC,kBAAkB,CAAC,CAAC;AAE3E,QAAA,IAAI,IAAI,CAAC,gBAAgB,IAAI,gBAAgB,CAAC,aAAa,EAAE;AACzD,YAAA,IAAI,CAAC,WAAW,GAAG,eAAe,CAAC;AACtC,SAAA;AAAM,aAAA,IAAI,IAAI,CAAC,gBAAgB,IAAI,gBAAgB,CAAC,YAAY,EAAE;AAC/D,YAAA,IAAI,CAAC,WAAW,GAAG,iBAAiB,CAAC;AACxC,SAAA;KACJ;IAED,mBAAmB,GAAA;QACf,IAAI,CAAC,QAAQ,GAAG,IAAI,CAAC,eAAe,CAAC,UAAU,CAAC,KAAK,CAAC;QAEtD,IAAI,CAAC,YAAY,CAAC,oBAAoB,CAAC,IAAI,CAAC,cAAc,CAAC,CAAC;KAC/D;IAED,aAAa,GAAA;QACT,IAAI,CAAC,SAAS,GAAG,IAAI,CAAC,eAAe,CAAC,WAAW,CAAC,KAAK,CAAC;QACxD,IAAI,CAAC,OAAO,GAAG,IAAI,CAAC,eAAe,CAAC,SAAS,CAAC,KAAK,CAAC;QAEpD,IAAI,CAAC,YAAY,CAAC,oBAAoB,CAAC,IAAI,CAAC,cAAc,CAAC,CAAC;KAC/D;IAED,oBAAoB,GAAA;QAChB,IAAI,CAAC,WAAW,GAAG,IAAI,CAAC,gBAAgB,CAAC,aAAa,CAAC,KAAK,CAAC;QAE7D,IAAI,CAAC,YAAY,CAAC,oBAAoB,CAAC,IAAI,CAAC,cAAc,CAAC,CAAC;KAC/D;IAEK,UAAU,GAAA;;;YAEZ,IAAI,CAAC,YAAY,CAAC,oBAAoB,CAAC,IAAI,CAAC,cAAc,CAAC,CAAC;AAE5D,YAAA,IAAI,IAAI,CAAC,iBAAiB,EAAE,EAAE;AAC1B,gBAAA,IAAI,CAAC,YAAY,CAAC,SAAS,CAAC,WAAW,CAAC,kBAAkB,EAAE,WAAW,CAAC,oBAAoB,EAAE,WAAW,CAAC,KAAK,CAAC,CAAC;gBACjH,OAAO;AACV,aAAA;AAED,YAAA,IAAI,IAAI,CAAC,SAAS,IAAI,IAAI,CAAC,OAAO,EAAE;gBAChC,IAAI,CAAC,YAAY,CAAC,kBAAkB,CAAC,IAAI,CAAC,cAAc,EAAE,eAAe,CAAC,kBAAkB,EAAE,eAAe,CAAC,oBAAoB,EAAE,oBAAoB,CAAC,IAAI,EAAE,oBAAoB,CAAC,SAAS,CAAC,CAAC;gBAC/L,OAAO;AACV,aAAA;AAED,YAAA,IAAI,CAAC,UAAU,GAAG,IAAI,CAAC;YAEvB,IAAI;AACA,gBAAA,MAAM,WAAW,GAAG,IAAI,CAAC,iBAAiB,EAAE,CAAC;AAE7C,gBAAA,IAAI,CAAC,UAAU,GAAG,MAAM,IAAI,CAAC,oBAAoB,CAAC,gBAAgB,CAAC,IAAI,CAAC,KAAK,EAAE,WAAW,CAAC,CAAC;AAE5F,gBAAA,IAAI,CAAA,CAAA,EAAA,GAAA,IAAI,CAAC,UAAU,MAAE,IAAA,IAAA,EAAA,KAAA,KAAA,CAAA,GAAA,KAAA,CAAA,GAAA,EAAA,CAAA,MAAM,IAAG,CAAC,IAAI,EAAC,CAAA,EAAA,GAAA,IAAI,CAAC,UAAU,MAAE,IAAA,IAAA,EAAA,KAAA,KAAA,CAAA,GAAA,KAAA,CAAA,GAAA,EAAA,CAAA,KAAK,CAAC,IAAI,IAAI,IAAI,CAAC,IAAI,CAAC,MAAM,IAAI,CAAC,CAAC,CAAA,EAAE;AACvF,oBAAA,IAAI,CAAC,SAAS,GAAG,IAAI,CAAC,aAAa,CAAC,gBAAgB,CAAC,IAAI,CAAC,UAAU,CAAC,CAAC;oBACtE,IAAI,CAAC,WAAW,GAAG,IAAI,CAAC,aAAa,CAAC,aAAa,CAAC,IAAI,CAAC,SAAS,EAAE,IAAI,CAAC,UAAU,EAAE,IAAI,CAAC,cAAc,CAAC,SAAS,CAAC,CAAC;AACvH,iBAAA;AAAM,qBAAA;oBACH,IAAI,CAAC,YAAY,CAAC,kBAAkB,CAAC,IAAI,CAAC,cAAc,EAAE,eAAe,CAAC,oBAAoB,EAAE,eAAe,CAAC,sBAAsB,EAAE,oBAAoB,CAAC,OAAO,EAAE,oBAAoB,CAAC,YAAY,CAAC,CAAC;AAC5M,iBAAA;AAEJ,aAAA;AAAC,YAAA,OAAO,KAAK,EAAE;AACZ,gBAAA,OAAO,CAAC,KAAK,CAAC,uBAAuB,EAAE,KAAK,CAAC,CAAC;gBAC9C,IAAI,CAAC,YAAY,CAAC,kBAAkB,CAAC,IAAI,CAAC,cAAc,EAAE,eAAe,CAAC,mBAAmB,EAAE,eAAe,CAAC,qBAAqB,EAAE,oBAAoB,CAAC,MAAM,EAAE,oBAAoB,CAAC,WAAW,CAAC,CAAC;AACxM,aAAA;AAAS,oBAAA;AACN,gBAAA,IAAI,CAAC,UAAU,GAAG,KAAK,CAAC;AAC3B,aAAA;;AACJ,KAAA;AAEK,IAAA,cAAc,CAAC,MAAc,EAAA;;YAC/B,IAAI,CAAC,YAAY,CAAC,oBAAoB,CAAC,IAAI,CAAC,cAAc,CAAC,CAAC;AAE5D,YAAA,IAAI,IAAI,CAAC,iBAAiB,EAAE,EAAE;AAC1B,gBAAA,IAAI,CAAC,YAAY,CAAC,SAAS,CAAC,WAAW,CAAC,kBAAkB,EAAE,WAAW,CAAC,oBAAoB,EAAE,WAAW,CAAC,KAAK,CAAC,CAAC;gBACjH,OAAO;AACV,aAAA;AAED,YAAA,IAAI,IAAI,CAAC,SAAS,IAAI,IAAI,CAAC,OAAO,EAAE;gBAChC,IAAI,CAAC,YAAY,CAAC,kBAAkB,CAAC,IAAI,CAAC,cAAc,EAAE,eAAe,CAAC,kBAAkB,EAAE,eAAe,CAAC,oBAAoB,EAAE,oBAAoB,CAAC,IAAI,EAAE,oBAAoB,CAAC,SAAS,CAAC,CAAC;gBAC/L,OAAO;AACV,aAAA;AAED,YAAA,IAAI,CAAC,UAAU,GAAG,IAAI,CAAC;YAEvB,IAAI;AACA,gBAAA,MAAM,WAAW,GAAG,IAAI,qBAAqB,EAAE,CAAC;AAEhD,gBAAA,WAAW,CAAC,OAAO,GAAG,IAAI,CAAC,iBAAiB,EAAE,CAAC;AAC/C,gBAAA,WAAW,CAAC,UAAU,GAAG,8BAA8B,CAAC;AACxD,gBAAA,WAAW,CAAC,YAAY,GAAG,MAAM,CAAC;AAElC,gBAAA,MAAM,IAAI,CAAC,aAAa,CAAC,cAAc,CAAC,IAAI,CAAC,KAAK,EAAE,WAAW,CAAC,CAAC;AAEpE,aAAA;AAAC,YAAA,OAAO,KAAK,EAAE;AACZ,gBAAA,OAAO,CAAC,KAAK,CAAC,2BAA2B,EAAE,KAAK,CAAC,CAAC;AACrD,aAAA;AAAS,oBAAA;AACN,gBAAA,IAAI,CAAC,UAAU,GAAG,KAAK,CAAC;AAC3B,aAAA;SACJ,CAAA,CAAA;AAAA,KAAA;IAED,iBAAiB,GAAA;AAEb,QAAA,MAAM,WAAW,GAAG,IAAI,oBAAoB,EAAE,CAAC;AAE/C,QAAA,WAAW,CAAC,SAAS,GAAG,IAAI,CAAC,SAAS,CAAC;AACvC,QAAA,WAAW,CAAC,OAAO,GAAG,IAAI,CAAC,OAAO,CAAC;AACnC,QAAA,WAAW,CAAC,QAAQ,GAAG,IAAI,CAAC,WAAW,CAAC;QACxC,WAAW,CAAC,MAAM,GAAG;AACjB,YAAA;gBACI,IAAI,EAAE,IAAI,CAAC,WAAW;AACtB,gBAAA,KAAK,EAAE,KAAK;AACZ,gBAAA,GAAG,EAAE,KAAK;gBACV,cAAc,EAAE,IAAI,CAAC,QAAQ;AAC7B,gBAAA,cAAc,EAAE,KAAK;AACxB,aAAA;SACJ,CAAC;QACF,WAAW,CAAC,aAAa,EAAE,CAAC;AAE5B,QAAA,OAAO,WAAW,CAAC;KACtB;IAED,iBAAiB,GAAA;AACb,QAAA,MAAM,QAAQ,GAAG;YACb,IAAI,CAAC,eAAe,CAAC,WAAW;YAChC,IAAI,CAAC,gBAAgB,CAAC,aAAa;SACtC,CAAC;AAEF,QAAA,QAAQ,CAAC,OAAO,CAAC,OAAO,IAAI,OAAO,CAAC,aAAa,EAAE,CAAC,CAAC;AACrD,QAAA,OAAO,QAAQ,CAAC,IAAI,CAAC,OAAO,IAAI,OAAO,CAAC,OAAO,CAAC,CAAC;KACpD;;0HAvKQ,4BAA4B,EAAA,IAAA,EAAA,CAAA,EAAA,KAAA,EAAA5B,IAAA,CAAA,cAAA,EAAA,EAAA,EAAA,KAAA,EAAAC,IAAA,CAAA,aAAA,EAAA,EAAA,EAAA,KAAA,EAAAwB,oBAAA,EAAA,EAAA,EAAA,KAAA,EAAAuE,aAAA,EAAA,EAAA,EAAA,KAAA,EAAAhD,YAAA,EAAA,CAAA,EAAA,MAAA,EAAA,EAAA,CAAA,eAAA,CAAA,SAAA,EAAA,CAAA,CAAA;AAA5B,4BAAA,CAAA,IAAA,GAAA,EAAA,CAAA,oBAAA,CAAA,EAAA,UAAA,EAAA,QAAA,EAAA,OAAA,EAAA,SAAA,EAAA,IAAA,EAAA,4BAA4B,iYC9BzC,8uIAsFM,EAAA,UAAA,EAAA,CAAA,EAAA,IAAA,EAAAiD,qBAAA,EAAA,QAAA,EAAA,iBAAA,EAAA,MAAA,EAAA,CAAA,oBAAA,CAAA,EAAA,OAAA,EAAA,CAAA,YAAA,CAAA,EAAA,EAAA,EAAA,IAAA,EAAAzF,EAAA,CAAA,kBAAA,EAAA,QAAA,EAAA,gBAAA,EAAA,MAAA,EAAA,CAAA,gCAAA,EAAA,uBAAA,EAAA,cAAA,EAAA,kBAAA,EAAA,aAAA,EAAA,aAAA,EAAA,UAAA,EAAA,UAAA,EAAA,cAAA,EAAA,qBAAA,EAAA,cAAA,EAAA,sBAAA,EAAA,wBAAA,EAAA,kBAAA,CAAA,EAAA,OAAA,EAAA,CAAA,YAAA,CAAA,EAAA,EAAA,EAAA,IAAA,EAAA2C,4BAAA,EAAA,QAAA,EAAA,0BAAA,EAAA,OAAA,EAAA,CAAA,YAAA,CAAA,EAAA,EAAA,EAAA,IAAA,EAAA+C,uBAAA,EAAA,QAAA,EAAA,qBAAA,EAAA,MAAA,EAAA,CAAA,oBAAA,CAAA,EAAA,OAAA,EAAA,CAAA,iBAAA,CAAA,EAAA,EAAA,EAAA,IAAA,EAAAvF,EAAA,CAAA,qBAAA,EAAA,QAAA,EAAA,mBAAA,EAAA,MAAA,EAAA,CAAA,qBAAA,EAAA,qBAAA,EAAA,UAAA,EAAA,YAAA,EAAA,iBAAA,CAAA,EAAA,EAAA,EAAA,IAAA,EAAAA,EAAA,CAAA,iBAAA,EAAA,QAAA,EAAA,qBAAA,EAAA,MAAA,EAAA,CAAA,OAAA,EAAA,YAAA,EAAA,OAAA,CAAA,EAAA,CAAA,EAAA,UAAA,EAAA,CAAA,EAAA,IAAA,EAAAC,GAAA,CAAA,SAAA,EAAA,QAAA,EAAA,2BAAA,EAAA,MAAA,EAAA,CAAA,iBAAA,EAAA,mBAAA,EAAA,kBAAA,EAAA,gBAAA,EAAA,oBAAA,EAAA,mBAAA,EAAA,oBAAA,CAAA,EAAA,QAAA,EAAA,CAAA,WAAA,CAAA,EAAA,EAAA,EAAA,IAAA,EAAAC,GAAA,CAAA,IAAA,EAAA,QAAA,EAAA,QAAA,EAAA,MAAA,EAAA,CAAA,MAAA,EAAA,UAAA,EAAA,UAAA,CAAA,EAAA,EAAA,EAAA,IAAA,EAAAA,GAAA,CAAA,OAAA,EAAA,QAAA,EAAA,kBAAA,EAAA,MAAA,EAAA,CAAA,SAAA,EAAA,cAAA,EAAA,eAAA,CAAA,EAAA,CAAA,EAAA,CAAA,CAAA;4FDxDO,4BAA4B,EAAA,UAAA,EAAA,CAAA;kBAPxC,SAAS;AAAC,YAAA,IAAA,EAAA,CAAA;AACP,oBAAA,QAAQ,EAAE,2BAA2B;AACrC,oBAAA,WAAW,EAAE,wCAAwC;AACrD,oBAAA,MAAM,EAAE,EACP;AACJ,iBAAA,CAAA;sNA8BiC,eAAe,EAAA,CAAA;sBAA5C,SAAS;uBAAC,iBAAiB,CAAA;gBACE,eAAe,EAAA,CAAA;sBAA5C,SAAS;uBAAC,iBAAiB,CAAA;gBACG,gBAAgB,EAAA,CAAA;sBAA9C,SAAS;uBAAC,kBAAkB,CAAA;;;AEvDjC,MAAMe,QAAM,GAAW;AACnB,IAAA;AACI,QAAA,IAAI,EAAE,EAAE;AACR,QAAA,SAAS,EAAE,4BAA4B;AAC1C,KAAA;CACJ,CAAC;MAMW,gCAAgC,CAAA;;8HAAhC,gCAAgC,EAAA,IAAA,EAAA,EAAA,EAAA,MAAA,EAAA,EAAA,CAAA,eAAA,CAAA,QAAA,EAAA,CAAA,CAAA;AAAhC,gCAAA,CAAA,IAAA,GAAA,EAAA,CAAA,mBAAA,CAAA,EAAA,UAAA,EAAA,QAAA,EAAA,OAAA,EAAA,SAAA,EAAA,QAAA,EAAA,EAAA,EAAA,IAAA,EAAA,gCAAgC,0CAF/B,YAAY,CAAA,EAAA,CAAA,CAAA;+HAEb,gCAAgC,EAAA,OAAA,EAAA,CAHhC,CAAC,YAAY,CAAC,QAAQ,CAACA,QAAM,CAAC,CAAC,EAC9B,YAAY,CAAA,EAAA,CAAA,CAAA;4FAEb,gCAAgC,EAAA,UAAA,EAAA,CAAA;kBAJ5C,QAAQ;AAAC,YAAA,IAAA,EAAA,CAAA;oBACN,OAAO,EAAE,CAAC,YAAY,CAAC,QAAQ,CAACA,QAAM,CAAC,CAAC;oBACxC,OAAO,EAAE,CAAC,YAAY,CAAC;AAC1B,iBAAA,CAAA;;;ACCD;MAmBa,yBAAyB,CAAA;;uHAAzB,yBAAyB,EAAA,IAAA,EAAA,EAAA,EAAA,MAAA,EAAA,EAAA,CAAA,eAAA,CAAA,QAAA,EAAA,CAAA,CAAA;wHAAzB,yBAAyB,EAAA,YAAA,EAAA,CAf9B,4BAA4B,CAAA,EAAA,OAAA,EAAA,CAG5B,YAAY;QACZ,gCAAgC;QAChCgC,kBAAgB;QAChB,eAAe;QACf,yBAAyB;QACzB,oBAAoB;QACpB,cAAc;QACd,kBAAkB;QAClB,cAAc;QACd,eAAe,CAAA,EAAA,CAAA,CAAA;AAGV,yBAAA,CAAA,IAAA,GAAA,EAAA,CAAA,mBAAA,CAAA,EAAA,UAAA,EAAA,QAAA,EAAA,OAAA,EAAA,SAAA,EAAA,QAAA,EAAA,EAAA,EAAA,IAAA,EAAA,yBAAyB,EAbzB,OAAA,EAAA,CAAA;YACL,YAAY;YACZ,gCAAgC;YAChCA,kBAAgB;YAChB,eAAe;YACf,yBAAyB;YACzB,oBAAoB;YACpB,cAAc;YACd,kBAAkB;YAClB,cAAc;YACd,eAAe;AAClB,SAAA,CAAA,EAAA,CAAA,CAAA;4FAEQ,yBAAyB,EAAA,UAAA,EAAA,CAAA;kBAjBrC,QAAQ;AAAC,YAAA,IAAA,EAAA,CAAA;AACN,oBAAA,YAAY,EAAE;wBACV,4BAA4B;AAC/B,qBAAA;AACD,oBAAA,OAAO,EAAE;wBACL,YAAY;wBACZ,gCAAgC;wBAChCA,kBAAgB;wBAChB,eAAe;wBACf,yBAAyB;wBACzB,oBAAoB;wBACpB,cAAc;wBACd,kBAAkB;wBAClB,cAAc;wBACd,eAAe;AAClB,qBAAA;AACJ,iBAAA,CAAA;;;ACrBD;MAOa,oCAAoC,CAAA;AA4C7C,IAAA,WAAA,CACY,WAAwB;;IAGxB,cAA8B,EAC/B,gBAAkC,EACjC,WAAwB,EAAA;QALxB,IAAW,CAAA,WAAA,GAAX,WAAW,CAAa;QAGxB,IAAc,CAAA,cAAA,GAAd,cAAc,CAAgB;QAC/B,IAAgB,CAAA,gBAAA,GAAhB,gBAAgB,CAAkB;QACjC,IAAW,CAAA,WAAA,GAAX,WAAW,CAAa;QAhDpC,IAAe,CAAA,eAAA,GAAG,eAAe,CAAC;QAClC,IAAiB,CAAA,iBAAA,GAAG,iBAAiB,CAAC;QAEtC,IAAa,CAAA,aAAA,GAAG,aAAa,CAAC;QAC9B,IAA2B,CAAA,2BAAA,GAAG,2BAA2B,CAAC;AAM1D,QAAA,IAAA,CAAA,WAAW,GAAG,WAAW,CAAC,aAAa,CAAC;AAExC,QAAA,IAAA,CAAA,KAAK,GAAG,CAAC,IAAI,IAAI,EAAE,CAAC,CAAC;AACrB,QAAA,IAAA,CAAA,YAAY,GAAG,CAAC,IAAI,IAAI,EAAE,CAAC,CAAC;AAC5B,QAAA,IAAA,CAAA,eAAe,GAAG,CAAC,IAAI,IAAI,EAAE,CAAC,CAAC;QAC/B,IAAS,CAAA,SAAA,GAAU,EAAE,CAAC;QACtB,IAAc,CAAA,cAAA,GAAW,CAAC,CAAC;AAE3B,QAAA,IAAA,CAAA,YAAY,GAAG;AACX,YAAA,EAAE,KAAK,EAAE,OAAO,EAAE,KAAK,EAAE,OAAO,EAAE;AAClC,YAAA,EAAE,KAAK,EAAE,QAAQ,EAAE,KAAK,EAAE,QAAQ,EAAE;AACpC,YAAA,EAAE,KAAK,EAAE,SAAS,EAAE,KAAK,EAAE,SAAS,EAAE;SACzC,CAAC;AAEF,QAAA,IAAA,CAAA,aAAa,GAAG;AACZ,YAAA,EAAE,KAAK,EAAE,OAAO,EAAE,KAAK,EAAE,OAAO,EAAE;AAClC,YAAA,EAAE,KAAK,EAAE,QAAQ,EAAE,KAAK,EAAE,QAAQ,EAAE;AACpC,YAAA,EAAE,KAAK,EAAE,SAAS,EAAE,KAAK,EAAE,SAAS,EAAE;SACzC,CAAC;QAEF,IAAkB,CAAA,kBAAA,GAAW,kCAAkC,CAAC;QAEhE,IAAM,CAAA,MAAA,GAAgB,IAAI,WAAW,CAAC,IAAI,EAAE,UAAU,CAAC,QAAQ,CAAC,CAAC;AACjE,QAAA,IAAA,CAAA,cAAc,GAA2B,IAAI,sBAAsB,CAAC,CAAC,WAAW,EAAE,UAAU,EAAE,OAAO,CAAC,CAAC,CAAC;QAExG,IAAU,CAAA,UAAA,GAAG,IAAI,CAAC;QAClB,IAAS,CAAA,SAAA,GAAG,IAAI,CAAC;QACjB,IAAS,CAAA,SAAA,GAAG,IAAI,CAAC;AACR,QAAA,IAAA,CAAA,kBAAkB,GAAG,CAAC,KAAK,EAAE,KAAK,CAAU,CAAC;QAEtD,IAAgB,CAAA,gBAAA,GAAG,sCAAsC,CAAC;QA4J1D,IAAa,CAAA,aAAA,GAAG,CAAC,SAAoB,EAAE,WAAmB,EAAE,KAAa,KAAa;YAClF,OAAO,SAAS,CAAC,GAAG,CAAC,WAAW,CAAC,CAAC,QAAQ,CAAC,KAAK,CAAC,CAAC;AACtD,SAAC,CAAA;KApJI;IAEL,QAAQ,GAAA;QACJ,IAAI,CAAC,KAAK,GAAG,IAAI,CAAC,cAAc,CAAC,UAAU,CAAC,cAAc,CAAC,CAAC;QAE5D,IAAI,CAAC,eAAe,EAAE,CAAC;QACvB,IAAI,CAAC,oBAAoB,EAAE,CAAC;KAC/B;IAED,oBAAoB,GAAA;QAChB,IAAI,CAAC,gBAAgB,GAAG,IAAI,CAAC,WAAW,CAAC,KAAK,CAAC;AAC3C,YAAA,IAAI,EAAE,GAAG,UAAU,CAAC,QAAQ,CAAC;AAC7B,YAAA,YAAY,EAAE,GAAG,UAAU,CAAC,QAAQ,CAAC;AACrC,YAAA,SAAS,EAAE,GAAG,UAAU,CAAC,QAAQ,CAAC;AAClC,YAAA,UAAU,EAAE,CAAC,WAAW,CAAC,aAAa,CAAC;AACvC,YAAA,MAAM,EAAE,CAAC,EAAE,EAAE,UAAU,CAAC,QAAQ,CAAC;YACjC,cAAc,EAAE,CAAC,EAAE,CAAC;AACpB,YAAA,MAAM,EAAE,CAAC,QAAQ,EAAE,UAAU,CAAC,QAAQ,CAAC;AACvC,YAAA,YAAY,EAAE,GAAG,UAAU,CAAC,QAAQ,CAAC;AACxC,SAAA,CAAC,CAAC;AAEH,QAAA,IAAI,CAAC,gBAAgB,CAAC,GAAG,CAAC,cAAc,CAAC,CAAC,YAAY,CAAC,SAAS,CAAC,KAAK,IAAG;AACrE,YAAA,QAAQ,KAAK;AACT,gBAAA,KAAK,OAAO;AACR,oBAAA,IAAI,CAAC,aAAa,GAAG,CAAC,EAAE,KAAK,EAAE,OAAO,EAAE,KAAK,EAAE,OAAO,EAAE,CAAC,CAAC;AAC1D,oBAAA,IAAI,CAAC,kBAAkB,GAAG,iDAAiD,CAAC;oBAC5E,MAAM;AACV,gBAAA,KAAK,QAAQ;oBACT,IAAI,CAAC,aAAa,GAAG;AACjB,wBAAA,EAAE,KAAK,EAAE,OAAO,EAAE,KAAK,EAAE,OAAO,EAAE;AAClC,wBAAA,EAAE,KAAK,EAAE,QAAQ,EAAE,KAAK,EAAE,QAAQ,EAAE;qBACvC,CAAC;AACF,oBAAA,IAAI,CAAC,kBAAkB,GAAG,4DAA4D,CAAC;oBACvF,MAAM;AACV,gBAAA,KAAK,SAAS;oBACV,IAAI,CAAC,aAAa,GAAG;AACjB,wBAAA,EAAE,KAAK,EAAE,OAAO,EAAE,KAAK,EAAE,OAAO,EAAE;AAClC,wBAAA,EAAE,KAAK,EAAE,QAAQ,EAAE,KAAK,EAAE,QAAQ,EAAE;AACpC,wBAAA,EAAE,KAAK,EAAE,SAAS,EAAE,KAAK,EAAE,SAAS,EAAE;qBACzC,CAAC;AACF,oBAAA,IAAI,CAAC,kBAAkB,GAAG,yEAAyE,CAAC;oBACpG,MAAM;AACV,gBAAA;oBACI,MAAM;AACb,aAAA;AACL,SAAC,CAAC,CAAC;KACN;IAEK,eAAe,GAAA;;AACjB,YAAA,MAAM,IAAI,CAAC,eAAe,EAAE,CAAC;AAC7B,YAAA,MAAM,IAAI,CAAC,uBAAuB,EAAE,CAAC;SACxC,CAAA,CAAA;AAAA,KAAA;IAEK,eAAe,GAAA;;AACjB,YAAA,IAAI,CAAC,YAAY,IAAY,MAAM,IAAI,CAAC,WAAW,CAAC,eAAe,CAAC,IAAI,CAAC,KAAK,CAAC,CAAA,CAAC;AAEhF,YAAA,IAAI,CAAC,KAAK,GAAG,IAAI,CAAC,YAAY,CAAC;YAC/B,IAAI,CAAC,cAAc,CAAC,SAAS,GAAG,IAAI,CAAC,KAAK,CAAC;AAC3C,YAAA,IAAI,CAAC,cAAc,CAAC,kBAAkB,EAAE,CAAC;YAEzC,IAAI,CAAC,cAAc,GAAG,IAAI,CAAC,KAAK,CAAC,MAAM,CAAC;YACxC,IAAI,CAAC,KAAK,CAAC,OAAO,CAAC,IAAI,IAAI,IAAI,CAAC,SAAS,CAAC,IAAI,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC;SAC/D,CAAA,CAAA;AAAA,KAAA;IAEK,uBAAuB,GAAA;;AACzB,YAAA,IAAI,CAAC,eAAe,IAAY,MAAM,IAAI,CAAC,WAAW,CAAC,uBAAuB,CAAC,IAAI,CAAC,KAAK,CAAC,CAAA,CAAC;SAC9F,CAAA,CAAA;AAAA,KAAA;IAED,iBAAiB,GAAA;AACb,QAAA,IAAI,IAAI,CAAC,MAAM,CAAC,KAAK,EAAE;AACnB,YAAA,IAAI,CAAC,WAAW,GAAG,WAAW,CAAC,aAAa,CAAC;AAC7C,YAAA,IAAI,CAAC,KAAK,GAAG,IAAI,CAAC,YAAY,CAAC;AAC/B,YAAA,IAAI,CAAC,gBAAgB,CAAC,GAAG,CAAC,YAAY,CAAC,CAAC,QAAQ,CAAC,IAAI,CAAC,WAAW,CAAC,CAAC;AACtE,SAAA;AAAM,aAAA;AACH,YAAA,IAAI,CAAC,WAAW,GAAG,WAAW,CAAC,gBAAgB,CAAC;AAChD,YAAA,IAAI,CAAC,KAAK,GAAG,IAAI,CAAC,eAAe,CAAC;AAClC,YAAA,IAAI,CAAC,gBAAgB,CAAC,GAAG,CAAC,YAAY,CAAC,CAAC,QAAQ,CAAC,IAAI,CAAC,WAAW,CAAC,CAAC;AACtE,SAAA;AAED,QAAA,IAAI,CAAC,SAAS,GAAG,EAAE,CAAC;QAEpB,IAAI,CAAC,cAAc,CAAC,SAAS,GAAG,IAAI,CAAC,KAAK,CAAC;AAC3C,QAAA,IAAI,CAAC,cAAc,CAAC,kBAAkB,EAAE,CAAC;QAEzC,IAAI,CAAC,cAAc,GAAG,IAAI,CAAC,KAAK,CAAC,MAAM,CAAC;QACxC,IAAI,CAAC,KAAK,CAAC,OAAO,CAAC,IAAI,IAAI,IAAI,CAAC,SAAS,CAAC,IAAI,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC;AAE5D,QAAA,IAAI,CAAC,gBAAgB,CAAC,GAAG,CAAC,QAAQ,CAAC,CAAC,QAAQ,CAAC,EAAE,CAAC,CAAC;KACpD;IAED,UAAU,GAAA;AACN,QAAA,MAAM,QAAQ,GAAG,IAAI,CAAC,gBAAgB,CAAC,GAAG,CAAC,QAAQ,CAAC,CAAC,KAAK,CAAC;AAC3D,QAAA,IAAI,QAAQ,CAAC,QAAQ,CAAC,CAAC,CAAC,CAAC,EAAE;YACvB,QAAQ,CAAC,KAAK,EAAE,CAAC;AACjB,YAAA,IAAI,CAAC,gBAAgB,CAAC,GAAG,CAAC,QAAQ,CAAC,CAAC,UAAU,CAAC,QAAQ,CAAC,CAAC;AAC5D,SAAA;AAAM,aAAA,IAAI,IAAI,CAAC,gBAAgB,CAAC,GAAG,CAAC,QAAQ,CAAC,CAAC,KAAK,CAAC,MAAM,IAAI,IAAI,CAAC,cAAc,EAAE;AAChF,YAAA,IAAI,CAAC,SAAS,CAAC,MAAM,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC;AAChC,YAAA,IAAI,CAAC,gBAAgB,CAAC,GAAG,CAAC,QAAQ,CAAC,CAAC,UAAU,CAAC,IAAI,CAAC,SAAS,CAAC,CAAC;AAClE,SAAA;AAAM,aAAA;AACH,YAAA,MAAM,gBAAgB,GAAG,QAAQ,CAAC,MAAM,CAAC,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC;AACvD,YAAA,IAAI,CAAC,gBAAgB,CAAC,GAAG,CAAC,QAAQ,CAAC,CAAC,UAAU,CAAC,gBAAgB,CAAC,CAAC;AACpE,SAAA;KACJ;IAED,cAAc,GAAA;AACV,QAAA,IAAI,CAAC,IAAI,CAAC,gBAAgB,CAAC,GAAG,CAAC,QAAQ,CAAC,CAAC,KAAK,CAAC,QAAQ,CAAC,CAAC,CAAC,CAAC,EAAE;AACzD,YAAA,IAAI,CAAC,gBAAgB,CAAC,GAAG,CAAC,QAAQ,CAAC,CAAC,KAAK,CAAC,EAAE,CAAC,CAAC;YAC9C,OAAO;AACV,SAAA;QACD,IAAI,CAAC,gBAAgB,CAAC,GAAG,CAAC,QAAQ,CAAC,CAAC,QAAQ,CAAC,CAAC,CAAC,CAAC,EAAE,GAAG,IAAI,CAAC,SAAS,CAAC,CAAC,CAAC;KACzE;IAED,OAAO,GAAA;AACH,QAAA,IAAI,CAAC,gBAAgB,GAAG,EAAE,CAAC;KAC9B;AAED,IAAA,IAAI,cAAc,GAAA;QACd,OAAO,IAAI,CAAC,gBAAgB,CAAC,GAAG,CAAC,gBAAgB,CAAC,CAAC;KACtD;AAED,IAAA,GAAG,CAAC,KAAwB,EAAA;AACxB,QAAA,MAAM,KAAK,GAAG,CAAC,KAAK,CAAC,KAAK,IAAI,EAAE,EAAE,IAAI,EAAE,CAAC;AACzC,QAAA,IAAI,KAAK,EAAE;YACP,MAAM,MAAM,GAAG,KAAK,CAAC,KAAK,CAAC,GAAG,CAAC,CAAC,GAAG,CAAC,KAAK,IAAI,KAAK,CAAC,IAAI,EAAE,CAAC,CAAC;AAC3D,YAAA,MAAM,WAAW,GAAG,MAAM,CAAC,MAAM,CAAC,KAAK,IAAI,IAAI,CAAC,gBAAgB,CAAC,YAAY,CAAC,KAAK,CAAC,CAAC,CAAC;AACtF,YAAA,IAAI,WAAW,CAAC,MAAM,GAAG,CAAC,EAAE;AACxB,gBAAA,IAAI,CAAC,cAAc,CAAC,UAAU,CAAC,IAAI,CAAC,cAAc,CAAC,KAAK,CAAC,MAAM,CAAC,WAAW,CAAC,CAAC,CAAC;AACjF,aAAA;AACJ,SAAA;AACD,QAAA,KAAK,CAAC,SAAU,CAAC,KAAK,EAAE,CAAC;KAC5B;AAED,IAAA,WAAW,CAAC,KAAK,EAAA;AACb,QAAA,MAAM,KAAK,GAAG,IAAI,CAAC,cAAc,CAAC,KAAK,CAAC,OAAO,CAAC,KAAK,CAAC,CAAC;QACvD,IAAI,KAAK,IAAI,CAAC,EAAE;YACZ,MAAM,MAAM,GAAG,CAAC,GAAG,IAAI,CAAC,cAAc,CAAC,KAAK,CAAC,CAAC;AAC9C,YAAA,MAAM,CAAC,MAAM,CAAC,KAAK,EAAE,CAAC,CAAC,CAAC;AACxB,YAAA,IAAI,CAAC,cAAc,CAAC,QAAQ,CAAC,MAAM,CAAC,CAAC;AACxC,SAAA;KACJ;AAED,IAAA,cAAc,CAAC,KAAK,EAAA;AAChB,QAAA,MAAM,SAAS,GAAG,KAAK,CAAC,OAAO,GAAG,QAAQ,GAAG,UAAU,CAAC;AACxD,QAAA,IAAI,CAAC,gBAAgB,CAAC,GAAG,CAAC,QAAQ,CAAC,CAAC,QAAQ,CAAC,SAAS,CAAC,CAAC;KAC3D;;kIApMQ,oCAAoC,EAAA,IAAA,EAAA,CAAA,EAAA,KAAA,EAAA5D,IAAA,CAAA,WAAA,EAAA,EAAA,EAAA,KAAA,EAAAC,IAAA,CAAA,cAAA,EAAA,EAAA,EAAA,KAAA,EAAA,EAAA,CAAA,gBAAA,EAAA,EAAA,EAAA,KAAA,EAAAe,IAAA,CAAA,WAAA,EAAA,CAAA,EAAA,MAAA,EAAA,EAAA,CAAA,eAAA,CAAA,SAAA,EAAA,CAAA,CAAA;AAApC,oCAAA,CAAA,IAAA,GAAA,EAAA,CAAA,oBAAA,CAAA,EAAA,UAAA,EAAA,QAAA,EAAA,OAAA,EAAA,SAAA,EAAA,IAAA,EAAA,oCAAoC,yDCpBjD,2/QA2JW,EAAA,MAAA,EAAA,CAAA,4YAAA,CAAA,EAAA,UAAA,EAAA,CAAA,EAAA,IAAA,EAAAT,EAAA,CAAA,OAAA,EAAA,QAAA,EAAA,UAAA,EAAA,QAAA,EAAA,CAAA,SAAA,CAAA,EAAA,EAAA,EAAA,IAAA,EAAAU,IAAA,CAAA,cAAA,EAAA,QAAA,EAAA,kBAAA,EAAA,MAAA,EAAA,CAAA,UAAA,EAAA,eAAA,EAAA,OAAA,EAAA,UAAA,EAAA,MAAA,EAAA,IAAA,EAAA,eAAA,EAAA,YAAA,EAAA,iBAAA,EAAA,UAAA,EAAA,SAAA,EAAA,kBAAA,CAAA,EAAA,OAAA,EAAA,CAAA,QAAA,EAAA,cAAA,CAAA,EAAA,QAAA,EAAA,CAAA,gBAAA,CAAA,EAAA,EAAA,EAAA,IAAA,EAAAT,IAAA,CAAA,YAAA,EAAA,QAAA,EAAA,gBAAA,EAAA,MAAA,EAAA,CAAA,OAAA,EAAA,YAAA,EAAA,YAAA,EAAA,oBAAA,EAAA,WAAA,CAAA,EAAA,QAAA,EAAA,CAAA,cAAA,CAAA,EAAA,EAAA,EAAA,IAAA,EAAAC,EAAA,CAAA,SAAA,EAAA,QAAA,EAAA,YAAA,EAAA,MAAA,EAAA,CAAA,UAAA,EAAA,eAAA,EAAA,UAAA,CAAA,EAAA,QAAA,EAAA,CAAA,WAAA,CAAA,EAAA,EAAA,EAAA,IAAA,EAAAC,GAAA,CAAA,SAAA,EAAA,QAAA,EAAA,YAAA,EAAA,QAAA,EAAA,CAAA,WAAA,CAAA,EAAA,EAAA,EAAA,IAAA,EAAAC,IAAA,CAAA,wBAAA,EAAA,QAAA,EAAA,uBAAA,EAAA,MAAA,EAAA,CAAA,kBAAA,EAAA,MAAA,EAAA,WAAA,EAAA,cAAA,EAAA,qBAAA,EAAA,gCAAA,EAAA,kBAAA,EAAA,WAAA,EAAA,qBAAA,EAAA,4BAAA,EAAA,8BAAA,EAAA,uCAAA,EAAA,WAAA,EAAA,uBAAA,EAAA,0BAAA,EAAA,gCAAA,EAAA,iCAAA,EAAA,kCAAA,EAAA,uBAAA,EAAA,mCAAA,CAAA,EAAA,OAAA,EAAA,CAAA,WAAA,CAAA,EAAA,EAAA,EAAA,IAAA,EAAAC,KAAA,CAAA,WAAA,EAAA,QAAA,EAAA,eAAA,EAAA,MAAA,EAAA,CAAA,kBAAA,EAAA,UAAA,EAAA,aAAA,EAAA,OAAA,EAAA,UAAA,EAAA,aAAA,EAAA,UAAA,EAAA,YAAA,EAAA,UAAA,EAAA,mBAAA,CAAA,EAAA,OAAA,EAAA,CAAA,QAAA,EAAA,aAAA,CAAA,EAAA,QAAA,EAAA,CAAA,aAAA,CAAA,EAAA,EAAA,EAAA,IAAA,EAAAC,KAAA,CAAA,OAAA,EAAA,QAAA,EAAA,UAAA,EAAA,MAAA,EAAA,CAAA,OAAA,EAAA,QAAA,EAAA,SAAA,EAAA,SAAA,EAAA,UAAA,CAAA,EAAA,QAAA,EAAA,CAAA,SAAA,CAAA,EAAA,EAAA,EAAA,IAAA,EAAA,GAAA,CAAA,cAAA,EAAA,QAAA,EAAA,kBAAA,EAAA,MAAA,EAAA,CAAA,eAAA,EAAA,UAAA,CAAA,EAAA,QAAA,EAAA,CAAA,gBAAA,CAAA,EAAA,CAAA,EAAA,UAAA,EAAA,CAAA,EAAA,IAAA,EAAAb,IAAA,CAAA,aAAA,EAAA,QAAA,EAAA,8CAAA,EAAA,EAAA,EAAA,IAAA,EAAAA,IAAA,CAAA,oBAAA,EAAA,QAAA,EAAA,0FAAA,EAAA,EAAA,EAAA,IAAA,EAAAA,IAAA,CAAA,kBAAA,EAAA,QAAA,EAAA,aAAA,EAAA,MAAA,EAAA,CAAA,WAAA,CAAA,EAAA,OAAA,EAAA,CAAA,UAAA,CAAA,EAAA,QAAA,EAAA,CAAA,QAAA,CAAA,EAAA,EAAA,EAAA,IAAA,EAAA,GAAA,CAAA,IAAA,EAAA,QAAA,EAAA,QAAA,EAAA,MAAA,EAAA,CAAA,MAAA,EAAA,UAAA,EAAA,UAAA,CAAA,EAAA,EAAA,EAAA,IAAA,EAAAQ,IAAA,CAAA,QAAA,EAAA,QAAA,EAAA,WAAA,EAAA,MAAA,EAAA,CAAA,IAAA,CAAA,EAAA,EAAA,EAAA,IAAA,EAAAA,IAAA,CAAA,QAAA,EAAA,QAAA,EAAA,WAAA,EAAA,EAAA,EAAA,IAAA,EAAA8B,KAAA,CAAA,QAAA,EAAA,QAAA,EAAA,yHAAA,EAAA,MAAA,EAAA,CAAA,IAAA,EAAA,UAAA,EAAA,UAAA,EAAA,MAAA,EAAA,OAAA,EAAA,UAAA,EAAA,aAAA,EAAA,mBAAA,EAAA,kBAAA,CAAA,EAAA,QAAA,EAAA,CAAA,UAAA,CAAA,EAAA,EAAA,EAAA,IAAA,EAAAtC,IAAA,CAAA,oBAAA,EAAA,QAAA,EAAA,8MAAA,EAAA,EAAA,EAAA,IAAA,EAAAA,IAAA,CAAA,eAAA,EAAA,QAAA,EAAA,2CAAA,EAAA,EAAA,EAAA,IAAA,EAAAA,IAAA,CAAA,eAAA,EAAA,QAAA,EAAA,mBAAA,EAAA,MAAA,EAAA,CAAA,UAAA,EAAA,iBAAA,EAAA,SAAA,CAAA,EAAA,OAAA,EAAA,CAAA,eAAA,CAAA,EAAA,EAAA,EAAA,IAAA,EAAAA,IAAA,CAAA,iBAAA,EAAA,QAAA,EAAA,wIAAA,EAAA,MAAA,EAAA,CAAA,UAAA,CAAA,EAAA,EAAA,EAAA,IAAA,EAAA,GAAA,CAAA,OAAA,EAAA,QAAA,EAAA,kBAAA,EAAA,MAAA,EAAA,CAAA,SAAA,EAAA,cAAA,EAAA,eAAA,CAAA,EAAA,EAAA,EAAA,IAAA,EAAAQ,IAAA,CAAA,OAAA,EAAA,QAAA,EAAA,UAAA,EAAA,MAAA,EAAA,CAAA,OAAA,EAAA,IAAA,CAAA,EAAA,EAAA,EAAA,IAAA,EAAAR,IAAA,CAAA,oBAAA,EAAA,QAAA,EAAA,eAAA,EAAA,MAAA,EAAA,CAAA,UAAA,EAAA,aAAA,EAAA,SAAA,CAAA,EAAA,OAAA,EAAA,CAAA,eAAA,CAAA,EAAA,QAAA,EAAA,CAAA,QAAA,CAAA,EAAA,EAAA,EAAA,IAAA,EAAAY,KAAA,CAAA,OAAA,EAAA,QAAA,EAAA,wDAAA,EAAA,MAAA,EAAA,CAAA,OAAA,EAAA,eAAA,EAAA,UAAA,EAAA,UAAA,EAAA,OAAA,EAAA,YAAA,EAAA,UAAA,EAAA,WAAA,CAAA,EAAA,OAAA,EAAA,CAAA,iBAAA,EAAA,WAAA,EAAA,SAAA,CAAA,EAAA,QAAA,EAAA,CAAA,SAAA,CAAA,EAAA,EAAA,EAAA,IAAA,EAAAA,KAAA,CAAA,aAAA,EAAA,QAAA,EAAA,iBAAA,EAAA,EAAA,EAAA,IAAA,EAAAA,KAAA,CAAA,YAAA,EAAA,QAAA,EAAA,wBAAA,EAAA,MAAA,EAAA,CAAA,+BAAA,EAAA,aAAA,EAAA,IAAA,EAAA,iBAAA,EAAA,uBAAA,EAAA,UAAA,CAAA,EAAA,OAAA,EAAA,CAAA,sBAAA,CAAA,EAAA,QAAA,EAAA,CAAA,cAAA,EAAA,iBAAA,CAAA,EAAA,EAAA,EAAA,IAAA,EAAA,GAAA,CAAA,aAAA,EAAA,QAAA,EAAA,iBAAA,EAAA,QAAA,EAAA,CAAA,eAAA,CAAA,EAAA,CAAA,EAAA,KAAA,EAAA,EAAA,OAAA,EAAA,GAAA,CAAA,SAAA,EAAA,EAAA,CAAA,CAAA;4FDvIE,oCAAoC,EAAA,UAAA,EAAA,CAAA;kBALhD,SAAS;AAAC,YAAA,IAAA,EAAA,CAAA;AACP,oBAAA,QAAQ,EAAE,mBAAmB;AAC7B,oBAAA,WAAW,EAAE,gCAAgC;oBAC7C,SAAS,EAAE,CAAC,gCAAgC,CAAC;AAChD,iBAAA,CAAA;;;MEiCY,iCAAiC,CAAA;;+HAAjC,iCAAiC,EAAA,IAAA,EAAA,EAAA,EAAA,MAAA,EAAA,EAAA,CAAA,eAAA,CAAA,QAAA,EAAA,CAAA,CAAA;gIAAjC,iCAAiC,EAAA,YAAA,EAAA,CA1BtC,oCAAoC,CAAA,EAAA,OAAA,EAAA,CAGpC,YAAY;QAEZ,WAAW;QACX,mBAAmB;QAEnB,aAAa;QACb,eAAe;QACf,kBAAkB;QAClB,aAAa;QACb,cAAc;QACd,eAAe;QACf,gBAAgB;QAChB,eAAe;QACf,cAAc;QACd,oBAAoB;QACpB,cAAc;AAEd,QAAA,wBAAwB,aAGxB,oCAAoC,CAAA,EAAA,CAAA,CAAA;AAG/B,iCAAA,CAAA,IAAA,GAAA,EAAA,CAAA,mBAAA,CAAA,EAAA,UAAA,EAAA,QAAA,EAAA,OAAA,EAAA,SAAA,EAAA,QAAA,EAAA,EAAA,EAAA,IAAA,EAAA,iCAAiC,EAxBjC,OAAA,EAAA,CAAA;YACL,YAAY;YAEZ,WAAW;YACX,mBAAmB;YAEnB,aAAa;YACb,eAAe;YACf,kBAAkB;YAClB,aAAa;YACb,cAAc;YACd,eAAe;YACf,gBAAgB;YAChB,eAAe;YACf,cAAc;YACd,oBAAoB;YACpB,cAAc;YAEd,wBAAwB;AAC3B,SAAA,CAAA,EAAA,CAAA,CAAA;4FAKQ,iCAAiC,EAAA,UAAA,EAAA,CAAA;kBA5B7C,QAAQ;AAAC,YAAA,IAAA,EAAA,CAAA;AACN,oBAAA,YAAY,EAAE;wBACV,oCAAoC;AACvC,qBAAA;AACD,oBAAA,OAAO,EAAE;wBACL,YAAY;wBAEZ,WAAW;wBACX,mBAAmB;wBAEnB,aAAa;wBACb,eAAe;wBACf,kBAAkB;wBAClB,aAAa;wBACb,cAAc;wBACd,eAAe;wBACf,gBAAgB;wBAChB,eAAe;wBACf,cAAc;wBACd,oBAAoB;wBACpB,cAAc;wBAEd,wBAAwB;AAC3B,qBAAA;AACD,oBAAA,OAAO,EAAE;wBACL,oCAAoC;AACvC,qBAAA;AACJ,iBAAA,CAAA;;;MC3BY,cAAc,CAAA;AAA3B,IAAA,WAAA,GAAA;AACI,QAAA,IAAA,CAAA,YAAY,GAAG;AACX,YAAA,UAAU,EAAE,EAAE;AACd,YAAA,QAAQ,EAAE,EAAE;AACZ,YAAA,UAAU,EAAE,EAAE;AACd,YAAA,QAAQ,EAAE,EAAE;AACZ,YAAA,cAAc,EAAE;AACZ,gBAAA,IAAI,EAAE,EAAE;AACR,gBAAA,KAAK,EAAE,EAAE;AACZ,aAAA;AACD,YAAA,WAAW,EAAE,EAAE;SAClB,CAAC;AACF,QAAA,IAAA,CAAA,eAAe,GAAG;AACd,YAAA,IAAI,EAAE,EAAE;AACR,YAAA,YAAY,EAAE,EAAE;AAChB,YAAA,SAAS,EAAE,EAAE;AACb,YAAA,UAAU,EAAE,EAAE;AACd,YAAA,MAAM,EAAE,EAAE;AACV,YAAA,cAAc,EAAE,EAAE;AAClB,YAAA,MAAM,EAAE,EAAE;AACV,YAAA,YAAY,EAAE,EAAE;SACnB,CAAC;KACL;AAAA,CAAA;MAwBY,kBAAkB,CAAA;AAA/B,IAAA,WAAA,GAAA;QACI,IAAE,CAAA,EAAA,GAAG,IAAI,CAAC;QACV,IAAI,CAAA,IAAA,GAAG,EAAE,CAAC;QACV,IAAI,CAAA,IAAA,GAAG,EAAE,CAAC;QACV,IAAU,CAAA,UAAA,GAAG,EAAE,CAAC;QAChB,IAAS,CAAA,SAAA,GAAG,EAAE,CAAC;AACf,QAAA,IAAA,CAAA,WAAW,GAAG;AACV,YAAA,EAAE,EAAE,IAAI;AACR,YAAA,SAAS,EAAE,EAAE;AACb,YAAA,QAAQ,EAAE,EAAE;AACZ,YAAA,KAAK,EAAE,EAAE;AACT,YAAA,aAAa,EAAE,EAAE;SACpB,CAAC;QACF,IAAM,CAAA,MAAA,GAAG,EAAE,CAAC;KACf;AAAA;;AC3ED;MAMa,wBAAwB,CAAA;IAEjC,WACY,CAAA,IAAgB,EACO,WAAgB,EAAA;QADvC,IAAI,CAAA,IAAA,GAAJ,IAAI,CAAY;QACO,IAAW,CAAA,WAAA,GAAX,WAAW,CAAK;KAC9C;IAEL,oBAAoB,CAAC,KAAK,EAAE,cAAc,EAAA;AACtC,QAAA,OAAO,IAAI,CAAC,IAAI,CAAC,IAAI,CAAC,GAAG,IAAI,CAAC,WAAW,CAAC,kBAAkB,CAAiB,cAAA,EAAA,KAAK,mBAAmB,EAAE,cAAc,CAAC,CAAC;KAC1H;IAED,qBAAqB,CAAC,KAAK,EAAE,gBAAgB,EAAA;AACzC,QAAA,OAAO,IAAI,CAAC,IAAI,CAAC,GAAG,CAAkB,GAAG,IAAI,CAAC,WAAW,CAAC,kBAAkB,CAAiB,cAAA,EAAA,KAAK,qBAAqB,gBAAgB,CAAA,CAAE,CAAC,CAAC;KAC9I;AAED,IAAA,oBAAoB,CAAC,KAAK,EAAE,gBAAgB,EAAE,cAAc,EAAA;QACxD,OAAO,IAAI,CAAC,IAAI,CAAC,KAAK,CAAC,CAAA,EAAG,IAAI,CAAC,WAAW,CAAC,kBAAkB,CAAA,cAAA,EAAiB,KAAK,CAAqB,kBAAA,EAAA,gBAAgB,EAAE,EAAE,cAAc,CAAC,CAAC;KAC/I;AAED,IAAA,uBAAuB,CAAC,MAAc,EAAE,QAAgB,EAAE,MAAc,EAAE,OAAe,EAAE,WAAW,EAAE,SAAS,EAAE,KAAK,EAAA;AACpH,QAAA,IAAI,MAAM,GAAG,IAAI,UAAU,EAAE,CAAC;QAE9B,MAAM,GAAG,MAAM,CAAC,MAAM,CAAC,QAAQ,EAAE,MAAM,CAAC,CAAC;QACzC,MAAM,GAAG,MAAM,CAAC,MAAM,CAAC,UAAU,EAAE,QAAQ,CAAC,CAAC;QAC7C,MAAM,GAAG,MAAM,CAAC,MAAM,CAAC,QAAQ,EAAE,MAAM,CAAC,CAAC;QACzC,MAAM,GAAG,MAAM,CAAC,MAAM,CAAC,SAAS,EAAE,OAAO,CAAC,CAAC;AAE3C,QAAA,IAAI,WAAW,EAAE;YACb,MAAM,GAAG,MAAM,CAAC,MAAM,CAAC,UAAU,EAAE,WAAW,CAAC,CAAC;AACnD,SAAA;AAED,QAAA,SAAS,CAAC,OAAO,CAAC,MAAM,IAAI,MAAM,GAAG,MAAM,CAAC,MAAM,CAAC,QAAQ,EAAE,MAAM,CAAC,CAAC,CAAC;QAEtE,OAAO,IAAI,CAAC,IAAI,CAAC,GAAG,CAA6B,CAAA,EAAG,IAAI,CAAC,WAAW,CAAC,kBAAkB,CAAiB,cAAA,EAAA,KAAK,wBAAwB,EAAE,EAAE,MAAM,EAAE,MAAM,EAAE,CAAC,CAAC;KAC9J;IAED,qBAAqB,CAAC,KAAK,EAAE,gBAAgB,EAAA;AACzC,QAAA,OAAO,IAAI,CAAC,IAAI,CAAC,MAAM,CAAC,GAAG,IAAI,CAAC,WAAW,CAAC,kBAAkB,CAAiB,cAAA,EAAA,KAAK,qBAAqB,gBAAgB,CAAA,CAAE,CAAC,CAAC;KAChI;AAED,IAAA,sBAAsB,CAAC,KAAK,EAAE,gBAAgB,EAAE,MAAM,EAAA;QAClD,OAAO,IAAI,CAAC,IAAI,CAAC,KAAK,CAAC,CAAA,EAAG,IAAI,CAAC,WAAW,CAAC,kBAAkB,CAAA,cAAA,EAAiB,KAAK,CAAqB,kBAAA,EAAA,gBAAgB,SAAS,EAAE,MAAM,CAAC,CAAC;KAC9I;;AA1CQ,wBAAA,CAAA,IAAA,GAAA,EAAA,CAAA,kBAAA,CAAA,EAAA,UAAA,EAAA,QAAA,EAAA,OAAA,EAAA,SAAA,EAAA,QAAA,EAAA,EAAA,EAAA,IAAA,EAAA,wBAAwB,4CAIrB,aAAa,EAAA,CAAA,EAAA,MAAA,EAAA,EAAA,CAAA,eAAA,CAAA,UAAA,EAAA,CAAA,CAAA;AAJhB,wBAAA,CAAA,KAAA,GAAA,EAAA,CAAA,qBAAA,CAAA,EAAA,UAAA,EAAA,QAAA,EAAA,OAAA,EAAA,SAAA,EAAA,QAAA,EAAA,EAAA,EAAA,IAAA,EAAA,wBAAwB,cAHrB,MAAM,EAAA,CAAA,CAAA;4FAGT,wBAAwB,EAAA,UAAA,EAAA,CAAA;kBAJpC,UAAU;AAAC,YAAA,IAAA,EAAA,CAAA;AACR,oBAAA,UAAU,EAAE,MAAM;AACrB,iBAAA,CAAA;;0BAMQ,MAAM;2BAAC,aAAa,CAAA;;;ACsB7B;MAOa,2BAA2B,CAAA;AA0CpC,IAAA,WAAA,CACY,MAAiB,EACjB,MAAc,EACd,wBAAkD;;AAGlD,IAAA,cAA8B,EAC/B,aAA4B,EAC5B,WAAwB,EACxB,YAA0B;;;QARzB,IAAM,CAAA,MAAA,GAAN,MAAM,CAAW;QACjB,IAAM,CAAA,MAAA,GAAN,MAAM,CAAQ;QACd,IAAwB,CAAA,wBAAA,GAAxB,wBAAwB,CAA0B;QAGlD,IAAc,CAAA,cAAA,GAAd,cAAc,CAAgB;QAC/B,IAAa,CAAA,aAAA,GAAb,aAAa,CAAe;QAC5B,IAAW,CAAA,WAAA,GAAX,WAAW,CAAa;QACxB,IAAY,CAAA,YAAA,GAAZ,YAAY,CAAc;QAjDrC,IAAM,CAAA,MAAA,GAAG,MAAM,CAAC;QAChB,IAAW,CAAA,WAAA,GAAG,WAAW,CAAC;QAE1B,IAAiB,CAAA,iBAAA,GAAG,iBAAiB,CAAC;QACtC,IAAc,CAAA,cAAA,GAAG,cAAc,CAAC;QAChC,IAAe,CAAA,eAAA,GAAG,eAAe,CAAC;QAElC,IAAiB,CAAA,iBAAA,GAAG,iBAAiB,CAAC;QACtC,IAAkB,CAAA,kBAAA,GAAG,kBAAkB,CAAC;QACxC,IAAU,CAAA,UAAA,GAAG,UAAU,CAAC;QACxB,IAAU,CAAA,UAAA,GAAG,UAAU,CAAC;QAExB,IAAmB,CAAA,mBAAA,GAAW,aAAa,CAAC;QAK5C,IAAU,CAAA,UAAA,GAAU,EAAE,CAAC;AAEvB,QAAA,IAAA,CAAA,UAAU,GAAG,CAAC,IAAI,kBAAkB,EAAE,CAAC,CAAC;QACxC,IAAgB,CAAA,gBAAA,GAAW,CAAC,CAAC;AAC7B,QAAA,IAAA,CAAA,eAAe,GAAa,CAAC,IAAI,EAAE,MAAM,EAAE,MAAM,EAAE,YAAY,EAAE,WAAW,EAAE,aAAa,EAAE,QAAQ,EAAE,QAAQ,CAAC,CAAC;QAEjH,IAAU,CAAA,UAAA,GAAY,KAAK,CAAC;QAE5B,IAAQ,CAAA,QAAA,GAAG,IAAI,WAAW,CAAC,EAAE,EAAE,UAAU,CAAC,QAAQ,CAAC,CAAC;QAEpD,IAAc,CAAA,cAAA,GAAY,KAAK,CAAC;QAChC,IAAY,CAAA,YAAA,GAAgB,IAAI,WAAW,CAAC,CAAC,KAAK,CAAC,CAAC,CAAC;QACrD,IAAS,CAAA,SAAA,GAAkB,EAAE,CAAC;QAC9B,IAAoB,CAAA,oBAAA,GAAW,CAAC,CAAC;QAEjC,IAAiB,CAAA,iBAAA,GAAU,EAAE,CAAC;KAmBzB;IAEL,QAAQ,GAAA;QACJ,IAAI,CAAC,KAAK,GAAG,IAAI,CAAC,cAAc,CAAC,UAAU,CAAC,cAAc,CAAC,CAAC;QAC5D,IAAI,CAAC,gBAAgB,GAAG,IAAI,CAAC,cAAc,CAAC,UAAU,CAAC,kBAAkB,CAAC,CAAC;AAC3E,QAAA,IAAI,CAAC,eAAe,GAAG,IAAI,CAAC,gBAAgB,IAAI,gBAAgB,CAAC,YAAY,GAAG,OAAO,GAAG,QAAQ,CAAC;AAEnG,QAAA,IAAI,IAAI,CAAC,gBAAgB,IAAI,gBAAgB,CAAC,aAAa,EAAE;AACzD,YAAA,IAAI,CAAC,UAAU,GAAG,aAAa,CAAC,+BAA+B,CAAC;YAChE,IAAI,CAAC,oBAAoB,GAAG,IAAI,CAAC,UAAU,CAAC,MAAM,CAAC;AACtD,SAAA;AAAM,aAAA,IAAI,IAAI,CAAC,gBAAgB,IAAI,gBAAgB,CAAC,YAAY,EAAE;AAC/D,YAAA,IAAI,CAAC,UAAU,GAAG,aAAa,CAAC,8BAA8B,CAAC;YAC/D,IAAI,CAAC,oBAAoB,GAAG,IAAI,CAAC,UAAU,CAAC,MAAM,CAAC;AACtD,SAAA;KACJ;IAED,eAAe,GAAA;AACX,QAAA,KAAK,CACD,IAAI,CAAC,IAAI,CAAC,UAAU,EACpB,IAAI,CAAC,UAAU,CAAC,KAAK,EACrB,SAAS,CAAC,IAAI,CAAC,UAAU,CAAC,aAAa,EAAE,OAAO,CAAC,CACpD,CAAC,IAAI,CACF,SAAS,CAAC,EAAE,CAAC,EACb,SAAS,CAAC,MAAU;AAEhB,YAAA,IAAI,CAAC,SAAS,GAAG,EAAE,CAAC;YAEpB,IAAI,IAAI,CAAC,UAAU,EAAE;AACjB,gBAAA,IAAI,WAAW,GAAG,OAAO,GAAG,IAAI,CAAC,WAAW,CAAC;AAChD,aAAA;YAED,IAAI,IAAI,CAAC,cAAc,EAAE;gBACrB,IAAI,kBAAkB,GAAG,IAAI,CAAC,YAAY,CAAC,KAAK,CAAC,MAAM,GAAG,CAAC,CAAC;AAC5D,gBAAA,IAAI,kBAAkB,IAAI,IAAI,CAAC,oBAAoB,EAAE;AACjD,oBAAA,IAAI,CAAC,cAAc,GAAG,KAAK,CAAC;AAC/B,iBAAA;AAAM,qBAAA;AACH,oBAAA,IAAI,CAAC,SAAS,CAAC,IAAI,CAAC,aAAa,GAAG,IAAI,CAAC,YAAY,CAAC,KAAK,CAAC,CAAC;AAChE,iBAAA;AACJ,aAAA;YAED,OAAO,IAAI,CAAC,wBAAwB,CAAC,uBAAuB,CACxD,IAAI,CAAC,SAAS,CAAC,SAAS,EACxB,IAAI,CAAC,SAAS,CAAC,QAAQ,EACvB,IAAI,CAAC,IAAI,CAAC,MAAM,EAChB,IAAI,CAAC,IAAI,CAAC,SAAS,EACnB,WAAW,EACX,IAAI,CAAC,SAAS,EACd,IAAI,CAAC,KAAK,CACb,CAAC,IAAI,CAAC,UAAU,CAAC,MAAMuF,EAAY,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC;AACjD,SAAC,CAAC,EACF,GAAG,CAAC,CAAC,QAAoC,KAAS;YAC9C,IAAI,QAAQ,IAAI,IAAI,EAAE;AAClB,gBAAA,IAAI,CAAC,gBAAgB,GAAG,CAAC,CAAC;AAC1B,gBAAA,OAAO,EAAE,CAAC;AACb,aAAA;AAED,YAAA,IAAI,CAAC,gBAAgB,GAAG,QAAQ,CAAC,UAAU,CAAC;YAC5C,OAAO,QAAQ,CAAC,OAAO,CAAC;SAC3B,CAAC,CACL,CAAC,SAAS,CAAC,CAAC,UAAU,KAAI;AACvB,YAAA,IAAI,CAAC,UAAU,GAAG,UAAU,CAAC;AACjC,SAAC,CAAC,CAAC;KACN;AAED,IAAA,QAAQ,CAAC,KAAa,EAAA;AAClB,QAAA,IAAI,CAAC,UAAU,GAAG,IAAI,CAAC;AACvB,QAAA,IAAI,CAAC,WAAW,GAAG,KAAK,CAAC;AAEzB,QAAA,IAAI,KAAK,CAAC,MAAM,IAAI,CAAC,EAAE;YACnB,IAAI,CAAC,WAAW,EAAE,CAAC;AACtB,SAAA;AAED,QAAA,IAAI,CAAC,UAAU,CAAC,aAAa,CAAC,KAAK,EAAE,CAAC;KACzC;IAED,WAAW,GAAA;AACP,QAAA,IAAI,CAAC,UAAU,GAAG,KAAK,CAAC;AACxB,QAAA,IAAI,CAAC,SAAS,CAAC,WAAW,EAAE,CAAC;KAChC;AAED,IAAA,gBAAgB,CAAC,QAAQ,EAAA;AACrB,QAAA,IAAI,CAAC,iBAAiB,GAAG,EAAE,CAAC;AAE5B,QAAA,QAAQ,CAAC,OAAO,CAAC,IAAI,IAAG;AACpB,YAAA,IAAI,MAAM,GAAG;gBACT,UAAU,EAAE,IAAI,CAAC,aAAa,IAAI,IAAI,CAAC,WAAW,CAAC,YAAY,CAC3D,CAAC,IAAI,CAAC,SAAS,GAAG,IAAI,CAAC,SAAS,GAAG,GAAG,GAAG,EAAE,KAAK,IAAI,CAAC,QAAQ,GAAG,IAAI,CAAC,QAAQ,GAAG,EAAE,CAAC,EACnF,UAAU,CAAC,gCAAgC,CAAC;AAChD,gBAAA,IAAI,GAAG,IAAI,CAAC,SAAS,GAAG,IAAI,CAAC,SAAS,GAAG,GAAG,IAAI,IAAI,CAAC,QAAQ,GAAG,IAAI,CAAC,QAAQ,GAAG,EAAE,CAAC,GAAG,EAAE,CAAC;aAC5F,CAAC;AACF,YAAA,IAAI,CAAC,iBAAiB,CAAC,IAAI,CAAC,MAAM,CAAC,CAAC;AACxC,SAAC,CAAC,CAAC;KACN;AAED,IAAA,gBAAgB,CAAC,cAAc,EAAA;QAE3B,MAAM,MAAM,GAAG,IAAI,CAAC,MAAM,CAAC,IAAI,CAAC,kBAAkB,EAAE;AAChD,YAAA,QAAQ,EAAE,OAAO;AACjB,YAAA,QAAQ,EAAE,OAAO;AACjB,YAAA,IAAI,EAAE;gBACF,IAAI,EAAE,aAAa,CAAC,MAAM;AAC1B,gBAAA,IAAI,EAAE,WAAW;AACjB,gBAAA,MAAM,EAAE,yBAAyB;gBACjC,IAAI,EAAE,KAAK,GAAG,cAAc,CAAC,IAAI,GAAG,MAAM,GAAG,2EAA2E;gBACxH,SAAS,EAAE,eAAe,CAAC,gBAAgB;gBAC3C,SAAS,EAAE,eAAe,CAAC,gBAAgB;AAC9C,aAAA;AACJ,SAAA,CAAC,CAAC;QACH,MAAM,CAAC,WAAW,EAAE,CAAC,SAAS,CAAC,GAAG,IAAG;AACjC,YAAA,IAAI,GAAG,EAAE;AACL,gBAAA,IAAI,CAAC,qBAAqB,CAAC,cAAc,CAAC,EAAE,CAAC,CAAC;AACjD,aAAA;AACL,SAAC,CAAC,CAAA;KACL;AAED,IAAA,qBAAqB,CAAC,gBAAgB,EAAA;AAClC,QAAA,IAAI,CAAC,wBAAwB,CAAC,qBAAqB,CAAC,IAAI,CAAC,KAAK,EAAE,gBAAgB,CAAC,CAAC,SAAS,CAAC,CAAC,SAAS,KAAI;AACtG,YAAA,IAAI,SAAS,EAAE;AACX,gBAAA,IAAI,CAAC,UAAU,CAAC,aAAa,CAAC,KAAK,EAAE,CAAC;AACzC,aAAA;AACL,SAAC,CAAC,CAAC;KACN;AAED,IAAA,sBAAsB,CAAC,cAAc,EAAA;AACjC,QAAA,IAAI,SAAS,GAAG,cAAc,CAAC,MAAM,IAAI,QAAQ,GAAG,UAAU,GAAG,QAAQ,CAAC;AAE1E,QAAA,IAAI,WAAW,GAAG;AACd,YAAA,MAAM,EAAE,SAAS;SACpB,CAAA;AAED,QAAA,IAAI,CAAC,wBAAwB,CAAC,sBAAsB,CAAC,IAAI,CAAC,KAAK,EAAE,cAAc,CAAC,EAAE,EAAE,WAAW,CAAC;aAC3F,SAAS,CAAC,QAAQ,IAAG;AAClB,YAAA,IAAI,QAAQ,EAAE;AACV,gBAAA,IAAI,CAAC,UAAU,CAAC,aAAa,CAAC,KAAK,EAAE,CAAC;AACzC,aAAA;SACJ,EAAE,KAAK,IAAG;AACP,YAAA,OAAO,CAAC,GAAG,CAAC,mCAAmC,EAAE,KAAK,CAAC,CAAC;AAC5D,SAAC,CAAC,CAAA;KACT;AAED,IAAA,cAAc,CAAC,UAAU,EAAA;AACrB,QAAA,QAAQ,UAAU;YACd,KAAK,sBAAsB,CAAC,eAAe;AACvC,gBAAA,IAAI,CAAC,MAAM,CAAC,QAAQ,CAAC,CAAC,CAAmB,gBAAA,EAAA,IAAI,CAAC,eAAe,CAAW,SAAA,CAAA,CAAC,CAAC,CAAC;gBAC3E,MAAM;YACV,KAAK,sBAAsB,CAAC,kBAAkB;AAC1C,gBAAA,IAAI,CAAC,MAAM,CAAC,QAAQ,CAAC,CAAC,CAAmB,gBAAA,EAAA,IAAI,CAAC,eAAe,CAAc,YAAA,CAAA,CAAC,CAAC,CAAC;gBAC9E,MAAM;YACV,KAAK,sBAAsB,CAAC,cAAc;AACtC,gBAAA,IAAI,CAAC,MAAM,CAAC,QAAQ,CAAC,CAAC,CAAmB,gBAAA,EAAA,IAAI,CAAC,eAAe,CAAU,QAAA,CAAA,CAAC,CAAC,CAAC;gBAC1E,MAAM;YACV,KAAK,sBAAsB,CAAC,WAAW;gBACnC,IAAI,CAAC,MAAM,CAAC,QAAQ,CAAC,CAAC,CAAA,oBAAA,CAAsB,CAAC,CAAC,CAAC;gBAC/C,MAAM;YACV,KAAK,sBAAsB,CAAC,kBAAkB;gBAC1C,IAAI,CAAC,MAAM,CAAC,QAAQ,CAAC,CAAC,CAAA,2BAAA,CAA6B,CAAC,CAAC,CAAC;gBACtD,MAAM;AACb,SAAA;KACJ;AAED,IAAA,qBAAqB,CAAC,cAAc,EAAA;QAChC,QAAQ,cAAc,CAAC,IAAI;YACvB,KAAK,sBAAsB,CAAC,eAAe;AACvC,gBAAA,IAAI,CAAC,MAAM,CAAC,QAAQ,CAAC,CAAC,CAAmB,gBAAA,EAAA,cAAc,CAAC,EAAE,IAAI,IAAI,CAAC,eAAe,CAAkB,gBAAA,CAAA,CAAC,CAAC,CAAC;gBACvG,MAAM;YACV,KAAK,sBAAsB,CAAC,kBAAkB;AAC1C,gBAAA,IAAI,CAAC,MAAM,CAAC,QAAQ,CAAC,CAAC,CAAmB,gBAAA,EAAA,cAAc,CAAC,EAAE,IAAI,IAAI,CAAC,eAAe,CAAqB,mBAAA,CAAA,CAAC,CAAC,CAAC;gBAC1G,MAAM;YACV,KAAK,sBAAsB,CAAC,cAAc;AACtC,gBAAA,IAAI,CAAC,MAAM,CAAC,QAAQ,CAAC,CAAC,CAAmB,gBAAA,EAAA,cAAc,CAAC,EAAE,IAAI,IAAI,CAAC,eAAe,CAAiB,eAAA,CAAA,CAAC,CAAC,CAAC;gBACtG,MAAM;YACV,KAAK,sBAAsB,CAAC,WAAW;AACnC,gBAAA,IAAI,CAAC,MAAM,CAAC,QAAQ,CAAC,CAAC,CAAmB,gBAAA,EAAA,cAAc,CAAC,EAAE,CAAc,YAAA,CAAA,CAAC,CAAC,CAAC;gBAC3E,MAAM;YACV,KAAK,sBAAsB,CAAC,kBAAkB;AAC1C,gBAAA,IAAI,CAAC,MAAM,CAAC,QAAQ,CAAC,CAAC,CAAmB,gBAAA,EAAA,cAAc,CAAC,EAAE,CAAqB,mBAAA,CAAA,CAAC,CAAC,CAAC;gBAClF,MAAM;AACb,SAAA;KACJ;AAED,IAAA,kBAAkB,CAAC,IAAI,EAAA;AACnB,QAAA,IAAI,WAAmB,CAAC;AACxB,QAAA,IAAI,eAAe,GAAG,IAAI,CAAC,gBAAgB,IAAI,gBAAgB,CAAC,YAAY,GAAG,OAAO,GAAG,QAAQ,CAAC;AAElG,QAAA,QAAQ,IAAI;YACR,KAAK,sBAAsB,CAAC,eAAe;AACvC,gBAAA,WAAW,GAAG,CAAA,EAAG,eAAe,CAAA,gBAAA,CAAkB,CAAC;gBACnD,MAAM;YACV,KAAK,sBAAsB,CAAC,kBAAkB;AAC1C,gBAAA,WAAW,GAAG,CAAA,EAAG,eAAe,CAAA,mBAAA,CAAqB,CAAC;gBACtD,MAAM;YACV,KAAK,sBAAsB,CAAC,cAAc;AACtC,gBAAA,WAAW,GAAG,CAAA,EAAG,eAAe,CAAA,eAAA,CAAiB,CAAC;gBAClD,MAAM;YACV,KAAK,sBAAsB,CAAC,WAAW;gBACnC,WAAW,GAAG,aAAa,CAAC;gBAC5B,MAAM;YACV,KAAK,sBAAsB,CAAC,kBAAkB;gBAC1C,WAAW,GAAG,oBAAoB,CAAC;gBACnC,MAAM;AACb,SAAA;AAED,QAAA,OAAO,WAAW,CAAC;KACtB;AAED,IAAA,iBAAiB,CAAC,IAAI,EAAA;AAClB,QAAA,IAAI,cAAsB,CAAC;AAE3B,QAAA,QAAQ,IAAI;AACR,YAAA,KAAK,OAAO;gBACR,cAAc,GAAG,OAAO,CAAC;gBACzB,MAAM;AACV,YAAA,KAAK,QAAQ;gBACT,cAAc,GAAG,QAAQ,CAAC;gBAC1B,MAAM;AACV,YAAA,KAAK,SAAS;gBACV,cAAc,GAAG,SAAS,CAAC;gBAC3B,MAAM;AACb,SAAA;AAED,QAAA,OAAO,cAAc,CAAC;KACzB;;yHAlRQ,2BAA2B,EAAA,IAAA,EAAA,CAAA,EAAA,KAAA,EAAAnG,IAAA,CAAA,SAAA,EAAA,EAAA,EAAA,KAAA,EAAAC,IAAA,CAAA,MAAA,EAAA,EAAA,EAAA,KAAA,EAAAmG,wBAAA,EAAA,EAAA,EAAA,KAAA,EAAApF,IAAA,CAAA,cAAA,EAAA,EAAA,EAAA,KAAA,EAAAT,EAAA,CAAA,aAAA,EAAA,EAAA,EAAA,KAAA,EAAAU,IAAA,CAAA,WAAA,EAAA,EAAA,EAAA,KAAA,EAAAV,EAAA,CAAA,YAAA,EAAA,CAAA,EAAA,MAAA,EAAA,EAAA,CAAA,eAAA,CAAA,SAAA,EAAA,CAAA,CAAA;AAA3B,2BAAA,CAAA,IAAA,GAAA,EAAA,CAAA,oBAAA,CAAA,EAAA,UAAA,EAAA,QAAA,EAAA,OAAA,EAAA,SAAA,EAAA,IAAA,EAAA,2BAA2B,sfChDxC,u3SAkKM,EAAA,MAAA,EAAA,CAAA,6HAAA,CAAA,EAAA,UAAA,EAAA,CAAA,EAAA,IAAA,EAAAA,EAAA,CAAA,qBAAA,EAAA,QAAA,EAAA,oBAAA,EAAA,MAAA,EAAA,CAAA,MAAA,EAAA,UAAA,EAAA,OAAA,EAAA,mBAAA,CAAA,EAAA,OAAA,EAAA,CAAA,YAAA,CAAA,EAAA,EAAA,EAAA,IAAA,EAAAC,IAAA,CAAA,eAAA,EAAA,QAAA,EAAA,SAAA,EAAA,MAAA,EAAA,CAAA,SAAA,EAAA,MAAA,EAAA,OAAA,EAAA,MAAA,EAAA,OAAA,EAAA,MAAA,EAAA,QAAA,EAAA,MAAA,EAAA,MAAA,EAAA,MAAA,EAAA,QAAA,EAAA,SAAA,EAAA,QAAA,EAAA,QAAA,EAAA,YAAA,EAAA,WAAA,EAAA,UAAA,CAAA,EAAA,EAAA,EAAA,IAAA,EAAAC,IAAA,CAAA,QAAA,EAAA,QAAA,EAAA,6BAAA,EAAA,QAAA,EAAA,CAAA,UAAA,CAAA,EAAA,EAAA,EAAA,IAAA,EAAAC,EAAA,CAAA,aAAA,EAAA,QAAA,EAAA,mBAAA,EAAA,MAAA,EAAA,CAAA,UAAA,EAAA,eAAA,EAAA,uBAAA,EAAA,cAAA,EAAA,iBAAA,EAAA,OAAA,CAAA,EAAA,QAAA,EAAA,CAAA,eAAA,CAAA,EAAA,EAAA,EAAA,IAAA,EAAAH,EAAA,CAAA,qBAAA,EAAA,QAAA,EAAA,eAAA,EAAA,MAAA,EAAA,CAAA,QAAA,EAAA,QAAA,EAAA,eAAA,EAAA,qBAAA,EAAA,UAAA,EAAA,gBAAA,EAAA,YAAA,EAAA,MAAA,EAAA,OAAA,EAAA,MAAA,EAAA,UAAA,EAAA,WAAA,CAAA,EAAA,OAAA,EAAA,CAAA,MAAA,EAAA,OAAA,EAAA,UAAA,CAAA,EAAA,EAAA,EAAA,IAAA,EAAAI,KAAA,CAAA,OAAA,EAAA,QAAA,EAAA,UAAA,EAAA,QAAA,EAAA,CAAA,SAAA,CAAA,EAAA,EAAA,EAAA,IAAA,EAAAA,KAAA,CAAA,WAAA,EAAA,QAAA,EAAA,iBAAA,EAAA,MAAA,EAAA,CAAA,UAAA,EAAA,eAAA,EAAA,MAAA,CAAA,EAAA,QAAA,EAAA,CAAA,aAAA,CAAA,EAAA,EAAA,EAAA,IAAA,EAAAC,IAAA,CAAA,cAAA,EAAA,QAAA,EAAA,kBAAA,EAAA,MAAA,EAAA,CAAA,UAAA,EAAA,eAAA,EAAA,OAAA,EAAA,UAAA,EAAA,MAAA,EAAA,IAAA,EAAA,eAAA,EAAA,YAAA,EAAA,iBAAA,EAAA,UAAA,EAAA,SAAA,EAAA,kBAAA,CAAA,EAAA,OAAA,EAAA,CAAA,QAAA,EAAA,cAAA,CAAA,EAAA,QAAA,EAAA,CAAA,gBAAA,CAAA,EAAA,EAAA,EAAA,IAAA,EAAAH,IAAA,CAAA,YAAA,EAAA,QAAA,EAAA,oCAAA,EAAA,QAAA,EAAA,CAAA,cAAA,CAAA,EAAA,EAAA,EAAA,IAAA,EAAAA,IAAA,CAAA,MAAA,EAAA,QAAA,EAAA,sBAAA,EAAA,QAAA,EAAA,CAAA,QAAA,CAAA,EAAA,EAAA,EAAA,IAAA,EAAAI,IAAA,CAAA,YAAA,EAAA,QAAA,EAAA,eAAA,EAAA,MAAA,EAAA,CAAA,UAAA,CAAA,EAAA,QAAA,EAAA,CAAA,cAAA,CAAA,EAAA,CAAA,EAAA,UAAA,EAAA,CAAA,EAAA,IAAA,EAAAC,GAAA,CAAA,SAAA,EAAA,QAAA,EAAA,2BAAA,EAAA,MAAA,EAAA,CAAA,iBAAA,EAAA,mBAAA,EAAA,kBAAA,EAAA,gBAAA,EAAA,oBAAA,EAAA,mBAAA,EAAA,oBAAA,CAAA,EAAA,QAAA,EAAA,CAAA,WAAA,CAAA,EAAA,EAAA,EAAA,IAAA,EAAAuB,GAAA,CAAA,UAAA,EAAA,QAAA,EAAA,cAAA,EAAA,QAAA,EAAA,CAAA,YAAA,CAAA,EAAA,EAAA,EAAA,IAAA,EAAAC,GAAA,CAAA,WAAA,EAAA,QAAA,EAAA,eAAA,EAAA,MAAA,EAAA,CAAA,WAAA,EAAA,eAAA,EAAA,MAAA,EAAA,WAAA,EAAA,WAAA,EAAA,SAAA,CAAA,EAAA,OAAA,EAAA,CAAA,YAAA,CAAA,EAAA,QAAA,EAAA,CAAA,aAAA,CAAA,EAAA,EAAA,EAAA,IAAA,EAAAA,GAAA,CAAA,iBAAA,EAAA,QAAA,EAAA,qBAAA,EAAA,EAAA,EAAA,IAAA,EAAAA,GAAA,CAAA,eAAA,EAAA,QAAA,EAAA,mBAAA,EAAA,EAAA,EAAA,IAAA,EAAAC,GAAA,CAAA,OAAA,EAAA,QAAA,EAAA,kBAAA,EAAA,MAAA,EAAA,CAAA,SAAA,EAAA,cAAA,EAAA,eAAA,CAAA,EAAA,EAAA,EAAA,IAAA,EAAA7B,EAAA,CAAA,OAAA,EAAA,QAAA,EAAA,WAAA,EAAA,MAAA,EAAA,CAAA,iBAAA,EAAA,cAAA,EAAA,kBAAA,EAAA,qBAAA,EAAA,eAAA,CAAA,EAAA,OAAA,EAAA,CAAA,eAAA,CAAA,EAAA,QAAA,EAAA,CAAA,SAAA,CAAA,EAAA,EAAA,EAAA,IAAA,EAAAD,IAAA,CAAA,YAAA,EAAA,QAAA,EAAA,gBAAA,EAAA,MAAA,EAAA,CAAA,QAAA,EAAA,cAAA,CAAA,EAAA,EAAA,EAAA,IAAA,EAAAA,IAAA,CAAA,gBAAA,EAAA,QAAA,EAAA,oBAAA,EAAA,EAAA,EAAA,IAAA,EAAAA,IAAA,CAAA,aAAA,EAAA,QAAA,EAAA,sCAAA,EAAA,EAAA,EAAA,IAAA,EAAAA,IAAA,CAAA,UAAA,EAAA,QAAA,EAAA,cAAA,EAAA,EAAA,EAAA,IAAA,EAAAA,IAAA,CAAA,OAAA,EAAA,QAAA,EAAA,wBAAA,EAAA,EAAA,EAAA,IAAA,EAAA8B,GAAA,CAAA,IAAA,EAAA,QAAA,EAAA,QAAA,EAAA,MAAA,EAAA,CAAA,MAAA,EAAA,UAAA,EAAA,UAAA,CAAA,EAAA,EAAA,EAAA,IAAA,EAAA5B,KAAA,CAAA,cAAA,EAAA,QAAA,EAAA,6CAAA,EAAA,QAAA,EAAA,CAAA,gBAAA,CAAA,EAAA,EAAA,EAAA,IAAA,EAAA4B,GAAA,CAAA,OAAA,EAAA,QAAA,EAAA,WAAA,EAAA,MAAA,EAAA,CAAA,OAAA,EAAA,SAAA,CAAA,EAAA,EAAA,EAAA,IAAA,EAAA9B,IAAA,CAAA,eAAA,EAAA,QAAA,EAAA,mBAAA,EAAA,MAAA,EAAA,CAAA,iBAAA,EAAA,uBAAA,CAAA,EAAA,EAAA,EAAA,IAAA,EAAAA,IAAA,CAAA,SAAA,EAAA,QAAA,EAAA,aAAA,EAAA,MAAA,EAAA,CAAA,kBAAA,EAAA,eAAA,CAAA,EAAA,EAAA,EAAA,IAAA,EAAAA,IAAA,CAAA,YAAA,EAAA,QAAA,EAAA,2BAAA,EAAA,CAAA,EAAA,KAAA,EAAA,EAAA,WAAA,EAAAF,EAAA,CAAA,mBAAA,EAAA,EAAA,CAAA,CAAA;4FDlHO,2BAA2B,EAAA,UAAA,EAAA,CAAA;kBALvC,SAAS;AAAC,YAAA,IAAA,EAAA,CAAA;AACP,oBAAA,QAAQ,EAAE,UAAU;AACpB,oBAAA,WAAW,EAAE,uBAAuB;oBACpC,SAAS,EAAE,CAAC,uBAAuB,CAAC;AACvC,iBAAA,CAAA;+QAqCsB,IAAI,EAAA,CAAA;sBAAtB,SAAS;uBAAC,MAAM,CAAA;gBACO,SAAS,EAAA,CAAA;sBAAhC,SAAS;uBAAC,WAAW,CAAA;gBACG,UAAU,EAAA,CAAA;sBAAlC,SAAS;uBAAC,YAAY,CAAA;gBACC,SAAS,EAAA,CAAA;sBAAhC,SAAS;uBAAC,WAAW,CAAA;gBACG,UAAU,EAAA,CAAA;sBAAlC,SAAS;uBAAC,YAAY,CAAA;;;AEnF3B,MAAMqB,QAAM,GAAW;AACnB,IAAA;AACI,QAAA,IAAI,EAAE,EAAE;AACR,QAAA,SAAS,EAAE,2BAA2B;AACzC,KAAA;CACJ,CAAC;MAMW,+BAA+B,CAAA;;6HAA/B,+BAA+B,EAAA,IAAA,EAAA,EAAA,EAAA,MAAA,EAAA,EAAA,CAAA,eAAA,CAAA,QAAA,EAAA,CAAA,CAAA;AAA/B,+BAAA,CAAA,IAAA,GAAA,EAAA,CAAA,mBAAA,CAAA,EAAA,UAAA,EAAA,QAAA,EAAA,OAAA,EAAA,SAAA,EAAA,QAAA,EAAA,EAAA,EAAA,IAAA,EAAA,+BAA+B,0CAF9B,YAAY,CAAA,EAAA,CAAA,CAAA;8HAEb,+BAA+B,EAAA,OAAA,EAAA,CAH/B,CAAC,YAAY,CAAC,QAAQ,CAACA,QAAM,CAAC,CAAC,EAC9B,YAAY,CAAA,EAAA,CAAA,CAAA;4FAEb,+BAA+B,EAAA,UAAA,EAAA,CAAA;kBAJ3C,QAAQ;AAAC,YAAA,IAAA,EAAA,CAAA;oBACN,OAAO,EAAE,CAAC,YAAY,CAAC,QAAQ,CAACA,QAAM,CAAC,CAAC;oBACxC,OAAO,EAAE,CAAC,YAAY,CAAC;AAC1B,iBAAA,CAAA;;;ACQD;MA8Ba,wBAAwB,CAAA;;sHAAxB,wBAAwB,EAAA,IAAA,EAAA,EAAA,EAAA,MAAA,EAAA,EAAA,CAAA,eAAA,CAAA,QAAA,EAAA,CAAA,CAAA;uHAAxB,wBAAwB,EAAA,YAAA,EAAA,CA1B7B,2BAA2B,CAAA,EAAA,OAAA,EAAA,CAG3B,YAAY;QACZ,+BAA+B;QAE/B,WAAW;QACX,mBAAmB;QAEnB,eAAe;QACf,cAAc;QACd,aAAa;QACb,gBAAgB;QAChB,eAAe;QACf,kBAAkB;QAClB,oBAAoB;QACpB,aAAa;QAEb,SAAS;QACT,iBAAiB;QAEjB,kBAAkB;QAClB,kBAAkB;QAClB,kBAAkB,CAAA,EAAA,CAAA,CAAA;AAGb,wBAAA,CAAA,IAAA,GAAA,EAAA,CAAA,mBAAA,CAAA,EAAA,UAAA,EAAA,QAAA,EAAA,OAAA,EAAA,SAAA,EAAA,QAAA,EAAA,EAAA,EAAA,IAAA,EAAA,wBAAwB,EAxBxB,OAAA,EAAA,CAAA;YACL,YAAY;YACZ,+BAA+B;YAE/B,WAAW;YACX,mBAAmB;YAEnB,eAAe;YACf,cAAc;YACd,aAAa;YACb,gBAAgB;YAChB,eAAe;YACf,kBAAkB;YAClB,oBAAoB;YACpB,aAAa;YAEb,SAAS;YACT,iBAAiB;YAEjB,kBAAkB;YAClB,kBAAkB;YAClB,kBAAkB;AACrB,SAAA,CAAA,EAAA,CAAA,CAAA;4FAEQ,wBAAwB,EAAA,UAAA,EAAA,CAAA;kBA5BpC,QAAQ;AAAC,YAAA,IAAA,EAAA,CAAA;AACN,oBAAA,YAAY,EAAE;wBACV,2BAA2B;AAC9B,qBAAA;AACD,oBAAA,OAAO,EAAE;wBACL,YAAY;wBACZ,+BAA+B;wBAE/B,WAAW;wBACX,mBAAmB;wBAEnB,eAAe;wBACf,cAAc;wBACd,aAAa;wBACb,gBAAgB;wBAChB,eAAe;wBACf,kBAAkB;wBAClB,oBAAoB;wBACpB,aAAa;wBAEb,SAAS;wBACT,iBAAiB;wBAEjB,kBAAkB;wBAClB,kBAAkB;wBAClB,kBAAkB;AACrB,qBAAA;AACJ,iBAAA,CAAA;;;MC1CY,qBAAqB,CAAA;AAE9B,IAAA,WAAA,CACY,wBAAkD,EAAA;QAAlD,IAAwB,CAAA,wBAAA,GAAxB,wBAAwB,CAA0B;KACzD;IAEC,qBAAqB,CAAC,KAAK,EAAE,gBAAgB,EAAA;;AAC/C,YAAA,IAAI,eAAgC,CAAC;YACrC,IAAI;AACA,gBAAA,eAAe,GAAG,MAAM,IAAI,CAAC,wBAAwB,CAAC,qBAAqB,CAAC,KAAK,EAAE,gBAAgB,CAAC,CAAC,SAAS,EAAE,CAAC;AAEjH,gBAAA,IAAI,eAAe,EAAE;AACjB,oBAAA,OAAO,eAAe,CAAC;AAC1B,iBAAA;AAAM,qBAAA;oBACH,OAAO,IAAI,cAAc,EAAE,CAAC;AAC/B,iBAAA;AACJ,aAAA;AAAC,YAAA,OAAO,KAAK,EAAE;AACZ,gBAAA,OAAO,CAAC,KAAK,CAAC,SAAS,EAAE,KAAK,CAAC,CAAC;gBAChC,OAAO,IAAI,cAAc,EAAE,CAAC;AAC/B,aAAA;SACJ,CAAA,CAAA;AAAA,KAAA;;mHApBQ,qBAAqB,EAAA,IAAA,EAAA,CAAA,EAAA,KAAA,EAAAyE,wBAAA,EAAA,CAAA,EAAA,MAAA,EAAA,EAAA,CAAA,eAAA,CAAA,UAAA,EAAA,CAAA,CAAA;AAArB,qBAAA,CAAA,KAAA,GAAA,EAAA,CAAA,qBAAA,CAAA,EAAA,UAAA,EAAA,QAAA,EAAA,OAAA,EAAA,SAAA,EAAA,QAAA,EAAA,EAAA,EAAA,IAAA,EAAA,qBAAqB,cAHlB,MAAM,EAAA,CAAA,CAAA;4FAGT,qBAAqB,EAAA,UAAA,EAAA,CAAA;kBAJjC,UAAU;AAAC,YAAA,IAAA,EAAA,CAAA;AACR,oBAAA,UAAU,EAAE,MAAM;AACrB,iBAAA,CAAA;;;ACiBD;MAQa,8BAA8B,CAAA;IA+BvC,WACY,CAAA,cAA8B,EAC9B,MAAc,EACd,WAAwB,EACxB,wBAAkD,EAClD,gBAAkC,EAClC,qBAA4C;;IAG5C,cAA8B,EAC/B,gBAAkC,EACjC,aAA4B,EAAA;QAV5B,IAAc,CAAA,cAAA,GAAd,cAAc,CAAgB;QAC9B,IAAM,CAAA,MAAA,GAAN,MAAM,CAAQ;QACd,IAAW,CAAA,WAAA,GAAX,WAAW,CAAa;QACxB,IAAwB,CAAA,wBAAA,GAAxB,wBAAwB,CAA0B;QAClD,IAAgB,CAAA,gBAAA,GAAhB,gBAAgB,CAAkB;QAClC,IAAqB,CAAA,qBAAA,GAArB,qBAAqB,CAAuB;QAG5C,IAAc,CAAA,cAAA,GAAd,cAAc,CAAgB;QAC/B,IAAgB,CAAA,gBAAA,GAAhB,gBAAgB,CAAkB;QACjC,IAAa,CAAA,aAAA,GAAb,aAAa,CAAe;QAxCxC,IAAe,CAAA,eAAA,GAAG,eAAe,CAAC;QAClC,IAAiB,CAAA,iBAAA,GAAG,iBAAiB,CAAC;QAEtC,IAAU,CAAA,UAAA,GAAG,UAAU,CAAC;QACxB,IAAa,CAAA,aAAA,GAAG,aAAa,CAAC;QAC9B,IAAe,CAAA,eAAA,GAAG,eAAe,CAAC;QAClC,IAAiB,CAAA,iBAAA,GAAG,iBAAiB,CAAC;QACtC,IAAgB,CAAA,gBAAA,GAAG,gBAAgB,CAAC;QACpC,IAA2B,CAAA,2BAAA,GAAG,2BAA2B,CAAC;QAC1D,IAAgB,CAAA,gBAAA,GAAG,gBAAgB,CAAC;QAYpC,IAAO,CAAA,OAAA,GAAY,IAAI,CAAC;AAGxB,QAAA,IAAA,CAAA,eAAe,GAAG,IAAI,cAAc,EAAE,CAAC;QA+MvC,IAAa,CAAA,aAAA,GAAG,CAAC,SAAoB,EAAE,WAAmB,EAAE,KAAa,KAAa;YAClF,OAAO,SAAS,CAAC,GAAG,CAAC,WAAW,CAAC,CAAC,QAAQ,CAAC,KAAK,CAAC,CAAC;AACtD,SAAC,CAAA;KA/LI;IAEL,QAAQ,GAAA;QACJ,IAAI,CAAC,KAAK,GAAG,IAAI,CAAC,cAAc,CAAC,UAAU,CAAC,cAAc,CAAC,CAAC;QAC5D,IAAI,CAAC,gBAAgB,GAAG,IAAI,CAAC,cAAc,CAAC,UAAU,CAAC,kBAAkB,CAAC,CAAC;QAE3E,IAAI,CAAC,2BAA2B,EAAE,CAAC;QACnC,IAAI,CAAC,uBAAuB,EAAE,CAAC;QAE/B,IAAI,CAAC,cAAc,CAAC,IAAI,CAAC,SAAS,CAAC,IAAI,IAAG;AACtC,YAAA,IAAI,CAAC,MAAM,GAAG,IAAI,CAAC,MAAM,CAAC;YAC1B,IAAI,CAAC,YAAY,EAAE,CAAC;AACxB,SAAC,CAAC,CAAC;QAEH,IAAI,CAAC,cAAc,CAAC,MAAM,CAAC,SAAS,CAAC,MAAM,IAAG;AAC1C,YAAA,IAAI,IAAI,CAAC,MAAM,IAAI,UAAU,CAAC,MAAM,EAAE;AAClC,gBAAA,IAAI,CAAC,gBAAgB,GAAG,MAAM,CAAC,gBAAgB,CAAC;AAChD,gBAAA,IAAI,CAAC,qBAAqB,CAAC,IAAI,CAAC,gBAAgB,CAAC,CAAC;AACrD,aAAA;AACL,SAAC,CAAC,CAAC;KACN;IAED,YAAY,GAAA;AACR,QAAA,MAAM,eAAe,GAAG,IAAI,CAAC,gBAAgB,IAAI,gBAAgB,CAAC,YAAY,GAAG,OAAO,GAAG,QAAQ,CAAC;AAEpG,QAAA,IAAI,IAAI,CAAC,MAAM,IAAI,UAAU,CAAC,MAAM,EAAE;AAClC,YAAA,IAAI,CAAC,SAAS,GAAG,CAAY,SAAA,EAAA,eAAe,iBAAiB,CAAC;AACjE,SAAA;AAAM,aAAA,IAAI,IAAI,CAAC,MAAM,IAAI,UAAU,CAAC,MAAM,EAAE;AACzC,YAAA,IAAI,CAAC,SAAS,GAAG,CAAoB,iBAAA,EAAA,eAAe,iBAAiB,CAAC;AACzE,SAAA;KACJ;IAED,2BAA2B,GAAA;QACvB,IAAI,CAAC,uBAAuB,GAAG,IAAI,CAAC,WAAW,CAAC,KAAK,CAAC;AAClD,YAAA,YAAY,EAAE,IAAI,CAAC,WAAW,CAAC,KAAK,CAAC;gBACjC,UAAU,EAAE,CAAC,sBAAsB,CAAC,cAAc,EAAE,UAAU,CAAC,QAAQ,CAAC;gBACxE,QAAQ,EAAE,CAAC,EAAE,CAAC;AACd,gBAAA,UAAU,EAAE,EAAE;AACd,gBAAA,QAAQ,EAAE,CAAC,EAAE,EAAE,UAAU,CAAC,QAAQ,CAAC;AACnC,gBAAA,cAAc,EAAE,IAAI,CAAC,WAAW,CAAC,KAAK,CAAC;AACnC,oBAAA,IAAI,EAAE,CAAC,QAAQ,EAAE,UAAU,CAAC,QAAQ,CAAC;AACrC,oBAAA,KAAK,EAAE,EAAE;iBACZ,CAAC;AACF,gBAAA,WAAW,EAAE,GAAG,UAAU,CAAC,QAAQ,CAAC;aACvC,CAAC;AACF,YAAA,eAAe,EAAE,IAAI,CAAC,WAAW,CAAC,KAAK,CAAC;AACpC,gBAAA,IAAI,EAAE,GAAG,UAAU,CAAC,QAAQ,CAAC;AAC7B,gBAAA,YAAY,EAAE,GAAG,UAAU,CAAC,QAAQ,CAAC;AACrC,gBAAA,SAAS,EAAE,GAAG,UAAU,CAAC,QAAQ,CAAC;AAClC,gBAAA,UAAU,EAAE,GAAG,UAAU,CAAC,QAAQ,CAAC;AACnC,gBAAA,MAAM,EAAE,CAAC,EAAE,EAAE,UAAU,CAAC,QAAQ,CAAC;gBACjC,cAAc,EAAE,CAAC,EAAE,CAAC;AACpB,gBAAA,MAAM,EAAE,GAAG,UAAU,CAAC,QAAQ,CAAC;AAC/B,gBAAA,YAAY,EAAE,GAAG,UAAU,CAAC,QAAQ,CAAC;aACxC,CAAC;AACL,SAAA,CAAC,CAAC;KACN;IAEK,uBAAuB,GAAA;;AACzB,YAAA,MAAM,iBAAiB,GAA0B,MAAM,IAAI,CAAC,gBAAgB,CAAC,uBAAuB,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC;AAEjH,YAAA,IAAI,CAAC,iBAAiB,GAAG,iBAAiB,CAAC,oBAAoB,CAAC;SACnE,CAAA,CAAA;AAAA,KAAA;IAED,eAAe,GAAA;QACX,IAAI,QAAQ,GAAG,IAAI,CAAC,WAAW,CAAC,gBAAgB,CAAC,KAAK,CAAC;AACvD,QAAA,IAAI,CAAC,uBAAuB,CAAC,GAAG,CAAC,cAAc,CAAC,CAAC,GAAG,CAAC,UAAU,CAAC,CAAC,UAAU,CAAC,QAAQ,CAAC,CAAC;KACzF;IAED,yBAAyB,GAAA;AACrB,QAAA,IAAI,CAAC,uBAAuB,CAAC,GAAG,CAAC,iBAAiB,CAAC,CAAC,UAAU,CAAC,IAAI,CAAC,oBAAoB,CAAC,gBAAgB,CAAC,KAAK,CAAC,CAAA;KACnH;IAED,gBAAgB,GAAA;QACZ,IAAI,CAAC,yBAAyB,EAAE,CAAC;QAEjC,IAAI,QAAQ,GAAG,IAAI,CAAC,gBAAgB,CAAC,iBAAiB,CAAC,IAAI,CAAC,uBAAuB,CAAC,GAAG,CAAC,cAAc,CAAC,CAAC,GAAG,CAAC,UAAU,CAAC,CAAC,KAAK,CAAC,CAAC;AAC/H,QAAA,IAAI,CAAC,uBAAuB,CAAC,GAAG,CAAC,cAAc,CAAC,CAAC,GAAG,CAAC,UAAU,CAAC,CAAC,UAAU,CAAC,QAAQ,CAAC,CAAC;QAEtF,IAAI,MAAM,GAAG,IAAI,CAAC,gBAAgB,CAAC,iBAAiB,CAAC,IAAI,CAAC,uBAAuB,CAAC,GAAG,CAAC,iBAAiB,CAAC,CAAC,GAAG,CAAC,QAAQ,CAAC,CAAC,KAAK,CAAC,CAAC;AAC9H,QAAA,IAAI,CAAC,uBAAuB,CAAC,GAAG,CAAC,iBAAiB,CAAC,CAAC,GAAG,CAAC,QAAQ,CAAC,CAAC,UAAU,CAAC,MAAM,CAAC,CAAC;AAErF,QAAA,IAAI,WAAW,GAAG;AACd,YAAA;AACI,gBAAA,IAAI,EAAE,IAAI,CAAC,uBAAuB,CAAC,GAAG,CAAC,cAAc,CAAC,CAAC,GAAG,CAAC,aAAa,CAAC,CAAC,KAAK;AAC/E,gBAAA,KAAK,EAAE,KAAK;AACZ,gBAAA,GAAG,EAAE,KAAK;AACb,aAAA;SACJ,CAAA;AAED,QAAA,MAAM,cAAc,GAAG,IAAI,CAAC,uBAAuB,CAAC,GAAG,CAAC,cAAc,CAAC,CAAC,KAAK,CAAC;AAC9E,QAAA,MAAM,iBAAiB,GAAG,IAAI,CAAC,uBAAuB,CAAC,GAAG,CAAC,iBAAiB,CAAC,CAAC,KAAK,CAAC;QACpF,MAAM,EAAE,WAAW,EAAA,GAAwC,cAAc,EAAjD,8BAA8B,GAAA,MAAA,CAAK,cAAc,EAAnE,CAAkD,aAAA,CAAA,CAAiB,CAAC;QAE1E,IAAI,CAAC,UAAU,GAAG;AACd,YAAA,YAAY,kCACL,8BAA8B,CAAA,EAAA,EACjC,MAAM,EAAE,WAAW,EACtB,CAAA;YACD,eAAe,EAAA,MAAA,CAAA,MAAA,CAAA,EAAA,EACR,iBAAiB,CACvB;SACJ,CAAC;KACL;IAED,oBAAoB,GAAA;QAChB,IAAI,CAAC,yBAAyB,EAAE,CAAC;AAEjC,QAAA,IAAI,IAAI,CAAC,oBAAoB,CAAC,gBAAgB,CAAC,OAAO,EAAE;AACpD,YAAA,IAAI,CAAC,oBAAoB,CAAC,gBAAgB,CAAC,gBAAgB,EAAE,CAAC;AACjE,SAAA;AAED,QAAA,IAAI,IAAI,CAAC,uBAAuB,CAAC,OAAO,EAAE;YACtC,OAAO,CAAC,GAAG,CAAC,eAAe,EAAE,IAAI,CAAC,uBAAuB,CAAC,KAAK,CAAC,CAAC;AACjE,YAAA,IAAI,CAAC,aAAa,CAAC,SAAS,CAAC,WAAW,CAAC,kBAAkB,EAAE,WAAW,CAAC,oBAAoB,EAAE,WAAW,CAAC,KAAK,CAAC,CAAC;YAClH,OAAO;AACV,SAAA;AAAM,aAAA;YACH,IAAI,CAAC,gBAAgB,EAAE,CAAC;AAExB,YAAA,IAAI,IAAI,CAAC,MAAM,IAAI,UAAU,CAAC,MAAM,EAAE;gBAClC,IAAI,CAAC,oBAAoB,EAAE,CAAC;AAC/B,aAAA;AAAM,iBAAA,IAAI,IAAI,CAAC,MAAM,IAAI,UAAU,CAAC,MAAM,EAAE;gBACzC,IAAI,CAAC,oBAAoB,EAAE,CAAC;AAC/B,aAAA;AACJ,SAAA;KACJ;IAED,oBAAoB,GAAA;AAChB,QAAA,IAAI,CAAC,wBAAwB,CAAC,oBAAoB,CAAC,IAAI,CAAC,KAAK,EAAE,IAAI,CAAC,UAAU,CAAC,CAAC,SAAS,CAAC,CAAC,GAAc,KAAI;YAEzG,IAAI,CAAC,MAAM,CAAC,QAAQ,CAAC,CAAC,CAAA,oBAAA,CAAsB,CAAC,CAAC,CAAC;SAElD,EAAE,KAAK,IAAG;AACP,YAAA,OAAO,CAAC,GAAG,CAAC,iCAAiC,EAAE,KAAK,CAAC,CAAC;AAC1D,SAAC,CAAC,CAAC;KACN;AAEK,IAAA,qBAAqB,CAAC,gBAAgB,EAAA;;AACxC,YAAA,IAAI,CAAC,eAAe,IAAoB,MAAM,IAAI,CAAC,qBAAqB,CAAC,qBAAqB,CAAC,IAAI,CAAC,KAAK,EAAE,gBAAgB,CAAC,CAAA,CAAC;AAE7H,YAAA,IAAI,CAAC,mBAAmB,CAAC,IAAI,CAAC,eAAe,CAAC,CAAC;SAClD,CAAA,CAAA;AAAA,KAAA;AAED,IAAA,mBAAmB,CAAC,eAAgC,EAAA;AAChD,QAAA,IAAI,CAAC,uBAAuB,CAAC,UAAU,CAAC;YACpC,YAAY,EAAE,eAAe,CAAC,YAAY;YAC1C,eAAe,EAAE,eAAe,CAAC,eAAe;AACnD,SAAA,CAAC,CAAC;AAEH,QAAA,IAAI,CAAC,WAAW,CAAC,gBAAgB,CAAC,UAAU,CAAC,eAAe,CAAC,YAAY,CAAC,QAAQ,CAAC,CAAC;QACpF,IAAI,CAAC,uBAAuB,CAAC,GAAG,CAAC,cAAc,CAAC,CAAC,GAAG,CAAC,aAAa,CAAC,CAAC,UAAU,CAAC,eAAe,CAAC,YAAY,CAAC,WAAW,CAAC,CAAC,CAAC,CAAC,CAAC;QAC5H,IAAI,CAAC,oBAAoB,CAAC,gBAAgB,CAAC,UAAU,CAAC,eAAe,CAAC,eAAe,CAAC,CAAC;QAEvF,IAAI,CAAC,aAAa,GAAG;AACjB,YAAA,mBAAmB,EAAE,IAAI,CAAC,uBAAuB,CAAC,KAAK;AACvD,YAAA,eAAe,EAAE,IAAI,CAAC,oBAAoB,CAAC,gBAAgB,CAAC,KAAK;SACpE,CAAC;QAEF,IAAI,CAAC,iBAAiB,EAAE,CAAC;KAC5B;IAED,iBAAiB,GAAA;QACb,IAAI,CAAC,oBAAoB,CAAC,gBAAgB,CAAC,YAAY,CAAC,SAAS,CAAC,MAAK;YACnE,IAAI,CAAC,aAAa,EAAE,CAAC;AACzB,SAAC,CAAC,CAAC;QAEH,IAAI,CAAC,uBAAuB,CAAC,YAAY,CAAC,SAAS,CAAC,MAAK;YACrD,IAAI,CAAC,aAAa,EAAE,CAAC;AACzB,SAAC,CAAC,CAAC;KACN;IAED,aAAa,GAAA;AACT,QAAA,MAAM,aAAa,GAAG;AAClB,YAAA,mBAAmB,EAAE,IAAI,CAAC,uBAAuB,CAAC,KAAK;AACvD,YAAA,eAAe,EAAE,IAAI,CAAC,oBAAoB,CAAC,gBAAgB,CAAC,KAAK;SACpE,CAAC;QACF,IAAI,CAAC,OAAO,GAAG,OAAO,CAAC,IAAI,CAAC,aAAa,EAAE,aAAa,CAAC,CAAC;KAC7D;IAED,oBAAoB,GAAA;QAChB,IAAI,CAAC,wBAAwB,CAAC,oBAAoB,CAAC,IAAI,CAAC,KAAK,EAAE,IAAI,CAAC,gBAAgB,EAAE,IAAI,CAAC,UAAU,CAAC,CAAC,SAAS,CAAC,CAAC,GAAc,KAAI;AAEhI,YAAA,IAAI,CAAC,gBAAgB,CAAC,IAAI,EAAE,CAAC;SAEhC,EAAE,KAAK,IAAG;AACP,YAAA,OAAO,CAAC,GAAG,CAAC,iCAAiC,EAAE,KAAK,CAAC,CAAC;AAC1D,SAAC,CAAC,CAAA;KACL;;4HAvOQ,8BAA8B,EAAA,IAAA,EAAA,CAAA,EAAA,KAAA,EAAArG,IAAA,CAAA,cAAA,EAAA,EAAA,EAAA,KAAA,EAAAA,IAAA,CAAA,MAAA,EAAA,EAAA,EAAA,KAAA,EAAAC,IAAA,CAAA,WAAA,EAAA,EAAA,EAAA,KAAA,EAAAmG,wBAAA,EAAA,EAAA,EAAA,KAAA,EAAArD,gBAAA,EAAA,EAAA,EAAA,KAAA,EAAAuD,qBAAA,EAAA,EAAA,EAAA,KAAA,EAAArF,IAAA,CAAA,cAAA,EAAA,EAAA,EAAA,KAAA,EAAAT,EAAA,CAAA,gBAAA,EAAA,EAAA,EAAA,KAAA,EAAAC,IAAA,CAAA,aAAA,EAAA,CAAA,EAAA,MAAA,EAAA,EAAA,CAAA,eAAA,CAAA,SAAA,EAAA,CAAA,CAAA;AAA9B,8BAAA,CAAA,IAAA,GAAA,EAAA,CAAA,oBAAA,CAAA,EAAA,UAAA,EAAA,QAAA,EAAA,OAAA,EAAA,SAAA,EAAA,IAAA,EAAA,8BAA8B,8QCjC3C,69MA8GM,EAAA,UAAA,EAAA,CAAA,EAAA,IAAA,EAAA,EAAA,CAAA,OAAA,EAAA,QAAA,EAAA,UAAA,EAAA,QAAA,EAAA,CAAA,SAAA,CAAA,EAAA,EAAA,EAAA,IAAA,EAAAE,GAAA,CAAA,cAAA,EAAA,QAAA,EAAA,kBAAA,EAAA,MAAA,EAAA,CAAA,eAAA,EAAA,UAAA,CAAA,EAAA,QAAA,EAAA,CAAA,gBAAA,CAAA,EAAA,EAAA,EAAA,IAAA,EAAAuE,eAAA,EAAA,QAAA,EAAA,YAAA,EAAA,MAAA,EAAA,CAAA,iBAAA,CAAA,EAAA,OAAA,EAAA,CAAA,YAAA,CAAA,EAAA,EAAA,EAAA,IAAA,EAAArE,IAAA,CAAA,YAAA,EAAA,QAAA,EAAA,gBAAA,EAAA,MAAA,EAAA,CAAA,OAAA,EAAA,YAAA,EAAA,YAAA,EAAA,oBAAA,EAAA,WAAA,CAAA,EAAA,QAAA,EAAA,CAAA,cAAA,CAAA,EAAA,EAAA,EAAA,IAAA,EAAAC,EAAA,CAAA,SAAA,EAAA,QAAA,EAAA,YAAA,EAAA,MAAA,EAAA,CAAA,UAAA,EAAA,eAAA,EAAA,UAAA,CAAA,EAAA,QAAA,EAAA,CAAA,WAAA,CAAA,EAAA,EAAA,EAAA,IAAA,EAAAuB,GAAA,CAAA,SAAA,EAAA,QAAA,EAAA,YAAA,EAAA,QAAA,EAAA,CAAA,WAAA,CAAA,EAAA,EAAA,EAAA,IAAA,EAAAkE,oCAAA,EAAA,QAAA,EAAA,mBAAA,EAAA,CAAA,EAAA,UAAA,EAAA,CAAA,EAAA,IAAA,EAAAtG,IAAA,CAAA,aAAA,EAAA,QAAA,EAAA,8CAAA,EAAA,EAAA,EAAA,IAAA,EAAAA,IAAA,CAAA,oBAAA,EAAA,QAAA,EAAA,0FAAA,EAAA,EAAA,EAAA,IAAA,EAAAA,IAAA,CAAA,kBAAA,EAAA,QAAA,EAAA,aAAA,EAAA,MAAA,EAAA,CAAA,WAAA,CAAA,EAAA,OAAA,EAAA,CAAA,UAAA,CAAA,EAAA,QAAA,EAAA,CAAA,QAAA,CAAA,EAAA,EAAA,EAAA,IAAA,EAAAA,IAAA,CAAA,aAAA,EAAA,QAAA,EAAA,iBAAA,EAAA,MAAA,EAAA,CAAA,eAAA,CAAA,EAAA,EAAA,EAAA,IAAA,EAAAU,GAAA,CAAA,aAAA,EAAA,QAAA,EAAA,iBAAA,EAAA,QAAA,EAAA,CAAA,eAAA,CAAA,EAAA,EAAA,EAAA,IAAA,EAAAV,IAAA,CAAA,eAAA,EAAA,QAAA,EAAA,2CAAA,EAAA,EAAA,EAAA,IAAA,EAAAA,IAAA,CAAA,eAAA,EAAA,QAAA,EAAA,mBAAA,EAAA,MAAA,EAAA,CAAA,UAAA,EAAA,iBAAA,EAAA,SAAA,CAAA,EAAA,OAAA,EAAA,CAAA,eAAA,CAAA,EAAA,EAAA,EAAA,IAAA,EAAAsC,GAAA,CAAA,IAAA,EAAA,QAAA,EAAA,QAAA,EAAA,MAAA,EAAA,CAAA,MAAA,EAAA,UAAA,EAAA,UAAA,CAAA,EAAA,EAAA,EAAA,IAAA,EAAA1B,IAAA,CAAA,QAAA,EAAA,QAAA,EAAA,WAAA,EAAA,MAAA,EAAA,CAAA,IAAA,CAAA,EAAA,EAAA,EAAA,IAAA,EAAAA,IAAA,CAAA,QAAA,EAAA,QAAA,EAAA,WAAA,EAAA,EAAA,EAAA,IAAA,EAAAZ,IAAA,CAAA,iBAAA,EAAA,QAAA,EAAA,wIAAA,EAAA,MAAA,EAAA,CAAA,UAAA,CAAA,EAAA,EAAA,EAAA,IAAA,EAAAsC,GAAA,CAAA,OAAA,EAAA,QAAA,EAAA,kBAAA,EAAA,MAAA,EAAA,CAAA,SAAA,EAAA,cAAA,EAAA,eAAA,CAAA,EAAA,EAAA,EAAA,IAAA,EAAAA,GAAA,CAAA,OAAA,EAAA,QAAA,EAAA,WAAA,EAAA,MAAA,EAAA,CAAA,OAAA,EAAA,SAAA,CAAA,EAAA,CAAA,EAAA,CAAA,CAAA;4FD7EO,8BAA8B,EAAA,UAAA,EAAA,CAAA;kBAN1C,SAAS;AAAC,YAAA,IAAA,EAAA,CAAA;AACP,oBAAA,QAAQ,EAAE,aAAa;AACvB,oBAAA,WAAW,EAAE,0BAA0B;AACvC,oBAAA,MAAM,EAAE,EACP;AACJ,iBAAA,CAAA;uVA6B6B,WAAW,EAAA,CAAA;sBAApC,SAAS;uBAAC,aAAa,CAAA;gBACW,oBAAoB,EAAA,CAAA;sBAAtD,SAAS;uBAAC,sBAAsB,CAAA;;;AEzDrC,MAAMX,QAAM,GAAW;AACnB,IAAA;AACI,QAAA,IAAI,EAAE,EAAE;AACR,QAAA,SAAS,EAAE,8BAA8B;AAC5C,KAAA;CACJ,CAAC;MAMW,kCAAkC,CAAA;;gIAAlC,kCAAkC,EAAA,IAAA,EAAA,EAAA,EAAA,MAAA,EAAA,EAAA,CAAA,eAAA,CAAA,QAAA,EAAA,CAAA,CAAA;AAAlC,kCAAA,CAAA,IAAA,GAAA,EAAA,CAAA,mBAAA,CAAA,EAAA,UAAA,EAAA,QAAA,EAAA,OAAA,EAAA,SAAA,EAAA,QAAA,EAAA,EAAA,EAAA,IAAA,EAAA,kCAAkC,0CAFjC,YAAY,CAAA,EAAA,CAAA,CAAA;iIAEb,kCAAkC,EAAA,OAAA,EAAA,CAHlC,CAAC,YAAY,CAAC,QAAQ,CAACA,QAAM,CAAC,CAAC,EAC9B,YAAY,CAAA,EAAA,CAAA,CAAA;4FAEb,kCAAkC,EAAA,UAAA,EAAA,CAAA;kBAJ9C,QAAQ;AAAC,YAAA,IAAA,EAAA,CAAA;oBACN,OAAO,EAAE,CAAC,YAAY,CAAC,QAAQ,CAACA,QAAM,CAAC,CAAC;oBACxC,OAAO,EAAE,CAAC,YAAY,CAAC;AAC1B,iBAAA,CAAA;;;MC0BY,2BAA2B,CAAA;;yHAA3B,2BAA2B,EAAA,IAAA,EAAA,EAAA,EAAA,MAAA,EAAA,EAAA,CAAA,eAAA,CAAA,QAAA,EAAA,CAAA,CAAA;0HAA3B,2BAA2B,EAAA,YAAA,EAAA,CAlBhC,8BAA8B,CAAA,EAAA,OAAA,EAAA,CAG9B,YAAY;QACZ,kCAAkC;QAElC,YAAY;QACZ,iCAAiC;QAEjC,WAAW;QACX,mBAAmB;QAEnB,aAAa;QACb,kBAAkB;QAClB,eAAe;QACf,cAAc,CAAA,EAAA,CAAA,CAAA;AAGT,2BAAA,CAAA,IAAA,GAAA,EAAA,CAAA,mBAAA,CAAA,EAAA,UAAA,EAAA,QAAA,EAAA,OAAA,EAAA,SAAA,EAAA,QAAA,EAAA,EAAA,EAAA,IAAA,EAAA,2BAA2B,EAhB3B,OAAA,EAAA,CAAA;YACL,YAAY;YACZ,kCAAkC;YAElC,YAAY;YACZ,iCAAiC;YAEjC,WAAW;YACX,mBAAmB;YAEnB,aAAa;YACb,kBAAkB;YAClB,eAAe;YACf,cAAc;AACjB,SAAA,CAAA,EAAA,CAAA,CAAA;4FAEQ,2BAA2B,EAAA,UAAA,EAAA,CAAA;kBApBvC,QAAQ;AAAC,YAAA,IAAA,EAAA,CAAA;AACN,oBAAA,YAAY,EAAE;wBACV,8BAA8B;AACjC,qBAAA;AACD,oBAAA,OAAO,EAAE;wBACL,YAAY;wBACZ,kCAAkC;wBAElC,YAAY;wBACZ,iCAAiC;wBAEjC,WAAW;wBACX,mBAAmB;wBAEnB,aAAa;wBACb,kBAAkB;wBAClB,eAAe;wBACf,cAAc;AACjB,qBAAA;AACJ,iBAAA,CAAA;;;ACpBD;MAQa,2BAA2B,CAAA;IA0BpC,WACY,CAAA,cAA8B,EAC9B,MAAc,EACd,WAAwB,EACxB,wBAAkD,EAClD,qBAA4C;;IAG5C,cAA8B,EAC/B,gBAAkC,EACjC,aAA4B,EAAA;QAT5B,IAAc,CAAA,cAAA,GAAd,cAAc,CAAgB;QAC9B,IAAM,CAAA,MAAA,GAAN,MAAM,CAAQ;QACd,IAAW,CAAA,WAAA,GAAX,WAAW,CAAa;QACxB,IAAwB,CAAA,wBAAA,GAAxB,wBAAwB,CAA0B;QAClD,IAAqB,CAAA,qBAAA,GAArB,qBAAqB,CAAuB;QAG5C,IAAc,CAAA,cAAA,GAAd,cAAc,CAAgB;QAC/B,IAAgB,CAAA,gBAAA,GAAhB,gBAAgB,CAAkB;QACjC,IAAa,CAAA,aAAA,GAAb,aAAa,CAAe;QAlCxC,IAAe,CAAA,eAAA,GAAG,eAAe,CAAC;QAClC,IAAiB,CAAA,iBAAA,GAAG,iBAAiB,CAAC;QAEtC,IAAU,CAAA,UAAA,GAAG,UAAU,CAAC;QACxB,IAAa,CAAA,aAAA,GAAG,aAAa,CAAC;QAC9B,IAAe,CAAA,eAAA,GAAG,eAAe,CAAC;QAClC,IAAiB,CAAA,iBAAA,GAAG,iBAAiB,CAAC;QACtC,IAA2B,CAAA,2BAAA,GAAG,2BAA2B,CAAC;QAU1D,IAAO,CAAA,OAAA,GAAY,IAAI,CAAC;AAGxB,QAAA,IAAA,CAAA,eAAe,GAAG,IAAI,cAAc,EAAE,CAAC;QA0LvC,IAAa,CAAA,aAAA,GAAG,CAAC,SAAoB,EAAE,WAAmB,EAAE,KAAa,KAAa;YAClF,OAAO,SAAS,CAAC,GAAG,CAAC,WAAW,CAAC,CAAC,QAAQ,CAAC,KAAK,CAAC,CAAC;AACtD,SAAC,CAAA;KA5KI;IAEL,QAAQ,GAAA;QACJ,IAAI,CAAC,KAAK,GAAG,IAAI,CAAC,cAAc,CAAC,UAAU,CAAC,cAAc,CAAC,CAAC;QAE5D,IAAI,CAAC,wBAAwB,EAAE,CAAC;QAEhC,IAAI,CAAC,cAAc,CAAC,IAAI,CAAC,SAAS,CAAC,IAAI,IAAG;AACtC,YAAA,IAAI,CAAC,MAAM,GAAG,IAAI,CAAC,MAAM,CAAC;YAC1B,IAAI,CAAC,YAAY,EAAE,CAAC;AACxB,SAAC,CAAC,CAAC;QAEH,IAAI,CAAC,cAAc,CAAC,MAAM,CAAC,SAAS,CAAC,MAAM,IAAG;AAC1C,YAAA,IAAI,IAAI,CAAC,MAAM,IAAI,UAAU,CAAC,MAAM,EAAE;AAClC,gBAAA,IAAI,CAAC,gBAAgB,GAAG,MAAM,CAAC,gBAAgB,CAAC;AAChD,gBAAA,IAAI,CAAC,qBAAqB,CAAC,IAAI,CAAC,gBAAgB,CAAC,CAAC;AACrD,aAAA;AACL,SAAC,CAAC,CAAC;KAEN;IAED,YAAY,GAAA;AACR,QAAA,IAAI,IAAI,CAAC,MAAM,IAAI,UAAU,CAAC,MAAM,EAAE;AAClC,YAAA,IAAI,CAAC,SAAS,GAAG,CAAA,oBAAA,CAAsB,CAAC;AAC3C,SAAA;AAAM,aAAA,IAAI,IAAI,CAAC,MAAM,IAAI,UAAU,CAAC,MAAM,EAAE;AACzC,YAAA,IAAI,CAAC,SAAS,GAAG,CAAA,4BAAA,CAA8B,CAAC;AACnD,SAAA;KACJ;IAED,wBAAwB,GAAA;QACpB,IAAI,CAAC,oBAAoB,GAAG,IAAI,CAAC,WAAW,CAAC,KAAK,CAAC;AAC/C,YAAA,YAAY,EAAE,IAAI,CAAC,WAAW,CAAC,KAAK,CAAC;gBACjC,UAAU,EAAE,CAAC,sBAAsB,CAAC,WAAW,EAAE,UAAU,CAAC,QAAQ,CAAC;gBACrE,QAAQ,EAAE,CAAC,EAAE,CAAC;AACd,gBAAA,UAAU,EAAE,EAAE;gBACd,QAAQ,EAAE,CAAC,EAAE,CAAC;AACd,gBAAA,cAAc,EAAE,IAAI,CAAC,WAAW,CAAC,KAAK,CAAC;AACnC,oBAAA,IAAI,EAAE,CAAC,QAAQ,EAAE,UAAU,CAAC,QAAQ,CAAC;AACrC,oBAAA,KAAK,EAAE,CAAC,UAAU,EAAE,UAAU,CAAC,QAAQ,CAAC;iBAC3C,CAAC;AACF,gBAAA,WAAW,EAAE,CAAC,iBAAiB,EAAE,UAAU,CAAC,QAAQ,CAAC;aACxD,CAAC;AACF,YAAA,eAAe,EAAE,IAAI,CAAC,WAAW,CAAC,KAAK,CAAC;AACpC,gBAAA,IAAI,EAAE,GAAG,UAAU,CAAC,QAAQ,CAAC;AAC7B,gBAAA,YAAY,EAAE,GAAG,UAAU,CAAC,QAAQ,CAAC;AACrC,gBAAA,SAAS,EAAE,GAAG,UAAU,CAAC,QAAQ,CAAC;AAClC,gBAAA,UAAU,EAAE,GAAG,UAAU,CAAC,QAAQ,CAAC;AACnC,gBAAA,MAAM,EAAE,CAAC,EAAE,EAAE,UAAU,CAAC,QAAQ,CAAC;gBACjC,cAAc,EAAE,CAAC,EAAE,CAAC;AACpB,gBAAA,MAAM,EAAE,GAAG,UAAU,CAAC,QAAQ,CAAC;AAC/B,gBAAA,YAAY,EAAE,GAAG,UAAU,CAAC,QAAQ,CAAC;aACxC,CAAC;AACL,SAAA,CAAC,CAAC;KACN;IAED,yBAAyB,GAAA;AACrB,QAAA,IAAI,CAAC,oBAAoB,CAAC,GAAG,CAAC,iBAAiB,CAAC,CAAC,UAAU,CAAC,IAAI,CAAC,oBAAoB,CAAC,gBAAgB,CAAC,KAAK,CAAC,CAAA;KAChH;IAED,gBAAgB,GAAA;QACZ,IAAI,CAAC,yBAAyB,EAAE,CAAC;QAEjC,IAAI,MAAM,GAAG,IAAI,CAAC,gBAAgB,CAAC,iBAAiB,CAAC,IAAI,CAAC,oBAAoB,CAAC,GAAG,CAAC,iBAAiB,CAAC,CAAC,GAAG,CAAC,QAAQ,CAAC,CAAC,KAAK,CAAC,CAAC;AAC3H,QAAA,IAAI,CAAC,oBAAoB,CAAC,GAAG,CAAC,iBAAiB,CAAC,CAAC,GAAG,CAAC,QAAQ,CAAC,CAAC,UAAU,CAAC,MAAM,CAAC,CAAC;AAElF,QAAA,IAAI,WAAW,GAAG;AACd,YAAA;AACI,gBAAA,IAAI,EAAE,IAAI,CAAC,oBAAoB,CAAC,GAAG,CAAC,cAAc,CAAC,CAAC,GAAG,CAAC,aAAa,CAAC,CAAC,KAAK;AAC5E,gBAAA,KAAK,EAAE,KAAK;AACZ,gBAAA,GAAG,EAAE,KAAK;AACb,aAAA;SACJ,CAAA;AAED,QAAA,MAAM,cAAc,GAAG,IAAI,CAAC,oBAAoB,CAAC,GAAG,CAAC,cAAc,CAAC,CAAC,KAAK,CAAC;AAC3E,QAAA,MAAM,iBAAiB,GAAG,IAAI,CAAC,oBAAoB,CAAC,GAAG,CAAC,iBAAiB,CAAC,CAAC,KAAK,CAAC;QACjF,MAAM,EAAE,WAAW,EAAA,GAAwC,cAAc,EAAjD,8BAA8B,GAAA,MAAA,CAAK,cAAc,EAAnE,CAAkD,aAAA,CAAA,CAAiB,CAAC;QAE1E,IAAI,CAAC,UAAU,GAAG;AACd,YAAA,YAAY,kCACL,8BAA8B,CAAA,EAAA,EACjC,MAAM,EAAE,WAAW,EACtB,CAAA;YACD,eAAe,EAAA,MAAA,CAAA,MAAA,CAAA,EAAA,EACR,iBAAiB,CACvB;SACJ,CAAC;KACL;IAED,oBAAoB,GAAA;QAChB,IAAI,CAAC,yBAAyB,EAAE,CAAC;AAEjC,QAAA,IAAI,IAAI,CAAC,oBAAoB,CAAC,gBAAgB,CAAC,OAAO,EAAE;AACpD,YAAA,IAAI,CAAC,oBAAoB,CAAC,gBAAgB,CAAC,gBAAgB,EAAE,CAAC;AACjE,SAAA;AAED,QAAA,IAAI,IAAI,CAAC,oBAAoB,CAAC,OAAO,EAAE;YACnC,OAAO,CAAC,GAAG,CAAC,eAAe,EAAE,IAAI,CAAC,oBAAoB,CAAC,KAAK,CAAC,CAAC;AAC9D,YAAA,IAAI,CAAC,aAAa,CAAC,SAAS,CAAC,WAAW,CAAC,kBAAkB,EAAE,WAAW,CAAC,oBAAoB,EAAE,WAAW,CAAC,KAAK,CAAC,CAAC;YAClH,OAAO;AACV,SAAA;AAAM,aAAA;YACH,IAAI,CAAC,gBAAgB,EAAE,CAAC;AAExB,YAAA,IAAI,IAAI,CAAC,MAAM,IAAI,UAAU,CAAC,MAAM,EAAE;gBAClC,IAAI,CAAC,oBAAoB,EAAE,CAAC;AAC/B,aAAA;AAAM,iBAAA,IAAI,IAAI,CAAC,MAAM,IAAI,UAAU,CAAC,MAAM,EAAE;gBACzC,IAAI,CAAC,oBAAoB,EAAE,CAAC;AAC/B,aAAA;AACJ,SAAA;KACJ;IAED,oBAAoB,GAAA;AAChB,QAAA,IAAI,CAAC,wBAAwB,CAAC,oBAAoB,CAAC,IAAI,CAAC,KAAK,EAAE,IAAI,CAAC,UAAU,CAAC,CAAC,SAAS,CAAC,CAAC,GAAc,KAAI;YAEzG,IAAI,CAAC,MAAM,CAAC,QAAQ,CAAC,CAAC,CAAA,oBAAA,CAAsB,CAAC,CAAC,CAAC;SAElD,EAAE,KAAK,IAAG;AACP,YAAA,OAAO,CAAC,GAAG,CAAC,iCAAiC,EAAE,KAAK,CAAC,CAAC;AAC1D,SAAC,CAAC,CAAC;KACN;AAEK,IAAA,qBAAqB,CAAC,gBAAgB,EAAA;;AACxC,YAAA,IAAI,CAAC,eAAe,IAAoB,MAAM,IAAI,CAAC,qBAAqB,CAAC,qBAAqB,CAAC,IAAI,CAAC,KAAK,EAAE,gBAAgB,CAAC,CAAA,CAAC;AAE7H,YAAA,IAAI,CAAC,mBAAmB,CAAC,IAAI,CAAC,eAAe,CAAC,CAAC;SAClD,CAAA,CAAA;AAAA,KAAA;AAED,IAAA,mBAAmB,CAAC,eAAgC,EAAA;AAChD,QAAA,IAAI,CAAC,oBAAoB,CAAC,UAAU,CAAC;YACjC,YAAY,EAAE,eAAe,CAAC,YAAY;YAC1C,eAAe,EAAE,eAAe,CAAC,eAAe;AACnD,SAAA,CAAC,CAAC;QAEH,IAAI,CAAC,oBAAoB,CAAC,gBAAgB,CAAC,UAAU,CAAC,eAAe,CAAC,eAAe,CAAC,CAAC;QAEvF,IAAI,CAAC,aAAa,GAAG;AACjB,YAAA,gBAAgB,EAAE,IAAI,CAAC,oBAAoB,CAAC,KAAK;AACjD,YAAA,eAAe,EAAE,IAAI,CAAC,oBAAoB,CAAC,gBAAgB,CAAC,KAAK;SACpE,CAAC;QAEF,IAAI,CAAC,iBAAiB,EAAE,CAAC;KAC5B;IAED,iBAAiB,GAAA;QACb,IAAI,CAAC,oBAAoB,CAAC,gBAAgB,CAAC,YAAY,CAAC,SAAS,CAAC,MAAK;YACnE,IAAI,CAAC,aAAa,EAAE,CAAC;AACzB,SAAC,CAAC,CAAC;QAEH,IAAI,CAAC,oBAAoB,CAAC,YAAY,CAAC,SAAS,CAAC,MAAK;YAClD,IAAI,CAAC,aAAa,EAAE,CAAC;AACzB,SAAC,CAAC,CAAC;KACN;IAED,aAAa,GAAA;AACT,QAAA,MAAM,aAAa,GAAG;AAClB,YAAA,gBAAgB,EAAE,IAAI,CAAC,oBAAoB,CAAC,KAAK;AACjD,YAAA,eAAe,EAAE,IAAI,CAAC,oBAAoB,CAAC,gBAAgB,CAAC,KAAK;SACpE,CAAC;QACF,IAAI,CAAC,OAAO,GAAG,OAAO,CAAC,IAAI,CAAC,aAAa,EAAE,aAAa,CAAC,CAAC;KAC7D;IAED,oBAAoB,GAAA;QAChB,IAAI,CAAC,wBAAwB,CAAC,oBAAoB,CAAC,IAAI,CAAC,KAAK,EAAE,IAAI,CAAC,gBAAgB,EAAE,IAAI,CAAC,UAAU,CAAC,CAAC,SAAS,CAAC,CAAC,GAAc,KAAI;AAEhI,YAAA,IAAI,CAAC,gBAAgB,CAAC,IAAI,EAAE,CAAC;SAEhC,EAAE,KAAK,IAAG;AACP,YAAA,OAAO,CAAC,GAAG,CAAC,iCAAiC,EAAE,KAAK,CAAC,CAAC;AAC1D,SAAC,CAAC,CAAA;KACL;;yHA9MQ,2BAA2B,EAAA,IAAA,EAAA,CAAA,EAAA,KAAA,EAAA5B,IAAA,CAAA,cAAA,EAAA,EAAA,EAAA,KAAA,EAAAA,IAAA,CAAA,MAAA,EAAA,EAAA,EAAA,KAAA,EAAAC,IAAA,CAAA,WAAA,EAAA,EAAA,EAAA,KAAA,EAAAmG,wBAAA,EAAA,EAAA,EAAA,KAAA,EAAAI,qBAAA,EAAA,EAAA,EAAA,KAAA,EAAAjG,IAAA,CAAA,cAAA,EAAA,EAAA,EAAA,KAAA,EAAAU,EAAA,CAAA,gBAAA,EAAA,EAAA,EAAA,KAAA,EAAAT,IAAA,CAAA,aAAA,EAAA,CAAA,EAAA,MAAA,EAAA,EAAA,CAAA,eAAA,CAAA,SAAA,EAAA,CAAA,CAAA;AAA3B,2BAAA,CAAA,IAAA,GAAA,EAAA,CAAA,oBAAA,CAAA,EAAA,UAAA,EAAA,QAAA,EAAA,OAAA,EAAA,SAAA,EAAA,IAAA,EAAA,2BAA2B,8KC5BxC,+tGA0EM,EAAA,UAAA,EAAA,CAAA,EAAA,IAAA,EAAAC,EAAA,CAAA,OAAA,EAAA,QAAA,EAAA,UAAA,EAAA,QAAA,EAAA,CAAA,SAAA,CAAA,EAAA,EAAA,EAAA,IAAA,EAAAgG,oCAAA,EAAA,QAAA,EAAA,mBAAA,EAAA,CAAA,EAAA,UAAA,EAAA,CAAA,EAAA,IAAA,EAAAxG,IAAA,CAAA,aAAA,EAAA,QAAA,EAAA,8CAAA,EAAA,EAAA,EAAA,IAAA,EAAAA,IAAA,CAAA,oBAAA,EAAA,QAAA,EAAA,0FAAA,EAAA,EAAA,EAAA,IAAA,EAAAA,IAAA,CAAA,kBAAA,EAAA,QAAA,EAAA,aAAA,EAAA,MAAA,EAAA,CAAA,WAAA,CAAA,EAAA,OAAA,EAAA,CAAA,UAAA,CAAA,EAAA,QAAA,EAAA,CAAA,QAAA,CAAA,EAAA,EAAA,EAAA,IAAA,EAAAU,GAAA,CAAA,OAAA,EAAA,QAAA,EAAA,WAAA,EAAA,MAAA,EAAA,CAAA,OAAA,EAAA,SAAA,CAAA,EAAA,CAAA,EAAA,CAAA,CAAA;4FD9CO,2BAA2B,EAAA,UAAA,EAAA,CAAA;kBANvC,SAAS;AAAC,YAAA,IAAA,EAAA,CAAA;AACP,oBAAA,QAAQ,EAAE,UAAU;AACpB,oBAAA,WAAW,EAAE,uBAAuB;AACpC,oBAAA,MAAM,EAAE,EACP;AACJ,iBAAA,CAAA;2TAyBsC,oBAAoB,EAAA,CAAA;sBAAtD,SAAS;uBAAC,sBAAsB,CAAA;;;AE/CrC,MAAMiB,QAAM,GAAW;AACnB,IAAA;AACI,QAAA,IAAI,EAAE,EAAE;AACR,QAAA,SAAS,EAAE,2BAA2B;AACzC,KAAA;CACJ,CAAC;MAMW,+BAA+B,CAAA;;6HAA/B,+BAA+B,EAAA,IAAA,EAAA,EAAA,EAAA,MAAA,EAAA,EAAA,CAAA,eAAA,CAAA,QAAA,EAAA,CAAA,CAAA;AAA/B,+BAAA,CAAA,IAAA,GAAA,EAAA,CAAA,mBAAA,CAAA,EAAA,UAAA,EAAA,QAAA,EAAA,OAAA,EAAA,SAAA,EAAA,QAAA,EAAA,EAAA,EAAA,IAAA,EAAA,+BAA+B,0CAF9B,YAAY,CAAA,EAAA,CAAA,CAAA;8HAEb,+BAA+B,EAAA,OAAA,EAAA,CAH/B,CAAC,YAAY,CAAC,QAAQ,CAACA,QAAM,CAAC,CAAC,EAC9B,YAAY,CAAA,EAAA,CAAA,CAAA;4FAEb,+BAA+B,EAAA,UAAA,EAAA,CAAA;kBAJ3C,QAAQ;AAAC,YAAA,IAAA,EAAA,CAAA;oBACN,OAAO,EAAE,CAAC,YAAY,CAAC,QAAQ,CAACA,QAAM,CAAC,CAAC;oBACxC,OAAO,EAAE,CAAC,YAAY,CAAC;AAC1B,iBAAA,CAAA;;;MCqBY,wBAAwB,CAAA;;sHAAxB,wBAAwB,EAAA,IAAA,EAAA,EAAA,EAAA,MAAA,EAAA,EAAA,CAAA,eAAA,CAAA,QAAA,EAAA,CAAA,CAAA;uHAAxB,wBAAwB,EAAA,YAAA,EAAA,CAhB7B,2BAA2B,CAAA,EAAA,OAAA,EAAA,CAG3B,YAAY;QACZ,+BAA+B;QAE/B,iCAAiC;QAEjC,WAAW;QACX,mBAAmB;QAEnB,aAAa;QACb,kBAAkB;QAClB,eAAe,CAAA,EAAA,CAAA,CAAA;AAGV,wBAAA,CAAA,IAAA,GAAA,EAAA,CAAA,mBAAA,CAAA,EAAA,UAAA,EAAA,QAAA,EAAA,OAAA,EAAA,SAAA,EAAA,QAAA,EAAA,EAAA,EAAA,IAAA,EAAA,wBAAwB,EAdxB,OAAA,EAAA,CAAA;YACL,YAAY;YACZ,+BAA+B;YAE/B,iCAAiC;YAEjC,WAAW;YACX,mBAAmB;YAEnB,aAAa;YACb,kBAAkB;YAClB,eAAe;AAClB,SAAA,CAAA,EAAA,CAAA,CAAA;4FAEQ,wBAAwB,EAAA,UAAA,EAAA,CAAA;kBAlBpC,QAAQ;AAAC,YAAA,IAAA,EAAA,CAAA;AACN,oBAAA,YAAY,EAAE;wBACV,2BAA2B;AAC9B,qBAAA;AACD,oBAAA,OAAO,EAAE;wBACL,YAAY;wBACZ,+BAA+B;wBAE/B,iCAAiC;wBAEjC,WAAW;wBACX,mBAAmB;wBAEnB,aAAa;wBACb,kBAAkB;wBAClB,eAAe;AAClB,qBAAA;AACJ,iBAAA,CAAA;;;ACXD;MAQa,kCAAkC,CAAA;AA8B3C,IAAA,WAAA,CACY,cAA8B,EAC9B,MAAc,EACd,WAAwB,EACxB,wBAAkD,EAClD,aAA4B,EAC5B,gBAAkC,EAClC,qBAA4C;;IAG5C,cAA8B,EAC/B,gBAAkC,EACjC,aAA4B,EAAA;QAX5B,IAAc,CAAA,cAAA,GAAd,cAAc,CAAgB;QAC9B,IAAM,CAAA,MAAA,GAAN,MAAM,CAAQ;QACd,IAAW,CAAA,WAAA,GAAX,WAAW,CAAa;QACxB,IAAwB,CAAA,wBAAA,GAAxB,wBAAwB,CAA0B;QAClD,IAAa,CAAA,aAAA,GAAb,aAAa,CAAe;QAC5B,IAAgB,CAAA,gBAAA,GAAhB,gBAAgB,CAAkB;QAClC,IAAqB,CAAA,qBAAA,GAArB,qBAAqB,CAAuB;QAG5C,IAAc,CAAA,cAAA,GAAd,cAAc,CAAgB;QAC/B,IAAgB,CAAA,gBAAA,GAAhB,gBAAgB,CAAkB;QACjC,IAAa,CAAA,aAAA,GAAb,aAAa,CAAe;QAxCxC,IAAe,CAAA,eAAA,GAAG,eAAe,CAAC;QAClC,IAAiB,CAAA,iBAAA,GAAG,iBAAiB,CAAC;QAEtC,IAAU,CAAA,UAAA,GAAG,UAAU,CAAC;QACxB,IAAa,CAAA,aAAA,GAAG,aAAa,CAAC;QAC9B,IAAe,CAAA,eAAA,GAAG,eAAe,CAAC;QAClC,IAAiB,CAAA,iBAAA,GAAG,iBAAiB,CAAC;QACtC,IAA2B,CAAA,2BAAA,GAAG,2BAA2B,CAAC;QAC1D,IAAgB,CAAA,gBAAA,GAAG,gBAAgB,CAAC;AAKpC,QAAA,IAAA,CAAA,kBAAkB,GAAG,CAAC,IAAI,MAAM,EAAE,CAAC,CAAC;QAQpC,IAAO,CAAA,OAAA,GAAY,IAAI,CAAC;AAGxB,QAAA,IAAA,CAAA,eAAe,GAAG,IAAI,cAAc,EAAE,CAAC;QA6NvC,IAAa,CAAA,aAAA,GAAG,CAAC,SAAoB,EAAE,WAAmB,EAAE,KAAa,KAAa;YAClF,OAAO,SAAS,CAAC,GAAG,CAAC,WAAW,CAAC,CAAC,QAAQ,CAAC,KAAK,CAAC,CAAC;AACtD,SAAC,CAAA;KA7MI;IAEL,QAAQ,GAAA;QACJ,IAAI,CAAC,KAAK,GAAG,IAAI,CAAC,cAAc,CAAC,UAAU,CAAC,cAAc,CAAC,CAAC;QAC5D,IAAI,CAAC,gBAAgB,GAAG,IAAI,CAAC,cAAc,CAAC,UAAU,CAAC,kBAAkB,CAAC,CAAC;QAE3E,IAAI,CAAC,+BAA+B,EAAE,CAAC;QACvC,IAAI,CAAC,uBAAuB,EAAE,CAAC;QAE/B,IAAI,CAAC,cAAc,CAAC,IAAI,CAAC,SAAS,CAAC,IAAI,IAAG;AACtC,YAAA,IAAI,CAAC,MAAM,GAAG,IAAI,CAAC,MAAM,CAAC;YAC1B,IAAI,CAAC,YAAY,EAAE,CAAC;AACxB,SAAC,CAAC,CAAC;QAEH,IAAI,CAAC,cAAc,CAAC,MAAM,CAAC,SAAS,CAAC,MAAM,IAAG;AAC1C,YAAA,IAAI,IAAI,CAAC,MAAM,IAAI,UAAU,CAAC,MAAM,EAAE;AAClC,gBAAA,IAAI,CAAC,gBAAgB,GAAG,MAAM,CAAC,gBAAgB,CAAC;AAChD,gBAAA,IAAI,CAAC,qBAAqB,CAAC,IAAI,CAAC,gBAAgB,CAAC,CAAC;AACrD,aAAA;AACL,SAAC,CAAC,CAAC;AAEH,QAAA,IAAI,IAAI,CAAC,2BAA2B,CAAC,GAAG,CAAC,cAAc,CAAC,CAAC,GAAG,CAAC,qBAAqB,CAAC,CAAC,KAAK,IAAI,QAAQ,EAAE;AACnG,YAAA,IAAI,CAAC,qBAAqB,CAAC,QAAQ,CAAC,CAAC;AACxC,SAAA;AAAM,aAAA;AACH,YAAA,IAAI,CAAC,qBAAqB,CAAC,MAAM,CAAC,CAAC;AACtC,SAAA;KACJ;IAED,YAAY,GAAA;AACR,QAAA,MAAM,eAAe,GAAG,IAAI,CAAC,gBAAgB,IAAI,gBAAgB,CAAC,YAAY,GAAG,OAAO,GAAG,QAAQ,CAAC;AAEpG,QAAA,IAAI,IAAI,CAAC,MAAM,IAAI,UAAU,CAAC,MAAM,EAAE;AAClC,YAAA,IAAI,CAAC,SAAS,GAAG,CAAY,SAAA,EAAA,eAAe,qBAAqB,CAAC;AACrE,SAAA;AAAM,aAAA,IAAI,IAAI,CAAC,MAAM,IAAI,UAAU,CAAC,MAAM,EAAE;AACzC,YAAA,IAAI,CAAC,SAAS,GAAG,CAAoB,iBAAA,EAAA,eAAe,qBAAqB,CAAC;AAC7E,SAAA;KACJ;IAED,+BAA+B,GAAA;QAC3B,IAAI,CAAC,2BAA2B,GAAG,IAAI,CAAC,WAAW,CAAC,KAAK,CAAC;AACtD,YAAA,YAAY,EAAE,IAAI,CAAC,WAAW,CAAC,KAAK,CAAC;gBACjC,UAAU,EAAE,CAAC,sBAAsB,CAAC,kBAAkB,EAAE,UAAU,CAAC,QAAQ,CAAC;gBAC5E,QAAQ,EAAE,CAAC,EAAE,CAAC;AACd,gBAAA,UAAU,EAAE,EAAE;gBACd,QAAQ,EAAE,CAAC,EAAE,CAAC;AACd,gBAAA,cAAc,EAAE,IAAI,CAAC,WAAW,CAAC,KAAK,CAAC;AACnC,oBAAA,IAAI,EAAE,CAAC,QAAQ,EAAE,UAAU,CAAC,QAAQ,CAAC;AACrC,oBAAA,KAAK,EAAE,GAAG,UAAU,CAAC,QAAQ,CAAC;iBACjC,CAAC;AACF,gBAAA,WAAW,EAAE,GAAG,UAAU,CAAC,QAAQ,CAAC;aACvC,CAAC;AACF,YAAA,eAAe,EAAE,IAAI,CAAC,WAAW,CAAC,KAAK,CAAC;AACpC,gBAAA,IAAI,EAAE,GAAG,UAAU,CAAC,QAAQ,CAAC;AAC7B,gBAAA,YAAY,EAAE,GAAG,UAAU,CAAC,QAAQ,CAAC;AACrC,gBAAA,SAAS,EAAE,GAAG,UAAU,CAAC,QAAQ,CAAC;AAClC,gBAAA,UAAU,EAAE,GAAG,UAAU,CAAC,QAAQ,CAAC;AACnC,gBAAA,MAAM,EAAE,CAAC,EAAE,EAAE,UAAU,CAAC,QAAQ,CAAC;gBACjC,cAAc,EAAE,CAAC,EAAE,CAAC;AACpB,gBAAA,MAAM,EAAE,GAAG,UAAU,CAAC,QAAQ,CAAC;AAC/B,gBAAA,YAAY,EAAE,GAAG,UAAU,CAAC,QAAQ,CAAC;aACxC,CAAC;AACL,SAAA,CAAC,CAAC;QAEH,IAAI,CAAC,2BAA2B,CAAC,GAAG,CAAC,cAAc,CAAC,CAAC,GAAG,CAAC,qBAAqB,CAAC,CAAC,YAAY,CAAC,SAAS,CAAC,CAAC,KAAK,KAAI;YAC7G,IAAI,KAAK,IAAI,QAAQ,EAAE;AACnB,gBAAA,IAAI,CAAC,qBAAqB,CAAC,QAAQ,CAAC,CAAC;AACxC,aAAA;iBAAM,IAAI,KAAK,IAAI,UAAU,EAAE;AAC5B,gBAAA,IAAI,CAAC,qBAAqB,CAAC,MAAM,CAAC,CAAC;AACtC,aAAA;AACL,SAAC,CAAC,CAAC;KACN;AAEK,IAAA,qBAAqB,CAAC,kBAAkB,EAAA;;AAC1C,YAAA,MAAM,WAAW,GAAG;AAChB,gBAAA,IAAI,EAAE,kBAAkB;aAC3B,CAAC;AAEF,YAAA,IAAI,CAAC,kBAAkB,IAAc,MAAM,IAAI,CAAC,aAAa,CAAC,qBAAqB,CAAC,IAAI,CAAC,KAAK,EAAE,WAAW,CAAC,CAAA,CAAC;SAChH,CAAA,CAAA;AAAA,KAAA;IAEK,uBAAuB,GAAA;;AACzB,YAAA,MAAM,iBAAiB,GAA0B,MAAM,IAAI,CAAC,gBAAgB,CAAC,uBAAuB,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC;AAEjH,YAAA,IAAI,CAAC,iBAAiB,GAAG,iBAAiB,CAAC,oBAAoB,CAAC;SACnE,CAAA,CAAA;AAAA,KAAA;IAED,yBAAyB,GAAA;AACrB,QAAA,IAAI,CAAC,2BAA2B,CAAC,GAAG,CAAC,iBAAiB,CAAC,CAAC,UAAU,CAAC,IAAI,CAAC,oBAAoB,CAAC,gBAAgB,CAAC,KAAK,CAAC,CAAA;KACvH;IAED,gBAAgB,GAAA;QACZ,IAAI,CAAC,yBAAyB,EAAE,CAAC;QAEjC,IAAI,MAAM,GAAG,IAAI,CAAC,gBAAgB,CAAC,iBAAiB,CAAC,IAAI,CAAC,2BAA2B,CAAC,GAAG,CAAC,iBAAiB,CAAC,CAAC,GAAG,CAAC,QAAQ,CAAC,CAAC,KAAK,CAAC,CAAC;AAClI,QAAA,IAAI,CAAC,2BAA2B,CAAC,GAAG,CAAC,iBAAiB,CAAC,CAAC,GAAG,CAAC,QAAQ,CAAC,CAAC,UAAU,CAAC,MAAM,CAAC,CAAC;AAEzF,QAAA,IAAI,WAAW,GAAG;AACd,YAAA;AACI,gBAAA,IAAI,EAAE,IAAI,CAAC,2BAA2B,CAAC,GAAG,CAAC,cAAc,CAAC,CAAC,GAAG,CAAC,aAAa,CAAC,CAAC,KAAK;AACnF,gBAAA,KAAK,EAAE,KAAK;AACZ,gBAAA,GAAG,EAAE,KAAK;AACb,aAAA;SACJ,CAAA;AAED,QAAA,MAAM,cAAc,GAAG,IAAI,CAAC,2BAA2B,CAAC,GAAG,CAAC,cAAc,CAAC,CAAC,KAAK,CAAC;AAClF,QAAA,MAAM,iBAAiB,GAAG,IAAI,CAAC,2BAA2B,CAAC,GAAG,CAAC,iBAAiB,CAAC,CAAC,KAAK,CAAC;QACxF,MAAM,EAAE,WAAW,EAAA,GAAwC,cAAc,EAAjD,8BAA8B,GAAA,MAAA,CAAK,cAAc,EAAnE,CAAkD,aAAA,CAAA,CAAiB,CAAC;QAE1E,IAAI,CAAC,UAAU,GAAG;AACd,YAAA,YAAY,kCACL,8BAA8B,CAAA,EAAA,EACjC,MAAM,EAAE,WAAW,EACtB,CAAA;YACD,eAAe,EAAA,MAAA,CAAA,MAAA,CAAA,EAAA,EACR,iBAAiB,CACvB;SACJ,CAAC;KACL;IAED,oBAAoB,GAAA;QAChB,IAAI,CAAC,yBAAyB,EAAE,CAAC;AAEjC,QAAA,IAAI,IAAI,CAAC,oBAAoB,CAAC,gBAAgB,CAAC,OAAO,EAAE;AACpD,YAAA,IAAI,CAAC,oBAAoB,CAAC,gBAAgB,CAAC,gBAAgB,EAAE,CAAC;AACjE,SAAA;AAED,QAAA,IAAI,IAAI,CAAC,2BAA2B,CAAC,OAAO,EAAE;YAC1C,OAAO,CAAC,GAAG,CAAC,eAAe,EAAE,IAAI,CAAC,2BAA2B,CAAC,KAAK,CAAC,CAAC;AACrE,YAAA,IAAI,CAAC,aAAa,CAAC,SAAS,CAAC,WAAW,CAAC,kBAAkB,EAAE,WAAW,CAAC,oBAAoB,EAAE,WAAW,CAAC,KAAK,CAAC,CAAC;YAClH,OAAO;AACV,SAAA;AAAM,aAAA;YACH,IAAI,CAAC,gBAAgB,EAAE,CAAC;AAExB,YAAA,IAAI,IAAI,CAAC,MAAM,IAAI,UAAU,CAAC,MAAM,EAAE;gBAClC,IAAI,CAAC,oBAAoB,EAAE,CAAC;AAC/B,aAAA;AAAM,iBAAA,IAAI,IAAI,CAAC,MAAM,IAAI,UAAU,CAAC,MAAM,EAAE;gBACzC,IAAI,CAAC,oBAAoB,EAAE,CAAC;AAC/B,aAAA;AACJ,SAAA;KACJ;IAED,oBAAoB,GAAA;AAChB,QAAA,IAAI,CAAC,wBAAwB,CAAC,oBAAoB,CAAC,IAAI,CAAC,KAAK,EAAE,IAAI,CAAC,UAAU,CAAC,CAAC,SAAS,CAAC,CAAC,GAAc,KAAI;YAEzG,IAAI,CAAC,MAAM,CAAC,QAAQ,CAAC,CAAC,CAAA,oBAAA,CAAsB,CAAC,CAAC,CAAC;SAElD,EAAE,KAAK,IAAG;AACP,YAAA,OAAO,CAAC,GAAG,CAAC,iCAAiC,EAAE,KAAK,CAAC,CAAC;AAC1D,SAAC,CAAC,CAAC;KACN;AAEK,IAAA,qBAAqB,CAAC,gBAAgB,EAAA;;AACxC,YAAA,IAAI,CAAC,eAAe,IAAoB,MAAM,IAAI,CAAC,qBAAqB,CAAC,qBAAqB,CAAC,IAAI,CAAC,KAAK,EAAE,gBAAgB,CAAC,CAAA,CAAC;AAE7H,YAAA,IAAI,CAAC,mBAAmB,CAAC,IAAI,CAAC,eAAe,CAAC,CAAC;SAClD,CAAA,CAAA;AAAA,KAAA;AAED,IAAA,mBAAmB,CAAC,eAAgC,EAAA;AAEhD,QAAA,IAAI,CAAC,2BAA2B,CAAC,UAAU,CAAC;YACxC,YAAY,EAAE,eAAe,CAAC,YAAY;YAC1C,eAAe,EAAE,eAAe,CAAC,eAAe;AACnD,SAAA,CAAC,CAAC;QAEH,IAAI,CAAC,2BAA2B,CAAC,GAAG,CAAC,cAAc,CAAC,CAAC,GAAG,CAAC,aAAa,CAAC,CAAC,UAAU,CAAC,eAAe,CAAC,YAAY,CAAC,WAAW,CAAC,CAAC,CAAC,CAAC,CAAC;QAChI,IAAI,CAAC,oBAAoB,CAAC,gBAAgB,CAAC,UAAU,CAAC,eAAe,CAAC,eAAe,CAAC,CAAC;QAEvF,IAAI,CAAC,aAAa,GAAG;AACjB,YAAA,uBAAuB,EAAE,IAAI,CAAC,2BAA2B,CAAC,KAAK;AAC/D,YAAA,eAAe,EAAE,IAAI,CAAC,oBAAoB,CAAC,gBAAgB,CAAC,KAAK;SACpE,CAAC;QAEF,IAAI,CAAC,iBAAiB,EAAE,CAAC;KAC5B;IAED,iBAAiB,GAAA;QACb,IAAI,CAAC,oBAAoB,CAAC,gBAAgB,CAAC,YAAY,CAAC,SAAS,CAAC,MAAK;YACnE,IAAI,CAAC,aAAa,EAAE,CAAC;AACzB,SAAC,CAAC,CAAC;QAEH,IAAI,CAAC,2BAA2B,CAAC,YAAY,CAAC,SAAS,CAAC,MAAK;YACzD,IAAI,CAAC,aAAa,EAAE,CAAC;AACzB,SAAC,CAAC,CAAC;KACN;IAED,aAAa,GAAA;AACT,QAAA,MAAM,aAAa,GAAG;AAClB,YAAA,uBAAuB,EAAE,IAAI,CAAC,2BAA2B,CAAC,KAAK;AAC/D,YAAA,eAAe,EAAE,IAAI,CAAC,oBAAoB,CAAC,gBAAgB,CAAC,KAAK;SACpE,CAAC;QACF,IAAI,CAAC,OAAO,GAAG,OAAO,CAAC,IAAI,CAAC,aAAa,EAAE,aAAa,CAAC,CAAC;KAC7D;IAED,oBAAoB,GAAA;QAChB,IAAI,CAAC,wBAAwB,CAAC,oBAAoB,CAAC,IAAI,CAAC,KAAK,EAAE,IAAI,CAAC,gBAAgB,EAAE,IAAI,CAAC,UAAU,CAAC,CAAC,SAAS,CAAC,CAAC,GAAc,KAAI;AAEhI,YAAA,IAAI,CAAC,gBAAgB,CAAC,IAAI,EAAE,CAAC;SAEhC,EAAE,KAAK,IAAG;AACP,YAAA,OAAO,CAAC,GAAG,CAAC,iCAAiC,EAAE,KAAK,CAAC,CAAC;AAC1D,SAAC,CAAC,CAAA;KACL;;gIArPQ,kCAAkC,EAAA,IAAA,EAAA,CAAA,EAAA,KAAA,EAAA5B,IAAA,CAAA,cAAA,EAAA,EAAA,EAAA,KAAA,EAAAA,IAAA,CAAA,MAAA,EAAA,EAAA,EAAA,KAAA,EAAAC,IAAA,CAAA,WAAA,EAAA,EAAA,EAAA,KAAA,EAAAmG,wBAAA,EAAA,EAAA,EAAA,KAAA,EAAAM,aAAA,EAAA,EAAA,EAAA,KAAA,EAAApD,gBAAA,EAAA,EAAA,EAAA,KAAA,EAAAqD,qBAAA,EAAA,EAAA,EAAA,KAAA,EAAAnG,IAAA,CAAA,cAAA,EAAA,EAAA,EAAA,KAAA,EAAAC,EAAA,CAAA,gBAAA,EAAA,EAAA,EAAA,KAAA,EAAAC,IAAA,CAAA,aAAA,EAAA,CAAA,EAAA,MAAA,EAAA,EAAA,CAAA,eAAA,CAAA,SAAA,EAAA,CAAA,CAAA;AAAlC,kCAAA,CAAA,IAAA,GAAA,EAAA,CAAA,oBAAA,CAAA,EAAA,UAAA,EAAA,QAAA,EAAA,OAAA,EAAA,SAAA,EAAA,IAAA,EAAA,kCAAkC,qLChC/C,slRA6IM,EAAA,UAAA,EAAA,CAAA,EAAA,IAAA,EAAAC,EAAA,CAAA,OAAA,EAAA,QAAA,EAAA,UAAA,EAAA,QAAA,EAAA,CAAA,SAAA,CAAA,EAAA,EAAA,EAAA,IAAA,EAAAC,GAAA,CAAA,cAAA,EAAA,QAAA,EAAA,kBAAA,EAAA,MAAA,EAAA,CAAA,eAAA,EAAA,UAAA,CAAA,EAAA,QAAA,EAAA,CAAA,gBAAA,CAAA,EAAA,EAAA,EAAA,IAAA,EAAAC,IAAA,CAAA,YAAA,EAAA,QAAA,EAAA,gBAAA,EAAA,MAAA,EAAA,CAAA,OAAA,EAAA,YAAA,EAAA,YAAA,EAAA,oBAAA,EAAA,WAAA,CAAA,EAAA,QAAA,EAAA,CAAA,cAAA,CAAA,EAAA,EAAA,EAAA,IAAA,EAAAC,EAAA,CAAA,SAAA,EAAA,QAAA,EAAA,YAAA,EAAA,MAAA,EAAA,CAAA,UAAA,EAAA,eAAA,EAAA,UAAA,CAAA,EAAA,QAAA,EAAA,CAAA,WAAA,CAAA,EAAA,EAAA,EAAA,IAAA,EAAAuB,GAAA,CAAA,SAAA,EAAA,QAAA,EAAA,YAAA,EAAA,QAAA,EAAA,CAAA,WAAA,CAAA,EAAA,EAAA,EAAA,IAAA,EAAAkE,oCAAA,EAAA,QAAA,EAAA,mBAAA,EAAA,CAAA,EAAA,UAAA,EAAA,CAAA,EAAA,IAAA,EAAAtG,IAAA,CAAA,aAAA,EAAA,QAAA,EAAA,8CAAA,EAAA,EAAA,EAAA,IAAA,EAAAA,IAAA,CAAA,oBAAA,EAAA,QAAA,EAAA,0FAAA,EAAA,EAAA,EAAA,IAAA,EAAAA,IAAA,CAAA,kBAAA,EAAA,QAAA,EAAA,aAAA,EAAA,MAAA,EAAA,CAAA,WAAA,CAAA,EAAA,OAAA,EAAA,CAAA,UAAA,CAAA,EAAA,QAAA,EAAA,CAAA,QAAA,CAAA,EAAA,EAAA,EAAA,IAAA,EAAAA,IAAA,CAAA,aAAA,EAAA,QAAA,EAAA,iBAAA,EAAA,MAAA,EAAA,CAAA,eAAA,CAAA,EAAA,EAAA,EAAA,IAAA,EAAAW,GAAA,CAAA,aAAA,EAAA,QAAA,EAAA,iBAAA,EAAA,QAAA,EAAA,CAAA,eAAA,CAAA,EAAA,EAAA,EAAA,IAAA,EAAAX,IAAA,CAAA,eAAA,EAAA,QAAA,EAAA,2CAAA,EAAA,EAAA,EAAA,IAAA,EAAAA,IAAA,CAAA,eAAA,EAAA,QAAA,EAAA,mBAAA,EAAA,MAAA,EAAA,CAAA,UAAA,EAAA,iBAAA,EAAA,SAAA,CAAA,EAAA,OAAA,EAAA,CAAA,eAAA,CAAA,EAAA,EAAA,EAAA,IAAA,EAAAsC,GAAA,CAAA,IAAA,EAAA,QAAA,EAAA,QAAA,EAAA,MAAA,EAAA,CAAA,MAAA,EAAA,UAAA,EAAA,UAAA,CAAA,EAAA,EAAA,EAAA,IAAA,EAAA1B,IAAA,CAAA,QAAA,EAAA,QAAA,EAAA,WAAA,EAAA,MAAA,EAAA,CAAA,IAAA,CAAA,EAAA,EAAA,EAAA,IAAA,EAAAA,IAAA,CAAA,QAAA,EAAA,QAAA,EAAA,WAAA,EAAA,EAAA,EAAA,IAAA,EAAAZ,IAAA,CAAA,iBAAA,EAAA,QAAA,EAAA,wIAAA,EAAA,MAAA,EAAA,CAAA,UAAA,CAAA,EAAA,EAAA,EAAA,IAAA,EAAAsC,GAAA,CAAA,OAAA,EAAA,QAAA,EAAA,kBAAA,EAAA,MAAA,EAAA,CAAA,SAAA,EAAA,cAAA,EAAA,eAAA,CAAA,EAAA,EAAA,EAAA,IAAA,EAAAA,GAAA,CAAA,OAAA,EAAA,QAAA,EAAA,WAAA,EAAA,MAAA,EAAA,CAAA,OAAA,EAAA,SAAA,CAAA,EAAA,CAAA,EAAA,CAAA,CAAA;4FD7GO,kCAAkC,EAAA,UAAA,EAAA,CAAA;kBAN9C,SAAS;AAAC,YAAA,IAAA,EAAA,CAAA;AACP,oBAAA,QAAQ,EAAE,iBAAiB;AAC3B,oBAAA,WAAW,EAAE,8BAA8B;AAC3C,oBAAA,MAAM,EAAE,EACP;AACJ,iBAAA,CAAA;gXA6BsC,oBAAoB,EAAA,CAAA;sBAAtD,SAAS;uBAAC,sBAAsB,CAAA;;;AEvDrC,MAAMX,QAAM,GAAW;AACnB,IAAA;AACI,QAAA,IAAI,EAAE,EAAE;AACR,QAAA,SAAS,EAAE,kCAAkC;AAChD,KAAA;CACJ,CAAC;MAMW,sCAAsC,CAAA;;oIAAtC,sCAAsC,EAAA,IAAA,EAAA,EAAA,EAAA,MAAA,EAAA,EAAA,CAAA,eAAA,CAAA,QAAA,EAAA,CAAA,CAAA;AAAtC,sCAAA,CAAA,IAAA,GAAA,EAAA,CAAA,mBAAA,CAAA,EAAA,UAAA,EAAA,QAAA,EAAA,OAAA,EAAA,SAAA,EAAA,QAAA,EAAA,EAAA,EAAA,IAAA,EAAA,sCAAsC,0CAFrC,YAAY,CAAA,EAAA,CAAA,CAAA;qIAEb,sCAAsC,EAAA,OAAA,EAAA,CAHtC,CAAC,YAAY,CAAC,QAAQ,CAACA,QAAM,CAAC,CAAC,EAC9B,YAAY,CAAA,EAAA,CAAA,CAAA;4FAEb,sCAAsC,EAAA,UAAA,EAAA,CAAA;kBAJlD,QAAQ;AAAC,YAAA,IAAA,EAAA,CAAA;oBACN,OAAO,EAAE,CAAC,YAAY,CAAC,QAAQ,CAACA,QAAM,CAAC,CAAC;oBACxC,OAAO,EAAE,CAAC,YAAY,CAAC;AAC1B,iBAAA,CAAA;;;MCuBY,+BAA+B,CAAA;;6HAA/B,+BAA+B,EAAA,IAAA,EAAA,EAAA,EAAA,MAAA,EAAA,EAAA,CAAA,eAAA,CAAA,QAAA,EAAA,CAAA,CAAA;8HAA/B,+BAA+B,EAAA,YAAA,EAAA,CAjBpC,kCAAkC,CAAA,EAAA,OAAA,EAAA,CAGlC,YAAY;QACZ,sCAAsC;QAEtC,iCAAiC;QAEjC,WAAW;QACX,mBAAmB;QAEnB,aAAa;QACb,kBAAkB;QAClB,eAAe;QACf,cAAc,CAAA,EAAA,CAAA,CAAA;AAGT,+BAAA,CAAA,IAAA,GAAA,EAAA,CAAA,mBAAA,CAAA,EAAA,UAAA,EAAA,QAAA,EAAA,OAAA,EAAA,SAAA,EAAA,QAAA,EAAA,EAAA,EAAA,IAAA,EAAA,+BAA+B,EAf/B,OAAA,EAAA,CAAA;YACL,YAAY;YACZ,sCAAsC;YAEtC,iCAAiC;YAEjC,WAAW;YACX,mBAAmB;YAEnB,aAAa;YACb,kBAAkB;YAClB,eAAe;YACf,cAAc;AACjB,SAAA,CAAA,EAAA,CAAA,CAAA;4FAEQ,+BAA+B,EAAA,UAAA,EAAA,CAAA;kBAnB3C,QAAQ;AAAC,YAAA,IAAA,EAAA,CAAA;AACN,oBAAA,YAAY,EAAE;wBACV,kCAAkC;AACrC,qBAAA;AACD,oBAAA,OAAO,EAAE;wBACL,YAAY;wBACZ,sCAAsC;wBAEtC,iCAAiC;wBAEjC,WAAW;wBACX,mBAAmB;wBAEnB,aAAa;wBACb,kBAAkB;wBAClB,eAAe;wBACf,cAAc;AACjB,qBAAA;AACJ,iBAAA,CAAA;;;ACdD;MAQa,+BAA+B,CAAA;IA+BxC,WACY,CAAA,cAA8B,EAC9B,MAAc,EACd,WAAwB,EACxB,wBAAkD,EAClD,gBAAkC,EAClC,qBAA4C;;IAG5C,cAA8B,EAC/B,gBAAkC,EACjC,aAA4B,EAAA;QAV5B,IAAc,CAAA,cAAA,GAAd,cAAc,CAAgB;QAC9B,IAAM,CAAA,MAAA,GAAN,MAAM,CAAQ;QACd,IAAW,CAAA,WAAA,GAAX,WAAW,CAAa;QACxB,IAAwB,CAAA,wBAAA,GAAxB,wBAAwB,CAA0B;QAClD,IAAgB,CAAA,gBAAA,GAAhB,gBAAgB,CAAkB;QAClC,IAAqB,CAAA,qBAAA,GAArB,qBAAqB,CAAuB;QAG5C,IAAc,CAAA,cAAA,GAAd,cAAc,CAAgB;QAC/B,IAAgB,CAAA,gBAAA,GAAhB,gBAAgB,CAAkB;QACjC,IAAa,CAAA,aAAA,GAAb,aAAa,CAAe;QAxCxC,IAAe,CAAA,eAAA,GAAG,eAAe,CAAC;QAClC,IAAiB,CAAA,iBAAA,GAAG,iBAAiB,CAAC;QAEtC,IAAU,CAAA,UAAA,GAAG,UAAU,CAAC;QACxB,IAAa,CAAA,aAAA,GAAG,aAAa,CAAC;QAC9B,IAAe,CAAA,eAAA,GAAG,eAAe,CAAC;QAClC,IAAiB,CAAA,iBAAA,GAAG,iBAAiB,CAAC;QACtC,IAA2B,CAAA,2BAAA,GAAG,2BAA2B,CAAC;QAU1D,IAAc,CAAA,cAAA,GAAU,EAAE,CAAC;QAC3B,IAAmB,CAAA,mBAAA,GAAW,CAAC,CAAC;QAIhC,IAAO,CAAA,OAAA,GAAY,IAAI,CAAC;AAGxB,QAAA,IAAA,CAAA,eAAe,GAAG,IAAI,cAAc,EAAE,CAAC;QA6NvC,IAAa,CAAA,aAAA,GAAG,CAAC,SAAoB,EAAE,WAAmB,EAAE,KAAa,KAAa;YAClF,OAAO,SAAS,CAAC,GAAG,CAAC,WAAW,CAAC,CAAC,QAAQ,CAAC,KAAK,CAAC,CAAC;AACtD,SAAC,CAAA;KA9MI;IAEL,QAAQ,GAAA;QACJ,IAAI,CAAC,KAAK,GAAG,IAAI,CAAC,cAAc,CAAC,UAAU,CAAC,cAAc,CAAC,CAAC;QAC5D,IAAI,CAAC,gBAAgB,GAAG,IAAI,CAAC,cAAc,CAAC,UAAU,CAAC,kBAAkB,CAAC,CAAC;QAE3E,IAAI,CAAC,4BAA4B,EAAE,CAAC;QACpC,IAAI,CAAC,uBAAuB,EAAE,CAAC;QAE/B,IAAI,CAAC,cAAc,CAAC,IAAI,CAAC,SAAS,CAAC,IAAI,IAAG;AACtC,YAAA,IAAI,CAAC,MAAM,GAAG,IAAI,CAAC,MAAM,CAAC;YAC1B,IAAI,CAAC,YAAY,EAAE,CAAC;AACxB,SAAC,CAAC,CAAC;QAEH,IAAI,CAAC,cAAc,CAAC,MAAM,CAAC,SAAS,CAAC,MAAM,IAAG;AAC1C,YAAA,IAAI,IAAI,CAAC,MAAM,IAAI,UAAU,CAAC,MAAM,EAAE;AAClC,gBAAA,IAAI,CAAC,gBAAgB,GAAG,MAAM,CAAC,gBAAgB,CAAC;AAEhD,gBAAA,IAAI,CAAC,qBAAqB,CAAC,IAAI,CAAC,gBAAgB,CAAC,CAAC;AACrD,aAAA;AACL,SAAC,CAAC,CAAC;KACN;IAED,YAAY,GAAA;AACR,QAAA,MAAM,eAAe,GAAG,IAAI,CAAC,gBAAgB,IAAI,gBAAgB,CAAC,YAAY,GAAG,OAAO,GAAG,QAAQ,CAAC;AAEpG,QAAA,IAAI,IAAI,CAAC,MAAM,IAAI,UAAU,CAAC,MAAM,EAAE;AAClC,YAAA,IAAI,CAAC,SAAS,GAAG,CAAY,SAAA,EAAA,eAAe,kBAAkB,CAAC;AAClE,SAAA;AAAM,aAAA,IAAI,IAAI,CAAC,MAAM,IAAI,UAAU,CAAC,MAAM,EAAE;AACzC,YAAA,IAAI,CAAC,SAAS,GAAG,CAAoB,iBAAA,EAAA,eAAe,mBAAmB,CAAC;AAC3E,SAAA;KACJ;IAED,4BAA4B,GAAA;QACxB,IAAI,CAAC,wBAAwB,GAAG,IAAI,CAAC,WAAW,CAAC,KAAK,CAAC;AACnD,YAAA,YAAY,EAAE,IAAI,CAAC,WAAW,CAAC,KAAK,CAAC;gBACjC,UAAU,EAAE,CAAC,sBAAsB,CAAC,eAAe,EAAE,UAAU,CAAC,QAAQ,CAAC;gBACzE,QAAQ,EAAE,CAAC,EAAE,CAAC;AACd,gBAAA,UAAU,EAAE,EAAE;gBACd,QAAQ,EAAE,CAAC,EAAE,CAAC;AACd,gBAAA,cAAc,EAAE,IAAI,CAAC,WAAW,CAAC,KAAK,CAAC;oBACnC,IAAI,EAAE,CAAC,QAAQ,CAAC;AAChB,oBAAA,KAAK,EAAE,EAAE;iBACZ,CAAC;AACF,gBAAA,WAAW,EAAE,CAAC,EAAE,EAAE,UAAU,CAAC,QAAQ,CAAC;aACzC,CAAC;AACF,YAAA,eAAe,EAAE,IAAI,CAAC,WAAW,CAAC,KAAK,CAAC;AACpC,gBAAA,IAAI,EAAE,GAAG,UAAU,CAAC,QAAQ,CAAC;AAC7B,gBAAA,YAAY,EAAE,GAAG,UAAU,CAAC,QAAQ,CAAC;AACrC,gBAAA,SAAS,EAAE,GAAG,UAAU,CAAC,QAAQ,CAAC;AAClC,gBAAA,UAAU,EAAE,GAAG,UAAU,CAAC,QAAQ,CAAC;AACnC,gBAAA,MAAM,EAAE,CAAC,EAAE,EAAE,UAAU,CAAC,QAAQ,CAAC;gBACjC,cAAc,EAAE,CAAC,EAAE,CAAC;AACpB,gBAAA,MAAM,EAAE,GAAG,UAAU,CAAC,QAAQ,CAAC;AAC/B,gBAAA,YAAY,EAAE,GAAG,UAAU,CAAC,QAAQ,CAAC;aACxC,CAAC;AACL,SAAA,CAAC,CAAC;KACN;IAEK,uBAAuB,GAAA;;AACzB,YAAA,MAAM,iBAAiB,GAA0B,MAAM,IAAI,CAAC,gBAAgB,CAAC,uBAAuB,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC;AACjH,YAAA,IAAI,CAAC,iBAAiB,GAAG,iBAAiB,CAAC,oBAAoB,CAAC;YAEhE,IAAI,CAAC,mBAAmB,GAAG,IAAI,CAAC,iBAAiB,CAAC,MAAM,CAAC;YACzD,IAAI,CAAC,iBAAiB,CAAC,OAAO,CAAC,SAAS,IAAI,IAAI,CAAC,cAAc,CAAC,IAAI,CAAC,SAAS,CAAC,aAAa,CAAC,CAAC,CAAC,CAAC;SACnG,CAAA,CAAA;AAAA,KAAA;IAED,mBAAmB,GAAA;QACf,IAAI,CAAC,IAAI,CAAC,wBAAwB,CAAC,GAAG,CAAC,cAAc,CAAC,CAAC,GAAG,CAAC,aAAa,CAAC,CAAC,KAAK,CAAC,QAAQ,CAAC,CAAC,CAAC,CAAC,EAAE;AAC1F,YAAA,IAAI,CAAC,wBAAwB,CAAC,GAAG,CAAC,cAAc,CAAC,CAAC,GAAG,CAAC,aAAa,CAAC,CAAC,KAAK,CAAC,EAAE,CAAC,CAAC;YAC/E,OAAO;AACV,SAAA;QACD,IAAI,CAAC,wBAAwB,CAAC,GAAG,CAAC,cAAc,CAAC,CAAC,GAAG,CAAC,aAAa,CAAC,CAAC,QAAQ,CAAC,CAAC,CAAC,CAAC,EAAE,GAAG,IAAI,CAAC,cAAc,CAAC,CAAC,CAAC;KAC/G;IAED,kBAAkB,GAAA;AACd,QAAA,MAAM,QAAQ,GAAG,IAAI,CAAC,wBAAwB,CAAC,GAAG,CAAC,cAAc,CAAC,CAAC,GAAG,CAAC,aAAa,CAAC,CAAC,KAAK,CAAC;AAE5F,QAAA,IAAI,QAAQ,CAAC,QAAQ,CAAC,CAAC,CAAC,CAAC,EAAE;YACvB,QAAQ,CAAC,KAAK,EAAE,CAAC;AACjB,YAAA,IAAI,CAAC,wBAAwB,CAAC,GAAG,CAAC,cAAc,CAAC,CAAC,GAAG,CAAC,aAAa,CAAC,CAAC,UAAU,CAAC,QAAQ,CAAC,CAAC;AAC7F,SAAA;aAAM,IAAI,IAAI,CAAC,wBAAwB,CAAC,GAAG,CAAC,cAAc,CAAC,CAAC,GAAG,CAAC,aAAa,CAAC,CAAC,KAAK,CAAC,MAAM,IAAI,IAAI,CAAC,mBAAmB,EAAE;AACtH,YAAA,IAAI,CAAC,cAAc,CAAC,MAAM,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC;AACrC,YAAA,IAAI,CAAC,wBAAwB,CAAC,GAAG,CAAC,cAAc,CAAC,CAAC,GAAG,CAAC,aAAa,CAAC,CAAC,UAAU,CAAC,IAAI,CAAC,cAAc,CAAC,CAAC;AACxG,SAAA;AAAM,aAAA;AACH,YAAA,MAAM,gBAAgB,GAAG,QAAQ,CAAC,MAAM,CAAC,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC;AACvD,YAAA,IAAI,CAAC,wBAAwB,CAAC,GAAG,CAAC,aAAa,CAAC,CAAC,UAAU,CAAC,gBAAgB,CAAC,CAAC;AACjF,SAAA;KACJ;IAED,yBAAyB,GAAA;AACrB,QAAA,IAAI,CAAC,wBAAwB,CAAC,GAAG,CAAC,iBAAiB,CAAC,CAAC,UAAU,CAAC,IAAI,CAAC,oBAAoB,CAAC,gBAAgB,CAAC,KAAK,CAAC,CAAA;KACpH;IAED,gBAAgB,GAAA;QACZ,IAAI,CAAC,yBAAyB,EAAE,CAAC;QAEjC,IAAI,MAAM,GAAG,IAAI,CAAC,gBAAgB,CAAC,iBAAiB,CAAC,IAAI,CAAC,wBAAwB,CAAC,GAAG,CAAC,iBAAiB,CAAC,CAAC,GAAG,CAAC,QAAQ,CAAC,CAAC,KAAK,CAAC,CAAC;AAC/H,QAAA,IAAI,CAAC,wBAAwB,CAAC,GAAG,CAAC,iBAAiB,CAAC,CAAC,GAAG,CAAC,QAAQ,CAAC,CAAC,UAAU,CAAC,MAAM,CAAC,CAAC;QAEtF,IAAI,YAAY,GAAG,IAAI,CAAC,gBAAgB,CAAC,iBAAiB,CAAC,IAAI,CAAC,wBAAwB,CAAC,GAAG,CAAC,cAAc,CAAC,CAAC,GAAG,CAAC,aAAa,CAAC,CAAC,KAAK,CAAC,CAAC;QACvI,IAAI,WAAW,GAAG,YAAY,CAAC,GAAG,CAAC,SAAS,KAAK;AAC7C,YAAA,IAAI,EAAE,SAAS;AACf,YAAA,KAAK,EAAE,KAAK;AACZ,YAAA,GAAG,EAAE,KAAK;AACb,SAAA,CAAC,CAAC,CAAC;AAEJ,QAAA,MAAM,cAAc,GAAG,IAAI,CAAC,wBAAwB,CAAC,GAAG,CAAC,cAAc,CAAC,CAAC,KAAK,CAAC;AAC/E,QAAA,MAAM,iBAAiB,GAAG,IAAI,CAAC,wBAAwB,CAAC,GAAG,CAAC,iBAAiB,CAAC,CAAC,KAAK,CAAC;QACrF,MAAM,EAAE,WAAW,EAAA,GAAwC,cAAc,EAAjD,8BAA8B,GAAA,MAAA,CAAK,cAAc,EAAnE,CAAkD,aAAA,CAAA,CAAiB,CAAC;QAE1E,IAAI,CAAC,UAAU,GAAG;AACd,YAAA,YAAY,kCACL,8BAA8B,CAAA,EAAA,EACjC,MAAM,EAAE,WAAW,EACtB,CAAA;YACD,eAAe,EAAA,MAAA,CAAA,MAAA,CAAA,EAAA,EACR,iBAAiB,CACvB;SACJ,CAAC;KACL;IAED,oBAAoB,GAAA;QAChB,IAAI,CAAC,yBAAyB,EAAE,CAAC;AAEjC,QAAA,IAAI,IAAI,CAAC,oBAAoB,CAAC,gBAAgB,CAAC,OAAO,EAAE;AACpD,YAAA,IAAI,CAAC,oBAAoB,CAAC,gBAAgB,CAAC,gBAAgB,EAAE,CAAC;AACjE,SAAA;AAED,QAAA,IAAI,IAAI,CAAC,wBAAwB,CAAC,OAAO,EAAE;YACvC,OAAO,CAAC,GAAG,CAAC,eAAe,EAAE,IAAI,CAAC,wBAAwB,CAAC,KAAK,CAAC,CAAC;AAClE,YAAA,IAAI,CAAC,aAAa,CAAC,SAAS,CAAC,WAAW,CAAC,kBAAkB,EAAE,WAAW,CAAC,oBAAoB,EAAE,WAAW,CAAC,KAAK,CAAC,CAAC;YAClH,OAAO;AACV,SAAA;AAAM,aAAA;YACH,IAAI,CAAC,gBAAgB,EAAE,CAAC;AAExB,YAAA,IAAI,IAAI,CAAC,MAAM,IAAI,UAAU,CAAC,MAAM,EAAE;gBAClC,IAAI,CAAC,oBAAoB,EAAE,CAAC;AAC/B,aAAA;AAAM,iBAAA,IAAI,IAAI,CAAC,MAAM,IAAI,UAAU,CAAC,MAAM,EAAE;gBACzC,IAAI,CAAC,oBAAoB,EAAE,CAAC;AAC/B,aAAA;AACJ,SAAA;KACJ;IAED,oBAAoB,GAAA;AAChB,QAAA,IAAI,CAAC,wBAAwB,CAAC,oBAAoB,CAAC,IAAI,CAAC,KAAK,EAAE,IAAI,CAAC,UAAU,CAAC,CAAC,SAAS,CAAC,CAAC,GAAc,KAAI;YAEzG,IAAI,CAAC,MAAM,CAAC,QAAQ,CAAC,CAAC,CAAA,oBAAA,CAAsB,CAAC,CAAC,CAAC;SAElD,EAAE,KAAK,IAAG;AACP,YAAA,OAAO,CAAC,GAAG,CAAC,iCAAiC,EAAE,KAAK,CAAC,CAAC;AAC1D,SAAC,CAAC,CAAC;KACN;AAEK,IAAA,qBAAqB,CAAC,gBAAgB,EAAA;;AACxC,YAAA,IAAI,CAAC,eAAe,IAAoB,MAAM,IAAI,CAAC,qBAAqB,CAAC,qBAAqB,CAAC,IAAI,CAAC,KAAK,EAAE,gBAAgB,CAAC,CAAA,CAAC;AAE7H,YAAA,IAAI,CAAC,mBAAmB,CAAC,IAAI,CAAC,eAAe,CAAC,CAAC;SAClD,CAAA,CAAA;AAAA,KAAA;AAED,IAAA,mBAAmB,CAAC,eAAgC,EAAA;AAChD,QAAA,IAAI,CAAC,wBAAwB,CAAC,UAAU,CAAC;YACrC,YAAY,EAAE,eAAe,CAAC,YAAY;YAC1C,eAAe,EAAE,eAAe,CAAC,eAAe;AACnD,SAAA,CAAC,CAAC;QAEH,IAAI,CAAC,oBAAoB,CAAC,gBAAgB,CAAC,UAAU,CAAC,eAAe,CAAC,eAAe,CAAC,CAAC;QAEvF,IAAI,CAAC,aAAa,GAAG;AACjB,YAAA,oBAAoB,EAAE,IAAI,CAAC,wBAAwB,CAAC,KAAK;AACzD,YAAA,eAAe,EAAE,IAAI,CAAC,oBAAoB,CAAC,gBAAgB,CAAC,KAAK;SACpE,CAAC;QAEF,IAAI,CAAC,iBAAiB,EAAE,CAAC;KAC5B;IAED,iBAAiB,GAAA;QACb,IAAI,CAAC,oBAAoB,CAAC,gBAAgB,CAAC,YAAY,CAAC,SAAS,CAAC,MAAK;YACnE,IAAI,CAAC,aAAa,EAAE,CAAC;AACzB,SAAC,CAAC,CAAC;QAEH,IAAI,CAAC,wBAAwB,CAAC,YAAY,CAAC,SAAS,CAAC,MAAK;YACtD,IAAI,CAAC,aAAa,EAAE,CAAC;AACzB,SAAC,CAAC,CAAC;KACN;IAED,aAAa,GAAA;AACT,QAAA,MAAM,aAAa,GAAG;AAClB,YAAA,oBAAoB,EAAE,IAAI,CAAC,wBAAwB,CAAC,KAAK;AACzD,YAAA,eAAe,EAAE,IAAI,CAAC,oBAAoB,CAAC,gBAAgB,CAAC,KAAK;SACpE,CAAC;QACF,IAAI,CAAC,OAAO,GAAG,OAAO,CAAC,IAAI,CAAC,aAAa,EAAE,aAAa,CAAC,CAAC;KAC7D;IAED,oBAAoB,GAAA;QAChB,IAAI,CAAC,wBAAwB,CAAC,oBAAoB,CAAC,IAAI,CAAC,KAAK,EAAE,IAAI,CAAC,gBAAgB,EAAE,IAAI,CAAC,UAAU,CAAC,CAAC,SAAS,CAAC,CAAC,GAAc,KAAI;AAEhI,YAAA,IAAI,CAAC,gBAAgB,CAAC,IAAI,EAAE,CAAC;SAEhC,EAAE,KAAK,IAAG;AACP,YAAA,OAAO,CAAC,GAAG,CAAC,iCAAiC,EAAE,KAAK,CAAC,CAAC;AAC1D,SAAC,CAAC,CAAA;KACL;;6HAtPQ,+BAA+B,EAAA,IAAA,EAAA,CAAA,EAAA,KAAA,EAAA5B,IAAA,CAAA,cAAA,EAAA,EAAA,EAAA,KAAA,EAAAA,IAAA,CAAA,MAAA,EAAA,EAAA,EAAA,KAAA,EAAAC,IAAA,CAAA,WAAA,EAAA,EAAA,EAAA,KAAA,EAAAmG,wBAAA,EAAA,EAAA,EAAA,KAAA,EAAArD,gBAAA,EAAA,EAAA,EAAA,KAAA,EAAAuD,qBAAA,EAAA,EAAA,EAAA,KAAA,EAAArF,IAAA,CAAA,cAAA,EAAA,EAAA,EAAA,KAAA,EAAAT,EAAA,CAAA,gBAAA,EAAA,EAAA,EAAA,KAAA,EAAAC,IAAA,CAAA,aAAA,EAAA,CAAA,EAAA,MAAA,EAAA,EAAA,CAAA,eAAA,CAAA,SAAA,EAAA,CAAA,CAAA;AAA/B,+BAAA,CAAA,IAAA,GAAA,EAAA,CAAA,oBAAA,CAAA,EAAA,UAAA,EAAA,QAAA,EAAA,OAAA,EAAA,SAAA,EAAA,IAAA,EAAA,+BAA+B,kLC/B5C,ywIA6EM,EAAA,UAAA,EAAA,CAAA,EAAA,IAAA,EAAA,EAAA,CAAA,OAAA,EAAA,QAAA,EAAA,UAAA,EAAA,QAAA,EAAA,CAAA,SAAA,CAAA,EAAA,EAAA,EAAA,IAAA,EAAAE,IAAA,CAAA,YAAA,EAAA,QAAA,EAAA,gBAAA,EAAA,MAAA,EAAA,CAAA,OAAA,EAAA,YAAA,EAAA,YAAA,EAAA,oBAAA,EAAA,WAAA,CAAA,EAAA,QAAA,EAAA,CAAA,cAAA,CAAA,EAAA,EAAA,EAAA,IAAA,EAAAC,EAAA,CAAA,SAAA,EAAA,QAAA,EAAA,YAAA,EAAA,MAAA,EAAA,CAAA,UAAA,EAAA,eAAA,EAAA,UAAA,CAAA,EAAA,QAAA,EAAA,CAAA,WAAA,CAAA,EAAA,EAAA,EAAA,IAAA,EAAAC,GAAA,CAAA,SAAA,EAAA,QAAA,EAAA,YAAA,EAAA,QAAA,EAAA,CAAA,WAAA,CAAA,EAAA,EAAA,EAAA,IAAA,EAAA+F,oCAAA,EAAA,QAAA,EAAA,mBAAA,EAAA,CAAA,EAAA,UAAA,EAAA,CAAA,EAAA,IAAA,EAAA3G,IAAA,CAAA,aAAA,EAAA,QAAA,EAAA,8CAAA,EAAA,EAAA,EAAA,IAAA,EAAAA,IAAA,CAAA,oBAAA,EAAA,QAAA,EAAA,0FAAA,EAAA,EAAA,EAAA,IAAA,EAAAA,IAAA,CAAA,kBAAA,EAAA,QAAA,EAAA,aAAA,EAAA,MAAA,EAAA,CAAA,WAAA,CAAA,EAAA,OAAA,EAAA,CAAA,UAAA,CAAA,EAAA,QAAA,EAAA,CAAA,QAAA,CAAA,EAAA,EAAA,EAAA,IAAA,EAAAA,IAAA,CAAA,aAAA,EAAA,QAAA,EAAA,iBAAA,EAAA,MAAA,EAAA,CAAA,eAAA,CAAA,EAAA,EAAA,EAAA,IAAA,EAAAU,IAAA,CAAA,QAAA,EAAA,QAAA,EAAA,WAAA,EAAA,EAAA,EAAA,IAAA,EAAAV,IAAA,CAAA,eAAA,EAAA,QAAA,EAAA,2CAAA,EAAA,EAAA,EAAA,IAAA,EAAAA,IAAA,CAAA,eAAA,EAAA,QAAA,EAAA,mBAAA,EAAA,MAAA,EAAA,CAAA,UAAA,EAAA,iBAAA,EAAA,SAAA,CAAA,EAAA,OAAA,EAAA,CAAA,eAAA,CAAA,EAAA,EAAA,EAAA,IAAA,EAAAA,IAAA,CAAA,iBAAA,EAAA,QAAA,EAAA,wIAAA,EAAA,MAAA,EAAA,CAAA,UAAA,CAAA,EAAA,EAAA,EAAA,IAAA,EAAA,GAAA,CAAA,IAAA,EAAA,QAAA,EAAA,QAAA,EAAA,MAAA,EAAA,CAAA,MAAA,EAAA,UAAA,EAAA,UAAA,CAAA,EAAA,EAAA,EAAA,IAAA,EAAA,GAAA,CAAA,OAAA,EAAA,QAAA,EAAA,kBAAA,EAAA,MAAA,EAAA,CAAA,SAAA,EAAA,cAAA,EAAA,eAAA,CAAA,EAAA,EAAA,EAAA,IAAA,EAAAU,IAAA,CAAA,QAAA,EAAA,QAAA,EAAA,WAAA,EAAA,MAAA,EAAA,CAAA,IAAA,CAAA,EAAA,EAAA,EAAA,IAAA,EAAA,GAAA,CAAA,OAAA,EAAA,QAAA,EAAA,WAAA,EAAA,MAAA,EAAA,CAAA,OAAA,EAAA,SAAA,CAAA,EAAA,CAAA,EAAA,CAAA,CAAA;4FD9CO,+BAA+B,EAAA,UAAA,EAAA,CAAA;kBAN3C,SAAS;AAAC,YAAA,IAAA,EAAA,CAAA;AACP,oBAAA,QAAQ,EAAE,cAAc;AACxB,oBAAA,WAAW,EAAE,2BAA2B;AACxC,oBAAA,MAAM,EAAE,EACP;AACJ,iBAAA,CAAA;uVA8BsC,oBAAoB,EAAA,CAAA;sBAAtD,SAAS;uBAAC,sBAAsB,CAAA;;;AEvDrC,MAAMiB,QAAM,GAAW;AACnB,IAAA;AACI,QAAA,IAAI,EAAE,EAAE;AACR,QAAA,SAAS,EAAE,+BAA+B;AAC7C,KAAA;CACJ,CAAC;MAMW,mCAAmC,CAAA;;iIAAnC,mCAAmC,EAAA,IAAA,EAAA,EAAA,EAAA,MAAA,EAAA,EAAA,CAAA,eAAA,CAAA,QAAA,EAAA,CAAA,CAAA;AAAnC,mCAAA,CAAA,IAAA,GAAA,EAAA,CAAA,mBAAA,CAAA,EAAA,UAAA,EAAA,QAAA,EAAA,OAAA,EAAA,SAAA,EAAA,QAAA,EAAA,EAAA,EAAA,IAAA,EAAA,mCAAmC,0CAFlC,YAAY,CAAA,EAAA,CAAA,CAAA;kIAEb,mCAAmC,EAAA,OAAA,EAAA,CAHnC,CAAC,YAAY,CAAC,QAAQ,CAACA,QAAM,CAAC,CAAC,EAC9B,YAAY,CAAA,EAAA,CAAA,CAAA;4FAEb,mCAAmC,EAAA,UAAA,EAAA,CAAA;kBAJ/C,QAAQ;AAAC,YAAA,IAAA,EAAA,CAAA;oBACN,OAAO,EAAE,CAAC,YAAY,CAAC,QAAQ,CAACA,QAAM,CAAC,CAAC;oBACxC,OAAO,EAAE,CAAC,YAAY,CAAC;AAC1B,iBAAA,CAAA;;;MCoBY,4BAA4B,CAAA;;0HAA5B,4BAA4B,EAAA,IAAA,EAAA,EAAA,EAAA,MAAA,EAAA,EAAA,CAAA,eAAA,CAAA,QAAA,EAAA,CAAA,CAAA;2HAA5B,4BAA4B,EAAA,YAAA,EAAA,CAfjC,+BAA+B,CAAA,EAAA,OAAA,EAAA,CAG/B,YAAY;QACZ,mCAAmC;QAEnC,iCAAiC;QAEjC,WAAW;QACX,mBAAmB;QACnB,aAAa;QACb,kBAAkB;QAClB,eAAe,CAAA,EAAA,CAAA,CAAA;AAGV,4BAAA,CAAA,IAAA,GAAA,EAAA,CAAA,mBAAA,CAAA,EAAA,UAAA,EAAA,QAAA,EAAA,OAAA,EAAA,SAAA,EAAA,QAAA,EAAA,EAAA,EAAA,IAAA,EAAA,4BAA4B,EAb5B,OAAA,EAAA,CAAA;YACL,YAAY;YACZ,mCAAmC;YAEnC,iCAAiC;YAEjC,WAAW;YACX,mBAAmB;YACnB,aAAa;YACb,kBAAkB;YAClB,eAAe;AAClB,SAAA,CAAA,EAAA,CAAA,CAAA;4FAEQ,4BAA4B,EAAA,UAAA,EAAA,CAAA;kBAjBxC,QAAQ;AAAC,YAAA,IAAA,EAAA,CAAA;AACN,oBAAA,YAAY,EAAE;wBACV,+BAA+B;AAClC,qBAAA;AACD,oBAAA,OAAO,EAAE;wBACL,YAAY;wBACZ,mCAAmC;wBAEnC,iCAAiC;wBAEjC,WAAW;wBACX,mBAAmB;wBACnB,aAAa;wBACb,kBAAkB;wBAClB,eAAe;AAClB,qBAAA;AACJ,iBAAA,CAAA;;;ACXD;MAOa,kCAAkC,CAAA;IAgC3C,WACY,CAAA,cAA8B,EAC9B,MAAc,EACd,WAAwB,EACxB,wBAAkD,EAClD,aAA4B,EAC5B,qBAA4C;;IAG5C,cAA8B,EAC/B,gBAAkC,EACjC,aAA4B,EAAA;QAV5B,IAAc,CAAA,cAAA,GAAd,cAAc,CAAgB;QAC9B,IAAM,CAAA,MAAA,GAAN,MAAM,CAAQ;QACd,IAAW,CAAA,WAAA,GAAX,WAAW,CAAa;QACxB,IAAwB,CAAA,wBAAA,GAAxB,wBAAwB,CAA0B;QAClD,IAAa,CAAA,aAAA,GAAb,aAAa,CAAe;QAC5B,IAAqB,CAAA,qBAAA,GAArB,qBAAqB,CAAuB;QAG5C,IAAc,CAAA,cAAA,GAAd,cAAc,CAAgB;QAC/B,IAAgB,CAAA,gBAAA,GAAhB,gBAAgB,CAAkB;QACjC,IAAa,CAAA,aAAA,GAAb,aAAa,CAAe;QAzCxC,IAAe,CAAA,eAAA,GAAG,eAAe,CAAC;QAClC,IAAiB,CAAA,iBAAA,GAAG,iBAAiB,CAAC;QAEtC,IAAU,CAAA,UAAA,GAAG,UAAU,CAAC;QACxB,IAAa,CAAA,aAAA,GAAG,aAAa,CAAC;QAC9B,IAAe,CAAA,eAAA,GAAG,eAAe,CAAC;QAClC,IAAiB,CAAA,iBAAA,GAAG,iBAAiB,CAAC;QACtC,IAA2B,CAAA,2BAAA,GAAG,2BAA2B,CAAC;AAI1D,QAAA,IAAA,CAAA,OAAO,GAAG,CAAC,IAAI,MAAM,EAAE,CAAC,CAAC;QACzB,IAAU,CAAA,UAAA,GAAU,EAAE,CAAC;QACvB,IAAW,CAAA,WAAA,GAAU,EAAE,CAAC;QACxB,IAAgB,CAAA,gBAAA,GAAW,CAAC,CAAC;QAC7B,IAAQ,CAAA,QAAA,GAAU,EAAE,CAAC;QAQrB,IAAO,CAAA,OAAA,GAAY,IAAI,CAAC;AAGxB,QAAA,IAAA,CAAA,eAAe,GAAG,IAAI,cAAc,EAAE,CAAC;QAqPvC,IAAa,CAAA,aAAA,GAAG,CAAC,SAAoB,EAAE,WAAmB,EAAE,KAAa,KAAa;YAClF,OAAO,SAAS,CAAC,GAAG,CAAC,WAAW,CAAC,CAAC,QAAQ,CAAC,KAAK,CAAC,CAAC;AACtD,SAAC,CAAA;KAtOI;IAEL,QAAQ,GAAA;QACJ,IAAI,CAAC,KAAK,GAAG,IAAI,CAAC,cAAc,CAAC,UAAU,CAAC,cAAc,CAAC,CAAC;QAE5D,IAAI,CAAC,wBAAwB,EAAE,CAAC;QAChC,IAAI,CAAC,+BAA+B,EAAE,CAAC;QAEvC,IAAI,CAAC,cAAc,CAAC,IAAI,CAAC,SAAS,CAAC,IAAI,IAAG;AACtC,YAAA,IAAI,CAAC,MAAM,GAAG,IAAI,CAAC,MAAM,CAAC;YAC1B,IAAI,CAAC,YAAY,EAAE,CAAC;AACxB,SAAC,CAAC,CAAC;QAEH,IAAI,CAAC,cAAc,CAAC,MAAM,CAAC,SAAS,CAAC,MAAM,IAAG;AAC1C,YAAA,IAAI,IAAI,CAAC,MAAM,IAAI,UAAU,CAAC,MAAM,EAAE;AAClC,gBAAA,IAAI,CAAC,gBAAgB,GAAG,MAAM,CAAC,gBAAgB,CAAC;AAChD,gBAAA,IAAI,CAAC,qBAAqB,CAAC,IAAI,CAAC,gBAAgB,CAAC,CAAC;AACrD,aAAA;AACL,SAAC,CAAC,CAAC;KACN;IAED,YAAY,GAAA;AACR,QAAA,IAAI,IAAI,CAAC,MAAM,IAAI,UAAU,CAAC,MAAM,EAAE;AAClC,YAAA,IAAI,CAAC,SAAS,GAAG,CAAA,2BAAA,CAA6B,CAAC;AAClD,SAAA;AAAM,aAAA,IAAI,IAAI,CAAC,MAAM,IAAI,UAAU,CAAC,MAAM,EAAE;AACzC,YAAA,IAAI,CAAC,SAAS,GAAG,CAAA,mCAAA,CAAqC,CAAC;AAC1D,SAAA;KACJ;IAED,+BAA+B,GAAA;QAC3B,IAAI,CAAC,2BAA2B,GAAG,IAAI,CAAC,WAAW,CAAC,KAAK,CAAC;AACtD,YAAA,YAAY,EAAE,IAAI,CAAC,WAAW,CAAC,KAAK,CAAC;gBACjC,UAAU,EAAE,CAAC,sBAAsB,CAAC,kBAAkB,EAAE,UAAU,CAAC,QAAQ,CAAC;gBAC5E,QAAQ,EAAE,CAAC,EAAE,CAAC;AACd,gBAAA,UAAU,EAAE,GAAG,UAAU,CAAC,QAAQ,CAAC;AACnC,gBAAA,QAAQ,EAAE,CAAC,EAAE,EAAE,UAAU,CAAC,QAAQ,CAAC;AACnC,gBAAA,cAAc,EAAE,IAAI,CAAC,WAAW,CAAC,KAAK,CAAC;AACnC,oBAAA,IAAI,EAAE,EAAE;AACR,oBAAA,KAAK,EAAE,EAAE;iBACZ,CAAC;gBACF,WAAW,EAAE,CAAC,CAAC,gBAAgB,CAAC,EAAE,UAAU,CAAC,QAAQ,CAAC;aACzD,CAAC;AACF,YAAA,eAAe,EAAE,IAAI,CAAC,WAAW,CAAC,KAAK,CAAC;AACpC,gBAAA,IAAI,EAAE,GAAG,UAAU,CAAC,QAAQ,CAAC;AAC7B,gBAAA,YAAY,EAAE,GAAG,UAAU,CAAC,QAAQ,CAAC;AACrC,gBAAA,SAAS,EAAE,GAAG,UAAU,CAAC,QAAQ,CAAC;AAClC,gBAAA,UAAU,EAAE,GAAG,UAAU,CAAC,QAAQ,CAAC;AACnC,gBAAA,MAAM,EAAE,CAAC,EAAE,EAAE,UAAU,CAAC,QAAQ,CAAC;gBACjC,cAAc,EAAE,CAAC,EAAE,CAAC;AACpB,gBAAA,MAAM,EAAE,GAAG,UAAU,CAAC,QAAQ,CAAC;AAC/B,gBAAA,YAAY,EAAE,GAAG,UAAU,CAAC,QAAQ,CAAC;aACxC,CAAC;AACL,SAAA,CAAC,CAAC;KACN;IAEK,wBAAwB,GAAA;;AAC1B,YAAA,IAAI,CAAC,OAAO,IAAc,MAAM,IAAI,CAAC,aAAa,CAAC,wBAAwB,CAAC,IAAI,CAAC,KAAK,EAAE,gBAAgB,CAAC,CAAA,CAAC;YAC1G,IAAI,CAAC,oBAAoB,EAAE,CAAC;SAC/B,CAAA,CAAA;AAAA,KAAA;IAED,oBAAoB,GAAA;QAChB,MAAM,aAAa,GAAG,KAAK,CAAC,IAAI,CAAC,IAAI,GAAG,CAAC,IAAI,CAAC,OAAO,CAAC,GAAG,CAAC,IAAI,IAAI,IAAI,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC;AAC/E,QAAA,IAAI,CAAC,UAAU,GAAG,aAAa,CAAC,GAAG,CAAC,KAAK,KAAK,EAAE,KAAK,EAAE,CAAC,CAAC,CAAC;KAC7D;AAEK,IAAA,gBAAgB,CAAC,UAAU,EAAA;;AAC7B,YAAA,IAAI,CAAC,2BAA2B,CAAC,GAAG,CAAC,cAAc,CAAC,CAAC,GAAG,CAAC,UAAU,CAAC,CAAC,KAAK,EAAE,CAAC;AAC7E,YAAA,IAAI,CAAC,WAAW,GAAG,EAAE,CAAC;YAEtB,IAAI,CAAC,QAAQ,GAAG,MAAM,IAAI,CAAC,iBAAiB,CAAC,UAAU,CAAC,CAAC;YACzD,IAAI,CAAC,gBAAgB,GAAG,IAAI,CAAC,QAAQ,CAAC,MAAM,CAAC;YAC7C,IAAI,CAAC,QAAQ,CAAC,OAAO,CAAC,MAAM,IAAI,IAAI,CAAC,WAAW,CAAC,IAAI,CAAC,MAAM,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC;YAErE,IAAI,IAAI,CAAC,MAAM,IAAI,UAAU,CAAC,MAAM,IAAI,IAAI,CAAC,2BAA2B,EAAE;AACtE,gBAAA,IAAI,CAAC,2BAA2B,CAAC,UAAU,CAAC;oBACxC,uBAAuB,EAAE,IAAI,CAAC,WAAW;AAC5C,iBAAA,CAAC,CAAC;AACN,aAAA;SACJ,CAAA,CAAA;AAAA,KAAA;AAEK,IAAA,iBAAiB,CAAC,IAAI,EAAA;;AACxB,YAAA,MAAM,gBAAgB,GAAG,IAAI,CAAC,OAAO,CAAC,MAAM,CAAC,MAAM,IAAI,MAAM,CAAC,IAAI,IAAI,IAAI,CAAC,CAAC;AAC5E,YAAA,OAAO,gBAAgB,CAAC;SAC3B,CAAA,CAAA;AAAA,KAAA;IAED,iBAAiB,GAAA;QACb,IAAI,CAAC,IAAI,CAAC,2BAA2B,CAAC,GAAG,CAAC,cAAc,CAAC,CAAC,GAAG,CAAC,UAAU,CAAC,CAAC,KAAK,CAAC,QAAQ,CAAC,CAAC,CAAC,CAAC,EAAE;AAC1F,YAAA,IAAI,CAAC,2BAA2B,CAAC,GAAG,CAAC,cAAc,CAAC,CAAC,GAAG,CAAC,UAAU,CAAC,CAAC,KAAK,CAAC,EAAE,CAAC,CAAC;YAC/E,OAAO;AACV,SAAA;QACD,IAAI,CAAC,2BAA2B,CAAC,GAAG,CAAC,cAAc,CAAC,CAAC,GAAG,CAAC,UAAU,CAAC,CAAC,QAAQ,CAAC,CAAC,CAAC,CAAC,EAAE,GAAG,IAAI,CAAC,WAAW,CAAC,CAAC,CAAC;KAC5G;IAED,cAAc,GAAA;AACV,QAAA,MAAM,QAAQ,GAAG,IAAI,CAAC,2BAA2B,CAAC,GAAG,CAAC,cAAc,CAAC,CAAC,GAAG,CAAC,UAAU,CAAC,CAAC,KAAK,CAAC;AAE5F,QAAA,IAAI,QAAQ,CAAC,QAAQ,CAAC,CAAC,CAAC,CAAC,EAAE;YACvB,QAAQ,CAAC,KAAK,EAAE,CAAC;AACjB,YAAA,IAAI,CAAC,2BAA2B,CAAC,GAAG,CAAC,cAAc,CAAC,CAAC,GAAG,CAAC,UAAU,CAAC,CAAC,UAAU,CAAC,QAAQ,CAAC,CAAC;AAC7F,SAAA;aAAM,IAAI,IAAI,CAAC,2BAA2B,CAAC,GAAG,CAAC,cAAc,CAAC,CAAC,GAAG,CAAC,UAAU,CAAC,CAAC,KAAK,CAAC,MAAM,IAAI,IAAI,CAAC,gBAAgB,EAAE;AACnH,YAAA,IAAI,CAAC,WAAW,CAAC,MAAM,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC;AAClC,YAAA,IAAI,CAAC,2BAA2B,CAAC,GAAG,CAAC,cAAc,CAAC,CAAC,GAAG,CAAC,UAAU,CAAC,CAAC,UAAU,CAAC,IAAI,CAAC,WAAW,CAAC,CAAC;AACrG,SAAA;AAAM,aAAA;AACH,YAAA,MAAM,gBAAgB,GAAG,QAAQ,CAAC,MAAM,CAAC,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC;AACvD,YAAA,IAAI,CAAC,2BAA2B,CAAC,GAAG,CAAC,cAAc,CAAC,CAAC,GAAG,CAAC,UAAU,CAAC,CAAC,UAAU,CAAC,gBAAgB,CAAC,CAAC;AACrG,SAAA;KACJ;IAED,yBAAyB,GAAA;AACrB,QAAA,IAAI,CAAC,2BAA2B,CAAC,GAAG,CAAC,iBAAiB,CAAC,CAAC,UAAU,CAAC,IAAI,CAAC,oBAAoB,CAAC,gBAAgB,CAAC,KAAK,CAAC,CAAA;KACvH;IAED,gBAAgB,GAAA;QACZ,IAAI,CAAC,yBAAyB,EAAE,CAAC;QAEjC,IAAI,QAAQ,GAAG,IAAI,CAAC,gBAAgB,CAAC,iBAAiB,CAAC,IAAI,CAAC,2BAA2B,CAAC,GAAG,CAAC,cAAc,CAAC,CAAC,GAAG,CAAC,UAAU,CAAC,CAAC,KAAK,CAAC,CAAC;AACnI,QAAA,IAAI,CAAC,2BAA2B,CAAC,GAAG,CAAC,cAAc,CAAC,CAAC,GAAG,CAAC,UAAU,CAAC,CAAC,UAAU,CAAC,QAAQ,CAAC,CAAC;QAE1F,IAAI,MAAM,GAAG,IAAI,CAAC,gBAAgB,CAAC,iBAAiB,CAAC,IAAI,CAAC,2BAA2B,CAAC,GAAG,CAAC,iBAAiB,CAAC,CAAC,GAAG,CAAC,QAAQ,CAAC,CAAC,KAAK,CAAC,CAAC;AAClI,QAAA,IAAI,CAAC,2BAA2B,CAAC,GAAG,CAAC,iBAAiB,CAAC,CAAC,GAAG,CAAC,QAAQ,CAAC,CAAC,UAAU,CAAC,MAAM,CAAC,CAAC;AAEzF,QAAA,IAAI,YAAY,GAAG,IAAI,CAAC,2BAA2B,CAAC,GAAG,CAAC,cAAc,CAAC,CAAC,GAAG,CAAC,aAAa,CAAC,CAAC,KAAK,CAAC;QACjG,IAAI,WAAW,GAAG,YAAY,CAAC,GAAG,CAAC,SAAS,KAAK;AAC7C,YAAA,IAAI,EAAE,SAAS;AACf,YAAA,KAAK,EAAE,KAAK;AACZ,YAAA,GAAG,EAAE,KAAK;AACb,SAAA,CAAC,CAAC,CAAC;AAEJ,QAAA,MAAM,cAAc,GAAG,IAAI,CAAC,2BAA2B,CAAC,GAAG,CAAC,cAAc,CAAC,CAAC,KAAK,CAAC;AAClF,QAAA,MAAM,iBAAiB,GAAG,IAAI,CAAC,2BAA2B,CAAC,GAAG,CAAC,iBAAiB,CAAC,CAAC,KAAK,CAAC;QACxF,MAAM,EAAE,WAAW,EAAA,GAAwC,cAAc,EAAjD,8BAA8B,GAAA,MAAA,CAAK,cAAc,EAAnE,CAAkD,aAAA,CAAA,CAAiB,CAAC;QAE1E,IAAI,CAAC,UAAU,GAAG;AACd,YAAA,YAAY,kCACL,8BAA8B,CAAA,EAAA,EACjC,MAAM,EAAE,WAAW,EACtB,CAAA;YACD,eAAe,EAAA,MAAA,CAAA,MAAA,CAAA,EAAA,EACR,iBAAiB,CACvB;SACJ,CAAC;KACL;IAED,oBAAoB,GAAA;QAChB,IAAI,CAAC,yBAAyB,EAAE,CAAC;AAEjC,QAAA,IAAI,IAAI,CAAC,oBAAoB,CAAC,gBAAgB,CAAC,OAAO,EAAE;AACpD,YAAA,IAAI,CAAC,oBAAoB,CAAC,gBAAgB,CAAC,gBAAgB,EAAE,CAAC;AACjE,SAAA;AAED,QAAA,IAAI,IAAI,CAAC,2BAA2B,CAAC,OAAO,EAAE;YAC1C,OAAO,CAAC,GAAG,CAAC,eAAe,EAAE,IAAI,CAAC,2BAA2B,CAAC,KAAK,CAAC,CAAC;AACrE,YAAA,IAAI,CAAC,aAAa,CAAC,SAAS,CAAC,WAAW,CAAC,kBAAkB,EAAE,WAAW,CAAC,oBAAoB,EAAE,WAAW,CAAC,KAAK,CAAC,CAAC;YAClH,OAAO;AACV,SAAA;AAAM,aAAA;YACH,IAAI,CAAC,gBAAgB,EAAE,CAAC;AAExB,YAAA,IAAI,IAAI,CAAC,MAAM,IAAI,UAAU,CAAC,MAAM,EAAE;gBAClC,IAAI,CAAC,oBAAoB,EAAE,CAAC;AAC/B,aAAA;AAAM,iBAAA,IAAI,IAAI,CAAC,MAAM,IAAI,UAAU,CAAC,MAAM,EAAE;gBACzC,IAAI,CAAC,oBAAoB,EAAE,CAAC;AAC/B,aAAA;AACJ,SAAA;KACJ;IAED,oBAAoB,GAAA;AAChB,QAAA,IAAI,CAAC,wBAAwB,CAAC,oBAAoB,CAAC,IAAI,CAAC,KAAK,EAAE,IAAI,CAAC,UAAU,CAAC,CAAC,SAAS,CAAC,CAAC,GAAc,KAAI;YAEzG,IAAI,CAAC,MAAM,CAAC,QAAQ,CAAC,CAAC,CAAA,oBAAA,CAAsB,CAAC,CAAC,CAAC;SAElD,EAAE,KAAK,IAAG;AACP,YAAA,OAAO,CAAC,GAAG,CAAC,iCAAiC,EAAE,KAAK,CAAC,CAAC;AAC1D,SAAC,CAAC,CAAC;KACN;AAEK,IAAA,qBAAqB,CAAC,gBAAgB,EAAA;;AACxC,YAAA,IAAI,CAAC,eAAe,IAAoB,MAAM,IAAI,CAAC,qBAAqB,CAAC,qBAAqB,CAAC,IAAI,CAAC,KAAK,EAAE,gBAAgB,CAAC,CAAA,CAAC;AAE7H,YAAA,IAAI,CAAC,mBAAmB,CAAC,IAAI,CAAC,eAAe,CAAC,CAAC;SAClD,CAAA,CAAA;AAAA,KAAA;AAEK,IAAA,mBAAmB,CAAC,eAAgC,EAAA;;AACtD,YAAA,MAAM,IAAI,CAAC,wBAAwB,EAAE,CAAC;AACtC,YAAA,MAAM,IAAI,CAAC,gBAAgB,CAAC,IAAI,CAAC,eAAe,CAAC,YAAY,CAAC,UAAU,CAAC,CAAC;AAE1E,YAAA,IAAI,CAAC,2BAA2B,CAAC,UAAU,CAAC;gBACxC,YAAY,EAAE,eAAe,CAAC,YAAY;gBAC1C,eAAe,EAAE,eAAe,CAAC,eAAe;AACnD,aAAA,CAAC,CAAC;YAEH,IAAI,CAAC,oBAAoB,CAAC,gBAAgB,CAAC,UAAU,CAAC,eAAe,CAAC,eAAe,CAAC,CAAC;YAEvF,IAAI,CAAC,aAAa,GAAG;AACjB,gBAAA,uBAAuB,EAAE,IAAI,CAAC,2BAA2B,CAAC,KAAK;AAC/D,gBAAA,eAAe,EAAE,IAAI,CAAC,oBAAoB,CAAC,gBAAgB,CAAC,KAAK;aACpE,CAAC;YAEF,IAAI,CAAC,iBAAiB,EAAE,CAAC;SAC5B,CAAA,CAAA;AAAA,KAAA;IAED,iBAAiB,GAAA;QACb,IAAI,CAAC,oBAAoB,CAAC,gBAAgB,CAAC,YAAY,CAAC,SAAS,CAAC,MAAK;YACnE,IAAI,CAAC,aAAa,EAAE,CAAC;AACzB,SAAC,CAAC,CAAC;QAEH,IAAI,CAAC,2BAA2B,CAAC,YAAY,CAAC,SAAS,CAAC,MAAK;YACzD,IAAI,CAAC,aAAa,EAAE,CAAC;AACzB,SAAC,CAAC,CAAC;KACN;IAED,aAAa,GAAA;AACT,QAAA,MAAM,aAAa,GAAG;AAClB,YAAA,uBAAuB,EAAE,IAAI,CAAC,2BAA2B,CAAC,KAAK;AAC/D,YAAA,eAAe,EAAE,IAAI,CAAC,oBAAoB,CAAC,gBAAgB,CAAC,KAAK;SACpE,CAAC;QACF,IAAI,CAAC,OAAO,GAAG,OAAO,CAAC,IAAI,CAAC,aAAa,EAAE,aAAa,CAAC,CAAC;KAC7D;IAED,oBAAoB,GAAA;QAChB,IAAI,CAAC,wBAAwB,CAAC,oBAAoB,CAAC,IAAI,CAAC,KAAK,EAAE,IAAI,CAAC,gBAAgB,EAAE,IAAI,CAAC,UAAU,CAAC,CAAC,SAAS,CAAC,CAAC,GAAc,KAAI;AAEhI,YAAA,IAAI,CAAC,gBAAgB,CAAC,IAAI,EAAE,CAAC;SAEhC,EAAE,KAAK,IAAG;AACP,YAAA,OAAO,CAAC,GAAG,CAAC,iCAAiC,EAAE,KAAK,CAAC,CAAC;AAC1D,SAAC,CAAC,CAAA;KACL;;gIA/QQ,kCAAkC,EAAA,IAAA,EAAA,CAAA,EAAA,KAAA,EAAA5B,IAAA,CAAA,cAAA,EAAA,EAAA,EAAA,KAAA,EAAAA,IAAA,CAAA,MAAA,EAAA,EAAA,EAAA,KAAA,EAAAC,IAAA,CAAA,WAAA,EAAA,EAAA,EAAA,KAAA,EAAAmG,wBAAA,EAAA,EAAA,EAAA,KAAA,EAAA3D,aAAA,EAAA,EAAA,EAAA,KAAA,EAAA6D,qBAAA,EAAA,EAAA,EAAA,KAAA,EAAArF,IAAA,CAAA,cAAA,EAAA,EAAA,EAAA,KAAA,EAAAT,EAAA,CAAA,gBAAA,EAAA,EAAA,EAAA,KAAA,EAAAC,IAAA,CAAA,aAAA,EAAA,CAAA,EAAA,MAAA,EAAA,EAAA,CAAA,eAAA,CAAA,SAAA,EAAA,CAAA,CAAA;AAAlC,kCAAA,CAAA,IAAA,GAAA,EAAA,CAAA,oBAAA,CAAA,EAAA,UAAA,EAAA,QAAA,EAAA,OAAA,EAAA,SAAA,EAAA,IAAA,EAAA,kCAAkC,qLC9B/C,22LAkGM,EAAA,MAAA,EAAA,CAAA,2CAAA,CAAA,EAAA,UAAA,EAAA,CAAA,EAAA,IAAA,EAAA,EAAA,CAAA,OAAA,EAAA,QAAA,EAAA,UAAA,EAAA,QAAA,EAAA,CAAA,SAAA,CAAA,EAAA,EAAA,EAAA,IAAA,EAAAE,IAAA,CAAA,YAAA,EAAA,QAAA,EAAA,gBAAA,EAAA,MAAA,EAAA,CAAA,OAAA,EAAA,YAAA,EAAA,YAAA,EAAA,oBAAA,EAAA,WAAA,CAAA,EAAA,QAAA,EAAA,CAAA,cAAA,CAAA,EAAA,EAAA,EAAA,IAAA,EAAAC,EAAA,CAAA,SAAA,EAAA,QAAA,EAAA,YAAA,EAAA,MAAA,EAAA,CAAA,UAAA,EAAA,eAAA,EAAA,UAAA,CAAA,EAAA,QAAA,EAAA,CAAA,WAAA,CAAA,EAAA,EAAA,EAAA,IAAA,EAAAC,GAAA,CAAA,SAAA,EAAA,QAAA,EAAA,YAAA,EAAA,QAAA,EAAA,CAAA,WAAA,CAAA,EAAA,EAAA,EAAA,IAAA,EAAA+F,oCAAA,EAAA,QAAA,EAAA,mBAAA,EAAA,CAAA,EAAA,UAAA,EAAA,CAAA,EAAA,IAAA,EAAA3G,IAAA,CAAA,aAAA,EAAA,QAAA,EAAA,8CAAA,EAAA,EAAA,EAAA,IAAA,EAAAA,IAAA,CAAA,oBAAA,EAAA,QAAA,EAAA,0FAAA,EAAA,EAAA,EAAA,IAAA,EAAAA,IAAA,CAAA,kBAAA,EAAA,QAAA,EAAA,aAAA,EAAA,MAAA,EAAA,CAAA,WAAA,CAAA,EAAA,OAAA,EAAA,CAAA,UAAA,CAAA,EAAA,QAAA,EAAA,CAAA,QAAA,CAAA,EAAA,EAAA,EAAA,IAAA,EAAAA,IAAA,CAAA,aAAA,EAAA,QAAA,EAAA,iBAAA,EAAA,MAAA,EAAA,CAAA,eAAA,CAAA,EAAA,EAAA,EAAA,IAAA,EAAAU,IAAA,CAAA,QAAA,EAAA,QAAA,EAAA,WAAA,EAAA,EAAA,EAAA,IAAA,EAAAV,IAAA,CAAA,eAAA,EAAA,QAAA,EAAA,2CAAA,EAAA,EAAA,EAAA,IAAA,EAAAA,IAAA,CAAA,eAAA,EAAA,QAAA,EAAA,mBAAA,EAAA,MAAA,EAAA,CAAA,UAAA,EAAA,iBAAA,EAAA,SAAA,CAAA,EAAA,OAAA,EAAA,CAAA,eAAA,CAAA,EAAA,EAAA,EAAA,IAAA,EAAAA,IAAA,CAAA,iBAAA,EAAA,QAAA,EAAA,wIAAA,EAAA,MAAA,EAAA,CAAA,UAAA,CAAA,EAAA,EAAA,EAAA,IAAA,EAAA,GAAA,CAAA,IAAA,EAAA,QAAA,EAAA,QAAA,EAAA,MAAA,EAAA,CAAA,MAAA,EAAA,UAAA,EAAA,UAAA,CAAA,EAAA,EAAA,EAAA,IAAA,EAAA,GAAA,CAAA,OAAA,EAAA,QAAA,EAAA,kBAAA,EAAA,MAAA,EAAA,CAAA,SAAA,EAAA,cAAA,EAAA,eAAA,CAAA,EAAA,EAAA,EAAA,IAAA,EAAAU,IAAA,CAAA,QAAA,EAAA,QAAA,EAAA,WAAA,EAAA,MAAA,EAAA,CAAA,IAAA,CAAA,EAAA,EAAA,EAAA,IAAA,EAAA,GAAA,CAAA,OAAA,EAAA,QAAA,EAAA,WAAA,EAAA,MAAA,EAAA,CAAA,OAAA,EAAA,SAAA,CAAA,EAAA,CAAA,EAAA,CAAA,CAAA;4FDpEO,kCAAkC,EAAA,UAAA,EAAA,CAAA;kBAL9C,SAAS;AAAC,YAAA,IAAA,EAAA,CAAA;AACP,oBAAA,QAAQ,EAAE,iBAAiB;AAC3B,oBAAA,WAAW,EAAE,8BAA8B;oBAC3C,SAAS,EAAE,CAAC,8BAA8B,CAAC;AAC9C,iBAAA,CAAA;oVA+BsC,oBAAoB,EAAA,CAAA;sBAAtD,SAAS;uBAAC,sBAAsB,CAAA;;;AEvDrC,MAAMiB,QAAM,GAAW;AACnB,IAAA;AACI,QAAA,IAAI,EAAE,EAAE;AACR,QAAA,SAAS,EAAE,kCAAkC;AAChD,KAAA;CACJ,CAAC;MAMW,sCAAsC,CAAA;;oIAAtC,sCAAsC,EAAA,IAAA,EAAA,EAAA,EAAA,MAAA,EAAA,EAAA,CAAA,eAAA,CAAA,QAAA,EAAA,CAAA,CAAA;AAAtC,sCAAA,CAAA,IAAA,GAAA,EAAA,CAAA,mBAAA,CAAA,EAAA,UAAA,EAAA,QAAA,EAAA,OAAA,EAAA,SAAA,EAAA,QAAA,EAAA,EAAA,EAAA,IAAA,EAAA,sCAAsC,0CAFrC,YAAY,CAAA,EAAA,CAAA,CAAA;qIAEb,sCAAsC,EAAA,OAAA,EAAA,CAHtC,CAAC,YAAY,CAAC,QAAQ,CAACA,QAAM,CAAC,CAAC,EAC9B,YAAY,CAAA,EAAA,CAAA,CAAA;4FAEb,sCAAsC,EAAA,UAAA,EAAA,CAAA;kBAJlD,QAAQ;AAAC,YAAA,IAAA,EAAA,CAAA;oBACN,OAAO,EAAE,CAAC,YAAY,CAAC,QAAQ,CAACA,QAAM,CAAC,CAAC;oBACxC,OAAO,EAAE,CAAC,YAAY,CAAC;AAC1B,iBAAA,CAAA;;;MCuBY,+BAA+B,CAAA;;6HAA/B,+BAA+B,EAAA,IAAA,EAAA,EAAA,EAAA,MAAA,EAAA,EAAA,CAAA,eAAA,CAAA,QAAA,EAAA,CAAA,CAAA;8HAA/B,+BAA+B,EAAA,YAAA,EAAA,CAjBpC,kCAAkC,CAAA,EAAA,OAAA,EAAA,CAGlC,YAAY;QACZ,sCAAsC;QAEtC,iCAAiC;QAEjC,WAAW;QACX,mBAAmB;QAEnB,aAAa;QACb,kBAAkB;QAClB,eAAe;QACf,qBAAqB,CAAA,EAAA,CAAA,CAAA;AAGhB,+BAAA,CAAA,IAAA,GAAA,EAAA,CAAA,mBAAA,CAAA,EAAA,UAAA,EAAA,QAAA,EAAA,OAAA,EAAA,SAAA,EAAA,QAAA,EAAA,EAAA,EAAA,IAAA,EAAA,+BAA+B,EAf/B,OAAA,EAAA,CAAA;YACL,YAAY;YACZ,sCAAsC;YAEtC,iCAAiC;YAEjC,WAAW;YACX,mBAAmB;YAEnB,aAAa;YACb,kBAAkB;YAClB,eAAe;YACf,qBAAqB;AACxB,SAAA,CAAA,EAAA,CAAA,CAAA;4FAEQ,+BAA+B,EAAA,UAAA,EAAA,CAAA;kBAnB3C,QAAQ;AAAC,YAAA,IAAA,EAAA,CAAA;AACN,oBAAA,YAAY,EAAE;wBACV,kCAAkC;AACrC,qBAAA;AACD,oBAAA,OAAO,EAAE;wBACL,YAAY;wBACZ,sCAAsC;wBAEtC,iCAAiC;wBAEjC,WAAW;wBACX,mBAAmB;wBAEnB,aAAa;wBACb,kBAAkB;wBAClB,eAAe;wBACf,qBAAqB;AACxB,qBAAA;AACJ,iBAAA,CAAA;;;ACpBD;MAOa,2BAA2B,CAAA;AAuBpC,IAAA,WAAA,CACY,cAA8B,EAC9B,YAA2B,EAC3B,aAA4B,EAC5B,gBAAkC,EAClC,QAAqB,EACtB,SAAoD,EAC3B,IAAI,EAAA;QAN5B,IAAc,CAAA,cAAA,GAAd,cAAc,CAAgB;QAC9B,IAAY,CAAA,YAAA,GAAZ,YAAY,CAAe;QAC3B,IAAa,CAAA,aAAA,GAAb,aAAa,CAAe;QAC5B,IAAgB,CAAA,gBAAA,GAAhB,gBAAgB,CAAkB;QAClC,IAAQ,CAAA,QAAA,GAAR,QAAQ,CAAa;QACtB,IAAS,CAAA,SAAA,GAAT,SAAS,CAA2C;QAC3B,IAAI,CAAA,IAAA,GAAJ,IAAI,CAAA;QA5BxC,IAA2B,CAAA,2BAAA,GAAG,2BAA2B,CAAC;QAC1D,IAAe,CAAA,eAAA,GAAG,eAAe,CAAC;QAClC,IAAU,CAAA,UAAA,GAAG,UAAU,CAAC;QACxB,IAAa,CAAA,aAAA,GAAG,aAAa,CAAC;QAE9B,IAAK,CAAA,KAAA,GAAW,QAAQ,CAAC;QACzB,IAAM,CAAA,MAAA,GAAW,QAAQ,CAAC;QAK1B,IAAuB,CAAA,uBAAA,GAAY,KAAK,CAAC;QACzC,IAAO,CAAA,OAAA,GAAY,KAAK,CAAC;AAIzB,QAAA,IAAA,CAAA,WAAW,GAAG,CAAC,IAAI,UAAU,EAAE,CAAC,CAAC;QAGjC,IAAoB,CAAA,oBAAA,GAA2B,IAAI,sBAAsB,CAAC,CAAC,MAAM,CAAC,CAAC,CAAC;AA+F7E,QAAA,IAAA,CAAA,aAAa,GAAG,CAAC,OAAe,EAAE,KAAa,KAAI;AACtD,YAAA,OAAO,IAAI,CAAC,QAAQ,CAAC,QAAQ,CAAC,OAAO,CAAC,CAAC,QAAQ,CAAC,KAAK,CAAC,CAAC;AAC3D,SAAC,CAAA;AAtFG,QAAA,IAAI,CAAC,MAAM,GAAG,IAAI,CAAC,QAAQ,CAAC,CAAC;AAC7B,QAAA,IAAI,CAAC,QAAQ,GAAG,IAAI,CAAC,UAAU,CAAC,CAAC;AACjC,QAAA,IAAI,CAAC,QAAQ,GAAG,IAAI,CAAC,UAAU,CAAC,CAAA;AAChC,QAAA,IAAI,CAAC,SAAS,CAAC,YAAY,GAAG,IAAI,CAAC;KACtC;IAED,QAAQ,GAAA;QACJ,IAAI,CAAC,KAAK,GAAG,IAAI,CAAC,cAAc,CAAC,UAAU,CAAC,cAAc,CAAC,CAAC;QAE5D,IAAI,CAAC,aAAa,EAAE,CAAC;QACrB,IAAI,CAAC,YAAY,EAAE,CAAC;AAEpB,QAAA,IAAI,IAAI,CAAC,MAAM,IAAI,QAAQ,EAAE;AACzB,YAAA,IAAI,CAAC,KAAK,GAAG,QAAQ,CAAC;YACtB,IAAI,CAAC,aAAa,EAAE,CAAC;AACxB,SAAA;AACD,QAAA,IAAI,CAAC,QAAQ,CAAC,YAAY,CAAC,SAAS,CAAC,MAAK,EAAG,IAAI,CAAC,OAAO,GAAG,OAAO,CAAC,IAAI,CAAC,aAAa,EAAE,IAAI,CAAC,QAAQ,CAAC,WAAW,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC;KAC5H;IAEK,aAAa,GAAA;;AACf,YAAA,IAAI,CAAC,WAAW,IAAkB,MAAM,IAAI,CAAC,aAAa,CAAC,uBAAuB,CAAC,IAAI,CAAC,KAAK,EAAE,IAAI,CAAC,CAAA,CAAC;YAErG,IAAI,CAAC,oBAAoB,CAAC,SAAS,GAAG,IAAI,CAAC,WAAW,CAAC;AACvD,YAAA,IAAI,CAAC,oBAAoB,CAAC,kBAAkB,EAAE,CAAC;SAClD,CAAA,CAAA;AAAA,KAAA;IAED,YAAY,GAAA;QACR,IAAI,CAAC,QAAQ,GAAG,IAAI,CAAC,QAAQ,CAAC,KAAK,CAAC;AAChC,YAAA,IAAI,EAAE,CAAC,EAAE,EAAE,UAAU,CAAC,QAAQ,CAAC;AAC/B,YAAA,IAAI,EAAE,CAAC,EAAE,EAAE,UAAU,CAAC,QAAQ,CAAC;AAClC,SAAA,CAAC,CAAC;KACN;IAED,aAAa,GAAA;AACT,QAAA,IAAI,CAAC,uBAAuB,GAAG,IAAI,CAAC;QACpC,IAAI,CAAC,QAAQ,CAAC,GAAG,CAAC,MAAM,CAAC,CAAC,KAAK,EAAE,CAAC;KACrC;IAED,aAAa,GAAA;QACT,IAAI,CAAC,gBAAgB,CAAC,aAAa,CAAC,IAAI,CAAC,KAAK,EAAE,IAAI,CAAC,QAAQ,EAAE,IAAI,CAAC,QAAQ,CAAC,CAAC,SAAS,CAAC,CAAC,SAAS,KAAI;AAClG,YAAA,IAAI,CAAC,OAAO,GAAG,SAAS,CAAC;AACzB,YAAA,IAAI,CAAC,WAAW,CAAC,IAAI,CAAC,OAAO,CAAC,CAAC;AACnC,SAAC,CAAC,CAAA;KACL;AAED,IAAA,WAAW,CAAC,MAAM,EAAA;AACd,QAAA,IAAI,CAAC,QAAQ,CAAC,UAAU,CAAC;AACrB,YAAA,IAAI,EAAE,MAAM,CAAC,MAAM,CAAC;AACpB,YAAA,IAAI,EAAE,MAAM,CAAC,MAAM,CAAC;AACvB,SAAA,CAAC,CAAC;AACH,QAAA,IAAI,CAAC,OAAO,GAAG,IAAI,CAAC;KACvB;IAED,SAAS,GAAA;AACL,QAAA,IAAI,IAAI,CAAC,QAAQ,CAAC,OAAO,EAAE;AACvB,YAAA,IAAI,CAAC,QAAQ,CAAC,gBAAgB,EAAE,CAAC;AACjC,YAAA,IAAI,CAAC,YAAY,CAAC,SAAS,CAAC,WAAW,CAAC,kBAAkB,EAAE,WAAW,CAAC,oBAAoB,EAAE,WAAW,CAAC,KAAK,CAAC,CAAC;YACjH,OAAO;AACV,SAAA;QAED,IAAI,CAAC,gBAAgB,CAAC,YAAY,CAAC,IAAI,CAAC,KAAK,EAAE,IAAI,CAAC,QAAQ,EAAE,IAAI,CAAC,QAAQ,EAAE,IAAI,CAAC,QAAQ,CAAC,KAAK,CAAC;AAC5F,aAAA,SAAS,CAAC,CAAC,YAAuB,KAAI;YACnC,IAAI,CAAC,SAAS,CAAC,KAAK,CAAC,UAAU,CAAC,UAAU,CAAC,CAAC;SAC/C,EACG,KAAK,IAAG;AACJ,YAAA,OAAO,CAAC,GAAG,CAAC,uBAAuB,EAAE,KAAK,CAAC,CAAC;AAChD,SAAC,CAAC,CAAC;KACd;IAED,YAAY,GAAA;AACR,QAAA,IAAI,IAAI,CAAC,QAAQ,CAAC,OAAO,EAAE;AACvB,YAAA,IAAI,CAAC,QAAQ,CAAC,gBAAgB,EAAE,CAAC;AACjC,YAAA,IAAI,CAAC,YAAY,CAAC,SAAS,CAAC,WAAW,CAAC,kBAAkB,EAAE,WAAW,CAAC,oBAAoB,EAAE,WAAW,CAAC,KAAK,CAAC,CAAC;YACjH,OAAO;AACV,SAAA;QACD,IAAI,CAAC,gBAAgB,CAAC,YAAY,CAAC,IAAI,CAAC,KAAK,EAAE,IAAI,CAAC,QAAQ,EAAE,IAAI,CAAC,QAAQ,EAAE,IAAI,CAAC,QAAQ,CAAC,KAAK,CAAC;AAC5F,aAAA,SAAS,CAAC,CAAC,YAAuB,KAAI;YACnC,IAAI,CAAC,SAAS,CAAC,KAAK,CAAC,UAAU,CAAC,UAAU,CAAC,CAAC;SAC/C,EACG,KAAK,IAAG;AACJ,YAAA,OAAO,CAAC,GAAG,CAAC,0BAA0B,EAAE,KAAK,CAAC,CAAC;AACnD,SAAC,CAAC,CAAC;KACd;;AAlHQ,2BAAA,CAAA,IAAA,GAAA,EAAA,CAAA,kBAAA,CAAA,EAAA,UAAA,EAAA,QAAA,EAAA,OAAA,EAAA,SAAA,EAAA,QAAA,EAAA,EAAA,EAAA,IAAA,EAAA,2BAA2B,mMA8BxB,eAAe,EAAA,CAAA,EAAA,MAAA,EAAA,EAAA,CAAA,eAAA,CAAA,SAAA,EAAA,CAAA,CAAA;AA9BlB,2BAAA,CAAA,IAAA,GAAA,EAAA,CAAA,oBAAA,CAAA,EAAA,UAAA,EAAA,QAAA,EAAA,OAAA,EAAA,SAAA,EAAA,IAAA,EAAA,2BAA2B,kDCxBxC,24HA8EM,EAAA,UAAA,EAAA,CAAA,EAAA,IAAA,EAAApB,EAAA,CAAA,SAAA,EAAA,QAAA,EAAA,4LAAA,EAAA,MAAA,EAAA,CAAA,UAAA,EAAA,eAAA,EAAA,OAAA,CAAA,EAAA,QAAA,EAAA,CAAA,WAAA,CAAA,EAAA,EAAA,EAAA,IAAA,EAAAC,IAAA,CAAA,YAAA,EAAA,QAAA,EAAA,gBAAA,EAAA,MAAA,EAAA,CAAA,OAAA,EAAA,YAAA,EAAA,YAAA,EAAA,oBAAA,EAAA,WAAA,CAAA,EAAA,QAAA,EAAA,CAAA,cAAA,CAAA,EAAA,EAAA,EAAA,IAAA,EAAAC,EAAA,CAAA,SAAA,EAAA,QAAA,EAAA,YAAA,EAAA,MAAA,EAAA,CAAA,UAAA,EAAA,eAAA,EAAA,UAAA,CAAA,EAAA,QAAA,EAAA,CAAA,WAAA,CAAA,EAAA,EAAA,EAAA,IAAA,EAAA,GAAA,CAAA,SAAA,EAAA,QAAA,EAAA,YAAA,EAAA,QAAA,EAAA,CAAA,WAAA,CAAA,EAAA,EAAA,EAAA,IAAA,EAAAE,IAAA,CAAA,wBAAA,EAAA,QAAA,EAAA,uBAAA,EAAA,MAAA,EAAA,CAAA,kBAAA,EAAA,MAAA,EAAA,WAAA,EAAA,cAAA,EAAA,qBAAA,EAAA,gCAAA,EAAA,kBAAA,EAAA,WAAA,EAAA,qBAAA,EAAA,4BAAA,EAAA,8BAAA,EAAA,uCAAA,EAAA,WAAA,EAAA,uBAAA,EAAA,0BAAA,EAAA,gCAAA,EAAA,iCAAA,EAAA,kCAAA,EAAA,uBAAA,EAAA,mCAAA,CAAA,EAAA,OAAA,EAAA,CAAA,WAAA,CAAA,EAAA,CAAA,EAAA,UAAA,EAAA,CAAA,EAAA,IAAA,EAAAK,IAAA,CAAA,cAAA,EAAA,QAAA,EAAA,sCAAA,EAAA,MAAA,EAAA,CAAA,IAAA,CAAA,EAAA,QAAA,EAAA,CAAA,gBAAA,CAAA,EAAA,EAAA,EAAA,IAAA,EAAAA,IAAA,CAAA,cAAA,EAAA,QAAA,EAAA,sCAAA,EAAA,MAAA,EAAA,CAAA,MAAA,EAAA,kBAAA,EAAA,YAAA,EAAA,gBAAA,CAAA,EAAA,QAAA,EAAA,CAAA,gBAAA,CAAA,EAAA,EAAA,EAAA,IAAA,EAAAJ,GAAA,CAAA,UAAA,EAAA,QAAA,EAAA,cAAA,EAAA,QAAA,EAAA,CAAA,YAAA,CAAA,EAAA,EAAA,EAAA,IAAA,EAAAI,IAAA,CAAA,gBAAA,EAAA,QAAA,EAAA,8DAAA,EAAA,EAAA,EAAA,IAAA,EAAAV,IAAA,CAAA,aAAA,EAAA,QAAA,EAAA,8CAAA,EAAA,EAAA,EAAA,IAAA,EAAAA,IAAA,CAAA,oBAAA,EAAA,QAAA,EAAA,0FAAA,EAAA,EAAA,EAAA,IAAA,EAAAA,IAAA,CAAA,kBAAA,EAAA,QAAA,EAAA,aAAA,EAAA,MAAA,EAAA,CAAA,WAAA,CAAA,EAAA,OAAA,EAAA,CAAA,UAAA,CAAA,EAAA,QAAA,EAAA,CAAA,QAAA,CAAA,EAAA,EAAA,EAAA,IAAA,EAAAE,IAAA,CAAA,QAAA,EAAA,QAAA,EAAA,WAAA,EAAA,EAAA,EAAA,IAAA,EAAAK,KAAA,CAAA,QAAA,EAAA,QAAA,EAAA,yHAAA,EAAA,MAAA,EAAA,CAAA,IAAA,EAAA,UAAA,EAAA,UAAA,EAAA,MAAA,EAAA,OAAA,EAAA,UAAA,EAAA,aAAA,EAAA,mBAAA,EAAA,kBAAA,CAAA,EAAA,QAAA,EAAA,CAAA,UAAA,CAAA,EAAA,EAAA,EAAA,IAAA,EAAAP,IAAA,CAAA,oBAAA,EAAA,QAAA,EAAA,8MAAA,EAAA,EAAA,EAAA,IAAA,EAAAA,IAAA,CAAA,eAAA,EAAA,QAAA,EAAA,2CAAA,EAAA,EAAA,EAAA,IAAA,EAAAA,IAAA,CAAA,eAAA,EAAA,QAAA,EAAA,mBAAA,EAAA,MAAA,EAAA,CAAA,UAAA,EAAA,iBAAA,EAAA,SAAA,CAAA,EAAA,OAAA,EAAA,CAAA,eAAA,CAAA,EAAA,EAAA,EAAA,IAAA,EAAAA,IAAA,CAAA,iBAAA,EAAA,QAAA,EAAA,wIAAA,EAAA,MAAA,EAAA,CAAA,UAAA,CAAA,EAAA,EAAA,EAAA,IAAA,EAAA,GAAA,CAAA,IAAA,EAAA,QAAA,EAAA,QAAA,EAAA,MAAA,EAAA,CAAA,MAAA,EAAA,UAAA,EAAA,UAAA,CAAA,EAAA,EAAA,EAAA,IAAA,EAAAE,IAAA,CAAA,QAAA,EAAA,QAAA,EAAA,WAAA,EAAA,MAAA,EAAA,CAAA,IAAA,CAAA,EAAA,EAAA,EAAA,IAAA,EAAAF,IAAA,CAAA,oBAAA,EAAA,QAAA,EAAA,eAAA,EAAA,MAAA,EAAA,CAAA,UAAA,EAAA,aAAA,EAAA,SAAA,CAAA,EAAA,OAAA,EAAA,CAAA,eAAA,CAAA,EAAA,QAAA,EAAA,CAAA,QAAA,CAAA,EAAA,EAAA,EAAA,IAAA,EAAA,GAAA,CAAA,OAAA,EAAA,QAAA,EAAA,kBAAA,EAAA,MAAA,EAAA,CAAA,SAAA,EAAA,cAAA,EAAA,eAAA,CAAA,EAAA,EAAA,EAAA,IAAA,EAAA,GAAA,CAAA,QAAA,EAAA,QAAA,EAAA,YAAA,EAAA,MAAA,EAAA,CAAA,UAAA,CAAA,EAAA,EAAA,EAAA,IAAA,EAAA,GAAA,CAAA,YAAA,EAAA,QAAA,EAAA,gBAAA,EAAA,MAAA,EAAA,CAAA,cAAA,CAAA,EAAA,EAAA,EAAA,IAAA,EAAA,GAAA,CAAA,OAAA,EAAA,QAAA,EAAA,WAAA,EAAA,MAAA,EAAA,CAAA,OAAA,EAAA,SAAA,CAAA,EAAA,EAAA,EAAA,IAAA,EAAA,GAAA,CAAA,eAAA,EAAA,QAAA,EAAA,mBAAA,EAAA,CAAA,EAAA,KAAA,EAAA,EAAA,OAAA,EAAA,GAAA,CAAA,SAAA,EAAA,EAAA,CAAA,CAAA;4FDtDO,2BAA2B,EAAA,UAAA,EAAA,CAAA;kBALvC,SAAS;AAAC,YAAA,IAAA,EAAA,CAAA;AACP,oBAAA,QAAQ,EAAE,YAAY;AACtB,oBAAA,WAAW,EAAE,yBAAyB;AACtC,oBAAA,SAAS,EAAE,EAAE;AAChB,iBAAA,CAAA;;0BA+BQ,MAAM;2BAAC,eAAe,CAAA;;;MEpBlB,wBAAwB,CAAA;;sHAAxB,wBAAwB,EAAA,IAAA,EAAA,EAAA,EAAA,MAAA,EAAA,EAAA,CAAA,eAAA,CAAA,QAAA,EAAA,CAAA,CAAA;uHAAxB,wBAAwB,EAAA,YAAA,EAAA,CAhB7B,2BAA2B,CAAA,EAAA,OAAA,EAAA,CAG3B,YAAY;QACZ,WAAW;QACX,mBAAmB;QACnB,aAAa;QACb,kBAAkB;QAClB,eAAe;QACf,cAAc;QACd,gBAAgB;QAChB,eAAe;QACf,eAAe;QACf,wBAAwB,CAAA,EAAA,CAAA,CAAA;AAGnB,wBAAA,CAAA,IAAA,GAAA,EAAA,CAAA,mBAAA,CAAA,EAAA,UAAA,EAAA,QAAA,EAAA,OAAA,EAAA,SAAA,EAAA,QAAA,EAAA,EAAA,EAAA,IAAA,EAAA,wBAAwB,EAdxB,OAAA,EAAA,CAAA;YACL,YAAY;YACZ,WAAW;YACX,mBAAmB;YACnB,aAAa;YACb,kBAAkB;YAClB,eAAe;YACf,cAAc;YACd,gBAAgB;YAChB,eAAe;YACf,eAAe;YACf,wBAAwB;AAC3B,SAAA,CAAA,EAAA,CAAA,CAAA;4FAEQ,wBAAwB,EAAA,UAAA,EAAA,CAAA;kBAlBpC,QAAQ;AAAC,YAAA,IAAA,EAAA,CAAA;AACN,oBAAA,YAAY,EAAE;wBACV,2BAA2B;AAC9B,qBAAA;AACD,oBAAA,OAAO,EAAE;wBACL,YAAY;wBACZ,WAAW;wBACX,mBAAmB;wBACnB,aAAa;wBACb,kBAAkB;wBAClB,eAAe;wBACf,cAAc;wBACd,gBAAgB;wBAChB,eAAe;wBACf,eAAe;wBACf,wBAAwB;AAC3B,qBAAA;AACJ,iBAAA,CAAA;;;ACtBD;MAQa,2BAA2B,CAAA;AAqBpC,IAAA,WAAA,CACW,SAAoD,EAC3B,IAAI,EAC5B,cAA8B,EAC9B,QAAqB,EACrB,YAA2B,EAC3B,gBAAkC,EAClC,aAA4B,EAAA;QAN7B,IAAS,CAAA,SAAA,GAAT,SAAS,CAA2C;QAC3B,IAAI,CAAA,IAAA,GAAJ,IAAI,CAAA;QAC5B,IAAc,CAAA,cAAA,GAAd,cAAc,CAAgB;QAC9B,IAAQ,CAAA,QAAA,GAAR,QAAQ,CAAa;QACrB,IAAY,CAAA,YAAA,GAAZ,YAAY,CAAe;QAC3B,IAAgB,CAAA,gBAAA,GAAhB,gBAAgB,CAAkB;QAClC,IAAa,CAAA,aAAA,GAAb,aAAa,CAAe;QA1BxC,IAA2B,CAAA,2BAAA,GAAG,2BAA2B,CAAC;QAC1D,IAAe,CAAA,eAAA,GAAG,eAAe,CAAC;QAClC,IAAU,CAAA,UAAA,GAAG,UAAU,CAAC;QACxB,IAAa,CAAA,aAAA,GAAG,aAAa,CAAC;QAE9B,IAAK,CAAA,KAAA,GAAW,QAAQ,CAAC;QACzB,IAAM,CAAA,MAAA,GAAW,QAAQ,CAAC;QAI1B,IAAS,CAAA,SAAA,GAAG,GAAG,CAAC;AAIhB,QAAA,IAAA,CAAA,MAAM,GAAG,IAAI,MAAM,EAAE,CAAC;QAEtB,IAAO,CAAA,OAAA,GAAY,KAAK,CAAC;AAmFlB,QAAA,IAAA,CAAA,aAAa,GAAG,CAAC,OAAe,EAAE,KAAa,KAAI;AACtD,YAAA,OAAO,IAAI,CAAC,QAAQ,CAAC,QAAQ,CAAC,OAAO,CAAC,CAAC,QAAQ,CAAC,KAAK,CAAC,CAAC;AAC3D,SAAC,CAAA;AAzEG,QAAA,IAAI,CAAC,MAAM,GAAG,IAAI,CAAC,QAAQ,CAAC,CAAC;AAC7B,QAAA,IAAI,CAAC,QAAQ,GAAG,IAAI,CAAC,UAAU,CAAC,CAAC;AACjC,QAAA,IAAI,CAAC,SAAS,CAAC,YAAY,GAAG,IAAI,CAAC;KACtC;IAED,QAAQ,GAAA;QACJ,IAAI,CAAC,KAAK,GAAG,IAAI,CAAC,cAAc,CAAC,UAAU,CAAC,cAAc,CAAC,CAAA;QAE3D,IAAI,CAAC,UAAU,EAAE,CAAC;AAElB,QAAA,IAAI,IAAI,CAAC,MAAM,IAAI,QAAQ,EAAE;AACzB,YAAA,IAAI,CAAC,KAAK,GAAG,QAAQ,CAAC;YACtB,IAAI,CAAC,aAAa,EAAE,CAAC;AACxB,SAAA;AACD,QAAA,IAAI,CAAC,QAAQ,CAAC,YAAY,CAAC,SAAS,CAAC,MAAK,EAAG,IAAI,CAAC,OAAO,GAAG,OAAO,CAAC,IAAI,CAAC,aAAa,EAAE,IAAI,CAAC,QAAQ,CAAC,WAAW,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC;KAC5H;IAED,UAAU,GAAA;QACN,IAAI,CAAC,QAAQ,GAAG,IAAI,CAAC,QAAQ,CAAC,KAAK,CAAC;YAChC,IAAI,EAAE,CAAC,EAAE,EAAE,CAAC,UAAU,CAAC,QAAQ,CAAC,CAAC;AACjC,YAAA,WAAW,EAAE,EAAE;AAClB,SAAA,CAAC,CAAC;KACN;IAEK,aAAa,GAAA;;AACf,YAAA,IAAI,CAAC,MAAM,GAAG,MAAM,IAAI,CAAC,aAAa,CAAC,aAAa,CAAC,IAAI,CAAC,KAAK,EAAE,IAAI,CAAC,QAAQ,CAAC,CAAC;AAChF,YAAA,IAAI,CAAC,WAAW,CAAC,IAAI,CAAC,MAAM,CAAC,CAAC;SACjC,CAAA,CAAA;AAAA,KAAA;AAED,IAAA,WAAW,CAAC,MAAM,EAAA;AACd,QAAA,IAAI,CAAC,QAAQ,CAAC,UAAU,CAAC;AACrB,YAAA,IAAI,EAAE,MAAM,CAAC,MAAM,CAAC;AACpB,YAAA,WAAW,EAAE,MAAM,CAAC,aAAa,CAAC;AACrC,SAAA,CAAC,CAAC;AACH,QAAA,IAAI,CAAC,OAAO,GAAG,IAAI,CAAC;KACvB;IAED,YAAY,GAAA;AACR,QAAA,IAAI,IAAI,CAAC,QAAQ,CAAC,OAAO,EAAE;AACvB,YAAA,IAAI,CAAC,QAAQ,CAAC,gBAAgB,EAAE,CAAC;AACjC,YAAA,IAAI,CAAC,YAAY,CAAC,SAAS,CAAC,WAAW,CAAC,kBAAkB,EAAE,WAAW,CAAC,oBAAoB,EAAE,WAAW,CAAC,KAAK,CAAC,CAAC;YACjH,OAAO;AACV,SAAA;AAED,QAAA,IAAI,CAAC,gBAAgB,CAAC,YAAY,CAAC,IAAI,CAAC,KAAK,EAAE,IAAI,CAAC,QAAQ,CAAC,KAAK,CAAC;AAC9D,aAAA,SAAS,CAAC,CAAC,eAA0B,KAAI;AACtC,YAAA,IAAI,CAAC,SAAS,CAAC,KAAK,CAAC;gBACjB,MAAM,EAAE,UAAU,CAAC,UAAU;AAC7B,gBAAA,QAAQ,EAAE,eAAe,CAAC,QAAQ,CAAC,EAAE;AACxC,aAAA,CAAC,CAAA;SACL,EACG,KAAK,IAAG;AACJ,YAAA,OAAO,CAAC,GAAG,CAAC,4BAA4B,EAAE,KAAK,CAAC,CAAC;AACrD,SAAC,CAAC,CAAC;KACd;IAED,YAAY,GAAA;AACR,QAAA,IAAI,IAAI,CAAC,QAAQ,CAAC,OAAO,EAAE;AACvB,YAAA,IAAI,CAAC,QAAQ,CAAC,gBAAgB,EAAE,CAAC;AACjC,YAAA,IAAI,CAAC,YAAY,CAAC,SAAS,CAAC,WAAW,CAAC,kBAAkB,EAAE,WAAW,CAAC,oBAAoB,EAAE,WAAW,CAAC,KAAK,CAAC,CAAC;YACjH,OAAO;AACV,SAAA;AACD,QAAA,IAAI,CAAC,gBAAgB,CAAC,YAAY,CAAC,IAAI,CAAC,KAAK,EAAE,IAAI,CAAC,QAAQ,EAAE,IAAI,CAAC,QAAQ,CAAC,KAAK,CAAC;AAC7E,aAAA,SAAS,CAAC,CAAC,eAA0B,KAAI;AACtC,YAAA,IAAI,CAAC,SAAS,CAAC,KAAK,CAAC,EAAE,MAAM,EAAE,UAAU,CAAC,UAAU,EAAE,QAAQ,EAAE,IAAI,EAAE,CAAC,CAAA;SAC1E,EACG,KAAK,IAAG;AACJ,YAAA,OAAO,CAAC,GAAG,CAAC,4BAA4B,EAAE,KAAK,CAAC,CAAC;AACrD,SAAC,CAAC,CAAC;KACd;;AAnGQ,2BAAA,CAAA,IAAA,GAAA,EAAA,CAAA,kBAAA,CAAA,EAAA,UAAA,EAAA,QAAA,EAAA,OAAA,EAAA,SAAA,EAAA,QAAA,EAAA,EAAA,EAAA,IAAA,EAAA,2BAA2B,gDAuBxB,eAAe,EAAA,EAAA,EAAA,KAAA,EAAAN,IAAA,CAAA,cAAA,EAAA,EAAA,EAAA,KAAA,EAAAc,IAAA,CAAA,WAAA,EAAA,EAAA,EAAA,KAAA,EAAAC,IAAA,CAAA,aAAA,EAAA,EAAA,EAAA,KAAA,EAAA,EAAA,CAAA,gBAAA,EAAA,EAAA,EAAA,KAAA,EAAA,EAAA,CAAA,aAAA,EAAA,CAAA,EAAA,MAAA,EAAA,EAAA,CAAA,eAAA,CAAA,SAAA,EAAA,CAAA,CAAA;AAvBlB,2BAAA,CAAA,IAAA,GAAA,EAAA,CAAA,oBAAA,CAAA,EAAA,UAAA,EAAA,QAAA,EAAA,OAAA,EAAA,SAAA,EAAA,IAAA,EAAA,2BAA2B,kDCnBxC,2yEAgDM,EAAA,UAAA,EAAA,CAAA,EAAA,IAAA,EAAA,EAAA,CAAA,SAAA,EAAA,QAAA,EAAA,4LAAA,EAAA,MAAA,EAAA,CAAA,UAAA,EAAA,eAAA,EAAA,OAAA,CAAA,EAAA,QAAA,EAAA,CAAA,WAAA,CAAA,EAAA,EAAA,EAAA,IAAA,EAAAR,IAAA,CAAA,YAAA,EAAA,QAAA,EAAA,gBAAA,EAAA,MAAA,EAAA,CAAA,OAAA,EAAA,YAAA,EAAA,YAAA,EAAA,oBAAA,EAAA,WAAA,CAAA,EAAA,QAAA,EAAA,CAAA,cAAA,CAAA,EAAA,CAAA,EAAA,UAAA,EAAA,CAAA,EAAA,IAAA,EAAAR,IAAA,CAAA,cAAA,EAAA,QAAA,EAAA,sCAAA,EAAA,MAAA,EAAA,CAAA,IAAA,CAAA,EAAA,QAAA,EAAA,CAAA,gBAAA,CAAA,EAAA,EAAA,EAAA,IAAA,EAAAA,IAAA,CAAA,cAAA,EAAA,QAAA,EAAA,sCAAA,EAAA,MAAA,EAAA,CAAA,MAAA,EAAA,kBAAA,EAAA,YAAA,EAAA,gBAAA,CAAA,EAAA,QAAA,EAAA,CAAA,gBAAA,CAAA,EAAA,EAAA,EAAA,IAAA,EAAAS,GAAA,CAAA,UAAA,EAAA,QAAA,EAAA,cAAA,EAAA,QAAA,EAAA,CAAA,YAAA,CAAA,EAAA,EAAA,EAAA,IAAA,EAAAT,IAAA,CAAA,gBAAA,EAAA,QAAA,EAAA,8DAAA,EAAA,EAAA,EAAA,IAAA,EAAAe,IAAA,CAAA,aAAA,EAAA,QAAA,EAAA,8CAAA,EAAA,EAAA,EAAA,IAAA,EAAAA,IAAA,CAAA,oBAAA,EAAA,QAAA,EAAA,0FAAA,EAAA,EAAA,EAAA,IAAA,EAAAA,IAAA,CAAA,kBAAA,EAAA,QAAA,EAAA,aAAA,EAAA,MAAA,EAAA,CAAA,WAAA,CAAA,EAAA,OAAA,EAAA,CAAA,UAAA,CAAA,EAAA,QAAA,EAAA,CAAA,QAAA,CAAA,EAAA,EAAA,EAAA,IAAA,EAAAP,IAAA,CAAA,QAAA,EAAA,QAAA,EAAA,WAAA,EAAA,EAAA,EAAA,IAAA,EAAAE,KAAA,CAAA,QAAA,EAAA,QAAA,EAAA,yHAAA,EAAA,MAAA,EAAA,CAAA,IAAA,EAAA,UAAA,EAAA,UAAA,EAAA,MAAA,EAAA,OAAA,EAAA,UAAA,EAAA,aAAA,EAAA,mBAAA,EAAA,kBAAA,CAAA,EAAA,QAAA,EAAA,CAAA,UAAA,CAAA,EAAA,EAAA,EAAA,IAAA,EAAAK,IAAA,CAAA,oBAAA,EAAA,QAAA,EAAA,8MAAA,EAAA,EAAA,EAAA,IAAA,EAAAA,IAAA,CAAA,eAAA,EAAA,QAAA,EAAA,2CAAA,EAAA,EAAA,EAAA,IAAA,EAAAA,IAAA,CAAA,eAAA,EAAA,QAAA,EAAA,mBAAA,EAAA,MAAA,EAAA,CAAA,UAAA,EAAA,iBAAA,EAAA,SAAA,CAAA,EAAA,OAAA,EAAA,CAAA,eAAA,CAAA,EAAA,EAAA,EAAA,IAAA,EAAAA,IAAA,CAAA,iBAAA,EAAA,QAAA,EAAA,wIAAA,EAAA,MAAA,EAAA,CAAA,UAAA,CAAA,EAAA,EAAA,EAAA,IAAA,EAAAJ,GAAA,CAAA,IAAA,EAAA,QAAA,EAAA,QAAA,EAAA,MAAA,EAAA,CAAA,MAAA,EAAA,UAAA,EAAA,UAAA,CAAA,EAAA,EAAA,EAAA,IAAA,EAAAH,IAAA,CAAA,QAAA,EAAA,QAAA,EAAA,WAAA,EAAA,MAAA,EAAA,CAAA,IAAA,CAAA,EAAA,EAAA,EAAA,IAAA,EAAAO,IAAA,CAAA,kBAAA,EAAA,QAAA,EAAA,4EAAA,EAAA,MAAA,EAAA,CAAA,WAAA,CAAA,EAAA,EAAA,EAAA,IAAA,EAAAP,IAAA,CAAA,OAAA,EAAA,QAAA,EAAA,UAAA,EAAA,MAAA,EAAA,CAAA,OAAA,EAAA,IAAA,CAAA,EAAA,EAAA,EAAA,IAAA,EAAAG,GAAA,CAAA,QAAA,EAAA,QAAA,EAAA,YAAA,EAAA,MAAA,EAAA,CAAA,UAAA,CAAA,EAAA,EAAA,EAAA,IAAA,EAAAA,GAAA,CAAA,YAAA,EAAA,QAAA,EAAA,gBAAA,EAAA,MAAA,EAAA,CAAA,cAAA,CAAA,EAAA,EAAA,EAAA,IAAA,EAAAA,GAAA,CAAA,OAAA,EAAA,QAAA,EAAA,WAAA,EAAA,MAAA,EAAA,CAAA,OAAA,EAAA,SAAA,CAAA,EAAA,EAAA,EAAA,IAAA,EAAAA,GAAA,CAAA,eAAA,EAAA,QAAA,EAAA,mBAAA,EAAA,CAAA,EAAA,CAAA,CAAA;4FD7BO,2BAA2B,EAAA,UAAA,EAAA,CAAA;kBANvC,SAAS;AAAC,YAAA,IAAA,EAAA,CAAA;AACP,oBAAA,QAAQ,EAAE,YAAY;AACtB,oBAAA,WAAW,EAAE,yBAAyB;AACtC,oBAAA,MAAM,EAAE,EACP;AACJ,iBAAA,CAAA;;0BAwBQ,MAAM;2BAAC,eAAe,CAAA;;;MEXlB,wBAAwB,CAAA;;sHAAxB,wBAAwB,EAAA,IAAA,EAAA,EAAA,EAAA,MAAA,EAAA,EAAA,CAAA,eAAA,CAAA,QAAA,EAAA,CAAA,CAAA;uHAAxB,wBAAwB,EAAA,YAAA,EAAA,CAf7B,2BAA2B,CAAA,EAAA,OAAA,EAAA,CAG3B,YAAY;QACZ,WAAW;QACX,mBAAmB;QACnB,aAAa;QACb,kBAAkB;QAClB,eAAe;QACf,cAAc;QACd,gBAAgB;QAChB,eAAe;QACf,eAAe,CAAA,EAAA,CAAA,CAAA;AAGV,wBAAA,CAAA,IAAA,GAAA,EAAA,CAAA,mBAAA,CAAA,EAAA,UAAA,EAAA,QAAA,EAAA,OAAA,EAAA,SAAA,EAAA,QAAA,EAAA,EAAA,EAAA,IAAA,EAAA,wBAAwB,EAbxB,OAAA,EAAA,CAAA;YACL,YAAY;YACZ,WAAW;YACX,mBAAmB;YACnB,aAAa;YACb,kBAAkB;YAClB,eAAe;YACf,cAAc;YACd,gBAAgB;YAChB,eAAe;YACf,eAAe;AAClB,SAAA,CAAA,EAAA,CAAA,CAAA;4FAEQ,wBAAwB,EAAA,UAAA,EAAA,CAAA;kBAjBpC,QAAQ;AAAC,YAAA,IAAA,EAAA,CAAA;AACN,oBAAA,YAAY,EAAE;wBACV,2BAA2B;AAC9B,qBAAA;AACD,oBAAA,OAAO,EAAE;wBACL,YAAY;wBACZ,WAAW;wBACX,mBAAmB;wBACnB,aAAa;wBACb,kBAAkB;wBAClB,eAAe;wBACf,cAAc;wBACd,gBAAgB;wBAChB,eAAe;wBACf,eAAe;AAClB,qBAAA;AACJ,iBAAA,CAAA;;;ACbD;MAQa,mBAAmB,CAAA;AAiC5B,IAAA,WAAA,CACW,SAA4C,EACnB,IAAI,EAC5B,YAAyB,EACzB,gBAAkC,EAClC,aAA4B,EAC5B,cAA8B,EAC9B,aAA4B,EAC5B,gBAAkC,EAClC,gBAAkC,EAAA;QARnC,IAAS,CAAA,SAAA,GAAT,SAAS,CAAmC;QACnB,IAAI,CAAA,IAAA,GAAJ,IAAI,CAAA;QAC5B,IAAY,CAAA,YAAA,GAAZ,YAAY,CAAa;QACzB,IAAgB,CAAA,gBAAA,GAAhB,gBAAgB,CAAkB;QAClC,IAAa,CAAA,aAAA,GAAb,aAAa,CAAe;QAC5B,IAAc,CAAA,cAAA,GAAd,cAAc,CAAgB;QAC9B,IAAa,CAAA,aAAA,GAAb,aAAa,CAAe;QAC5B,IAAgB,CAAA,gBAAA,GAAhB,gBAAgB,CAAkB;QAClC,IAAgB,CAAA,gBAAA,GAAhB,gBAAgB,CAAkB;QAxC9C,IAAe,CAAA,eAAA,GAAG,eAAe,CAAC;QAElC,IAA2B,CAAA,2BAAA,GAAG,2BAA2B,CAAC;QAC1D,IAAe,CAAA,eAAA,GAAG,eAAe,CAAC;QAClC,IAAU,CAAA,UAAA,GAAG,UAAU,CAAC;QACxB,IAAc,CAAA,cAAA,GAAG,UAAU,CAAC;QAC5B,IAAa,CAAA,aAAA,GAAG,aAAa,CAAC;QAC9B,IAAa,CAAA,aAAA,GAAG,aAAa,CAAC;QAU9B,IAAO,CAAA,OAAA,GAAY,IAAI,CAAC;AAGxB,QAAA,IAAA,CAAA,UAAU,GAAG,CAAC,IAAI,SAAS,EAAE,CAAC,CAAC;AAG/B,QAAA,IAAA,CAAA,UAAU,GAAG,CAAC,IAAI,MAAM,EAAE,CAAC,CAAC;AAC5B,QAAA,IAAA,CAAA,QAAQ,GAAG,CAAC,IAAI,MAAM,EAAE,CAAC,CAAC;QAE1B,IAAW,CAAA,WAAA,GAAW,sFAAsF,CAAC;QAC7G,IAAc,CAAA,cAAA,GAAW,iFAAiF,CAAC;AAevG,QAAA,IAAI,CAAC,QAAQ,GAAG,IAAI,CAAC,UAAU,CAAC,CAAC;AACjC,QAAA,IAAI,CAAC,QAAQ,GAAG,IAAI,CAAC,UAAU,CAAC,CAAC;AACjC,QAAA,IAAI,CAAC,UAAU,GAAG,IAAI,CAAC,YAAY,CAAC,CAAC;QACrC,IAAI,CAAC,eAAe,GAAG,IAAI,CAAC,YAAY,CAAC,CAAC,WAAW,CAAC,CAAC;AACvD,QAAA,IAAI,CAAC,gBAAgB,GAAG,IAAI,CAAC,kBAAkB,CAAC,CAAC;AACjD,QAAA,IAAI,CAAC,SAAS,CAAC,YAAY,GAAG,IAAI,CAAC;KACtC;IAED,QAAQ,GAAA;QACJ,IAAI,CAAC,KAAK,GAAG,IAAI,CAAC,cAAc,CAAC,UAAU,CAAC,cAAc,CAAC,CAAC;QAE5D,IAAI,CAAC,mBAAmB,EAAE,CAAC;AAE3B,QAAA,IAAI,CAAC,qBAAqB,CAAC,QAAQ,CAAC;aAC/B,IAAI,CAAC,GAAG,IAAG;AACR,YAAA,IAAI,CAAC,UAAU,GAAG,GAAG,CAAC;AAC1B,SAAC,CAAC,CAAA;AAEN,QAAA,IAAI,CAAC,qBAAqB,CAAC,UAAU,CAAC;aACjC,IAAI,CAAC,GAAG,IAAG;AACR,YAAA,IAAI,CAAC,QAAQ,GAAG,GAAG,CAAC;AACxB,SAAC,CAAC,CAAA;QAEN,IAAI,CAAC,gBAAgB,EAAE,CAAC;AACxB,QAAA,IAAI,CAAC,eAAe,CAAC,OAAO,CAAC,KAAK,IAAG;AACjC,YAAA,IAAI,CAAC,uBAAuB,CAAC,KAAK,CAAC,CAAC;AACxC,SAAC,CAAC,CAAC;AAEH,QAAA,IAAI,IAAI,CAAC,UAAU,IAAI,IAAI,CAAC,UAAU,CAAC,cAAc,IAAI,IAAI,CAAC,UAAU,CAAC,cAAc,CAAC,MAAM,IAAI,CAAC,EAAE;AACjG,YAAA,IAAI,CAAC,MAAM,GAAG,UAAU,CAAC,GAAG,CAAC;AAChC,SAAA;AAAM,aAAA;AACH,YAAA,IAAI,CAAC,MAAM,GAAG,UAAU,CAAC,MAAM,CAAC;AAChC,YAAA,IAAI,CAAC,mBAAmB,GAAG,IAAI,CAAC,uBAAuB,EAAE,CAAC;YAC1D,IAAI,CAAC,iBAAiB,EAAE,CAAC;YACzB,IAAI,CAAC,uBAAuB,EAAE,CAAC;AAClC,SAAA;QAED,IAAI,CAAC,YAAY,GAAG,IAAI,CAAC,YAAY,CAAC,KAAK,CAAC;QAE5C,IAAI,CAAC,YAAY,CAAC,YAAY,CAAC,SAAS,CAAC,MAAK;AAE1C,YAAA,IAAI,CAAC,OAAO,GAAG,OAAO,CAAC,IAAI,CAAC,YAAY,EAAE,IAAI,CAAC,YAAY,CAAC,KAAK,CAAC,CAAC;AAEnE,YAAA,IAAI,IAAI,CAAC,MAAM,IAAI,UAAU,CAAC,MAAM,EAAE;gBAClC,IAAI,CAAC,yBAAyB,EAAE,CAAC;AACpC,aAAA;AACL,SAAC,CAAC,CAAC;KACN;IAEK,mBAAmB,GAAA;;AACrB,YAAA,IAAI,CAAC,UAAU,IAAiB,MAAM,IAAI,CAAC,gBAAgB,CAAC,mBAAmB,CAAC,IAAI,CAAC,KAAK,CAAC,CAAA,CAAC;SAC/F,CAAA,CAAA;AAAA,KAAA;AAED,IAAA,iBAAiB,CAAC,OAAO,EAAA;AACrB,QAAA,MAAM,SAAS,GAAG,IAAI,CAAC,gBAAgB,CAAC,eAAe,CAAC,IAAI,CAAC,UAAU,EAAE,IAAI,EAAE,OAAO,CAAC,CAAC;QACxF,OAAO,SAAS,GAAG,SAAS,CAAC,KAAK,GAAG,EAAE,CAAC;KAC3C;AAEK,IAAA,qBAAqB,CAAC,IAAY,EAAA;;AACpC,YAAA,MAAM,WAAW,GAAG;AAChB,gBAAA,IAAI,EAAE,IAAI;aACb,CAAC;AAEF,YAAA,MAAM,MAAM,GAAG,MAAM,IAAI,CAAC,aAAa,CAAC,qBAAqB,CAAC,IAAI,CAAC,KAAK,EAAE,WAAW,CAAC,CAAC;AACvF,YAAA,OAAO,MAAM,CAAC;SACjB,CAAA,CAAA;AAAA,KAAA;IAED,gBAAgB,GAAA;QACZ,IAAI,CAAC,YAAY,GAAG,IAAI,CAAC,YAAY,CAAC,KAAK,CAAC;YACxC,sBAAsB,EAAE,IAAI,CAAC,YAAY,CAAC,KAAK,CAAC,EAAE,CAAC;AACtD,SAAA,CAAC,CAAC;KACN;AAED,IAAA,uBAAuB,CAAC,KAAU,EAAA;AAC9B,QAAA,MAAM,WAAW,GAAG,IAAI,CAAC,YAAY,CAAC,KAAK,CAAC;AACxC,YAAA,WAAW,EAAE,CAAC,KAAK,CAAC,EAAE,CAAC;YACvB,QAAQ,EAAE,CAAC,KAAK,CAAC;AACjB,YAAA,UAAU,EAAE,CAAC,EAAE,KAAK,EAAE,EAAE,EAAE,QAAQ,EAAE,IAAI,EAAE,EAAE,UAAU,CAAC,QAAQ,CAAC;YAChE,MAAM,EAAE,CAAC,KAAK,CAAC;AACf,YAAA,QAAQ,EAAE,CAAC,EAAE,KAAK,EAAE,EAAE,EAAE,QAAQ,EAAE,IAAI,EAAE,EAAE,UAAU,CAAC,QAAQ,CAAC;AACjE,SAAA,CAAC,CAAC;AACH,QAAA,IAAI,CAAC,wBAAwB,CAAC,IAAI,CAAC,WAAW,CAAC,CAAC;KACnD;AAED,IAAA,IAAI,wBAAwB,GAAA;QACxB,OAAO,IAAI,CAAC,YAAY,CAAC,GAAG,CAAC,wBAAwB,CAAc,CAAC;KACvE;IAED,aAAa,CAAC,KAAU,EAAE,KAAa,EAAA;AACnC,QAAA,MAAM,QAAQ,GAAG,IAAI,CAAC,wBAAwB,CAAC,EAAE,CAAC,KAAK,CAAC,CAAC,GAAG,CAAC,UAAU,CAAC,CAAC;AACzE,QAAA,QAAQ,CAAC,QAAQ,CAAC,KAAK,CAAC,OAAO,CAAC,CAAC;AAEjC,QAAA,MAAM,iBAAiB,GAAG,IAAI,CAAC,wBAAwB,CAAC,EAAE,CAAC,KAAK,CAAC,CAAC,GAAG,CAAC,YAAY,CAAC,CAAC;QACpF,IAAI,QAAQ,CAAC,KAAK,EAAE;YAChB,iBAAiB,CAAC,MAAM,EAAE,CAAC;YAC3B,iBAAiB,CAAC,aAAa,CAAC,CAAC,UAAU,CAAC,QAAQ,CAAC,CAAC,CAAC;AAC1D,SAAA;AAAM,aAAA;YACH,iBAAiB,CAAC,OAAO,EAAE,CAAC;YAC5B,iBAAiB,CAAC,eAAe,EAAE,CAAC;AACpC,YAAA,iBAAiB,CAAC,KAAK,CAAC,EAAE,CAAC,CAAC;AAC/B,SAAA;QAED,iBAAiB,CAAC,sBAAsB,EAAE,CAAC;KAC9C;IAED,WAAW,CAAC,KAAU,EAAE,KAAa,EAAA;AACjC,QAAA,MAAM,MAAM,GAAG,IAAI,CAAC,wBAAwB,CAAC,EAAE,CAAC,KAAK,CAAC,CAAC,GAAG,CAAC,QAAQ,CAAC,CAAC;AACrE,QAAA,MAAM,CAAC,QAAQ,CAAC,KAAK,CAAC,OAAO,CAAC,CAAC;AAE/B,QAAA,MAAM,eAAe,GAAG,IAAI,CAAC,wBAAwB,CAAC,EAAE,CAAC,KAAK,CAAC,CAAC,GAAG,CAAC,UAAU,CAAC,CAAC;QAChF,IAAI,MAAM,CAAC,KAAK,EAAE;YACd,eAAe,CAAC,MAAM,EAAE,CAAC;YACzB,eAAe,CAAC,aAAa,CAAC,CAAC,UAAU,CAAC,QAAQ,CAAC,CAAC,CAAC;AACxD,SAAA;AAAM,aAAA;YACH,eAAe,CAAC,OAAO,EAAE,CAAC;YAC1B,eAAe,CAAC,eAAe,EAAE,CAAC;AAClC,YAAA,eAAe,CAAC,KAAK,CAAC,EAAE,CAAC,CAAC;AAC7B,SAAA;QAED,eAAe,CAAC,sBAAsB,EAAE,CAAC;KAC5C;IAED,uBAAuB,GAAA;QACnB,MAAM,YAAY,GAAU,EAAE,CAAC;AAE/B,QAAA,IAAI,IAAI,CAAC,MAAM,IAAI,UAAU,CAAC,GAAG,EAAE;AAC/B,YAAA,IAAI,CAAC,wBAAwB,CAAC,QAAQ,CAAC,OAAO,CAAC,CAAC,SAAS,EAAE,KAAK,KAAI;gBAChE,MAAM,WAAW,GAAG,SAAS,CAAC,GAAG,CAAC,aAAa,CAAC,CAAC,KAAK,CAAC;gBACvD,MAAM,OAAO,GAAG,EAAE,CAAC;gBAEnB,MAAM,QAAQ,GAAG,SAAS,CAAC,GAAG,CAAC,UAAU,CAAC,CAAC,KAAK,CAAC;AACjD,gBAAA,MAAM,UAAU,GAAG,SAAS,CAAC,GAAG,CAAC,YAAY,CAAC,CAAC,KAAK,IAAI,EAAE,CAAC;AAC3D,gBAAA,IAAI,QAAQ,EAAE;oBACV,OAAO,CAAC,IAAI,CAAC;AACT,wBAAA,SAAS,EAAE,IAAI;AACf,wBAAA,IAAI,EAAE,QAAQ;AACd,wBAAA,KAAK,EAAE,UAAU;AACpB,qBAAA,CAAC,CAAC;AACN,iBAAA;gBAED,MAAM,MAAM,GAAG,SAAS,CAAC,GAAG,CAAC,QAAQ,CAAC,CAAC,KAAK,CAAC;AAC7C,gBAAA,MAAM,QAAQ,GAAG,SAAS,CAAC,GAAG,CAAC,UAAU,CAAC,CAAC,KAAK,IAAI,EAAE,CAAC;AACvD,gBAAA,IAAI,MAAM,EAAE;oBACR,OAAO,CAAC,IAAI,CAAC;AACT,wBAAA,SAAS,EAAE,IAAI;AACf,wBAAA,IAAI,EAAE,MAAM;AACZ,wBAAA,KAAK,EAAE,QAAQ;AAClB,qBAAA,CAAC,CAAC;AACN,iBAAA;AAED,gBAAA,IAAI,OAAO,CAAC,MAAM,GAAG,CAAC,EAAE;oBACpB,YAAY,CAAC,IAAI,CAAC;AACd,wBAAA,WAAW,EAAE,WAAW;AACxB,wBAAA,OAAO,EAAE,OAAO;AACnB,qBAAA,CAAC,CAAC;AACN,iBAAA;AACL,aAAC,CAAC,CAAC;AACN,SAAA;AAAM,aAAA,IAAI,IAAI,CAAC,MAAM,IAAI,UAAU,CAAC,MAAM,EAAE;AACzC,YAAA,IAAI,IAAI,CAAC,UAAU,CAAC,cAAc,EAAE;gBAChC,IAAI,CAAC,UAAU,CAAC,cAAc,CAAC,OAAO,CAAC,CAAC,MAAM,KAAI;;AAC9C,oBAAA,MAAM,WAAW,GAAG,MAAM,CAAC,WAAW,CAAC;AACvC,oBAAA,MAAM,OAAO,GAAG,CAAA,CAAA,EAAA,GAAA,MAAM,CAAC,OAAO,MAAA,IAAA,IAAA,EAAA,KAAA,KAAA,CAAA,GAAA,KAAA,CAAA,GAAA,EAAA,CAAE,GAAG,CAAC,CAAC,OAAO,KAAI;wBAC5C,OAAO;AACH,4BAAA,SAAS,EAAE,OAAO,CAAC,SAAS,IAAI,IAAI;AACpC,4BAAA,IAAI,EAAE,OAAO,CAAC,IAAI,IAAI,EAAE;AACxB,4BAAA,KAAK,EAAE,OAAO,CAAC,KAAK,IAAI,EAAE;yBAC7B,CAAC;qBACL,CAAC,KAAI,EAAE,CAAC;oBAET,YAAY,CAAC,IAAI,CAAC;AACd,wBAAA,WAAW,EAAE,WAAW;AACxB,wBAAA,OAAO,EAAE,OAAO;AACnB,qBAAA,CAAC,CAAC;AACP,iBAAC,CAAC,CAAC;AACN,aAAA;AACJ,SAAA;AACD,QAAA,OAAO,YAAY,CAAC;KACvB;IAED,iBAAiB,GAAA;QACb,IAAI,CAAC,mBAAmB,CAAC,OAAO,CAAC,CAAC,aAAa,KAAI;;AAC/C,YAAA,MAAM,WAAW,GAAG,aAAa,CAAC,WAAW,CAAC;YAC9C,MAAM,oBAAoB,GAAG,IAAI,CAAC,wBAAwB,CAAC,QAAQ,CAAC,IAAI,CAAC,WAAW,IAAI,WAAW,CAAC,GAAG,CAAC,aAAa,CAAC,CAAC,KAAK,IAAI,WAAW,CAAC,CAAC;AAC7I,YAAA,IAAI,oBAAoB,EAAE;AACtB,gBAAA,MAAM,OAAO,GAAG,aAAa,CAAC,OAAO,CAAC;AACtC,gBAAA,MAAM,QAAQ,GAAG,OAAO,CAAC,IAAI,CAAC,KAAK,IAAI,KAAK,CAAC,IAAI,IAAI,QAAQ,CAAC,CAAC;AAC/D,gBAAA,MAAM,MAAM,GAAG,OAAO,CAAC,IAAI,CAAC,KAAK,IAAI,KAAK,CAAC,IAAI,IAAI,MAAM,CAAC,CAAC;gBAC3D,MAAM,UAAU,GAAG,CAAA,CAAA,EAAA,GAAA,OAAO,CAAC,IAAI,CAAC,KAAK,IAAI,KAAK,CAAC,IAAI,IAAI,QAAQ,CAAC,MAAE,IAAA,IAAA,EAAA,KAAA,KAAA,CAAA,GAAA,KAAA,CAAA,GAAA,EAAA,CAAA,KAAK,KAAI,EAAE,CAAC;gBAC9E,MAAM,QAAQ,GAAG,CAAA,CAAA,EAAA,GAAA,OAAO,CAAC,IAAI,CAAC,KAAK,IAAI,KAAK,CAAC,IAAI,IAAI,MAAM,CAAC,MAAE,IAAA,IAAA,EAAA,KAAA,KAAA,CAAA,GAAA,KAAA,CAAA,GAAA,EAAA,CAAA,KAAK,KAAI,EAAE,CAAC;gBAE1E,oBAAoB,CAAC,UAAU,CAAC;oBAC5B,QAAQ;oBACR,MAAM;oBACN,UAAU;oBACV,QAAQ;AACX,iBAAA,CAAC,CAAC;AACN,aAAA;AACL,SAAC,CAAC,CAAC;KACN;IAED,uBAAuB,GAAA;AACnB,QAAA,IAAI,CAAC,wBAAwB,CAAC,QAAQ,CAAC,OAAO,CAAC,CAAC,SAAS,EAAE,KAAK,KAAI;YAChE,MAAM,QAAQ,GAAG,SAAS,CAAC,GAAG,CAAC,UAAU,CAAC,CAAC,KAAK,CAAC;YACjD,MAAM,iBAAiB,GAAG,SAAS,CAAC,GAAG,CAAC,YAAY,CAAC,CAAC;AACtD,YAAA,IAAI,QAAQ,EAAE;gBACV,iBAAiB,CAAC,MAAM,EAAE,CAAC;gBAC3B,iBAAiB,CAAC,aAAa,CAAC,CAAC,UAAU,CAAC,QAAQ,CAAC,CAAC,CAAC;AAC1D,aAAA;AAAM,iBAAA;gBACH,iBAAiB,CAAC,OAAO,EAAE,CAAC;gBAC5B,iBAAiB,CAAC,eAAe,EAAE,CAAC;AACpC,gBAAA,iBAAiB,CAAC,KAAK,CAAC,EAAE,CAAC,CAAC;AAC/B,aAAA;YACD,iBAAiB,CAAC,sBAAsB,EAAE,CAAC;YAE3C,MAAM,MAAM,GAAG,SAAS,CAAC,GAAG,CAAC,QAAQ,CAAC,CAAC,KAAK,CAAC;YAC7C,MAAM,eAAe,GAAG,SAAS,CAAC,GAAG,CAAC,UAAU,CAAC,CAAC;AAClD,YAAA,IAAI,MAAM,EAAE;gBACR,eAAe,CAAC,MAAM,EAAE,CAAC;gBACzB,eAAe,CAAC,aAAa,CAAC,CAAC,UAAU,CAAC,QAAQ,CAAC,CAAC,CAAC;AACxD,aAAA;AAAM,iBAAA;gBACH,eAAe,CAAC,OAAO,EAAE,CAAC;gBAC1B,eAAe,CAAC,eAAe,EAAE,CAAC;AAClC,gBAAA,eAAe,CAAC,KAAK,CAAC,EAAE,CAAC,CAAC;AAC7B,aAAA;YACD,eAAe,CAAC,sBAAsB,EAAE,CAAC;AAC7C,SAAC,CAAC,CAAC;KACN;IAED,yBAAyB,GAAA;QACrB,MAAM,YAAY,GAAU,EAAE,CAAC;QAE/B,IAAI,CAAC,wBAAwB,CAAC,QAAQ,CAAC,OAAO,CAAC,CAAC,SAAS,KAAI;YACzD,MAAM,WAAW,GAAG,SAAS,CAAC,GAAG,CAAC,aAAa,CAAC,CAAC,KAAK,CAAC;YACvD,MAAM,OAAO,GAAG,EAAE,CAAC;YAEnB,MAAM,QAAQ,GAAG,SAAS,CAAC,GAAG,CAAC,UAAU,CAAC,CAAC,KAAK,CAAC;AACjD,YAAA,MAAM,UAAU,GAAG,SAAS,CAAC,GAAG,CAAC,YAAY,CAAC,CAAC,KAAK,IAAI,EAAE,CAAC;AAC3D,YAAA,IAAI,QAAQ,EAAE;gBACV,OAAO,CAAC,IAAI,CAAC;AACT,oBAAA,SAAS,EAAE,IAAI;AACf,oBAAA,IAAI,EAAE,QAAQ;AACd,oBAAA,KAAK,EAAE,UAAU;AACpB,iBAAA,CAAC,CAAC;AACN,aAAA;YAED,MAAM,MAAM,GAAG,SAAS,CAAC,GAAG,CAAC,QAAQ,CAAC,CAAC,KAAK,CAAC;AAC7C,YAAA,MAAM,QAAQ,GAAG,SAAS,CAAC,GAAG,CAAC,UAAU,CAAC,CAAC,KAAK,IAAI,EAAE,CAAC;AACvD,YAAA,IAAI,MAAM,EAAE;gBACR,OAAO,CAAC,IAAI,CAAC;AACT,oBAAA,SAAS,EAAE,IAAI;AACf,oBAAA,IAAI,EAAE,MAAM;AACZ,oBAAA,KAAK,EAAE,QAAQ;AAClB,iBAAA,CAAC,CAAC;AACN,aAAA;AAED,YAAA,IAAI,OAAO,CAAC,MAAM,GAAG,CAAC,EAAE;gBACpB,YAAY,CAAC,IAAI,CAAC;AACd,oBAAA,WAAW,EAAE,WAAW;AACxB,oBAAA,OAAO,EAAE,OAAO;AACnB,iBAAA,CAAC,CAAC;AACN,aAAA;AACL,SAAC,CAAC,CAAC;AAEH,QAAA,OAAO,YAAY,CAAC;KACvB;IAED,oBAAoB,GAAA;AAChB,QAAA,MAAM,YAAY,GAAG,IAAI,CAAC,wBAAwB,CAAC,QAAQ,CAAC;QAE5D,MAAM,iBAAiB,GAAG,YAAY,CAAC,MAAM,CAAC,OAAO,IAAG;YACpD,MAAM,QAAQ,GAAG,OAAO,CAAC,GAAG,CAAC,UAAU,CAAC,CAAC,KAAK,CAAC;YAC/C,MAAM,MAAM,GAAG,OAAO,CAAC,GAAG,CAAC,QAAQ,CAAC,CAAC,KAAK,CAAC;YAE3C,OAAO,QAAQ,IAAI,MAAM,CAAC;AAC9B,SAAC,CAAC,CAAC;AAEH,QAAA,IAAI,iBAAiB,CAAC,MAAM,IAAI,YAAY,CAAC,MAAM,EAAE;AACjD,YAAA,OAAO,IAAI,CAAC;AACf,SAAA;AAAM,aAAA;AACH,YAAA,IAAI,CAAC,aAAa,CAAC,SAAS,CAAC,WAAW,CAAC,OAAO,EAAE,IAAI,CAAC,cAAc,EAAE,WAAW,CAAC,OAAO,CAAC,CAAC;AAC5F,YAAA,OAAO,KAAK,CAAC;AAChB,SAAA;KACJ;IAED,gBAAgB,GAAA;AAEZ,QAAA,IAAI,IAAI,CAAC,oBAAoB,EAAE,EAAE;AAC7B,YAAA,IAAI,IAAI,CAAC,gBAAgB,IAAI,IAAI,EAAE;AAC/B,gBAAA,IAAI,CAAC,mBAAmB,GAAG,IAAI,CAAC,yBAAyB,EAAE,CAAC;AAE5D,gBAAA,IAAI,IAAI,CAAC,mBAAmB,CAAC,MAAM,IAAI,CAAC,EAAE;AACtC,oBAAA,IAAI,CAAC,aAAa,CAAC,SAAS,CAAC,WAAW,CAAC,OAAO,EAAE,IAAI,CAAC,cAAc,EAAE,WAAW,CAAC,OAAO,CAAC,CAAC;AAC/F,iBAAA;AAAM,qBAAA;AACH,oBAAA,IAAI,IAAI,CAAC,YAAY,CAAC,OAAO,EAAE;AAC3B,wBAAA,IAAI,CAAC,YAAY,CAAC,gBAAgB,EAAE,CAAC;AACrC,wBAAA,IAAI,CAAC,aAAa,CAAC,SAAS,CAAC,WAAW,CAAC,kBAAkB,EAAE,WAAW,CAAC,oBAAoB,EAAE,WAAW,CAAC,KAAK,CAAC,CAAC;wBAClH,OAAO;AACV,qBAAA;AAED,oBAAA,IAAI,CAAC,gBAAgB,CAAC,gBAAgB,CAAC,IAAI,CAAC,KAAK,EAAE,IAAI,CAAC,QAAQ,EAAE,IAAI,CAAC,QAAQ,EAAE,IAAI,CAAC,UAAU,CAAC,EAAE,EAAE,IAAI,CAAC,mBAAmB,CAAC,CAAC,SAAS,CAAC,CAAC,SAAoB,KAAI;AAC9J,wBAAA,IAAI,CAAC,SAAS,CAAC,KAAK,CAAC;4BACjB,MAAM,EAAE,UAAU,CAAC,UAAU;4BAC7B,MAAM,EAAE,UAAU,CAAC,MAAM;AAC5B,yBAAA,CAAC,CAAA;qBACL,EACG,KAAK,IAAG;AACJ,wBAAA,OAAO,CAAC,GAAG,CAAC,gCAAgC,EAAE,KAAK,CAAC,CAAC;AACzD,qBAAC,CAAC,CAAC;AACV,iBAAA;AACJ,aAAA;AAAM,iBAAA;AACH,gBAAA,IAAI,IAAI,CAAC,MAAM,IAAI,UAAU,CAAC,GAAG,EAAE;AAC/B,oBAAA,IAAI,CAAC,mBAAmB,GAAG,IAAI,CAAC,uBAAuB,EAAE,CAAC;AAC7D,iBAAA;AAAM,qBAAA,IAAI,IAAI,CAAC,MAAM,IAAI,UAAU,CAAC,MAAM,EAAE;AACzC,oBAAA,IAAI,CAAC,mBAAmB,GAAG,IAAI,CAAC,yBAAyB,EAAE,CAAC;AAE5D,oBAAA,IAAI,IAAI,CAAC,mBAAmB,CAAC,MAAM,IAAI,CAAC,EAAE;AACtC,wBAAA,IAAI,CAAC,aAAa,CAAC,SAAS,CAAC,WAAW,CAAC,IAAI,EAAE,IAAI,CAAC,WAAW,EAAE,WAAW,CAAC,IAAI,CAAC,CAAC;AACtF,qBAAA;AACJ,iBAAA;AAED,gBAAA,IAAI,IAAI,CAAC,YAAY,CAAC,OAAO,EAAE;AAC3B,oBAAA,IAAI,CAAC,YAAY,CAAC,gBAAgB,EAAE,CAAC;AACrC,oBAAA,IAAI,CAAC,aAAa,CAAC,SAAS,CAAC,WAAW,CAAC,kBAAkB,EAAE,WAAW,CAAC,oBAAoB,EAAE,WAAW,CAAC,KAAK,CAAC,CAAC;oBAClH,OAAO;AACV,iBAAA;AAED,gBAAA,IAAI,CAAC,SAAS,CAAC,KAAK,CAAC;oBACjB,MAAM,EAAE,UAAU,CAAC,UAAU;oBAC7B,oBAAoB,EAAE,IAAI,CAAC,mBAAmB;AACjD,iBAAA,CAAC,CAAA;AACL,aAAA;AACJ,SAAA;KACJ;IAED,MAAM,GAAA;AACF,QAAA,IAAI,IAAI,CAAC,gBAAgB,IAAI,IAAI,EAAE;YAC/B,IAAI,IAAI,CAAC,yBAAyB,EAAE,CAAC,MAAM,IAAI,CAAC,EAAE;AAC9C,gBAAA,IAAI,CAAC,aAAa,CAAC,SAAS,CAAC,WAAW,CAAC,OAAO,EAAE,IAAI,CAAC,cAAc,EAAE,WAAW,CAAC,OAAO,CAAC,CAAC;AAC/F,aAAA;AAAM,iBAAA;AACH,gBAAA,IAAI,CAAC,SAAS,CAAC,KAAK,CAAC;oBACjB,MAAM,EAAE,UAAU,CAAC,UAAU;oBAC7B,MAAM,EAAE,UAAU,CAAC,MAAM;AAC5B,iBAAA,CAAC,CAAA;AACL,aAAA;AACJ,SAAA;AAAM,aAAA;AACH,YAAA,IAAI,IAAI,CAAC,MAAM,IAAI,UAAU,CAAC,GAAG,EAAE;AAC/B,gBAAA,IAAI,CAAC,aAAa,CAAC,SAAS,CAAC,WAAW,CAAC,IAAI,EAAE,IAAI,CAAC,WAAW,EAAE,WAAW,CAAC,IAAI,CAAC,CAAC;AACtF,aAAA;YAED,IAAI,oBAAoB,GAAG,IAAI,CAAC,MAAM,IAAI,UAAU,CAAC,GAAG,GAAG,EAAE,GAAG,IAAI,CAAC,uBAAuB,EAAE,CAAC;AAE/F,YAAA,IAAI,CAAC,SAAS,CAAC,KAAK,CAAC;gBACjB,MAAM,EAAE,UAAU,CAAC,QAAQ;AAC3B,gBAAA,oBAAoB,EAAE,oBAAoB;AAC7C,aAAA,CAAC,CAAA;AACL,SAAA;KACJ;;AAhZQ,mBAAA,CAAA,IAAA,GAAA,EAAA,CAAA,kBAAA,CAAA,EAAA,UAAA,EAAA,QAAA,EAAA,OAAA,EAAA,SAAA,EAAA,QAAA,EAAA,EAAA,EAAA,IAAA,EAAA,mBAAmB,gDAmChB,eAAe,EAAA,EAAA,EAAA,KAAA,EAAAV,IAAA,CAAA,WAAA,EAAA,EAAA,EAAA,KAAA,EAAA4G,gBAAA,EAAA,EAAA,EAAA,KAAA,EAAAH,aAAA,EAAA,EAAA,EAAA,KAAA,EAAAnG,IAAA,CAAA,cAAA,EAAA,EAAA,EAAA,KAAA,EAAAU,IAAA,CAAA,aAAA,EAAA,EAAA,EAAA,KAAA,EAAA4D,gBAAA,EAAA,EAAA,EAAA,KAAA,EAAApE,EAAA,CAAA,gBAAA,EAAA,CAAA,EAAA,MAAA,EAAA,EAAA,CAAA,eAAA,CAAA,SAAA,EAAA,CAAA,CAAA;AAnClB,mBAAA,CAAA,IAAA,GAAA,EAAA,CAAA,oBAAA,CAAA,EAAA,UAAA,EAAA,QAAA,EAAA,OAAA,EAAA,SAAA,EAAA,IAAA,EAAA,mBAAmB,uDCzBhC,g7KAqFM,EAAA,UAAA,EAAA,CAAA,EAAA,IAAA,EAAA,EAAA,CAAA,OAAA,EAAA,QAAA,EAAA,UAAA,EAAA,QAAA,EAAA,CAAA,SAAA,CAAA,EAAA,EAAA,EAAA,IAAA,EAAAE,KAAA,CAAA,WAAA,EAAA,QAAA,EAAA,cAAA,EAAA,MAAA,EAAA,CAAA,eAAA,EAAA,OAAA,EAAA,UAAA,EAAA,YAAA,EAAA,iBAAA,EAAA,IAAA,EAAA,eAAA,EAAA,MAAA,EAAA,UAAA,EAAA,SAAA,EAAA,UAAA,EAAA,eAAA,EAAA,kBAAA,EAAA,OAAA,CAAA,EAAA,OAAA,EAAA,CAAA,QAAA,EAAA,qBAAA,CAAA,EAAA,QAAA,EAAA,CAAA,aAAA,CAAA,EAAA,EAAA,EAAA,IAAA,EAAAC,IAAA,CAAA,YAAA,EAAA,QAAA,EAAA,gBAAA,EAAA,MAAA,EAAA,CAAA,OAAA,EAAA,YAAA,EAAA,YAAA,EAAA,oBAAA,EAAA,WAAA,CAAA,EAAA,QAAA,EAAA,CAAA,cAAA,CAAA,EAAA,EAAA,EAAA,IAAA,EAAAC,EAAA,CAAA,SAAA,EAAA,QAAA,EAAA,YAAA,EAAA,MAAA,EAAA,CAAA,UAAA,EAAA,eAAA,EAAA,UAAA,CAAA,EAAA,QAAA,EAAA,CAAA,WAAA,CAAA,EAAA,EAAA,EAAA,IAAA,EAAAC,GAAA,CAAA,SAAA,EAAA,QAAA,EAAA,YAAA,EAAA,QAAA,EAAA,CAAA,WAAA,CAAA,EAAA,CAAA,EAAA,UAAA,EAAA,CAAA,EAAA,IAAA,EAAAd,IAAA,CAAA,cAAA,EAAA,QAAA,EAAA,sCAAA,EAAA,MAAA,EAAA,CAAA,IAAA,CAAA,EAAA,QAAA,EAAA,CAAA,gBAAA,CAAA,EAAA,EAAA,EAAA,IAAA,EAAAA,IAAA,CAAA,gBAAA,EAAA,QAAA,EAAA,8DAAA,EAAA,EAAA,EAAA,IAAA,EAAAC,IAAA,CAAA,aAAA,EAAA,QAAA,EAAA,8CAAA,EAAA,EAAA,EAAA,IAAA,EAAAA,IAAA,CAAA,oBAAA,EAAA,QAAA,EAAA,0FAAA,EAAA,EAAA,EAAA,IAAA,EAAAA,IAAA,CAAA,kBAAA,EAAA,QAAA,EAAA,aAAA,EAAA,MAAA,EAAA,CAAA,WAAA,CAAA,EAAA,OAAA,EAAA,CAAA,UAAA,CAAA,EAAA,QAAA,EAAA,CAAA,QAAA,CAAA,EAAA,EAAA,EAAA,IAAA,EAAAA,IAAA,CAAA,aAAA,EAAA,QAAA,EAAA,iBAAA,EAAA,MAAA,EAAA,CAAA,eAAA,CAAA,EAAA,EAAA,EAAA,IAAA,EAAA,GAAA,CAAA,OAAA,EAAA,QAAA,EAAA,kBAAA,EAAA,MAAA,EAAA,CAAA,SAAA,EAAA,cAAA,EAAA,eAAA,CAAA,EAAA,EAAA,EAAA,IAAA,EAAAA,IAAA,CAAA,aAAA,EAAA,QAAA,EAAA,iBAAA,EAAA,MAAA,EAAA,CAAA,eAAA,CAAA,EAAA,EAAA,EAAA,IAAA,EAAAA,IAAA,CAAA,eAAA,EAAA,QAAA,EAAA,2CAAA,EAAA,EAAA,EAAA,IAAA,EAAAA,IAAA,CAAA,eAAA,EAAA,QAAA,EAAA,mBAAA,EAAA,MAAA,EAAA,CAAA,UAAA,EAAA,iBAAA,EAAA,SAAA,CAAA,EAAA,OAAA,EAAA,CAAA,eAAA,CAAA,EAAA,EAAA,EAAA,IAAA,EAAAW,IAAA,CAAA,QAAA,EAAA,QAAA,EAAA,WAAA,EAAA,EAAA,EAAA,IAAA,EAAAX,IAAA,CAAA,iBAAA,EAAA,QAAA,EAAA,wIAAA,EAAA,MAAA,EAAA,CAAA,UAAA,CAAA,EAAA,EAAA,EAAA,IAAA,EAAA,GAAA,CAAA,IAAA,EAAA,QAAA,EAAA,QAAA,EAAA,MAAA,EAAA,CAAA,MAAA,EAAA,UAAA,EAAA,UAAA,CAAA,EAAA,EAAA,EAAA,IAAA,EAAAW,IAAA,CAAA,QAAA,EAAA,QAAA,EAAA,WAAA,EAAA,MAAA,EAAA,CAAA,IAAA,CAAA,EAAA,EAAA,EAAA,IAAA,EAAA,GAAA,CAAA,OAAA,EAAA,QAAA,EAAA,WAAA,EAAA,MAAA,EAAA,CAAA,OAAA,EAAA,SAAA,CAAA,EAAA,CAAA,EAAA,CAAA,CAAA;4FD5DO,mBAAmB,EAAA,UAAA,EAAA,CAAA;kBAN/B,SAAS;AAAC,YAAA,IAAA,EAAA,CAAA;AACP,oBAAA,QAAQ,EAAE,iBAAiB;AAC3B,oBAAA,WAAW,EAAE,8BAA8B;AAC3C,oBAAA,MAAM,EAAE,EACP;AACJ,iBAAA,CAAA;;0BAoCQ,MAAM;2BAAC,eAAe,CAAA;;;MEzBlB,gBAAgB,CAAA;;8GAAhB,gBAAgB,EAAA,IAAA,EAAA,EAAA,EAAA,MAAA,EAAA,EAAA,CAAA,eAAA,CAAA,QAAA,EAAA,CAAA,CAAA;+GAAhB,gBAAgB,EAAA,YAAA,EAAA,CAjBrB,mBAAmB,CAAA,EAAA,OAAA,EAAA,CAGnB,YAAY;QACZ,WAAW;QACX,mBAAmB;QACnB,aAAa;QACb,aAAa;QACb,kBAAkB;QAClB,eAAe;QACf,cAAc;QACd,gBAAgB;QAChB,eAAe;QACf,eAAe;QACf,iBAAiB,CAAA,EAAA,CAAA,CAAA;AAGZ,gBAAA,CAAA,IAAA,GAAA,EAAA,CAAA,mBAAA,CAAA,EAAA,UAAA,EAAA,QAAA,EAAA,OAAA,EAAA,SAAA,EAAA,QAAA,EAAA,EAAA,EAAA,IAAA,EAAA,gBAAgB,EAfhB,OAAA,EAAA,CAAA;YACL,YAAY;YACZ,WAAW;YACX,mBAAmB;YACnB,aAAa;YACb,aAAa;YACb,kBAAkB;YAClB,eAAe;YACf,cAAc;YACd,gBAAgB;YAChB,eAAe;YACf,eAAe;YACf,iBAAiB;AACpB,SAAA,CAAA,EAAA,CAAA,CAAA;4FAEQ,gBAAgB,EAAA,UAAA,EAAA,CAAA;kBAnB5B,QAAQ;AAAC,YAAA,IAAA,EAAA,CAAA;AACN,oBAAA,YAAY,EAAE;wBACV,mBAAmB;AACtB,qBAAA;AACD,oBAAA,OAAO,EAAE;wBACL,YAAY;wBACZ,WAAW;wBACX,mBAAmB;wBACnB,aAAa;wBACb,aAAa;wBACb,kBAAkB;wBAClB,eAAe;wBACf,cAAc;wBACd,gBAAgB;wBAChB,eAAe;wBACf,eAAe;wBACf,iBAAiB;AACpB,qBAAA;AACJ,iBAAA,CAAA;;;AChBD;MAQa,aAAa,CAAA;IAoBtB,WACY,CAAA,MAAc,EACd,cAA8B,EAC9B,gBAAkC,EAClC,WAAwB,EACxB,MAAiB,EAAA;QAJjB,IAAM,CAAA,MAAA,GAAN,MAAM,CAAQ;QACd,IAAc,CAAA,cAAA,GAAd,cAAc,CAAgB;QAC9B,IAAgB,CAAA,gBAAA,GAAhB,gBAAgB,CAAkB;QAClC,IAAW,CAAA,WAAA,GAAX,WAAW,CAAa;QACxB,IAAM,CAAA,MAAA,GAAN,MAAM,CAAW;QAxB7B,IAAc,CAAA,cAAA,GAAG,cAAc,CAAC;QAChC,IAAe,CAAA,eAAA,GAAG,eAAe,CAAC;QAElC,IAAM,CAAA,MAAA,GAAG,MAAM,CAAC;QAChB,IAAW,CAAA,WAAA,GAAG,WAAW,CAAC;QAG1B,IAAe,CAAA,eAAA,GAAa,CAAC,IAAI,EAAE,MAAM,EAAE,aAAa,EAAE,QAAQ,CAAC,CAAC;QACpE,IAAY,CAAA,YAAA,GAAW,CAAC,CAAC;QACzB,IAAU,CAAA,UAAA,GAAU,EAAE,CAAC;QACvB,IAAU,CAAA,UAAA,GAAY,KAAK,CAAC;QAE5B,IAAS,CAAA,SAAA,GAAU,EAAE,CAAC;KAajB;IAEL,QAAQ,GAAA;QACJ,IAAI,CAAC,KAAK,GAAG,IAAI,CAAC,cAAc,CAAC,UAAU,CAAC,cAAc,CAAC,CAAC;KAC/D;IAED,eAAe,GAAA;AACX,QAAA,KAAK,CACD,IAAI,CAAC,SAAS,CAAC,IAAI,EACnB,IAAI,CAAC,IAAI,CAAC,UAAU,EACpB,SAAS,CAAC,IAAI,CAAC,UAAU,CAAC,aAAa,EAAE,OAAO,CAAC,CACpD,CAAC,IAAI,CACF,SAAS,CAAC,EAAE,CAAC,EACb,SAAS,CAAC,MAAU;AAChB,YAAA,IAAI,CAAC,SAAS,GAAG,EAAE,CAAC;YACpB,IAAI,IAAI,CAAC,UAAU,EAAE;gBACjB,IAAI,CAAC,SAAS,CAAC,IAAI,CAAC,OAAO,GAAG,IAAI,CAAC,WAAW,CAAC,CAAA;AAClD,aAAA;YAED,OAAO,IAAI,CAAC,gBAAgB,CAAC,eAAe,CACxC,IAAI,CAAC,SAAS,CAAC,SAAS,EACxB,IAAI,CAAC,SAAS,CAAC,QAAQ,EACvB,IAAI,CAAC,IAAI,CAAC,MAAM,EAChB,IAAI,CAAC,IAAI,CAAC,SAAS,EACnB,IAAI,CAAC,SAAS,EACd,IAAI,CAAC,KAAK,CACb,CAAC,IAAI,CAAC,UAAU,CAAC,MAAMuF,EAAY,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC;AACjD,SAAC,CAAC,EACF,GAAG,CAAC,CAAC,QAAwB,KAAS;YAClC,IAAI,QAAQ,IAAI,IAAI,EAAE;AAClB,gBAAA,IAAI,CAAC,YAAY,GAAG,CAAC,CAAC;AACtB,gBAAA,OAAO,EAAE,CAAC;AACb,aAAA;AACD,YAAA,IAAI,CAAC,YAAY,GAAG,QAAQ,CAAC,YAAY,CAAC,CAAC;AAC3C,YAAA,OAAO,QAAQ,CAAC,SAAS,CAAC,CAAC;SAC9B,CAAC,CACL,CAAC,SAAS,CAAC,CAAC,UAAU,KAAI;AACvB,YAAA,IAAI,CAAC,UAAU,GAAG,UAAU,CAAC;AACjC,SAAC,CAAC,CAAC;KACN;AAED,IAAA,QAAQ,CAAC,KAAa,EAAA;AAClB,QAAA,IAAI,CAAC,UAAU,GAAG,IAAI,CAAC;AACvB,QAAA,IAAI,CAAC,WAAW,GAAG,KAAK,CAAC;AACzB,QAAA,IAAI,KAAK,CAAC,MAAM,IAAI,CAAC,EAAE;YACnB,IAAI,CAAC,WAAW,EAAE,CAAC;AACtB,SAAA;AAAM,aAAA;AACH,YAAA,IAAI,CAAC,SAAS,CAAC,SAAS,GAAG,CAAC,CAAC;AAChC,SAAA;AACD,QAAA,IAAI,CAAC,UAAU,CAAC,aAAa,CAAC,KAAK,EAAE,CAAC;KACzC;IAED,WAAW,GAAA;AACP,QAAA,IAAI,CAAC,UAAU,GAAG,KAAK,CAAC;AACxB,QAAA,IAAI,CAAC,SAAS,CAAC,WAAW,EAAE,CAAC;KAChC;AAED,IAAA,kBAAkB,CAAC,EAAE,EAAA;QACjB,IAAI,CAAC,MAAM,CAAC,QAAQ,CAAC,CAAC,CAAA,OAAA,EAAU,EAAE,CAAA,KAAA,CAAO,CAAC,CAAC,CAAC;KAC/C;IAED,4BAA4B,CAAC,MAAM,EAAE,QAAQ,EAAA;AACzC,QAAA,IAAI,SAAS,CAAC;QACd,IAAI,MAAM,IAAI,QAAQ,EAAE;YACpB,SAAS,GAAG,IAAI,CAAC,MAAM,CAAC,IAAI,CAAC,2BAA2B,EAAE;AACtD,gBAAA,IAAI,EAAE;AACF,oBAAA,MAAM,EAAE,MAAM;AACjB,iBAAA;AACD,gBAAA,QAAQ,EAAE,OAAO;AACjB,gBAAA,QAAQ,EAAE,OAAO;AACpB,aAAA,CAAC,CAAC;YACH,SAAS,CAAC,WAAW,EAAE,CAAC,SAAS,CAAC,CAAC,SAAS,KAAI;AAC5C,gBAAA,IAAI,SAAS,CAAC,MAAM,IAAI,UAAU,CAAC,UAAU,EAAE;;oBAE3C,IAAI,CAAC,WAAW,CAAC,YAAY,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC;AAE1C,oBAAA,IAAI,CAAC,MAAM,CAAC,QAAQ,CAAC,CAAC,CAAU,OAAA,EAAA,SAAS,CAAC,QAAQ,CAAO,KAAA,CAAA,CAAC,CAAC,CAAC;AAC/D,iBAAA;AACL,aAAC,CAAC,CAAA;AACL,SAAA;AAAM,aAAA;YACH,SAAS,GAAG,IAAI,CAAC,MAAM,CAAC,IAAI,CAAC,2BAA2B,EAAE;AACtD,gBAAA,IAAI,EAAE;AACF,oBAAA,MAAM,EAAE,MAAM;AACd,oBAAA,QAAQ,EAAE,QAAQ;AACrB,iBAAA;AACD,gBAAA,QAAQ,EAAE,OAAO;AACjB,gBAAA,QAAQ,EAAE,OAAO;AACpB,aAAA,CAAC,CAAC;YACH,SAAS,CAAC,WAAW,EAAE,CAAC,SAAS,CAAC,CAAC,SAAS,KAAI;AAC5C,gBAAA,IAAI,SAAS,CAAC,MAAM,IAAI,UAAU,CAAC,UAAU,EAAE;;oBAE3C,IAAI,CAAC,WAAW,CAAC,YAAY,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC;AAE1C,oBAAA,MAAM,CAAC,QAAQ,CAAC,MAAM,EAAE,CAAC;AAC5B,iBAAA;AACL,aAAC,CAAC,CAAA;AACL,SAAA;KACJ;IAED,sBAAsB,CAAC,QAAQ,EAAE,UAAU,EAAA;QACvC,MAAM,MAAM,GAAG,IAAI,CAAC,MAAM,CAAC,IAAI,CAAC,kBAAkB,EAAE;AAChD,YAAA,QAAQ,EAAE,OAAO;AACjB,YAAA,QAAQ,EAAE,OAAO;AACjB,YAAA,IAAI,EAAE;gBACF,IAAI,EAAE,aAAa,CAAC,MAAM;AAC1B,gBAAA,IAAI,EAAE,WAAW;AACjB,gBAAA,MAAM,EAAE,gBAAgB;AACxB,gBAAA,IAAI,EAAE,KAAK,GAAG,UAAU,GAAG,MAAM,GAAG,2EAA2E;gBAC/G,SAAS,EAAE,eAAe,CAAC,gBAAgB;gBAC3C,SAAS,EAAE,eAAe,CAAC,gBAAgB;AAC9C,aAAA;AACJ,SAAA,CAAC,CAAC;QACH,MAAM,CAAC,WAAW,EAAE,CAAC,SAAS,CAAC,GAAG,IAAG;AACjC,YAAA,IAAI,GAAG,EAAE;AACL,gBAAA,IAAI,CAAC,YAAY,CAAC,QAAQ,CAAC,CAAC;AAC/B,aAAA;AACL,SAAC,CAAC,CAAA;KACL;AAED,IAAA,YAAY,CAAC,QAAQ,EAAA;AACjB,QAAA,IAAI,CAAC,gBAAgB,CAAC,YAAY,CAAC,IAAI,CAAC,KAAK,EAAE,QAAQ,CAAC,CAAC,SAAS,CAAC,CAAC,SAAS,KAAI;;YAE7E,IAAI,CAAC,WAAW,CAAC,YAAY,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC;AAE1C,YAAA,IAAI,CAAC,UAAU,CAAC,aAAa,CAAC,KAAK,EAAE,CAAC;AAC1C,SAAC,CAAC,CAAC;KACN;;2GAxJQ,aAAa,EAAA,IAAA,EAAA,CAAA,EAAA,KAAA,EAAAnG,IAAA,CAAA,MAAA,EAAA,EAAA,EAAA,KAAA,EAAAC,IAAA,CAAA,cAAA,EAAA,EAAA,EAAA,KAAA,EAAAc,EAAA,CAAA,gBAAA,EAAA,EAAA,EAAA,KAAA,EAAAC,EAAA,CAAA,WAAA,EAAA,EAAA,EAAA,KAAA,EAAAT,IAAA,CAAA,SAAA,EAAA,CAAA,EAAA,MAAA,EAAA,EAAA,CAAA,eAAA,CAAA,SAAA,EAAA,CAAA,CAAA;AAAb,aAAA,CAAA,IAAA,GAAA,EAAA,CAAA,oBAAA,CAAA,EAAA,UAAA,EAAA,QAAA,EAAA,OAAA,EAAA,SAAA,EAAA,IAAA,EAAA,aAAa,2ZC1B1B,6rIAkFM,EAAA,MAAA,EAAA,CAAA,8FAAA,CAAA,EAAA,UAAA,EAAA,CAAA,EAAA,IAAA,EAAAS,EAAA,CAAA,qBAAA,EAAA,QAAA,EAAA,oBAAA,EAAA,MAAA,EAAA,CAAA,MAAA,EAAA,UAAA,EAAA,OAAA,EAAA,mBAAA,CAAA,EAAA,OAAA,EAAA,CAAA,YAAA,CAAA,EAAA,EAAA,EAAA,IAAA,EAAAC,IAAA,CAAA,eAAA,EAAA,QAAA,EAAA,SAAA,EAAA,MAAA,EAAA,CAAA,SAAA,EAAA,MAAA,EAAA,OAAA,EAAA,MAAA,EAAA,OAAA,EAAA,MAAA,EAAA,QAAA,EAAA,MAAA,EAAA,MAAA,EAAA,MAAA,EAAA,QAAA,EAAA,SAAA,EAAA,QAAA,EAAA,QAAA,EAAA,YAAA,EAAA,WAAA,EAAA,UAAA,CAAA,EAAA,EAAA,EAAA,IAAA,EAAAT,IAAA,CAAA,QAAA,EAAA,QAAA,EAAA,6BAAA,EAAA,QAAA,EAAA,CAAA,UAAA,CAAA,EAAA,EAAA,EAAA,IAAA,EAAA,EAAA,CAAA,aAAA,EAAA,QAAA,EAAA,mBAAA,EAAA,MAAA,EAAA,CAAA,UAAA,EAAA,eAAA,EAAA,uBAAA,EAAA,cAAA,EAAA,iBAAA,EAAA,OAAA,CAAA,EAAA,QAAA,EAAA,CAAA,eAAA,CAAA,EAAA,EAAA,EAAA,IAAA,EAAAA,IAAA,CAAA,YAAA,EAAA,QAAA,EAAA,oCAAA,EAAA,QAAA,EAAA,CAAA,cAAA,CAAA,EAAA,EAAA,EAAA,IAAA,EAAAA,IAAA,CAAA,MAAA,EAAA,QAAA,EAAA,sBAAA,EAAA,QAAA,EAAA,CAAA,QAAA,CAAA,EAAA,EAAA,EAAA,IAAA,EAAAE,IAAA,CAAA,YAAA,EAAA,QAAA,EAAA,eAAA,EAAA,MAAA,EAAA,CAAA,UAAA,CAAA,EAAA,QAAA,EAAA,CAAA,cAAA,CAAA,EAAA,CAAA,EAAA,UAAA,EAAA,CAAA,EAAA,IAAA,EAAA,GAAA,CAAA,SAAA,EAAA,QAAA,EAAA,2BAAA,EAAA,MAAA,EAAA,CAAA,iBAAA,EAAA,mBAAA,EAAA,kBAAA,EAAA,gBAAA,EAAA,oBAAA,EAAA,mBAAA,EAAA,oBAAA,CAAA,EAAA,QAAA,EAAA,CAAA,WAAA,CAAA,EAAA,EAAA,EAAA,IAAA,EAAA,EAAA,CAAA,OAAA,EAAA,QAAA,EAAA,WAAA,EAAA,MAAA,EAAA,CAAA,iBAAA,EAAA,cAAA,EAAA,kBAAA,EAAA,qBAAA,EAAA,eAAA,CAAA,EAAA,OAAA,EAAA,CAAA,eAAA,CAAA,EAAA,QAAA,EAAA,CAAA,SAAA,CAAA,EAAA,EAAA,EAAA,IAAA,EAAAF,IAAA,CAAA,YAAA,EAAA,QAAA,EAAA,gBAAA,EAAA,MAAA,EAAA,CAAA,QAAA,EAAA,cAAA,CAAA,EAAA,EAAA,EAAA,IAAA,EAAAA,IAAA,CAAA,gBAAA,EAAA,QAAA,EAAA,oBAAA,EAAA,EAAA,EAAA,IAAA,EAAAA,IAAA,CAAA,aAAA,EAAA,QAAA,EAAA,sCAAA,EAAA,EAAA,EAAA,IAAA,EAAAA,IAAA,CAAA,UAAA,EAAA,QAAA,EAAA,cAAA,EAAA,EAAA,EAAA,IAAA,EAAAA,IAAA,CAAA,OAAA,EAAA,QAAA,EAAA,wBAAA,EAAA,EAAA,EAAA,IAAA,EAAA,GAAA,CAAA,UAAA,EAAA,QAAA,EAAA,cAAA,EAAA,QAAA,EAAA,CAAA,YAAA,CAAA,EAAA,EAAA,EAAA,IAAA,EAAA,GAAA,CAAA,WAAA,EAAA,QAAA,EAAA,eAAA,EAAA,MAAA,EAAA,CAAA,WAAA,EAAA,eAAA,EAAA,MAAA,EAAA,WAAA,EAAA,WAAA,EAAA,SAAA,CAAA,EAAA,OAAA,EAAA,CAAA,YAAA,CAAA,EAAA,QAAA,EAAA,CAAA,aAAA,CAAA,EAAA,EAAA,EAAA,IAAA,EAAA,GAAA,CAAA,iBAAA,EAAA,QAAA,EAAA,qBAAA,EAAA,EAAA,EAAA,IAAA,EAAA,GAAA,CAAA,eAAA,EAAA,QAAA,EAAA,mBAAA,EAAA,EAAA,EAAA,IAAA,EAAAA,IAAA,CAAA,eAAA,EAAA,QAAA,EAAA,mBAAA,EAAA,MAAA,EAAA,CAAA,iBAAA,EAAA,uBAAA,CAAA,EAAA,EAAA,EAAA,IAAA,EAAAA,IAAA,CAAA,SAAA,EAAA,QAAA,EAAA,aAAA,EAAA,MAAA,EAAA,CAAA,kBAAA,EAAA,eAAA,CAAA,EAAA,EAAA,EAAA,IAAA,EAAAA,IAAA,CAAA,YAAA,EAAA,QAAA,EAAA,2BAAA,EAAA,CAAA,EAAA,KAAA,EAAA,EAAA,WAAA,EAAAQ,EAAA,CAAA,mBAAA,EAAA,EAAA,CAAA,CAAA;4FDxDO,aAAa,EAAA,UAAA,EAAA,CAAA;kBANzB,SAAS;AAAC,YAAA,IAAA,EAAA,CAAA;AACP,oBAAA,QAAQ,EAAE,UAAU;AACpB,oBAAA,WAAW,EAAE,uBAAuB;oBACpC,SAAS,EAAE,CAAC,uBAAuB,CAAC;AACvC,iBAAA,CAAA;iNAiBsB,IAAI,EAAA,CAAA;sBAAtB,SAAS;uBAAC,MAAM,CAAA;gBACO,SAAS,EAAA,CAAA;sBAAhC,SAAS;uBAAC,WAAW,CAAA;gBACG,UAAU,EAAA,CAAA;sBAAlC,SAAS;uBAAC,YAAY,CAAA;gBACC,SAAS,EAAA,CAAA;sBAAhC,SAAS;uBAAC,WAAW,CAAA;;;AEvC1B,MAAMY,QAAM,GAAW;AACnB,IAAA;AACI,QAAA,IAAI,EAAE,EAAE;AACR,QAAA,SAAS,EAAE,aAAa;AAC3B,KAAA;CACJ,CAAC;MAMW,iBAAiB,CAAA;;+GAAjB,iBAAiB,EAAA,IAAA,EAAA,EAAA,EAAA,MAAA,EAAA,EAAA,CAAA,eAAA,CAAA,QAAA,EAAA,CAAA,CAAA;AAAjB,iBAAA,CAAA,IAAA,GAAA,EAAA,CAAA,mBAAA,CAAA,EAAA,UAAA,EAAA,QAAA,EAAA,OAAA,EAAA,SAAA,EAAA,QAAA,EAAA,EAAA,EAAA,IAAA,EAAA,iBAAiB,0CAFhB,YAAY,CAAA,EAAA,CAAA,CAAA;gHAEb,iBAAiB,EAAA,OAAA,EAAA,CAHjB,CAAC,YAAY,CAAC,QAAQ,CAACA,QAAM,CAAC,CAAC,EAC9B,YAAY,CAAA,EAAA,CAAA,CAAA;4FAEb,iBAAiB,EAAA,UAAA,EAAA,CAAA;kBAJ7B,QAAQ;AAAC,YAAA,IAAA,EAAA,CAAA;oBACN,OAAO,EAAE,CAAC,YAAY,CAAC,QAAQ,CAACA,QAAM,CAAC,CAAC;oBACxC,OAAO,EAAE,CAAC,YAAY,CAAC;AAC1B,iBAAA,CAAA;;;ACKD;MAwBa,UAAU,CAAA;;wGAAV,UAAU,EAAA,IAAA,EAAA,EAAA,EAAA,MAAA,EAAA,EAAA,CAAA,eAAA,CAAA,QAAA,EAAA,CAAA,CAAA;yGAAV,UAAU,EAAA,YAAA,EAAA,CAnBf,aAAa,CAAA,EAAA,OAAA,EAAA,CAGb,YAAY;QACZ,iBAAiB;QACjB,kBAAkB;QAClB,kBAAkB;QAClB,SAAS;QACT,iBAAiB;QACjB,aAAa;QACb,eAAe;QACf,eAAe;QACf,cAAc;QACd,kBAAkB;QAClB,aAAa;QACb,eAAe;QACf,gBAAgB,CAAA,EAAA,CAAA,CAAA;AAGX,UAAA,CAAA,IAAA,GAAA,EAAA,CAAA,mBAAA,CAAA,EAAA,UAAA,EAAA,QAAA,EAAA,OAAA,EAAA,SAAA,EAAA,QAAA,EAAA,EAAA,EAAA,IAAA,EAAA,UAAU,EAjBV,OAAA,EAAA,CAAA;YACL,YAAY;YACZ,iBAAiB;YACjB,kBAAkB;YAClB,kBAAkB;YAClB,SAAS;YACT,iBAAiB;YACjB,aAAa;YACb,eAAe;YACf,eAAe;YACf,cAAc;YACd,kBAAkB;YAClB,aAAa;YACb,eAAe;YACf,gBAAgB;AACnB,SAAA,CAAA,EAAA,CAAA,CAAA;4FAEQ,UAAU,EAAA,UAAA,EAAA,CAAA;kBArBtB,QAAQ;AAAC,YAAA,IAAA,EAAA,CAAA;AACN,oBAAA,YAAY,EAAE;wBACV,aAAa;AAChB,qBAAA;AACD,oBAAA,OAAO,EAAE;wBACL,YAAY;wBACZ,iBAAiB;wBACjB,kBAAkB;wBAClB,kBAAkB;wBAClB,SAAS;wBACT,iBAAiB;wBACjB,aAAa;wBACb,eAAe;wBACf,eAAe;wBACf,cAAc;wBACd,kBAAkB;wBAClB,aAAa;wBACb,eAAe;wBACf,gBAAgB;AACnB,qBAAA;AACJ,iBAAA,CAAA;;;AChCD;MAQa,cAAc,CAAA;AAUvB,IAAA,WAAA,CACY,cAA8B,EAC9B,cAA8B,EAC9B,aAA4B,EAAA;QAF5B,IAAc,CAAA,cAAA,GAAd,cAAc,CAAgB;QAC9B,IAAc,CAAA,cAAA,GAAd,cAAc,CAAgB;QAC9B,IAAa,CAAA,aAAA,GAAb,aAAa,CAAe;AARxC,QAAA,IAAA,CAAA,aAAa,GAAG,IAAI,eAAe,EAAE,CAAC;QAEtC,IAAqB,CAAA,qBAAA,GAAY,KAAK,CAAC;KAOlC;IAEL,QAAQ,GAAA;QACJ,IAAI,CAAC,KAAK,GAAG,IAAI,CAAC,cAAc,CAAC,UAAU,CAAC,cAAc,CAAC,CAAC;AAE5D,QAAA,IAAI,CAAC,cAAc,CAAC,MAAM,CAAC,MAAM,CAAC,QAAQ,CAAC,SAAS,CAAC,CAAC,MAAM,KAAI;YAC5D,IAAI,CAAC,QAAQ,GAAG,MAAM,CAAC,GAAG,CAAC,UAAU,CAAC,CAAC;YAEvC,IAAI,CAAC,gCAAgC,EAAE,CAAC;AAC5C,SAAC,CAAC,CAAC;KACN;IAEK,gCAAgC,GAAA;;AAClC,YAAA,IAAI,WAAW,GAAG;gBACd,YAAY,EAAE,CAAC,KAAK,CAAC;aACxB,CAAC;YAEF,IAAI,CAAC,aAAa,IAAqB,MAAM,IAAI,CAAC,aAAa,CAAC,gCAAgC,CAAC,IAAI,CAAC,KAAK,EAAE,IAAI,CAAC,QAAQ,EAAE,WAAW,EAAE,IAAI,CAAC,CAAA,CAAC;YAE/I,IAAI,IAAI,CAAC,aAAa,EAAE;gBACpB,IAAI,CAAC,SAAS,EAAE,CAAC;AACpB,aAAA;SACJ,CAAA,CAAA;AAAA,KAAA;IAED,SAAS,GAAA;AACL,QAAA,MAAM,WAAW,GAAG,CAAC,IAAI,MAAM;YAC3B,IAAI,EAAE,IAAI,CAAC,IAAI;AACf,YAAA,QAAQ,EAAE,IAAI,CAAC,QAAQ,GAAG,IAAI,CAAC,QAAQ,CAAC,GAAG,CAAC,WAAW,CAAC,GAAG,EAAE;YAC7D,IAAI,EAAE,IAAI,CAAC,IAAI;AAClB,SAAA,CAAC,CAAC;QACH,MAAM,SAAS,GAAG,WAAW,CAAC,IAAI,CAAC,aAAa,CAAC,CAAC;QAElD,IAAI,CAAC,eAAe,GAAG;AACnB,YAAA,OAAO,EAAE;AACL,gBAAA,OAAO,EAAE,MAAM;AACf,gBAAA,SAAS,EAAE,WAAW;AACzB,aAAA;AACD,YAAA,MAAM,EAAE;AACJ,gBAAA;AACI,oBAAA,IAAI,EAAE,MAAM;AACZ,oBAAA,EAAE,EAAE,CAAC;AACL,oBAAA,IAAI,EAAE,QAAQ;oBACd,IAAI,EAAE,CAAC,SAAS,CAAC;AACjB,oBAAA,GAAG,EAAE,KAAK;AACV,oBAAA,IAAI,EAAE,KAAK;AACX,oBAAA,MAAM,EAAE,IAAI;AACZ,oBAAA,KAAK,EAAE,KAAK;AACZ,oBAAA,UAAU,EAAE,CAAC;AACb,oBAAA,SAAS,EAAE,UAAU;AACrB,oBAAA,gBAAgB,EAAE,KAAK;AACvB,oBAAA,gBAAgB,EAAE,MAAM;AACxB,oBAAA,SAAS,EAAE;AACP,wBAAA,KAAK,EAAE,CAAC;AACX,qBAAA;AACD,oBAAA,KAAK,EAAE;AACH,wBAAA,eAAe,EAAE,MAAM;AACvB,wBAAA,QAAQ,EAAE,MAAM;AAChB,wBAAA,aAAa,EAAE,QAAQ;AACvB,wBAAA,KAAK,EAAE,OAAO;AACjB,qBAAA;AACD,oBAAA,MAAM,EAAE;AACJ,wBAAA,KAAK,EAAE;AACH,4BAAA,QAAQ,EAAE,OAAO;AACjB,4BAAA,aAAa,EAAE,QAAQ;AACvB,4BAAA,KAAK,EAAE,MAAM;;AAEhB,yBAAA;AACJ,qBAAA;AACD,oBAAA,QAAQ,EAAE;AACN,wBAAA,KAAK,EAAE,YAAY;AACtB,qBAAA;AACD,oBAAA,iBAAiB,EAAE,IAAI;AACvB,oBAAA,iBAAiB,EAAE,GAAG;AACtB,oBAAA,uBAAuB,EAAE,GAAG;AAC/B,iBAAA;AACJ,aAAA;SACJ,CAAA;KAEJ;;4GA5FQ,cAAc,EAAA,IAAA,EAAA,CAAA,EAAA,KAAA,EAAA5B,IAAA,CAAA,cAAA,EAAA,EAAA,EAAA,KAAA,EAAAC,IAAA,CAAA,cAAA,EAAA,EAAA,EAAA,KAAA,EAAA8B,aAAA,EAAA,CAAA,EAAA,MAAA,EAAA,EAAA,CAAA,eAAA,CAAA,SAAA,EAAA,CAAA,CAAA;AAAd,cAAA,CAAA,IAAA,GAAA,EAAA,CAAA,oBAAA,CAAA,EAAA,UAAA,EAAA,QAAA,EAAA,OAAA,EAAA,SAAA,EAAA,IAAA,EAAA,cAAc,iDCnB3B,iRAQM,EAAA,UAAA,EAAA,CAAA,EAAA,IAAA,EAAAf,IAAA,CAAA,mBAAA,EAAA,QAAA,EAAA,oBAAA,EAAA,MAAA,EAAA,CAAA,SAAA,EAAA,OAAA,EAAA,SAAA,EAAA,UAAA,EAAA,OAAA,EAAA,YAAA,EAAA,aAAA,EAAA,aAAA,CAAA,EAAA,OAAA,EAAA,CAAA,WAAA,EAAA,cAAA,EAAA,YAAA,EAAA,eAAA,EAAA,gBAAA,EAAA,gBAAA,EAAA,cAAA,EAAA,gBAAA,EAAA,eAAA,EAAA,gBAAA,EAAA,kBAAA,EAAA,0BAAA,EAAA,qBAAA,EAAA,uBAAA,EAAA,mBAAA,EAAA,eAAA,EAAA,wBAAA,EAAA,sBAAA,EAAA,0BAAA,EAAA,cAAA,EAAA,sBAAA,EAAA,uBAAA,EAAA,uBAAA,EAAA,kBAAA,EAAA,oBAAA,EAAA,uBAAA,EAAA,kBAAA,EAAA,oBAAA,EAAA,uBAAA,EAAA,yBAAA,EAAA,2BAAA,EAAA,YAAA,EAAA,eAAA,EAAA,oBAAA,EAAA,eAAA,EAAA,eAAA,CAAA,EAAA,QAAA,EAAA,CAAA,SAAA,CAAA,EAAA,CAAA,EAAA,CAAA,CAAA;4FDWO,cAAc,EAAA,UAAA,EAAA,CAAA;kBAN1B,SAAS;AAAC,YAAA,IAAA,EAAA,CAAA;AACP,oBAAA,QAAQ,EAAE,WAAW;AACrB,oBAAA,WAAW,EAAE,wBAAwB;AACrC,oBAAA,MAAM,EAAE,EACP;AACJ,iBAAA,CAAA;;;AEbD,MAAMY,QAAM,GAAW;AACnB,IAAA;AACI,QAAA,IAAI,EAAE,EAAE;AACR,QAAA,SAAS,EAAE,cAAc;AAC5B,KAAA;CACJ,CAAC;MAMW,kBAAkB,CAAA;;gHAAlB,kBAAkB,EAAA,IAAA,EAAA,EAAA,EAAA,MAAA,EAAA,EAAA,CAAA,eAAA,CAAA,QAAA,EAAA,CAAA,CAAA;AAAlB,kBAAA,CAAA,IAAA,GAAA,EAAA,CAAA,mBAAA,CAAA,EAAA,UAAA,EAAA,QAAA,EAAA,OAAA,EAAA,SAAA,EAAA,QAAA,EAAA,EAAA,EAAA,IAAA,EAAA,kBAAkB,0CAFjB,YAAY,CAAA,EAAA,CAAA,CAAA;iHAEb,kBAAkB,EAAA,OAAA,EAAA,CAHlB,CAAC,YAAY,CAAC,QAAQ,CAACA,QAAM,CAAC,CAAC,EAC9B,YAAY,CAAA,EAAA,CAAA,CAAA;4FAEb,kBAAkB,EAAA,UAAA,EAAA,CAAA;kBAJ9B,QAAQ;AAAC,YAAA,IAAA,EAAA,CAAA;oBACN,OAAO,EAAE,CAAC,YAAY,CAAC,QAAQ,CAACA,QAAM,CAAC,CAAC;oBACxC,OAAO,EAAE,CAAC,YAAY,CAAC;AAC1B,iBAAA,CAAA;;;MCKY,WAAW,CAAA;;yGAAX,WAAW,EAAA,IAAA,EAAA,EAAA,EAAA,MAAA,EAAA,EAAA,CAAA,eAAA,CAAA,QAAA,EAAA,CAAA,CAAA;0GAAX,WAAW,EAAA,YAAA,EAAA,CAVhB,cAAc,CAAA,EAAA,OAAA,EAAA,CAGd,YAAY;QACZ,kBAAkB,EAAA5B,IAAA,CAAA,gBAAA,CAAA,EAAA,CAAA,CAAA;AAMb,WAAA,CAAA,IAAA,GAAA,EAAA,CAAA,mBAAA,CAAA,EAAA,UAAA,EAAA,QAAA,EAAA,OAAA,EAAA,SAAA,EAAA,QAAA,EAAA,EAAA,EAAA,IAAA,EAAA,WAAW,EARX,OAAA,EAAA,CAAA;YACL,YAAY;YACZ,kBAAkB;YAClB,gBAAgB,CAAC,OAAO,CAAC;AACrB,gBAAA,OAAO,EAAE,MAAM,OAAO,SAAS,CAAC;aACnC,CAAC;AACL,SAAA,CAAA,EAAA,CAAA,CAAA;4FAEQ,WAAW,EAAA,UAAA,EAAA,CAAA;kBAZvB,QAAQ;AAAC,YAAA,IAAA,EAAA,CAAA;AACN,oBAAA,YAAY,EAAE;wBACV,cAAc;AACjB,qBAAA;AACD,oBAAA,OAAO,EAAE;wBACL,YAAY;wBACZ,kBAAkB;wBAClB,gBAAgB,CAAC,OAAO,CAAC;AACrB,4BAAA,OAAO,EAAE,MAAM,OAAO,SAAS,CAAC;yBACnC,CAAC;AACL,qBAAA;AACJ,iBAAA,CAAA;;;ACND;MAQa,aAAa,CAAA;IAOtB,WACY,CAAA,MAAc,EACd,cAA8B,EAC9B,cAA8B,EAC9B,gBAAkC,EAClC,MAAiB,EAAA;QAJjB,IAAM,CAAA,MAAA,GAAN,MAAM,CAAQ;QACd,IAAc,CAAA,cAAA,GAAd,cAAc,CAAgB;QAC9B,IAAc,CAAA,cAAA,GAAd,cAAc,CAAgB;QAC9B,IAAgB,CAAA,gBAAA,GAAhB,gBAAgB,CAAkB;QAClC,IAAM,CAAA,MAAA,GAAN,MAAM,CAAW;AAP7B,QAAA,IAAA,CAAA,QAAQ,GAAG,CAAC,IAAI,eAAe,EAAE,CAAC,CAAC;KAQ9B;IAEL,QAAQ,GAAA;QACJ,IAAI,CAAC,KAAK,GAAG,IAAI,CAAC,cAAc,CAAC,UAAU,CAAC,cAAc,CAAC,CAAC;AAE5D,QAAA,IAAI,CAAC,cAAc,CAAC,MAAM,CAAC,MAAM,CAAC,QAAQ,CAAC,SAAS,CAAC,CAAC,MAAM,KAAI;YAC5D,IAAI,CAAC,QAAQ,GAAG,MAAM,CAAC,GAAG,CAAC,UAAU,CAAC,CAAC;YAEvC,IAAI,CAAC,qBAAqB,EAAE,CAAC;AACjC,SAAC,CAAC,CAAC;KACN;IAED,qBAAqB,GAAA;AACjB,QAAA,IAAI,CAAC,gBAAgB,CAAC,qBAAqB,CAAC,IAAI,CAAC,KAAK,EAAE,IAAI,CAAC,QAAQ,CAAC;AACjE,aAAA,SAAS,CAAC,CAAC,aAAkB,KAAI;AAC9B,YAAA,IAAI,CAAC,QAAQ,GAAG,aAAa,CAAC;SACjC,EACG,KAAK,IAAG;AACJ,YAAA,OAAO,CAAC,GAAG,CAAC,oCAAoC,EAAE,KAAK,CAAC,CAAC;AAC7D,SAAC,CAAC,CAAC;KACd;AAED,IAAA,UAAU,CAAC,MAAW,EAAA;AAClB,QAAA,OAAO,MAAM,IAAI,MAAM,CAAC,QAAQ,IAAI,MAAM,CAAC,QAAQ,CAAC,MAAM,GAAG,CAAC,CAAC;KAClE;AAED,IAAA,SAAS,CAAC,QAAQ,EAAA;AACd,QAAA,IAAI,CAAC,MAAM,CAAC,QAAQ,CAAC,CAAC,CAAA,OAAA,EAAU,IAAI,CAAC,QAAQ,CAAW,QAAA,EAAA,QAAQ,CAAiB,eAAA,CAAA,CAAC,CAAC,CAAC;KACvF;AAED,IAAA,gBAAgB,CAAC,QAAQ,EAAA;AACrB,QAAA,IAAI,CAAC,MAAM,CAAC,QAAQ,CAAC,CAAC,CAAA,OAAA,EAAU,IAAI,CAAC,QAAQ,CAAW,QAAA,EAAA,QAAQ,CAAkB,gBAAA,CAAA,CAAC,CAAC,CAAC;KACxF;IAED,gBAAgB,CAAC,QAAQ,EAAE,MAAM,EAAA;QAC7B,MAAM,MAAM,GAAG,IAAI,CAAC,MAAM,CAAC,IAAI,CAAC,2BAA2B,EACvD;AACI,YAAA,IAAI,EAAE;AACF,gBAAA,MAAM,EAAE,MAAM;AACd,gBAAA,QAAQ,EAAE,QAAQ;gBAClB,QAAQ,EAAE,IAAI,CAAC,QAAQ;AAC1B,aAAA;AACD,YAAA,QAAQ,EAAE,OAAO;AACjB,YAAA,QAAQ,EAAE,OAAO;AACpB,SAAA,CAAC,CAAC;QACP,MAAM,CAAC,WAAW,EAAE;AACf,aAAA,SAAS,CAAC,CAAC,MAAM,KAAI;AAClB,YAAA,IAAI,MAAM,IAAI,UAAU,CAAC,UAAU,EAAE;gBACjC,IAAI,CAAC,qBAAqB,EAAE,CAAC;AAChC,aAAA;AACL,SAAC,CAAC,CAAA;KACT;IAED,gBAAgB,CAAC,QAAQ,EAAE,UAAU,EAAA;QACjC,MAAM,MAAM,GAAG,IAAI,CAAC,MAAM,CAAC,IAAI,CAAC,kBAAkB,EAAE;AAChD,YAAA,QAAQ,EAAE,OAAO;AACjB,YAAA,QAAQ,EAAE,OAAO;AACjB,YAAA,IAAI,EAAE;gBACF,IAAI,EAAE,aAAa,CAAC,MAAM;AAC1B,gBAAA,IAAI,EAAE,WAAW;AACjB,gBAAA,MAAM,EAAE,gBAAgB;AACxB,gBAAA,IAAI,EAAE,iCAAiC,GAAG,UAAU,GAAG,iFAAiF;gBACxI,SAAS,EAAE,eAAe,CAAC,gBAAgB;gBAC3C,SAAS,EAAE,eAAe,CAAC,gBAAgB;AAC9C,aAAA;AACJ,SAAA,CAAC,CAAC;QACH,MAAM,CAAC,WAAW,EAAE,CAAC,SAAS,CAAC,GAAG,IAAG;AACjC,YAAA,IAAI,GAAG,EAAE;AACL,gBAAA,IAAI,CAAC,YAAY,CAAC,QAAQ,CAAC,CAAC;AAC/B,aAAA;AACL,SAAC,CAAC,CAAA;KACL;AAED,IAAA,YAAY,CAAC,QAAQ,EAAA;QACjB,IAAI,CAAC,gBAAgB,CAAC,YAAY,CAAC,IAAI,CAAC,KAAK,EAAE,IAAI,CAAC,QAAQ,EAAE,QAAQ,CAAC,CAAC,SAAS,CAAC,CAAC,SAAoB,KAAI;YACvG,IAAI,CAAC,qBAAqB,EAAE,CAAC;AACjC,SAAC,CAAC,CAAC;KACN;;2GA1FQ,aAAa,EAAA,IAAA,EAAA,CAAA,EAAA,KAAA,EAAAA,IAAA,CAAA,MAAA,EAAA,EAAA,EAAA,KAAA,EAAAA,IAAA,CAAA,cAAA,EAAA,EAAA,EAAA,KAAA,EAAAC,IAAA,CAAA,cAAA,EAAA,EAAA,EAAA,KAAA,EAAA6G,gBAAA,EAAA,EAAA,EAAA,KAAA,EAAA9F,IAAA,CAAA,SAAA,EAAA,CAAA,EAAA,MAAA,EAAA,EAAA,CAAA,eAAA,CAAA,SAAA,EAAA,CAAA,CAAA;AAAb,aAAA,CAAA,IAAA,GAAA,EAAA,CAAA,oBAAA,CAAA,EAAA,UAAA,EAAA,QAAA,EAAA,OAAA,EAAA,SAAA,EAAA,IAAA,EAAA,aAAa,gDCrB1B,w6KAoFM,EAAA,UAAA,EAAA,CAAA,EAAA,IAAA,EAAAT,IAAA,CAAA,iBAAA,EAAA,QAAA,EAAA,qBAAA,EAAA,MAAA,EAAA,CAAA,UAAA,EAAA,UAAA,EAAA,YAAA,EAAA,gBAAA,CAAA,EAAA,OAAA,EAAA,CAAA,QAAA,EAAA,QAAA,EAAA,gBAAA,EAAA,aAAA,EAAA,eAAA,CAAA,EAAA,QAAA,EAAA,CAAA,mBAAA,CAAA,EAAA,EAAA,EAAA,IAAA,EAAAA,IAAA,CAAA,uBAAA,EAAA,QAAA,EAAA,4BAAA,EAAA,MAAA,EAAA,CAAA,UAAA,EAAA,gBAAA,EAAA,iBAAA,CAAA,EAAA,CAAA,EAAA,UAAA,EAAA,CAAA,EAAA,IAAA,EAAAA,IAAA,CAAA,YAAA,EAAA,QAAA,EAAA,eAAA,EAAA,MAAA,EAAA,CAAA,OAAA,EAAA,aAAA,EAAA,gBAAA,EAAA,YAAA,CAAA,EAAA,QAAA,EAAA,CAAA,cAAA,CAAA,EAAA,EAAA,EAAA,IAAA,EAAAU,GAAA,CAAA,OAAA,EAAA,QAAA,EAAA,kBAAA,EAAA,MAAA,EAAA,CAAA,SAAA,EAAA,cAAA,EAAA,eAAA,CAAA,EAAA,EAAA,EAAA,IAAA,EAAAA,GAAA,CAAA,gBAAA,EAAA,QAAA,EAAA,oBAAA,EAAA,MAAA,EAAA,CAAA,yBAAA,EAAA,kBAAA,CAAA,EAAA,EAAA,EAAA,IAAA,EAAAV,IAAA,CAAA,sBAAA,EAAA,QAAA,EAAA,iBAAA,EAAA,EAAA,EAAA,IAAA,EAAAA,IAAA,CAAA,4BAAA,EAAA,QAAA,EAAA,uBAAA,EAAA,EAAA,EAAA,IAAA,EAAAC,GAAA,CAAA,UAAA,EAAA,QAAA,EAAA,cAAA,EAAA,QAAA,EAAA,CAAA,YAAA,CAAA,EAAA,EAAA,EAAA,IAAA,EAAAS,GAAA,CAAA,IAAA,EAAA,QAAA,EAAA,QAAA,EAAA,MAAA,EAAA,CAAA,MAAA,EAAA,UAAA,EAAA,UAAA,CAAA,EAAA,CAAA,EAAA,CAAA,CAAA;4FD/DO,aAAa,EAAA,UAAA,EAAA,CAAA;kBANzB,SAAS;AAAC,YAAA,IAAA,EAAA,CAAA;AACP,oBAAA,QAAQ,EAAE,UAAU;AACpB,oBAAA,WAAW,EAAE,uBAAuB;AACpC,oBAAA,MAAM,EAAE,EACP;AACJ,iBAAA,CAAA;;;AEfD,MAAMW,QAAM,GAAW;AACnB,IAAA;AACI,QAAA,IAAI,EAAE,EAAE;AACR,QAAA,SAAS,EAAE,aAAa;AAC3B,KAAA;CACJ,CAAC;MAMW,iBAAiB,CAAA;;+GAAjB,iBAAiB,EAAA,IAAA,EAAA,EAAA,EAAA,MAAA,EAAA,EAAA,CAAA,eAAA,CAAA,QAAA,EAAA,CAAA,CAAA;AAAjB,iBAAA,CAAA,IAAA,GAAA,EAAA,CAAA,mBAAA,CAAA,EAAA,UAAA,EAAA,QAAA,EAAA,OAAA,EAAA,SAAA,EAAA,QAAA,EAAA,EAAA,EAAA,IAAA,EAAA,iBAAiB,0CAFhB,YAAY,CAAA,EAAA,CAAA,CAAA;gHAEb,iBAAiB,EAAA,OAAA,EAAA,CAHjB,CAAC,YAAY,CAAC,QAAQ,CAACA,QAAM,CAAC,CAAC,EAC9B,YAAY,CAAA,EAAA,CAAA,CAAA;4FAEb,iBAAiB,EAAA,UAAA,EAAA,CAAA;kBAJ7B,QAAQ;AAAC,YAAA,IAAA,EAAA,CAAA;oBACN,OAAO,EAAE,CAAC,YAAY,CAAC,QAAQ,CAACA,QAAM,CAAC,CAAC;oBACxC,OAAO,EAAE,CAAC,YAAY,CAAC;AAC1B,iBAAA,CAAA;;;MCqBY,UAAU,CAAA;;wGAAV,UAAU,EAAA,IAAA,EAAA,EAAA,EAAA,MAAA,EAAA,EAAA,CAAA,eAAA,CAAA,QAAA,EAAA,CAAA,CAAA;yGAAV,UAAU,EAAA,YAAA,EAAA,CAjBf,aAAa,CAAA,EAAA,OAAA,EAAA,CAGb,YAAY;QACZ,iBAAiB;QACjB,wBAAwB;QACxB,WAAW;QACX,mBAAmB;QACnB,aAAa;QACb,aAAa;QACb,kBAAkB;QAClB,eAAe;QACf,gBAAgB;QAChB,eAAe;QACf,kBAAkB,CAAA,EAAA,CAAA,CAAA;AAGb,UAAA,CAAA,IAAA,GAAA,EAAA,CAAA,mBAAA,CAAA,EAAA,UAAA,EAAA,QAAA,EAAA,OAAA,EAAA,SAAA,EAAA,QAAA,EAAA,EAAA,EAAA,IAAA,EAAA,UAAU,EAfV,OAAA,EAAA,CAAA;YACL,YAAY;YACZ,iBAAiB;YACjB,wBAAwB;YACxB,WAAW;YACX,mBAAmB;YACnB,aAAa;YACb,aAAa;YACb,kBAAkB;YAClB,eAAe;YACf,gBAAgB;YAChB,eAAe;YACf,kBAAkB;AACrB,SAAA,CAAA,EAAA,CAAA,CAAA;4FAEQ,UAAU,EAAA,UAAA,EAAA,CAAA;kBAnBtB,QAAQ;AAAC,YAAA,IAAA,EAAA,CAAA;AACN,oBAAA,YAAY,EAAE;wBACV,aAAa;AAChB,qBAAA;AACD,oBAAA,OAAO,EAAE;wBACL,YAAY;wBACZ,iBAAiB;wBACjB,wBAAwB;wBACxB,WAAW;wBACX,mBAAmB;wBACnB,aAAa;wBACb,aAAa;wBACb,kBAAkB;wBAClB,eAAe;wBACf,gBAAgB;wBAChB,eAAe;wBACf,kBAAkB;AACrB,qBAAA;AACJ,iBAAA,CAAA;;;AChCD,MAAMA,QAAM,GAAW,EAAE,CAAC;MAMb,gBAAgB,CAAA;;8GAAhB,gBAAgB,EAAA,IAAA,EAAA,EAAA,EAAA,MAAA,EAAA,EAAA,CAAA,eAAA,CAAA,QAAA,EAAA,CAAA,CAAA;AAAhB,gBAAA,CAAA,IAAA,GAAA,EAAA,CAAA,mBAAA,CAAA,EAAA,UAAA,EAAA,QAAA,EAAA,OAAA,EAAA,SAAA,EAAA,QAAA,EAAA,EAAA,EAAA,IAAA,EAAA,gBAAgB,0CAFf,YAAY,CAAA,EAAA,CAAA,CAAA;+GAEb,gBAAgB,EAAA,OAAA,EAAA,CAHhB,CAAC,YAAY,CAAC,QAAQ,CAACA,QAAM,CAAC,CAAC,EAC9B,YAAY,CAAA,EAAA,CAAA,CAAA;4FAEb,gBAAgB,EAAA,UAAA,EAAA,CAAA;kBAJ5B,QAAQ;AAAC,YAAA,IAAA,EAAA,CAAA;oBACN,OAAO,EAAE,CAAC,YAAY,CAAC,QAAQ,CAACA,QAAM,CAAC,CAAC;oBACxC,OAAO,EAAE,CAAC,YAAY,CAAC;AAC1B,iBAAA,CAAA;;;ACFD;MAQa,YAAY,CAAA;AAUrB,IAAA,WAAA,CACY,MAAc,EACd,cAA8B,EAC9B,cAA8B,EAC9B,aAA4B,EAAA;QAH5B,IAAM,CAAA,MAAA,GAAN,MAAM,CAAQ;QACd,IAAc,CAAA,cAAA,GAAd,cAAc,CAAgB;QAC9B,IAAc,CAAA,cAAA,GAAd,cAAc,CAAgB;QAC9B,IAAa,CAAA,aAAA,GAAb,aAAa,CAAe;AARxC,QAAA,IAAA,CAAA,OAAO,GAAG,IAAI,MAAM,EAAE,CAAC;QAEvB,IAAG,CAAA,GAAA,GAAQ,EAAE,CAAC;KAOT;IAEL,QAAQ,GAAA;QACJ,IAAI,CAAC,KAAK,GAAG,IAAI,CAAC,cAAc,CAAC,UAAU,CAAC,cAAc,CAAC,CAAC;QAE5D,IAAI,CAAC,cAAc,CAAC,QAAQ,CAAC,SAAS,CAAC,CAAC,MAAM,KAAI;YAC9C,IAAI,CAAC,QAAQ,GAAG,MAAM,CAAC,GAAG,CAAC,UAAU,CAAC,CAAC;YAEvC,IAAI,CAAC,aAAa,EAAE,CAAC;YAErB,IAAI,CAAC,GAAG,GAAG;AACP,gBAAA;AACI,oBAAA,IAAI,EAAE,MAAM;AACZ,oBAAA,KAAK,EAAE,qBAAqB;AAC5B,oBAAA,UAAU,EAAE,CAAA,QAAA,EAAW,IAAI,CAAC,QAAQ,CAAO,KAAA,CAAA;AAC9C,iBAAA;AACD,gBAAA;AACI,oBAAA,IAAI,EAAE,WAAW;AACjB,oBAAA,KAAK,EAAE,sBAAsB;AAC7B,oBAAA,UAAU,EAAE,CAAA,QAAA,EAAW,IAAI,CAAC,QAAQ,CAAQ,MAAA,CAAA;AAC/C,iBAAA;aACJ,CAAC;YAEF,IAAI,CAAC,aAAa,EAAE,CAAC;AACzB,SAAC,CAAC,CAAC;QAEH,IAAI,CAAC,MAAM,CAAC,MAAM,CAAC,SAAS,CAAC,CAAC,GAAG,KAAI;YACjC,IAAI,GAAG,YAAY,aAAa,EAAE;gBAC9B,IAAI,CAAC,aAAa,EAAE,CAAC;AACxB,aAAA;AACL,SAAC,CAAC,CAAC;KACN;IAEK,aAAa,GAAA;;AACf,YAAA,IAAI,CAAC,OAAO,IAAY,MAAM,IAAI,CAAC,aAAa,CAAC,aAAa,CAAC,IAAI,CAAC,KAAK,EAAE,IAAI,CAAC,QAAQ,CAAC,CAAA,CAAC;SAC7F,CAAA,CAAA;AAAA,KAAA;IAED,aAAa,GAAA;AACT,QAAA,IAAI,WAAW,GAAG,MAAM,CAAC,QAAQ,CAAC,QAAQ,CAAC;AAE3C,QAAA,KAAK,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,IAAI,CAAC,GAAG,CAAC,MAAM,EAAE,CAAC,EAAE,EAAE;AACtC,YAAA,IAAI,WAAW,CAAC,QAAQ,CAAC,IAAI,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,UAAU,CAAC,EAAE;gBAC9C,IAAI,CAAC,UAAU,GAAG,IAAI,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,UAAU,CAAC;gBACzC,MAAM;AACT,aAAA;AACJ,SAAA;KACJ;;0GA7DQ,YAAY,EAAA,IAAA,EAAA,CAAA,EAAA,KAAA,EAAA5B,IAAA,CAAA,MAAA,EAAA,EAAA,EAAA,KAAA,EAAAA,IAAA,CAAA,cAAA,EAAA,EAAA,EAAA,KAAA,EAAAC,IAAA,CAAA,cAAA,EAAA,EAAA,EAAA,KAAA,EAAAc,EAAA,CAAA,aAAA,EAAA,CAAA,EAAA,MAAA,EAAA,EAAA,CAAA,eAAA,CAAA,SAAA,EAAA,CAAA,CAAA;AAAZ,YAAA,CAAA,IAAA,GAAA,EAAA,CAAA,oBAAA,CAAA,EAAA,UAAA,EAAA,QAAA,EAAA,OAAA,EAAA,SAAA,EAAA,IAAA,EAAA,YAAY,+CCdzB,i6BAwBM,EAAA,UAAA,EAAA,CAAA,EAAA,IAAA,EAAAC,IAAA,CAAA,SAAA,EAAA,QAAA,EAAA,mBAAA,EAAA,MAAA,EAAA,CAAA,OAAA,CAAA,EAAA,QAAA,EAAA,CAAA,cAAA,EAAA,WAAA,CAAA,EAAA,CAAA,EAAA,UAAA,EAAA,CAAA,EAAA,IAAA,EAAAT,GAAA,CAAA,IAAA,EAAA,QAAA,EAAA,QAAA,EAAA,MAAA,EAAA,CAAA,MAAA,EAAA,UAAA,EAAA,UAAA,CAAA,EAAA,EAAA,EAAA,IAAA,EAAAA,GAAA,CAAA,OAAA,EAAA,QAAA,EAAA,kBAAA,EAAA,MAAA,EAAA,CAAA,SAAA,EAAA,cAAA,EAAA,eAAA,CAAA,EAAA,EAAA,EAAA,IAAA,EAAAP,IAAA,CAAA,kBAAA,EAAA,QAAA,EAAA,gCAAA,EAAA,MAAA,EAAA,CAAA,YAAA,EAAA,QAAA,EAAA,aAAA,EAAA,UAAA,EAAA,qBAAA,EAAA,kBAAA,EAAA,oBAAA,EAAA,YAAA,EAAA,OAAA,EAAA,YAAA,CAAA,EAAA,EAAA,EAAA,IAAA,EAAAgB,IAAA,CAAA,UAAA,EAAA,QAAA,EAAA,8BAAA,EAAA,MAAA,EAAA,CAAA,UAAA,EAAA,eAAA,EAAA,UAAA,CAAA,EAAA,QAAA,EAAA,CAAA,YAAA,CAAA,EAAA,EAAA,EAAA,IAAA,EAAAhB,IAAA,CAAA,YAAA,EAAA,QAAA,EAAA,eAAA,EAAA,OAAA,EAAA,CAAA,UAAA,EAAA,YAAA,CAAA,EAAA,QAAA,EAAA,CAAA,QAAA,CAAA,EAAA,CAAA,EAAA,CAAA,CAAA;4FDVO,YAAY,EAAA,UAAA,EAAA,CAAA;kBANxB,SAAS;AAAC,YAAA,IAAA,EAAA,CAAA;AACP,oBAAA,QAAQ,EAAE,SAAS;AACnB,oBAAA,WAAW,EAAE,sBAAsB;AACnC,oBAAA,MAAM,EAAE,EACP;AACJ,iBAAA,CAAA;;;MEOY,SAAS,CAAA;;uGAAT,SAAS,EAAA,IAAA,EAAA,EAAA,EAAA,MAAA,EAAA,EAAA,CAAA,eAAA,CAAA,QAAA,EAAA,CAAA,CAAA;wGAAT,SAAS,EAAA,YAAA,EAAA,CATd,YAAY,CAAA,EAAA,OAAA,EAAA,CAGZ,YAAY;QACZ,gBAAgB;QAChB,SAAS;QACT,aAAa,CAAA,EAAA,CAAA,CAAA;AAGR,SAAA,CAAA,IAAA,GAAA,EAAA,CAAA,mBAAA,CAAA,EAAA,UAAA,EAAA,QAAA,EAAA,OAAA,EAAA,SAAA,EAAA,QAAA,EAAA,EAAA,EAAA,IAAA,EAAA,SAAS,EAPT,OAAA,EAAA,CAAA;YACL,YAAY;YACZ,gBAAgB;YAChB,SAAS;YACT,aAAa;AAChB,SAAA,CAAA,EAAA,CAAA,CAAA;4FAEQ,SAAS,EAAA,UAAA,EAAA,CAAA;kBAXrB,QAAQ;AAAC,YAAA,IAAA,EAAA,CAAA;AACN,oBAAA,YAAY,EAAE;wBACV,YAAY;AACf,qBAAA;AACD,oBAAA,OAAO,EAAE;wBACL,YAAY;wBACZ,gBAAgB;wBAChB,SAAS;wBACT,aAAa;AAChB,qBAAA;AACJ,iBAAA,CAAA;;;ACQD;MAOa,YAAY,CAAA;AAgCrB,IAAA,WAAA,CACY,cAA8B,EAC9B,cAA8B,EAC9B,gBAAkC,EAClC,aAA4B,EAC5B,gBAAkC,EAClC,gBAAkC,EAClC,eAA4B,EAC5B,MAAiB,EAAA;QAPjB,IAAc,CAAA,cAAA,GAAd,cAAc,CAAgB;QAC9B,IAAc,CAAA,cAAA,GAAd,cAAc,CAAgB;QAC9B,IAAgB,CAAA,gBAAA,GAAhB,gBAAgB,CAAkB;QAClC,IAAa,CAAA,aAAA,GAAb,aAAa,CAAe;QAC5B,IAAgB,CAAA,gBAAA,GAAhB,gBAAgB,CAAkB;QAClC,IAAgB,CAAA,gBAAA,GAAhB,gBAAgB,CAAkB;QAClC,IAAe,CAAA,eAAA,GAAf,eAAe,CAAa;QAC5B,IAAM,CAAA,MAAA,GAAN,MAAM,CAAW;QAtC7B,IAAc,CAAA,cAAA,GAAG,cAAc,CAAC;QAChC,IAAe,CAAA,eAAA,GAAG,eAAe,CAAC;QAQlC,IAAS,CAAA,SAAA,GAAU,EAAE,CAAC;QACtB,IAAU,CAAA,UAAA,GAAU,EAAE,CAAC;QACvB,IAAU,CAAA,UAAA,GAAY,KAAK,CAAC;QAC5B,IAAY,CAAA,YAAA,GAAW,CAAC,CAAC;QACzB,IAAO,CAAA,OAAA,GAAY,IAAI,CAAC;QACxB,IAAQ,CAAA,QAAA,GAAY,KAAK,CAAC;QAC1B,IAAgB,CAAA,gBAAA,GAAY,IAAI,CAAC;AACjC,QAAA,IAAA,CAAA,OAAO,GAAG,IAAI,MAAM,EAAE,CAAC;AACvB,QAAA,IAAA,CAAA,yBAAyB,GAAG,IAAI,uBAAuB,EAAE,CAAC;QAE1D,IAAqB,CAAA,qBAAA,GAA4B,EAAE,CAAC;AAEpD,QAAA,IAAA,CAAA,eAAe,GAAa,CAAC,WAAW,EAAE,IAAI,EAAE,MAAM,EAAE,MAAM,EAAE,OAAO,EAAE,MAAM,CAAC,CAAC;KAkB5E;IAEL,QAAQ,GAAA;QACJ,IAAI,CAAC,KAAK,GAAG,IAAI,CAAC,cAAc,CAAC,UAAU,CAAC,cAAc,CAAC,CAAC;QAE5D,IAAI,CAAC,cAAc,CAAC,MAAM,CAAC,SAAS,CAAC,CAAC,KAAK,KAAI;AAC3C,YAAA,IAAI,CAAC,QAAQ,GAAG,KAAK,CAAC,QAAQ,CAAC;AAC/B,YAAA,IAAI,CAAC,QAAQ,GAAG,KAAK,CAAC,QAAQ,CAAC;YAE/B,IAAI,CAAC,aAAa,EAAE,CAAC;AACzB,SAAC,CAAC,CAAA;QAEF,IAAI,CAAC,uBAAuB,EAAE,CAAC;QAC/B,IAAI,CAAC,iBAAiB,EAAE,CAAC;KAC5B;IAED,uBAAuB,GAAA;AACnB,QAAA,IAAI,CAAC,gBAAgB,CAAC,uBAAuB,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC,SAAS,CAAC,CAAC,GAA6B,KAAI;AAClG,YAAA,IAAI,CAAC,yBAAyB,GAAG,GAAG,CAAC;AACrC,YAAA,IAAI,CAAC,WAAW,GAAG,IAAI,CAAC,cAAc,EAAE,CAAC;AAC7C,SAAC,EACG,KAAK,IAAI,OAAO,CAAC,GAAG,CAAC,QAAQ,EAAE,KAAK,CAAC,CACxC,CAAC;KACL;IAED,cAAc,GAAA;AACV,QAAA,IAAI,CAAC,IAAI,CAAC,yBAAyB,CAAC,oBAAoB,EAAE;AACtD,YAAA,OAAO,0BAA0B,CAAC;AACrC,SAAA;AAED,QAAA,IAAI,CAAC,IAAI,CAAC,yBAAyB,CAAC,sBAAsB,EAAE;AACxD,YAAA,OAAO,4BAA4B,CAAC;AACvC,SAAA;AAED,QAAA,OAAO,wBAAwB,CAAC;KACnC;IAEK,aAAa,GAAA;;YACf,IAAI,CAAC,OAAO,GAAG,MAAM,IAAI,CAAC,aAAa,CAAC,aAAa,CAAC,IAAI,CAAC,KAAK,EAAE,IAAI,CAAC,QAAQ,EAAE,IAAI,CAAC,QAAQ,CAAC,CAAC;SACnG,CAAA,CAAA;AAAA,KAAA;IAED,iBAAiB,GAAA;QACb,IAAI,CAAC,eAAe,GAAG,IAAI,CAAC,eAAe,CAAC,KAAK,CAAC;YAC9C,aAAa,EAAE,IAAI,CAAC,eAAe,CAAC,KAAK,CAAC,EAAE,CAAC;AAChD,SAAA,CAAC,CAAC;KACN;AAED,IAAA,IAAI,aAAa,GAAA;QACb,OAAO,IAAI,CAAC,eAAe,CAAC,GAAG,CAAC,eAAe,CAAc,CAAC;KACjE;IAED,eAAe,GAAA;QACX,KAAK,CACD,IAAI,CAAC,SAAS,CAAC,IAAI,EACnB,IAAI,CAAC,IAAI,CAAC,UAAU,EACpB,SAAS,CAAC,IAAI,CAAC,UAAU,CAAC,aAAa,EAAE,OAAO,CAAC,CACpD,CAAC,IAAI,CACF,SAAS,CAAC,EAAE,CAAC,EACb,MAAM,CAAC,MAAM,IAAI,CAAC,oBAAoB,EAAE,CAAC,EACzC,SAAS,CAAC,MAAM,IAAI,CAAC,iBAAiB,EAAE,CAAC,CAC5C,CAAC,SAAS,EAAE,CAAC;KACjB;IAED,iBAAiB,GAAA;QAEb,IAAI,CAAC,eAAe,CAAC,YAAY,CAAC,SAAS,CAAC,MAAK;AAC7C,YAAA,IAAI,CAAC,OAAO,GAAG,OAAO,CAAC,IAAI,CAAC,YAAY,EAAE,IAAI,CAAC,eAAe,CAAC,KAAK,CAAC,CAAC;AAC1E,SAAC,CAAC,CAAC;AAEH,QAAA,IAAI,CAAC,SAAS,GAAG,EAAE,CAAC;QACpB,IAAI,IAAI,CAAC,UAAU,EAAE;YACjB,IAAI,CAAC,SAAS,CAAC,IAAI,CAAC,OAAO,GAAG,IAAI,CAAC,WAAW,CAAC,CAAA;AAClD,SAAA;AAED,QAAA,OAAO,IAAI,CAAC,gBAAgB,CAAC,kBAAkB,CAC3C,IAAI,CAAC,SAAS,CAAC,SAAS,EACxB,IAAI,CAAC,SAAS,CAAC,QAAQ,EACvB,IAAI,CAAC,IAAI,CAAC,MAAM,EAChB,IAAI,CAAC,IAAI,CAAC,SAAS,EACnB,IAAI,CAAC,SAAS,EACd,IAAI,CAAC,KAAK,EACV,IAAI,CAAC,QAAQ,EACb,IAAI,CAAC,QAAQ,CAChB,CAAC,IAAI,CACF,UAAU,CAAC,MAAMmG,EAAY,CAAC,IAAI,CAAC,CAAC,EACpC,GAAG,CAAC,CAAC,QAA+B,KAAI;YACpC,IAAI,QAAQ,IAAI,IAAI,EAAE;AAClB,gBAAA,IAAI,CAAC,YAAY,GAAG,CAAC,CAAC;AACtB,gBAAA,OAAO,EAAE,CAAC;AACb,aAAA;AACD,YAAA,IAAI,CAAC,YAAY,GAAG,QAAQ,CAAC,YAAY,CAAC,CAAC;AAC3C,YAAA,OAAO,QAAQ,CAAC,SAAS,CAAC,CAAC;AAC/B,SAAC,CAAC,EACF,GAAG,CAAC,CAAC,UAAU,KAAI;AACf,YAAA,IAAI,CAAC,UAAU,GAAG,UAAU,CAAC;AAE7B,YAAA,IAAI,CAAC,eAAe,CAAC,KAAK,EAAE,CAAC;AAC7B,YAAA,IAAI,CAAC,aAAa,CAAC,KAAK,EAAE,CAAC;YAE3B,UAAU,CAAC,OAAO,CAAC,CAAC,MAAM,EAAE,KAAK,KAAI;gBACjC,IAAI,CAAC,aAAa,CAAC,IAAI,CAAC,IAAI,CAAC,eAAe,CAAC,KAAK,CAAC;AAC/C,oBAAA,EAAE,EAAE,CAAC,MAAM,CAAC,EAAE,CAAC;oBACf,cAAc,EAAE,CAAC,KAAK,CAAC;AACvB,oBAAA,IAAI,EAAE,CAAC,MAAM,CAAC,IAAI,CAAC;AACnB,oBAAA,SAAS,EAAE,CAAC,MAAM,CAAC,SAAS,CAAC;oBAC7B,cAAc,EAAE,IAAI,CAAC,eAAe,CAAC,KAAK,CAAC,EAAE,CAAC;AACjD,iBAAA,CAAC,CAAC,CAAC;AACR,aAAC,CAAC,CAAC;YAEH,IAAI,CAAC,YAAY,GAAG,IAAI,CAAC,eAAe,CAAC,KAAK,CAAC;AAC/C,YAAA,IAAI,CAAC,OAAO,GAAG,IAAI,CAAC;SAEvB,CAAC,CACL,CAAC;KACL;IAED,oBAAoB,GAAA;AAChB,QAAA,IAAI,IAAI,CAAC,YAAY,IAAI,SAAS,IAAI,CAAC,OAAO,CAAC,IAAI,CAAC,YAAY,EAAE,IAAI,CAAC,eAAe,CAAC,KAAK,CAAC,EAAE;YAC3F,IAAI,CAAC,sBAAsB,EAAE,CAAC;AAC9B,YAAA,OAAO,KAAK,CAAC;AAChB,SAAA;AACD,QAAA,OAAO,IAAI,CAAC;KACf;IAED,sBAAsB,GAAA;QAClB,MAAM,MAAM,GAAG,IAAI,CAAC,MAAM,CAAC,IAAI,CAAC,kBAAkB,EAAE;AAChD,YAAA,QAAQ,EAAE,OAAO;AACjB,YAAA,QAAQ,EAAE,OAAO;AACjB,YAAA,IAAI,EAAE;gBACF,IAAI,EAAE,aAAa,CAAC,YAAY;AAChC,gBAAA,IAAI,EAAE,SAAS;AACf,gBAAA,MAAM,EAAE,UAAU;AAClB,gBAAA,IAAI,EAAE,mEAAmE;gBACzE,SAAS,EAAE,eAAe,CAAC,YAAY;gBACvC,SAAS,EAAE,eAAe,CAAC,aAAa;AAC3C,aAAA;AACJ,SAAA,CAAC,CAAC;QACH,MAAM,CAAC,WAAW,EAAE,CAAC,SAAS,CAAC,GAAG,IAAG;AACjC,YAAA,IAAI,CAAC,gBAAgB,GAAG,GAAG,CAAC;AAC5B,YAAA,IAAI,IAAI,CAAC,gBAAgB,IAAI,IAAI,EAAE;AAC/B,gBAAA,IAAI,CAAC,eAAe,CAAC,KAAK,EAAE,CAAC;AAC7B,gBAAA,IAAI,CAAC,iBAAiB,EAAE,CAAC,SAAS,EAAE,CAAC;AACxC,aAAA;AAAM,iBAAA;AACH,gBAAA,IAAI,CAAC,SAAS,CAAC,WAAW,EAAE,CAAC;AAChC,aAAA;AACL,SAAC,CAAC,CAAA;KACL;AAED,IAAA,QAAQ,CAAC,KAAa,EAAA;AAClB,QAAA,IAAI,CAAC,UAAU,GAAG,IAAI,CAAC;AACvB,QAAA,IAAI,CAAC,WAAW,GAAG,KAAK,CAAC;AACzB,QAAA,IAAI,KAAK,CAAC,MAAM,IAAI,CAAC,EAAE;YACnB,IAAI,CAAC,WAAW,EAAE,CAAC;AACtB,SAAA;AAAM,aAAA;AACH,YAAA,IAAI,CAAC,SAAS,CAAC,SAAS,GAAG,CAAC,CAAC;AAChC,SAAA;AACD,QAAA,IAAI,CAAC,UAAU,CAAC,aAAa,CAAC,KAAK,EAAE,CAAC;KACzC;IAED,WAAW,GAAA;AACP,QAAA,IAAI,CAAC,UAAU,GAAG,KAAK,CAAC;AACxB,QAAA,IAAI,CAAC,SAAS,CAAC,WAAW,EAAE,CAAC;KAChC;IAED,gBAAgB,CAAC,KAAa,EAAE,SAAkB,EAAA;QAC9C,MAAM,WAAW,GAAG,IAAI,CAAC,aAAa,CAAC,EAAE,CAAC,KAAK,CAAC,CAAC;QACjD,WAAW,CAAC,GAAG,CAAC,gBAAgB,CAAC,CAAC,QAAQ,CAAC,SAAS,CAAC,CAAC;AAEtD,QAAA,IAAI,SAAS,EAAE;AACX,YAAA,IAAI,WAAW,CAAC,GAAG,CAAC,gBAAgB,CAAC,CAAC,KAAK,IAAI,WAAW,CAAC,GAAG,CAAC,MAAM,CAAC,CAAC,KAAK,IAAI,OAAO,IAAI,WAAW,CAAC,GAAG,CAAC,WAAW,CAAC,CAAC,KAAK,CAAC,MAAM,GAAG,CAAC,EAAE;AACtI,gBAAA,IAAI,CAAC,oBAAoB,CAAC,WAAW,CAAC,KAAK,CAAC,CAAC;AAChD,aAAA;AACJ,SAAA;AAAM,aAAA;YACH,MAAM,mBAAmB,GAAG,WAAW,CAAC,GAAG,CAAC,gBAAgB,CAAc,CAAC;YAC3E,mBAAmB,CAAC,KAAK,EAAE,CAAC;AAC/B,SAAA;KACJ;AAED,IAAA,oBAAoB,CAAC,MAAM,EAAA;QACvB,MAAM,MAAM,GAAG,IAAI,CAAC,MAAM,CAAC,IAAI,CAAC,mBAAmB,EAC/C;AACI,YAAA,IAAI,EAAE;AACF,gBAAA,UAAU,EAAE,MAAM;gBAClB,QAAQ,EAAE,IAAI,CAAC,QAAQ;AAC1B,aAAA;AACD,YAAA,QAAQ,EAAE,MAAM;AAChB,YAAA,QAAQ,EAAE,MAAM;AAChB,YAAA,MAAM,EAAE,MAAM;YACd,QAAQ,EAAE,EAAE,KAAK,EAAE,MAAM,EAAE,GAAG,EAAE,KAAK,EAAE;AAC1C,SAAA,CAAC,CAAC;QACP,MAAM,CAAC,WAAW,EAAE;AACf,aAAA,SAAS,CAAC,CAAC,SAAS,KAAI;YACrB,MAAM,WAAW,GAAG,IAAI,CAAC,mBAAmB,CAAC,MAAM,CAAC,EAAE,CAAC,CAAC;AAExD,YAAA,IAAI,SAAS,IAAI,SAAS,CAAC,oBAAoB,EAAE;AAC7C,gBAAA,IAAI,WAAW,IAAI,CAAC,CAAC,EAAE;oBACnB,MAAM,oBAAoB,GAAG,IAAI,CAAC,eAAe,CAAC,GAAG,CAAC,eAAe,CAAc,CAAC;AACpF,oBAAA,MAAM,qBAAqB,GAAG,oBAAoB,CAAC,EAAE,CAAC,WAAW,CAAC,CAAC,GAAG,CAAC,gBAAgB,CAAc,CAAC;oBACtG,qBAAqB,CAAC,KAAK,EAAE,CAAC;AAE9B,oBAAA,SAAS,CAAC,oBAAoB,CAAC,OAAO,CAAC,WAAW,IAAG;AACjD,wBAAA,MAAM,WAAW,GAAG,WAAW,CAAC,WAAW,CAAC;wBAC5C,MAAM,QAAQ,GAAG,WAAW,CAAC,OAAO,CAAC,GAAG,CAAC,OAAO,IAAG;4BAC/C,OAAO,IAAI,CAAC,eAAe,CAAC,KAAK,CAAC,OAAO,CAAC,CAAC;AAC/C,yBAAC,CAAC,CAAC;AAEH,wBAAA,MAAM,YAAY,GAAG,IAAI,CAAC,eAAe,CAAC,KAAK,CAAC;4BAC5C,WAAW;4BACX,OAAO,EAAE,IAAI,CAAC,eAAe,CAAC,KAAK,CAAC,QAAQ,CAAC;AAChD,yBAAA,CAAC,CAAC;AAEH,wBAAA,qBAAqB,CAAC,IAAI,CAAC,YAAY,CAAC,CAAC;AAC7C,qBAAC,CAAC,CAAC;AAEN,iBAAA;AACJ,aAAA;YAED,IAAI,SAAS,IAAI,SAAS,CAAC,oBAAoB,CAAC,MAAM,IAAI,CAAC,EAAE;AACzD,gBAAA,IAAI,WAAW,IAAI,CAAC,CAAC,EAAE;oBACnB,MAAM,qBAAqB,GAAG,IAAI,CAAC,eAAe,CAAC,GAAG,CAAC,eAAe,CAAC,CAAC,UAAU,CAAC,CAAC,WAAW,CAAC,CAAC,GAAG,CAAC,gBAAgB,CAAC,CAAC;AACvH,oBAAA,qBAAqB,CAAC,QAAQ,CAAC,KAAK,CAAC,CAAC;AACzC,iBAAA;AACJ,aAAA;AACL,SAAC,CAAC,CAAA;KACT;AAED,IAAA,mBAAmB,CAAC,EAAE,EAAA;QAClB,OAAO,IAAI,CAAC,eAAe,CAAC,GAAG,CAAC,eAAe,CAAC,CAAC,UAAU,CAAC;AACvD,aAAA,SAAS,CAAC,CAAC,CAAM,KAAK,CAAC,CAAC,KAAK,CAAC,EAAE,IAAI,EAAE,CAAC,CAAC;KAChD;IAED,iBAAiB,GAAA;QACb,MAAM,kBAAkB,GAAG,IAAI,CAAC,eAAe,CAAC,GAAG,CAAC,eAAe,CAAc,CAAC;QAElF,kBAAkB,CAAC,QAAQ,CAAC,OAAO,CAAC,CAAC,WAAsB,KAAI;YAC3D,MAAM,cAAc,GAAG,WAAW,CAAC,GAAG,CAAC,gBAAgB,CAAC,CAAC,KAAK,CAAC;YAC/D,MAAM,IAAI,GAAG,WAAW,CAAC,GAAG,CAAC,MAAM,CAAC,CAAC,KAAK,CAAC;YAC3C,MAAM,qBAAqB,GAAG,WAAW,CAAC,GAAG,CAAC,gBAAgB,CAAc,CAAC;AAE7E,YAAA,IAAI,IAAI,IAAI,OAAO,IAAI,CAAC,cAAc,EAAE;gBACpC,qBAAqB,CAAC,KAAK,EAAE,CAAC;AACjC,aAAA;AAED,YAAA,WAAW,CAAC,aAAa,CAAC,WAAW,CAAC,CAAC;AAC3C,SAAC,CAAC,CAAC;AAEH,QAAA,IAAI,CAAC,gBAAgB,CAAC,iBAAiB,CAAC,IAAI,CAAC,KAAK,EAAE,IAAI,CAAC,QAAQ,EAAE,IAAI,CAAC,QAAQ,EAAE,IAAI,CAAC,eAAe,CAAC,WAAW,EAAE,CAAC,CAAC,SAAS,CAAC,CAAC,gBAA2B,KAAI;AAC5J,YAAA,IAAI,CAAC,gBAAgB,CAAC,IAAI,EAAE,CAAC;SAChC,EACG,KAAK,IAAG;AACJ,YAAA,OAAO,CAAC,GAAG,CAAC,iCAAiC,EAAE,KAAK,CAAC,CAAC;AAC1D,SAAC,CAAC,CAAC;KACV;;0GArSQ,YAAY,EAAA,IAAA,EAAA,CAAA,EAAA,KAAA,EAAAnG,IAAA,CAAA,cAAA,EAAA,EAAA,EAAA,KAAA,EAAAC,IAAA,CAAA,cAAA,EAAA,EAAA,EAAA,KAAA,EAAA,EAAA,CAAA,gBAAA,EAAA,EAAA,EAAA,KAAA,EAAAwC,aAAA,EAAA,EAAA,EAAA,KAAA,EAAAd,gBAAA,EAAA,EAAA,EAAA,KAAA,EAAAoF,gBAAA,EAAA,EAAA,EAAA,KAAA,EAAAvG,IAAA,CAAA,WAAA,EAAA,EAAA,EAAA,KAAA,EAAAC,IAAA,CAAA,SAAA,EAAA,CAAA,EAAA,MAAA,EAAA,EAAA,CAAA,eAAA,CAAA,SAAA,EAAA,CAAA,CAAA;AAAZ,YAAA,CAAA,IAAA,GAAA,EAAA,CAAA,oBAAA,CAAA,EAAA,UAAA,EAAA,QAAA,EAAA,OAAA,EAAA,SAAA,EAAA,IAAA,EAAA,YAAY,0ZClCzB,i6NA8HM,EAAA,MAAA,EAAA,CAAA,oNAAA,CAAA,EAAA,UAAA,EAAA,CAAA,EAAA,IAAA,EAAA,EAAA,CAAA,qBAAA,EAAA,QAAA,EAAA,oBAAA,EAAA,MAAA,EAAA,CAAA,MAAA,EAAA,UAAA,EAAA,OAAA,EAAA,mBAAA,CAAA,EAAA,OAAA,EAAA,CAAA,YAAA,CAAA,EAAA,EAAA,EAAA,IAAA,EAAAC,IAAA,CAAA,QAAA,EAAA,QAAA,EAAA,6BAAA,EAAA,QAAA,EAAA,CAAA,UAAA,CAAA,EAAA,EAAA,EAAA,IAAA,EAAAC,KAAA,CAAA,WAAA,EAAA,QAAA,EAAA,cAAA,EAAA,MAAA,EAAA,CAAA,eAAA,EAAA,OAAA,EAAA,UAAA,EAAA,YAAA,EAAA,iBAAA,EAAA,IAAA,EAAA,eAAA,EAAA,MAAA,EAAA,UAAA,EAAA,SAAA,EAAA,UAAA,EAAA,eAAA,EAAA,kBAAA,EAAA,OAAA,CAAA,EAAA,OAAA,EAAA,CAAA,QAAA,EAAA,qBAAA,CAAA,EAAA,QAAA,EAAA,CAAA,aAAA,CAAA,EAAA,EAAA,EAAA,IAAA,EAAAC,KAAA,CAAA,uBAAA,EAAA,QAAA,EAAA,iBAAA,EAAA,MAAA,EAAA,CAAA,WAAA,EAAA,WAAA,EAAA,qBAAA,EAAA,qBAAA,EAAA,cAAA,EAAA,MAAA,EAAA,SAAA,EAAA,OAAA,EAAA,aAAA,CAAA,EAAA,EAAA,EAAA,IAAA,EAAAC,EAAA,CAAA,aAAA,EAAA,QAAA,EAAA,mBAAA,EAAA,MAAA,EAAA,CAAA,UAAA,EAAA,eAAA,EAAA,uBAAA,EAAA,cAAA,EAAA,iBAAA,EAAA,OAAA,CAAA,EAAA,QAAA,EAAA,CAAA,eAAA,CAAA,EAAA,EAAA,EAAA,IAAA,EAAAC,EAAA,CAAA,SAAA,EAAA,QAAA,EAAA,4LAAA,EAAA,MAAA,EAAA,CAAA,UAAA,EAAA,eAAA,EAAA,OAAA,CAAA,EAAA,QAAA,EAAA,CAAA,WAAA,CAAA,EAAA,EAAA,EAAA,IAAA,EAAAJ,IAAA,CAAA,YAAA,EAAA,QAAA,EAAA,oCAAA,EAAA,QAAA,EAAA,CAAA,cAAA,CAAA,EAAA,EAAA,EAAA,IAAA,EAAAA,IAAA,CAAA,MAAA,EAAA,QAAA,EAAA,sBAAA,EAAA,QAAA,EAAA,CAAA,QAAA,CAAA,EAAA,EAAA,EAAA,IAAA,EAAA2B,IAAA,CAAA,YAAA,EAAA,QAAA,EAAA,eAAA,EAAA,MAAA,EAAA,CAAA,UAAA,CAAA,EAAA,QAAA,EAAA,CAAA,cAAA,CAAA,EAAA,CAAA,EAAA,UAAA,EAAA,CAAA,EAAA,IAAA,EAAAC,GAAA,CAAA,IAAA,EAAA,QAAA,EAAA,QAAA,EAAA,MAAA,EAAA,CAAA,MAAA,EAAA,UAAA,EAAA,UAAA,CAAA,EAAA,EAAA,EAAA,IAAA,EAAAtC,IAAA,CAAA,kBAAA,EAAA,QAAA,EAAA,gCAAA,EAAA,MAAA,EAAA,CAAA,YAAA,EAAA,QAAA,EAAA,aAAA,EAAA,UAAA,EAAA,qBAAA,EAAA,kBAAA,EAAA,oBAAA,EAAA,YAAA,EAAA,OAAA,EAAA,YAAA,CAAA,EAAA,EAAA,EAAA,IAAA,EAAAQ,IAAA,CAAA,aAAA,EAAA,QAAA,EAAA,8CAAA,EAAA,EAAA,EAAA,IAAA,EAAAA,IAAA,CAAA,oBAAA,EAAA,QAAA,EAAA,0FAAA,EAAA,EAAA,EAAA,IAAA,EAAAA,IAAA,CAAA,kBAAA,EAAA,QAAA,EAAA,aAAA,EAAA,MAAA,EAAA,CAAA,WAAA,CAAA,EAAA,OAAA,EAAA,CAAA,UAAA,CAAA,EAAA,QAAA,EAAA,CAAA,QAAA,CAAA,EAAA,EAAA,EAAA,IAAA,EAAAK,EAAA,CAAA,OAAA,EAAA,QAAA,EAAA,WAAA,EAAA,MAAA,EAAA,CAAA,iBAAA,EAAA,cAAA,EAAA,kBAAA,EAAA,qBAAA,EAAA,eAAA,CAAA,EAAA,OAAA,EAAA,CAAA,eAAA,CAAA,EAAA,QAAA,EAAA,CAAA,SAAA,CAAA,EAAA,EAAA,EAAA,IAAA,EAAAH,IAAA,CAAA,YAAA,EAAA,QAAA,EAAA,gBAAA,EAAA,MAAA,EAAA,CAAA,QAAA,EAAA,cAAA,CAAA,EAAA,EAAA,EAAA,IAAA,EAAAA,IAAA,CAAA,gBAAA,EAAA,QAAA,EAAA,oBAAA,EAAA,EAAA,EAAA,IAAA,EAAAA,IAAA,CAAA,aAAA,EAAA,QAAA,EAAA,sCAAA,EAAA,EAAA,EAAA,IAAA,EAAAA,IAAA,CAAA,UAAA,EAAA,QAAA,EAAA,cAAA,EAAA,EAAA,EAAA,IAAA,EAAAA,IAAA,CAAA,OAAA,EAAA,QAAA,EAAA,wBAAA,EAAA,EAAA,EAAA,IAAA,EAAAF,IAAA,CAAA,eAAA,EAAA,QAAA,EAAA,2CAAA,EAAA,EAAA,EAAA,IAAA,EAAAA,IAAA,CAAA,oBAAA,EAAA,QAAA,EAAA,eAAA,EAAA,MAAA,EAAA,CAAA,UAAA,EAAA,aAAA,EAAA,SAAA,CAAA,EAAA,OAAA,EAAA,CAAA,eAAA,CAAA,EAAA,QAAA,EAAA,CAAA,QAAA,CAAA,EAAA,EAAA,EAAA,IAAA,EAAAI,KAAA,CAAA,gBAAA,EAAA,QAAA,EAAA,WAAA,EAAA,MAAA,EAAA,CAAA,gBAAA,EAAA,uBAAA,EAAA,SAAA,EAAA,aAAA,EAAA,iBAAA,EAAA,kBAAA,EAAA,kBAAA,EAAA,cAAA,EAAA,4BAAA,EAAA,4BAAA,EAAA,cAAA,CAAA,EAAA,OAAA,EAAA,CAAA,SAAA,EAAA,UAAA,CAAA,EAAA,QAAA,EAAA,CAAA,SAAA,CAAA,EAAA,EAAA,EAAA,IAAA,EAAA2B,GAAA,CAAA,UAAA,EAAA,QAAA,EAAA,cAAA,EAAA,QAAA,EAAA,CAAA,YAAA,CAAA,EAAA,EAAA,EAAA,IAAA,EAAA,GAAA,CAAA,kBAAA,EAAA,QAAA,EAAA,sBAAA,EAAA,MAAA,EAAA,CAAA,oBAAA,EAAA,4BAAA,CAAA,EAAA,OAAA,EAAA,CAAA,0BAAA,CAAA,EAAA,EAAA,EAAA,IAAA,EAAA7B,IAAA,CAAA,eAAA,EAAA,QAAA,EAAA,mBAAA,EAAA,MAAA,EAAA,CAAA,iBAAA,EAAA,uBAAA,CAAA,EAAA,EAAA,EAAA,IAAA,EAAAA,IAAA,CAAA,SAAA,EAAA,QAAA,EAAA,aAAA,EAAA,MAAA,EAAA,CAAA,kBAAA,EAAA,eAAA,CAAA,EAAA,EAAA,EAAA,IAAA,EAAAA,IAAA,CAAA,YAAA,EAAA,QAAA,EAAA,2BAAA,EAAA,EAAA,EAAA,IAAA,EAAA4B,GAAA,CAAA,OAAA,EAAA,QAAA,EAAA,WAAA,EAAA,MAAA,EAAA,CAAA,OAAA,EAAA,SAAA,CAAA,EAAA,CAAA,EAAA,KAAA,EAAA,EAAA,WAAA,EAAA,EAAA,CAAA,mBAAA,EAAA,WAAA,EAAAA,GAAA,CAAA,aAAA,EAAA,EAAA,CAAA,CAAA;4FD5FO,YAAY,EAAA,UAAA,EAAA,CAAA;kBALxB,SAAS;AAAC,YAAA,IAAA,EAAA,CAAA;AACP,oBAAA,QAAQ,EAAE,SAAS;AACnB,oBAAA,WAAW,EAAE,sBAAsB;oBACnC,SAAS,EAAE,CAAC,sBAAsB,CAAC;AACtC,iBAAA,CAAA;4SA4BsB,IAAI,EAAA,CAAA;sBAAtB,SAAS;uBAAC,MAAM,CAAA;gBACO,SAAS,EAAA,CAAA;sBAAhC,SAAS;uBAAC,WAAW,CAAA;gBACG,UAAU,EAAA,CAAA;sBAAlC,SAAS;uBAAC,YAAY,CAAA;gBACC,SAAS,EAAA,CAAA;sBAAhC,SAAS;uBAAC,WAAW,CAAA;;;AE3D1B,MAAMV,QAAM,GAAW;AACnB,IAAA;AACI,QAAA,IAAI,EAAE,EAAE;AACR,QAAA,SAAS,EAAE,YAAY;AAC1B,KAAA;CACJ,CAAC;MAMW,gBAAgB,CAAA;;8GAAhB,gBAAgB,EAAA,IAAA,EAAA,EAAA,EAAA,MAAA,EAAA,EAAA,CAAA,eAAA,CAAA,QAAA,EAAA,CAAA,CAAA;AAAhB,gBAAA,CAAA,IAAA,GAAA,EAAA,CAAA,mBAAA,CAAA,EAAA,UAAA,EAAA,QAAA,EAAA,OAAA,EAAA,SAAA,EAAA,QAAA,EAAA,EAAA,EAAA,IAAA,EAAA,gBAAgB,0CAFf,YAAY,CAAA,EAAA,CAAA,CAAA;+GAEb,gBAAgB,EAAA,OAAA,EAAA,CAHhB,CAAC,YAAY,CAAC,QAAQ,CAACA,QAAM,CAAC,CAAC,EAC9B,YAAY,CAAA,EAAA,CAAA,CAAA;4FAEb,gBAAgB,EAAA,UAAA,EAAA,CAAA;kBAJ5B,QAAQ;AAAC,YAAA,IAAA,EAAA,CAAA;oBACN,OAAO,EAAE,CAAC,YAAY,CAAC,QAAQ,CAACA,QAAM,CAAC,CAAC;oBACxC,OAAO,EAAE,CAAC,YAAY,CAAC;AAC1B,iBAAA,CAAA;;;ACUD;MA4Ba,SAAS,CAAA;;uGAAT,SAAS,EAAA,IAAA,EAAA,EAAA,EAAA,MAAA,EAAA,EAAA,CAAA,eAAA,CAAA,QAAA,EAAA,CAAA,CAAA;wGAAT,SAAS,EAAA,YAAA,EAAA,CAxBd,YAAY,CAAA,EAAA,OAAA,EAAA,CAGZ,YAAY;QACZ,gBAAgB;QAChB,gBAAgB;QAChB,WAAW;QACX,mBAAmB;QACnB,aAAa;QACb,aAAa;QACb,eAAe;QACf,eAAe;QACf,cAAc;QACd,aAAa;QACb,kBAAkB;QAClB,eAAe;QACf,gBAAgB;QAChB,iBAAiB;QACjB,kBAAkB;QAClB,kBAAkB;QAClB,eAAe;QACf,aAAa,CAAA,EAAA,CAAA,CAAA;AAGR,SAAA,CAAA,IAAA,GAAA,EAAA,CAAA,mBAAA,CAAA,EAAA,UAAA,EAAA,QAAA,EAAA,OAAA,EAAA,SAAA,EAAA,QAAA,EAAA,EAAA,EAAA,IAAA,EAAA,SAAS,EAtBT,OAAA,EAAA,CAAA;YACL,YAAY;YACZ,gBAAgB;YAChB,gBAAgB;YAChB,WAAW;YACX,mBAAmB;YACnB,aAAa;YACb,aAAa;YACb,eAAe;YACf,eAAe;YACf,cAAc;YACd,aAAa;YACb,kBAAkB;YAClB,eAAe;YACf,gBAAgB;YAChB,iBAAiB;YACjB,kBAAkB;YAClB,kBAAkB;YAClB,eAAe;YACf,aAAa;AAChB,SAAA,CAAA,EAAA,CAAA,CAAA;4FAEQ,SAAS,EAAA,UAAA,EAAA,CAAA;kBA1BrB,QAAQ;AAAC,YAAA,IAAA,EAAA,CAAA;AACN,oBAAA,YAAY,EAAE;wBACV,YAAY;AACf,qBAAA;AACD,oBAAA,OAAO,EAAE;wBACL,YAAY;wBACZ,gBAAgB;wBAChB,gBAAgB;wBAChB,WAAW;wBACX,mBAAmB;wBACnB,aAAa;wBACb,aAAa;wBACb,eAAe;wBACf,eAAe;wBACf,cAAc;wBACd,aAAa;wBACb,kBAAkB;wBAClB,eAAe;wBACf,gBAAgB;wBAChB,iBAAiB;wBACjB,kBAAkB;wBAClB,kBAAkB;wBAClB,eAAe;wBACf,aAAa;AAChB,qBAAA;AACJ,iBAAA,CAAA;;;AC/BD;MAOa,aAAa,CAAA;IAyBtB,WACY,CAAA,cAA8B,EAC9B,cAA8B,EAC9B,gBAAkC,EAClC,aAA4B,EAC5B,MAAiB,EAAA;QAJjB,IAAc,CAAA,cAAA,GAAd,cAAc,CAAgB;QAC9B,IAAc,CAAA,cAAA,GAAd,cAAc,CAAgB;QAC9B,IAAgB,CAAA,gBAAA,GAAhB,gBAAgB,CAAkB;QAClC,IAAa,CAAA,aAAA,GAAb,aAAa,CAAe;QAC5B,IAAM,CAAA,MAAA,GAAN,MAAM,CAAW;QA5B7B,IAAc,CAAA,cAAA,GAAG,cAAc,CAAC;QAOhC,IAAS,CAAA,SAAA,GAAU,EAAE,CAAC;QACtB,IAAU,CAAA,UAAA,GAAU,EAAE,CAAC;QACvB,IAAU,CAAA,UAAA,GAAY,KAAK,CAAC;QAC5B,IAAY,CAAA,YAAA,GAAW,CAAC,CAAC;QAEzB,IAAe,CAAA,eAAA,GAAa,CAAC,UAAU,EAAE,MAAM,EAAE,QAAQ,CAAC,CAAC;QAE3D,IAAY,CAAA,YAAA,GAAQ,EAAE,CAAC;QACvB,IAAS,CAAA,SAAA,GAAG,IAAI,cAAc,CAAC,IAAI,EAAE,EAAE,CAAC,CAAC;AAEzC,QAAA,IAAA,CAAA,OAAO,GAAG,IAAI,MAAM,EAAE,CAAC;KAYlB;IAEL,QAAQ,GAAA;QACJ,IAAI,CAAC,KAAK,GAAG,IAAI,CAAC,cAAc,CAAC,UAAU,CAAC,cAAc,CAAC,CAAC;QAE5D,IAAI,CAAC,cAAc,CAAC,MAAM,CAAC,SAAS,CAAC,CAAC,KAAK,KAAI;AAC3C,YAAA,IAAI,CAAC,QAAQ,GAAG,KAAK,CAAC,QAAQ,CAAC;AAC/B,YAAA,IAAI,CAAC,QAAQ,GAAG,KAAK,CAAC,QAAQ,CAAC;YAE/B,IAAI,CAAC,aAAa,EAAE,CAAC;AACzB,SAAC,CAAC,CAAA;KACL;IAEK,aAAa,GAAA;;YACf,IAAI,CAAC,OAAO,GAAG,MAAM,IAAI,CAAC,aAAa,CAAC,aAAa,CAAC,IAAI,CAAC,KAAK,EAAE,IAAI,CAAC,QAAQ,EAAE,IAAI,CAAC,QAAQ,CAAC,CAAC;SACnG,CAAA,CAAA;AAAA,KAAA;IAED,eAAe,GAAA;AAEX,QAAA,IAAI,CAAC,SAAS,CAAC,KAAK,EAAE,CAAC;AAEvB,QAAA,KAAK,CACD,IAAI,CAAC,SAAS,CAAC,IAAI,EACnB,SAAS,CAAC,IAAI,CAAC,UAAU,CAAC,aAAa,EAAE,OAAO,CAAC,CACpD,CAAC,IAAI,CACF,SAAS,CAAC,EAAE,CAAC,EACb,SAAS,CAAC,MAAU;AAEhB,YAAA,IAAI,CAAC,SAAS,GAAG,EAAE,CAAC;YACpB,IAAI,IAAI,CAAC,UAAU,EAAE;gBACjB,IAAI,CAAC,SAAS,CAAC,IAAI,CAAC,OAAO,GAAG,IAAI,CAAC,WAAW,CAAC,CAAA;AAClD,aAAA;YAED,OAAO,IAAI,CAAC,gBAAgB,CAAC,gBAAgB,CACzC,IAAI,CAAC,SAAS,CAAC,SAAS,EACxB,IAAI,CAAC,SAAS,CAAC,QAAQ,EACvB,IAAI,CAAC,SAAS,EACd,IAAI,CAAC,KAAK,EACV,IAAI,CAAC,QAAQ,EACb,IAAI,CAAC,QAAQ,CAChB,CAAC,IAAI,CAAC,UAAU,CAAC,MAAMuE,EAAY,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC;AACjD,SAAC,CAAC,EACF,GAAG,CAAC,CAAC,QAA+B,KAAS;YACzC,IAAI,QAAQ,IAAI,IAAI,EAAE;AAClB,gBAAA,IAAI,CAAC,YAAY,GAAG,CAAC,CAAC;AACtB,gBAAA,OAAO,EAAE,CAAC;AACb,aAAA;AACD,YAAA,IAAI,CAAC,YAAY,GAAG,QAAQ,CAAC,YAAY,CAAC,CAAC;AAC3C,YAAA,OAAO,QAAQ,CAAC,SAAS,CAAC,CAAC;SAC9B,CAAC,CACL,CAAC,SAAS,CAAC,CAAC,UAAU,KAAI;AACvB,YAAA,IAAI,CAAC,UAAU,GAAG,UAAU,CAAC;AAE7B,YAAA,UAAU,CAAC,OAAO,CAAC,CAAC,MAAM,KAAI;gBAC1B,IAAI,CAAC,YAAY,CAAC,IAAI,CAAC,MAAM,CAAC,EAAE,CAAC,CAAC;AACtC,aAAC,CAAC,CAAC;AACP,SAAC,CAAC,CAAC;KACN;AAED,IAAA,QAAQ,CAAC,KAAa,EAAA;AAClB,QAAA,IAAI,CAAC,UAAU,GAAG,IAAI,CAAC;AACvB,QAAA,IAAI,CAAC,WAAW,GAAG,KAAK,CAAC;AACzB,QAAA,IAAI,KAAK,CAAC,MAAM,IAAI,CAAC,EAAE;YACnB,IAAI,CAAC,WAAW,EAAE,CAAC;AACtB,SAAA;AAAM,aAAA;AACH,YAAA,IAAI,CAAC,SAAS,CAAC,SAAS,GAAG,CAAC,CAAC;AAChC,SAAA;AACD,QAAA,IAAI,CAAC,UAAU,CAAC,aAAa,CAAC,KAAK,EAAE,CAAC;KACzC;IAED,WAAW,GAAA;AACP,QAAA,IAAI,CAAC,UAAU,GAAG,KAAK,CAAC;AACxB,QAAA,IAAI,CAAC,SAAS,CAAC,WAAW,EAAE,CAAC;KAChC;IAED,SAAS,GAAA;AACL,QAAA,IAAI,IAAI,CAAC,aAAa,EAAE,EAAE;AACtB,YAAA,IAAI,CAAC,SAAS,CAAC,KAAK,EAAE,CAAC;YACvB,OAAO;AACV,SAAA;QACD,IAAI,CAAC,SAAS,CAAC,MAAM,CAAC,GAAG,IAAI,CAAC,YAAY,CAAC,CAAC;KAC/C;IAED,aAAa,GAAA;QACT,MAAM,QAAQ,GAAG,IAAI,CAAC,SAAS,CAAC,QAAQ,CAAC,MAAM,CAAC;AAChD,QAAA,MAAM,OAAO,GAAG,IAAI,CAAC,UAAU,CAAC,MAAM,CAAC;QACvC,OAAO,QAAQ,IAAI,OAAO,CAAC;KAC9B;AAED,IAAA,oBAAoB,CAAC,MAAM,EAAA;QACvB,MAAM,MAAM,GAAG,IAAI,CAAC,MAAM,CAAC,IAAI,CAAC,mBAAmB,EAC/C;AACI,YAAA,IAAI,EAAE;AACF,gBAAA,UAAU,EAAE,MAAM;gBAClB,QAAQ,EAAE,IAAI,CAAC,QAAQ;gBACvB,QAAQ,EAAE,IAAI,CAAC,QAAQ;AACvB,gBAAA,gBAAgB,EAAE,IAAI;AACzB,aAAA;AACD,YAAA,QAAQ,EAAE,OAAO;AACjB,YAAA,QAAQ,EAAE,OAAO;AACpB,SAAA,CAAC,CAAC;QACP,MAAM,CAAC,WAAW,EAAE;AACf,aAAA,SAAS,CAAC,CAAC,SAAS,KAAI;AACrB,YAAA,IAAI,SAAS,IAAI,SAAS,CAAC,MAAM,IAAI,UAAU,CAAC,UAAU,IAAI,SAAS,CAAC,MAAM,IAAI,UAAU,CAAC,MAAM,EAAE;AACjG,gBAAA,IAAI,CAAC,UAAU,CAAC,aAAa,CAAC,KAAK,EAAE,CAAC;AACzC,aAAA;AACL,SAAC,CAAC,CAAA;KACT;AAED,IAAA,gBAAgB,CAAC,UAAU,EAAE,EAAW,EAAE,IAAa,EAAA;AAEnD,QAAA,IAAI,UAAU,GAAG,IAAI,CAAC,OAAO,CAAC,IAAI,CAAC;AACnC,QAAA,IAAI,QAAgB,CAAC;QAErB,IAAI,UAAU,IAAI,aAAa,IAAI,CAAC,IAAI,CAAC,aAAa,EAAE,EAAE;YACtD,QAAQ,GAAG,UAAU,GAAG,UAAU,GAAG,sCAAsC,GAAG,IAAI,CAAC,SAAS,CAAC,QAAQ,CAAC,IAAI,CAAC,IAAI,CAAC,GAAG,MAAM,GAAG,+DAA+D,CAAC;AAC/L,SAAA;aAAM,IAAI,UAAU,IAAI,aAAa,IAAI,IAAI,CAAC,aAAa,EAAE,EAAE;AAC5D,YAAA,QAAQ,GAAG,UAAU,GAAG,UAAU,GAAG,8FAA8F,CAAC;AACvI,SAAA;AACI,aAAA;AACD,YAAA,QAAQ,GAAG,UAAU,GAAG,UAAU,GAAG,qCAAqC,GAAG,IAAI,GAAG,MAAM,GAAG,+DAA+D,CAAC;AAChK,SAAA;QAED,MAAM,MAAM,GAAG,IAAI,CAAC,MAAM,CAAC,IAAI,CAAC,kBAAkB,EAAE;AAChD,YAAA,QAAQ,EAAE,OAAO;AACjB,YAAA,QAAQ,EAAE,OAAO;AACjB,YAAA,IAAI,EAAE;gBACF,IAAI,EAAE,aAAa,CAAC,MAAM;AAC1B,gBAAA,IAAI,EAAE,WAAW;AACjB,gBAAA,MAAM,EAAE,wBAAwB;AAChC,gBAAA,IAAI,EAAE,QAAQ;gBACd,SAAS,EAAE,eAAe,CAAC,gBAAgB;gBAC3C,SAAS,EAAE,eAAe,CAAC,gBAAgB;AAC9C,aAAA;AACJ,SAAA,CAAC,CAAC;QACH,MAAM,CAAC,WAAW,EAAE,CAAC,SAAS,CAAC,GAAG,IAAG;AACjC,YAAA,IAAI,GAAG,EAAE;gBACL,IAAI,UAAU,IAAI,aAAa,IAAI,CAAC,IAAI,CAAC,aAAa,EAAE,EAAE;oBACtD,IAAI,CAAC,mBAAmB,CAAC,IAAI,CAAC,SAAS,CAAC,QAAQ,CAAC,CAAC;AACrD,iBAAA;qBAAM,IAAI,UAAU,IAAI,aAAa,IAAI,IAAI,CAAC,aAAa,EAAE,EAAE;AAC5D,oBAAA,IAAI,CAAC,mBAAmB,CAAC,IAAI,CAAC,YAAY,CAAC,CAAC;AAC/C,iBAAA;AACI,qBAAA;AACD,oBAAA,IAAI,CAAC,mBAAmB,CAAC,EAAE,CAAC,CAAC;AAChC,iBAAA;AACJ,aAAA;AACL,SAAC,CAAC,CAAA;KACL;AAED,IAAA,mBAAmB,CAAC,QAAQ,EAAA;QACxB,IAAI,CAAC,gBAAgB,CAAC,mBAAmB,CAAC,IAAI,CAAC,KAAK,EAAE,IAAI,CAAC,QAAQ,EAAE,IAAI,CAAC,QAAQ,EAAE,QAAQ,CAAC,CAAC,SAAS,CAAC,CAAC,SAAS,KAAI;AAClH,YAAA,IAAI,CAAC,UAAU,CAAC,aAAa,CAAC,KAAK,EAAE,CAAC;AAC1C,SAAC,CAAC,CAAC;KACN;;2GAxLQ,aAAa,EAAA,IAAA,EAAA,CAAA,EAAA,KAAA,EAAAnG,IAAA,CAAA,cAAA,EAAA,EAAA,EAAA,KAAA,EAAAC,IAAA,CAAA,cAAA,EAAA,EAAA,EAAA,KAAA,EAAA4G,gBAAA,EAAA,EAAA,EAAA,KAAA,EAAApE,aAAA,EAAA,EAAA,EAAA,KAAA,EAAAlC,IAAA,CAAA,SAAA,EAAA,CAAA,EAAA,MAAA,EAAA,EAAA,CAAA,eAAA,CAAA,SAAA,EAAA,CAAA,CAAA;AAAb,aAAA,CAAA,IAAA,GAAA,EAAA,CAAA,oBAAA,CAAA,EAAA,UAAA,EAAA,QAAA,EAAA,OAAA,EAAA,SAAA,EAAA,IAAA,EAAA,aAAa,4UC5B1B,mjVAoMM,EAAA,MAAA,EAAA,CAAA,uHAAA,CAAA,EAAA,UAAA,EAAA,CAAA,EAAA,IAAA,EAAAU,EAAA,CAAA,qBAAA,EAAA,QAAA,EAAA,oBAAA,EAAA,MAAA,EAAA,CAAA,MAAA,EAAA,UAAA,EAAA,OAAA,EAAA,mBAAA,CAAA,EAAA,OAAA,EAAA,CAAA,YAAA,CAAA,EAAA,EAAA,EAAA,IAAA,EAAAT,IAAA,CAAA,QAAA,EAAA,QAAA,EAAA,6BAAA,EAAA,QAAA,EAAA,CAAA,UAAA,CAAA,EAAA,EAAA,EAAA,IAAA,EAAAC,KAAA,CAAA,WAAA,EAAA,QAAA,EAAA,cAAA,EAAA,MAAA,EAAA,CAAA,eAAA,EAAA,OAAA,EAAA,UAAA,EAAA,YAAA,EAAA,iBAAA,EAAA,IAAA,EAAA,eAAA,EAAA,MAAA,EAAA,UAAA,EAAA,SAAA,EAAA,UAAA,EAAA,eAAA,EAAA,kBAAA,EAAA,OAAA,CAAA,EAAA,OAAA,EAAA,CAAA,QAAA,EAAA,qBAAA,CAAA,EAAA,QAAA,EAAA,CAAA,aAAA,CAAA,EAAA,EAAA,EAAA,IAAA,EAAA,EAAA,CAAA,OAAA,EAAA,QAAA,EAAA,UAAA,EAAA,QAAA,EAAA,CAAA,SAAA,CAAA,EAAA,EAAA,EAAA,IAAA,EAAAD,IAAA,CAAA,YAAA,EAAA,QAAA,EAAA,oCAAA,EAAA,QAAA,EAAA,CAAA,cAAA,CAAA,EAAA,EAAA,EAAA,IAAA,EAAAA,IAAA,CAAA,MAAA,EAAA,QAAA,EAAA,sBAAA,EAAA,QAAA,EAAA,CAAA,QAAA,CAAA,EAAA,EAAA,EAAA,IAAA,EAAAG,IAAA,CAAA,YAAA,EAAA,QAAA,EAAA,eAAA,EAAA,MAAA,EAAA,CAAA,UAAA,CAAA,EAAA,QAAA,EAAA,CAAA,cAAA,CAAA,EAAA,CAAA,EAAA,UAAA,EAAA,CAAA,EAAA,IAAA,EAAAC,GAAA,CAAA,IAAA,EAAA,QAAA,EAAA,QAAA,EAAA,MAAA,EAAA,CAAA,MAAA,EAAA,UAAA,EAAA,UAAA,CAAA,EAAA,EAAA,EAAA,IAAA,EAAA,GAAA,CAAA,WAAA,EAAA,QAAA,EAAA,eAAA,EAAA,MAAA,EAAA,CAAA,WAAA,EAAA,eAAA,EAAA,MAAA,EAAA,WAAA,EAAA,WAAA,EAAA,SAAA,CAAA,EAAA,OAAA,EAAA,CAAA,YAAA,CAAA,EAAA,QAAA,EAAA,CAAA,aAAA,CAAA,EAAA,EAAA,EAAA,IAAA,EAAA,GAAA,CAAA,iBAAA,EAAA,QAAA,EAAA,qBAAA,EAAA,EAAA,EAAA,IAAA,EAAAA,GAAA,CAAA,OAAA,EAAA,QAAA,EAAA,WAAA,EAAA,MAAA,EAAA,CAAA,OAAA,EAAA,SAAA,CAAA,EAAA,EAAA,EAAA,IAAA,EAAA,GAAA,CAAA,eAAA,EAAA,QAAA,EAAA,mBAAA,EAAA,EAAA,EAAA,IAAA,EAAAZ,IAAA,CAAA,kBAAA,EAAA,QAAA,EAAA,gCAAA,EAAA,MAAA,EAAA,CAAA,YAAA,EAAA,QAAA,EAAA,aAAA,EAAA,UAAA,EAAA,qBAAA,EAAA,kBAAA,EAAA,oBAAA,EAAA,YAAA,EAAA,OAAA,EAAA,YAAA,CAAA,EAAA,EAAA,EAAA,IAAA,EAAAQ,IAAA,CAAA,YAAA,EAAA,QAAA,EAAA,gBAAA,EAAA,MAAA,EAAA,CAAA,QAAA,EAAA,cAAA,CAAA,EAAA,EAAA,EAAA,IAAA,EAAAA,IAAA,CAAA,gBAAA,EAAA,QAAA,EAAA,oBAAA,EAAA,EAAA,EAAA,IAAA,EAAAA,IAAA,CAAA,aAAA,EAAA,QAAA,EAAA,sCAAA,EAAA,EAAA,EAAA,IAAA,EAAAA,IAAA,CAAA,UAAA,EAAA,QAAA,EAAA,cAAA,EAAA,EAAA,EAAA,IAAA,EAAAA,IAAA,CAAA,OAAA,EAAA,QAAA,EAAA,wBAAA,EAAA,EAAA,EAAA,IAAA,EAAAM,GAAA,CAAA,UAAA,EAAA,QAAA,EAAA,cAAA,EAAA,QAAA,EAAA,CAAA,YAAA,CAAA,EAAA,EAAA,EAAA,IAAA,EAAAF,GAAA,CAAA,OAAA,EAAA,QAAA,EAAA,kBAAA,EAAA,MAAA,EAAA,CAAA,SAAA,EAAA,cAAA,EAAA,eAAA,CAAA,EAAA,EAAA,EAAA,IAAA,EAAAJ,IAAA,CAAA,eAAA,EAAA,QAAA,EAAA,mBAAA,EAAA,MAAA,EAAA,CAAA,iBAAA,EAAA,uBAAA,CAAA,EAAA,EAAA,EAAA,IAAA,EAAAA,IAAA,CAAA,SAAA,EAAA,QAAA,EAAA,aAAA,EAAA,MAAA,EAAA,CAAA,kBAAA,EAAA,eAAA,CAAA,EAAA,EAAA,EAAA,IAAA,EAAAA,IAAA,CAAA,YAAA,EAAA,QAAA,EAAA,2BAAA,EAAA,CAAA,EAAA,KAAA,EAAA,EAAA,WAAA,EAAAS,EAAA,CAAA,mBAAA,EAAA,WAAA,EAAAL,GAAA,CAAA,aAAA,EAAA,EAAA,CAAA,CAAA;4FDxKO,aAAa,EAAA,UAAA,EAAA,CAAA;kBALzB,SAAS;AAAC,YAAA,IAAA,EAAA,CAAA;AACP,oBAAA,QAAQ,EAAE,UAAU;AACpB,oBAAA,WAAW,EAAE,uBAAuB;oBACpC,SAAS,EAAE,CAAC,uBAAuB,CAAC;AACvC,iBAAA,CAAA;qNAsB2B,SAAS,EAAA,CAAA;sBAAhC,SAAS;uBAAC,WAAW,CAAA;gBACG,UAAU,EAAA,CAAA;sBAAlC,SAAS;uBAAC,YAAY,CAAA;gBACC,SAAS,EAAA,CAAA;sBAAhC,SAAS;uBAAC,WAAW,CAAA;;;AE/C1B,MAAMgB,QAAM,GAAW;AACnB,IAAA;AACI,QAAA,IAAI,EAAE,EAAE;AACR,QAAA,SAAS,EAAE,aAAa;AAC3B,KAAA;CACJ,CAAC;MAMW,iBAAiB,CAAA;;+GAAjB,iBAAiB,EAAA,IAAA,EAAA,EAAA,EAAA,MAAA,EAAA,EAAA,CAAA,eAAA,CAAA,QAAA,EAAA,CAAA,CAAA;AAAjB,iBAAA,CAAA,IAAA,GAAA,EAAA,CAAA,mBAAA,CAAA,EAAA,UAAA,EAAA,QAAA,EAAA,OAAA,EAAA,SAAA,EAAA,QAAA,EAAA,EAAA,EAAA,IAAA,EAAA,iBAAiB,0CAFhB,YAAY,CAAA,EAAA,CAAA,CAAA;gHAEb,iBAAiB,EAAA,OAAA,EAAA,CAHjB,CAAC,YAAY,CAAC,QAAQ,CAACA,QAAM,CAAC,CAAC,EAC9B,YAAY,CAAA,EAAA,CAAA,CAAA;4FAEb,iBAAiB,EAAA,UAAA,EAAA,CAAA;kBAJ7B,QAAQ;AAAC,YAAA,IAAA,EAAA,CAAA;oBACN,OAAO,EAAE,CAAC,YAAY,CAAC,QAAQ,CAACA,QAAM,CAAC,CAAC;oBACxC,OAAO,EAAE,CAAC,YAAY,CAAC;AAC1B,iBAAA,CAAA;;;ACSD;MAwBa,UAAU,CAAA;;wGAAV,UAAU,EAAA,IAAA,EAAA,EAAA,EAAA,MAAA,EAAA,EAAA,CAAA,eAAA,CAAA,QAAA,EAAA,CAAA,CAAA;yGAAV,UAAU,EAAA,YAAA,EAAA,CApBf,aAAa,CAAA,EAAA,OAAA,EAAA,CAGb,SAAS;QACT,YAAY;QACZ,iBAAiB;QACjB,gBAAgB;QAChB,aAAa;QACb,aAAa;QACb,eAAe;QACf,eAAe;QACf,cAAc;QACd,kBAAkB;QAClB,eAAe;QACf,gBAAgB;QAChB,iBAAiB;QACjB,kBAAkB;QAClB,kBAAkB,CAAA,EAAA,CAAA,CAAA;AAGb,UAAA,CAAA,IAAA,GAAA,EAAA,CAAA,mBAAA,CAAA,EAAA,UAAA,EAAA,QAAA,EAAA,OAAA,EAAA,SAAA,EAAA,QAAA,EAAA,EAAA,EAAA,IAAA,EAAA,UAAU,EAlBV,OAAA,EAAA,CAAA;YACL,SAAS;YACT,YAAY;YACZ,iBAAiB;YACjB,gBAAgB;YAChB,aAAa;YACb,aAAa;YACb,eAAe;YACf,eAAe;YACf,cAAc;YACd,kBAAkB;YAClB,eAAe;YACf,gBAAgB;YAChB,iBAAiB;YACjB,kBAAkB;YAClB,kBAAkB;AACrB,SAAA,CAAA,EAAA,CAAA,CAAA;4FAEQ,UAAU,EAAA,UAAA,EAAA,CAAA;kBAtBtB,QAAQ;AAAC,YAAA,IAAA,EAAA,CAAA;AACN,oBAAA,YAAY,EAAE;wBACV,aAAa;AAChB,qBAAA;AACD,oBAAA,OAAO,EAAE;wBACL,SAAS;wBACT,YAAY;wBACZ,iBAAiB;wBACjB,gBAAgB;wBAChB,aAAa;wBACb,aAAa;wBACb,eAAe;wBACf,eAAe;wBACf,cAAc;wBACd,kBAAkB;wBAClB,eAAe;wBACf,gBAAgB;wBAChB,iBAAiB;wBACjB,kBAAkB;wBAClB,kBAAkB;AACrB,qBAAA;AACJ,iBAAA,CAAA;;;ACjCD;MAMa,kBAAkB,CAAA;IAE3B,WACY,CAAA,IAAgB,EACO,WAAgB,EAAA;QADvC,IAAI,CAAA,IAAA,GAAJ,IAAI,CAAY;QACO,IAAW,CAAA,WAAA,GAAX,WAAW,CAAK;KAC9C;IAEL,kBAAkB,CAAC,KAAK,EAAE,QAAQ,EAAA;AAC9B,QAAA,OAAO,IAAI,CAAC,IAAI,CAAC,IAAI,CAAC,GAAG,IAAI,CAAC,WAAW,CAAC,kBAAkB,CAAiB,cAAA,EAAA,KAAK,kBAAkB,EAAE,QAAQ,CAAC,CAAC;KACnH;IAED,mBAAmB,CAAC,KAAK,EAAE,UAAU,EAAA;AACjC,QAAA,OAAO,IAAI,CAAC,IAAI,CAAC,GAAG,CAAY,GAAG,IAAI,CAAC,WAAW,CAAC,kBAAkB,CAAiB,cAAA,EAAA,KAAK,oBAAoB,UAAU,CAAA,CAAE,CAAC,CAAC;KACjI;AAED,IAAA,kBAAkB,CAAC,KAAK,EAAE,UAAU,EAAE,QAAQ,EAAA;QAC1C,OAAO,IAAI,CAAC,IAAI,CAAC,KAAK,CAAC,CAAA,EAAG,IAAI,CAAC,WAAW,CAAC,kBAAkB,CAAA,cAAA,EAAiB,KAAK,CAAoB,iBAAA,EAAA,UAAU,EAAE,EAAE,QAAQ,CAAC,CAAC;KAClI;IAED,kBAAkB,CAAC,KAAK,EAAE,UAAU,EAAA;AAChC,QAAA,OAAO,IAAI,CAAC,IAAI,CAAC,MAAM,CAAC,GAAG,IAAI,CAAC,WAAW,CAAC,kBAAkB,CAAiB,cAAA,EAAA,KAAK,oBAAoB,UAAU,CAAA,CAAE,CAAC,CAAC;KACzH;AAED,IAAA,qBAAqB,CAAC,MAAc,EAAE,QAAgB,EAAE,MAAc,EAAE,OAAe,EAAE,WAAW,EAAE,SAAS,EAAE,KAAK,EAAA;AAClH,QAAA,IAAI,MAAM,GAAG,IAAI,UAAU,EAAE,CAAC;QAE9B,MAAM,GAAG,MAAM,CAAC,MAAM,CAAC,QAAQ,EAAE,MAAM,CAAC,CAAC;QACzC,MAAM,GAAG,MAAM,CAAC,MAAM,CAAC,UAAU,EAAE,QAAQ,CAAC,CAAC;QAC7C,MAAM,GAAG,MAAM,CAAC,MAAM,CAAC,QAAQ,EAAE,MAAM,CAAC,CAAC;QACzC,MAAM,GAAG,MAAM,CAAC,MAAM,CAAC,SAAS,EAAE,OAAO,CAAC,CAAC;AAE3C,QAAA,IAAI,WAAW,EAAE;YACb,MAAM,GAAG,MAAM,CAAC,MAAM,CAAC,UAAU,EAAE,WAAW,CAAC,CAAC;AACnD,SAAA;AAED,QAAA,SAAS,CAAC,OAAO,CAAC,MAAM,IAAI,MAAM,GAAG,MAAM,CAAC,MAAM,CAAC,QAAQ,EAAE,MAAM,CAAC,CAAC,CAAC;QAEtE,OAAO,IAAI,CAAC,IAAI,CAAC,GAAG,CAA6B,CAAA,EAAG,IAAI,CAAC,WAAW,CAAC,kBAAkB,CAAiB,cAAA,EAAA,KAAK,uBAAuB,EAAE,EAAE,MAAM,EAAE,MAAM,EAAE,CAAC,CAAC;KAC7J;;AAtCQ,kBAAA,CAAA,IAAA,GAAA,EAAA,CAAA,kBAAA,CAAA,EAAA,UAAA,EAAA,QAAA,EAAA,OAAA,EAAA,SAAA,EAAA,QAAA,EAAA,EAAA,EAAA,IAAA,EAAA,kBAAkB,4CAIf,aAAa,EAAA,CAAA,EAAA,MAAA,EAAA,EAAA,CAAA,eAAA,CAAA,UAAA,EAAA,CAAA,CAAA;AAJhB,kBAAA,CAAA,KAAA,GAAA,EAAA,CAAA,qBAAA,CAAA,EAAA,UAAA,EAAA,QAAA,EAAA,OAAA,EAAA,SAAA,EAAA,QAAA,EAAA,EAAA,EAAA,IAAA,EAAA,kBAAkB,cAHf,MAAM,EAAA,CAAA,CAAA;4FAGT,kBAAkB,EAAA,UAAA,EAAA,CAAA;kBAJ9B,UAAU;AAAC,YAAA,IAAA,EAAA,CAAA;AACR,oBAAA,UAAU,EAAE,MAAM;AACrB,iBAAA,CAAA;;0BAMQ,MAAM;2BAAC,aAAa,CAAA;;;ACH7B;MAQa,6BAA6B,CAAA;AA6BtC,IAAA,WAAA,CACoC,IAAI,EAC5B,SAAsD,EACtD,QAAmB,EACnB,WAAwB,EACxB,cAA8B,EAC9B,aAA4B,EAC7B,gBAAkC,EACjC,aAA4B,EAC5B,kBAAsC,EAAA;QARd,IAAI,CAAA,IAAA,GAAJ,IAAI,CAAA;QAC5B,IAAS,CAAA,SAAA,GAAT,SAAS,CAA6C;QACtD,IAAQ,CAAA,QAAA,GAAR,QAAQ,CAAW;QACnB,IAAW,CAAA,WAAA,GAAX,WAAW,CAAa;QACxB,IAAc,CAAA,cAAA,GAAd,cAAc,CAAgB;QAC9B,IAAa,CAAA,aAAA,GAAb,aAAa,CAAe;QAC7B,IAAgB,CAAA,gBAAA,GAAhB,gBAAgB,CAAkB;QACjC,IAAa,CAAA,aAAA,GAAb,aAAa,CAAe;QAC5B,IAAkB,CAAA,kBAAA,GAAlB,kBAAkB,CAAoB;QApClD,IAAe,CAAA,eAAA,GAAG,eAAe,CAAC;QAClC,IAAiB,CAAA,iBAAA,GAAG,iBAAiB,CAAC;QAEtC,IAAU,CAAA,UAAA,GAAG,UAAU,CAAC;QACxB,IAAa,CAAA,aAAA,GAAG,aAAa,CAAC;QAC9B,IAAe,CAAA,eAAA,GAAG,eAAe,CAAC;QAClC,IAAiB,CAAA,iBAAA,GAAG,iBAAiB,CAAC;QACtC,IAAa,CAAA,aAAA,GAAG,aAAa,CAAC;QAC9B,IAA2B,CAAA,2BAAA,GAAG,2BAA2B,CAAC;QAK1D,IAAO,CAAA,OAAA,GAAY,IAAI,CAAC;QAQxB,IAAS,CAAA,SAAA,GAAW,eAAe,CAAC;QAyHpC,IAAa,CAAA,aAAA,GAAG,CAAC,SAAoB,EAAE,WAAmB,EAAE,KAAa,KAAa;YAClF,OAAO,SAAS,CAAC,GAAG,CAAC,WAAW,CAAC,CAAC,QAAQ,CAAC,KAAK,CAAC,CAAC;AACtD,SAAC,CAAA;AA1GG,QAAA,IAAI,CAAC,MAAM,GAAG,IAAI,CAAC,MAAM,CAAC;AAC1B,QAAA,IAAI,CAAC,UAAU,GAAG,IAAI,CAAC,UAAU,CAAC;KACrC;IAED,QAAQ,GAAA;QACJ,IAAI,CAAC,KAAK,GAAG,IAAI,CAAC,cAAc,CAAC,UAAU,CAAC,cAAc,CAAC,CAAC;QAE5D,IAAI,CAAC,uBAAuB,EAAE,CAAC;QAC/B,IAAI,CAAC,cAAc,EAAE,CAAC;AAEtB,QAAA,IAAI,IAAI,CAAC,MAAM,IAAI,UAAU,CAAC,MAAM,EAAE;AAClC,YAAA,IAAI,CAAC,mBAAmB,CAAC,IAAI,CAAC,UAAU,CAAC,CAAC;AAC7C,SAAA;KACJ;IAED,eAAe,GAAA;QACX,IAAI,CAAC,aAAa,EAAE,CAAC;KACxB;IAED,aAAa,GAAA;QACT,MAAM,YAAY,GAAG,IAAI,CAAC,MAAM,CAAC,aAAa,CAAC,YAAY,CAAC;QAC5D,MAAM,YAAY,GAAG,IAAI,CAAC,MAAM,CAAC,aAAa,CAAC,YAAY,CAAC;AAC5D,QAAA,MAAM,YAAY,GAAG,eAAe,IAAI,YAAY,GAAG,YAAY,GAAG,EAAE,CAAC,GAAG,KAAK,CAAC;AAElF,QAAA,IAAI,CAAC,QAAQ,CAAC,QAAQ,CAAC,IAAI,CAAC,IAAI,CAAC,aAAa,EAAE,QAAQ,EAAE,YAAY,CAAC,CAAC;AACxE,QAAA,IAAI,CAAC,QAAQ,CAAC,QAAQ,CAAC,IAAI,CAAC,IAAI,CAAC,aAAa,EAAE,YAAY,EAAE,YAAY,CAAC,CAAC;KAC/E;IAEK,uBAAuB,GAAA;;AACzB,YAAA,MAAM,MAAM,GAAuB,MAAM,IAAI,CAAC,aAAa,CAAC,uBAAuB,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC;AAChG,YAAA,IAAI,CAAC,kBAAkB,GAAG,MAAM,CAAC,aAAa,CAAC;SAClD,CAAA,CAAA;AAAA,KAAA;IAED,cAAc,GAAA;QACV,IAAI,CAAC,UAAU,GAAG,IAAI,CAAC,WAAW,CAAC,KAAK,CAAC;YACrC,IAAI,EAAE,GAAG,CAAC,UAAU,CAAC,QAAQ,CAAC,CAAC;YAC/B,eAAe,EAAE,GAAG,CAAC,UAAU,CAAC,QAAQ,CAAC,CAAC;YAC1C,IAAI,EAAE,GAAG,CAAC,UAAU,CAAC,QAAQ,CAAC,CAAC;AAClC,SAAA,CAAC,CAAC;KACN;IAED,cAAc,GAAA;AACV,QAAA,IAAI,IAAI,CAAC,UAAU,CAAC,OAAO,EAAE;AACzB,YAAA,IAAI,CAAC,aAAa,CAAC,SAAS,CAAC,WAAW,CAAC,kBAAkB,EAAE,WAAW,CAAC,oBAAoB,EAAE,WAAW,CAAC,KAAK,CAAC,CAAC;YAClH,OAAO;AACV,SAAA;AAAM,aAAA;AACH,YAAA,IAAI,IAAI,CAAC,MAAM,IAAI,UAAU,CAAC,MAAM,EAAE;gBAClC,IAAI,CAAC,kBAAkB,EAAE,CAAC;AAC7B,aAAA;AAAM,iBAAA,IAAI,IAAI,CAAC,MAAM,IAAI,UAAU,CAAC,MAAM,EAAE;gBACzC,IAAI,CAAC,kBAAkB,EAAE,CAAC;AAC7B,aAAA;AACJ,SAAA;KACJ;IAED,kBAAkB,GAAA;QACd,IAAI,CAAC,kBAAkB,CAAC,kBAAkB,CAAC,IAAI,CAAC,KAAK,EAAE,IAAI,CAAC,UAAU,CAAC,KAAK,CAAC,CAAC,SAAS,CAAC,CAAC,GAAc,KAAI;AAEvG,YAAA,IAAI,MAAM,CAAC;AACX,YAAA,MAAM,GAAG;gBACL,MAAM,EAAE,kBAAkB,CAAC,OAAO;aACrC,CAAA;AAED,YAAA,IAAI,CAAC,SAAS,CAAC,KAAK,CAAC,MAAM,CAAC,CAAC;SAEhC,EAAE,KAAK,IAAG;AACP,YAAA,OAAO,CAAC,GAAG,CAAC,+BAA+B,EAAE,KAAK,CAAC,CAAC;AACxD,SAAC,CAAC,CAAC;KACN;AAED,IAAA,mBAAmB,CAAC,UAAU,EAAA;AAC1B,QAAA,IAAI,CAAC,kBAAkB,CAAC,mBAAmB,CAAC,IAAI,CAAC,KAAK,EAAE,UAAU,CAAC,CAAC,SAAS,CAAC,CAAC,GAAc,KAAI;AAC7F,YAAA,IAAI,CAAC,SAAS,GAAG,GAAG,CAAC;AACrB,YAAA,IAAI,CAAC,aAAa,CAAC,IAAI,CAAC,SAAS,CAAC,CAAC;SACtC,EAAE,KAAK,IAAG;AACP,YAAA,OAAO,CAAC,GAAG,CAAC,gCAAgC,EAAE,KAAK,CAAC,CAAC;AACzD,SAAC,CAAC,CAAC;KACN;AAED,IAAA,aAAa,CAAC,QAAmB,EAAA;AAC7B,QAAA,IAAI,CAAC,UAAU,CAAC,UAAU,CAAC,QAAQ,CAAC,CAAC;QAErC,IAAI,CAAC,YAAY,GAAG,IAAI,CAAC,UAAU,CAAC,KAAK,CAAC;QAE1C,IAAI,CAAC,UAAU,CAAC,YAAY,CAAC,SAAS,CAAC,MAAK;AACxC,YAAA,IAAI,CAAC,OAAO,GAAG,OAAO,CAAC,IAAI,CAAC,YAAY,EAAE,IAAI,CAAC,UAAU,CAAC,KAAK,CAAC,CAAC;AACrE,SAAC,CAAC,CAAC;KAEN;IAED,kBAAkB,GAAA;QACd,IAAI,CAAC,kBAAkB,CAAC,kBAAkB,CAAC,IAAI,CAAC,KAAK,EAAE,IAAI,CAAC,UAAU,EAAE,IAAI,CAAC,UAAU,CAAC,KAAK,CAAC,CAAC,SAAS,CAAC,CAAC,GAAc,KAAI;AAExH,YAAA,IAAI,MAAM,CAAC;AACX,YAAA,MAAM,GAAG;gBACL,MAAM,EAAE,kBAAkB,CAAC,OAAO;aACrC,CAAA;AAED,YAAA,IAAI,CAAC,SAAS,CAAC,KAAK,CAAC,MAAM,CAAC,CAAC;SAEhC,EAAE,KAAK,IAAG;AACP,YAAA,OAAO,CAAC,GAAG,CAAC,+BAA+B,EAAE,KAAK,CAAC,CAAC;AACxD,SAAC,CAAC,CAAA;KACL;;AA9IQ,6BAAA,CAAA,IAAA,GAAA,EAAA,CAAA,kBAAA,CAAA,EAAA,UAAA,EAAA,QAAA,EAAA,OAAA,EAAA,SAAA,EAAA,QAAA,EAAA,EAAA,EAAA,IAAA,EAAA,6BAA6B,kBA8B1B,eAAe,EAAA,EAAA,EAAA,KAAA,EAAA5B,IAAA,CAAA,YAAA,EAAA,EAAA,EAAA,KAAA,EAAA,EAAA,CAAA,SAAA,EAAA,EAAA,EAAA,KAAA,EAAAC,IAAA,CAAA,WAAA,EAAA,EAAA,EAAA,KAAA,EAAAc,IAAA,CAAA,cAAA,EAAA,EAAA,EAAA,KAAA,EAAAC,IAAA,CAAA,aAAA,EAAA,EAAA,EAAA,KAAA,EAAAT,EAAA,CAAA,gBAAA,EAAA,EAAA,EAAA,KAAA,EAAAqE,aAAA,EAAA,EAAA,EAAA,KAAA,EAAAoC,kBAAA,EAAA,CAAA,EAAA,MAAA,EAAA,EAAA,CAAA,eAAA,CAAA,SAAA,EAAA,CAAA,CAAA;AA9BlB,6BAAA,CAAA,IAAA,GAAA,EAAA,CAAA,oBAAA,CAAA,EAAA,UAAA,EAAA,QAAA,EAAA,OAAA,EAAA,SAAA,EAAA,IAAA,EAAA,6BAA6B,6TC5B1C,++IAwFM,EAAA,UAAA,EAAA,CAAA,EAAA,IAAA,EAAAvG,IAAA,CAAA,YAAA,EAAA,QAAA,EAAA,gBAAA,EAAA,MAAA,EAAA,CAAA,OAAA,EAAA,YAAA,EAAA,YAAA,EAAA,oBAAA,EAAA,WAAA,CAAA,EAAA,QAAA,EAAA,CAAA,cAAA,CAAA,EAAA,EAAA,EAAA,IAAA,EAAAC,EAAA,CAAA,SAAA,EAAA,QAAA,EAAA,YAAA,EAAA,MAAA,EAAA,CAAA,UAAA,EAAA,eAAA,EAAA,UAAA,CAAA,EAAA,QAAA,EAAA,CAAA,WAAA,CAAA,EAAA,EAAA,EAAA,IAAA,EAAA,GAAA,CAAA,SAAA,EAAA,QAAA,EAAA,YAAA,EAAA,QAAA,EAAA,CAAA,WAAA,CAAA,EAAA,CAAA,EAAA,UAAA,EAAA,CAAA,EAAA,IAAA,EAAA,GAAA,CAAA,SAAA,EAAA,QAAA,EAAA,2BAAA,EAAA,MAAA,EAAA,CAAA,iBAAA,EAAA,mBAAA,EAAA,kBAAA,EAAA,gBAAA,EAAA,oBAAA,EAAA,mBAAA,EAAA,oBAAA,CAAA,EAAA,QAAA,EAAA,CAAA,WAAA,CAAA,EAAA,EAAA,EAAA,IAAA,EAAAV,IAAA,CAAA,cAAA,EAAA,QAAA,EAAA,sCAAA,EAAA,MAAA,EAAA,CAAA,MAAA,EAAA,kBAAA,EAAA,YAAA,EAAA,gBAAA,CAAA,EAAA,QAAA,EAAA,CAAA,gBAAA,CAAA,EAAA,EAAA,EAAA,IAAA,EAAA,GAAA,CAAA,UAAA,EAAA,QAAA,EAAA,cAAA,EAAA,QAAA,EAAA,CAAA,YAAA,CAAA,EAAA,EAAA,EAAA,IAAA,EAAAA,IAAA,CAAA,gBAAA,EAAA,QAAA,EAAA,8DAAA,EAAA,EAAA,EAAA,IAAA,EAAAC,IAAA,CAAA,aAAA,EAAA,QAAA,EAAA,8CAAA,EAAA,EAAA,EAAA,IAAA,EAAAA,IAAA,CAAA,oBAAA,EAAA,QAAA,EAAA,0FAAA,EAAA,EAAA,EAAA,IAAA,EAAAA,IAAA,CAAA,kBAAA,EAAA,QAAA,EAAA,aAAA,EAAA,MAAA,EAAA,CAAA,WAAA,CAAA,EAAA,OAAA,EAAA,CAAA,UAAA,CAAA,EAAA,QAAA,EAAA,CAAA,QAAA,CAAA,EAAA,EAAA,EAAA,IAAA,EAAAQ,IAAA,CAAA,QAAA,EAAA,QAAA,EAAA,WAAA,EAAA,EAAA,EAAA,IAAA,EAAAI,KAAA,CAAA,QAAA,EAAA,QAAA,EAAA,yHAAA,EAAA,MAAA,EAAA,CAAA,IAAA,EAAA,UAAA,EAAA,UAAA,EAAA,MAAA,EAAA,OAAA,EAAA,UAAA,EAAA,aAAA,EAAA,mBAAA,EAAA,kBAAA,CAAA,EAAA,QAAA,EAAA,CAAA,UAAA,CAAA,EAAA,EAAA,EAAA,IAAA,EAAAZ,IAAA,CAAA,oBAAA,EAAA,QAAA,EAAA,8MAAA,EAAA,EAAA,EAAA,IAAA,EAAAA,IAAA,CAAA,eAAA,EAAA,QAAA,EAAA,2CAAA,EAAA,EAAA,EAAA,IAAA,EAAAA,IAAA,CAAA,eAAA,EAAA,QAAA,EAAA,mBAAA,EAAA,MAAA,EAAA,CAAA,UAAA,EAAA,iBAAA,EAAA,SAAA,CAAA,EAAA,OAAA,EAAA,CAAA,eAAA,CAAA,EAAA,EAAA,EAAA,IAAA,EAAAA,IAAA,CAAA,iBAAA,EAAA,QAAA,EAAA,wIAAA,EAAA,MAAA,EAAA,CAAA,UAAA,CAAA,EAAA,EAAA,EAAA,IAAA,EAAAa,GAAA,CAAA,IAAA,EAAA,QAAA,EAAA,QAAA,EAAA,MAAA,EAAA,CAAA,MAAA,EAAA,UAAA,EAAA,UAAA,CAAA,EAAA,EAAA,EAAA,IAAA,EAAAL,IAAA,CAAA,QAAA,EAAA,QAAA,EAAA,WAAA,EAAA,MAAA,EAAA,CAAA,IAAA,CAAA,EAAA,EAAA,EAAA,IAAA,EAAAK,GAAA,CAAA,OAAA,EAAA,QAAA,EAAA,kBAAA,EAAA,MAAA,EAAA,CAAA,SAAA,EAAA,cAAA,EAAA,eAAA,CAAA,EAAA,EAAA,EAAA,IAAA,EAAAb,IAAA,CAAA,gBAAA,EAAA,QAAA,EAAA,sEAAA,EAAA,MAAA,EAAA,CAAA,SAAA,CAAA,EAAA,EAAA,EAAA,IAAA,EAAAa,GAAA,CAAA,OAAA,EAAA,QAAA,EAAA,WAAA,EAAA,MAAA,EAAA,CAAA,OAAA,EAAA,SAAA,CAAA,EAAA,CAAA,EAAA,CAAA,CAAA;4FD5DO,6BAA6B,EAAA,UAAA,EAAA,CAAA;kBANzC,SAAS;AAAC,YAAA,IAAA,EAAA,CAAA;AACP,oBAAA,QAAQ,EAAE,mBAAmB;AAC7B,oBAAA,WAAW,EAAE,gCAAgC;AAC7C,oBAAA,MAAM,EAAE,EACP;AACJ,iBAAA,CAAA;;0BA+BQ,MAAM;2BAAC,eAAe,CAAA;gRALN,MAAM,EAAA,CAAA;sBAA1B,SAAS;uBAAC,QAAQ,CAAA;gBACE,MAAM,EAAA,CAAA;sBAA1B,SAAS;uBAAC,QAAQ,CAAA;gBACA,IAAI,EAAA,CAAA;sBAAtB,SAAS;uBAAC,MAAM,CAAA;;;AEhBrB;MAQa,qBAAqB,CAAA;AAiC9B,IAAA,WAAA,CACY,MAAiB,EACjB,cAA8B,EAC9B,aAA4B,EAC5B,kBAAsC,EAAA;QAHtC,IAAM,CAAA,MAAA,GAAN,MAAM,CAAW;QACjB,IAAc,CAAA,cAAA,GAAd,cAAc,CAAgB;QAC9B,IAAa,CAAA,aAAA,GAAb,aAAa,CAAe;QAC5B,IAAkB,CAAA,kBAAA,GAAlB,kBAAkB,CAAoB;QAnClD,IAAM,CAAA,MAAA,GAAG,MAAM,CAAC;QAChB,IAAW,CAAA,WAAA,GAAG,WAAW,CAAC;QAE1B,IAAiB,CAAA,iBAAA,GAAG,iBAAiB,CAAC;QACtC,IAAc,CAAA,cAAA,GAAG,cAAc,CAAC;QAChC,IAAe,CAAA,eAAA,GAAG,eAAe,CAAC;QAElC,IAAiB,CAAA,iBAAA,GAAG,iBAAiB,CAAC;QACtC,IAAU,CAAA,UAAA,GAAG,UAAU,CAAC;QAExB,IAAmB,CAAA,mBAAA,GAAW,eAAe,CAAC;AAI9C,QAAA,IAAA,CAAA,UAAU,GAAG,CAAC,IAAI,kBAAkB,EAAE,CAAC,CAAC;QACxC,IAAgB,CAAA,gBAAA,GAAW,CAAC,CAAC;AAC7B,QAAA,IAAA,CAAA,eAAe,GAAa,CAAC,IAAI,EAAE,MAAM,EAAE,mBAAmB,EAAE,MAAM,EAAE,QAAQ,CAAC,CAAC;QAClF,IAAU,CAAA,UAAA,GAAY,KAAK,CAAC;QAE5B,IAAQ,CAAA,QAAA,GAAG,IAAI,WAAW,CAAC,EAAE,EAAE,UAAU,CAAC,QAAQ,CAAC,CAAC;QAEpD,IAAa,CAAA,aAAA,GAAY,KAAK,CAAC;AAC/B,QAAA,IAAA,CAAA,eAAe,GAAgB,IAAI,WAAW,EAAE,CAAC;QACjD,IAAS,CAAA,SAAA,GAAkB,EAAE,CAAC;AAqH9B,QAAA,IAAA,CAAA,cAAc,GAAG,CAAC,MAAM,EAAE,GAAG,KAAI;YAC7B,MAAM,SAAS,GAAG,IAAI,CAAC,MAAM,CAAC,IAAI,CAAC,6BAA6B,EAC5D;AACI,gBAAA,MAAM,EAAE,OAAO;AACf,gBAAA,KAAK,EAAE,OAAO;gBACd,QAAQ,EAAE,EAAE,KAAK,EAAE,MAAM,EAAE,GAAG,EAAE,KAAK,EAAE;AACvC,gBAAA,YAAY,EAAE,IAAI;AAClB,gBAAA,UAAU,EAAE,4BAA4B;AACxC,gBAAA,IAAI,EAAE;AACF,oBAAA,MAAM,EAAE,MAAM;oBACd,UAAU,EAAE,GAAG,CAAC,EAAE;AACrB,iBAAA;AACJ,aAAA,CAAC,CAAC;YAEP,SAAS,CAAC,WAAW,EAAE;AAClB,iBAAA,SAAS,CAAC,CAAC,MAAM,KAAI;AAClB,gBAAA,IAAI,MAAM,CAAC,MAAM,IAAI,kBAAkB,CAAC,OAAO,EAAE;AAC7C,oBAAA,IAAI,CAAC,UAAU,CAAC,aAAa,CAAC,KAAK,EAAE,CAAC;AACzC,iBAAA;AACL,aAAC,CAAC,CAAC;AACX,SAAC,CAAA;KA5HI;IAEL,QAAQ,GAAA;QACJ,IAAI,CAAC,KAAK,GAAG,IAAI,CAAC,cAAc,CAAC,UAAU,CAAC,cAAc,CAAC,CAAC;QAE5D,IAAI,CAAC,uBAAuB,EAAE,CAAC;KAClC;IAEK,uBAAuB,GAAA;;AACzB,YAAA,MAAM,MAAM,GAAuB,MAAM,IAAI,CAAC,aAAa,CAAC,uBAAuB,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC;AAChG,YAAA,MAAM,MAAM,GAAG;AACX,gBAAA,IAAI,EAAE,CAAC;AACP,gBAAA,MAAM,EAAE,KAAK;AACb,gBAAA,OAAO,EAAE,KAAK;AACd,gBAAA,MAAM,EAAE,EAAE;aACb,CAAA;AACD,YAAA,MAAM,CAAC,aAAa,CAAC,OAAO,CAAC,MAAM,CAAC,CAAC;AACrC,YAAA,IAAI,CAAC,cAAc,GAAG,MAAM,CAAC,aAAa,CAAC;SAC9C,CAAA,CAAA;AAAA,KAAA;IAED,eAAe,GAAA;AACX,QAAA,KAAK,CACD,IAAI,CAAC,IAAI,CAAC,UAAU,EACpB,IAAI,CAAC,UAAU,CAAC,IAAI,EACpB,SAAS,CAAC,IAAI,CAAC,UAAU,CAAC,aAAa,EAAE,OAAO,CAAC,CACpD,CAAC,IAAI,CACF,SAAS,CAAC,EAAE,CAAC,EACb,SAAS,CAAC,MAAU;AAEhB,YAAA,IAAI,CAAC,SAAS,GAAG,EAAE,CAAC;YAEpB,IAAI,IAAI,CAAC,UAAU,EAAE;AACjB,gBAAA,IAAI,WAAW,GAAG,OAAO,GAAG,IAAI,CAAC,WAAW,CAAC;AAChD,aAAA;YAED,IAAI,IAAI,CAAC,aAAa,EAAE;AACpB,gBAAA,IAAI,IAAI,CAAC,eAAe,CAAC,KAAK,IAAI,KAAK,EAAE;AACrC,oBAAA,IAAI,CAAC,aAAa,GAAG,KAAK,CAAC;AAC9B,iBAAA;AAAM,qBAAA;AACH,oBAAA,IAAI,CAAC,SAAS,CAAC,IAAI,CAAC,gBAAgB,GAAG,IAAI,CAAC,eAAe,CAAC,KAAK,CAAC,CAAC;AACtE,iBAAA;AACJ,aAAA;YAED,OAAO,IAAI,CAAC,kBAAkB,CAAC,qBAAqB,CAChD,IAAI,CAAC,SAAS,CAAC,SAAS,EACxB,IAAI,CAAC,SAAS,CAAC,QAAQ,EACvB,IAAI,CAAC,IAAI,CAAC,MAAM,EAChB,IAAI,CAAC,IAAI,CAAC,SAAS,EACnB,WAAW,EACX,IAAI,CAAC,SAAS,EACd,IAAI,CAAC,KAAK,CACb,CAAC,IAAI,CAAC,UAAU,CAAC,MAAMqF,EAAY,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC;AACjD,SAAC,CAAC,EACF,GAAG,CAAC,CAAC,QAAoC,KAAS;YAC9C,IAAI,QAAQ,IAAI,IAAI,EAAE;AAClB,gBAAA,IAAI,CAAC,gBAAgB,GAAG,CAAC,CAAC;AAC1B,gBAAA,OAAO,EAAE,CAAC;AACb,aAAA;AAED,YAAA,IAAI,CAAC,gBAAgB,GAAG,QAAQ,CAAC,UAAU,CAAC;YAC5C,OAAO,QAAQ,CAAC,OAAO,CAAC;SAC3B,CAAC,CACL,CAAC,SAAS,CAAC,CAAC,UAAU,KAAI;AACvB,YAAA,IAAI,CAAC,UAAU,GAAG,UAAU,CAAC;AACjC,SAAC,CAAC,CAAC;KACN;AAED,IAAA,QAAQ,CAAC,KAAa,EAAA;AAClB,QAAA,IAAI,CAAC,UAAU,GAAG,IAAI,CAAC;AACvB,QAAA,IAAI,CAAC,WAAW,GAAG,KAAK,CAAC;AAEzB,QAAA,IAAI,KAAK,CAAC,MAAM,IAAI,CAAC,EAAE;YACnB,IAAI,CAAC,WAAW,EAAE,CAAC;AACtB,SAAA;AAED,QAAA,IAAI,CAAC,UAAU,CAAC,aAAa,CAAC,KAAK,EAAE,CAAC;KACzC;IAED,WAAW,GAAA;AACP,QAAA,IAAI,CAAC,UAAU,GAAG,KAAK,CAAC;AACxB,QAAA,IAAI,CAAC,SAAS,CAAC,WAAW,EAAE,CAAC;KAChC;AAED,IAAA,cAAc,CAAC,MAAc,EAAA;QACzB,MAAM,SAAS,GAAG,IAAI,CAAC,MAAM,CAAC,IAAI,CAAC,6BAA6B,EAC5D;AACI,YAAA,MAAM,EAAE,OAAO;AACf,YAAA,KAAK,EAAE,OAAO;YACd,QAAQ,EAAE,EAAE,KAAK,EAAE,MAAM,EAAE,GAAG,EAAE,KAAK,EAAE;AACvC,YAAA,YAAY,EAAE,IAAI;AAClB,YAAA,UAAU,EAAE,4BAA4B;AACxC,YAAA,IAAI,EAAE;AACF,gBAAA,MAAM,EAAE,MAAM;AACjB,aAAA;AACJ,SAAA,CAAC,CAAC;QAEP,SAAS,CAAC,WAAW,EAAE;AAClB,aAAA,SAAS,CAAC,CAAC,MAAM,KAAI;AAClB,YAAA,IAAI,MAAM,CAAC,MAAM,IAAI,kBAAkB,CAAC,OAAO,EAAE;AAC7C,gBAAA,IAAI,CAAC,UAAU,CAAC,aAAa,CAAC,KAAK,EAAE,CAAC;AACzC,aAAA;AACL,SAAC,CAAC,CAAC;KACV;AAwBD,IAAA,gBAAgB,CAAC,QAAQ,EAAA;QAErB,MAAM,MAAM,GAAG,IAAI,CAAC,MAAM,CAAC,IAAI,CAAC,kBAAkB,EAAE;AAChD,YAAA,QAAQ,EAAE,OAAO;AACjB,YAAA,QAAQ,EAAE,OAAO;AACjB,YAAA,IAAI,EAAE;gBACF,IAAI,EAAE,aAAa,CAAC,MAAM;AAC1B,gBAAA,IAAI,EAAE,WAAW;AACjB,gBAAA,MAAM,EAAE,uBAAuB;gBAC/B,IAAI,EAAE,KAAK,GAAG,QAAQ,CAAC,IAAI,GAAG,MAAM,GAAG,2EAA2E;gBAClH,SAAS,EAAE,eAAe,CAAC,gBAAgB;gBAC3C,SAAS,EAAE,eAAe,CAAC,gBAAgB;AAC9C,aAAA;AACJ,SAAA,CAAC,CAAC;QACH,MAAM,CAAC,WAAW,EAAE,CAAC,SAAS,CAAC,GAAG,IAAG;AACjC,YAAA,IAAI,GAAG,EAAE;AACL,gBAAA,IAAI,CAAC,kBAAkB,CAAC,QAAQ,CAAC,EAAE,CAAC,CAAC;AACxC,aAAA;AACL,SAAC,CAAC,CAAA;KACL;AAED,IAAA,kBAAkB,CAAC,UAAU,EAAA;AACzB,QAAA,IAAI,CAAC,kBAAkB,CAAC,kBAAkB,CAAC,IAAI,CAAC,KAAK,EAAE,UAAU,CAAC,CAAC,SAAS,CAAC,CAAC,SAAS,KAAI;AACvF,YAAA,IAAI,SAAS,EAAE;AACX,gBAAA,IAAI,CAAC,UAAU,CAAC,aAAa,CAAC,KAAK,EAAE,CAAC;AACzC,aAAA;AACL,SAAC,CAAC,CAAC;KACN;;mHA/LQ,qBAAqB,EAAA,IAAA,EAAA,CAAA,EAAA,KAAA,EAAAnG,IAAA,CAAA,SAAA,EAAA,EAAA,EAAA,KAAA,EAAAC,IAAA,CAAA,cAAA,EAAA,EAAA,EAAA,KAAA,EAAAgH,aAAA,EAAA,EAAA,EAAA,KAAA,EAAAC,kBAAA,EAAA,CAAA,EAAA,MAAA,EAAA,EAAA,CAAA,eAAA,CAAA,SAAA,EAAA,CAAA,CAAA;AAArB,qBAAA,CAAA,IAAA,GAAA,EAAA,CAAA,oBAAA,CAAA,EAAA,UAAA,EAAA,QAAA,EAAA,OAAA,EAAA,SAAA,EAAA,IAAA,EAAA,qBAAqB,sfC/ClC,s3JAmGM,EAAA,UAAA,EAAA,CAAA,EAAA,IAAA,EAAA3G,EAAA,CAAA,qBAAA,EAAA,QAAA,EAAA,oBAAA,EAAA,MAAA,EAAA,CAAA,MAAA,EAAA,UAAA,EAAA,OAAA,EAAA,mBAAA,CAAA,EAAA,OAAA,EAAA,CAAA,YAAA,CAAA,EAAA,EAAA,EAAA,IAAA,EAAAU,IAAA,CAAA,eAAA,EAAA,QAAA,EAAA,SAAA,EAAA,MAAA,EAAA,CAAA,SAAA,EAAA,MAAA,EAAA,OAAA,EAAA,MAAA,EAAA,OAAA,EAAA,MAAA,EAAA,QAAA,EAAA,MAAA,EAAA,MAAA,EAAA,MAAA,EAAA,QAAA,EAAA,SAAA,EAAA,QAAA,EAAA,QAAA,EAAA,YAAA,EAAA,WAAA,EAAA,UAAA,CAAA,EAAA,EAAA,EAAA,IAAA,EAAAT,IAAA,CAAA,QAAA,EAAA,QAAA,EAAA,6BAAA,EAAA,QAAA,EAAA,CAAA,UAAA,CAAA,EAAA,EAAA,EAAA,IAAA,EAAA,EAAA,CAAA,aAAA,EAAA,QAAA,EAAA,mBAAA,EAAA,MAAA,EAAA,CAAA,UAAA,EAAA,eAAA,EAAA,uBAAA,EAAA,cAAA,EAAA,iBAAA,EAAA,OAAA,CAAA,EAAA,QAAA,EAAA,CAAA,eAAA,CAAA,EAAA,EAAA,EAAA,IAAA,EAAAD,EAAA,CAAA,qBAAA,EAAA,QAAA,EAAA,eAAA,EAAA,MAAA,EAAA,CAAA,QAAA,EAAA,QAAA,EAAA,eAAA,EAAA,qBAAA,EAAA,UAAA,EAAA,gBAAA,EAAA,YAAA,EAAA,MAAA,EAAA,OAAA,EAAA,MAAA,EAAA,UAAA,EAAA,WAAA,CAAA,EAAA,OAAA,EAAA,CAAA,MAAA,EAAA,OAAA,EAAA,UAAA,CAAA,EAAA,EAAA,EAAA,IAAA,EAAAC,IAAA,CAAA,YAAA,EAAA,QAAA,EAAA,oCAAA,EAAA,QAAA,EAAA,CAAA,cAAA,CAAA,EAAA,EAAA,EAAA,IAAA,EAAAA,IAAA,CAAA,MAAA,EAAA,QAAA,EAAA,sBAAA,EAAA,QAAA,EAAA,CAAA,QAAA,CAAA,EAAA,EAAA,EAAA,IAAA,EAAAE,IAAA,CAAA,YAAA,EAAA,QAAA,EAAA,eAAA,EAAA,MAAA,EAAA,CAAA,UAAA,CAAA,EAAA,QAAA,EAAA,CAAA,cAAA,CAAA,EAAA,CAAA,EAAA,UAAA,EAAA,CAAA,EAAA,IAAA,EAAA,GAAA,CAAA,SAAA,EAAA,QAAA,EAAA,2BAAA,EAAA,MAAA,EAAA,CAAA,iBAAA,EAAA,mBAAA,EAAA,kBAAA,EAAA,gBAAA,EAAA,oBAAA,EAAA,mBAAA,EAAA,oBAAA,CAAA,EAAA,QAAA,EAAA,CAAA,WAAA,CAAA,EAAA,EAAA,EAAA,IAAA,EAAA,GAAA,CAAA,UAAA,EAAA,QAAA,EAAA,cAAA,EAAA,QAAA,EAAA,CAAA,YAAA,CAAA,EAAA,EAAA,EAAA,IAAA,EAAA,EAAA,CAAA,OAAA,EAAA,QAAA,EAAA,WAAA,EAAA,MAAA,EAAA,CAAA,iBAAA,EAAA,cAAA,EAAA,kBAAA,EAAA,qBAAA,EAAA,eAAA,CAAA,EAAA,OAAA,EAAA,CAAA,eAAA,CAAA,EAAA,QAAA,EAAA,CAAA,SAAA,CAAA,EAAA,EAAA,EAAA,IAAA,EAAAF,IAAA,CAAA,YAAA,EAAA,QAAA,EAAA,gBAAA,EAAA,MAAA,EAAA,CAAA,QAAA,EAAA,cAAA,CAAA,EAAA,EAAA,EAAA,IAAA,EAAAA,IAAA,CAAA,gBAAA,EAAA,QAAA,EAAA,oBAAA,EAAA,EAAA,EAAA,IAAA,EAAAA,IAAA,CAAA,aAAA,EAAA,QAAA,EAAA,sCAAA,EAAA,EAAA,EAAA,IAAA,EAAAA,IAAA,CAAA,UAAA,EAAA,QAAA,EAAA,cAAA,EAAA,EAAA,EAAA,IAAA,EAAAA,IAAA,CAAA,OAAA,EAAA,QAAA,EAAA,wBAAA,EAAA,EAAA,EAAA,IAAA,EAAAA,IAAA,CAAA,eAAA,EAAA,QAAA,EAAA,mBAAA,EAAA,MAAA,EAAA,CAAA,iBAAA,EAAA,uBAAA,CAAA,EAAA,EAAA,EAAA,IAAA,EAAAA,IAAA,CAAA,SAAA,EAAA,QAAA,EAAA,aAAA,EAAA,MAAA,EAAA,CAAA,kBAAA,EAAA,eAAA,CAAA,EAAA,EAAA,EAAA,IAAA,EAAAA,IAAA,CAAA,YAAA,EAAA,QAAA,EAAA,2BAAA,EAAA,CAAA,EAAA,CAAA,CAAA;4FDpDO,qBAAqB,EAAA,UAAA,EAAA,CAAA;kBANjC,SAAS;AAAC,YAAA,IAAA,EAAA,CAAA;AACP,oBAAA,QAAQ,EAAE,UAAU;AACpB,oBAAA,WAAW,EAAE,uBAAuB;AACpC,oBAAA,MAAM,EAAE,EACP;AACJ,iBAAA,CAAA;wLA4BsB,IAAI,EAAA,CAAA;sBAAtB,SAAS;uBAAC,MAAM,CAAA;gBACO,SAAS,EAAA,CAAA;sBAAhC,SAAS;uBAAC,WAAW,CAAA;gBACG,UAAU,EAAA,CAAA;sBAAlC,SAAS;uBAAC,YAAY,CAAA;gBACC,SAAS,EAAA,CAAA;sBAAhC,SAAS;uBAAC,WAAW,CAAA;gBACG,UAAU,EAAA,CAAA;sBAAlC,SAAS;uBAAC,YAAY,CAAA;;;AEzE3B,MAAMoB,QAAM,GAAW;AACnB,IAAA;AACI,QAAA,IAAI,EAAE,EAAE;AACR,QAAA,SAAS,EAAE,qBAAqB;AACnC,KAAA;CACJ,CAAC;MAMW,yBAAyB,CAAA;;uHAAzB,yBAAyB,EAAA,IAAA,EAAA,EAAA,EAAA,MAAA,EAAA,EAAA,CAAA,eAAA,CAAA,QAAA,EAAA,CAAA,CAAA;AAAzB,yBAAA,CAAA,IAAA,GAAA,EAAA,CAAA,mBAAA,CAAA,EAAA,UAAA,EAAA,QAAA,EAAA,OAAA,EAAA,SAAA,EAAA,QAAA,EAAA,EAAA,EAAA,IAAA,EAAA,yBAAyB,0CAFxB,YAAY,CAAA,EAAA,CAAA,CAAA;wHAEb,yBAAyB,EAAA,OAAA,EAAA,CAHzB,CAAC,YAAY,CAAC,QAAQ,CAACA,QAAM,CAAC,CAAC,EAC9B,YAAY,CAAA,EAAA,CAAA,CAAA;4FAEb,yBAAyB,EAAA,UAAA,EAAA,CAAA;kBAJrC,QAAQ;AAAC,YAAA,IAAA,EAAA,CAAA;oBACN,OAAO,EAAE,CAAC,YAAY,CAAC,QAAQ,CAACA,QAAM,CAAC,CAAC;oBACxC,OAAO,EAAE,CAAC,YAAY,CAAC;AAC1B,iBAAA,CAAA;;;ACMD;MA2Ba,kBAAkB,CAAA;;gHAAlB,kBAAkB,EAAA,IAAA,EAAA,EAAA,EAAA,MAAA,EAAA,EAAA,CAAA,eAAA,CAAA,QAAA,EAAA,CAAA,CAAA;iHAAlB,kBAAkB,EAAA,YAAA,EAAA,CAvBvB,qBAAqB,CAAA,EAAA,OAAA,EAAA,CAGrB,YAAY;QACZ,yBAAyB;QAEzB,WAAW;QACX,mBAAmB;QAEnB,eAAe;QACf,cAAc;QACd,aAAa;QACb,gBAAgB;QAChB,eAAe;QACf,kBAAkB;QAElB,SAAS;QACT,iBAAiB;QAEjB,kBAAkB;QAClB,kBAAkB,CAAA,EAAA,CAAA,CAAA;AAGb,kBAAA,CAAA,IAAA,GAAA,EAAA,CAAA,mBAAA,CAAA,EAAA,UAAA,EAAA,QAAA,EAAA,OAAA,EAAA,SAAA,EAAA,QAAA,EAAA,EAAA,EAAA,IAAA,EAAA,kBAAkB,EArBlB,OAAA,EAAA,CAAA;YACL,YAAY;YACZ,yBAAyB;YAEzB,WAAW;YACX,mBAAmB;YAEnB,eAAe;YACf,cAAc;YACd,aAAa;YACb,gBAAgB;YAChB,eAAe;YACf,kBAAkB;YAElB,SAAS;YACT,iBAAiB;YAEjB,kBAAkB;YAClB,kBAAkB;AACrB,SAAA,CAAA,EAAA,CAAA,CAAA;4FAEQ,kBAAkB,EAAA,UAAA,EAAA,CAAA;kBAzB9B,QAAQ;AAAC,YAAA,IAAA,EAAA,CAAA;AACN,oBAAA,YAAY,EAAE;wBACV,qBAAqB;AACxB,qBAAA;AACD,oBAAA,OAAO,EAAE;wBACL,YAAY;wBACZ,yBAAyB;wBAEzB,WAAW;wBACX,mBAAmB;wBAEnB,eAAe;wBACf,cAAc;wBACd,aAAa;wBACb,gBAAgB;wBAChB,eAAe;wBACf,kBAAkB;wBAElB,SAAS;wBACT,iBAAiB;wBAEjB,kBAAkB;wBAClB,kBAAkB;AACrB,qBAAA;AACJ,iBAAA,CAAA;;;AC3BD;MAQa,2BAA2B,CAAA;AAgCpC,IAAA,WAAA,CACoC,IAAI,EAC5B,SAAoD,EACpD,QAAmB,EACnB,WAAwB,EACxB,cAA8B,EAC9B,aAA4B,EAC7B,gBAAkC,EACjC,gBAAkC,EAClC,aAA4B,EAAA;QARJ,IAAI,CAAA,IAAA,GAAJ,IAAI,CAAA;QAC5B,IAAS,CAAA,SAAA,GAAT,SAAS,CAA2C;QACpD,IAAQ,CAAA,QAAA,GAAR,QAAQ,CAAW;QACnB,IAAW,CAAA,WAAA,GAAX,WAAW,CAAa;QACxB,IAAc,CAAA,cAAA,GAAd,cAAc,CAAgB;QAC9B,IAAa,CAAA,aAAA,GAAb,aAAa,CAAe;QAC7B,IAAgB,CAAA,gBAAA,GAAhB,gBAAgB,CAAkB;QACjC,IAAgB,CAAA,gBAAA,GAAhB,gBAAgB,CAAkB;QAClC,IAAa,CAAA,aAAA,GAAb,aAAa,CAAe;QAvCxC,IAAe,CAAA,eAAA,GAAG,eAAe,CAAC;QAClC,IAAiB,CAAA,iBAAA,GAAG,iBAAiB,CAAC;QAEtC,IAAU,CAAA,UAAA,GAAG,UAAU,CAAC;QACxB,IAAa,CAAA,aAAA,GAAG,aAAa,CAAC;QAC9B,IAAe,CAAA,eAAA,GAAG,eAAe,CAAC;QAClC,IAAiB,CAAA,iBAAA,GAAG,iBAAiB,CAAC;QACtC,IAAa,CAAA,aAAA,GAAG,aAAa,CAAC;QAC9B,IAA2B,CAAA,2BAAA,GAAG,2BAA2B,CAAC;QAE1D,IAAS,CAAA,SAAA,GAAW,aAAa,CAAC;QAKlC,IAAO,CAAA,OAAA,GAAY,IAAI,CAAC;QAIxB,IAAe,CAAA,eAAA,GAAU,EAAE,CAAC;QAC5B,IAAoB,CAAA,oBAAA,GAAW,CAAC,CAAC;AACjC,QAAA,IAAA,CAAA,cAAc,GAAG,CAAC,IAAI,MAAM,EAAE,CAAC,CAAC;AAChC,QAAA,IAAA,CAAA,UAAU,GAAG,CAAC,IAAI,MAAM,EAAE,CAAC,CAAC;QAuI5B,IAAa,CAAA,aAAA,GAAG,CAAC,SAAoB,EAAE,WAAmB,EAAE,KAAa,KAAa;YAClF,OAAO,SAAS,CAAC,GAAG,CAAC,WAAW,CAAC,CAAC,QAAQ,CAAC,KAAK,CAAC,CAAC;AACtD,SAAC,CAAA;AAtHG,QAAA,IAAI,CAAC,MAAM,GAAG,IAAI,CAAC,MAAM,CAAC;AAC1B,QAAA,IAAI,CAAC,QAAQ,GAAG,IAAI,CAAC,QAAQ,CAAC;KACjC;IAED,QAAQ,GAAA;QACJ,IAAI,CAAC,KAAK,GAAG,IAAI,CAAC,cAAc,CAAC,UAAU,CAAC,cAAc,CAAC,CAAC;QAE5D,IAAI,CAAC,uBAAuB,EAAE,CAAC;QAC/B,IAAI,CAAC,YAAY,EAAE,CAAC;AAEpB,QAAA,IAAI,IAAI,CAAC,MAAM,IAAI,UAAU,CAAC,MAAM,EAAE;AAClC,YAAA,IAAI,CAAC,iBAAiB,CAAC,IAAI,CAAC,QAAQ,CAAC,CAAC;AACzC,SAAA;KACJ;IAED,eAAe,GAAA;QACX,IAAI,CAAC,aAAa,EAAE,CAAC;KACxB;IAED,aAAa,GAAA;QACT,MAAM,YAAY,GAAG,IAAI,CAAC,MAAM,CAAC,aAAa,CAAC,YAAY,CAAC;QAC5D,MAAM,YAAY,GAAG,IAAI,CAAC,MAAM,CAAC,aAAa,CAAC,YAAY,CAAC;AAC5D,QAAA,MAAM,YAAY,GAAG,eAAe,IAAI,YAAY,GAAG,YAAY,GAAG,EAAE,CAAC,GAAG,KAAK,CAAC;AAElF,QAAA,IAAI,CAAC,QAAQ,CAAC,QAAQ,CAAC,IAAI,CAAC,IAAI,CAAC,aAAa,EAAE,QAAQ,EAAE,YAAY,CAAC,CAAC;AACxE,QAAA,IAAI,CAAC,QAAQ,CAAC,QAAQ,CAAC,IAAI,CAAC,IAAI,CAAC,aAAa,EAAE,YAAY,EAAE,YAAY,CAAC,CAAC;KAC/E;IAEK,uBAAuB,GAAA;;AACzB,YAAA,MAAM,MAAM,GAAuB,MAAM,IAAI,CAAC,aAAa,CAAC,uBAAuB,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC;AAChG,YAAA,IAAI,CAAC,kBAAkB,GAAG,MAAM,CAAC,aAAa,CAAC;SAClD,CAAA,CAAA;AAAA,KAAA;IAED,YAAY,GAAA;QACR,IAAI,CAAC,QAAQ,GAAG,IAAI,CAAC,WAAW,CAAC,KAAK,CAAC;YACnC,IAAI,EAAE,GAAG,CAAC,UAAU,CAAC,QAAQ,CAAC,CAAC;YAC/B,eAAe,EAAE,GAAG,CAAC,UAAU,CAAC,QAAQ,CAAC,CAAC;YAC1C,MAAM,EAAE,GAAG,CAAC,UAAU,CAAC,QAAQ,CAAC,CAAC;AACpC,SAAA,CAAC,CAAC;KACN;AAED,IAAA,qBAAqB,CAAC,eAAuB,EAAA;AACzC,QAAA,MAAM,qBAAqB,GAAG,IAAI,CAAC,kBAAkB,CAAC,IAAI,CAAC,MAAM,IAAI,MAAM,CAAC,EAAE,IAAI,eAAe,CAAC,CAAC;AACnG,QAAA,IAAI,qBAAqB,EAAE;AACvB,YAAA,IAAI,CAAC,UAAU,GAAG,qBAAqB,CAAC,IAAI,CAAC;AAChD,SAAA;AAAM,aAAA;AACH,YAAA,IAAI,CAAC,UAAU,GAAG,EAAE,CAAC;AACxB,SAAA;KACJ;IAED,YAAY,GAAA;AAER,QAAA,IAAI,IAAI,CAAC,QAAQ,CAAC,OAAO,EAAE;AACvB,YAAA,IAAI,CAAC,aAAa,CAAC,SAAS,CAAC,WAAW,CAAC,kBAAkB,EAAE,WAAW,CAAC,oBAAoB,EAAE,WAAW,CAAC,KAAK,CAAC,CAAC;YAClH,OAAO;AACV,SAAA;AAAM,aAAA;AACH,YAAA,IAAI,IAAI,CAAC,MAAM,IAAI,UAAU,CAAC,MAAM,EAAE;gBAClC,IAAI,CAAC,gBAAgB,EAAE,CAAC;AAC3B,aAAA;AAAM,iBAAA,IAAI,IAAI,CAAC,MAAM,IAAI,UAAU,CAAC,MAAM,EAAE;gBACzC,IAAI,CAAC,gBAAgB,EAAE,CAAC;AAC3B,aAAA;AACJ,SAAA;KACJ;IAED,gBAAgB,GAAA;QACZ,IAAI,CAAC,gBAAgB,CAAC,gBAAgB,CAAC,IAAI,CAAC,KAAK,EAAE,IAAI,CAAC,QAAQ,CAAC,KAAK,CAAC,CAAC,SAAS,CAAC,CAAC,GAAc,KAAI;AAEjG,YAAA,IAAI,MAAM,CAAC;AACX,YAAA,MAAM,GAAG;gBACL,MAAM,EAAE,kBAAkB,CAAC,OAAO;aACrC,CAAA;AAED,YAAA,IAAI,CAAC,SAAS,CAAC,KAAK,CAAC,MAAM,CAAC,CAAC;SAEhC,EAAE,KAAK,IAAG;AACP,YAAA,OAAO,CAAC,GAAG,CAAC,6BAA6B,EAAE,KAAK,CAAC,CAAC;AACtD,SAAC,CAAC,CAAC;KACN;AAED,IAAA,iBAAiB,CAAC,QAAQ,EAAA;AACtB,QAAA,IAAI,CAAC,gBAAgB,CAAC,iBAAiB,CAAC,IAAI,CAAC,KAAK,EAAE,QAAQ,CAAC,CAAC,SAAS,CAAC,CAAC,GAAY,KAAI;AACrF,YAAA,IAAI,CAAC,OAAO,GAAG,GAAG,CAAC;AACnB,YAAA,IAAI,CAAC,WAAW,CAAC,IAAI,CAAC,OAAO,CAAC,CAAC;SAClC,EAAE,KAAK,IAAG;AACP,YAAA,OAAO,CAAC,GAAG,CAAC,8BAA8B,EAAE,KAAK,CAAC,CAAC;AACvD,SAAC,CAAC,CAAC;KACN;AAED,IAAA,WAAW,CAAC,MAAe,EAAA;AACvB,QAAA,IAAI,CAAC,QAAQ,CAAC,UAAU,CAAC,MAAM,CAAC,CAAC;AAEjC,QAAA,IAAI,CAAC,qBAAqB,CAAC,MAAM,CAAC,eAAe,CAAC,CAAC;QAEnD,IAAI,CAAC,YAAY,GAAG,IAAI,CAAC,QAAQ,CAAC,KAAK,CAAC;QAExC,IAAI,CAAC,QAAQ,CAAC,YAAY,CAAC,SAAS,CAAC,MAAK;AACtC,YAAA,IAAI,CAAC,OAAO,GAAG,OAAO,CAAC,IAAI,CAAC,YAAY,EAAE,IAAI,CAAC,QAAQ,CAAC,KAAK,CAAC,CAAC;AACnE,SAAC,CAAC,CAAC;KAEN;IAED,gBAAgB,GAAA;QACZ,IAAI,CAAC,gBAAgB,CAAC,gBAAgB,CAAC,IAAI,CAAC,KAAK,EAAE,IAAI,CAAC,QAAQ,EAAE,IAAI,CAAC,QAAQ,CAAC,KAAK,CAAC,CAAC,SAAS,CAAC,CAAC,GAAc,KAAI;AAEhH,YAAA,IAAI,MAAM,CAAC;AACX,YAAA,MAAM,GAAG;gBACL,MAAM,EAAE,kBAAkB,CAAC,OAAO;aACrC,CAAA;AAED,YAAA,IAAI,CAAC,SAAS,CAAC,KAAK,CAAC,MAAM,CAAC,CAAC;SAEhC,EAAE,KAAK,IAAG;AACP,YAAA,OAAO,CAAC,GAAG,CAAC,6BAA6B,EAAE,KAAK,CAAC,CAAC;AACtD,SAAC,CAAC,CAAA;KACL;;AA7JQ,2BAAA,CAAA,IAAA,GAAA,EAAA,CAAA,kBAAA,CAAA,EAAA,UAAA,EAAA,QAAA,EAAA,OAAA,EAAA,SAAA,EAAA,QAAA,EAAA,EAAA,EAAA,IAAA,EAAA,2BAA2B,kBAiCxB,eAAe,EAAA,EAAA,EAAA,KAAA,EAAA5B,IAAA,CAAA,YAAA,EAAA,EAAA,EAAA,KAAA,EAAA,EAAA,CAAA,SAAA,EAAA,EAAA,EAAA,KAAA,EAAAC,IAAA,CAAA,WAAA,EAAA,EAAA,EAAA,KAAA,EAAAc,IAAA,CAAA,cAAA,EAAA,EAAA,EAAA,KAAA,EAAAC,IAAA,CAAA,aAAA,EAAA,EAAA,EAAA,KAAA,EAAAT,EAAA,CAAA,gBAAA,EAAA,EAAA,EAAA,KAAA,EAAAwG,gBAAA,EAAA,EAAA,EAAA,KAAA,EAAAI,aAAA,EAAA,CAAA,EAAA,MAAA,EAAA,EAAA,CAAA,eAAA,CAAA,SAAA,EAAA,CAAA,CAAA;AAjClB,2BAAA,CAAA,IAAA,GAAA,EAAA,CAAA,oBAAA,CAAA,EAAA,UAAA,EAAA,QAAA,EAAA,OAAA,EAAA,SAAA,EAAA,IAAA,EAAA,2BAA2B,6TC5BxC,k2JAkGM,EAAA,UAAA,EAAA,CAAA,EAAA,IAAA,EAAA1G,IAAA,CAAA,YAAA,EAAA,QAAA,EAAA,gBAAA,EAAA,MAAA,EAAA,CAAA,OAAA,EAAA,YAAA,EAAA,YAAA,EAAA,oBAAA,EAAA,WAAA,CAAA,EAAA,QAAA,EAAA,CAAA,cAAA,CAAA,EAAA,EAAA,EAAA,IAAA,EAAAC,EAAA,CAAA,SAAA,EAAA,QAAA,EAAA,YAAA,EAAA,MAAA,EAAA,CAAA,UAAA,EAAA,eAAA,EAAA,UAAA,CAAA,EAAA,QAAA,EAAA,CAAA,WAAA,CAAA,EAAA,EAAA,EAAA,IAAA,EAAA,GAAA,CAAA,SAAA,EAAA,QAAA,EAAA,YAAA,EAAA,QAAA,EAAA,CAAA,WAAA,CAAA,EAAA,CAAA,EAAA,UAAA,EAAA,CAAA,EAAA,IAAA,EAAA,GAAA,CAAA,SAAA,EAAA,QAAA,EAAA,2BAAA,EAAA,MAAA,EAAA,CAAA,iBAAA,EAAA,mBAAA,EAAA,kBAAA,EAAA,gBAAA,EAAA,oBAAA,EAAA,mBAAA,EAAA,oBAAA,CAAA,EAAA,QAAA,EAAA,CAAA,WAAA,CAAA,EAAA,EAAA,EAAA,IAAA,EAAAV,IAAA,CAAA,cAAA,EAAA,QAAA,EAAA,sCAAA,EAAA,MAAA,EAAA,CAAA,MAAA,EAAA,kBAAA,EAAA,YAAA,EAAA,gBAAA,CAAA,EAAA,QAAA,EAAA,CAAA,gBAAA,CAAA,EAAA,EAAA,EAAA,IAAA,EAAA,GAAA,CAAA,UAAA,EAAA,QAAA,EAAA,cAAA,EAAA,QAAA,EAAA,CAAA,YAAA,CAAA,EAAA,EAAA,EAAA,IAAA,EAAAA,IAAA,CAAA,gBAAA,EAAA,QAAA,EAAA,8DAAA,EAAA,EAAA,EAAA,IAAA,EAAAC,IAAA,CAAA,aAAA,EAAA,QAAA,EAAA,8CAAA,EAAA,EAAA,EAAA,IAAA,EAAAA,IAAA,CAAA,oBAAA,EAAA,QAAA,EAAA,0FAAA,EAAA,EAAA,EAAA,IAAA,EAAAA,IAAA,CAAA,kBAAA,EAAA,QAAA,EAAA,aAAA,EAAA,MAAA,EAAA,CAAA,WAAA,CAAA,EAAA,OAAA,EAAA,CAAA,UAAA,CAAA,EAAA,QAAA,EAAA,CAAA,QAAA,CAAA,EAAA,EAAA,EAAA,IAAA,EAAAQ,IAAA,CAAA,QAAA,EAAA,QAAA,EAAA,WAAA,EAAA,EAAA,EAAA,IAAA,EAAAI,KAAA,CAAA,QAAA,EAAA,QAAA,EAAA,yHAAA,EAAA,MAAA,EAAA,CAAA,IAAA,EAAA,UAAA,EAAA,UAAA,EAAA,MAAA,EAAA,OAAA,EAAA,UAAA,EAAA,aAAA,EAAA,mBAAA,EAAA,kBAAA,CAAA,EAAA,QAAA,EAAA,CAAA,UAAA,CAAA,EAAA,EAAA,EAAA,IAAA,EAAAZ,IAAA,CAAA,oBAAA,EAAA,QAAA,EAAA,8MAAA,EAAA,EAAA,EAAA,IAAA,EAAAA,IAAA,CAAA,eAAA,EAAA,QAAA,EAAA,2CAAA,EAAA,EAAA,EAAA,IAAA,EAAAA,IAAA,CAAA,eAAA,EAAA,QAAA,EAAA,mBAAA,EAAA,MAAA,EAAA,CAAA,UAAA,EAAA,iBAAA,EAAA,SAAA,CAAA,EAAA,OAAA,EAAA,CAAA,eAAA,CAAA,EAAA,EAAA,EAAA,IAAA,EAAAA,IAAA,CAAA,iBAAA,EAAA,QAAA,EAAA,wIAAA,EAAA,MAAA,EAAA,CAAA,UAAA,CAAA,EAAA,EAAA,EAAA,IAAA,EAAAa,GAAA,CAAA,IAAA,EAAA,QAAA,EAAA,QAAA,EAAA,MAAA,EAAA,CAAA,MAAA,EAAA,UAAA,EAAA,UAAA,CAAA,EAAA,EAAA,EAAA,IAAA,EAAAL,IAAA,CAAA,QAAA,EAAA,QAAA,EAAA,WAAA,EAAA,MAAA,EAAA,CAAA,IAAA,CAAA,EAAA,EAAA,EAAA,IAAA,EAAAK,GAAA,CAAA,OAAA,EAAA,QAAA,EAAA,kBAAA,EAAA,MAAA,EAAA,CAAA,SAAA,EAAA,cAAA,EAAA,eAAA,CAAA,EAAA,EAAA,EAAA,IAAA,EAAAA,GAAA,CAAA,OAAA,EAAA,QAAA,EAAA,WAAA,EAAA,MAAA,EAAA,CAAA,OAAA,EAAA,SAAA,CAAA,EAAA,CAAA,EAAA,CAAA,CAAA;4FDtEO,2BAA2B,EAAA,UAAA,EAAA,CAAA;kBANvC,SAAS;AAAC,YAAA,IAAA,EAAA,CAAA;AACP,oBAAA,QAAQ,EAAE,mBAAmB;AAC7B,oBAAA,WAAW,EAAE,gCAAgC;AAC7C,oBAAA,MAAM,EAAE,EACP;AACJ,iBAAA,CAAA;;0BAkCQ,MAAM;2BAAC,eAAe,CAAA;8QALN,MAAM,EAAA,CAAA;sBAA1B,SAAS;uBAAC,QAAQ,CAAA;gBACE,MAAM,EAAA,CAAA;sBAA1B,SAAS;uBAAC,QAAQ,CAAA;gBACA,IAAI,EAAA,CAAA;sBAAtB,SAAS;uBAAC,MAAM,CAAA;;;AErDrB,MAAMc,QAAM,GAAW;AACnB,IAAA;AACI,QAAA,IAAI,EAAE,EAAE;AACR,QAAA,SAAS,EAAE,2BAA2B;AACzC,KAAA;CACJ,CAAC;MAMW,+BAA+B,CAAA;;6HAA/B,+BAA+B,EAAA,IAAA,EAAA,EAAA,EAAA,MAAA,EAAA,EAAA,CAAA,eAAA,CAAA,QAAA,EAAA,CAAA,CAAA;AAA/B,+BAAA,CAAA,IAAA,GAAA,EAAA,CAAA,mBAAA,CAAA,EAAA,UAAA,EAAA,QAAA,EAAA,OAAA,EAAA,SAAA,EAAA,QAAA,EAAA,EAAA,EAAA,IAAA,EAAA,+BAA+B,0CAF9B,YAAY,CAAA,EAAA,CAAA,CAAA;8HAEb,+BAA+B,EAAA,OAAA,EAAA,CAH/B,CAAC,YAAY,CAAC,QAAQ,CAACA,QAAM,CAAC,CAAC,EAC9B,YAAY,CAAA,EAAA,CAAA,CAAA;4FAEb,+BAA+B,EAAA,UAAA,EAAA,CAAA;kBAJ3C,QAAQ;AAAC,YAAA,IAAA,EAAA,CAAA;oBACN,OAAO,EAAE,CAAC,YAAY,CAAC,QAAQ,CAACA,QAAM,CAAC,CAAC;oBACxC,OAAO,EAAE,CAAC,YAAY,CAAC;AAC1B,iBAAA,CAAA;;;MCiCY,wBAAwB,CAAA;;sHAAxB,wBAAwB,EAAA,IAAA,EAAA,EAAA,EAAA,MAAA,EAAA,EAAA,CAAA,eAAA,CAAA,QAAA,EAAA,CAAA,CAAA;uHAAxB,wBAAwB,EAAA,YAAA,EAAA,CAtB7B,2BAA2B,CAAA,EAAA,OAAA,EAAA,CAG3B,YAAY;QACZ,+BAA+B;QAE/B,WAAW;QACX,mBAAmB;QAEnB,aAAa;QACb,cAAc;QACd,eAAe;QACf,gBAAgB;QAChB,eAAe;QACf,kBAAkB;QAClB,eAAe;QACf,eAAe;QACf,eAAe;QAEf,SAAS,CAAA,EAAA,CAAA,CAAA;AAGJ,wBAAA,CAAA,IAAA,GAAA,EAAA,CAAA,mBAAA,CAAA,EAAA,UAAA,EAAA,QAAA,EAAA,OAAA,EAAA,SAAA,EAAA,QAAA,EAAA,EAAA,EAAA,IAAA,EAAA,wBAAwB,EApBxB,OAAA,EAAA,CAAA;YACL,YAAY;YACZ,+BAA+B;YAE/B,WAAW;YACX,mBAAmB;YAEnB,aAAa;YACb,cAAc;YACd,eAAe;YACf,gBAAgB;YAChB,eAAe;YACf,kBAAkB;YAClB,eAAe;YACf,eAAe;YACf,eAAe;YAEf,SAAS;AACZ,SAAA,CAAA,EAAA,CAAA,CAAA;4FAEQ,wBAAwB,EAAA,UAAA,EAAA,CAAA;kBAxBpC,QAAQ;AAAC,YAAA,IAAA,EAAA,CAAA;AACN,oBAAA,YAAY,EAAE;wBACV,2BAA2B;AAC9B,qBAAA;AACD,oBAAA,OAAO,EAAE;wBACL,YAAY;wBACZ,+BAA+B;wBAE/B,WAAW;wBACX,mBAAmB;wBAEnB,aAAa;wBACb,cAAc;wBACd,eAAe;wBACf,gBAAgB;wBAChB,eAAe;wBACf,kBAAkB;wBAClB,eAAe;wBACf,eAAe;wBACf,eAAe;wBAEf,SAAS;AACZ,qBAAA;AACJ,iBAAA,CAAA;;;AC1CD,MAAMA,QAAM,GAAW;AACnB,IAAA;AACI,QAAA,IAAI,EAAE,EAAE;AACR,QAAA,SAAS,EAAE,6BAA6B;AAC3C,KAAA;CACJ,CAAC;MAMW,iCAAiC,CAAA;;+HAAjC,iCAAiC,EAAA,IAAA,EAAA,EAAA,EAAA,MAAA,EAAA,EAAA,CAAA,eAAA,CAAA,QAAA,EAAA,CAAA,CAAA;AAAjC,iCAAA,CAAA,IAAA,GAAA,EAAA,CAAA,mBAAA,CAAA,EAAA,UAAA,EAAA,QAAA,EAAA,OAAA,EAAA,SAAA,EAAA,QAAA,EAAA,EAAA,EAAA,IAAA,EAAA,iCAAiC,0CAFhC,YAAY,CAAA,EAAA,CAAA,CAAA;gIAEb,iCAAiC,EAAA,OAAA,EAAA,CAHjC,CAAC,YAAY,CAAC,QAAQ,CAACA,QAAM,CAAC,CAAC,EAC9B,YAAY,CAAA,EAAA,CAAA,CAAA;4FAEb,iCAAiC,EAAA,UAAA,EAAA,CAAA;kBAJ7C,QAAQ;AAAC,YAAA,IAAA,EAAA,CAAA;oBACN,OAAO,EAAE,CAAC,YAAY,CAAC,QAAQ,CAACA,QAAM,CAAC,CAAC;oBACxC,OAAO,EAAE,CAAC,YAAY,CAAC;AAC1B,iBAAA,CAAA;;;MCiCY,0BAA0B,CAAA;;wHAA1B,0BAA0B,EAAA,IAAA,EAAA,EAAA,EAAA,MAAA,EAAA,EAAA,CAAA,eAAA,CAAA,QAAA,EAAA,CAAA,CAAA;yHAA1B,0BAA0B,EAAA,YAAA,EAAA,CAtB/B,6BAA6B,CAAA,EAAA,OAAA,EAAA,CAG7B,YAAY;QACZ,iCAAiC;QAEjC,WAAW;QACX,mBAAmB;QAEnB,aAAa;QACb,cAAc;QACd,eAAe;QACf,gBAAgB;QAChB,eAAe;QACf,kBAAkB;QAClB,eAAe;QACf,eAAe;QACf,eAAe;QAEf,SAAS,CAAA,EAAA,CAAA,CAAA;AAGJ,0BAAA,CAAA,IAAA,GAAA,EAAA,CAAA,mBAAA,CAAA,EAAA,UAAA,EAAA,QAAA,EAAA,OAAA,EAAA,SAAA,EAAA,QAAA,EAAA,EAAA,EAAA,IAAA,EAAA,0BAA0B,EApB1B,OAAA,EAAA,CAAA;YACL,YAAY;YACZ,iCAAiC;YAEjC,WAAW;YACX,mBAAmB;YAEnB,aAAa;YACb,cAAc;YACd,eAAe;YACf,gBAAgB;YAChB,eAAe;YACf,kBAAkB;YAClB,eAAe;YACf,eAAe;YACf,eAAe;YAEf,SAAS;AACZ,SAAA,CAAA,EAAA,CAAA,CAAA;4FAEQ,0BAA0B,EAAA,UAAA,EAAA,CAAA;kBAxBtC,QAAQ;AAAC,YAAA,IAAA,EAAA,CAAA;AACN,oBAAA,YAAY,EAAE;wBACV,6BAA6B;AAChC,qBAAA;AACD,oBAAA,OAAO,EAAE;wBACL,YAAY;wBACZ,iCAAiC;wBAEjC,WAAW;wBACX,mBAAmB;wBAEnB,aAAa;wBACb,cAAc;wBACd,eAAe;wBACf,gBAAgB;wBAChB,eAAe;wBACf,kBAAkB;wBAClB,eAAe;wBACf,eAAe;wBACf,eAAe;wBAEf,SAAS;AACZ,qBAAA;AACJ,iBAAA,CAAA;;;ACRD;MAQa,mBAAmB,CAAA;AAkC5B,IAAA,WAAA,CACY,MAAiB,EACjB,cAA8B,EAC9B,gBAAkC,EAClC,aAA4B,EAAA;QAH5B,IAAM,CAAA,MAAA,GAAN,MAAM,CAAW;QACjB,IAAc,CAAA,cAAA,GAAd,cAAc,CAAgB;QAC9B,IAAgB,CAAA,gBAAA,GAAhB,gBAAgB,CAAkB;QAClC,IAAa,CAAA,aAAA,GAAb,aAAa,CAAe;QApCxC,IAAM,CAAA,MAAA,GAAG,MAAM,CAAC;QAChB,IAAW,CAAA,WAAA,GAAG,WAAW,CAAC;QAE1B,IAAiB,CAAA,iBAAA,GAAG,iBAAiB,CAAC;QACtC,IAAc,CAAA,cAAA,GAAG,cAAc,CAAC;QAChC,IAAe,CAAA,eAAA,GAAG,eAAe,CAAC;QAElC,IAAiB,CAAA,iBAAA,GAAG,iBAAiB,CAAC;QACtC,IAAkB,CAAA,kBAAA,GAAG,kBAAkB,CAAC;QACxC,IAAU,CAAA,UAAA,GAAG,UAAU,CAAC;QAExB,IAAmB,CAAA,mBAAA,GAAW,aAAa,CAAC;AAI5C,QAAA,IAAA,CAAA,UAAU,GAAG,CAAC,IAAI,kBAAkB,EAAE,CAAC,CAAC;QACxC,IAAgB,CAAA,gBAAA,GAAW,CAAC,CAAC;AAC7B,QAAA,IAAA,CAAA,eAAe,GAAa,CAAC,IAAI,EAAE,MAAM,EAAE,mBAAmB,EAAE,MAAM,EAAE,QAAQ,CAAC,CAAC;QAClF,IAAU,CAAA,UAAA,GAAY,KAAK,CAAC;QAE5B,IAAQ,CAAA,QAAA,GAAG,IAAI,WAAW,CAAC,EAAE,EAAE,UAAU,CAAC,QAAQ,CAAC,CAAC;QAEpD,IAAa,CAAA,aAAA,GAAY,KAAK,CAAC;AAC/B,QAAA,IAAA,CAAA,eAAe,GAAgB,IAAI,WAAW,EAAE,CAAC;QACjD,IAAS,CAAA,SAAA,GAAkB,EAAE,CAAC;AAqH9B,QAAA,IAAA,CAAA,YAAY,GAAG,CAAC,MAAM,EAAE,GAAG,KAAI;YAC3B,MAAM,SAAS,GAAG,IAAI,CAAC,MAAM,CAAC,IAAI,CAAC,2BAA2B,EAC1D;AACI,gBAAA,MAAM,EAAE,OAAO;AACf,gBAAA,KAAK,EAAE,OAAO;gBACd,QAAQ,EAAE,EAAE,KAAK,EAAE,MAAM,EAAE,GAAG,EAAE,KAAK,EAAE;AACvC,gBAAA,YAAY,EAAE,IAAI;AAClB,gBAAA,UAAU,EAAE,4BAA4B;AACxC,gBAAA,IAAI,EAAE;AACF,oBAAA,MAAM,EAAE,MAAM;oBACd,QAAQ,EAAE,GAAG,CAAC,EAAE;AACnB,iBAAA;AACJ,aAAA,CAAC,CAAC;YAEP,SAAS,CAAC,WAAW,EAAE;AAClB,iBAAA,SAAS,CAAC,CAAC,MAAM,KAAI;AAClB,gBAAA,IAAI,MAAM,CAAC,MAAM,IAAI,kBAAkB,CAAC,OAAO,EAAE;AAC7C,oBAAA,IAAI,CAAC,UAAU,CAAC,aAAa,CAAC,KAAK,EAAE,CAAC;AACzC,iBAAA;AACL,aAAC,CAAC,CAAC;AACX,SAAC,CAAA;KA5HI;IAEL,QAAQ,GAAA;QACJ,IAAI,CAAC,KAAK,GAAG,IAAI,CAAC,cAAc,CAAC,UAAU,CAAC,cAAc,CAAC,CAAC;QAE5D,IAAI,CAAC,uBAAuB,EAAE,CAAC;KAClC;IAEK,uBAAuB,GAAA;;AACzB,YAAA,MAAM,MAAM,GAAuB,MAAM,IAAI,CAAC,aAAa,CAAC,uBAAuB,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC;AAChG,YAAA,MAAM,MAAM,GAAG;AACX,gBAAA,IAAI,EAAE,CAAC;AACP,gBAAA,MAAM,EAAE,KAAK;AACb,gBAAA,OAAO,EAAE,KAAK;AACd,gBAAA,MAAM,EAAE,EAAE;aACb,CAAA;AACD,YAAA,MAAM,CAAC,aAAa,CAAC,OAAO,CAAC,MAAM,CAAC,CAAC;AACrC,YAAA,IAAI,CAAC,cAAc,GAAG,MAAM,CAAC,aAAa,CAAC;SAC9C,CAAA,CAAA;AAAA,KAAA;IAED,eAAe,GAAA;AACX,QAAA,KAAK,CACD,IAAI,CAAC,IAAI,CAAC,UAAU,EACpB,IAAI,CAAC,UAAU,CAAC,IAAI,EACpB,SAAS,CAAC,IAAI,CAAC,UAAU,CAAC,aAAa,EAAE,OAAO,CAAC,CACpD,CAAC,IAAI,CACF,SAAS,CAAC,EAAE,CAAC,EACb,SAAS,CAAC,MAAU;AAEhB,YAAA,IAAI,CAAC,SAAS,GAAG,EAAE,CAAC;YAEpB,IAAI,IAAI,CAAC,UAAU,EAAE;AACjB,gBAAA,IAAI,WAAW,GAAG,OAAO,GAAG,IAAI,CAAC,WAAW,CAAC;AAChD,aAAA;YAED,IAAI,IAAI,CAAC,aAAa,EAAE;AACpB,gBAAA,IAAI,IAAI,CAAC,eAAe,CAAC,KAAK,IAAI,KAAK,EAAE;AACrC,oBAAA,IAAI,CAAC,aAAa,GAAG,KAAK,CAAC;AAC9B,iBAAA;AAAM,qBAAA;AACH,oBAAA,IAAI,CAAC,SAAS,CAAC,IAAI,CAAC,gBAAgB,GAAG,IAAI,CAAC,eAAe,CAAC,KAAK,CAAC,CAAC;AACtE,iBAAA;AACJ,aAAA;YAED,OAAO,IAAI,CAAC,gBAAgB,CAAC,mBAAmB,CAC5C,IAAI,CAAC,SAAS,CAAC,SAAS,EACxB,IAAI,CAAC,SAAS,CAAC,QAAQ,EACvB,IAAI,CAAC,IAAI,CAAC,MAAM,EAChB,IAAI,CAAC,IAAI,CAAC,SAAS,EACnB,WAAW,EACX,IAAI,CAAC,SAAS,EACd,IAAI,CAAC,KAAK,CACb,CAAC,IAAI,CAAC,UAAU,CAAC,MAAMuE,EAAY,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC;AACjD,SAAC,CAAC,EACF,GAAG,CAAC,CAAC,QAAoC,KAAS;YAC9C,IAAI,QAAQ,IAAI,IAAI,EAAE;AAClB,gBAAA,IAAI,CAAC,gBAAgB,GAAG,CAAC,CAAC;AAC1B,gBAAA,OAAO,EAAE,CAAC;AACb,aAAA;AAED,YAAA,IAAI,CAAC,gBAAgB,GAAG,QAAQ,CAAC,UAAU,CAAC;YAC5C,OAAO,QAAQ,CAAC,OAAO,CAAC;SAC3B,CAAC,CACL,CAAC,SAAS,CAAC,CAAC,UAAU,KAAI;AACvB,YAAA,IAAI,CAAC,UAAU,GAAG,UAAU,CAAC;AACjC,SAAC,CAAC,CAAC;KACN;AAED,IAAA,QAAQ,CAAC,KAAa,EAAA;AAClB,QAAA,IAAI,CAAC,UAAU,GAAG,IAAI,CAAC;AACvB,QAAA,IAAI,CAAC,WAAW,GAAG,KAAK,CAAC;AAEzB,QAAA,IAAI,KAAK,CAAC,MAAM,IAAI,CAAC,EAAE;YACnB,IAAI,CAAC,WAAW,EAAE,CAAC;AACtB,SAAA;AAED,QAAA,IAAI,CAAC,UAAU,CAAC,aAAa,CAAC,KAAK,EAAE,CAAC;KACzC;IAED,WAAW,GAAA;AACP,QAAA,IAAI,CAAC,UAAU,GAAG,KAAK,CAAC;AACxB,QAAA,IAAI,CAAC,SAAS,CAAC,WAAW,EAAE,CAAC;KAChC;AAED,IAAA,YAAY,CAAC,MAAc,EAAA;QACvB,MAAM,SAAS,GAAG,IAAI,CAAC,MAAM,CAAC,IAAI,CAAC,2BAA2B,EAC1D;AACI,YAAA,MAAM,EAAE,OAAO;AACf,YAAA,KAAK,EAAE,OAAO;YACd,QAAQ,EAAE,EAAE,KAAK,EAAE,MAAM,EAAE,GAAG,EAAE,KAAK,EAAE;AACvC,YAAA,YAAY,EAAE,IAAI;AAClB,YAAA,UAAU,EAAE,4BAA4B;AACxC,YAAA,IAAI,EAAE;AACF,gBAAA,MAAM,EAAE,MAAM;AACjB,aAAA;AACJ,SAAA,CAAC,CAAC;QAEP,SAAS,CAAC,WAAW,EAAE;AAClB,aAAA,SAAS,CAAC,CAAC,MAAM,KAAI;AAClB,YAAA,IAAI,MAAM,CAAC,MAAM,IAAI,kBAAkB,CAAC,OAAO,EAAE;AAC7C,gBAAA,IAAI,CAAC,UAAU,CAAC,aAAa,CAAC,KAAK,EAAE,CAAC;AACzC,aAAA;AACL,SAAC,CAAC,CAAC;KACV;AAwBD,IAAA,gBAAgB,CAAC,MAAM,EAAA;QAEnB,MAAM,MAAM,GAAG,IAAI,CAAC,MAAM,CAAC,IAAI,CAAC,kBAAkB,EAAE;AAChD,YAAA,QAAQ,EAAE,OAAO;AACjB,YAAA,QAAQ,EAAE,OAAO;AACjB,YAAA,IAAI,EAAE;gBACF,IAAI,EAAE,aAAa,CAAC,MAAM;AAC1B,gBAAA,IAAI,EAAE,WAAW;AACjB,gBAAA,MAAM,EAAE,qBAAqB;gBAC7B,IAAI,EAAE,KAAK,GAAG,MAAM,CAAC,IAAI,GAAG,MAAM,GAAG,2EAA2E;gBAChH,SAAS,EAAE,eAAe,CAAC,gBAAgB;gBAC3C,SAAS,EAAE,eAAe,CAAC,gBAAgB;AAC9C,aAAA;AACJ,SAAA,CAAC,CAAC;QACH,MAAM,CAAC,WAAW,EAAE,CAAC,SAAS,CAAC,GAAG,IAAG;AACjC,YAAA,IAAI,GAAG,EAAE;AACL,gBAAA,IAAI,CAAC,gBAAgB,CAAC,MAAM,CAAC,EAAE,CAAC,CAAC;AACpC,aAAA;AACL,SAAC,CAAC,CAAA;KACL;AAED,IAAA,gBAAgB,CAAC,QAAQ,EAAA;AACrB,QAAA,IAAI,CAAC,gBAAgB,CAAC,gBAAgB,CAAC,IAAI,CAAC,KAAK,EAAE,QAAQ,CAAC,CAAC,SAAS,CAAC,CAAC,SAAS,KAAI;AACjF,YAAA,IAAI,SAAS,EAAE;AACX,gBAAA,IAAI,CAAC,UAAU,CAAC,aAAa,CAAC,KAAK,EAAE,CAAC;AACzC,aAAA;AACL,SAAC,CAAC,CAAC;KACN;;iHAhMQ,mBAAmB,EAAA,IAAA,EAAA,CAAA,EAAA,KAAA,EAAAnG,IAAA,CAAA,SAAA,EAAA,EAAA,EAAA,KAAA,EAAAC,IAAA,CAAA,cAAA,EAAA,EAAA,EAAA,KAAA,EAAAmH,gBAAA,EAAA,EAAA,EAAA,KAAA,EAAAV,aAAA,EAAA,CAAA,EAAA,MAAA,EAAA,EAAA,CAAA,eAAA,CAAA,SAAA,EAAA,CAAA,CAAA;AAAnB,mBAAA,CAAA,IAAA,GAAA,EAAA,CAAA,oBAAA,CAAA,EAAA,UAAA,EAAA,QAAA,EAAA,OAAA,EAAA,SAAA,EAAA,IAAA,EAAA,mBAAmB,sfC/ChC,y8JAqGM,EAAA,UAAA,EAAA,CAAA,EAAA,IAAA,EAAAnG,EAAA,CAAA,qBAAA,EAAA,QAAA,EAAA,oBAAA,EAAA,MAAA,EAAA,CAAA,MAAA,EAAA,UAAA,EAAA,OAAA,EAAA,mBAAA,CAAA,EAAA,OAAA,EAAA,CAAA,YAAA,CAAA,EAAA,EAAA,EAAA,IAAA,EAAAU,IAAA,CAAA,eAAA,EAAA,QAAA,EAAA,SAAA,EAAA,MAAA,EAAA,CAAA,SAAA,EAAA,MAAA,EAAA,OAAA,EAAA,MAAA,EAAA,OAAA,EAAA,MAAA,EAAA,QAAA,EAAA,MAAA,EAAA,MAAA,EAAA,MAAA,EAAA,QAAA,EAAA,SAAA,EAAA,QAAA,EAAA,QAAA,EAAA,YAAA,EAAA,WAAA,EAAA,UAAA,CAAA,EAAA,EAAA,EAAA,IAAA,EAAAT,IAAA,CAAA,QAAA,EAAA,QAAA,EAAA,6BAAA,EAAA,QAAA,EAAA,CAAA,UAAA,CAAA,EAAA,EAAA,EAAA,IAAA,EAAA,EAAA,CAAA,aAAA,EAAA,QAAA,EAAA,mBAAA,EAAA,MAAA,EAAA,CAAA,UAAA,EAAA,eAAA,EAAA,uBAAA,EAAA,cAAA,EAAA,iBAAA,EAAA,OAAA,CAAA,EAAA,QAAA,EAAA,CAAA,eAAA,CAAA,EAAA,EAAA,EAAA,IAAA,EAAAD,EAAA,CAAA,qBAAA,EAAA,QAAA,EAAA,eAAA,EAAA,MAAA,EAAA,CAAA,QAAA,EAAA,QAAA,EAAA,eAAA,EAAA,qBAAA,EAAA,UAAA,EAAA,gBAAA,EAAA,YAAA,EAAA,MAAA,EAAA,OAAA,EAAA,MAAA,EAAA,UAAA,EAAA,WAAA,CAAA,EAAA,OAAA,EAAA,CAAA,MAAA,EAAA,OAAA,EAAA,UAAA,CAAA,EAAA,EAAA,EAAA,IAAA,EAAAC,IAAA,CAAA,YAAA,EAAA,QAAA,EAAA,oCAAA,EAAA,QAAA,EAAA,CAAA,cAAA,CAAA,EAAA,EAAA,EAAA,IAAA,EAAAA,IAAA,CAAA,MAAA,EAAA,QAAA,EAAA,sBAAA,EAAA,QAAA,EAAA,CAAA,QAAA,CAAA,EAAA,EAAA,EAAA,IAAA,EAAAE,IAAA,CAAA,YAAA,EAAA,QAAA,EAAA,eAAA,EAAA,MAAA,EAAA,CAAA,UAAA,CAAA,EAAA,QAAA,EAAA,CAAA,cAAA,CAAA,EAAA,CAAA,EAAA,UAAA,EAAA,CAAA,EAAA,IAAA,EAAA,GAAA,CAAA,SAAA,EAAA,QAAA,EAAA,2BAAA,EAAA,MAAA,EAAA,CAAA,iBAAA,EAAA,mBAAA,EAAA,kBAAA,EAAA,gBAAA,EAAA,oBAAA,EAAA,mBAAA,EAAA,oBAAA,CAAA,EAAA,QAAA,EAAA,CAAA,WAAA,CAAA,EAAA,EAAA,EAAA,IAAA,EAAA,GAAA,CAAA,UAAA,EAAA,QAAA,EAAA,cAAA,EAAA,QAAA,EAAA,CAAA,YAAA,CAAA,EAAA,EAAA,EAAA,IAAA,EAAA,EAAA,CAAA,OAAA,EAAA,QAAA,EAAA,WAAA,EAAA,MAAA,EAAA,CAAA,iBAAA,EAAA,cAAA,EAAA,kBAAA,EAAA,qBAAA,EAAA,eAAA,CAAA,EAAA,OAAA,EAAA,CAAA,eAAA,CAAA,EAAA,QAAA,EAAA,CAAA,SAAA,CAAA,EAAA,EAAA,EAAA,IAAA,EAAAF,IAAA,CAAA,YAAA,EAAA,QAAA,EAAA,gBAAA,EAAA,MAAA,EAAA,CAAA,QAAA,EAAA,cAAA,CAAA,EAAA,EAAA,EAAA,IAAA,EAAAA,IAAA,CAAA,gBAAA,EAAA,QAAA,EAAA,oBAAA,EAAA,EAAA,EAAA,IAAA,EAAAA,IAAA,CAAA,aAAA,EAAA,QAAA,EAAA,sCAAA,EAAA,EAAA,EAAA,IAAA,EAAAA,IAAA,CAAA,UAAA,EAAA,QAAA,EAAA,cAAA,EAAA,EAAA,EAAA,IAAA,EAAAA,IAAA,CAAA,OAAA,EAAA,QAAA,EAAA,wBAAA,EAAA,EAAA,EAAA,IAAA,EAAAA,IAAA,CAAA,eAAA,EAAA,QAAA,EAAA,mBAAA,EAAA,MAAA,EAAA,CAAA,iBAAA,EAAA,uBAAA,CAAA,EAAA,EAAA,EAAA,IAAA,EAAAA,IAAA,CAAA,SAAA,EAAA,QAAA,EAAA,aAAA,EAAA,MAAA,EAAA,CAAA,kBAAA,EAAA,eAAA,CAAA,EAAA,EAAA,EAAA,IAAA,EAAAA,IAAA,CAAA,YAAA,EAAA,QAAA,EAAA,2BAAA,EAAA,CAAA,EAAA,CAAA,CAAA;4FDtDO,mBAAmB,EAAA,UAAA,EAAA,CAAA;kBAN/B,SAAS;AAAC,YAAA,IAAA,EAAA,CAAA;AACP,oBAAA,QAAQ,EAAE,UAAU;AACpB,oBAAA,WAAW,EAAE,uBAAuB;AACpC,oBAAA,MAAM,EAAE,EACP;AACJ,iBAAA,CAAA;sLA6BsB,IAAI,EAAA,CAAA;sBAAtB,SAAS;uBAAC,MAAM,CAAA;gBACO,SAAS,EAAA,CAAA;sBAAhC,SAAS;uBAAC,WAAW,CAAA;gBACG,UAAU,EAAA,CAAA;sBAAlC,SAAS;uBAAC,YAAY,CAAA;gBACC,SAAS,EAAA,CAAA;sBAAhC,SAAS;uBAAC,WAAW,CAAA;gBACG,UAAU,EAAA,CAAA;sBAAlC,SAAS;uBAAC,YAAY,CAAA;;;AE1E3B,MAAMoB,QAAM,GAAW;AACnB,IAAA;AACI,QAAA,IAAI,EAAE,EAAE;AACR,QAAA,SAAS,EAAE,mBAAmB;AACjC,KAAA;CACJ,CAAC;MAMW,uBAAuB,CAAA;;qHAAvB,uBAAuB,EAAA,IAAA,EAAA,EAAA,EAAA,MAAA,EAAA,EAAA,CAAA,eAAA,CAAA,QAAA,EAAA,CAAA,CAAA;AAAvB,uBAAA,CAAA,IAAA,GAAA,EAAA,CAAA,mBAAA,CAAA,EAAA,UAAA,EAAA,QAAA,EAAA,OAAA,EAAA,SAAA,EAAA,QAAA,EAAA,EAAA,EAAA,IAAA,EAAA,uBAAuB,0CAFtB,YAAY,CAAA,EAAA,CAAA,CAAA;sHAEb,uBAAuB,EAAA,OAAA,EAAA,CAHvB,CAAC,YAAY,CAAC,QAAQ,CAACA,QAAM,CAAC,CAAC,EAC9B,YAAY,CAAA,EAAA,CAAA,CAAA;4FAEb,uBAAuB,EAAA,UAAA,EAAA,CAAA;kBAJnC,QAAQ;AAAC,YAAA,IAAA,EAAA,CAAA;oBACN,OAAO,EAAE,CAAC,YAAY,CAAC,QAAQ,CAACA,QAAM,CAAC,CAAC;oBACxC,OAAO,EAAE,CAAC,YAAY,CAAC;AAC1B,iBAAA,CAAA;;;ACMD;MA2Ba,gBAAgB,CAAA;;8GAAhB,gBAAgB,EAAA,IAAA,EAAA,EAAA,EAAA,MAAA,EAAA,EAAA,CAAA,eAAA,CAAA,QAAA,EAAA,CAAA,CAAA;+GAAhB,gBAAgB,EAAA,YAAA,EAAA,CAvBrB,mBAAmB,CAAA,EAAA,OAAA,EAAA,CAGnB,YAAY;QACZ,uBAAuB;QAEvB,WAAW;QACX,mBAAmB;QAEnB,eAAe;QACf,cAAc;QACd,aAAa;QACb,gBAAgB;QAChB,eAAe;QACf,kBAAkB;QAElB,SAAS;QACT,iBAAiB;QAEjB,kBAAkB;QAClB,kBAAkB,CAAA,EAAA,CAAA,CAAA;AAGb,gBAAA,CAAA,IAAA,GAAA,EAAA,CAAA,mBAAA,CAAA,EAAA,UAAA,EAAA,QAAA,EAAA,OAAA,EAAA,SAAA,EAAA,QAAA,EAAA,EAAA,EAAA,IAAA,EAAA,gBAAgB,EArBhB,OAAA,EAAA,CAAA;YACL,YAAY;YACZ,uBAAuB;YAEvB,WAAW;YACX,mBAAmB;YAEnB,eAAe;YACf,cAAc;YACd,aAAa;YACb,gBAAgB;YAChB,eAAe;YACf,kBAAkB;YAElB,SAAS;YACT,iBAAiB;YAEjB,kBAAkB;YAClB,kBAAkB;AACrB,SAAA,CAAA,EAAA,CAAA,CAAA;4FAEQ,gBAAgB,EAAA,UAAA,EAAA,CAAA;kBAzB5B,QAAQ;AAAC,YAAA,IAAA,EAAA,CAAA;AACN,oBAAA,YAAY,EAAE;wBACV,mBAAmB;AACtB,qBAAA;AACD,oBAAA,OAAO,EAAE;wBACL,YAAY;wBACZ,uBAAuB;wBAEvB,WAAW;wBACX,mBAAmB;wBAEnB,eAAe;wBACf,cAAc;wBACd,aAAa;wBACb,gBAAgB;wBAChB,eAAe;wBACf,kBAAkB;wBAElB,SAAS;wBACT,iBAAiB;wBAEjB,kBAAkB;wBAClB,kBAAkB;AACrB,qBAAA;AACJ,iBAAA,CAAA;;;AC5BD;MAQa,kCAAkC,CAAA;AA0B3C,IAAA,WAAA,CACY,WAAwB,EACxB,cAA8B,EAC9B,aAA4B,EAC7B,gBAAkC,EACjC,gBAAkC,EAClC,mBAAwC,EACxC,gBAAkC,EAAA;QANlC,IAAW,CAAA,WAAA,GAAX,WAAW,CAAa;QACxB,IAAc,CAAA,cAAA,GAAd,cAAc,CAAgB;QAC9B,IAAa,CAAA,aAAA,GAAb,aAAa,CAAe;QAC7B,IAAgB,CAAA,gBAAA,GAAhB,gBAAgB,CAAkB;QACjC,IAAgB,CAAA,gBAAA,GAAhB,gBAAgB,CAAkB;QAClC,IAAmB,CAAA,mBAAA,GAAnB,mBAAmB,CAAqB;QACxC,IAAgB,CAAA,gBAAA,GAAhB,gBAAgB,CAAkB;QA/B9C,IAAe,CAAA,eAAA,GAAG,eAAe,CAAC;QAElC,IAAU,CAAA,UAAA,GAAG,UAAU,CAAC;QACxB,IAAa,CAAA,aAAA,GAAG,aAAa,CAAC;QAC9B,IAAe,CAAA,eAAA,GAAG,eAAe,CAAC;QAClC,IAAa,CAAA,aAAA,GAAG,aAAa,CAAC;QAC9B,IAAoB,CAAA,oBAAA,GAAG,oBAAoB,CAAC;QAC5C,IAAoB,CAAA,oBAAA,GAAG,oBAAoB,CAAC;QAC5C,IAA2B,CAAA,2BAAA,GAAG,2BAA2B,CAAC;QAG1D,IAAO,CAAA,OAAA,GAAY,IAAI,CAAC;AAMxB,QAAA,IAAA,CAAA,yBAAyB,GAAG,IAAI,uBAAuB,EAAE,CAAC;QAE1D,IAAqB,CAAA,qBAAA,GAAU,EAAE,CAAC;QAClC,IAAS,CAAA,SAAA,GAAG,IAAI,cAAc,CAAC,IAAI,EAAE,EAAE,CAAC,CAAC;QAEzC,IAA8B,CAAA,8BAAA,GAA6B,EAAE,CAAC;AAiL9D,QAAA,IAAA,CAAA,QAAQ,GAAG,CAAC,OAAe,EAAE,KAAa,KAAI;AAC1C,YAAA,OAAO,IAAI,CAAC,kBAAkB,CAAC,GAAG,CAAC,OAAO,CAAC,CAAC,QAAQ,CAAC,KAAK,CAAC,CAAC;AAChE,SAAC,CAAA;KAzKI;IAEL,QAAQ,GAAA;QACJ,IAAI,CAAC,KAAK,GAAG,IAAI,CAAC,cAAc,CAAC,UAAU,CAAC,cAAc,CAAC,CAAC;QAE5D,IAAI,CAAC,uBAAuB,EAAE,CAAC;QAC/B,IAAI,CAAC,sBAAsB,EAAE,CAAC;KACjC;IAED,uBAAuB,GAAA;AACnB,QAAA,IAAI,CAAC,gBAAgB,CAAC,uBAAuB,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC,SAAS,CAAC,CAAC,GAA6B,KAAI;AAClG,YAAA,IAAI,CAAC,yBAAyB,GAAG,GAAG,CAAC;YACrC,IAAI,CAAC,uBAAuB,EAAE,CAAC;AACnC,SAAC,EACG,KAAK,IAAI,OAAO,CAAC,GAAG,CAAC,QAAQ,EAAE,KAAK,CAAC,CACxC,CAAC;KACL;IAED,uBAAuB,GAAA;AACnB,QAAA,IAAI,CAAC,kBAAkB,CAAC,YAAY,CAAC,SAAS,CAAC,MAAK,EAAG,IAAI,CAAC,OAAO,GAAG,OAAO,CAAC,IAAI,CAAC,aAAa,EAAE,IAAI,CAAC,kBAAkB,CAAC,WAAW,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC;AAE7I,QAAA,IAAI,CAAC,mBAAmB,CAAC,uBAAuB,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC,SAAS,CAAC,CAAC,QAA+B,KAAI;AACvG,YAAA,IAAI,QAAQ,EAAE;AACV,gBAAA,IAAI,CAAC,iBAAiB,GAAG,QAAQ,CAAC,oBAAoB,CAAC;gBAEvD,IAAI,CAAC,iBAAiB,CAAC,OAAO,CAAC,CAAC,SAAS,KAAI;AACzC,oBAAA,IAAI,CAAC,qBAAqB,CAAC,IAAI,CAAC,SAAS,CAAC,CAAC;AAC3C,oBAAA,IAAI,CAAC,sBAAsB,CAAC,IAAI,CAAC,IAAI,CAAC,yBAAyB,CAAC,SAAS,CAAC,EAAE,CAAC,CAAC,CAAC;oBAE/E,IAAI,aAAa,GAAG,IAAI,sBAAsB,CAAC,CAAC,OAAO,CAAC,CAAC,CAAC;AAC1D,oBAAA,aAAa,CAAC,SAAS,GAAG,SAAS,CAAC,kBAAkB,CAAC;oBACvD,aAAa,CAAC,kBAAkB,EAAE,CAAC;AACnC,oBAAA,IAAI,CAAC,8BAA8B,CAAC,IAAI,CAAC,aAAa,CAAC,CAAC;oBAExD,IAAI,CAAC,aAAa,GAAG,IAAI,CAAC,kBAAkB,CAAC,KAAK,CAAC;AACnD,oBAAA,IAAI,CAAC,OAAO,GAAG,IAAI,CAAC;AACxB,iBAAC,CAAC,CAAC;gBAEH,IAAI,CAAC,4BAA4B,EAAE,CAAC;AACvC,aAAA;SACJ,EAAE,KAAK,IAAG;AACP,YAAA,OAAO,CAAC,GAAG,CAAC,oCAAoC,EAAE,KAAK,CAAC,CAAC;AAC7D,SAAC,CAAC,CAAC;KACN;IAED,sBAAsB,GAAA;QAClB,IAAI,CAAC,kBAAkB,GAAG,IAAI,CAAC,WAAW,CAAC,KAAK,CAAC;YAC7C,oBAAoB,EAAE,IAAI,CAAC,WAAW,CAAC,KAAK,CAAC,EAAE,CAAC;AACnD,SAAA,CAAC,CAAC;KACN;AAED,IAAA,IAAI,sBAAsB,GAAA;QACtB,OAAO,IAAI,CAAC,kBAAkB,CAAC,GAAG,CAAC,sBAAsB,CAAc,CAAC;KAC3E;IAEK,4BAA4B,GAAA;;AAC9B,YAAA,MAAM,KAAK,GAAiC,MAAM,IAAI,CAAC,gBAAgB,CAAC,4BAA4B,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC;AACjH,YAAA,IAAI,CAAC,qBAAqB,CAAC,KAAK,CAAC,CAAA;SACpC,CAAA,CAAA;AAAA,KAAA;AAED,IAAA,qBAAqB,CAAC,KAAK,EAAA;QACvB,IAAI,CAAC,sBAAsB,CAAC,QAAQ,CAAC,OAAO,CAAC,OAAO,IAAG;AACnD,YAAA,KAAK,CAAC,OAAO,CAAC,OAAO,IAAG;gBACpB,IAAI,CAAC,SAAS,CAAC,MAAM,CAAC,OAAO,CAAC,kBAAkB,CAAC,CAAC,CAAA;gBAClD,IAAI,OAAO,CAAC,kBAAkB,CAAC,IAAI,OAAO,CAAC,KAAK,CAAC,kBAAkB,CAAC;AAChE,oBAAA,OAAO,CAAC,GAAG,CAAC,sBAAsB,CAAC,CAAC,UAAU,CAAC,OAAO,CAAC,sBAAsB,CAAC,CAAC,CAAA;AACvF,aAAC,CAAC,CAAC;AACP,SAAC,CAAC,CAAC;KACN;IAED,SAAS,GAAA;AACL,QAAA,IAAI,IAAI,CAAC,aAAa,EAAE,EAAE;YACtB,IAAI,CAAC,sBAAsB,CAAC,QAAQ,CAAC,OAAO,CAAC,OAAO,IAAG;gBACnD,MAAM,EAAE,GAAG,OAAO,CAAC,GAAG,CAAC,kBAAkB,CAAC,CAAC,KAAK,CAAC;AACjD,gBAAA,IAAI,CAAC,SAAS,CAAC,QAAQ,CAAC,EAAE,CAAC,CAAC;AAChC,aAAC,CAAC,CAAC;YACH,OAAO;AACV,SAAA;QACD,IAAI,CAAC,sBAAsB,CAAC,QAAQ,CAAC,OAAO,CAAC,OAAO,IAAG;YACnD,MAAM,EAAE,GAAG,OAAO,CAAC,GAAG,CAAC,kBAAkB,CAAC,CAAC,KAAK,CAAC;AACjD,YAAA,IAAI,CAAC,SAAS,CAAC,MAAM,CAAC,EAAE,CAAC,CAAC;AAC9B,SAAC,CAAC,CAAC;KACN;IAED,aAAa,GAAA;QACT,MAAM,QAAQ,GAAG,IAAI,CAAC,SAAS,CAAC,QAAQ,CAAC,MAAM,CAAC;AAChD,QAAA,MAAM,OAAO,GAAG,IAAI,CAAC,iBAAiB,CAAC,MAAM,CAAC;QAC9C,OAAO,QAAQ,IAAI,OAAO,CAAC;KAC9B;AAED,IAAA,yBAAyB,CAAC,WAAW,EAAA;AACjC,QAAA,OAAO,IAAI,CAAC,WAAW,CAAC,KAAK,CAAC;YAC1B,gBAAgB,EAAE,CAAC,WAAW,CAAC;AAC/B,YAAA,oBAAoB,EAAE,CAAC,EAAE,EAAE,UAAU,CAAC,QAAQ,CAAC;AAClD,SAAA,CAAC,CAAC;KACN;AAED,IAAA,uBAAuB,CAAC,KAAa,EAAA;QACjC,MAAM,gBAAgB,GAAG,IAAI,CAAC,sBAAsB,CAAC,EAAE,CAAC,KAAK,CAAc,CAAC;QAC5E,MAAM,gBAAgB,GAAG,gBAAgB,CAAC,GAAG,CAAC,sBAAsB,CAAc,CAAC;QAEnF,IAAI,CAAC,gBAAgB,CAAC,KAAK,CAAC,QAAQ,CAAC,CAAC,CAAC,CAAC,EAAE;AACtC,YAAA,gBAAgB,CAAC,KAAK,CAAC,EAAE,CAAC,CAAC;YAC3B,OAAO;AACV,SAAA;QAED,MAAM,SAAS,GAAG,IAAI,CAAC,iBAAiB,CAAC,KAAK,CAAC,CAAC;AAChD,QAAA,MAAM,qBAAqB,GAAG,SAAS,CAAC,kBAAkB,CAAC,GAAG,CAAC,QAAQ,IAAI,QAAQ,CAAC,EAAE,CAAC,CAAC;QAExF,gBAAgB,CAAC,QAAQ,CAAC,CAAC,CAAC,CAAC,EAAE,GAAG,qBAAqB,CAAC,CAAC,CAAC;KAC7D;AAGD,IAAA,oBAAoB,CAAC,KAAa,EAAA;QAC9B,MAAM,gBAAgB,GAAG,IAAI,CAAC,sBAAsB,CAAC,EAAE,CAAC,KAAK,CAAc,CAAC;QAC5E,MAAM,gBAAgB,GAAG,gBAAgB,CAAC,GAAG,CAAC,sBAAsB,CAAgB,CAAC;AAErF,QAAA,MAAM,QAAQ,GAAG,gBAAgB,CAAC,KAAK,CAAC;QAExC,MAAM,SAAS,GAAG,IAAI,CAAC,iBAAiB,CAAC,KAAK,CAAC,CAAC;AAChD,QAAA,MAAM,qBAAqB,GAAG,SAAS,CAAC,kBAAkB,CAAC,GAAG,CAAC,QAAQ,IAAI,QAAQ,CAAC,EAAE,CAAC,CAAC;AACxF,QAAA,MAAM,kBAAkB,GAAG,qBAAqB,CAAC,MAAM,CAAC;AAExD,QAAA,IAAI,QAAQ,CAAC,QAAQ,CAAC,CAAC,CAAC,CAAC,EAAE;YACvB,QAAQ,CAAC,KAAK,EAAE,CAAC;AACjB,YAAA,gBAAgB,CAAC,UAAU,CAAC,QAAQ,CAAC,CAAC;AACzC,SAAA;AAAM,aAAA,IAAI,gBAAgB,CAAC,KAAK,CAAC,MAAM,IAAI,kBAAkB,EAAE;YAC5D,qBAAqB,CAAC,MAAM,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC;AACvC,YAAA,gBAAgB,CAAC,UAAU,CAAC,qBAAqB,CAAC,CAAC;AACtD,SAAA;AAAM,aAAA;AACH,YAAA,MAAM,gBAAgB,GAAG,QAAQ,CAAC,MAAM,CAAC,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC;AACvD,YAAA,gBAAgB,CAAC,UAAU,CAAC,gBAAgB,CAAC,CAAC;AACjD,SAAA;KACJ;IAED,0BAA0B,GAAA;AACtB,QAAA,MAAM,oBAAoB,GAAG,IAAI,CAAC,kBAAkB,CAAC,KAAK,CAAC,oBAAoB,CAAC,GAAG,CAAC,KAAK,IAAG;YACxF,MAAM,oBAAoB,GAAG,KAAK,CAAC,oBAAoB,CAAC,QAAQ,CAAC,CAAC,CAAC,CAAC;AAChE,kBAAE,KAAK,CAAC,oBAAoB,CAAC,MAAM,CAAC,EAAE,IAAI,EAAE,IAAI,CAAC,CAAC,CAAC;AACnD,kBAAE,KAAK,CAAC,oBAAoB,CAAC;YAEjC,OAAY,MAAA,CAAA,MAAA,CAAA,MAAA,CAAA,MAAA,CAAA,EAAA,EAAA,KAAK,CAAE,EAAA,EAAA,oBAAoB,EAAG,CAAA,CAAA;AAC9C,SAAC,CAAC,CAAC;AAEH,QAAA,IAAI,IAAI,CAAC,kBAAkB,CAAC,OAAO,EAAE;AACjC,YAAA,IAAI,CAAC,kBAAkB,CAAC,gBAAgB,EAAE,CAAC;AAC3C,YAAA,IAAI,CAAC,aAAa,CAAC,SAAS,CAAC,WAAW,CAAC,kBAAkB,EAAE,WAAW,CAAC,kBAAkB,EAAE,WAAW,CAAC,KAAK,CAAC,CAAC;YAChH,OAAO;AACV,SAAA;AAED,QAAA,IAAI,CAAC,mBAAmB,CAAC,wBAAwB,CAAC,IAAI,CAAC,KAAK,EAAE,oBAAoB,CAAC,CAAC,SAAS,CAAC,CAAC,GAAc,KAAI;YAC7G,IAAI,CAAC,uBAAuB,EAAE,CAAC;SAClC,EAAE,KAAK,IAAG;AACP,YAAA,OAAO,CAAC,GAAG,CAAC,qCAAqC,EAAE,KAAK,CAAC,CAAC;AAC9D,SAAC,CAAC,CAAC;KACN;IAED,WAAW,CAAC,KAAK,EAAE,WAAW,EAAA;QAC1B,IAAI,IAAI,CAAC,SAAS,CAAC,UAAU,CAAC,WAAW,CAAC,EAAE;YACxC,IAAI,CAAC,sBAAsB,CAAC,QAAQ,CAAC,KAAK,CAAC,CAAC,MAAM,EAAE,CAAC;AACrD,YAAA,OAAO,KAAK,CAAC;AAChB,SAAA;AAAM,aAAA;YACH,IAAI,CAAC,sBAAsB,CAAC,QAAQ,CAAC,KAAK,CAAC,CAAC,OAAO,EAAE,CAAC;AACtD,YAAA,OAAO,IAAI,CAAC;AACf,SAAA;KACJ;;gIAvMQ,kCAAkC,EAAA,IAAA,EAAA,CAAA,EAAA,KAAA,EAAA5B,IAAA,CAAA,WAAA,EAAA,EAAA,EAAA,KAAA,EAAAC,IAAA,CAAA,cAAA,EAAA,EAAA,EAAA,KAAA,EAAAc,IAAA,CAAA,aAAA,EAAA,EAAA,EAAA,KAAA,EAAAC,EAAA,CAAA,gBAAA,EAAA,EAAA,EAAA,KAAA,EAAAqG,gBAAA,EAAA,EAAA,EAAA,KAAA,EAAAC,mBAAA,EAAA,EAAA,EAAA,KAAA,EAAAzC,gBAAA,EAAA,CAAA,EAAA,MAAA,EAAA,EAAA,CAAA,eAAA,CAAA,SAAA,EAAA,CAAA,CAAA;AAAlC,kCAAA,CAAA,IAAA,GAAA,EAAA,CAAA,oBAAA,CAAA,EAAA,UAAA,EAAA,QAAA,EAAA,OAAA,EAAA,SAAA,EAAA,IAAA,EAAA,kCAAkC,sDC3B/C,02RA+HM,EAAA,UAAA,EAAA,CAAA,EAAA,IAAA,EAAA7D,EAAA,CAAA,qBAAA,EAAA,QAAA,EAAA,mBAAA,EAAA,MAAA,EAAA,CAAA,qBAAA,EAAA,qBAAA,EAAA,UAAA,EAAA,YAAA,EAAA,iBAAA,CAAA,EAAA,EAAA,EAAA,IAAA,EAAAP,KAAA,CAAA,WAAA,EAAA,QAAA,EAAA,cAAA,EAAA,MAAA,EAAA,CAAA,eAAA,EAAA,OAAA,EAAA,UAAA,EAAA,YAAA,EAAA,iBAAA,EAAA,IAAA,EAAA,eAAA,EAAA,MAAA,EAAA,UAAA,EAAA,SAAA,EAAA,UAAA,EAAA,eAAA,EAAA,kBAAA,EAAA,OAAA,CAAA,EAAA,OAAA,EAAA,CAAA,QAAA,EAAA,qBAAA,CAAA,EAAA,QAAA,EAAA,CAAA,aAAA,CAAA,EAAA,EAAA,EAAA,IAAA,EAAAC,IAAA,CAAA,YAAA,EAAA,QAAA,EAAA,gBAAA,EAAA,MAAA,EAAA,CAAA,OAAA,EAAA,YAAA,EAAA,YAAA,EAAA,oBAAA,EAAA,WAAA,CAAA,EAAA,QAAA,EAAA,CAAA,cAAA,CAAA,EAAA,EAAA,EAAA,IAAA,EAAAC,EAAA,CAAA,SAAA,EAAA,QAAA,EAAA,YAAA,EAAA,MAAA,EAAA,CAAA,UAAA,EAAA,eAAA,EAAA,UAAA,CAAA,EAAA,QAAA,EAAA,CAAA,WAAA,CAAA,EAAA,EAAA,EAAA,IAAA,EAAAC,IAAA,CAAA,wBAAA,EAAA,QAAA,EAAA,uBAAA,EAAA,MAAA,EAAA,CAAA,kBAAA,EAAA,MAAA,EAAA,WAAA,EAAA,cAAA,EAAA,qBAAA,EAAA,gCAAA,EAAA,kBAAA,EAAA,WAAA,EAAA,qBAAA,EAAA,4BAAA,EAAA,8BAAA,EAAA,uCAAA,EAAA,WAAA,EAAA,uBAAA,EAAA,0BAAA,EAAA,gCAAA,EAAA,iCAAA,EAAA,kCAAA,EAAA,uBAAA,EAAA,mCAAA,CAAA,EAAA,OAAA,EAAA,CAAA,WAAA,CAAA,EAAA,EAAA,EAAA,IAAA,EAAAC,GAAA,CAAA,SAAA,EAAA,QAAA,EAAA,YAAA,EAAA,QAAA,EAAA,CAAA,WAAA,CAAA,EAAA,CAAA,EAAA,UAAA,EAAA,CAAA,EAAA,IAAA,EAAAC,GAAA,CAAA,IAAA,EAAA,QAAA,EAAA,QAAA,EAAA,MAAA,EAAA,CAAA,MAAA,EAAA,UAAA,EAAA,UAAA,CAAA,EAAA,EAAA,EAAA,IAAA,EAAAd,IAAA,CAAA,aAAA,EAAA,QAAA,EAAA,8CAAA,EAAA,EAAA,EAAA,IAAA,EAAAA,IAAA,CAAA,oBAAA,EAAA,QAAA,EAAA,0FAAA,EAAA,EAAA,EAAA,IAAA,EAAAA,IAAA,CAAA,kBAAA,EAAA,QAAA,EAAA,aAAA,EAAA,MAAA,EAAA,CAAA,WAAA,CAAA,EAAA,OAAA,EAAA,CAAA,UAAA,CAAA,EAAA,QAAA,EAAA,CAAA,QAAA,CAAA,EAAA,EAAA,EAAA,IAAA,EAAAA,IAAA,CAAA,aAAA,EAAA,QAAA,EAAA,iBAAA,EAAA,MAAA,EAAA,CAAA,eAAA,CAAA,EAAA,EAAA,EAAA,IAAA,EAAAc,GAAA,CAAA,OAAA,EAAA,QAAA,EAAA,kBAAA,EAAA,MAAA,EAAA,CAAA,SAAA,EAAA,cAAA,EAAA,eAAA,CAAA,EAAA,EAAA,EAAA,IAAA,EAAAd,IAAA,CAAA,aAAA,EAAA,QAAA,EAAA,iBAAA,EAAA,MAAA,EAAA,CAAA,eAAA,CAAA,EAAA,EAAA,EAAA,IAAA,EAAAU,IAAA,CAAA,QAAA,EAAA,QAAA,EAAA,WAAA,EAAA,EAAA,EAAA,IAAA,EAAAV,IAAA,CAAA,eAAA,EAAA,QAAA,EAAA,2CAAA,EAAA,EAAA,EAAA,IAAA,EAAAA,IAAA,CAAA,eAAA,EAAA,QAAA,EAAA,mBAAA,EAAA,MAAA,EAAA,CAAA,UAAA,EAAA,iBAAA,EAAA,SAAA,CAAA,EAAA,OAAA,EAAA,CAAA,eAAA,CAAA,EAAA,EAAA,EAAA,IAAA,EAAAA,IAAA,CAAA,iBAAA,EAAA,QAAA,EAAA,wIAAA,EAAA,MAAA,EAAA,CAAA,UAAA,CAAA,EAAA,EAAA,EAAA,IAAA,EAAAA,IAAA,CAAA,oBAAA,EAAA,QAAA,EAAA,eAAA,EAAA,MAAA,EAAA,CAAA,UAAA,EAAA,aAAA,EAAA,SAAA,CAAA,EAAA,OAAA,EAAA,CAAA,eAAA,CAAA,EAAA,QAAA,EAAA,CAAA,QAAA,CAAA,EAAA,EAAA,EAAA,IAAA,EAAAU,IAAA,CAAA,QAAA,EAAA,QAAA,EAAA,WAAA,EAAA,MAAA,EAAA,CAAA,IAAA,CAAA,EAAA,EAAA,EAAA,IAAA,EAAAI,GAAA,CAAA,OAAA,EAAA,QAAA,EAAA,WAAA,EAAA,MAAA,EAAA,CAAA,OAAA,EAAA,SAAA,CAAA,EAAA,CAAA,EAAA,KAAA,EAAA,EAAA,OAAA,EAAAA,GAAA,CAAA,SAAA,EAAA,EAAA,CAAA,CAAA;4FDpGO,kCAAkC,EAAA,UAAA,EAAA,CAAA;kBAN9C,SAAS;AAAC,YAAA,IAAA,EAAA,CAAA;AACP,oBAAA,QAAQ,EAAE,gBAAgB;AAC1B,oBAAA,WAAW,EAAE,6BAA6B;AAC1C,oBAAA,MAAM,EAAE,EACP;AACJ,iBAAA,CAAA;;;AErBD,MAAM,MAAM,GAAW;AACnB,IAAA;AACI,QAAA,IAAI,EAAE,EAAE;AACR,QAAA,SAAS,EAAE,kCAAkC;AAChD,KAAA;CACJ,CAAC;MAMW,sCAAsC,CAAA;;oIAAtC,sCAAsC,EAAA,IAAA,EAAA,EAAA,EAAA,MAAA,EAAA,EAAA,CAAA,eAAA,CAAA,QAAA,EAAA,CAAA,CAAA;AAAtC,sCAAA,CAAA,IAAA,GAAA,EAAA,CAAA,mBAAA,CAAA,EAAA,UAAA,EAAA,QAAA,EAAA,OAAA,EAAA,SAAA,EAAA,QAAA,EAAA,EAAA,EAAA,IAAA,EAAA,sCAAsC,0CAFrC,YAAY,CAAA,EAAA,CAAA,CAAA;qIAEb,sCAAsC,EAAA,OAAA,EAAA,CAHtC,CAAC,YAAY,CAAC,QAAQ,CAAC,MAAM,CAAC,CAAC,EAC9B,YAAY,CAAA,EAAA,CAAA,CAAA;4FAEb,sCAAsC,EAAA,UAAA,EAAA,CAAA;kBAJlD,QAAQ;AAAC,YAAA,IAAA,EAAA,CAAA;oBACN,OAAO,EAAE,CAAC,YAAY,CAAC,QAAQ,CAAC,MAAM,CAAC,CAAC;oBACxC,OAAO,EAAE,CAAC,YAAY,CAAC;AAC1B,iBAAA,CAAA;;;ACQD;MA4Ba,+BAA+B,CAAA;;6HAA/B,+BAA+B,EAAA,IAAA,EAAA,EAAA,EAAA,MAAA,EAAA,EAAA,CAAA,eAAA,CAAA,QAAA,EAAA,CAAA,CAAA;8HAA/B,+BAA+B,EAAA,YAAA,EAAA,CAxBpC,kCAAkC,CAAA,EAAA,OAAA,EAAA,CAGlC,YAAY;QACZ,sCAAsC;QAEtC,WAAW;QACX,mBAAmB;QAEnB,aAAa;QACb,cAAc;QACd,eAAe;QACf,gBAAgB;QAChB,eAAe;QACf,kBAAkB;QAClB,eAAe;QACf,eAAe;QACf,iBAAiB;QACjB,cAAc;QAEd,wBAAwB;QACxB,kBAAkB,CAAA,EAAA,CAAA,CAAA;AAGb,+BAAA,CAAA,IAAA,GAAA,EAAA,CAAA,mBAAA,CAAA,EAAA,UAAA,EAAA,QAAA,EAAA,OAAA,EAAA,SAAA,EAAA,QAAA,EAAA,EAAA,EAAA,IAAA,EAAA,+BAA+B,EAtB/B,OAAA,EAAA,CAAA;YACL,YAAY;YACZ,sCAAsC;YAEtC,WAAW;YACX,mBAAmB;YAEnB,aAAa;YACb,cAAc;YACd,eAAe;YACf,gBAAgB;YAChB,eAAe;YACf,kBAAkB;YAClB,eAAe;YACf,eAAe;YACf,iBAAiB;YACjB,cAAc;YAEd,wBAAwB;YACxB,kBAAkB;AACrB,SAAA,CAAA,EAAA,CAAA,CAAA;4FAEQ,+BAA+B,EAAA,UAAA,EAAA,CAAA;kBA1B3C,QAAQ;AAAC,YAAA,IAAA,EAAA,CAAA;AACN,oBAAA,YAAY,EAAE;wBACV,kCAAkC;AACrC,qBAAA;AACD,oBAAA,OAAO,EAAE;wBACL,YAAY;wBACZ,sCAAsC;wBAEtC,WAAW;wBACX,mBAAmB;wBAEnB,aAAa;wBACb,cAAc;wBACd,eAAe;wBACf,gBAAgB;wBAChB,eAAe;wBACf,kBAAkB;wBAClB,eAAe;wBACf,eAAe;wBACf,iBAAiB;wBACjB,cAAc;wBAEd,wBAAwB;wBACxB,kBAAkB;AACrB,qBAAA;AACJ,iBAAA,CAAA;;;AC3CD;MAIa,WAAW,CAAA;AAEpB,IAAA,WAAA,CACY,cAA8B,EAAA;QAA9B,IAAc,CAAA,cAAA,GAAd,cAAc,CAAgB;KACrC;IAEL,SAAS,CAAC,OAAyB,EAAE,IAAiB,EAAA;QAClD,IAAI,QAAQ,GAAG,IAAI,CAAC,cAAc,CAAC,UAAU,CAAC,UAAU,CAAC,CAAC;AAE1D,QAAA,OAAO,GAAG,OAAO,CAAC,KAAK,CAAC;AACpB,YAAA,UAAU,EAAE,EAAE,QAAQ,EAAE,CAAG,EAAA,QAAQ,EAAE,EAAE;AAC1C,SAAA,CAAC,CAAC;QAEH,OAAO,IAAI,CAAC,MAAM,CAAC,OAAO,CAAC,CAAC,IAAI,EAC/B,CAAA;KACJ;;yGAfQ,WAAW,EAAA,IAAA,EAAA,CAAA,EAAA,KAAA,EAAAd,IAAA,CAAA,cAAA,EAAA,CAAA,EAAA,MAAA,EAAA,EAAA,CAAA,eAAA,CAAA,UAAA,EAAA,CAAA,CAAA;6GAAX,WAAW,EAAA,CAAA,CAAA;4FAAX,WAAW,EAAA,UAAA,EAAA,CAAA;kBAFvB,UAAU;;;MCEE,mBAAmB,CAAA;IAE5B,WACY,CAAA,IAAgB,EACO,WAAgB,EAAA;QADvC,IAAI,CAAA,IAAA,GAAJ,IAAI,CAAY;QACO,IAAW,CAAA,WAAA,GAAX,WAAW,CAAK;KAC9C;AAEL,IAAA,OAAO,CAAC,IAAI,EAAA;AACR,QAAA,IAAI,MAAM,GAAG,IAAI,UAAU,EAAE,CAAC;QAE9B,MAAM,GAAG,MAAM,CAAC,MAAM,CAAC,MAAM,EAAE,IAAI,CAAC,CAAC;QAErC,OAAO,IAAI,CAAC,IAAI,CAAC,GAAG,CAAe,CAAA,EAAG,IAAI,CAAC,WAAW,CAAC,kBAAkB,CAAA,IAAA,CAAM,EAAE,EAAE,MAAM,EAAE,MAAM,EAAE,CAAC,CAAC;KACxG;IAED,QAAQ,CAAC,MAAM,EAAE,IAAI,EAAA;AACjB,QAAA,IAAI,MAAM,GAAG,IAAI,UAAU,EAAE,CAAC;QAC9B,MAAM,GAAG,MAAM,CAAC,MAAM,CAAC,MAAM,EAAE,IAAI,CAAC,CAAC;QAErC,OAAO,IAAI,CAAC,IAAI,CAAC,GAAG,CAAe,CAAA,EAAG,IAAI,CAAC,WAAW,CAAC,kBAAkB,CAAQ,KAAA,EAAA,MAAM,QAAQ,EAAE,EAAE,MAAM,EAAE,MAAM,EAAE,CAAC,CAAC;KACxH;;AApBQ,mBAAA,CAAA,IAAA,GAAA,EAAA,CAAA,kBAAA,CAAA,EAAA,UAAA,EAAA,QAAA,EAAA,OAAA,EAAA,SAAA,EAAA,QAAA,EAAA,EAAA,EAAA,IAAA,EAAA,mBAAmB,4CAIhB,aAAa,EAAA,CAAA,EAAA,MAAA,EAAA,EAAA,CAAA,eAAA,CAAA,UAAA,EAAA,CAAA,CAAA;AAJhB,mBAAA,CAAA,KAAA,GAAA,EAAA,CAAA,qBAAA,CAAA,EAAA,UAAA,EAAA,QAAA,EAAA,OAAA,EAAA,SAAA,EAAA,QAAA,EAAA,EAAA,EAAA,IAAA,EAAA,mBAAmB,cAHhB,MAAM,EAAA,CAAA,CAAA;4FAGT,mBAAmB,EAAA,UAAA,EAAA,CAAA;kBAJ/B,UAAU;AAAC,YAAA,IAAA,EAAA,CAAA;AACR,oBAAA,UAAU,EAAE,MAAM;AACrB,iBAAA,CAAA;;0BAMQ,MAAM;2BAAC,aAAa,CAAA;;;MCHhB,mBAAmB,CAAA;IAE5B,WACY,CAAA,IAAgB,EACO,WAAgB,EAAA;QADvC,IAAI,CAAA,IAAA,GAAJ,IAAI,CAAY;QACO,IAAW,CAAA,WAAA,GAAX,WAAW,CAAK;KAC9C;AAEL,IAAA,sBAAsB,CAAC,KAAK,EAAA;AACxB,QAAA,OAAO,IAAI,CAAC,IAAI,CAAC,GAAG,CAAc,CAAG,EAAA,IAAI,CAAC,WAAW,CAAC,kBAAkB,CAAA,cAAA,EAAiB,KAAK,CAAA,kBAAA,CAAoB,CAAC,CAAC;KACvH;AAED,IAAA,iBAAiB,CAAC,KAAK,EAAA;AACnB,QAAA,OAAO,IAAI,CAAC,IAAI,CAAC,GAAG,CAAmB,CAAG,EAAA,IAAI,CAAC,WAAW,CAAC,kBAAkB,CAAA,cAAA,EAAiB,KAAK,CAAA,gBAAA,CAAkB,CAAC,CAAC;KAC1H;IAED,qBAAqB,CAAC,sBAAsB,EAAE,KAAK,EAAA;AAC/C,QAAA,IAAI,MAAM,GAAG,IAAI,UAAU,EAAE,CAAC;AAC9B,QAAA,sBAAsB,CAAC,OAAO,CAAC,MAAM,IAAI,MAAM,GAAG,MAAM,CAAC,MAAM,CAAC,QAAQ,EAAE,MAAM,CAAC,CAAC,CAAC;QAEnF,OAAO,IAAI,CAAC,IAAI,CAAC,GAAG,CAAwB,CAAA,EAAG,IAAI,CAAC,WAAW,CAAC,kBAAkB,CAAiB,cAAA,EAAA,KAAK,gCAAgC,EAAE,EAAE,MAAM,EAAE,MAAM,EAAE,CAAC,CAAC;KACjK;;AApBQ,mBAAA,CAAA,IAAA,GAAA,EAAA,CAAA,kBAAA,CAAA,EAAA,UAAA,EAAA,QAAA,EAAA,OAAA,EAAA,SAAA,EAAA,QAAA,EAAA,EAAA,EAAA,IAAA,EAAA,mBAAmB,4CAIhB,aAAa,EAAA,CAAA,EAAA,MAAA,EAAA,EAAA,CAAA,eAAA,CAAA,UAAA,EAAA,CAAA,CAAA;AAJhB,mBAAA,CAAA,KAAA,GAAA,EAAA,CAAA,qBAAA,CAAA,EAAA,UAAA,EAAA,QAAA,EAAA,OAAA,EAAA,SAAA,EAAA,QAAA,EAAA,EAAA,EAAA,IAAA,EAAA,mBAAmB,cAHhB,MAAM,EAAA,CAAA,CAAA;4FAGT,mBAAmB,EAAA,UAAA,EAAA,CAAA;kBAJ/B,UAAU;AAAC,YAAA,IAAA,EAAA,CAAA;AACR,oBAAA,UAAU,EAAE,MAAM;AACrB,iBAAA,CAAA;;0BAMQ,MAAM;2BAAC,aAAa,CAAA;;;MCNhB,gBAAgB,CAAA;AAEzB,IAAA,WAAA,CACY,mBAAwC,EAAA;QAAxC,IAAmB,CAAA,mBAAA,GAAnB,mBAAmB,CAAqB;KAC/C;AAEC,IAAA,OAAO,CAAC,IAAI,EAAA;;AACd,YAAA,IAAI,KAAmB,CAAC;YACxB,IAAI;AACA,gBAAA,KAAK,GAAG,MAAM,IAAI,CAAC,mBAAmB,CAAC,OAAO,CAAC,IAAI,CAAC,CAAC,SAAS,EAAE,CAAC;AAEjE,gBAAA,IAAI,KAAK,EAAE;AACP,oBAAA,OAAO,KAAK,CAAC;AAChB,iBAAA;AAAM,qBAAA;AACH,oBAAA,OAAO,CAAC,IAAI,SAAS,EAAE,CAAC,CAAC;AAC5B,iBAAA;AACJ,aAAA;AAAC,YAAA,OAAO,KAAK,EAAE;AACZ,gBAAA,OAAO,CAAC,KAAK,CAAC,SAAS,EAAE,KAAK,CAAC,CAAC;AAChC,gBAAA,OAAO,CAAC,IAAI,SAAS,EAAE,CAAC,CAAC;AAC5B,aAAA;SACJ,CAAA,CAAA;AAAA,KAAA;IAEK,QAAQ,CAAC,MAAM,EAAE,IAAI,EAAA;;AACvB,YAAA,IAAI,MAAoB,CAAC;YACzB,IAAI;AACA,gBAAA,MAAM,GAAG,MAAM,IAAI,CAAC,mBAAmB,CAAC,QAAQ,CAAC,MAAM,EAAE,IAAI,CAAC,CAAC,SAAS,EAAE,CAAC;AAE3E,gBAAA,IAAI,MAAM,EAAE;AACR,oBAAA,OAAO,MAAM,CAAC;AACjB,iBAAA;AAAM,qBAAA;AACH,oBAAA,OAAO,CAAC,IAAI,SAAS,EAAE,CAAC,CAAC;AAC5B,iBAAA;AACJ,aAAA;AAAC,YAAA,OAAO,KAAK,EAAE;AACZ,gBAAA,OAAO,CAAC,KAAK,CAAC,SAAS,EAAE,KAAK,CAAC,CAAC;AAChC,gBAAA,OAAO,CAAC,IAAI,SAAS,EAAE,CAAC,CAAC;AAC5B,aAAA;SACJ,CAAA,CAAA;AAAA,KAAA;;8GApCQ,gBAAgB,EAAA,IAAA,EAAA,CAAA,EAAA,KAAA,EAAAuH,mBAAA,EAAA,CAAA,EAAA,MAAA,EAAA,EAAA,CAAA,eAAA,CAAA,UAAA,EAAA,CAAA,CAAA;AAAhB,gBAAA,CAAA,KAAA,GAAA,EAAA,CAAA,qBAAA,CAAA,EAAA,UAAA,EAAA,QAAA,EAAA,OAAA,EAAA,SAAA,EAAA,QAAA,EAAA,EAAA,EAAA,IAAA,EAAA,gBAAgB,cAHb,MAAM,EAAA,CAAA,CAAA;4FAGT,gBAAgB,EAAA,UAAA,EAAA,CAAA;kBAJ5B,UAAU;AAAC,YAAA,IAAA,EAAA,CAAA;AACR,oBAAA,UAAU,EAAE,MAAM;AACrB,iBAAA,CAAA;;;ACRD;;AAEG;;ACFH;;AAEG;;;;"}