{"version":3,"file":"library-tsc-lite.js","sources":["../../../projects/library/tsc-lite/src/lib/tsc-lite.service.ts","../../../projects/library/tsc-lite/src/lib/tsc-lite.component.ts","../../../projects/library/tsc-lite/src/lib/tsc-lite.module.ts","../../../projects/library/tsc-lite/src/lib/tsc/constant/list.constant.ts","../../../projects/library/tsc-lite/src/lib/tsc/model/parameter.model.ts","../../../projects/library/tsc-lite/src/lib/tsc/model/entity.model.ts","../../../projects/library/tsc-lite/src/lib/tsc/model/device.model.ts","../../../projects/library/tsc-lite/src/lib/tsc/model/unit.model.ts","../../../projects/library/tsc-lite/src/lib/tsc/model/shift.model.ts","../../../projects/library/tsc-lite/src/lib/tsc/model/recent-data.model.ts","../../../projects/library/tsc-lite/src/lib/tsc/model/alert.model.ts","../../../projects/library/tsc-lite/src/lib/tsc/model/aggregate-data.model.ts","../../../projects/library/tsc-lite/src/lib/tsc/controller/parameter.controller.ts","../../../projects/library/tsc-lite/src/lib/tsc/service/parameter.service.ts","../../../projects/library/tsc-lite/src/lib/tsc/controller/aggregate-data.controller.ts","../../../projects/library/tsc-lite/src/lib/tsc/service/aggregate-data.service.ts","../../../projects/library/tsc-lite/src/lib/tsc/component/_shared/dialog/trend/trend.component.ts","../../../projects/library/tsc-lite/src/lib/tsc/component/_shared/dialog/trend/trend.component.html","../../../projects/library/tsc-lite/src/lib/tsc/component/_shared/dialog/trend/trend.module.ts","../../../projects/library/tsc-lite/src/lib/tsc/component/dropdown/aggregation/aggregation.component.ts","../../../projects/library/tsc-lite/src/lib/tsc/component/dropdown/aggregation/aggregation.component.html","../../../projects/library/tsc-lite/src/lib/tsc/component/dropdown/aggregation/aggregation.module.ts","../../../projects/library/tsc-lite/src/lib/tsc/component/dropdown/aggregation-duration/aggregation-duration.component.ts","../../../projects/library/tsc-lite/src/lib/tsc/component/dropdown/aggregation-duration/aggregation-duration.component.html","../../../projects/library/tsc-lite/src/lib/tsc/component/dropdown/aggregation-duration/aggregation-duration.module.ts","../../../projects/library/tsc-lite/src/lib/tsc/component/dropdown/param-metric/param-metric.component.ts","../../../projects/library/tsc-lite/src/lib/tsc/component/dropdown/param-metric/param-metric.component.html","../../../projects/library/tsc-lite/src/lib/tsc/component/dropdown/param-metric/param-metric.module.ts","../../../projects/library/tsc-lite/src/lib/tsc/component/dropdown/parameter/parameter.component.ts","../../../projects/library/tsc-lite/src/lib/tsc/component/dropdown/parameter/parameter.component.html","../../../projects/library/tsc-lite/src/lib/tsc/component/dropdown/parameter/parameter.module.ts","../../../projects/library/tsc-lite/src/lib/tsc/enum/dropdown.enum.ts","../../../projects/library/tsc-lite/src/lib/tsc/controller/device.controller.ts","../../../projects/library/tsc-lite/src/lib/tsc/service/device.service.ts","../../../projects/library/tsc-lite/src/lib/tsc/component/dropdown/device/device.component.ts","../../../projects/library/tsc-lite/src/lib/tsc/component/dropdown/device/device.component.html","../../../projects/library/tsc-lite/src/lib/tsc/component/dropdown/device/device.module.ts","../../../projects/library/tsc-lite/src/lib/tsc/controller/entity.controller.ts","../../../projects/library/tsc-lite/src/lib/tsc/service/entity.service.ts","../../../projects/library/tsc-lite/src/lib/tsc/component/dropdown/entity/entity.component.ts","../../../projects/library/tsc-lite/src/lib/tsc/component/dropdown/entity/entity.component.html","../../../projects/library/tsc-lite/src/lib/tsc/component/dropdown/entity/entity.module.ts","../../../projects/library/tsc-lite/src/lib/tsc/controller/unit.controller.ts","../../../projects/library/tsc-lite/src/lib/tsc/service/unit.service.ts","../../../projects/library/tsc-lite/src/lib/tsc/component/dropdown/unit/unit.component.ts","../../../projects/library/tsc-lite/src/lib/tsc/component/dropdown/unit/unit.component.html","../../../projects/library/tsc-lite/src/lib/tsc/component/dropdown/unit/unit.module.ts","../../../projects/library/tsc-lite/src/lib/tsc/component/landing-page/home/home.component.ts","../../../projects/library/tsc-lite/src/lib/tsc/component/landing-page/home/home.component.html","../../../projects/library/tsc-lite/src/lib/tsc/component/landing-page/home/home-routing.module.ts","../../../projects/library/tsc-lite/src/lib/tsc/component/landing-page/home/home.module.ts","../../../projects/library/tsc-lite/src/lib/tsc/controller/shift.controller.ts","../../../projects/library/tsc-lite/src/lib/tsc/service/shift.service.ts","../../../projects/library/tsc-lite/src/lib/tsc/component/dropdown/shift/shift.component.ts","../../../projects/library/tsc-lite/src/lib/tsc/component/dropdown/shift/shift.component.html","../../../projects/library/tsc-lite/src/lib/tsc/component/dropdown/shift/shift.module.ts","../../../projects/library/tsc-lite/src/lib/tsc/component/dashboard/balance/balance.component.ts","../../../projects/library/tsc-lite/src/lib/tsc/component/dashboard/balance/balance.component.html","../../../projects/library/tsc-lite/src/lib/tsc/component/dashboard/balance/balance-routing.module.ts","../../../projects/library/tsc-lite/src/lib/tsc/component/dashboard/balance/balance.module.ts","../../../projects/library/tsc-lite/src/lib/tsc/component/dashboard/consumption/consumption.component.ts","../../../projects/library/tsc-lite/src/lib/tsc/component/dashboard/consumption/consumption.component.html","../../../projects/library/tsc-lite/src/lib/tsc/component/dashboard/consumption/consumption-routing.module.ts","../../../projects/library/tsc-lite/src/lib/tsc/component/dashboard/consumption/consumption.module.ts","../../../projects/library/tsc-lite/src/lib/tsc/component/dashboard/consumption-breakup/consumption-breakup.component.ts","../../../projects/library/tsc-lite/src/lib/tsc/component/dashboard/consumption-breakup/consumption-breakup.component.html","../../../projects/library/tsc-lite/src/lib/tsc/component/dashboard/consumption-breakup/consumption-breakup-routing.module.ts","../../../projects/library/tsc-lite/src/lib/tsc/component/dashboard/consumption-breakup/consumption-breakup.module.ts","../../../projects/library/tsc-lite/src/lib/tsc/controller/recent-data.controller.ts","../../../projects/library/tsc-lite/src/lib/tsc/service/recent-data.service.ts","../../../projects/library/tsc-lite/src/lib/tsc/service/trend.service.ts","../../../projects/library/tsc-lite/src/lib/tsc/component/dashboard/entity/entity.component.ts","../../../projects/library/tsc-lite/src/lib/tsc/component/dashboard/entity/entity.component.html","../../../projects/library/tsc-lite/src/lib/tsc/component/dashboard/entity/entity-routing.module.ts","../../../projects/library/tsc-lite/src/lib/tsc/component/dashboard/entity/entity.module.ts","../../../projects/library/tsc-lite/src/lib/tsc/enum/error.enum.ts","../../../projects/library/tsc-lite/src/lib/tsc/service/alert.service.ts","../../../projects/library/tsc-lite/src/lib/tsc/component/dashboard/facility/facility.component.ts","../../../projects/library/tsc-lite/src/lib/tsc/component/dashboard/facility/facility.component.html","../../../projects/library/tsc-lite/src/lib/tsc/component/dashboard/facility/facility-routing.module.ts","../../../projects/library/tsc-lite/src/lib/tsc/component/dashboard/facility/facility.module.ts","../../../projects/library/tsc-lite/src/lib/tsc/controller/entity-device.controller.ts","../../../projects/library/tsc-lite/src/lib/tsc/service/entity-device.service.ts","../../../projects/library/tsc-lite/src/lib/tsc/component/dashboard/meter-data/meter-data.component.ts","../../../projects/library/tsc-lite/src/lib/tsc/component/dashboard/meter-data/meter-data.component.html","../../../projects/library/tsc-lite/src/lib/tsc/component/dashboard/meter-data/meter-data-routing.module.ts","../../../projects/library/tsc-lite/src/lib/tsc/component/dashboard/meter-data/meter-data.module.ts","../../../projects/library/tsc-lite/src/lib/tsc/component/report/cgwa/cgwa.component.ts","../../../projects/library/tsc-lite/src/lib/tsc/component/report/cgwa/cgwa.component.html","../../../projects/library/tsc-lite/src/lib/tsc/component/report/cgwa/cgwa-routing.module.ts","../../../projects/library/tsc-lite/src/lib/tsc/component/report/cgwa/cgwa.module.ts","../../../projects/library/tsc-lite/src/lib/tsc/service/report.service.ts","../../../projects/library/tsc-lite/src/lib/tsc/component/_shared/filter/source-load/source-load.component.ts","../../../projects/library/tsc-lite/src/lib/tsc/component/_shared/filter/source-load/source-load.component.html","../../../projects/library/tsc-lite/src/lib/tsc/component/report/consumption-breakup/consumption-breakup.component.ts","../../../projects/library/tsc-lite/src/lib/tsc/component/report/consumption-breakup/consumption-breakup.component.html","../../../projects/library/tsc-lite/src/lib/tsc/component/report/consumption-breakup/consumption-breakup-routing.module.ts","../../../projects/library/tsc-lite/src/lib/tsc/component/_shared/filter/source-load/source-load.module.ts","../../../projects/library/tsc-lite/src/lib/tsc/component/report/consumption-breakup/consumption-breakup.module.ts","../../../projects/library/tsc-lite/src/lib/tsc/component/report/data-availability/data-availability.component.ts","../../../projects/library/tsc-lite/src/lib/tsc/component/report/data-availability/data-availability.component.html","../../../projects/library/tsc-lite/src/lib/tsc/component/report/data-availability/data-availability-routing.module.ts","../../../projects/library/tsc-lite/src/lib/tsc/component/report/data-availability/data-availability.module.ts","../../../projects/library/tsc-lite/src/lib/tsc/component/report/meter/meter.component.ts","../../../projects/library/tsc-lite/src/lib/tsc/component/report/meter/meter.component.html","../../../projects/library/tsc-lite/src/lib/tsc/component/report/meter/meter-routing.module.ts","../../../projects/library/tsc-lite/src/lib/tsc/component/report/meter/meter.module.ts","../../../projects/library/tsc-lite/src/lib/tsc/component/report/parameter/parameter.component.ts","../../../projects/library/tsc-lite/src/lib/tsc/component/report/parameter/parameter.component.html","../../../projects/library/tsc-lite/src/lib/tsc/component/report/parameter/parameter-routing.module.ts","../../../projects/library/tsc-lite/src/lib/tsc/component/report/parameter/parameter.module.ts","../../../projects/library/tsc-lite/src/lib/tsc/component/report/raw-data/raw-data.component.ts","../../../projects/library/tsc-lite/src/lib/tsc/component/report/raw-data/raw-data.component.html","../../../projects/library/tsc-lite/src/lib/tsc/component/report/raw-data/raw-data-routing.module.ts","../../../projects/library/tsc-lite/src/lib/tsc/component/report/raw-data/raw-data.module.ts","../../../projects/library/tsc-lite/src/lib/tsc/component/report/derived-parameter/derived-parameter.component.ts","../../../projects/library/tsc-lite/src/lib/tsc/component/report/derived-parameter/derived-parameter.component.html","../../../projects/library/tsc-lite/src/lib/tsc/component/report/derived-parameter/derived-parameter-routing.module.ts","../../../projects/library/tsc-lite/src/lib/tsc/component/report/derived-parameter/derived-parameter.module.ts","../../../projects/library/tsc-lite/src/lib/tsc/component/report/usage-across-facility/usage-across-facility.component.ts","../../../projects/library/tsc-lite/src/lib/tsc/component/report/usage-across-facility/usage-across-facility.component.html","../../../projects/library/tsc-lite/src/lib/tsc/component/report/usage-across-facility/usage-across-facility-routing.module.ts","../../../projects/library/tsc-lite/src/lib/tsc/component/report/usage-across-facility/usage-across-facility.module.ts","../../../projects/library/tsc-lite/src/lib/tsc/component/layout/layout-routing.module.ts","../../../projects/library/tsc-lite/src/lib/tsc/component/layout/layout.module.ts","../../../projects/library/tsc-lite/src/lib/tsc/enum/button.enum.ts","../../../projects/library/tsc-lite/src/lib/tsc/controller/layout.controller.ts","../../../projects/library/tsc-lite/src/lib/tsc/component/layout/page/page.component.ts","../../../projects/library/tsc-lite/src/lib/tsc/component/layout/page/page.component.html","../../../projects/library/tsc-lite/src/lib/tsc/component/layout/page/page-routing.module.ts","../../../projects/library/tsc-lite/src/lib/tsc/component/layout/page/page.module.ts","../../../projects/library/tsc-lite/src/public-api.ts","../../../projects/library/tsc-lite/src/library-tsc-lite.ts"],"sourcesContent":["import { Injectable } from '@angular/core';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class TscLiteService {\n\n  constructor() { }\n}\n","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'lib-tsc-lite',\n  template: `\n    <p>\n      tsc-lite works!\n    </p>\n  `,\n  styles: [\n  ]\n})\nexport class TscLiteComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit(): void {\n  }\n\n}\n","import { ModuleWithProviders, NgModule } from '@angular/core';\n\nimport { TscLiteComponent } from './tsc-lite.component';\n\n@NgModule({\n    declarations: [\n        TscLiteComponent,\n    ],\n    imports: [\n    ],\n    exports: [\n        TscLiteComponent\n    ]\n})\n\nexport class TscLiteModule {\n    static forRoot(environment: any): ModuleWithProviders<TscLiteModule> {\n        return {\n            ngModule: TscLiteModule,\n            providers: [\n                { provide: 'environment', useValue: environment }\n            ]\n        };\n    }\n}","export const LIST_CONSTANT = {\n\n    CONDITION: [\n        {\n            label: '>= (Greater or Equal)',\n            value: 'GTE'\n        },\n        {\n            label: '<= (Less or Equal)',\n            value: 'LTE'\n        },\n        {\n            label: '= (Equal)',\n            value: 'EQUAL'\n        },\n        {\n            label: '> (Greater than)',\n            value: 'GREATER'\n        },\n        {\n            label: '< (Less than)',\n            value: 'LESS'\n        },\n        {\n            label: 'between',\n            value: 'BETWEEN'\n        }\n    ],\n\n    EMAIL_FREQUENCY: [\n        {\n            label: \"Never\",\n            value: \"NEVER\"\n        },\n        {\n            label: \"24 Hrs\",\n            value: \"HOURS_24\"\n        },\n        {\n            label: \"12 Hrs\",\n            value: \"HOURS_12\"\n        },\n        {\n            label: \"6 Hrs\",\n            value: \"HOURS_6\"\n        },\n        {\n            label: \"4 Hrs\",\n            value: \"HOURS_4\"\n        }\n    ],\n\n    SMS_FREQUENCY: [\n        {\n            label: \"Never\",\n            value: \"NEVER\"\n        },\n        {\n            label: \"24 Hrs\",\n            value: \"HOURS_24\"\n        },\n        {\n            label: \"12 Hrs\",\n            value: \"HOURS_12\"\n        }\n    ],\n\n    ESCALATION_FREQUENCY: [\n        {\n            label: \"Day\",\n            value: \"DAY\"\n        },\n        {\n            label: \"Hour\",\n            value: \"HOUR\"\n        },\n        {\n            label: \"Min\",\n            value: \"MIN\"\n        }\n    ],\n\n    ALERT_RULE_FREQUENCY: [\n        {\n            label: 'Instant',\n            value: 'INSTANT'\n        },\n        {\n            label: \"Daily(Today)\",\n            value: \"DAILY_TODAY\"\n        },\n        {\n            label: \"Daily(Yesterday)\",\n            value: \"DAILY_YESTERDAY\"\n        },\n        {\n            label: \"Monthly(Current month)\",\n            value: \"MONTHLY_CURRENT\"\n        },\n        {\n            label: \"Monthly(Last month)\",\n            value: \"MONTHLY_LAST\"\n        },\n        {\n            label: \"Hourly(Current hour)\",\n            value: \"HOURLY_CURRENT\"\n        },\n        {\n            label: \"Hourly(Last hour)\",\n            value: \"HOURLY_LAST\"\n        }\n    ],\n\n    TREND_DATE_RANGE: [\n        {\n            label: \"Last 24 hrs\",\n            value: \"LAST_24_HRS\"\n        },\n        {\n            label: \"Last 7 days\",\n            value: \"LAST_7_DAYS\"\n        },\n        {\n            label: \"Last 30 days\",\n            value: \"LAST_30_DAYS\"\n        }\n    ],\n\n    AGGREGATION_DURATION: [] = [\n        {\n            label: \"15 minutes\",\n            value: \"min_15\"\n\n        },\n        {\n            label: \"30 minutes\",\n            value: \"min_30\"\n        },\n        {\n            label: \"Hourly\",\n            value: \"hour_1\"\n        },\n        {\n            label: \"12 hours\",\n            value: \"hour_12\"\n        },\n        {\n            label: \"Daily\",\n            value: \"day_1\"\n        },\n        {\n            label: \"Monthly\",\n            value: \"month_1\"\n        }\n    ],\n\n    AGGREGATION: [] = [\n        {\n            label: 'Absolute Average',\n            value: 'avgabs'\n        },\n        {\n            label: 'Absolute Maximum',\n            value: 'maxabs'\n        },\n        {\n            label: 'Absolute Minimum',\n            value: 'minabs'\n        },\n        {\n            label: 'Absolute Sum',\n            value: 'sumabs'\n        },\n        {\n            label: 'Average',\n            value: 'avg'\n        },\n        {\n            label: 'Count',\n            value: 'count'\n        },\n        {\n            label: 'First',\n            value: 'first'\n        },\n        {\n            label: 'Last',\n            value: 'last'\n        },\n        {\n            label: 'Maximum',\n            value: 'max'\n        },\n        {\n            label: 'Minimum',\n            value: 'min'\n        },\n        {\n            label: 'Sum',\n            value: 'sum'\n        }\n    ],\n\n    DOWNLOAD_TYPE: [] = [\n        {\n            label: \"pdf\",\n            value: \"PDF\"\n        },\n        {\n            label: \"csv\",\n            value: \"CSV\"\n        },\n        {\n            label: \"xlsx\",\n            value: \"XLSX\"\n        }\n    ],\n\n    SOURCE_LOAD: [] = [\n        {\n            label: \"Source\",\n            value: \"source\"\n        },\n        {\n            label: \"Load\",\n            value: \"load\"\n        }\n    ]\n\n}","export interface ParameterM {\n    id: number;\n    name: string;\n    type: string;\n    label: string;\n    unit: string;\n    paramMetric: string;\n    isCounter: boolean;\n}\n\nexport class Parameter implements ParameterM {\n    id;\n    name;\n    type;\n    label;\n    unit;\n    paramMetric;\n    isCounter;\n}","export interface EntityM {\n    id: number;\n    name: string;\n    type: string;\n}\n\nexport class Entity implements EntityM {\n    id;\n    name;\n    type;\n}\n\nexport interface ChildEntity {\n    id: number;\n    name: string;\n    type: string;\n    children: ChildEntity[];\n}\n\nexport interface EntityTreeM {\n    id: number;\n    name: string;\n    type: string;\n    isParameterExists: boolean;\n    children: ChildEntity[];\n}\n\nexport class EntityTree implements EntityTreeM {\n    id;\n    name;\n    type;\n    isParameterExists;\n    children;\n}\n\nexport interface EntityLevelConsumptionM {\n    id: number;\n    name: string;\n    value: number;\n    unit: string;\n}\n\nexport class EntityLevelConsumption implements EntityLevelConsumptionM {\n    id;\n    name;\n    value;\n    unit;\n}\n\nexport interface EntityTypeM {\n    type: string;\n}\n\nexport class EntityType implements EntityTypeM {\n    type;\n}","export interface DeviceM {\n    id: number;\n    name: string;\n    sourceOrLoad: string;\n    sourceLoadType: string;\n    status: string;\n}\n\nexport class Device implements DeviceM {\n    id;\n    name;\n    sourceOrLoad;\n    sourceLoadType;\n    status;\n}\n\nexport interface DeviceModel {\n    id: number;\n    name: string;\n    sourceOrLoad: string;\n    sourceLoadType: string;\n}\n\nexport interface DevicesWithEntitiesM {\n    id: number;\n    name: string;\n    type: string;\n    devices: DeviceModel[];\n}\n\nexport class DevicesWithEntities implements DevicesWithEntitiesM {\n    id;\n    name;\n    type;\n    devices;\n}\n\nexport interface DeviceInfoM {\n    total: number;\n    online: number;\n    delay: number;\n    offline: number;\n}\n\nexport class DeviceInfo implements DeviceInfoM {\n    total;\n    online;\n    delay;\n    offline;\n}\n\n","export interface UnitM {\n    id: number;\n    name: string;\n    type: string;\n}\n\nexport class Unit implements UnitM {\n    id;\n    name;\n    type;\n}","export interface ShiftM {\n    id: number;\n    name: string;\n    keyID: string;\n    startTime: string;\n    endTime: string;\n}\n\nexport class Shift implements ShiftM {\n    id;\n    name;\n    keyID;\n    startTime;\n    endTime;\n}","export interface RecentDataRequestWithParamM {\n    params: Array<{\n        name: string;\n    }>,\n    deviceID: number[];\n    includeDescendants: boolean;\n    timezone: string;\n    entityType: string;\n    backscan: number;\n}\n\nexport class RecentDataRequestWithParam implements RecentDataRequestWithParamM {\n    params = null;\n    deviceID = null;\n    includeDescendants = false;\n    timezone = null;\n    entityType = null;\n    backscan = null;\n}\n\nexport interface RecentDataRequestWithoutParamM {\n    deviceID: number[];\n    entityID: number[];\n    includeDescendants: boolean;\n    timezone: string;\n    entityType: string;\n    backscan: number;\n}\n\nexport class RecentDataRequestWithoutParam implements RecentDataRequestWithoutParamM {\n    deviceID = null;\n    entityID = null;\n    includeDescendants = false;\n    timezone = null;\n    entityType = null;\n    backscan = null;\n}\n\nexport interface ParamData {\n    name: string;\n    label: string;\n    unit: string;\n    data: {\n        date: string;\n        value: number;\n    };\n}\n\nexport interface DeviceData {\n    deviceID: number;\n    deviceName: string;\n    paramData: ParamData[];\n}\n\nexport interface OrgRecentDataM {\n    orgID: number;\n    entityID: number;\n    entityName: string;\n    deviceData: DeviceData[];\n}\n\nexport class OrgRecentData implements OrgRecentDataM {\n    orgID;\n    entityID;\n    entityName;\n    deviceData;\n}","export interface AlertM {\n    showAlert: boolean;\n    alertLabel: string;\n    alertContent: string;\n    messageAlertType: string;\n    messageAlertIcon: string;\n}\n\nexport class Alert implements AlertM {\n    showAlert = false;\n    alertLabel = '';\n    alertContent = '';\n    messageAlertType = '';\n    messageAlertIcon = '';\n}","export interface AggregateDataRequestM {\n    interval: string;\n    entityType: string;\n    shiftKey: string;\n    deviceID: number[];\n    entityID: number[];\n    params: Array<{\n        name: string;\n        dsAgg: string;\n        agg: string;\n        source_or_load: string;\n        sourceLoadType: string;\n    }>;\n    showImmediateChildOnly: boolean;\n    groupAll: boolean;\n    startTime: string;\n    endTime: string;\n}\n\nexport class AggregateDataRequest implements AggregateDataRequestM {\n    interval = null;\n    entityType = null;\n    shiftKey = null;\n    deviceID = null;\n    entityID = null;\n    params = null;\n    showImmediateChildOnly = false;\n    groupAll = false;\n    startTime = null;\n    endTime = null;\n\n    nullifyParams() {\n        this.params?.forEach(param => {\n            param.name = param.name || null;\n            param.dsAgg = param.dsAgg || null;\n            param.agg = param.agg || null;\n            param.source_or_load = param.source_or_load || null;\n            param.sourceLoadType = param.sourceLoadType || null;\n        });\n    }\n}","import { Inject, Injectable } from '@angular/core';\nimport { HttpClient } from '@angular/common/http';\n\nimport { Observable } from 'rxjs';\n\nimport { ParameterM } from '../model/parameter.model';\n\n@Injectable({\n    providedIn: 'root'\n})\n\nexport class ParameterController {\n\n    constructor(\n        private http: HttpClient,\n        @Inject('environment') private environment: any\n    ) { }\n\n    getParameterByLayoutID(orgID): Observable<ParameterM[]> {\n        // return this.http.get<ParameterM[]>(`${this.environment.TSC_COMMON_API_URL}organizations/${orgID}/layouts/parameters`);\n        return this.http.get<ParameterM[]>(`${this.environment.MOCK_SERVER}parameter`);\n    }\n\n    getParameterByDeviceID(orgID, requestBody): Observable<ParameterM[]> {\n        // return this.http.post<ParameterM[]>(`${this.environment.TSC_COMMON_API_URL}organizations/${orgID}/devices/parameters`, requestBody);\n        return this.http.get<ParameterM[]>(`${this.environment.MOCK_SERVER}parameter`);\n    }\n\n    getDerivedParameterByLayoutID(orgID): Observable<ParameterM[]> {\n        // return this.http.get<ParameterM[]>(`${this.environment.TSC_COMMON_API_URL}organizations/${orgID}/layouts/derived/parameters`);\n        return this.http.get<ParameterM[]>(`${this.environment.MOCK_SERVER}parameter`);\n    }\n}\n","import { Injectable } from '@angular/core';\n\nimport { Parameter, ParameterM } from '../model/parameter.model';\n\nimport { ParameterController } from '../controller/parameter.controller';\n\n// tsc-library\nimport { StorageService } from '@library/storage-service';\n// /tsc-library/\n\n@Injectable({\n    providedIn: 'root'\n})\n\nexport class ParameterService {\n\n    constructor(\n        private parameterController: ParameterController,\n        private storageService: StorageService,\n    ) { }\n\n    async getParameterByLayoutID(orgID): Promise<ParameterM[]> {\n        let parameterM: ParameterM[];\n        try {\n            parameterM = await this.parameterController.getParameterByLayoutID(orgID).toPromise();\n\n            if (parameterM) {\n                return parameterM;\n            } else {\n                return [new Parameter()];\n            }\n        } catch (error) {\n            console.error('Error -', error);\n            return [new Parameter()];\n        }\n    }\n\n    async getParameterByDeviceID(orgID, requestBody): Promise<ParameterM[]> {\n        let parameterM: ParameterM[];\n        try {\n            parameterM = await this.parameterController.getParameterByDeviceID(orgID, requestBody).toPromise();\n\n            if (parameterM) {\n                return parameterM;\n            } else {\n                return [new Parameter()];\n            }\n        } catch (error) {\n            console.error('Error -', error);\n            return [new Parameter()];\n        }\n    }\n\n    async getDerivedParameterByLayoutID(orgID): Promise<ParameterM[]> {\n        let derivedParameterM: ParameterM[];\n        try {\n            derivedParameterM = await this.parameterController.getDerivedParameterByLayoutID(orgID).toPromise();\n\n            if (derivedParameterM) {\n                return derivedParameterM;\n            } else {\n                return [new Parameter()];\n            }\n        } catch (error) {\n            console.error('Error -', error);\n            return [new Parameter()];\n        }\n    }\n\n}","import { Inject, Injectable } from '@angular/core';\nimport { HttpClient } from '@angular/common/http';\n\n@Injectable({\n    providedIn: 'root'\n})\nexport class AggregateDataController {\n\n    constructor(\n        private http: HttpClient,\n        @Inject('environment') private environment: any\n    ) { }\n\n    getAggregateData(orgID, requestBody) {\n        return this.http.post(`${this.environment.TSC_COMMON_API_URL}organizations/${orgID}/data/aggregate`, requestBody);\n    }\n\n}\n","import { Injectable } from '@angular/core';\n\nimport { AggregateDataController } from '../controller/aggregate-data.controller';\n\n@Injectable({\n    providedIn: 'root'\n})\n\nexport class AggregateDataService {\n\n    constructor(\n        private aggregateDataController: AggregateDataController\n    ) { }\n\n    async getAggregateData(orgID, requestBody) {\n        let aggregatedData;\n        try {\n            aggregatedData = await this.aggregateDataController.getAggregateData(orgID, requestBody).toPromise();\n\n            if (aggregatedData) {\n                return aggregatedData;\n            }\n        } catch (error) {\n            console.error('Error -', error);\n            throw error;\n        }\n    }\n\n}","import { Component, Inject, OnInit } from '@angular/core';\n\nimport { FormControl, Validators } from '@angular/forms';\n\nimport { MAT_DIALOG_DATA, MatDialog, MatDialogRef } from '@angular/material/dialog';\n\nimport { EChartsOption } from 'echarts';\n\nimport { LIST_CONSTANT } from '../../../../constant/list.constant';\n\nimport { AggregateDataRequest } from '../../../../model/aggregate-data.model';\nimport { Parameter, ParameterM } from '../../../../model/parameter.model';\n\nimport { ParameterService } from '../../../../service/parameter.service';\nimport { AggregateDataService } from '../../../../service/aggregate-data.service';\n\n// tsc-library\nimport { COMMON_CONSTANT, DialogEnum, LOADING_GRAPHIC, MaterialFormFieldAppearance, NO_DATA_GRAPHIC, TSCCommonService } from '@library/tsc-common';\nimport { DateService, DateTimeIntervalEnum } from '@library/date';\nimport { StorageService } from '@library/storage-service';\nimport * as moment from 'moment';\n// /tsc-library/\n\n@Component({\n    selector: 'lib-trend',\n    templateUrl: './trend.component.html',\n    styles: [\n    ]\n})\n\nexport class TrendComponent implements OnInit {\n\n    //TODO: SOMYA AGRAWAL, remove all chart dependency once chart library completed..\n\n    listConstant = LIST_CONSTANT;\n\n    materialFormFieldAppearance = MaterialFormFieldAppearance;\n    dateTimeIntervalEnum = DateTimeIntervalEnum;\n    dialogEnum = DialogEnum;\n\n    orgID: any;\n    trendData: any;\n    startTime: any;\n    endTime: any;\n    interval: any;\n    paramLabel: any;\n    noDataOption: any;\n    renderFlag: string = 'LOADING';\n    chartDataOption: EChartsOption;\n\n    parameterM = [new Parameter()];\n\n    dateRangeFC: FormControl = new FormControl('LAST_24_HRS', Validators.required);\n\n    constructor(\n        private dialogRef: MatDialogRef<TrendComponent>,\n        @Inject(MAT_DIALOG_DATA) public data,\n        private storageService: StorageService,\n        private dateService: DateService,\n        private parameterService: ParameterService,\n        private aggregateDataService: AggregateDataService,\n        private tscCommonService: TSCCommonService,\n        private dialog: MatDialog\n    ) {\n        this.trendData = data['trendData'];\n    }\n\n    ngOnInit(): void {\n        this.orgID = this.storageService.getStorage('currentOrgID');\n\n        this.dateRangeChange(this.dateRangeFC.value);\n\n        this.noDataOption = {\n            title: {\n                padding: [7, 0, 0, 20],\n            },\n            graphic: NO_DATA_GRAPHIC,\n            xAxis: { show: false },\n            yAxis: { show: false },\n        };\n\n        this.getParameterByLayoutID();\n    }\n\n    async getParameterByLayoutID() {\n        this.parameterM = <ParameterM[]>await this.parameterService.getParameterByLayoutID(this.orgID);\n    }\n\n    dateRangeChange(selectedDateRange) {\n        this.renderFlag = 'LOADING';\n\n        this.startTime = this.dateService.getStartDateTime(selectedDateRange);\n\n        switch (selectedDateRange) {\n            case DateTimeIntervalEnum.LAST_24_HRS:\n                this.endTime = this.dateService.getEndDateTime(DateTimeIntervalEnum.CURRENT_TIME);\n                this.interval = 'min_15';\n                break;\n\n            case DateTimeIntervalEnum.LAST_7_DAYS:\n                this.endTime = this.dateService.getEndDateTime(DateTimeIntervalEnum.CURRENT_DAY);\n                this.interval = 'hour_1';\n                break;\n\n            case DateTimeIntervalEnum.LAST_30_DAYS:\n                this.endTime = this.dateService.getEndDateTime(DateTimeIntervalEnum.CURRENT_DAY);\n                this.interval = 'day_1';\n                break;\n            default:\n                this.endTime = null;\n                this.interval = null;\n                break;\n        }\n\n        this.chartDataCheck();\n        this.getTrendData();\n    }\n\n    chartDataCheck() {\n        if (this.renderFlag == 'LOADING') {\n            this.chartDataOption = LOADING_GRAPHIC;\n        } else if (this.renderFlag == 'DATA') {\n            this.drawChart();\n        } else {\n            this.chartDataOption = this.noDataOption;\n        }\n    }\n\n    getCounterParameter(paramMetricValue) {\n        const parameter = this.tscCommonService.getUniqueObject(this.parameterM, 'isCounter', paramMetricValue);\n        return parameter ? parameter.isCounter : false;\n    }\n\n    async getTrendData() {\n        this.renderFlag = 'LOADING';\n\n        try {\n            let requestData = new AggregateDataRequest();\n\n            const isCounterParameter = this.getCounterParameter(this.trendData?.paramMetric);\n\n            requestData.interval = this.interval;\n            requestData.entityID = this.trendData?.entityID ? [this.trendData.entityID] : null;\n            requestData.deviceID = this.trendData?.deviceID ? [this.trendData.deviceID] : null;\n            requestData.entityType = this.trendData?.entityType;\n\n            requestData.params = [\n                {\n                    name: this.trendData.paramMetric,\n                    dsAgg: \"avg\",\n                    agg: \"avg\",\n                    ourceLoadType: isCounterParameter ? \"all\" : null,\n                    source_or_load: isCounterParameter ? \"source\" : null,\n                }\n            ];\n            requestData.nullifyParams();\n\n            requestData.startTime = this.startTime;\n            requestData.endTime = this.endTime;\n\n            this.trendData = await this.aggregateDataService.getAggregateData(this.orgID, requestData);\n\n            if (this.trendData?.[0]?.data.length > 0) {\n                this.paramLabel = this.trendData?.[0].paramLabel;\n                this.renderFlag = 'DATA';\n            } else {\n                this.renderFlag = 'NO_DATA';\n            }\n\n            this.chartDataCheck();\n        } catch (error) {\n            console.error(`Error in getTrendData()`, error);\n        }\n\n    }\n\n    drawChart() {\n        const value = this.trendData?.[0].data.map(item => item.value);\n        const unit = this.trendData?.[0].unit;\n\n        let formattedDatesForXAxis;\n\n        if (this.dateRangeFC.value == DateTimeIntervalEnum.LAST_24_HRS) {\n            formattedDatesForXAxis = this.trendData?.[0].data.map(item => {\n                const date = new Date(item.date);\n                return moment(date).format(\"HH:mm\");\n            });\n        } else {\n            formattedDatesForXAxis = this.trendData?.[0].data.map(item => {\n                const date = new Date(item.date);\n                return moment(date).format(\"YYYY-MM-DD HH:mm:ss\");\n            });\n        }\n\n        const formattedDatesForTooltip = this.trendData?.[0].data.map(item => {\n            const date = new Date(item.date);\n            return moment(date).format(\"YYYY-MM-DD HH:mm:ss\");\n        });\n\n        this.chartDataOption = {\n            toolbox: {\n                feature: {\n                    dataView: { show: true, readOnly: true },\n                    saveAsImage: { show: true }\n                }\n            },\n            tooltip: {\n                trigger: 'axis',\n                axisPointer: {\n                    type: 'shadow'\n                },\n                formatter: function (params) {\n                    const dataIndex = params[0].dataIndex;\n                    let tooltip = '';\n                    tooltip += formattedDatesForTooltip[dataIndex] + '<br />';\n\n                    params.forEach(function (param) {\n                        tooltip += 'Value: <b><span style=\"float: right; margin-left:15px;\">' + (param.value != null ? (param.value) + ' ' + unit : COMMON_CONSTANT.HYPHEN) + '</span></b>';\n                    });\n                    return tooltip;\n                }\n            },\n            dataZoom: [\n                {\n                    type: 'slider',\n                    filterMode: 'none'\n                },\n                {\n                    type: 'inside',\n                    filterMode: 'none'\n                }\n            ],\n            xAxis: {\n                type: 'category',\n                boundaryGap: false,\n                data: formattedDatesForXAxis\n            },\n            yAxis: {\n                type: 'value',\n                name: this.trendData?.[0].paramLabel + ' (' + this.trendData?.[0].unit + ')',\n                nameLocation: 'middle',\n                nameGap: 40\n            },\n            series: [\n                {\n                    data: value,\n                    type: 'line',\n                    areaStyle: {}\n                }\n            ]\n        }\n    }\n\n}\n","<div mat-dialog-title>\n    <strong class=\"dialogTitle\">\n        {{ paramLabel }} Trend\n    </strong>\n    <button mat-icon-button mat-dialog-close cdkFocusInitial class=\"float-end matDialogClose\" matTooltip=\"Close\"\n        matTooltipPosition=\"before\">\n        <span class=\"material-symbols-outlined\" [mat-dialog-close]=\"dialogEnum.CLOSE_DR\">\n            close\n        </span>\n    </button>\n</div>\n<div class=\"matDialogContent\" mat-dialog-content>\n    <div class=\"row\">\n        <div class=\"col-sm-6\">\n            <mat-form-field class=\"mat-field-width-100\" [appearance]=\"materialFormFieldAppearance.FORM_FIELD_APPEARANCE\">\n                <mat-label>Select daterange</mat-label>\n                <mat-select (selectionChange)=\"dateRangeChange($event.value)\" [formControl]=\"dateRangeFC\">\n                    <mat-option disabled>Select daterange</mat-option>\n                    <mat-option *ngFor=\"let daterange of listConstant.TREND_DATE_RANGE\" [value]=\"daterange.value\">\n                        {{ daterange.label }}\n                    </mat-option>\n                </mat-select>\n            </mat-form-field>\n        </div>\n    </div>\n    <div class=\"row\">\n        <div echarts [options]=\"chartDataOption\"></div>\n    </div>\n</div>","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\n\nimport { TrendComponent } from './trend.component';\n\nimport { ReactiveFormsModule } from '@angular/forms';\n\nimport { MatDialogModule } from '@angular/material/dialog';\nimport { MatButtonModule } from '@angular/material/button';\nimport { MatInputModule } from '@angular/material/input';\nimport { MatFormFieldModule } from '@angular/material/form-field';\nimport { MatSelectModule } from '@angular/material/select';\nimport { MatTooltipModule } from '@angular/material/tooltip';\n\nimport { NgxEchartsModule } from 'ngx-echarts';\n\n@NgModule({\n    declarations: [\n        TrendComponent\n    ],\n    imports: [\n        CommonModule,\n        ReactiveFormsModule,\n        MatDialogModule,\n        MatButtonModule,\n        MatInputModule,\n        MatFormFieldModule,\n        MatSelectModule,\n        MatTooltipModule,\n        NgxEchartsModule.forRoot({\n            echarts: () => import('echarts')\n        }),\n    ]\n})\nexport class TrendModule { }\n","import { Component, EventEmitter, OnInit, Output } from '@angular/core';\n\nimport { FormControl, Validators } from '@angular/forms';\n\nimport { LIST_CONSTANT } from '../../../constant/list.constant';\n\n// tsc-library\nimport { MaterialFormFieldAppearance } from '@library/tsc-common';\n// /tsc-library/\n\n@Component({\n    selector: 'lib-aggregation',\n    templateUrl: './aggregation.component.html',\n    styles: [\n    ]\n})\nexport class AggregationComponent implements OnInit {\n\n    listConstant = LIST_CONSTANT;\n    materialFormFieldAppearance = MaterialFormFieldAppearance;\n\n    allAggregationIDs: any[] = [];\n    totalAggregationCount: number = 0;\n    aggregationFC: FormControl = new FormControl(['avg'], [Validators.required]);\n\n    @Output()\n    emitFilter = new EventEmitter();\n\n    constructor() { }\n\n    ngOnInit(): void {\n        let aggregationList = this.listConstant.AGGREGATION;\n\n        this.totalAggregationCount = aggregationList.length;\n        aggregationList.forEach(aggregation => this.allAggregationIDs.push(aggregation['value']));\n    }\n\n    ngAfterViewInit() {\n        this.emitFilter.emit();\n    }\n\n    selectAllAggregation() {\n        if (!this.aggregationFC.value.includes(-1)) {\n            this.aggregationFC.reset([]);\n            return;\n        }\n        this.aggregationFC.setValue([-1, ...this.allAggregationIDs]);\n        this.emitFilter.emit();\n    }\n\n    selectedAggregation() {\n        const selected = this.aggregationFC.value;\n\n        if (selected.includes(-1)) {\n            selected.shift();\n            this.aggregationFC.patchValue(selected);\n        } else if (this.aggregationFC.value.length == this.totalAggregationCount) {\n            this.allAggregationIDs.splice(0, 0, -1);\n            this.aggregationFC.patchValue(this.allAggregationIDs);\n        } else {\n            const filteredSelected = selected.filter(s => s != -1);\n            this.aggregationFC.patchValue(filteredSelected);\n        }\n\n        this.emitFilter.emit();\n    }\n\n}\n","<mat-form-field class=\"matFieldWidth100\" [appearance]=\"materialFormFieldAppearance.FORM_FIELD_APPEARANCE\">\n    <mat-label>Select aggregation</mat-label>\n    <mat-select [formControl]=\"aggregationFC\" multiple required>\n        <mat-option [value]=\"-1\" (click)=\"selectAllAggregation()\">\n            Select all\n        </mat-option>\n        <mat-option *ngFor=\"let aggregation of listConstant.AGGREGATION\" [value]=\"aggregation.value\"\n            (click)=\"selectedAggregation()\">\n            {{ aggregation.label }}\n        </mat-option>\n    </mat-select>\n    <mat-error *ngIf=\"aggregationFC.touched && aggregationFC.hasError('required')\">\n        Select aggregation\n    </mat-error>\n</mat-form-field>","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\n\nimport { AggregationComponent } from './aggregation.component';\n\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\n\nimport { MatInputModule } from '@angular/material/input';\nimport { MatFormFieldModule } from '@angular/material/form-field';\nimport { MatSelectModule } from '@angular/material/select';\n\nimport { NgxMatSelectSearchModule } from 'ngx-mat-select-search';\n\n@NgModule({\n    declarations: [\n        AggregationComponent\n    ],\n    imports: [\n        CommonModule,\n        FormsModule,\n        ReactiveFormsModule,\n        MatInputModule,\n        MatSelectModule,\n        MatFormFieldModule,\n        NgxMatSelectSearchModule\n    ],\n    exports: [\n        AggregationComponent\n    ]\n})\nexport class AggregationModule { }\n","import { Component, EventEmitter, OnInit, Output } from '@angular/core';\n\nimport { FormControl, Validators } from '@angular/forms';\n\nimport { LIST_CONSTANT } from '../../../constant/list.constant';\n\n// tsc-library\nimport { MaterialFormFieldAppearance } from '@library/tsc-common';\n// /tsc-library/\n\n@Component({\n    selector: 'lib-aggregation-duration',\n    templateUrl: './aggregation-duration.component.html',\n    styles: [\n    ]\n})\n\nexport class AggregationDurationComponent implements OnInit {\n\n    listConstant = LIST_CONSTANT;\n    materialFormFieldAppearance = MaterialFormFieldAppearance;\n\n    aggDurationFC: FormControl = new FormControl('min_15', [Validators.required]);\n\n    @Output()\n    emitFilter = new EventEmitter();\n\n    constructor() { }\n\n    ngOnInit(): void {\n    }\n\n    ngAfterViewInit() {\n        this.emitFilter.emit();\n    }\n\n    onChange(selectedAD) {\n        this.aggDurationFC.patchValue(selectedAD);\n        this.emitFilter.emit();\n    }\n\n}\n","<mat-form-field class=\"matFieldWidth100\" [appearance]=\"materialFormFieldAppearance.FORM_FIELD_APPEARANCE\">\n    <mat-label>Select aggregation duration</mat-label>\n    <mat-select (selectionChange)=\"onChange($event.value)\" [formControl]=\"aggDurationFC\" required>\n        <mat-option *ngFor=\"let duration of listConstant.AGGREGATION_DURATION\" [value]=\"duration.value\">\n            {{ duration.label }}\n        </mat-option>\n    </mat-select>\n    <mat-error *ngIf=\"aggDurationFC.touched && aggDurationFC.hasError('required')\">\n        Select aggregation duration\n    </mat-error>\n</mat-form-field>","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\n\nimport { AggregationDurationComponent } from './aggregation-duration.component';\n\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\n\nimport { MatInputModule } from '@angular/material/input';\nimport { MatFormFieldModule } from '@angular/material/form-field';\nimport { MatSelectModule } from '@angular/material/select';\n\nimport { NgxMatSelectSearchModule } from 'ngx-mat-select-search';\n\n@NgModule({\n    declarations: [\n        AggregationDurationComponent\n    ],\n    imports: [\n        CommonModule,\n        FormsModule,\n        ReactiveFormsModule,\n        MatInputModule,\n        MatSelectModule,\n        MatFormFieldModule,\n        NgxMatSelectSearchModule\n    ],\n    exports: [\n        AggregationDurationComponent\n    ]\n})\nexport class AggregationDurationModule { }\n","import { Component, EventEmitter, Input, OnInit, Output, SimpleChanges } from '@angular/core';\n\nimport { FormControl, Validators } from '@angular/forms';\n\nimport { Parameter, ParameterM } from '../../../model/parameter.model';\n\nimport { ParameterService } from '../../../service/parameter.service';\n\n// tsc-library\nimport { COMMON_CONSTANT, MatSelectSearchService, MaterialFormFieldAppearance } from '@library/tsc-common';\nimport { StorageService } from '@library/storage-service';\n// /tsc-library/\n\n@Component({\n    selector: 'lib-param-metric',\n    templateUrl: './param-metric.component.html',\n    styles: [\n    ]\n})\nexport class ParamMetricComponent implements OnInit {\n    materialFormFieldAppearance = MaterialFormFieldAppearance\n    commonConstant = COMMON_CONSTANT;\n\n    @Input()\n    deviceInp: any;\n\n    orgID: any;\n    parameterM = [new Parameter()];\n\n    allParameterID: any[] = [];\n    totalParameterCount: number = 0;\n\n    parameterFC: FormControl = new FormControl([], [Validators.required]);\n    paramSearchUtil: MatSelectSearchService = new MatSelectSearchService(['label']);\n\n    @Output()\n    emitFilter = new EventEmitter();\n\n    constructor(\n        private storageService: StorageService,\n        private parameterService: ParameterService\n    ) { }\n\n    ngOnInit(): void {\n        this.orgID = this.storageService.getStorage('currentOrgID');\n    }\n\n    ngOnChanges(changes: SimpleChanges): void {\n        if (changes.deviceInp && this.deviceInp) {\n            this.getParameterByDeviceID(this.deviceInp);\n        }\n    }\n\n    async getParameterByDeviceID(selectedDevices) {\n        let requestBody = {};\n        requestBody['deviceID'] = [selectedDevices];\n\n        this.parameterM = <ParameterM[]>await this.parameterService.getParameterByDeviceID(this.orgID, requestBody);\n\n        this.paramSearchUtil.entityArr = this.parameterM;\n        this.paramSearchUtil.createSubscription();\n\n        this.totalParameterCount = this.parameterM.length;\n        this.parameterM.forEach(parameter => this.allParameterID.push(parameter['paramMetric']));\n\n        this.emitFilter.emit();\n    }\n\n    selectAllParameters() {\n        if (!this.parameterFC.value.includes(-1)) {\n            this.parameterFC.reset([]);\n            return;\n        }\n        this.parameterFC.setValue([-1, ...this.allParameterID]);\n\n        this.emitFilter.emit();\n    }\n\n    selectedParameters() {\n        const selected = this.parameterFC.value;\n\n        if (selected.includes(-1)) {\n            selected.shift();\n            this.parameterFC.patchValue(selected);\n        } else if (this.parameterFC.value.length == this.totalParameterCount) {\n            this.allParameterID.splice(0, 0, -1);\n            this.parameterFC.patchValue(this.allParameterID);\n        } else {\n            const filteredSelected = selected.filter(s => s != -1);\n            this.parameterFC.patchValue(filteredSelected);\n        }\n\n        this.emitFilter.emit();\n    }\n\n}\n","<mat-form-field class=\"matFieldWidth100\" [appearance]=\"materialFormFieldAppearance.FORM_FIELD_APPEARANCE\">\n    <mat-label>Select parameter</mat-label>\n    <ng-container *ngIf=\"parameterM && parameterM.length > 0 && parameterM[0]['id']; else noDataOption\">\n        <mat-select [formControl]=\"parameterFC\" multiple required>\n            <ngx-mat-select-search [formControl]=\"paramSearchUtil.filterFC\" placeholderLabel=\"Search by name\"\n                noEntriesFoundLabel=\"No matching name found.\">\n            </ngx-mat-select-search>\n            <mat-option [value]=\"-1\" (click)=\"selectAllParameters()\" [hidden]=\"paramSearchUtil.filterFC.value\">\n                Select all\n            </mat-option>\n            <mat-option *ngFor=\"let parameter of paramSearchUtil.filteredEntities | async\" [value]=\"parameter.paramMetric\"\n                (click)=\"selectedParameters()\">\n                {{ parameter.label }}\n            </mat-option>\n        </mat-select>\n    </ng-container>\n    <ng-template #noDataOption>\n        <mat-select [formControl]=\"parameterFC\">\n            <mat-option disabled>\n                {{ commonConstant.NO_DATA_FOUND }}\n            </mat-option>\n        </mat-select>\n    </ng-template>\n    <mat-error *ngIf=\"!deviceInp\">\n        Please select device first\n    </mat-error>\n    <mat-error *ngIf=\"parameterFC.touched && parameterFC.hasError('required') && deviceInp\">\n        Select parameter\n    </mat-error>\n</mat-form-field>","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\n\nimport { ParamMetricComponent } from './param-metric.component';\n\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\n\nimport { MatInputModule } from '@angular/material/input';\nimport { MatFormFieldModule } from '@angular/material/form-field';\nimport { MatSelectModule } from '@angular/material/select';\n\nimport { NgxMatSelectSearchModule } from 'ngx-mat-select-search';\n\n@NgModule({\n    declarations: [\n        ParamMetricComponent\n    ],\n    imports: [\n        CommonModule,\n        FormsModule,\n        ReactiveFormsModule,\n        MatInputModule,\n        MatSelectModule,\n        MatFormFieldModule,\n        NgxMatSelectSearchModule\n    ],\n    exports: [\n        ParamMetricComponent\n    ]\n})\nexport class ParamMetricModule { }\n","import { Component, EventEmitter, OnInit, Output } from '@angular/core';\n\nimport { FormControl, Validators } from '@angular/forms';\n\nimport { Parameter, ParameterM } from '../../../model/parameter.model';\n\nimport { ParameterService } from '../../../service/parameter.service';\n\n// tsc-library\nimport { StorageService } from '@library/storage-service';\nimport { COMMON_CONSTANT, MaterialFormFieldAppearance, MatSelectSearchService } from '@library/tsc-common';\n// /tsc-library/\n\n@Component({\n    selector: 'lib-parameter',\n    templateUrl: './parameter.component.html',\n    styles: [\n    ]\n})\nexport class ParameterComponent implements OnInit {\n\n    COMMON_CONSTANT = COMMON_CONSTANT;\n    MaterialFormFieldAppearance = MaterialFormFieldAppearance;\n\n    @Output()\n    emitFilter = new EventEmitter();\n\n    orgID: any;\n\n    parameterM = [new Parameter()];\n\n    selectedParameterFC: FormControl = new FormControl('', [Validators.required]);\n\n    parameterSearchUtil: MatSelectSearchService = new MatSelectSearchService(['label']);\n\n    constructor(\n        private storageService: StorageService,\n        private parameterService: ParameterService\n    ) { }\n\n    ngOnInit(): void {\n        this.orgID = this.storageService.getStorage('currentOrgID');\n\n        this.getParameterByLayoutID();\n    }\n\n    async getParameterByLayoutID() {\n        this.parameterM = <ParameterM[]>await this.parameterService.getParameterByLayoutID(this.orgID);\n\n        this.parameterSearchUtil.entityArr = this.parameterM;\n        this.parameterSearchUtil.createSubscription();\n    }\n\n    parameterChange(selectedParameter) {\n        this.selectedParameterFC.patchValue(selectedParameter);\n        this.emitFilter.emit();\n    }\n\n}\n","<div class=\"row\">\n    <mat-form-field class=\"mat-field-width-100\" [appearance]=\"MaterialFormFieldAppearance.FORM_FIELD_APPEARANCE\">\n        <mat-label>Select parameter</mat-label>\n        <mat-select (selectionChange)=\"parameterChange($event.value)\" [formControl]=\"selectedParameterFC\" required>\n            <ng-container *ngIf=\"parameterM && parameterM.length > 0 && parameterM[0]['id']; else noDataFound\">\n                <mat-option>\n                    <ngx-mat-select-search [formControl]=\"parameterSearchUtil.filterFC\"\n                        placeholderLabel=\"Search by name\" noEntriesFoundLabel=\"No matching name found.\">\n                    </ngx-mat-select-search>\n                </mat-option>\n                <mat-option *ngFor=\"let parameter of parameterSearchUtil.filteredEntities | async\" [value]=\"parameter.id\">\n                    {{ parameter.label }}\n                </mat-option>\n            </ng-container>\n            <ng-template #noDataFound>\n                <mat-option disabled>\n                    {{ COMMON_CONSTANT.NO_DATA_FOUND }}\n                </mat-option>\n            </ng-template>\n        </mat-select>\n        <mat-error *ngIf=\"selectedParameterFC.hasError('required')\">\n            Select parameter\n        </mat-error>\n    </mat-form-field>\n</div>","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\n\nimport { ParameterComponent } from './parameter.component';\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\n\nimport { MatInputModule } from '@angular/material/input';\nimport { MatSelectModule } from '@angular/material/select';\nimport { MatFormFieldModule } from '@angular/material/form-field';\nimport { NgxMatSelectSearchModule } from 'ngx-mat-select-search';\n\n@NgModule({\n    declarations: [\n        ParameterComponent\n    ],\n    imports: [\n        CommonModule,\n        FormsModule,\n        ReactiveFormsModule,\n        MatInputModule,\n        MatSelectModule,\n        MatFormFieldModule,\n        NgxMatSelectSearchModule\n    ],\n    exports: [\n        ParameterComponent\n    ]\n})\n\nexport class ParameterModule { }\n","export enum DropdownTypeEnum {\n    SINGLE_DROPDOWN = 'SINGLE',\n    MULTIPLE_DROPDOWN = 'MULTIPLE',\n}","import { Inject, Injectable } from '@angular/core';\nimport { HttpClient, HttpParams } from '@angular/common/http';\n\nimport { Observable } from 'rxjs';\n\nimport { DeviceInfoM, DeviceM, DevicesWithEntitiesM } from '../model/device.model';\n\n@Injectable({\n    providedIn: 'root'\n})\n\nexport class DeviceController {\n\n    constructor(\n        private http: HttpClient,\n        @Inject('environment') private environment: any\n    ) { }\n\n    getDeviceInfo(orgID): Observable<DeviceInfoM> {\n        return this.http.get<DeviceInfoM>(`${this.environment.TSC_COMMON_API_URL}organizations/${orgID}/devices/status`);\n    }\n\n    getDevicesByEntityID(orgID, requestBody): Observable<DeviceM[]> {\n        // return this.http.post<DeviceM[]>(`${this.environment.TSC_COMMON_API_URL}organizations/${orgID}/entities/devices`, requestBody);\n        return this.http.get<DeviceM[]>(`${this.environment.MOCK_SERVER}devices`);\n    }\n\n    //TODO: SOMYA AGRAWAL: To discuss below twp api's with Abhinav\n    getDevicesWithEntities(orgID, requestBody):Observable<DevicesWithEntitiesM[]> {\n        return this.http.post<DevicesWithEntitiesM[]>(`${this.environment.TSC_COMMON_API_URL}organizations/${orgID}/layouts/entities/devices`, requestBody);\n    }\n    \n    getDevicesWithEntitiesByParameter(orgID, paramMetric): Observable<DevicesWithEntitiesM[]> {\n        let params = new HttpParams();\n        params = params.append('paramMetric', paramMetric);\n        return this.http.post<DevicesWithEntitiesM[]>(`${this.environment.TSC_COMMON_API_URL}organizations/${orgID}/entities-devices`, { params: params });\n    }\n}\n","import { Injectable } from '@angular/core';\n\nimport { Device, DeviceM, DevicesWithEntities, DevicesWithEntitiesM } from '../model/device.model';\nimport { DeviceController } from '../controller/device.controller';\n\n@Injectable({\n    providedIn: 'root'\n})\n\nexport class DeviceService {\n\n    constructor(\n        private deviceController: DeviceController\n    ) { }\n\n    async getDevicesByEntityID(orgID, requestBody): Promise<DeviceM[]> {\n        let deviceM: DeviceM[];\n        try {\n            deviceM = await this.deviceController.getDevicesByEntityID(orgID, requestBody).toPromise();\n\n            if (deviceM) {\n                return deviceM;\n            } else {\n                return [new Device()];\n            }\n        } catch (error) {\n            console.error('Error -', error);\n            return [new Device()];\n        }\n    }\n\n    async getDevicesWithEntities(orgID, requestBody): Promise<DevicesWithEntitiesM[]> {\n        let devicesWithEntitiesM: DevicesWithEntitiesM[];\n        try {\n            devicesWithEntitiesM = await this.deviceController.getDevicesWithEntities(orgID, requestBody).toPromise();\n\n            if (devicesWithEntitiesM) {\n                return devicesWithEntitiesM;\n            } else {\n                return [new DevicesWithEntities()];\n            }\n        } catch (error) {\n            console.error('Error -', error);\n            return [new DevicesWithEntities()];\n        }\n    }\n\n}","import { Component, EventEmitter, Input, OnInit, Output, SimpleChanges } from '@angular/core';\n\nimport { FormControl, Validators } from '@angular/forms';\n\nimport { DropdownTypeEnum } from '../../../enum/dropdown.enum';\n\nimport { Device, DeviceM } from '../../../model/device.model';\n\nimport { DeviceService } from '../../../service/device.service';\n\n// tsc-library\nimport { StorageService } from '@library/storage-service';\nimport { COMMON_CONSTANT, MaterialFormFieldAppearance, MatSelectSearchService } from '@library/tsc-common';\n// /tsc-library/\n\n@Component({\n    selector: 'lib-device',\n    templateUrl: './device.component.html',\n    styles: [\n    ]\n})\n\nexport class DeviceComponent implements OnInit {\n\n    @Input()\n    dropdownTypeInp: DropdownTypeEnum;\n\n    @Input()\n    entityInp: any;\n\n    commonConstant = COMMON_CONSTANT;\n    materialFormFieldAppearance = MaterialFormFieldAppearance;\n    dropdownTypeEnum = DropdownTypeEnum;\n\n    deviceM = [new Device()];\n\n    orgID: any;\n    dropdownType: any;\n    allDeviceID: any[] = [];\n    totalDeviceCount: number = 0;\n\n    deviceFC: FormControl = new FormControl('', [Validators.required]);\n    multipleDeviceFC: FormControl = new FormControl([], [Validators.required]);\n\n    deviceSearchUtil: MatSelectSearchService = new MatSelectSearchService(['name']);\n\n    @Output()\n    emitFilter = new EventEmitter();\n\n    constructor(\n        private storageService: StorageService,\n        private deviceService: DeviceService\n    ) { }\n\n    ngOnInit(): void {\n        this.orgID = this.storageService.getStorage('currentOrgID');\n    }\n\n    ngOnChanges(changes: SimpleChanges): void {\n        if (changes.dropdownTypeInp && this.dropdownTypeInp) {\n            this.dropdownType = this.dropdownTypeInp;\n        }\n\n        if (this.entityInp && this.entityInp?.length != 0) {\n            if (changes.entityInp) {\n                this.getDevicesByEntityID(this.entityInp);\n\n                this.deviceFC.patchValue(null);\n                this.emitFilter.emit();\n            }\n        }\n    }\n\n    async getDevicesByEntityID(entityID) {\n        let requestBody = {};\n        requestBody['entityID'] = entityID;\n\n        this.deviceM = <DeviceM[]>await this.deviceService.getDevicesByEntityID(this.orgID, requestBody);\n\n        this.deviceSearchUtil.entityArr = this.deviceM;\n        this.deviceSearchUtil.createSubscription();\n\n        this.totalDeviceCount = this.deviceM.length;\n        this.deviceM.forEach(device => this.allDeviceID.push(device['id']));\n        this.emitFilter.emit();\n    }\n\n    onChange(selectedDevice) {\n        this.deviceFC.patchValue(selectedDevice);\n        this.emitFilter.emit();\n    }\n\n    selectAllDevices() {\n        if (!this.multipleDeviceFC.value.includes(-1)) {\n            this.multipleDeviceFC.reset([]);\n            return;\n        }\n        this.multipleDeviceFC.setValue([-1, ...this.allDeviceID]);\n        this.emitFilter.emit();\n    }\n\n    selectedDevices() {\n        const selected = this.multipleDeviceFC.value;\n\n        if (selected.includes(-1)) {\n            selected.shift();\n            this.multipleDeviceFC.patchValue(selected);\n        } else if (this.multipleDeviceFC.value.length == this.totalDeviceCount) {\n            this.allDeviceID.splice(0, 0, -1);\n            this.multipleDeviceFC.patchValue(this.allDeviceID);\n        } else {\n            const filteredSelected = selected.filter(s => s != -1);\n            this.multipleDeviceFC.patchValue(filteredSelected);\n        }\n\n        this.emitFilter.emit();\n    }\n\n}","<mat-form-field *ngIf=\"dropdownType == dropdownTypeEnum.SINGLE_DROPDOWN\" class=\"matFieldWidth100\"\n    [appearance]=\"materialFormFieldAppearance.FORM_FIELD_APPEARANCE\">\n    <mat-label>Select device</mat-label>\n    <mat-select (selectionChange)=\"onChange($event.value)\" [formControl]=\"deviceFC\" required>\n        <ng-container *ngIf=\"deviceM && deviceM.length > 0 && deviceM[0]['id']; else noDeviceFound\">\n            <mat-option>\n                <ngx-mat-select-search [formControl]=\"deviceSearchUtil.filterFC\" placeholderLabel=\"Search by name\"\n                    noEntriesFoundLabel=\"No matching name found.\">\n                </ngx-mat-select-search>\n            </mat-option>\n            <mat-option *ngFor=\"let device of deviceSearchUtil.filteredEntities | async\" [value]=\"device.id\">\n                {{ device.name }}\n            </mat-option>\n        </ng-container>\n        <ng-template #noDeviceFound>\n            <mat-option disabled>\n                {{ commonConstant.NO_DATA_FOUND }}\n            </mat-option>\n        </ng-template>\n    </mat-select>\n    <mat-error *ngIf=\"!entityInp\">\n        Please select entity first\n    </mat-error>\n    <mat-error\n        *ngIf=\"deviceFC.touched && deviceFC.hasError('required') && entityInp\">\n        Select device\n    </mat-error>\n</mat-form-field>\n\n<mat-form-field *ngIf=\"dropdownType == dropdownTypeEnum.MULTIPLE_DROPDOWN\" class=\"matFieldWidth100\"\n    [appearance]=\"materialFormFieldAppearance.FORM_FIELD_APPEARANCE\">\n    <mat-label>Select device</mat-label>\n    <ng-container *ngIf=\"deviceM && deviceM.length > 0 && deviceM[0]['id']; else noDataOption\">\n        <mat-select [formControl]=\"multipleDeviceFC\" multiple required>\n            <ngx-mat-select-search [formControl]=\"deviceSearchUtil.filterFC\" placeholderLabel=\"Search by name\"\n                noEntriesFoundLabel=\"No matching name found.\">\n            </ngx-mat-select-search>\n            <mat-option [value]=\"-1\" (click)=\"selectAllDevices()\"  [hidden]=\"deviceSearchUtil.filterFC.value\">\n                Select all\n            </mat-option>\n            <mat-option *ngFor=\"let device of deviceSearchUtil.filteredEntities | async\" [value]=\"device.id\"\n                (click)=\"selectedDevices()\">\n                {{ device.name }}\n            </mat-option>\n        </mat-select>\n    </ng-container>\n    <ng-template #noDataOption>\n        <mat-select [formControl]=\"multipleDeviceFC\">\n            <mat-option disabled>\n                {{ commonConstant.NO_DATA_FOUND }}\n            </mat-option>\n        </mat-select>\n    </ng-template>\n    <mat-error *ngIf=\"!entityInp\">\n        Please select entity first\n    </mat-error>\n    <mat-error *ngIf=\"multipleDeviceFC.touched && multipleDeviceFC.hasError('required') && entityInp\">\n        Select device\n    </mat-error>\n</mat-form-field>","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\n\nimport { DeviceComponent } from './device.component';\n\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\n\nimport { MatInputModule } from '@angular/material/input';\nimport { MatSelectModule } from '@angular/material/select';\nimport { MatFormFieldModule } from '@angular/material/form-field';\n\nimport { NgxMatSelectSearchModule } from 'ngx-mat-select-search';\n\n@NgModule({\n    declarations: [\n        DeviceComponent\n    ],\n    imports: [\n        CommonModule,\n        FormsModule,\n        ReactiveFormsModule,\n        MatInputModule,\n        MatSelectModule,\n        MatFormFieldModule,\n        NgxMatSelectSearchModule\n    ],\n    exports: [\n        DeviceComponent\n    ]\n})\n\nexport class DeviceModule { }\n","import { Inject, Injectable } from '@angular/core';\nimport { HttpClient } from '@angular/common/http';\n\nimport { Observable } from 'rxjs';\n\nimport { EntityM, EntityTreeM, EntityTypeM } from '../model/entity.model';\n\n@Injectable({\n    providedIn: 'root'\n})\n\nexport class EntityController {\n\n    constructor(\n        private http: HttpClient,\n        @Inject('environment') private environment: any\n    ) { }\n\n    getEntitiesByOrgID(orgID): Observable<EntityM[]> {\n        // return this.http.get<EntityM[]>(`${this.environment.TSC_COMMON_API_URL}organizations/${orgID}/entities`);\n        return this.http.get<EntityM[]>(`${this.environment.MOCK_SERVER}entities`);\n    }\n\n    getEntityHierarchyByParameterID(orgID, parameterID): Observable<EntityTreeM[]> {\n        return this.http.get<EntityTreeM[]>(`${this.environment.TSC_COMMON_API_URL}organizations/${orgID}/layouts/parameters/${parameterID}/entities`);\n    }\n\n    getEntityLevelConsumption(orgID, requestBody) {\n        return this.http.post(`${this.environment.TSC_COMMON_API_URL}organizations/${orgID}/entities/load-consumption`, requestBody);\n    }\n\n    getEntityTypeByLayoutID(orgID): Observable<EntityTypeM[]> {\n        return this.http.get<EntityTypeM[]>(`${this.environment.TSC_COMMON_API_URL}organizations/${orgID}/entities/type`);\n    }\n\n    getEntitiesWithDevices(orgID, layoutID, requestBody): Observable<EntityTreeM> {\n        return this.http.post<EntityTreeM>(`${this.environment.TSC_COMMON_API_URL}organizations/${orgID}/layouts/${layoutID}/entity-device`, requestBody);\n    }\n\n    getEntityByParameterID(orgID, requestBody): Observable<EntityM[]> {\n        // return this.http.post<EntityM[]>(`${this.environment.TSC_COMMON_API_URL}organizations/${orgID}/layouts/entities`, requestBody);\n        return this.http.get<EntityM[]>(`${this.environment.MOCK_SERVER}entities`);\n    }\n}\n","import { Injectable } from '@angular/core';\n\nimport { Entity, EntityM, EntityTree, EntityTreeM, EntityType, EntityTypeM } from '../model/entity.model';\n\nimport { EntityController } from '../controller/entity.controller';\n\n@Injectable({\n    providedIn: 'root'\n})\n\nexport class EntityService {\n\n    constructor(\n        private entityController: EntityController\n    ) { }\n\n    async getEntitiesByOrgID(orgID): Promise<EntityM[]> {\n        let entityM: EntityM[];\n        try {\n            entityM = await this.entityController.getEntitiesByOrgID(orgID).toPromise();\n\n            if (entityM) {\n                return entityM;\n            } else {\n                return [new Entity()];\n            }\n        } catch (error) {\n            console.error('Error -', error);\n            return [new Entity()];\n        }\n    }\n\n    async getEntityHierarchyByParameterID(orgID, parameterID): Promise<EntityTreeM[]> {\n        let entityTreeM: EntityTreeM[];\n        try {\n            entityTreeM = await this.entityController.getEntityHierarchyByParameterID(orgID, parameterID).toPromise();\n\n            if (entityTreeM) {\n                return entityTreeM;\n            } else {\n                return [new EntityTree()];\n            }\n        } catch (error) {\n            console.error('Error -', error);\n            return [new EntityTree()];\n        }\n    }\n\n    async getEntityTypeByLayoutID(orgID): Promise<EntityTypeM[]> {\n        let entityTypeM: EntityTypeM[];\n        try {\n            entityTypeM = await this.entityController.getEntityTypeByLayoutID(orgID).toPromise();\n\n            if (entityTypeM) {\n                return entityTypeM;\n            } else {\n                return [new EntityType()];\n            }\n        } catch (error) {\n            console.error('Error -', error);\n            return [new EntityType()];\n        }\n    }\n\n    async getEntitiesWithDevices(orgID, layoutID, requestBody): Promise<EntityTreeM> {\n        let entityDeviceM: EntityTreeM;\n        try {\n            entityDeviceM = await this.entityController.getEntitiesWithDevices(orgID, layoutID, requestBody).toPromise();\n\n            if (entityDeviceM) {\n                return entityDeviceM;\n            } else {\n                return new EntityTree();\n            }\n        } catch (error) {\n            console.error('Error -', error);\n            return new EntityTree();\n        }\n    }\n\n    async getEntityByParameterID(orgID, requestBody): Promise<EntityM[]> {\n        let entityM: EntityM[];\n        try {\n            entityM = await this.entityController.getEntityByParameterID(orgID, requestBody).toPromise();\n\n            if (entityM) {\n                return entityM;\n            } else {\n                return [new Entity()];\n            }\n        } catch (error) {\n            console.error('Error -', error);\n            return [new Entity()];\n        }\n    }\n\n}","import { Component, EventEmitter, Input, OnInit, Output, SimpleChanges } from '@angular/core';\n\nimport { FormControl, Validators } from '@angular/forms';\n\nimport { Entity, EntityM } from '../../../model/entity.model';\n\nimport { EntityService } from '../../../service/entity.service';\n\n// tsc-library\nimport { COMMON_CONSTANT, MatSelectSearchService, MaterialFormFieldAppearance } from '@library/tsc-common';\nimport { StorageService } from '@library/storage-service';\nimport { DropdownTypeEnum } from '../../../enum/dropdown.enum';\n// /tsc-library/\n\n@Component({\n    selector: 'lib-entity',\n    templateUrl: './entity.component.html',\n    styles: [\n    ]\n})\n\nexport class EntityComponent implements OnInit {\n    @Input()\n    dropdownTypeInp: DropdownTypeEnum;\n\n    materialFormFieldAppearance = MaterialFormFieldAppearance\n    commonConstant = COMMON_CONSTANT;\n    dropdownTypeEnum = DropdownTypeEnum;\n\n    orgID: any;\n    entityM = [new Entity()];\n    dropdownType: string = this.dropdownTypeEnum.SINGLE_DROPDOWN;\n    allEntityID: any[] = [];\n    totalEntityCount: number = 0;\n\n    entityFC: FormControl = new FormControl('', [Validators.required]);\n    multipleEntityFC: FormControl = new FormControl([], [Validators.required]);\n\n    entitySearchUtil: MatSelectSearchService = new MatSelectSearchService(['name']);\n\n    @Output()\n    emitFilter = new EventEmitter();\n\n    constructor(\n        private storageService: StorageService,\n        private entityService: EntityService\n    ) { }\n\n    ngOnInit(): void {\n        this.orgID = this.storageService.getStorage('currentOrgID');\n\n        this.getEntitiesByOrgID();\n    }\n\n    ngOnChanges(changes: SimpleChanges): void {\n        if (changes.dropdownTypeInp && this.dropdownTypeInp) {\n            this.dropdownType = this.dropdownTypeInp;\n        }\n    }\n\n    async getEntitiesByOrgID() {\n        this.entityM = <EntityM[]>await this.entityService.getEntitiesByOrgID(this.orgID);\n\n        this.entitySearchUtil.entityArr = this.entityM;\n        this.entitySearchUtil.createSubscription();\n\n        this.totalEntityCount = this.entityM.length;\n        this.entityM.forEach(entity => this.allEntityID.push(entity['id']));\n\n        if (this.entityM.length > 0) {\n            this.entityFC.patchValue(this.entityM[0]['id']);\n            this.emitFilter.emit();\n        }\n    }\n\n    onChange(selectedEntity) {\n        this.entityFC.patchValue(selectedEntity);\n        this.emitFilter.emit();\n    }\n\n    selectAllEntities() {\n        if (!this.multipleEntityFC.value.includes(-1)) {\n            this.multipleEntityFC.reset([]);\n            return;\n        }\n        this.multipleEntityFC.setValue([-1, ...this.allEntityID]);\n        this.emitFilter.emit();\n    }\n\n    selectedEntities() {\n        const selected = this.multipleEntityFC.value;\n\n        if (selected.includes(-1)) {\n            selected.shift();\n            this.multipleEntityFC.patchValue(selected);\n        } else if (this.multipleEntityFC.value.length == this.totalEntityCount) {\n            this.allEntityID.splice(0, 0, -1);\n            this.multipleEntityFC.patchValue(this.allEntityID);\n        } else {\n            const filteredSelected = selected.filter(s => s != -1);\n            this.multipleEntityFC.patchValue(filteredSelected);\n        }\n\n        this.emitFilter.emit();\n    }\n\n}\n","<mat-form-field *ngIf=\"dropdownType == dropdownTypeEnum.SINGLE_DROPDOWN\" class=\"matFieldWidth100\"\n    [appearance]=\"materialFormFieldAppearance.FORM_FIELD_APPEARANCE\">\n    <mat-label>Select entity</mat-label>\n    <mat-select (selectionChange)=\"onChange($event.value)\" [formControl]=\"entityFC\" required>\n        <ng-container *ngIf=\"entityM && entityM.length > 0 && entityM[0]['id']; else noDataFound\">\n            <mat-option>\n                <ngx-mat-select-search [formControl]=\"entitySearchUtil.filterFC\" placeholderLabel=\"Search by name\"\n                    noEntriesFoundLabel=\"No matching name found.\">\n                </ngx-mat-select-search>\n            </mat-option>\n            <mat-option *ngFor=\"let entity of entitySearchUtil.filteredEntities | async\" [value]=\"entity.id\">\n                {{ entity.name }}\n            </mat-option>\n        </ng-container>\n        <ng-template #noDataFound>\n            <mat-option disabled>\n                {{ commonConstant.NO_DATA_FOUND }}\n            </mat-option>\n        </ng-template>\n    </mat-select>\n    <mat-error *ngIf=\"entityFC.touched && entityFC.hasError('required')\">\n        Select entity\n    </mat-error>\n</mat-form-field>\n\n<mat-form-field *ngIf=\"dropdownType == dropdownTypeEnum.MULTIPLE_DROPDOWN\" class=\"matFieldWidth100\"\n    [appearance]=\"materialFormFieldAppearance.FORM_FIELD_APPEARANCE\">\n    <mat-label>Select entity</mat-label>\n    <ng-container *ngIf=\"entityM && entityM.length > 0 && entityM[0]['id']; else noDataOption\">\n        <mat-select [formControl]=\"multipleEntityFC\" multiple required>\n            <ngx-mat-select-search [formControl]=\"entitySearchUtil.filterFC\" placeholderLabel=\"Search by name\"\n                noEntriesFoundLabel=\"No matching name found.\">\n            </ngx-mat-select-search>\n            <mat-option [value]=\"-1\" (click)=\"selectAllEntities()\" [hidden]=\"entitySearchUtil.filterFC.value\">\n                Select all\n            </mat-option>\n            <mat-option *ngFor=\"let entity of entitySearchUtil.filteredEntities | async\" [value]=\"entity.id\"\n                (click)=\"selectedEntities()\">\n                {{ entity.name }}\n            </mat-option>\n        </mat-select>\n    </ng-container>\n    <ng-template #noDataOption>\n        <mat-select [formControl]=\"multipleEntityFC\">\n            <mat-option disabled>\n                {{ commonConstant.NO_DATA_FOUND }}\n            </mat-option>\n        </mat-select>\n    </ng-template>\n    <mat-error *ngIf=\"multipleEntityFC.touched && multipleEntityFC.hasError('required') && entityInp\">\n        Select entity\n    </mat-error>\n</mat-form-field>","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\n\nimport { EntityComponent } from './entity.component';\n\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\n\nimport { MatInputModule } from '@angular/material/input';\nimport { MatFormFieldModule } from '@angular/material/form-field';\nimport { MatSelectModule } from '@angular/material/select';\n\nimport { NgxMatSelectSearchModule } from 'ngx-mat-select-search';\n\n@NgModule({\n    declarations: [\n        EntityComponent\n    ],\n    imports: [\n        CommonModule,\n        FormsModule,\n        ReactiveFormsModule,\n        MatInputModule,\n        MatSelectModule,\n        MatFormFieldModule,\n        NgxMatSelectSearchModule\n    ],\n    exports: [\n        EntityComponent\n    ]\n})\nexport class EntityModule { }\n","import { Inject, Injectable } from '@angular/core';\nimport { HttpClient } from '@angular/common/http';\n\nimport { Observable } from 'rxjs';\n\nimport { UnitM } from '../model/unit.model';\n\n@Injectable({\n    providedIn: 'root'\n})\n\nexport class UnitController {\n\n    constructor(\n        private http: HttpClient,\n        @Inject('environment') private environment: any\n    ) { }\n\n    getUnitByParameterID(orgID, parameterID): Observable<UnitM[]> {\n        return this.http.get<UnitM[]>(`${this.environment.TSC_COMMON_API_URL}organizations/${orgID}/parameters/${parameterID}/unit-type`);\n    }\n}","import { Injectable } from '@angular/core';\n\nimport { Unit, UnitM } from '../model/unit.model';\n\nimport { UnitController } from '../controller/unit.controller';\n\n@Injectable({\n    providedIn: 'root'\n})\n\nexport class UnitService {\n\n    constructor(\n        private unitController: UnitController,\n    ) { }\n\n    async getUnitByParameterID(orgID, parameterID): Promise<UnitM[]> {\n        let unitM: UnitM[];\n        try {\n            unitM = await this.unitController.getUnitByParameterID(orgID, parameterID).toPromise();\n\n            if (unitM) {\n                return unitM;\n            } else {\n                return [new Unit()];\n            }\n        } catch (error) {\n            console.error('Error -', error);\n            return [new Unit()];\n        }\n    }\n}","import { Component, EventEmitter, Input, OnInit, Output, SimpleChanges } from '@angular/core';\n\nimport { FormControl, Validators } from '@angular/forms';\n\nimport { Unit, UnitM } from '../../../model/unit.model';\n\nimport { UnitService } from '../../../service/unit.service';\n\n// tsc-library\nimport { StorageService } from '@library/storage-service';\nimport { COMMON_CONSTANT, MaterialFormFieldAppearance, MatSelectSearchService } from '@library/tsc-common';\n// /tsc-library/\n\n@Component({\n    selector: 'lib-unit',\n    templateUrl: './unit.component.html',\n    styles: [\n    ]\n})\n\nexport class UnitComponent implements OnInit {\n\n    @Input()\n    selectedParameterID: any;\n\n    COMMON_CONSTANT = COMMON_CONSTANT;\n    MaterialFormFieldAppearance = MaterialFormFieldAppearance;\n\n    @Output()\n    emitFilter = new EventEmitter();\n\n    orgID: any;\n\n    unitM = [new Unit()];\n\n    selectedUnitFC: FormControl = new FormControl('', [Validators.required]);\n\n    unitSearchUtil: MatSelectSearchService = new MatSelectSearchService(['name']);\n\n    constructor(\n        private storageService: StorageService,\n        private unitService: UnitService\n    ) { }\n\n    ngOnInit(): void {\n        this.orgID = this.storageService.getStorage('currentOrgID');\n    }\n\n    ngOnChanges(changes: SimpleChanges): void {\n        if (this.selectedParameterID) {\n            if (changes.selectedParameterID) {\n                this.getUnitByParameterID(this.selectedParameterID);\n            }\n        }\n    }\n\n    async getUnitByParameterID(parameterID) {\n        this.unitM = <UnitM[]>await this.unitService.getUnitByParameterID(this.orgID, parameterID);\n\n        this.unitSearchUtil.entityArr = this.unitM;\n        this.unitSearchUtil.createSubscription();\n    }\n\n    unitChange(selectedUnit) {\n        this.selectedUnitFC.patchValue(selectedUnit);\n        this.emitFilter.emit();\n    }\n\n}","<div class=\"row\">\n    <mat-form-field class=\"mat-field-width-100\" [appearance]=\"MaterialFormFieldAppearance.FORM_FIELD_APPEARANCE\">\n        <mat-label>Select unit</mat-label>\n        <mat-select (selectionChange)=\"unitChange($event.value)\" [formControl]=\"selectedUnitFC\" required>\n            <ng-container *ngIf=\"unitM && unitM.length > 0 && unitM[0]['id']; else noDataFound\">\n                <mat-option>\n                    <ngx-mat-select-search [formControl]=\"unitSearchUtil.filterFC\" placeholderLabel=\"Search by name\"\n                        noEntriesFoundLabel=\"No matching name found.\">\n                    </ngx-mat-select-search>\n                </mat-option>\n                <mat-option *ngFor=\"let unit of unitSearchUtil.filteredEntities | async\" [value]=\"unit.id\">\n                    {{ unit.name }}\n                </mat-option>\n            </ng-container>\n            <ng-template #noDataFound>\n                <mat-option disabled>\n                    {{ COMMON_CONSTANT.NO_DATA_FOUND }}\n                </mat-option>\n            </ng-template>\n        </mat-select>\n        <mat-error *ngIf=\"!selectedParameterID\">\n            Please select parameter first\n        </mat-error>\n        <mat-error *ngIf=\"selectedUnitFC.hasError('required') && selectedParameterID\">\n            Select unit\n        </mat-error>\n    </mat-form-field>\n</div>","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\n\nimport { UnitComponent } from './unit.component';\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\n\nimport { MatInputModule } from '@angular/material/input';\nimport { MatSelectModule } from '@angular/material/select';\nimport { MatFormFieldModule } from '@angular/material/form-field';\nimport { NgxMatSelectSearchModule } from 'ngx-mat-select-search';\n\n@NgModule({\n    declarations: [\n        UnitComponent\n    ],\n    imports: [\n        CommonModule,\n        FormsModule,\n        ReactiveFormsModule,\n        MatInputModule,\n        MatSelectModule,\n        MatFormFieldModule,\n        NgxMatSelectSearchModule\n    ],\n    exports: [\n        UnitComponent\n    ]\n})\n\nexport class UnitModule { }\n","import { Component, OnInit } from '@angular/core';\n\nimport { DeviceInfo } from '../../../model/device.model';\nimport { EntityLevelConsumption } from '../../../model/entity.model';\nimport { AggregateDataRequest } from '../../../model/aggregate-data.model';\n\nimport { EntityController } from '../../../controller/entity.controller';\nimport { DeviceController } from '../../../controller/device.controller';\n\nimport { AggregateDataService } from '../../../service/aggregate-data.service';\n\n// tsc-library\nimport { DateTimeIntervalEnum, DateService } from '@library/date';\nimport { COMMON_CONSTANT, TSCCommonService } from '@library/tsc-common';\nimport { StorageService } from '@library/storage-service';\nimport { ApplicationKeyID } from '@library/application-service';\n// /tsc-library/\n\n@Component({\n    selector: 'lib-home',\n    templateUrl: './home.component.html',\n    styleUrls: ['./home.component.scss']\n})\n\nexport class HomeComponent implements OnInit {\n    commonConstant = COMMON_CONSTANT;\n\n    orgID: any;\n    applicationKeyID: any;\n    paramKey: any;\n    label: any;\n    icon;\n\n    outerStrokeColor: any;\n    outerStrokeGradientStopColor: any;\n    innerStrokeColor: any;\n\n    totalConsumptionCircleData: any;\n    consumptionBreakupCircleData: any;\n\n    todayConsumption: any;\n    currentMonthConsumption: any;\n    currentYearConsumption: any;\n    entityConsumption = [new EntityLevelConsumption()];\n    deviceInfoM = new DeviceInfo();\n\n    constructor(\n        private storageService: StorageService,\n        private dateService: DateService,\n        private tscCommonService: TSCCommonService,\n        private aggregateDataService: AggregateDataService,\n        private entityController: EntityController,\n        private deviceController: DeviceController\n    ) { }\n\n    ngOnInit(): void {\n        this.orgID = this.storageService.getStorage('currentOrgID');\n        this.applicationKeyID = this.storageService.getStorage('applicationKeyID');\n\n        if (this.applicationKeyID == ApplicationKeyID.ENERGY_KEY_ID) {\n            this.label = \"Energy\";\n            this.icon = \"bolt\";\n            this.paramKey = \"engEnergyUsed\";\n            this.outerStrokeColor = \"#fa9200\";\n            this.outerStrokeGradientStopColor = \"#fdd130\";\n            this.innerStrokeColor = \"#fbe2a6\";\n        } else if (this.applicationKeyID == ApplicationKeyID.WATER_KEY_ID) {\n            this.label = \"Water\";\n            this.icon = \"water_drop\";\n            this.paramKey = \"gwFlowTotalizer\";\n            this.outerStrokeColor = \"#4882c2\";\n            this.outerStrokeGradientStopColor = \"#53a9ff\";\n            this.innerStrokeColor = \"#e7e8ea\";\n        }\n\n        this.getTotalConsumption(DateTimeIntervalEnum.CURRENT_DAY)\n            .then(app => {\n                this.todayConsumption = app;\n            })\n\n        this.getTotalConsumption(DateTimeIntervalEnum.CURRENT_MONTH)\n            .then(app => {\n                this.currentMonthConsumption = app;\n                const totalConsumptionValue = this.currentMonthConsumption?.[0]?.['data']?.[0]?.['value'];\n\n                this.totalConsumptionCircleData = {\n                    percent: this.tscCommonService.formatLargeNumber(totalConsumptionValue, 'false', 1),\n                    maxPercent: 999999999,\n                    units: this.currentMonthConsumption?.[0]?.unit,\n                    showUnits: true,\n                    radius: 75,\n                    space: 4,\n                    outerStrokeGradient: true,\n                    outerStrokeWidth: 10,\n                    outerStrokeColor: this.outerStrokeColor,\n                    outerStrokeGradientStopColor: this.outerStrokeGradientStopColor,\n                    innerStrokeColor: this.innerStrokeColor,\n                    showBackground: false,\n                    innerStrokeWidth: 5,\n                    showSubtitle: false,\n                    subtitleFormat: false,\n                    startFromZero: false,\n                    animationDuration: 500,\n                    backgroundColor: '#ffffff',\n                }\n            })\n\n        this.getTotalConsumption(DateTimeIntervalEnum.CURRENT_YEAR)\n            .then(app => {\n                this.currentYearConsumption = app;\n            })\n\n        this.getTotalEntitiesConsumption();\n        this.getEntityLevelConsumption();\n        this.getDeviceInfo();\n    }\n\n    async getTotalConsumption(selectedRange) {\n        try {\n            const requestData = new AggregateDataRequest();\n\n            if (selectedRange == DateTimeIntervalEnum.CURRENT_DAY) {\n                requestData.startTime = this.dateService.getStartDateTime(DateTimeIntervalEnum.CURRENT_DAY);\n                requestData.interval = 'day_1';\n            } else if (selectedRange == DateTimeIntervalEnum.CURRENT_MONTH) {\n                requestData.startTime = this.dateService.getStartDateTime(DateTimeIntervalEnum.CURRENT_MONTH);\n                requestData.interval = 'month_1';\n            } else if (selectedRange == DateTimeIntervalEnum.CURRENT_YEAR) {\n                requestData.startTime = this.dateService.getStartDateTime(DateTimeIntervalEnum.CURRENT_YEAR);\n                requestData.interval = 'year_1';\n            }\n\n            requestData.endTime = this.dateService.getEndDateTime(DateTimeIntervalEnum.CURRENT_TIME);\n            requestData.params = [\n                {\n                    name: this.paramKey,\n                    dsAgg: \"sum\",\n                    agg: \"sum\",\n                    source_or_load: \"source\",\n                    sourceLoadType: \"all\"\n                }\n            ];\n            requestData.nullifyParams();\n            requestData.groupAll = true;\n\n            const result = await this.aggregateDataService.getAggregateData(this.orgID, requestData);\n            return result;\n        } catch (error) {\n            console.error(`Error in getTotalConsumption for (${selectedRange})`, error);\n        }\n    }\n\n    async getTotalEntitiesConsumption() {\n        try {\n            let requestData = new AggregateDataRequest();\n\n            requestData.startTime = this.dateService.getStartDateTime(DateTimeIntervalEnum.CURRENT_MONTH);\n            requestData.endTime = this.dateService.getEndDateTime(DateTimeIntervalEnum.CURRENT_TIME);\n            requestData.interval = \"month_1\";\n            requestData.params = [\n                {\n                    name: this.paramKey,\n                    dsAgg: \"sum\",\n                    agg: \"sum\",\n                    source_or_load: \"load\",\n                    sourceLoadType: \"all\"\n                }\n            ];\n            requestData.nullifyParams();\n            requestData.groupAll = true;\n\n            const totalEntitiesConsumData = await this.aggregateDataService.getAggregateData(this.orgID, requestData);\n            const consumptionBreakupValue = totalEntitiesConsumData?.[0]?.['data']?.[0]?.['value'];\n\n            this.consumptionBreakupCircleData = {\n                percent: this.tscCommonService.formatLargeNumber(consumptionBreakupValue, 'false', 1),\n                maxPercent: 999999999,\n                units: totalEntitiesConsumData?.[0]?.unit,\n                showUnits: true,\n                radius: 75,\n                space: 4,\n                outerStrokeGradient: true,\n                outerStrokeWidth: 10,\n                outerStrokeColor: this.outerStrokeColor,\n                outerStrokeGradientStopColor: this.outerStrokeGradientStopColor,\n                innerStrokeColor: this.innerStrokeColor,\n                showBackground: false,\n                innerStrokeWidth: 5,\n                showSubtitle: false,\n                subtitleFormat: false,\n                startFromZero: false,\n                animationDuration: 500,\n                backgroundColor: '#ffffff',\n            }\n        } catch (error) {\n            console.error(`Error in getTotalEntitiesConsumption()`, error);\n        }\n    }\n\n    getEntityLevelConsumption() {\n        let requestData = new AggregateDataRequest();\n\n        requestData.startTime = this.dateService.getStartDateTime(DateTimeIntervalEnum.CURRENT_MONTH);\n        requestData.endTime = this.dateService.getEndDateTime(DateTimeIntervalEnum.CURRENT_TIME);\n        requestData.interval = \"month_1\";\n        requestData.params = [\n            {\n                name: this.paramKey,\n                dsAgg: \"sum\",\n                agg: \"sum\",\n                source_or_load: \"load\",\n                sourceLoadType: \"all\"\n            }\n        ];\n        requestData.nullifyParams();\n        requestData.groupAll = false;\n\n        this.entityController.getEntityLevelConsumption(this.orgID, requestData)\n            .subscribe((entityConsumRes: EntityLevelConsumption[]) => {\n                this.entityConsumption = entityConsumRes;\n            },\n                error => {\n                    console.log('error in getEntityLevelConsumption() -', error);\n                });\n    }\n\n    highestConsumptionEntity() {\n        if (this.entityConsumption?.length == 0) {\n            return null;\n        }\n        return this.entityConsumption?.reduce((maxEntity, currentEntity) => {\n            return currentEntity.value > maxEntity.value ? currentEntity : maxEntity;\n        }, this.entityConsumption?.[0]);\n    }\n\n    calculateProgress(entity) {\n        const highestConsumption = this.highestConsumptionEntity();\n        if (!highestConsumption) {\n            return 0;\n        }\n        const progress = (entity.value / highestConsumption.value) * 100;\n        return progress;\n    }\n\n    getDeviceInfo() {\n        this.deviceController.getDeviceInfo(this.orgID)\n            .subscribe((deviceRes: DeviceInfo) => {\n                this.deviceInfoM = deviceRes;\n            },\n                error => {\n                    console.log('error in getDeviceInfo() -', error);\n                });\n    }\n\n}","<div class=\"card main-card cardOverwrite h100\">\n    <div class=\"headerContainer\">\n        <div class=\"headerLeftContainer\">\n            <div class=\"pageTitle\">Home</div>\n        </div>\n    </div>\n\n    <div class=\"card-body pt-0\">\n        <div class=\"row\">\n            <div class=\"col-sm-6\">\n                <mat-card class=\"cardOverwrite cardBackgroundColor cardHeight\">\n                    <div class=\"row\">\n                        <div class=\"col-sm-12\">\n                            <span class=\"cardTitle\">\n                                Total {{ label }} Consumption\n                            </span>\n                        </div>\n                    </div>\n                    <div class=\"row\">\n                        <div class=\"d-flex align-items-center\">\n                            <div class=\"col-sm-6\">\n                                <span class=\"centerAlign\">\n                                    <circle-progress [options]=\"totalConsumptionCircleData\" [renderOnClick]=\"false\"\n                                        class=\"copy\"></circle-progress>\n                                </span>\n                                <span class=\"centerAlign\">\n                                    This Month\n                                </span>\n                            </div>\n                            <div class=\"col-sm-6 ms-4\">\n                                <div class=\"row\">\n                                    <ng-container *ngTemplateOutlet=\"totalConsumption; context: {\n                                        label: 'Today',\n                                        value: todayConsumption?.[0]?.['data']?.[0]?.['value'],\n                                        unit: todayConsumption?.[0]?.['unit'],\n                                        matCardClass: 'today'\n                                    }\"></ng-container>\n                                </div>\n                                <div class=\"row mt-4\">\n                                    <ng-container *ngTemplateOutlet=\"totalConsumption; context: {\n                                        label: 'This Month',\n                                        value: currentMonthConsumption?.[0]?.['data']?.[0]?.['value'],\n                                        unit: currentMonthConsumption?.[0]?.['unit'],\n                                        matCardClass: 'month'\n                                    }\"></ng-container>\n                                </div>\n                                <div class=\"row mt-4\">\n                                    <ng-container *ngTemplateOutlet=\"totalConsumption; context: {\n                                        label: 'This Year',\n                                        value: currentYearConsumption?.[0]?.['data']?.[0]?.['value'],\n                                        unit: currentYearConsumption?.[0]?.['unit'],\n                                        matCardClass: 'year'\n                                    }\"></ng-container>\n                                </div>\n                            </div>\n                        </div>\n                    </div>\n                </mat-card>\n            </div>\n            <div class=\"col-sm-6\">\n                <mat-card class=\"cardOverwrite cardBackgroundColor cardHeight\">\n                    <div class=\"row\">\n                        <div class=\"col-sm-12\">\n                            <span class=\"cardTitle\">\n                                {{ label }} Consumption Breakup\n                            </span>\n                        </div>\n                    </div>\n                    <div class=\"row\">\n                        <div class=\"d-flex align-items-center\">\n                            <div class=\"col-sm-6\">\n                                <span class=\"centerAlign\">\n                                    <circle-progress [options]=\"consumptionBreakupCircleData\" [renderOnClick]=\"false\"\n                                        class=\"copy\"></circle-progress>\n                                </span>\n                                <span class=\"centerAlign\">\n                                    This Month\n                                </span>\n                            </div>\n                            <div class=\"col-sm-6\">\n                                <div class=\"row\" *ngIf=\"entityConsumption?.[0]?.id\">\n                                    <ng-container *ngTemplateOutlet=\"entityProgress; context: {\n                                        name: entityConsumption[0].name,\n                                        value: entityConsumption[0].value,\n                                        unit: entityConsumption[0].unit,\n                                        entityObj: entityConsumption[0],\n                                        outerProgressBarClass: 'progress1BGColor',\n                                        innerProgressBarClass: 'progress1Color'\n                                    }\"></ng-container>\n                                </div>\n                                <div class=\"row mt-4\" *ngIf=\"entityConsumption?.[1]\">\n                                    <ng-container *ngTemplateOutlet=\"entityProgress; context: {\n                                        name: entityConsumption[1].name,\n                                        value: entityConsumption[1].value,\n                                        unit: entityConsumption[1].unit,\n                                        entityObj: entityConsumption[1],\n                                        outerProgressBarClass: 'progress2BGColor',\n                                        innerProgressBarClass: 'progress2Color'\n                                    }\"></ng-container>\n                                </div>\n                                <div class=\"row mt-4\" *ngIf=\"entityConsumption?.[2]\">\n                                    <ng-container *ngTemplateOutlet=\"entityProgress; context: {\n                                        name: entityConsumption[2].name,\n                                        value: entityConsumption[2].value,\n                                        unit: entityConsumption[2].unit,\n                                        entityObj: entityConsumption[2],\n                                        outerProgressBarClass: 'progress3BGColor',\n                                        innerProgressBarClass: 'progress3Color'\n                                    }\"></ng-container>\n                                </div>\n                                <div class=\"row mt-4\" *ngIf=\"entityConsumption?.[3]\">\n                                    <ng-container *ngTemplateOutlet=\"entityProgress; context: {\n                                        name: entityConsumption[3].name,\n                                        value: entityConsumption[3].value,\n                                        unit: entityConsumption[3].unit,\n                                        entityObj: entityConsumption[3],\n                                        outerProgressBarClass: 'progress4BGColor',\n                                        innerProgressBarClass: 'progress4Color'\n                                    }\"></ng-container>\n                                </div>\n                            </div>\n                        </div>\n                    </div>\n                </mat-card>\n            </div>\n        </div>\n\n        <div class=\"row mt-4\">\n            <div class=\"col-sm-3\">\n                <mat-card class=\"card main-card cardOverwrite card-info\">\n                    <ng-container *ngTemplateOutlet=\"deviceStatus; context: {\n                        label: 'Total devices',\n                        count: deviceInfoM.total\n                    }\"></ng-container>\n                </mat-card>\n            </div>\n            <div class=\"col-sm-3\">\n                <mat-card class=\"card main-card cardOverwrite card-success\">\n                    <ng-container *ngTemplateOutlet=\"deviceStatus; context: {\n                        label: 'Online devices',\n                        count: deviceInfoM.online\n                    }\"></ng-container>\n                </mat-card>\n            </div>\n            <div class=\"col-sm-3\">\n                <mat-card class=\"card main-card cardOverwrite card-warning\">\n                    <ng-container *ngTemplateOutlet=\"deviceStatus; context: {\n                        label: 'Delayed devices',\n                        count: deviceInfoM.delay\n                    }\"></ng-container>\n                </mat-card>\n            </div>\n            <div class=\"col-sm-3\">\n                <mat-card class=\"card main-card cardOverwrite card-danger\">\n                    <ng-container *ngTemplateOutlet=\"deviceStatus; context: {\n                        label: 'Offline devices',\n                        count: deviceInfoM.offline\n                    }\"></ng-container>\n                </mat-card>\n            </div>\n        </div>\n    </div>\n</div>\n\n<ng-template #totalConsumption let-label=\"label\" let-value=\"value\" let-unit=\"unit\" let-matCardClass=\"matCardClass\"\n    let-outerProgressBarClass=\"outerProgressBarClass\" let-innerProgressBarClass=\"innerProgressBarClass\">\n    <div class=\"col-sm-12\">\n        <div class=\"d-flex align-items-center\">\n            <mat-card class=\"card main-card square d-flex justify-content-center me-2\" [class]=\"matCardClass\">\n                <span class=\"material-symbols-outlined\">\n                    {{ icon }}\n                </span>\n            </mat-card>\n            <div class=\"row\">\n                <span>{{ label }}</span><br />\n                <span class=\"text-primary fw-bold\">{{ value ? value : commonConstant.HYPHEN }} <span\n                        class=\"unitSize\">{{ value ? unit : '' }}</span></span>\n            </div>\n        </div>\n    </div>\n</ng-template>\n\n<ng-template #entityProgress let-name=\"name\" let-value=\"value\" let-unit=\"unit\" let-entityObj=\"entityObj\"\n    let-outerProgressBarClass=\"outerProgressBarClass\" let-innerProgressBarClass=\"innerProgressBarClass\">\n    <div class=\"col-sm-12\">\n        <span>\n            {{ name }}\n        </span>\n        <span class=\"float-end text-primary fw-bold\"> {{ value ? value : commonConstant.HYPHEN }}\n            <span class=\"unitSize\"> {{ value ? unit : '' }} </span>\n        </span>\n        <div class=\"progress progressBarRadius\" [class]=\"outerProgressBarClass\">\n            <div class=\"progress-bar progressBarRadius\" [class]=\"innerProgressBarClass\" role=\"progressbar\"\n                [style.width.%]=\"calculateProgress(entityObj)\"></div>\n        </div>\n    </div>\n</ng-template>\n\n<ng-template #deviceStatus let-label=\"label\" let-count=\"count\">\n    <div class=\"row\">\n        <div class=\"col-sm-12\">\n            <span class=\"material-symbols-outlined\">\n                devices\n            </span>\n        </div>\n    </div>\n    <div class=\"row\">\n        <div class=\"col-sm-12 fs-1 fw-bold centerAlign\">\n            {{ count != undefined && count != null ? count : commonConstant.HYPHEN }}\n        </div>\n    </div>\n    <div class=\"row mt-1\">\n        <div class=\"col-sm-12 fs-5 centerAlign\">\n            {{ label }}\n        </div>\n    </div>\n</ng-template>","import { NgModule } from '@angular/core';\nimport { RouterModule, Routes } from '@angular/router';\n\nimport { HomeComponent } from './home.component';\n\nconst routes: Routes = [\n    {\n        path: '',\n        component: HomeComponent\n    }\n];\n\n@NgModule({\n    imports: [RouterModule.forChild(routes)],\n    exports: [RouterModule]\n})\nexport class HomeRoutingModule { }\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\n\nimport { HomeRoutingModule } from './home-routing.module';\nimport { HomeComponent } from './home.component';\n\n\nimport { MatCardModule } from '@angular/material/card';\nimport { MatTooltipModule } from '@angular/material/tooltip';\nimport { PerfectScrollbarModule } from 'ngx-perfect-scrollbar';\n\nimport { NgCircleProgressModule } from 'ng-circle-progress';\n\n@NgModule({\n    declarations: [\n        HomeComponent\n    ],\n    imports: [\n        CommonModule,\n        HomeRoutingModule,\n        MatCardModule,\n        MatTooltipModule,\n        PerfectScrollbarModule,\n        NgCircleProgressModule.forRoot(),\n    ]\n})\nexport class HomeModule { }\n","import { Inject, Injectable } from '@angular/core';\nimport { HttpClient } from '@angular/common/http';\n\nimport { Observable } from 'rxjs';\n\nimport { ShiftM } from '../model/shift.model';\n\n@Injectable({\n    providedIn: 'root'\n})\n\nexport class ShiftController {\n\n    constructor(\n        private http: HttpClient,\n        @Inject('environment') private environment: any\n    ) { }\n\n    getShift(orgID): Observable<ShiftM[]> {\n        return this.http.get<ShiftM[]>(`${this.environment.TSC_COMMON_API_URL}organizations/${orgID}/shifts`);\n    }\n}\n","import { Injectable } from '@angular/core';\n\nimport { Shift, ShiftM } from '../model/shift.model';\n\nimport { ShiftController } from '../controller/shift.controller';\n\n@Injectable({\n    providedIn: 'root'\n})\n\nexport class ShiftService {\n\n    constructor(\n        private shiftController: ShiftController\n    ) { }\n\n    async getShift(orgID): Promise<ShiftM[]> {\n        let shiftM: ShiftM[];\n        try {\n            shiftM = await this.shiftController.getShift(orgID).toPromise();\n\n            if (shiftM) {\n                return shiftM;\n            } else {\n                return [new Shift()];\n            }\n        } catch (error) {\n            console.error('Error -', error);\n            return [new Shift()];\n        }\n    }\n}\n","import { Component, EventEmitter, Input, OnInit, Output, SimpleChanges } from '@angular/core';\n\nimport { FormControl, Validators } from '@angular/forms';\n\nimport { Shift, ShiftM } from '../../../model/shift.model';\n\nimport { ShiftService } from '../../../service/shift.service';\n\n// tsc-library\nimport { StorageService } from '@library/storage-service';\nimport { COMMON_CONSTANT, MaterialFormFieldAppearance, MatSelectSearchService } from '@library/tsc-common';\n// /tsc-library/\n\n@Component({\n    selector: 'lib-shift',\n    templateUrl: './shift.component.html',\n    styles: [\n    ]\n})\nexport class ShiftComponent implements OnInit {\n\n    @Output()\n    emitFilter = new EventEmitter();\n\n    COMMON_CONSTANT = COMMON_CONSTANT;\n    MaterialFormFieldAppearance = MaterialFormFieldAppearance;\n\n    orgID: any;\n\n    shiftM = [new Shift()];\n\n    allShiftID: any[] = [];\n    totalShiftCount: number = 0;\n\n    multiSelectedShiftFC: FormControl = new FormControl([], [Validators.required]);\n\n    shiftSearchUtil: MatSelectSearchService = new MatSelectSearchService(['name']);\n\n    constructor(\n        private storageService: StorageService,\n        private shiftService: ShiftService\n    ) { }\n\n    ngOnInit(): void {\n        this.orgID = this.storageService.getStorage('currentOrgID');\n\n        this.getShift();\n    }\n\n    async getShift() {\n        this.shiftM = <ShiftM[]>await this.shiftService.getShift(this.orgID);\n\n        this.shiftSearchUtil.entityArr = this.shiftM;\n        this.shiftSearchUtil.createSubscription();\n\n        this.totalShiftCount = this.shiftM.length;\n        this.shiftM.forEach(shift => this.allShiftID.push(shift['id']));\n        this.emitFilter.emit();\n    }\n\n    selectAllShifts() {\n        if (!this.multiSelectedShiftFC.value.includes(-1)) {\n            this.multiSelectedShiftFC.reset([]);\n            return;\n        }\n        this.multiSelectedShiftFC.setValue([-1, ...this.allShiftID]);\n        this.emitFilter.emit();\n    }\n\n    selectedShift() {\n        const selected = this.multiSelectedShiftFC.value;\n\n        if (selected.includes(-1)) {\n            selected.shift();\n            this.multiSelectedShiftFC.patchValue(selected);\n        } else if (this.multiSelectedShiftFC.value.length == this.totalShiftCount) {\n            this.allShiftID.splice(0, 0, -1);\n            this.multiSelectedShiftFC.patchValue(this.allShiftID);\n        } else {\n            const filteredSelected = selected.filter(s => s != -1);\n            this.multiSelectedShiftFC.patchValue(filteredSelected);\n        }\n        this.emitFilter.emit();\n    }\n\n}\n","<div class=\"row\">\n    <mat-form-field class=\"mat-field-width-100\" [appearance]=\"MaterialFormFieldAppearance.FORM_FIELD_APPEARANCE\">\n        <mat-label>Select shift</mat-label>\n        <ng-container *ngIf=\"shiftM && shiftM.length > 0 && shiftM[0]['id']; else noDataOption\">\n            <mat-select [formControl]=\"multiSelectedShiftFC\" multiple required>\n                <mat-option>\n                    <ngx-mat-select-search [formControl]=\"shiftSearchUtil.filterFC\" placeholderLabel=\"Search by name\"\n                        noEntriesFoundLabel=\"No matching name found.\">\n                    </ngx-mat-select-search>\n                </mat-option>\n                <mat-option [value]=\"-1\" (click)=\"selectAllShifts()\">\n                    Select all\n                </mat-option>\n                <mat-option *ngFor=\"let shift of shiftSearchUtil.filteredEntities | async\" [value]=\"shift.id\"\n                    (click)=\"selectedShift()\">\n                    {{ shift.name }}\n                </mat-option>\n            </mat-select>\n        </ng-container>\n        <ng-template #noDataOption>\n            <mat-select [formControl]=\"multiSelectedShiftFC\">\n                <mat-option disabled>\n                    {{ COMMON_CONSTANT.NO_DATA_FOUND }}\n                </mat-option>\n            </mat-select>\n        </ng-template>\n        <mat-error *ngIf=\"multiSelectedShiftFC.hasError('required')\">\n            Select shift\n        </mat-error>\n    </mat-form-field>\n</div>","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\n\nimport { ShiftComponent } from './shift.component';\n\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\n\nimport { MatInputModule } from '@angular/material/input';\nimport { MatSelectModule } from '@angular/material/select';\nimport { MatFormFieldModule } from '@angular/material/form-field';\nimport { NgxMatSelectSearchModule } from 'ngx-mat-select-search';\n\n@NgModule({\n    declarations: [\n        ShiftComponent\n    ],\n    imports: [\n        CommonModule,\n        FormsModule,\n        ReactiveFormsModule,\n        MatInputModule,\n        MatSelectModule,\n        MatFormFieldModule,\n        NgxMatSelectSearchModule\n    ],\n    exports: [\n        ShiftComponent\n    ]\n})\n\nexport class ShiftModule { }\n","import { Component, OnInit } from '@angular/core';\n\nimport { AggregateDataRequest } from '../../../model/aggregate-data.model';\n\nimport { AggregateDataService } from '../../../service/aggregate-data.service';\n\nimport { StorageService } from '@library/storage-service';\nimport { COMMON_CONSTANT, FREQUENCY_CONSTANT, MaterialFormFieldAppearance, TSCCommonService } from '@library/tsc-common';\nimport { DateTypeEnum, FrequencyEnum } from '@library/date';\nimport { ApplicationKeyID } from '@library/application-service';\n\n@Component({\n    selector: 'lib-balance',\n    templateUrl: './balance.component.html',\n    styles: [\n    ]\n})\nexport class BalanceComponent implements OnInit {\n\n    commonConstant = COMMON_CONSTANT;\n    frequencyConstant = FREQUENCY_CONSTANT;\n    frequencyEnum = FrequencyEnum;\n\n    formFieldAppearance: MaterialFormFieldAppearance;\n    dateType: any;\n    orgID: any;\n    applicationKeyID: any;\n    timezone: any;\n    label: string;\n    paramMetric: string;\n    frequency: any[] = [];\n    defaultFrequency: string;\n    startDate: any;\n    endDate: any;\n    selectedFrequency: any;\n    interval: any;\n    showLoader: boolean = true;\n\n    constructor(\n        private storageService: StorageService,\n        private aggregateDataService: AggregateDataService,\n        public tscCommonService: TSCCommonService\n    ) { }\n\n    ngOnInit(): void {\n        this.orgID = this.storageService.getStorage('currentOrgID');\n        this.applicationKeyID = this.storageService.getStorage('applicationKeyID');\n        this.timezone = this.storageService.getStorage('timezone');\n\n        if (this.applicationKeyID == ApplicationKeyID.ENERGY_KEY_ID) {\n            this.label = \"Energy\";\n            this.paramMetric = \"engEnergyUsed\";\n        } else if (this.applicationKeyID == ApplicationKeyID.WATER_KEY_ID) {\n            this.label = \"Water\";\n            this.paramMetric = \"gwFlowTotalizer\";\n        }\n\n        this.formFieldAppearance = MaterialFormFieldAppearance.FORM_FIELD_APPEARANCE_STANDARD;\n        this.frequency = this.frequencyConstant.filter(frequency => frequency.keyID != 'CUSTOM');\n        this.defaultFrequency = this.frequencyEnum.MONTHLY;\n        this.dateType = DateTypeEnum.EXCLUSIVE;\n    }\n\n    dateFilterEmitted(data: any) {\n        this.startDate = data.startDate;\n        this.endDate = data.endDate;\n        let selectedFrequency = data.frequency;\n\n        if (selectedFrequency == this.frequencyEnum.DAILY) {\n            this.interval = \"hour_1\";\n        } else if (selectedFrequency == this.frequencyEnum.MONTHLY) {\n            this.interval = \"day_1\";\n        } else if (selectedFrequency == this.frequencyEnum.YEARLY) {\n            this.interval = \"month_1\";\n        }\n\n    }\n\n}\n","<div class=\"card main-card cardOverwrite h100\">\n    <div class=\"headerContainer\">\n        <div class=\"headerLeftContainer\">\n            <div class=\"pageTitle\"> {{ label }} Balance</div>\n        </div>\n    </div>\n</div>","import { NgModule } from '@angular/core';\nimport { RouterModule, Routes } from '@angular/router';\n\nimport { BalanceComponent } from './balance.component';\n\nconst routes: Routes = [\n    {\n        path: '',\n        component: BalanceComponent\n    }\n];\n\n@NgModule({\n    imports: [RouterModule.forChild(routes)],\n    exports: [RouterModule]\n})\nexport class BalanceRoutingModule { }\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\n\nimport { BalanceRoutingModule } from './balance-routing.module';\nimport { BalanceComponent } from './balance.component';\n\n// tsc-library\nimport { DateFilterTwoModule } from '@library/date';\n// /tsc-library/\n\n@NgModule({\n    declarations: [\n        BalanceComponent\n    ],\n    imports: [\n        CommonModule,\n        BalanceRoutingModule,\n        DateFilterTwoModule,\n    ]\n})\nexport class BalanceModule { }\n","import { Component, OnInit } from '@angular/core';\n\nimport { AggregateDataRequest } from '../../../model/aggregate-data.model';\n\nimport { AggregateDataService } from '../../../service/aggregate-data.service';\n\nimport { StorageService } from '@library/storage-service';\nimport { COMMON_CONSTANT, FREQUENCY_CONSTANT, MaterialFormFieldAppearance, TSCCommonService } from '@library/tsc-common';\nimport { DateTypeEnum, FrequencyEnum } from '@library/date';\nimport { ApplicationKeyID } from '@library/application-service';\n\n@Component({\n    selector: 'app-consumption',\n    templateUrl: './consumption.component.html',\n    styles: [\n    ]\n})\nexport class ConsumptionComponent implements OnInit {\n\n    commonConstant = COMMON_CONSTANT;\n    frequencyConstant = FREQUENCY_CONSTANT;\n    frequencyEnum = FrequencyEnum;\n\n    formFieldAppearance: MaterialFormFieldAppearance;\n    dateType: any;\n    orgID: any;\n    applicationKeyID: any;\n    timezone: any;\n    paramMetric: string;\n    frequency: any[] = [];\n    defaultFrequency: string;\n    startDate: any;\n    endDate: any;\n    selectedFrequency: any;\n    interval: any;\n\n    constructor(\n        private storageService: StorageService,\n        private aggregateDataService: AggregateDataService\n    ) {}\n\n    ngOnInit(): void {\n        this.orgID = this.storageService.getStorage('currentOrgID');\n        this.applicationKeyID = this.storageService.getStorage('applicationKeyID');\n        this.timezone = this.storageService.getStorage('timezone');\n\n        if (this.applicationKeyID == ApplicationKeyID.WATER_KEY_ID) {\n            this.paramMetric = \"gwFlowTotalizer\";\n        }\n\n        this.formFieldAppearance = MaterialFormFieldAppearance.FORM_FIELD_APPEARANCE_STANDARD;\n        this.frequency = this.frequencyConstant.filter(frequency => frequency.keyID != 'CUSTOM');\n        this.defaultFrequency = this.frequencyEnum.MONTHLY;\n        this.dateType = DateTypeEnum.EXCLUSIVE;\n    }\n\n    dateFilterEmitted(data: any) {\n        this.startDate = data.startDate;\n        this.endDate = data.endDate;\n        let selectedFrequency = data.frequency;\n\n        if (selectedFrequency == this.frequencyEnum.DAILY) {\n            this.interval = \"hour_1\";\n        } else if (selectedFrequency == this.frequencyEnum.MONTHLY) {\n            this.interval = \"day_1\";\n        } else if (selectedFrequency == this.frequencyEnum.YEARLY) {\n            this.interval = \"month_1\";\n        }\n\n        this.getConsumptionData();\n\n    }\n\n    async getConsumptionData() {\n        try {\n            const requestData = this.createDataRequest();\n\n            const consumptionRes = await this.aggregateDataService.getAggregateData(this.orgID, requestData);\n        } catch (error) {\n            console.error(`Error in getConsumptionData()`, error);\n        }\n    }\n\n    createDataRequest() {\n\n        const requestData = new AggregateDataRequest();\n\n        requestData.startTime = this.startDate;\n        requestData.endTime = this.endDate;\n        requestData.interval = this.interval;\n        requestData.params = [\n            {\n                name: this.paramMetric,\n                dsAgg: \"sum\",\n                agg: \"sum\",\n                source_or_load: \"source\",\n                sourceLoadType: \"all\"\n            }\n        ];\n        requestData.nullifyParams();\n        requestData.groupAll = true;\n\n        return requestData;\n    }\n\n}\n","<div class=\"card main-card cardOverwrite h100\">\n    <div class=\"headerContainer\">\n        <div class=\"headerLeftContainer\">\n            <div class=\"pageTitle\">Consumption Dashboard</div>\n        </div>\n    </div>\n\n    <div class=\"card-body pt-0\">\n        <div class=\"row\">\n            <div class=\"col-sm-12\">\n                <lib-date-filter-two [materialFormFieldAppearanceInp]=\"formFieldAppearance\" [frequencyInp]=\"frequency\"\n                    [defaultFrequencyInp]=\"defaultFrequency\" [dateTypeInp]=\"dateType\" [showDefaultDurationInp]=\"true\"\n                    [timezoneInp]=\"timezone\" (dateFilterEmitter)=\"dateFilterEmitted($event)\"></lib-date-filter-two>\n            </div>\n        </div>\n    </div>\n</div>","import { NgModule } from '@angular/core';\nimport { RouterModule, Routes } from '@angular/router';\n\nimport { ConsumptionComponent } from './consumption.component';\n\nconst routes: Routes = [\n    {\n        path: '',\n        component: ConsumptionComponent\n    }\n];\n\n@NgModule({\n    imports: [RouterModule.forChild(routes)],\n    exports: [RouterModule]\n})\nexport class ConsumptionRoutingModule { }\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\n\nimport { ConsumptionRoutingModule } from './consumption-routing.module';\nimport { ConsumptionComponent } from './consumption.component';\n\nimport { MatCardModule } from '@angular/material/card';\n\n// tsc-library\nimport { SkeletonModule } from '@library/tsc-common';\nimport { DateFilterTwoModule } from '@library/date';\n// /tsc-library/\n\n\n@NgModule({\n    declarations: [\n        ConsumptionComponent\n    ],\n    imports: [\n        CommonModule,\n        ConsumptionRoutingModule,\n        DateFilterTwoModule,\n        SkeletonModule,\n        MatCardModule\n    ]\n})\nexport class ConsumptionModule { }\n","import { Component, OnInit } from '@angular/core';\n\nimport { AggregateDataRequest } from '../../../model/aggregate-data.model';\n\nimport { AggregateDataService } from '../../../service/aggregate-data.service';\n\n// tsc-library\nimport { StorageService } from '@library/storage-service';\nimport { COMMON_CONSTANT, FREQUENCY_CONSTANT, MaterialFormFieldAppearance, TSCCommonService } from '@library/tsc-common';\nimport { DateTypeEnum, FrequencyEnum } from '@library/date';\nimport { ApplicationKeyID } from '@library/application-service';\nimport { ChartViewStateEnum, DoughnutChart } from '@library/echart';\n// /tsc-library/\n\n@Component({\n    selector: 'lib-consumption-breakup',\n    templateUrl: './consumption-breakup.component.html',\n    styles: [\n    ]\n})\nexport class ConsumptionBreakupDashboardComponent implements OnInit {\n\n    commonConstant = COMMON_CONSTANT;\n    frequencyConstant = FREQUENCY_CONSTANT;\n    frequencyEnum = FrequencyEnum;\n\n    formFieldAppearance: MaterialFormFieldAppearance;\n    dateType: any;\n    orgID: any;\n    applicationKeyID: any;\n    timezone: any;\n    paramMetric: string;\n    frequency: any[] = [];\n    defaultFrequency: string;\n    startDate: any;\n    endDate: any;\n    selectedFrequency: any;\n    interval: any;\n    orgSourceRes: any;\n    orgConsumedRes: any;\n    showLoader: boolean = true;\n\n    viewStateFlagForSource: string = ChartViewStateEnum.LOADING;\n    viewStateFlagForLoad: string = ChartViewStateEnum.LOADING;\n    chartDataForSource = new DoughnutChart();\n    chartDataForLoad = new DoughnutChart();\n\n    constructor(\n        private storageService: StorageService,\n        private aggregateDataService: AggregateDataService,\n        public tscCommonService: TSCCommonService\n    ) { }\n\n    ngOnInit(): void {\n        this.orgID = this.storageService.getStorage('currentOrgID');\n        this.applicationKeyID = this.storageService.getStorage('applicationKeyID');\n        this.timezone = this.storageService.getStorage('timezone');\n\n        if (this.applicationKeyID == ApplicationKeyID.ENERGY_KEY_ID) {\n            this.paramMetric = \"engEnergyUsed\";\n        } else if (this.applicationKeyID == ApplicationKeyID.WATER_KEY_ID) {\n            this.paramMetric = \"gwFlowTotalizer\";\n        }\n\n        this.formFieldAppearance = MaterialFormFieldAppearance.FORM_FIELD_APPEARANCE_STANDARD;\n        this.frequency = this.frequencyConstant.filter(frequency => frequency.keyID != 'CUSTOM');\n        this.defaultFrequency = this.frequencyEnum.MONTHLY;\n        this.dateType = DateTypeEnum.EXCLUSIVE;\n    }\n\n    dateFilterEmitted(data: any) {\n        this.startDate = data.startDate;\n        this.endDate = data.endDate;\n        let selectedFrequency = data.frequency;\n\n        if (selectedFrequency == this.frequencyEnum.DAILY) {\n            this.interval = \"hour_1\";\n        } else if (selectedFrequency == this.frequencyEnum.MONTHLY) {\n            this.interval = \"day_1\";\n        } else if (selectedFrequency == this.frequencyEnum.YEARLY) {\n            this.interval = \"month_1\";\n        }\n\n        this.getOrgLevelSourceConsum(\"source\").then(app => {\n            this.orgSourceRes = app;\n        })\n\n        this.getOrgLevelSourceConsum(\"load\").then(app => {\n            this.orgConsumedRes = app;\n        })\n\n        this.getEntiyLevelConsumption();\n    }\n\n    async getOrgLevelSourceConsum(category: string) {\n        try {\n            const requestData = this.createDataRequest(category, true);\n\n            const result = await this.aggregateDataService.getAggregateData(this.orgID, requestData);\n            return result;\n\n        } catch (error) {\n            console.error(`Error in getOrgLevelSourceConsum(${category})`, error);\n        } finally {\n            this.showLoader = false;\n        }\n    }\n\n    async getEntiyLevelConsumption() {\n        await this.getEntityLevelSourceConsum(\"source\");\n        await this.getEntityLevelSourceConsum(\"load\");\n    }\n\n    async getEntityLevelSourceConsum(category: string) {\n\n        const name = category == 'source' ? 'Sourced' : category == 'load' ? 'Consumed' : '';\n\n        const chartData = new DoughnutChart();\n\n        chartData.title = {\n            name: name,\n            color: 'rgba(0, 0, 0, 0.87)',\n        };\n\n        if (category == 'source') {\n            this.chartDataForSource = chartData;\n            this.viewStateFlagForSource = ChartViewStateEnum.LOADING;\n        } else {\n            this.chartDataForLoad = chartData;\n            this.viewStateFlagForLoad = ChartViewStateEnum.LOADING;\n        }\n\n        try {\n            const requestData = this.createDataRequest(category, false);\n            const result = await this.aggregateDataService.getAggregateData(this.orgID, requestData);\n\n            if (result?.[0]?.data.length > 0) {\n\n                chartData.data = {\n                    toolbox: {\n                        showDataView: true,\n                        showRestore: true,\n                        showDownloadImage: true,\n                    },\n                    metaData: result[0].data.map(item => ({\n                        name: item.sourceLoadType,\n                        value: item.data[0].value,\n                        unit: {\n                            code: item.unit,\n                        },\n                    })),\n                };\n\n                if (category == 'source') {\n                    this.chartDataForSource = chartData;\n                    this.viewStateFlagForSource = ChartViewStateEnum.HAS_DATA;\n                } else {\n                    this.chartDataForLoad = chartData;\n                    this.viewStateFlagForLoad = ChartViewStateEnum.HAS_DATA;\n                }\n\n            } else {\n                if (category == 'source') {\n                    this.viewStateFlagForSource = ChartViewStateEnum.NO_DATA;\n                } else {\n                    this.viewStateFlagForLoad = ChartViewStateEnum.NO_DATA;\n                }\n            }\n\n        } catch (error) {\n            if (category == 'source') {\n                this.viewStateFlagForSource = ChartViewStateEnum.NO_DATA;\n            } else {\n                this.viewStateFlagForLoad = ChartViewStateEnum.NO_DATA;\n            }\n\n            console.error(`Error in getEntityLevelSourceConsum(${category})`, error);\n        }\n    }\n\n    createDataRequest(category: string, groupAll: boolean) {\n\n        const requestData = new AggregateDataRequest();\n\n        requestData.startTime = this.startDate;\n        requestData.endTime = this.endDate;\n        requestData.interval = this.interval;\n        requestData.params = [\n            {\n                name: this.paramMetric,\n                dsAgg: \"sum\",\n                agg: \"sum\",\n                source_or_load: category,\n                sourceLoadType: \"all\"\n            }\n        ];\n        requestData.nullifyParams();\n        requestData.groupAll = groupAll;\n\n        return requestData;\n    }\n\n}\n","<div class=\"card main-card cardOverwrite h100\">\n    <div class=\"headerContainer\">\n        <div class=\"headerLeftContainer\">\n            <div class=\"pageTitle\">Consumption Breakup</div>\n        </div>\n    </div>\n\n    <div class=\"card-body pt-0\">\n        <div class=\"row\">\n            <div class=\"col-sm-12\">\n                <lib-date-filter-two [materialFormFieldAppearanceInp]=\"formFieldAppearance\" [frequencyInp]=\"frequency\" [defaultFrequencyInp]=\"defaultFrequency\"\n                    [dateTypeInp]=\"dateType\" [showDefaultDurationInp]=\"true\" [timezoneInp]=\"timezone\" (dateFilterEmitter)=\"dateFilterEmitted($event)\"></lib-date-filter-two>\n            </div>\n        </div>\n\n        <div class=\"row mt-3\">\n            <div class=\"col-sm-6\">\n                <mat-card class=\"cardOverwrite cardBackgroundColor\">\n                    <ng-container *ngTemplateOutlet=\"sourceConsumTemplate; context: {\n                        value: orgSourceRes?.[0]?.['data']?.[0]?.['value'],\n                        unit: orgSourceRes?.[0]?.['unit'],\n                        label: 'Sourced',\n                        loader: showLoader\n                        }\"></ng-container>\n                </mat-card>\n            </div>\n            <div class=\"col-sm-6\">\n                <mat-card class=\"cardOverwrite cardBackgroundColor\">\n                    <ng-container *ngTemplateOutlet=\"sourceConsumTemplate; context: {\n                        value: orgConsumedRes?.[0]?.['data']?.[0]?.['value'],\n                        unit: orgConsumedRes?.[0]?.['unit'],\n                        label: 'Consumed',\n                        loader: showLoader\n                        }\"></ng-container>\n                </mat-card>\n            </div>\n        </div>\n\n        <div class=\"row mt-3\">\n            <div class=\"col-sm-6\">\n                <mat-card class=\"cardOverwrite cardBackgroundColor\">\n                    <div class=\"row\">\n                        <div class=\"col-sm-12\">\n                            <lib-doughnut [viewStateInp]=\"viewStateFlagForSource\" [dataInp]=\"chartDataForSource\"></lib-doughnut>\n                        </div>\n                    </div>\n                </mat-card>\n            </div>\n            <div class=\"col-sm-6\">\n                <mat-card class=\"cardOverwrite cardBackgroundColor\">\n                    <div class=\"row\">\n                        <div class=\"col-sm-12\">\n                            <lib-doughnut [viewStateInp]=\"viewStateFlagForLoad\" [dataInp]=\"chartDataForLoad\"></lib-doughnut>\n                        </div>\n                    </div>\n                </mat-card>\n            </div>\n        </div>\n    </div>\n</div>\n\n<ng-template #sourceConsumTemplate let-label=\"label\" let-value=\"value\" let-unit=\"unit\" let-loader=\"loader\">\n    <ng-container *ngIf=\"loader; else dataTemplate\">\n        <lib-skeleton-loader [count]=\"1\" [appearance]=\"''\"\n            [theme]=\"{ 'border-radius': '16px', height: '40px', 'background-color': 'rgb(230 232 235)' }\"></lib-skeleton-loader>\n    </ng-container>\n\n    <ng-template #dataTemplate>\n        <div class=\"row\">\n            <div class=\"col-sm-12\">\n                <span class=\"fs-2 fw-bold text-primary\">{{ value ? tscCommonService.formatLargeNumber(value, 'false', 1)\n                    : commonConstant.HYPHEN\n                    }}</span>\n                <span class=\"text-secondary fw-bold\"> {{ value ? unit : '' }} </span>\n            </div>\n        </div>\n        <div class=\"row\">\n            <div class=\"col-sm-12 fs-4\">\n                {{ label }}\n            </div>\n        </div>\n    </ng-template>\n</ng-template>","import { NgModule } from '@angular/core';\nimport { RouterModule, Routes } from '@angular/router';\n\nimport { ConsumptionBreakupDashboardComponent } from './consumption-breakup.component';\n\nconst routes: Routes = [\n    {\n        path: '',\n        component: ConsumptionBreakupDashboardComponent\n    }\n];\n\n@NgModule({\n    imports: [RouterModule.forChild(routes)],\n    exports: [RouterModule]\n})\nexport class ConsumptionBreakupDashboardRoutingModule { }\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\n\nimport { ConsumptionBreakupDashboardRoutingModule } from './consumption-breakup-routing.module';\nimport { ConsumptionBreakupDashboardComponent } from './consumption-breakup.component';\n\nimport { MatCardModule } from '@angular/material/card';\n\n// tsc-library\nimport { SkeletonModule } from '@library/tsc-common';\nimport { DateFilterTwoModule } from '@library/date';\nimport { DoughnutModule } from '@library/echart';\n// /tsc-library/\n\n\n@NgModule({\n    declarations: [\n        ConsumptionBreakupDashboardComponent\n    ],\n    imports: [\n        CommonModule,\n        ConsumptionBreakupDashboardRoutingModule,\n        DateFilterTwoModule,\n        SkeletonModule,\n        DoughnutModule,\n        MatCardModule\n    ]\n})\nexport class ConsumptionBreakupDashboardModule { }\n","import { Inject, Injectable } from '@angular/core';\nimport { HttpClient } from '@angular/common/http';\n\nimport { Observable } from 'rxjs/internal/Observable';\n\nimport { OrgRecentDataM } from '../model/recent-data.model';\n\n@Injectable({\n    providedIn: 'root'\n})\nexport class RecentDataController {\n\n    constructor(\n        private http: HttpClient,\n        @Inject('environment') private environment: any\n    ) { }\n\n    getRecentDataWithParam(orgID, requestBody) {\n        return this.http.post(`${this.environment.TSC_COMMON_API_URL}organizations/${orgID}/data/recent`, requestBody);\n    }\n\n    getEntityLevelRecentData(orgID, requestBody) {\n        return this.http.post(`${this.environment.TSC_COMMON_API_URL}organizations/${orgID}/entities/data/recent`, requestBody);\n    }\n\n    getOrgRecentData(orgID, requestBody): Observable<OrgRecentDataM[]> {\n        // return this.http.post<OrgRecentDataM[]>(`${this.environment.TSC_COMMON_API_URL}organizations/${orgID}/data/recent`, requestBody);\n        return this.http.get<OrgRecentDataM[]>(`${this.environment.MOCK_SERVER}facility-dashboard`);\n    }\n\n}\n","import { Injectable } from '@angular/core';\n\nimport { RecentDataController } from '../controller/recent-data.controller';\nimport { OrgRecentData, OrgRecentDataM } from '../model/recent-data.model';\n\n@Injectable({\n    providedIn: 'root'\n})\n\nexport class RecentDataService {\n\n    constructor(\n        private recentDataController: RecentDataController\n    ) { }\n\n    async getRecentDataWithParam(orgID, requestBody) {\n        let recentDataWithParam;\n        try {\n            recentDataWithParam = await this.recentDataController.getRecentDataWithParam(orgID, requestBody).toPromise();\n\n            if (recentDataWithParam) {\n                return recentDataWithParam;\n            }\n        } catch (error) {\n            console.error('Error -', error);\n            throw error;\n        }\n    }\n\n    async getEntityLevelRecentData(orgID, requestBody) {\n        let entityLevelRes;\n        try {\n            entityLevelRes = await this.recentDataController.getEntityLevelRecentData(orgID, requestBody).toPromise();\n\n            if (entityLevelRes) {\n                return entityLevelRes;\n            }\n        } catch (error) {\n            console.error('Error -', error);\n        }\n    }\n\n    async getOrgRecentData(orgID, requestBody): Promise<OrgRecentDataM[]> {\n        let orgRes;\n        try {\n            orgRes = await this.recentDataController.getOrgRecentData(orgID, requestBody).toPromise();\n\n            if (orgRes) {\n                return orgRes;\n            } else {\n                return [new OrgRecentData()];\n            }\n        } catch (error) {\n            console.error('Error -', error);\n            throw error;\n        }\n    }\n\n}","import { Injectable } from '@angular/core';\n\nimport { MatDialog } from '@angular/material/dialog';\n\nimport { TrendComponent } from '../component/_shared/dialog/trend/trend.component';\n\n@Injectable({\n    providedIn: 'root'\n})\n\nexport class TrendService {\n\n    constructor(\n        private dialog: MatDialog,\n    ) { }\n\n    openDialog(trendData) {\n        let dialogRef;\n        dialogRef = this.dialog.open(TrendComponent, {\n            data: {\n                trendData: trendData\n            },\n            minWidth: '620px',\n            maxWidth: '620px'\n        });\n    }\n}\n","import { Component, ElementRef, OnInit, ViewChild } from '@angular/core';\nimport { FormControl, Validators } from '@angular/forms';\n\nimport { EntityTree, EntityTreeM, EntityType, EntityTypeM } from '../../../model/entity.model';\nimport { RecentDataRequestWithoutParam } from '../../../model/recent-data.model';\n\nimport { EntityService } from '../../../service/entity.service';\nimport { RecentDataService } from '../../../service/recent-data.service';\nimport { TrendService } from '../../../service/trend.service';\n\n// tsc-library\nimport { COMMON_CONSTANT, MATERIAL_CONSTANT, MaterialFormFieldAppearance, SearchBarTwoComponent } from '@library/tsc-common';\nimport { StorageService } from '@library/storage-service';\nimport { DateService } from '@library/date';\n// /tsc-library/\n\n@Component({\n    selector: 'lib-entity',\n    templateUrl: './entity.component.html',\n    styleUrls: ['./entity.component.scss']\n})\nexport class EntityDashboardComponent implements OnInit {\n\n    commonConstant = COMMON_CONSTANT;\n    materialConstant = MATERIAL_CONSTANT;\n\n    materialFormFieldAppearance = MaterialFormFieldAppearance;\n\n    orgID: any;\n    layoutID: any;\n    timezone: any;\n    facilityName: string;\n    isAccordionOpen: boolean = true;\n\n    //loader variable declaration\n    entityTypeLoader: boolean = true;\n    entityDeviceLoader: boolean = false;\n    realTimeDeviceDataLoader: boolean = false;\n\n    entityTypeM = [new EntityType()];\n    entityTypeDropdownItem = [new EntityType()];\n    entityDeviceM = new EntityTree();\n    filteredEntityDeviceM: any[] = [];\n    recentEntitiesData: any;\n\n    entityTypeFC: FormControl = new FormControl('', Validators.required);\n    entityFC: FormControl = new FormControl('', Validators.required);\n\n    @ViewChild('searchBar') searchBar: SearchBarTwoComponent;\n    @ViewChild('scrollContainer') scrollContainer: ElementRef;\n\n    constructor(\n        private storageService: StorageService,\n        private entityService: EntityService,\n        private recentDataService: RecentDataService,\n        public dateService: DateService,\n        private trendService: TrendService\n    ) { }\n\n    ngOnInit(): void {\n        this.orgID = this.storageService.getStorage('currentOrgID');\n        this.layoutID = this.storageService.getStorage('layoutID');\n        this.timezone = this.storageService.getStorage('timezone');\n\n        this.getEntityTypeByLayoutID();\n    }\n\n    async getEntityTypeByLayoutID() {\n        try {\n            this.entityTypeM = <EntityTypeM[]>await this.entityService.getEntityTypeByLayoutID(this.orgID);\n\n            if (this.entityTypeM && this.entityTypeM.length > 0) {\n                const defaultEntityType = this.entityTypeM[0].type;\n\n                if (defaultEntityType) {\n                    this.entityTypeFC.patchValue(defaultEntityType);\n                    this.getEntitiesWithDevices(this.entityTypeFC.value);\n                }\n\n                if (this.entityTypeM.length > 6) {\n                    this.entityTypeDropdownItem = this.entityTypeM.slice(6);\n                }\n            }\n        } catch (error) {\n            console.error(\"Error in getEntityTypeByLayoutID()\", error);\n        } finally {\n            this.entityTypeLoader = false;\n        }\n    }\n\n    entityTypeChange() {\n        const entityType = this.entityTypeFC.value;\n        this.getEntitiesWithDevices(entityType);\n    }\n\n    moveToToggleGroup(selectedEntityType: string) {\n        const dropdownIndex = this.entityTypeDropdownItem.findIndex(entityType => entityType.type == selectedEntityType);\n        if (dropdownIndex != -1) {\n            this.entityTypeDropdownItem.splice(dropdownIndex, 1);\n        }\n\n        if (this.entityTypeM.length > 0) {\n            this.entityTypeDropdownItem.push(this.entityTypeM.shift());\n        }\n\n        this.entityTypeM.unshift({ type: selectedEntityType });\n    }\n\n    dropdownSelectionChange(selectedEntityType: string) {\n        this.moveToToggleGroup(selectedEntityType);\n        this.entityTypeFC.patchValue(selectedEntityType);\n\n        this.getEntitiesWithDevices(selectedEntityType);\n    }\n\n    async getEntitiesWithDevices(entityType) {\n        try {\n            this.entityDeviceLoader = true;\n\n            let requestBody = {\n                'entityType': [entityType]\n            };\n\n            this.entityDeviceM = <EntityTreeM>await this.entityService.getEntitiesWithDevices(this.orgID, this.layoutID, requestBody);\n\n            if (this.entityDeviceM.children) {\n                this.filteredEntityDeviceM = [this.entityDeviceM];\n            }\n        } catch (error) {\n            console.error(\"Error in getEntitiesWithDevices()\", error);\n        } finally {\n            this.entityDeviceLoader = false;\n        }\n    }\n\n    searchFn(value: string) {\n        const searchTerm = value.trim().toLowerCase();\n\n        if (searchTerm.length > 0) {\n            this.filteredEntityDeviceM = this.searchEntities([this.entityDeviceM], searchTerm);\n        } else {\n            this.filteredEntityDeviceM = [this.entityDeviceM];\n        }\n    }\n\n    searchEntities(entities: any[], searchTerm: string): any[] {\n        let results: any[] = [];\n\n        entities.forEach(entity => {\n            if (entity.name.toLowerCase().includes(searchTerm)) {\n                results.push(entity);\n            }\n\n            if (entity.children && entity.children.length > 0) {\n                const matchingChildren = this.searchEntities(entity.children, searchTerm);\n                results = results.concat(matchingChildren);\n            }\n        });\n\n        return results;\n    }\n\n    openAccordion() {\n        this.isAccordionOpen = true;\n    }\n\n    closeAccordion() {\n        this.isAccordionOpen = false;\n    }\n\n    isDeviceAttached(entity: any): boolean {\n        return (entity.type == 'FACILITY' || entity.type == 'ENTITY') && entity.children && entity.children.some(child => child.type == 'DEVICE');\n    }\n\n    onEntityDeviceSelection() {\n        const selectedValue = this.entityFC.value;\n        this.realTimeDeviceDataLoader = false;\n        // this.getRecentEntitiesData(selectedValue);\n    }\n\n    getTooltipLabel(entity: any): string {\n        if (entity.type == 'FACILITY') {\n            return 'Facility';\n        } else if (entity.type == 'ENTITY') {\n            return 'Entity';\n        } else if (entity.type == 'DEVICE') {\n            return 'Device';\n        }\n    }\n\n    async getRecentEntitiesData(selectedValue) {\n        try {\n            let requestData = new RecentDataRequestWithoutParam();\n\n            requestData.entityID = [selectedValue];\n            requestData.timezone = this.timezone;\n            requestData.backscan = 1;\n\n            this.recentEntitiesData = await this.recentDataService.getEntityLevelRecentData(this.orgID, requestData);\n        } catch (error) {\n            console.error(\"Error in getRecentEntitiesData()\", error);\n        } finally {\n            this.realTimeDeviceDataLoader = false;\n        }\n    }\n\n    showTrend(paramMetric, entityID, deviceID) {\n        let requestBody = {\n            paramMetric: paramMetric,\n            entityID: entityID,\n            deviceID: deviceID\n        };\n        this.trendService.openDialog(requestBody);\n    }\n\n}\n","<div class=\"card main-card cardOverwrite h100\">\n    <div class=\"headerContainer\">\n        <div class=\"headerLeftContainer\">\n            <div class=\"pageTitle\">Entity Dashboard</div>\n        </div>\n    </div>\n\n    <div class=\"card-body\">\n        <div class=\"row\">\n            <ng-container *ngIf=\"entityTypeLoader; else showEntityType\">\n                <ng-container *ngTemplateOutlet=\"showLoader; context: { count: 1 }\"></ng-container>\n            </ng-container>\n\n            <ng-template #showEntityType>\n                <ng-container *ngIf=\"entityTypeM && entityTypeM.length <= 6; else toggleAndDropdownView\">\n                    <div class=\"col-sm-6\">\n                        <div class=\" labelColor\">Select entity type *</div>\n                        <ng-container *ngIf=\"entityTypeM && entityTypeM.length > 0; else noEntityType\">\n                            <mat-button-toggle-group class=\"matBtnFilter\" [formControl]=\"entityTypeFC\"\n                                (change)=\"entityTypeChange()\">\n                                <mat-button-toggle *ngFor=\"let entityType of entityTypeM\" value=\"{{ entityType.type }}\">\n                                    {{ entityType.type }}\n                                </mat-button-toggle>\n                            </mat-button-toggle-group>\n                        </ng-container>\n                        <ng-template #noEntityType>\n                            <mat-button-toggle-group class=\"matBtnFilter\" disabled>\n                                <mat-button-toggle>\n                                    <span class=\"textMatError\">\n                                        {{ commonConstant.NO_DATA_FOUND }}\n                                    </span>\n                                </mat-button-toggle>\n                            </mat-button-toggle-group>\n                        </ng-template>\n                    </div>\n                </ng-container>\n\n                <ng-template #toggleAndDropdownView>\n                    <div class=\"col-sm-6\">\n                        <div class=\" labelColor\">Select entity type *</div>\n                        <mat-button-toggle-group class=\"matBtnFilter\" [formControl]=\"entityTypeFC\"\n                            (change)=\"entityTypeChange()\">\n                            <mat-button-toggle *ngFor=\"let entityType of entityTypeM.slice(0, 6)\" value=\"{{ entityType.type }}\">\n                                {{ entityType.type }}\n                            </mat-button-toggle>\n                        </mat-button-toggle-group>\n                    </div>\n                    <div class=\"col-sm-6\">\n                        <mat-form-field class=\"mat-field-width-100\"\n                            [appearance]=\"materialFormFieldAppearance.FORM_FIELD_APPEARANCE\">\n                            <mat-label>Select entity type</mat-label>\n                            <mat-select [formControl]=\"entityTypeFC\" (selectionChange)=\"dropdownSelectionChange($event.value)\">\n                                <mat-option *ngFor=\"let entityType of entityTypeDropdownItem\" [value]=\"entityType.type\">\n                                    {{ entityType.type }}\n                                </mat-option>\n                            </mat-select>\n                        </mat-form-field>\n                    </div>\n                </ng-template>\n            </ng-template>\n        </div>\n\n        <div class=\"row mt-4\">\n            <div class=\"col-sm-6\">\n                <mat-accordion>\n                    <mat-expansion-panel class=\"matAccordion\" [expanded]=\"isAccordionOpen\" (opened)=\"openAccordion()\"\n                        (closed)=\"closeAccordion()\">\n                        <mat-expansion-panel-header>\n                            <mat-panel-title>\n                                <div class=\"card-title sectionTitle\">\n                                    Select entity *\n                                </div>\n                            </mat-panel-title>\n                        </mat-expansion-panel-header>\n\n                        <div class=\"row\">\n                            <div class=\"col-sm-12\">\n                                <lib-search-bar-two class=\"float-end me-3\" #searchBar searchBy=\"name\"\n                                    (emitSearch)=\"searchFn($event)\">\n                                </lib-search-bar-two>\n                            </div>\n                        </div>\n                        \n                        <perfect-scrollbar class=\"scrollHeight\" [config]=\"{useBothWheelAxes: true, suppressScrollX: false, suppressScrollY: false}\" #scrollContainer>\n                            <ng-container *ngIf=\"entityDeviceLoader; else entityDeviceView\">\n                                <div class=\"mt-2\">\n                                    <ng-container *ngTemplateOutlet=\"showLoader; context: { count: 3 }\"></ng-container>\n                                </div>\n                            </ng-container>\n                            <ng-template #entityDeviceView>\n                                <mat-radio-group [formControl]=\"entityFC\" (change)=\"onEntityDeviceSelection()\">\n                                    <div *ngFor=\"let entity of filteredEntityDeviceM\">\n                                        <ng-container *ngTemplateOutlet=\"entityTemplate; context:{ $implicit: entity }\"></ng-container>\n                                    </div>\n\n                                    <ng-template #entityTemplate let-entity>\n                                        <div class=\"ms-3 mt-2\">\n                                            <ng-container *ngIf=\"isDeviceAttached(entity); else entityView\">\n                                                <mat-radio-button class=\"radioBtnLabel me-2\" [value]=\"entity.id\">\n                                                    <span class=\"badge rounded-pill\" [ngClass]=\"{'facility': entity.type == 'FACILITY', 'entity': entity.type == 'ENTITY', 'device': entity.type == 'DEVICE'}\"\n                                                        [matTooltip]=\"getTooltipLabel(entity)\" matTooltipPosition=\"above\">\n                                                        <div class=\"d-flex align-items-center\">\n                                                            <span class=\"material-symbols-outlined me-2\" *ngIf=\"entity.type == 'FACILITY'\">factory</span>\n                                                            <span class=\"material-symbols-outlined me-2\" *ngIf=\"entity.type == 'ENTITY'\">domain</span>\n                                                            <span class=\"material-symbols-outlined me-2\" *ngIf=\"entity.type == 'DEVICE'\">devices</span>\n                                                            {{ entity.name }}\n                                                        </div>\n                                                    </span>\n                                                </mat-radio-button>\n                                            </ng-container>\n\n                                            <ng-template #entityView>\n                                                <span class=\"badge rounded-pill\" [ngClass]=\"{'facility': entity.type == 'FACILITY', 'entity': entity.type == 'ENTITY', 'device': entity.type == 'DEVICE'}\"\n                                                    [matTooltip]=\"getTooltipLabel(entity)\" matTooltipPosition=\"above\">\n                                                    <div class=\"d-flex align-items-center\">\n                                                        <span class=\"material-symbols-outlined me-2\" *ngIf=\"entity.type == 'FACILITY'\">factory</span>\n                                                        <span class=\"material-symbols-outlined me-2\" *ngIf=\"entity.type == 'ENTITY'\">domain</span>\n                                                        <span class=\"material-symbols-outlined me-2\" *ngIf=\"entity.type == 'DEVICE'\">devices</span>\n                                                        {{ entity.name }}\n                                                    </div>\n                                                </span>\n                                            </ng-template>\n                                        </div>\n\n                                        <div *ngIf=\"entity.children && entity.children.length > 0\" class=\"ms-5 mt-2\">\n                                            <ng-container *ngFor=\"let child of entity.children\">\n                                                <ng-container\n                                                    *ngTemplateOutlet=\"entityTemplate; context:{ $implicit: child }\"></ng-container>\n                                            </ng-container>\n                                        </div>\n                                    </ng-template>\n                                </mat-radio-group>\n                                \n                            </ng-template>\n                        </perfect-scrollbar>\n                    </mat-expansion-panel>\n                </mat-accordion>\n            </div>\n\n            <div class=\"col-sm-6\">\n                <mat-card class=\"cardOverwrite cardBackgroundColor cardHeight2\">\n                    <div class=\"row\">\n                        <div class=\"col-sm-12\">\n                            <div class=\"d-flex align-items-center\">\n                                <span class=\"material-symbols-outlined me-3\">\n                                    devices\n                                </span>\n                                <span class=\"card-title sectionTitle mt-1\">\n                                    Real time data\n                                </span>\n                            </div>\n                        </div>\n                    </div>\n                    <hr>\n                    <perfect-scrollbar class=\"scrollHeight\">\n                        <ng-container *ngIf=\"realTimeDeviceDataLoader; else realTimeDeviceDataView\">\n                            <ng-container *ngTemplateOutlet=\"showLoader; context: { count: 3 }\"></ng-container>\n                        </ng-container>\n\n                        <ng-template #realTimeDeviceDataView>\n                            <ng-container *ngFor=\"let realTimeData of recentEntitiesData;\">\n                                <ng-container *ngTemplateOutlet=\"parameterSummary; context: {\n                                    device: realTimeData?.deviceData,\n                                    entityID: realTimeData?.entityID\n                                }\"></ng-container>\n                            </ng-container>\n                        </ng-template>\n                    </perfect-scrollbar>\n                </mat-card>\n            </div>\n        </div>\n    </div>\n</div>\n\n<ng-template #parameterSummary let-device=\"device\" let-entityID=\"entityID\">\n    <ng-container *ngFor=\"let deviceData of device;\">\n        <div class=\"row\">\n            <div class=\"col-sm-12\">\n                <div class=\"d-flex align-items-center fw-bold\">\n                    <span class=\"material-symbols-outlined me-1\"\n                        [ngClass]=\"{'text-success': deviceData.status == 'LIVE', 'text-secondary': deviceData.status == 'OFFLINE'}\">\n                        devices\n                    </span>\n                    {{ deviceData.name ? deviceData.name : commonConstant.HYPHEN }}\n                </div>\n            </div>\n        </div>\n        <div class=\"row mt-2\" *ngFor=\"let parameterData of deviceData.paramData;\">\n            <div class=\"col-sm-4 text-start text-secondary\">\n                {{ parameterData.label ? parameterData.label : commonConstant.HYPHEN }}\n            </div>\n            <div class=\"col-sm-4 text-center\">\n                <a class=\"text-primary cursorPointer fw-bold\" matTooltip=\"Trend\" matTooltipPosition=\"above\"\n                    (click)=\"showTrend(parameterData.name, entityID, deviceData.id)\">\n                    <span>{{ parameterData.data.value ? (parameterData.data.value | number: '1.2-2') : commonConstant.HYPHEN\n                        }}</span>\n                    <span> {{ parameterData.data.value ? parameterData.unit : '' }} </span>\n                </a>\n            </div>\n            <div class=\"col-sm-4 text-start text-secondary\">\n                {{ dateService.getRelativeTimeAgoLabel(parameterData.data.date) }}\n            </div>\n        </div>\n        <hr>\n    </ng-container>\n</ng-template>\n\n<ng-template #showLoader let-count=\"count\">\n    <lib-skeleton-loader [count]=\"count\" [appearance]=\"''\"\n        [theme]=\"{ 'border-radius': '16px', height: '40px', 'background-color': 'rgb(230 232 235)' }\"></lib-skeleton-loader>\n</ng-template>","import { NgModule } from '@angular/core';\nimport { RouterModule, Routes } from '@angular/router';\n\nimport { EntityDashboardComponent } from './entity.component';\n\nconst routes: Routes = [\n    {\n        path: '',\n        component: EntityDashboardComponent\n    }\n];\n\n@NgModule({\n    imports: [RouterModule.forChild(routes)],\n    exports: [RouterModule]\n})\nexport class EntityDashboardRoutingModule { }\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\n\nimport { EntityDashboardRoutingModule } from './entity-routing.module';\nimport { EntityDashboardComponent } from './entity.component';\n\nimport { TrendModule } from '../../_shared/dialog/trend/trend.module';\n\nimport { TrendService } from '../../../service/trend.service';\n\nimport { ReactiveFormsModule } from '@angular/forms';\n\nimport { MatCardModule } from '@angular/material/card';\nimport { MatFormFieldModule } from '@angular/material/form-field';\nimport { MatInputModule } from '@angular/material/input';\nimport { MatSelectModule } from '@angular/material/select';\nimport { MatButtonToggleModule } from '@angular/material/button-toggle';\nimport { MatExpansionModule } from '@angular/material/expansion';\nimport { MatOptionModule } from '@angular/material/core';\nimport { MatRadioModule } from '@angular/material/radio';\nimport { MatTooltipModule } from '@angular/material/tooltip';\n\nimport { PerfectScrollbarModule } from 'ngx-perfect-scrollbar';\n\n// tsc-library\nimport { SearchBarTwoModule, SkeletonModule } from '@library/tsc-common';\n// /tsc-library/\n\n@NgModule({\n    declarations: [\n        EntityDashboardComponent\n    ],\n    imports: [\n        CommonModule,\n        EntityDashboardRoutingModule,\n        TrendModule,\n        SkeletonModule,\n        SearchBarTwoModule,\n        ReactiveFormsModule,\n        MatCardModule,\n        MatFormFieldModule,\n        MatInputModule,\n        MatSelectModule,\n        MatButtonToggleModule,\n        MatExpansionModule,\n        MatOptionModule,\n        MatRadioModule,\n        MatTooltipModule,\n        PerfectScrollbarModule\n    ],\n    providers: [TrendService]\n})\nexport class EntityDashboardModule { }\n","export enum ReportErrorEnum {\n    INVALID_DATE_LABEL = 'Invalid dates!',\n    INVALID_DATE_MESSAGE = 'Select distinct dates to view the desired report.',\n    TIME_EXCEEDED_LABEL = 'Time exceeded!',\n    TIME_EXCEEDED_MESSAGE = 'You cannot view or download report for more than 24 hours.',\n    DATA_NOT_FOUND_LABEL = 'No data found!',\n    DATA_NOT_FOUND_MESSAGE = 'No data was recorded for the above specified filters. Please keep changing the filters and try again.',\n    INVALID_ERROR_LABEL = 'Please try again later!',\n    INVALID_ERROR_MESSAGE = 'We are not able to fetch the data for the specified filters at the moment. Please keep changing the filters and try again.'\n}\n\nexport enum DashboardErrorEnum {\n    DATA_NOT_FOUND_LABEL = 'No data found!',\n    DATA_NOT_FOUND_MESSAGE = 'No data was recorded at the moment. Please try again after sometime.',\n    INVALID_ERROR_LABEL = 'Please try again later!',\n    INVALID_ERROR_MESSAGE = 'We are not able to fetch the requested data at the moment. Please try again after sometime.'\n}","import { Injectable } from \"@angular/core\";\n\nimport { AlertM } from \"../model/alert.model\";\n\n@Injectable({\n    providedIn: 'root'\n})\n\nexport class AlertService {\n\n    setAlertProperties(alertObject: AlertM, label: string, content: string, type: string, icon: string): AlertM {\n        alertObject.showAlert = true;\n        alertObject.alertLabel = label;\n        alertObject.alertContent = content;\n        alertObject.messageAlertType = type;\n        alertObject.messageAlertIcon = icon;\n\n        return alertObject;\n    }\n\n    resetAlertProperties(alertObject: AlertM): AlertM {\n        alertObject.showAlert = false;\n        alertObject.alertLabel = '';\n        alertObject.alertContent = '';\n        alertObject.messageAlertType = '';\n        alertObject.messageAlertIcon = '';\n\n        return alertObject;\n    }\n}","import { Component, OnInit } from '@angular/core';\nimport { Router } from '@angular/router';\n\nimport { OrgRecentData, OrgRecentDataM } from '../../../model/recent-data.model';\nimport { Alert, AlertM } from '../../../model/alert.model';\n\nimport { DashboardErrorEnum } from '../../../enum/error.enum';\n\nimport { RecentDataService } from '../../../service/recent-data.service';\nimport { TrendService } from '../../../service/trend.service';\nimport { AlertService } from '../../../service/alert.service';\n\n// tsc-library\nimport { DateService } from '@library/date';\nimport { StorageService } from '@library/storage-service';\nimport { COMMON_CONSTANT, MessageAlertIconEnum, MessageAlertTypeEnum } from '@library/tsc-common';\n// /tsc-library/\n\n@Component({\n    selector: 'app-facility',\n    templateUrl: './facility.component.html',\n    styleUrls: ['./facility.component.scss']\n})\n\nexport class FacilityComponent implements OnInit {\n\n    commonConstant = COMMON_CONSTANT;\n\n    orgID: any;\n    timezone: any;\n    apiTimer: any;\n    showLoader: boolean = false;\n\n    orgRecentDataM = [new OrgRecentData()];\n    alertObj: AlertM = new Alert();\n\n    constructor(\n        private router: Router,\n        private storageService: StorageService,\n        public dateService: DateService,\n        private trendService: TrendService,\n        private recentDataService: RecentDataService,\n        private alertService: AlertService,\n    ) { }\n\n    ngOnInit(): void {\n        this.orgID = this.storageService.getStorage('currentOrgID');\n        this.timezone = this.storageService.getStorage('timezone');\n\n        this.getOrgRecentData();\n    }\n\n    async getOrgRecentData() {\n\n        this.alertService.resetAlertProperties(this.alertObj);\n\n        try {\n            let requestBody = {\n                'timezone': this.timezone\n            };\n            this.orgRecentDataM = <OrgRecentDataM[]>await this.recentDataService.getOrgRecentData(this.orgID, requestBody);\n\n            if (this.orgRecentDataM && this.orgRecentDataM.length == 1) {\n                this.alertService.setAlertProperties(this.alertObj, DashboardErrorEnum.DATA_NOT_FOUND_LABEL, DashboardErrorEnum.DATA_NOT_FOUND_MESSAGE, MessageAlertTypeEnum.WARNING, MessageAlertIconEnum.WARNING_ICON);\n            }\n\n        } catch (error) {\n\n            console.error(`Error in getOrgRecentData()`, error);\n            this.alertService.setAlertProperties(this.alertObj, DashboardErrorEnum.INVALID_ERROR_LABEL, DashboardErrorEnum.INVALID_ERROR_MESSAGE, MessageAlertTypeEnum.DANGER, MessageAlertIconEnum.DANGER_ICON);\n\n        } finally {\n            this.apiTimer = setTimeout(() => {\n                this.getOrgRecentData();\n            }, 300000);\n            this.showLoader = false;\n        }\n    }\n\n    showEntityConsumption(id, name) {\n        this.router.navigate(['dashboard/consumption'], { state: { entityID: id, entityName: name } });\n    }\n\n    showTrend(paramMetric, deviceID, entityID) {\n        let requestBody = {\n            paramMetric: paramMetric,\n            deviceID: deviceID,\n            entityID: entityID\n        };\n        this.trendService.openDialog(requestBody);\n    }\n\n}","<div class=\"card main-card cardOverwrite h100\">\n    <div class=\"headerContainer\">\n        <div class=\"headerLeftContainer\">\n            <div class=\"pageTitle\">Facility Dashboard</div>\n        </div>\n    </div>\n\n    <div class=\"card-body pt-0\">\n\n        <div class=\"row\">\n            <lib-skeleton-loader *ngIf=\"showLoader\" [count]=\"3\" [appearance]=\"''\"\n                [theme]=\"{ 'border-radius': '16px', height: '40px', 'background-color': 'rgb(230 232 235)' }\"></lib-skeleton-loader>\n        </div>\n\n        <div class=\"row\">\n            <div class=\"col-sm-12\">\n                <lib-message-alert *ngIf=\"alertObj.showAlert\" [labelInp]=\"alertObj.alertLabel\"\n                    [contentInp]=\"alertObj.alertContent\" [messageAlertTypeInp]=\"alertObj.messageAlertType\"\n                    [messageAlertIconInp]=\"alertObj.messageAlertIcon\">\n                </lib-message-alert>\n            </div>\n        </div>\n\n        <div class=\"row\" *ngIf=\"orgRecentDataM.length > 1\">\n            <div class=\"col-sm-12 mb-3\" *ngFor=\"let recentRes of orgRecentDataM\">\n                <mat-card class=\"cardOverwrite cardBackgroundColor\">\n                    <div class=\"row mb-2\">\n                        <div class=\"col-sm-6\">\n                            <span class=\"entity text-primary\">\n                                <div class=\"d-flex align-items-center\">\n                                    <span class=\"material-symbols-outlined me-2\">domain</span>\n                                    {{ recentRes.entityName }}\n                                </div>\n                            </span>\n                        </div>\n                        <div class=\"col-sm-6 text-end\">\n                            <a class=\"text-primary cursorPointer\" matTooltip=\"Entity consumption\"\n                                matTooltipPosition=\"below\"\n                                (click)=\"showEntityConsumption(recentRes.entityID, recentRes.entityName)\">\n                                <span class=\"material-symbols-outlined fs-4 fw-bold\">monitoring</span>\n                            </a>\n                        </div>\n                    </div>\n\n                    <div class=\"row\">\n                        <div class=\"col-sm-12 ms-3\" *ngFor=\"let deviceRes of recentRes.deviceData\">\n                            <div class=\"d-flex align-items-center\">\n                                <span class=\"material-symbols-outlined text-success me-2\">devices</span>\n                                {{ deviceRes.name }}\n                            </div>\n\n                            <div class=\"row mt-2\">\n                                <div class=\"col-sm-4 mb-3\" *ngFor=\"let paramRes of deviceRes.paramData\">\n                                    <mat-card class=\"cardOverwrite\">\n                                        <ng-container *ngTemplateOutlet=\"parameterData; context: {\n                                                duration: dateService.getRelativeTimeAgoLabel(paramRes?.data?.date),\n                                                value: paramRes?.data?.value,\n                                                unit: paramRes?.unit,\n                                                label: paramRes?.label,\n                                                entityID: recentRes?.entityID,\n                                                deviceID: deviceRes?.id,\n                                                paramName: paramRes?.name\n                                            }\"></ng-container>\n                                    </mat-card>\n                                </div>\n                            </div>\n                        </div>\n                    </div>\n                </mat-card>\n            </div>\n        </div>\n    </div>\n</div>\n\n<ng-template #parameterData let-duration=\"duration\" let-label=\"label\" let-value=\"value\" let-unit=\"unit\"\n    let-entityID=\"entityID\" let-deviceID=\"deviceID\" let-paramName=\"paramName\">\n    <div class=\"row\">\n        <div class=\"col-sm-6 textDurationWithAgoTime\">\n            {{ duration }}\n        </div>\n        <div class=\"col-sm-6 text-end\">\n            <a class=\"text-primary cursorPointer\" matTooltip=\"Trend\" matTooltipPosition=\"below\"\n                (click)=\"showTrend(paramName, deviceID, entityID)\">\n                <span class=\"material-symbols-outlined fs-5 fw-bold\">trending_up</span>\n            </a>\n        </div>\n    </div>\n    <div class=\"row mt-3\">\n        <div class=\"col-sm-12 text-center\">\n            <span class=\"fs-1 fw-bold text-primary\">{{ value ? (value | number: '1.2-2') : commonConstant.HYPHEN\n                }}</span>\n            <span class=\"text-secondary fw-bold\"> {{ value ? unit : '' }} </span>\n        </div>\n    </div>\n    <div class=\"row mt-4 mb-4\">\n        <div class=\"col-sm-12 fs-5 text-center\">\n            {{ label }}\n        </div>\n    </div>\n</ng-template>","import { NgModule } from '@angular/core';\nimport { RouterModule, Routes } from '@angular/router';\n\nimport { FacilityComponent } from './facility.component';\n\nconst routes: Routes = [\n    {\n        path: '',\n        component: FacilityComponent\n    }\n];\n\n@NgModule({\n    imports: [RouterModule.forChild(routes)],\n    exports: [RouterModule]\n})\nexport class FacilityRoutingModule { }\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\n\nimport { FacilityRoutingModule } from './facility-routing.module';\nimport { FacilityComponent } from './facility.component';\n\nimport { TrendModule } from '../../_shared/dialog/trend/trend.module';\n\nimport { TrendService } from '../../../service/trend.service';\n\nimport { MatCardModule } from '@angular/material/card';\nimport { MatTooltipModule } from '@angular/material/tooltip';\n\n// tsc-library\nimport { MessageAlertModule, SkeletonModule } from '@library/tsc-common';\n// /tsc-library/\n\n@NgModule({\n    declarations: [\n        FacilityComponent\n    ],\n    imports: [\n        CommonModule,\n        FacilityRoutingModule,\n        TrendModule,\n        SkeletonModule,\n        MessageAlertModule,\n        MatCardModule,\n        MatTooltipModule\n    ],\n    providers: [TrendService]\n})\nexport class FacilityModule { }\n","import { Inject, Injectable } from '@angular/core';\nimport { HttpClient, HttpParams } from '@angular/common/http';\n\nimport { Observable } from 'rxjs';\n\nimport { DevicesWithEntitiesM } from '../model/device.model';\n\n@Injectable({\n    providedIn: 'root'\n})\n\nexport class EntityDeviceController {\n\n    constructor(\n        private http: HttpClient,\n        @Inject('environment') private environment: any\n    ) { }\n\n    //to chnge endpoint\n    getDevicesWithEntities(orgID, requestBody):Observable<DevicesWithEntitiesM[]> {\n        return this.http.post<DevicesWithEntitiesM[]>(`${this.environment.TSC_COMMON_API_URL}organizations/${orgID}/layouts/entities/devices`, requestBody);\n    }\n\n    //TODO: SOMYA AGRAWAL: To discuss this api with Abhinav\n    getDevicesWithEntitiesByParameter(orgID, paramMetric): Observable<DevicesWithEntitiesM[]> {\n        let params = new HttpParams();\n        params = params.append('paramMetric', paramMetric);\n        return this.http.post<DevicesWithEntitiesM[]>(`${this.environment.TSC_COMMON_API_URL}organizations/${orgID}/entities-devices`, { params: params });\n    }\n}\n","import { Injectable } from '@angular/core';\n\nimport { DevicesWithEntities, DevicesWithEntitiesM } from '../model/device.model';\nimport { EntityDeviceController } from '../controller/entity-device.controller';\n\n@Injectable({\n    providedIn: 'root'\n})\n\nexport class EntityDeviceService {\n\n    constructor(\n        private entityDeviceController: EntityDeviceController\n    ) { }\n\n    async getDevicesWithEntities(orgID, requestBody): Promise<DevicesWithEntitiesM[]> {\n        let devicesWithEntitiesM: DevicesWithEntitiesM[];\n        try {\n            devicesWithEntitiesM = await this.entityDeviceController.getDevicesWithEntities(orgID, requestBody).toPromise();\n\n            if (devicesWithEntitiesM) {\n                return devicesWithEntitiesM;\n            } else {\n                return [new DevicesWithEntities()];\n            }\n        } catch (error) {\n            console.error('Error -', error);\n            return [new DevicesWithEntities()];\n        }\n    }\n\n    async getDevicesWithEntitiesByParameter(orgID, paramMetric): Promise<DevicesWithEntitiesM[]> {\n        let devicesWithEntitiesM: DevicesWithEntitiesM[];\n        try {\n            devicesWithEntitiesM = await this.entityDeviceController.getDevicesWithEntitiesByParameter(orgID, paramMetric).toPromise();\n\n            if (devicesWithEntitiesM) {\n                return devicesWithEntitiesM;\n            } else {\n                return [new DevicesWithEntities()];\n            }\n        } catch (error) {\n            console.error('Error -', error);\n            return [new DevicesWithEntities()];\n        }\n    }\n\n}","import { Component, OnInit } from '@angular/core';\nimport { FormControl } from '@angular/forms';\n\nimport { DashboardErrorEnum } from '../../../enum/error.enum';\n\nimport { DevicesWithEntities, DevicesWithEntitiesM } from '../../../model/device.model';\nimport { Parameter, ParameterM } from '../../../model/parameter.model';\nimport { Alert, AlertM } from '../../../model/alert.model';\nimport { RecentDataRequestWithParam } from '../../../model/recent-data.model';\n\nimport { RecentDataService } from '../../../service/recent-data.service';\nimport { ParameterService } from '../../../service/parameter.service';\nimport { EntityDeviceService } from '../../../service/entity-device.service';\nimport { AlertService } from '../../../service/alert.service';\nimport { TrendService } from '../../../service/trend.service';\n\n// tsc-library\nimport { StorageService } from '@library/storage-service';\nimport { COMMON_CONSTANT, MatSelectSearchService, MaterialFormFieldAppearance, MessageAlertIconEnum, MessageAlertTypeEnum, TSCCommonService } from '@library/tsc-common';\nimport { DateService } from '@library/date';\nimport { ApplicationKeyID } from '@library/application-service';\n// /tsc-library/\n\n@Component({\n    selector: 'lib-meter-data',\n    templateUrl: './meter-data.component.html',\n    styles: [\n    ]\n})\nexport class MeterDataDashboardComponent implements OnInit {\n\n    commonConstant = COMMON_CONSTANT;\n\n    materialFormFieldAppearance = MaterialFormFieldAppearance;\n\n    orgID: any;\n    applicationKeyID: any;\n    paramMetric: any;\n    entityID: any;\n    timezone: string;\n    meterDataRes: any;\n    apiTimer: any;\n    showAlert: boolean = false;\n    showLoader: boolean = false;\n\n    entityDeviceM = [new DevicesWithEntities()];\n    parameterM = [new Parameter()];\n    alertObj: AlertM = new Alert();\n\n    meterFC: FormControl = new FormControl();\n\n    meterSearchUtil: MatSelectSearchService = new MatSelectSearchService(['name']);\n\n    constructor(\n        private storageService: StorageService,\n        private recentDataService: RecentDataService,\n        private entityDeviceService: EntityDeviceService,\n        private parameterService: ParameterService,\n        private alertService: AlertService,\n        public dateService: DateService,\n        private trendService: TrendService\n    ) { }\n\n    ngOnInit(): void {\n        this.orgID = this.storageService.getStorage('currentOrgID');\n        this.timezone = this.storageService.getStorage('timezone');\n        this.applicationKeyID = this.storageService.getStorage('applicationKeyID');\n\n        if (this.applicationKeyID == ApplicationKeyID.ENERGY_KEY_ID) {\n            this.paramMetric = \"engEnergyUsed\";\n        } else if (this.applicationKeyID == ApplicationKeyID.WATER_KEY_ID) {\n            this.paramMetric = \"gwFlowTotalizer\";\n        }\n\n        this.getDevicesWithEntitiesByParameter();\n    }\n\n    async getDevicesWithEntitiesByParameter() {\n        this.entityDeviceM = <DevicesWithEntitiesM[]>await this.entityDeviceService.getDevicesWithEntitiesByParameter(this.orgID, this.paramMetric);\n\n        this.meterSearchUtil.entityArr = this.entityDeviceM;\n        this.meterSearchUtil.createSubscription();\n\n        if (this.entityDeviceM.length > 1) {\n            const deviceID = this.entityDeviceM?.[0]?.['devices']?.[0]?.['id'];\n            this.meterFC.patchValue(deviceID);\n        }\n    }\n\n    meterChange(selectedMeter) {\n        clearTimeout(this.apiTimer);\n        this.showLoader = true;\n\n        this.meterFC.patchValue(selectedMeter);\n        this.getParameterList();\n    }\n\n    getParameterList() {\n        const selectedMeter = this.meterFC.value;\n        this.getParametersByDeviceID(selectedMeter);\n    }\n\n    async getParametersByDeviceID(deviceID) {\n        let requestBody = {};\n        requestBody['deviceID'] = [deviceID];\n\n        this.parameterM = <ParameterM[]>await this.parameterService.getParameterByDeviceID(this.orgID, requestBody);\n\n        if (this.parameterM.length > 1) {\n            this.getRecentMeterData(deviceID);\n        }\n    }\n\n    async getRecentMeterData(deviceID) {\n\n        this.alertService.resetAlertProperties(this.alertObj);\n\n        try {\n            let requestData = new RecentDataRequestWithParam();\n\n            requestData.params = this.parameterM.map(param => ({ name: param.paramMetric }));\n            requestData.deviceID = [deviceID];\n            requestData.backscan = 1;\n            requestData.timezone = this.timezone;\n\n            this.meterDataRes = await this.recentDataService.getRecentDataWithParam(this.orgID, requestData);\n\n            if (this.meterDataRes?.length == 0) {\n                this.alertService.setAlertProperties(this.alertObj, DashboardErrorEnum.DATA_NOT_FOUND_LABEL, DashboardErrorEnum.DATA_NOT_FOUND_MESSAGE, MessageAlertTypeEnum.WARNING, MessageAlertIconEnum.WARNING_ICON);\n            }\n\n        } catch (error) {\n            console.error(`Error in getRecentMeterData()`, error);\n            this.alertService.setAlertProperties(this.alertObj, DashboardErrorEnum.INVALID_ERROR_LABEL, DashboardErrorEnum.INVALID_ERROR_MESSAGE, MessageAlertTypeEnum.DANGER, MessageAlertIconEnum.DANGER_ICON);\n        } finally {\n            this.apiTimer = setTimeout(() => {\n                this.getRecentMeterData(deviceID);\n            }, 300000);\n            this.showLoader = false;\n        }\n    }\n\n    showTrend(paramMetric, entityID) {\n        let requestBody = {\n            paramMetric: paramMetric,\n            entityID: entityID,\n            deviceID: this.meterFC.value\n        };\n        this.trendService.openDialog(requestBody);\n    }\n\n    ngOnDestroy(): void {\n        clearTimeout(this.apiTimer);\n    }\n\n}\n","<div class=\"card main-card cardOverwrite h100\">\n    <div class=\"headerContainer\">\n        <div class=\"headerLeftContainer\">\n            <div class=\"pageTitle\">Meter Data Dashboard</div>\n        </div>\n    </div>\n\n    <div class=\"card-body\">\n        <div class=\"row\">\n            <div class=\"col-sm-3\">\n                <mat-form-field class=\"matFieldWidth100\"\n                    [appearance]=\"materialFormFieldAppearance.FORM_FIELD_APPEARANCE\">\n                    <mat-label>Select meter</mat-label>\n                    <mat-select (selectionChange)=\"meterChange($event.value)\" [formControl]=\"meterFC\">\n                        <ng-container *ngIf=\"entityDeviceM && entityDeviceM.length > 1; else noDataFound\">\n                            <mat-option>\n                                <ngx-mat-select-search [formControl]=\"meterSearchUtil.filterFC\"\n                                    placeholderLabel=\"Search by entity name\"\n                                    noEntriesFoundLabel=\"No matching name found.\">\n                                </ngx-mat-select-search>\n                            </mat-option>\n                            <mat-optgroup *ngFor=\"let entity of meterSearchUtil.filteredEntities | async\"\n                                [label]=\"entity.name\" [disabled]=\"entity.disabled\">\n                                <mat-option *ngFor=\"let device of entity.devices\" [value]=\"device.id\">\n                                    {{ device.name }}\n                                </mat-option>\n                            </mat-optgroup>\n                        </ng-container>\n                        <ng-template #noDataFound>\n                            <mat-option disabled>\n                                {{ commonConstant.NO_DATA_FOUND }}\n                            </mat-option>\n                        </ng-template>\n                    </mat-select>\n                    <mat-error *ngIf=\"meterFC.touched && meterFC.hasError('required')\">\n                        Select meter\n                    </mat-error>\n                </mat-form-field>\n            </div>\n        </div>\n\n        <div class=\"row mt-3\">\n            <div class=\"col-sm-12\">\n                <lib-message-alert *ngIf=\"alertObj.showAlert\" [labelInp]=\"alertObj.alertLabel\"\n                    [contentInp]=\"alertObj.alertContent\" [messageAlertTypeInp]=\"alertObj.messageAlertType\"\n                    [messageAlertIconInp]=\"alertObj.messageAlertIcon\">\n                </lib-message-alert>\n            </div>\n        </div>\n\n        <div class=\"row mt-3\">\n            <ng-container *ngIf=\"showLoader; else dataTemplate\">\n                <lib-skeleton-loader [count]=\"3\" [appearance]=\"''\"\n                    [theme]=\"{ 'border-radius': '16px', height: '40px', 'background-color': 'rgb(230 232 235)' }\"></lib-skeleton-loader>\n            </ng-container>\n            <ng-template #dataTemplate>\n                <div class=\"col-sm-4 mb-3\" *ngFor=\"let meterData of meterDataRes\">\n                    <mat-card class=\"cardOverwrite cardBackgroundColor\">\n                        <ng-container *ngTemplateOutlet=\"parameterData; context: {\n                            duration: dateService.getRelativeTimeAgoLabel(meterData?.data?.date),\n                            value: meterData?.data?.value,\n                            unit: meterData?.unit,\n                            label: meterData?.paramLabel,\n                            entityID: meterData?.entityID,\n                            paramName: meterData?.paramName\n                        }\"></ng-container>\n                    </mat-card>\n                </div>\n            </ng-template>\n        </div>\n\n    </div>\n</div>\n\n<ng-template #parameterData let-duration=\"duration\" let-label=\"label\" let-value=\"value\" let-unit=\"unit\"\n    let-entityID=\"entityID\" let-paramName=\"paramName\">\n    <div class=\"row\">\n        <div class=\"col-sm-6 textDurationWithAgoTime\">\n            {{ duration }}\n        </div>\n        <div class=\"col-sm-6 text-end\">\n            <a class=\"text-primary cursorPointer\" matTooltip=\"Trend\" matTooltipPosition=\"below\"\n                (click)=\"showTrend(paramName, entityID)\">\n                <span class=\"material-symbols-outlined fs-5 fw-bold\">trending_up</span>\n            </a>\n        </div>\n    </div>\n    <div class=\"row mt-3\">\n        <div class=\"col-sm-12 text-center\">\n            <span class=\"fs-1 fw-bold text-primary\">{{ value ? (value | number: '1.2-2') : commonConstant.HYPHEN\n                }}</span>\n            <span class=\"text-secondary fw-bold\"> {{ value ? unit : '' }} </span>\n        </div>\n    </div>\n    <div class=\"row mt-4 mb-4\">\n        <div class=\"col-sm-12 fs-5 text-center\">\n            {{ label }}\n        </div>\n    </div>\n</ng-template>","import { NgModule } from '@angular/core';\nimport { RouterModule, Routes } from '@angular/router';\n\nimport { MeterDataDashboardComponent } from './meter-data.component';\n\nconst routes: Routes = [\n    {\n        path: '',\n        component: MeterDataDashboardComponent\n    }\n];\n\n@NgModule({\n    imports: [RouterModule.forChild(routes)],\n    exports: [RouterModule]\n})\nexport class MeterDataRoutingModule { }\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\n\nimport { MeterDataRoutingModule } from './meter-data-routing.module';\nimport { MeterDataDashboardComponent } from './meter-data.component';\n\nimport { TrendModule } from '../../_shared/dialog/trend/trend.module';\n\nimport { TrendService } from '../../../service/trend.service';\n\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\n\nimport { MatCardModule } from '@angular/material/card';\nimport { MatTooltipModule } from '@angular/material/tooltip';\nimport { MatInputModule } from '@angular/material/input';\nimport { MatFormFieldModule } from '@angular/material/form-field';\nimport { MatSelectModule } from '@angular/material/select';\n\nimport { NgxMatSelectSearchModule } from 'ngx-mat-select-search';\n\n// tsc-library\nimport { MessageAlertModule, SkeletonModule } from '@library/tsc-common';\n// /tsc-library/\n\n\n@NgModule({\n    declarations: [\n        MeterDataDashboardComponent\n    ],\n    imports: [\n        CommonModule,\n        MeterDataRoutingModule,\n        TrendModule,\n        FormsModule,\n        ReactiveFormsModule,\n        MessageAlertModule,\n        SkeletonModule,\n        NgxMatSelectSearchModule,\n        MatCardModule,\n        MatTooltipModule,\n        MatInputModule,\n        MatFormFieldModule,\n        MatSelectModule\n    ],\n    providers: [TrendService]\n})\nexport class MeterDataDashboardModule { }\n","import { Component, OnInit } from '@angular/core';\n\n@Component({\n    selector: 'lib-cgwa',\n    templateUrl: './cgwa.component.html',\n    styles: [\n    ]\n})\nexport class CgwaReportComponent implements OnInit {\n\n    constructor() { }\n\n    ngOnInit(): void {\n    }\n\n}\n","<div class=\"card main-card cardOverwrite h100\">\n    <div class=\"headerContainer\">\n        <div class=\"headerLeftContainer\">\n            <div class=\"pageTitle\">CGWA Report</div>\n        </div>\n    </div>\n</div>","import { NgModule } from '@angular/core';\nimport { RouterModule, Routes } from '@angular/router';\n\nimport { CgwaReportComponent } from './cgwa.component';\n\nconst routes: Routes = [\n    {\n        path: '',\n        component: CgwaReportComponent\n    }\n];\n\n@NgModule({\n    imports: [RouterModule.forChild(routes)],\n    exports: [RouterModule]\n})\n\nexport class CgwaReportRoutingModule { }\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\n\nimport { CgwaReportRoutingModule } from './cgwa-routing.module';\nimport { CgwaReportComponent } from './cgwa.component';\n\n@NgModule({\n    declarations: [\n        CgwaReportComponent\n    ],\n    imports: [\n        CommonModule,\n        CgwaReportRoutingModule\n    ]\n})\nexport class CgwaReportModule { }\n","import { Injectable } from \"@angular/core\";\n\n// tsc-library\nimport { COMMON_CONSTANT } from \"@library/tsc-common\";\nimport { DateService } from \"@library/date\";\n// /tsc-library/\n\n@Injectable({\n    providedIn: 'root'\n})\n\nexport class ReportService {\n\n    constructor(\n        private dateService: DateService\n    ) { }\n\n    extractTimestamp(dataInp) {\n        if (!dataInp) {\n            return [];\n        }\n\n        const allTimestamp = dataInp.reduce((timestamps, dataValues) => {\n            if (dataValues && dataValues.data) {\n                dataValues.data.forEach(entry => {\n                    if (entry && entry.date) {\n                        timestamps.add(entry.date);\n                    }\n                });\n            }\n            return timestamps;\n        }, new Set<string>());\n\n        return Array.from(allTimestamp).sort();\n    }\n\n    populateTable(timestamp, dataInp, format): any[] {\n        return timestamp.map((time, index) => ({\n            index: index + 1,\n            time: this.dateService.formatDate(time, format),\n            data: dataInp.map(aggregation => {\n                const matchingEntry = aggregation.data.find(entry => entry.date == time);\n                return matchingEntry ? matchingEntry.value : COMMON_CONSTANT.HYPHEN;\n            })\n        }));\n    }\n\n}","import { Component, EventEmitter, Input, OnInit, Output, SimpleChanges } from '@angular/core';\n\nimport { FormControl } from '@angular/forms';\n\nimport { LIST_CONSTANT } from '../../../../constant/list.constant';\n\n@Component({\n    selector: 'lib-source-load',\n    templateUrl: './source-load.component.html',\n    styles: [\n    ]\n})\nexport class SourceLoadComponent implements OnInit {\n\n    @Input()\n    defaultCategoryInp: string;\n\n    listConstant = LIST_CONSTANT;\n\n    categoryFC = new FormControl(\"source\");\n\n    @Output()\n    emitFilter = new EventEmitter();\n\n    constructor() { }\n\n    ngOnInit(): void {\n    }\n\n    ngOnChanges(changes: SimpleChanges): void {\n        if (changes.defaultCategoryInp && this.defaultCategoryInp) {\n            this.categoryFC.patchValue(this.defaultCategoryInp);\n        }\n    }\n\n    ngAfterViewInit() {\n        this.emitFilter.emit();\n    }\n\n    categoryChange(selectedCategory) {\n        this.categoryFC.patchValue(selectedCategory);\n        this.emitFilter.emit();\n    }\n\n}\n","<mat-button-toggle-group class=\"matBtnFilter\" [formControl]=\"categoryFC\" (change)=\"categoryChange(categoryFC.value)\">\n    <mat-button-toggle *ngFor=\"let category of listConstant.SOURCE_LOAD\" value=\"{{ category.value }}\">\n        {{ category.label }}\n    </mat-button-toggle>\n</mat-button-toggle-group>","import { Component, OnInit, ViewChild } from '@angular/core';\n\nimport * as moment from 'moment-timezone';\n\nimport { ReportErrorEnum } from '../../../enum/error.enum';\nimport { DropdownTypeEnum } from '../../../enum/dropdown.enum';\n\nimport { AggregateDataRequest } from '../../../model/aggregate-data.model';\nimport { Alert, AlertM } from '../../../model/alert.model';\n\nimport { SourceLoadComponent } from '../../_shared/filter/source-load/source-load.component';\nimport { AggregationDurationComponent } from '../../dropdown/aggregation-duration/aggregation-duration.component';\nimport { EntityComponent } from '../../dropdown/entity/entity.component';\n\nimport { AggregateDataService } from '../../../service/aggregate-data.service';\nimport { ReportService } from '../../../service/report.service';\nimport { AlertService } from '../../../service/alert.service';\n\n// tsc-library\nimport { CUSTOM_RANGE_CONSTANT_EXCLUSIVE_DATE, DateFormatEnum, DateInputComponent, DateInputTypeEnum, DateTypeEnum } from '@library/date';\nimport { StorageService } from '@library/storage-service';\nimport { ToastrColor, ToastrService } from '@library/toastr-service';\nimport { ButtonLabelEnum, COMMON_CONSTANT, InvalidForm, MATERIAL_CONSTANT, MaterialFormFieldAppearance, MessageAlertIconEnum, MessageAlertTypeEnum, TSCCommonService } from '@library/tsc-common';\nimport { ApplicationKeyID } from '@library/application-service';\n// /tsc-library/\n\n@Component({\n    selector: 'lib-consumption-breakup',\n    templateUrl: './consumption-breakup.component.html',\n    styles: [\n    ]\n})\n\nexport class ConsumptionBreakupComponent implements OnInit {\n\n    materialConstant = MATERIAL_CONSTANT;\n    commonConstant = COMMON_CONSTANT;\n    customRangeConstant = CUSTOM_RANGE_CONSTANT_EXCLUSIVE_DATE;\n\n    materialFormFieldAppearance = MaterialFormFieldAppearance;\n    buttonLabelEnum = ButtonLabelEnum;\n    dropdownTypeEnum = DropdownTypeEnum;\n    dateFormatEnum = DateFormatEnum;\n    dateInputTypeEnum = DateInputTypeEnum;\n    dateTypeEnum = DateTypeEnum;\n\n    orgID: any;\n    applicationKeyID: any;\n    paramMetric: any;\n    timezone: string;\n    category: string;\n    startDate: string;\n    endDate: string;\n    aggDuration: string;\n    entityID: any;\n    timestamp: any;\n    renderTable: any;\n    reportData: any;\n    showAlert: boolean = false;\n    showLoader: boolean = false;\n\n    reportAlertObj: AlertM = new Alert();\n\n    @ViewChild('sourceLoadInput') sourceLoadInput: SourceLoadComponent;\n    @ViewChild('customDateInput') customDateInput: DateInputComponent;\n    @ViewChild('aggDurationInput') aggDurationInput: AggregationDurationComponent;\n    @ViewChild('entityInput') entityInput: EntityComponent;\n\n    constructor(\n        private storageService: StorageService,\n        private toastService: ToastrService,\n        private tscCommonService: TSCCommonService,\n        private aggregateDataService: AggregateDataService,\n        private reportService: ReportService,\n        private alertService: AlertService\n    ) { }\n\n    ngOnInit(): void {\n        this.orgID = this.storageService.getStorage('currentOrgID');\n        this.timezone = this.storageService.getStorage('timezone');\n        this.applicationKeyID = this.storageService.getStorage('applicationKeyID');\n\n        if (this.applicationKeyID == ApplicationKeyID.ENERGY_KEY_ID) {\n            this.paramMetric = \"engEnergyUsed\";\n        } else if (this.applicationKeyID == ApplicationKeyID.WATER_KEY_ID) {\n            this.paramMetric = \"gwFlowTotalizer\";\n        }\n    }\n\n    sourceLoadInpChange() {\n        this.category = this.sourceLoadInput.categoryFC.value;\n    }\n\n    dateInpChange() {\n        this.startDate = this.customDateInput.startDateFC.value;\n        this.endDate = this.customDateInput.endDateFC.value;\n    }\n\n    aggDurationInpChange() {\n        this.aggDuration = this.aggDurationInput.aggDurationFC.value;\n    }\n\n    entityInpChange() {\n        this.entityID = this.entityInput.multipleEntityFC.value;\n    }\n\n    async viewReport() {\n\n        this.alertService.resetAlertProperties(this.reportAlertObj);\n\n        if (this.isValidInputField()) {\n            this.toastService.openToast(InvalidForm.INVALID_FORM_TITLE, InvalidForm.INVALID_FORM_MESSAGE, ToastrColor.ERROR);\n            return;\n        }\n\n        if (this.startDate == this.endDate) {\n            this.alertService.setAlertProperties(this.reportAlertObj, ReportErrorEnum.INVALID_DATE_LABEL, ReportErrorEnum.INVALID_DATE_MESSAGE, MessageAlertTypeEnum.INFO, MessageAlertIconEnum.INFO_ICON);\n            return;\n        }\n\n        this.showLoader = true;\n\n        try {\n            const requestData = this.createDataRequest();\n\n            this.reportData = await this.aggregateDataService.getAggregateData(this.orgID, requestData);\n\n            if (this.reportData?.length > 0) {\n                this.timestamp = this.reportService.extractTimestamp(this.reportData);\n                this.renderTable = this.reportService.populateTable(this.timestamp, this.reportData, this.dateFormatEnum.DATE_TIME);\n            } else if (this.reportData?.length == 0) {\n                this.alertService.setAlertProperties(this.reportAlertObj, ReportErrorEnum.DATA_NOT_FOUND_LABEL, ReportErrorEnum.DATA_NOT_FOUND_MESSAGE, MessageAlertTypeEnum.WARNING, MessageAlertIconEnum.WARNING_ICON);\n            }\n\n        } catch (error) {\n            console.error(\"Error in viewReport()\", error);\n            this.alertService.setAlertProperties(this.reportAlertObj, ReportErrorEnum.INVALID_ERROR_LABEL, ReportErrorEnum.INVALID_ERROR_MESSAGE, MessageAlertTypeEnum.DANGER, MessageAlertIconEnum.DANGER_ICON);\n        } finally {\n            this.showLoader = false;\n        }\n    }\n\n    createDataRequest() {\n\n        if (this.entityID?.length > 0) {\n            this.entityID = this.tscCommonService.removeSelectAllID(this.entityID);\n        }\n\n        const requestData = new AggregateDataRequest();\n\n        requestData.startTime = this.startDate;\n        requestData.endTime = this.endDate;\n        requestData.interval = this.aggDuration;\n        requestData.entityID = [this.entityID];\n        requestData.params = [\n            {\n                name: this.paramMetric,\n                dsAgg: \"sum\",\n                agg: \"sum\",\n                source_or_load: this.category,\n                sourceLoadType: 'all'\n            }\n        ];\n        requestData.nullifyParams();\n\n        return requestData;\n    }\n\n    isValidInputField() {\n        const controls = [\n            this.customDateInput.startDateFC,\n            this.aggDurationInput.aggDurationFC,\n            this.entityInput.multipleEntityFC,\n        ];\n\n        controls.forEach(control => control.markAsTouched());\n        return controls.some(control => control.invalid);\n    }\n\n}","<div class=\"card main-card cardOverwrite h100\">\n    <div class=\"headerContainer\">\n        <div class=\"headerLeftContainer\">\n            <div class=\"pageTitle\">Consumption Breakup Report</div>\n        </div>\n    </div>\n\n    <div class=\"card-body\">\n        <div class=\"row\">\n            <div class=\"col-sm-4\">\n                <lib-source-load #sourceLoadInput (emitFilter)=\"sourceLoadInpChange()\"></lib-source-load>\n            </div>\n        </div>\n\n        <div class=\"row mt-3\">\n            <div class=\"col-sm-3\">\n                <lib-date-input #customDateInput (emitFilter)=\"dateInpChange()\" [materialFieldWidthInp]=\"true\"\n                    [materialFormFieldAppearanceInp]=\"materialFormFieldAppearance.FORM_FIELD_APPEARANCE\"\n                    [isMandatoryFieldInp]=\"true\" [dateInputTypeInp]=\"dateInputTypeEnum.CUSTOM_INPUT\"\n                    [dateTypeInp]=\"dateTypeEnum.EXCLUSIVE\" [showDefaultDurationInp]=\"true\" [showCdrRangeLabelInp]=\"true\"\n                    [labelInp]=\"'Select date'\" [timezoneInp]=\"timezone\" [rangeInp]=\"customRangeConstant\" [showTimeInCDRInp]=\"true\"\n                    [showRangeInp]=\"true\" [cdrFormatInp]=\"'YYYY-MM-DD HH:mm:ss'\"></lib-date-input>\n            </div>\n\n            <div class=\"col-sm-3\">\n                <lib-aggregation-duration #aggDurationInput\n                    (emitFilter)=\"aggDurationInpChange()\"></lib-aggregation-duration>\n            </div>\n\n            <div class=\"col-sm-3\">\n                <lib-entity #entityInput [dropdownTypeInp]=\"dropdownTypeEnum.MULTIPLE_DROPDOWN\"\n                    (emitFilter)=\"entityInpChange()\"></lib-entity>\n            </div>\n        </div>\n\n        <div class=\"row\">\n            <div class=\"col-sm-12\">\n                <div class=\"float-end\">\n                    <button class=\"btn btn-sm btn-primary\" type=\"button\" (click)=\"viewReport()\" matRipple\n                        [matRippleCentered]=\"materialConstant.MAT_RIPPLE_CENTER\">\n                        {{ buttonLabelEnum.READ_BTN_LABEL }}\n                    </button>\n                </div>\n            </div>\n        </div>\n\n        <div class=\"row\">\n            <div class=\"col-sm-12\">\n                <lib-message-alert *ngIf=\"reportAlertObj.showAlert\" [labelInp]=\"reportAlertObj.alertLabel\"\n                    [contentInp]=\"reportAlertObj.alertContent\" [messageAlertTypeInp]=\"reportAlertObj.messageAlertType\"\n                    [messageAlertIconInp]=\"reportAlertObj.messageAlertIcon\">\n                </lib-message-alert>\n            </div>\n        </div>\n\n        <div class=\"row\">\n            <div class=\"centerAlign\">\n                <lib-skeleton-loader *ngIf=\"showLoader\" [count]=\"3\" [appearance]=\"'circle'\"\n                    [theme]=\"{ height: '15px', width: '15px', 'background-color': '#e7ebf3' }\"></lib-skeleton-loader>\n            </div>\n        </div>\n\n        <div class=\"row mt-3\" *ngIf=\"reportData && reportData.length > 0\">\n            <div class=\"overflowX customScrollBar\">\n                <table class=\"table\">\n                    <tbody>\n                        <tr class=\"tableHeader\">\n                            <td class=\"fw-bold\"> Sr. No. </td>\n                            <td align=\"center\" class=\"fw-bold\"> Time </td>\n                            <ng-container *ngFor=\"let data of reportData; let i = index\">\n                                <td align=\"center\" class=\"fw-bold\">\n                                    {{ data.entityName }}<br />\n                                    {{ data.paramLabel }} ({{ data.unit }}) ({{ data.dsAgg }})\n                                </td>\n                            </ng-container>\n                        </tr>\n                    </tbody>\n                    <tbody>\n                        <tr *ngFor=\"let row of renderTable\">\n                            <td>{{ row.index }}</td>\n                            <td align=\"center\" class=\"colWidthContainingDateTime\">{{ row.time }}</td>\n                            <td align=\"center\" *ngFor=\"let value of row.data\">{{ value ? value : commonConstant.HYPHEN\n                                }}\n                            </td>\n                        </tr>\n                    </tbody>\n                </table>\n            </div>\n        </div>\n    </div>\n</div>","import { NgModule } from '@angular/core';\nimport { RouterModule, Routes } from '@angular/router';\nimport { ConsumptionBreakupComponent } from './consumption-breakup.component';\n\nconst routes: Routes = [\n    {\n        path: '',\n        component: ConsumptionBreakupComponent\n    }\n];\n\n@NgModule({\n    imports: [RouterModule.forChild(routes)],\n    exports: [RouterModule]\n})\nexport class ConsumptionBreakupRoutingModule { }\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\n\nimport { SourceLoadComponent } from './source-load.component';\n\nimport { ReactiveFormsModule, FormsModule } from '@angular/forms';\n\nimport { MatInputModule } from '@angular/material/input';\nimport { MatButtonToggleModule } from '@angular/material/button-toggle';\n\n@NgModule({\n    declarations: [\n        SourceLoadComponent\n    ],\n    imports: [\n        CommonModule,\n        FormsModule,\n        ReactiveFormsModule,\n        MatInputModule,\n        MatButtonToggleModule\n    ],\n    exports: [\n        SourceLoadComponent\n    ]\n})\nexport class SourceLoadModule { }\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\n\nimport { ConsumptionBreakupRoutingModule } from './consumption-breakup-routing.module';\nimport { ConsumptionBreakupComponent } from './consumption-breakup.component';\n\nimport { SourceLoadModule } from '../../_shared/filter/source-load/source-load.module';\nimport { AggregationDurationModule } from '../../dropdown/aggregation-duration/aggregation-duration.module';\nimport { EntityModule } from '../../dropdown/entity/entity.module';\n\nimport { MatTableModule } from '@angular/material/table';\nimport { MatRippleModule } from '@angular/material/core';\n\n// tsc-library\nimport { DateInputModule } from '@library/date';\nimport { MessageAlertModule, SkeletonModule } from '@library/tsc-common';\n// /tsc-library/\n\n\n@NgModule({\n    declarations: [\n        ConsumptionBreakupComponent\n    ],\n    imports: [\n        CommonModule,\n        ConsumptionBreakupRoutingModule,\n        SourceLoadModule,\n        DateInputModule,\n        AggregationDurationModule,\n        EntityModule,\n        SkeletonModule,\n        MessageAlertModule,\n        MatTableModule,\n        MatRippleModule\n    ]\n})\nexport class ConsumptionBreakupModule { }\n","import { Component, OnInit, ViewChild } from '@angular/core';\n\nimport * as moment from 'moment-timezone';\n\nimport { DropdownTypeEnum } from '../../../enum/dropdown.enum';\nimport { ReportErrorEnum } from '../../../enum/error.enum';\n\nimport { AggregateDataRequest } from '../../../model/aggregate-data.model';\nimport { Alert, AlertM } from '../../../model/alert.model';\n\nimport { EntityComponent } from '../../dropdown/entity/entity.component';\nimport { DeviceComponent } from '../../dropdown/device/device.component';\nimport { ParamMetricComponent } from '../../dropdown/param-metric/param-metric.component';\n\nimport { AggregateDataService } from '../../../service/aggregate-data.service';\nimport { ReportService } from '../../../service/report.service';\nimport { AlertService } from '../../../service/alert.service';\n\n// tsc-library\nimport { DateFormatEnum, DateInputComponent, DateInputTypeEnum, DateTypeEnum, CUSTOM_RANGE_CONSTANT_EXCLUSIVE_DATE } from '@library/date';\nimport { StorageService } from '@library/storage-service';\nimport { ToastrColor, ToastrService } from '@library/toastr-service';\nimport { ButtonLabelEnum, COMMON_CONSTANT, InvalidForm, MATERIAL_CONSTANT, MaterialFormFieldAppearance, MessageAlertIconEnum, MessageAlertTypeEnum, TSCCommonService } from '@library/tsc-common';\n// /tsc-library/\n\n@Component({\n    selector: 'lib-data-availability',\n    templateUrl: './data-availability.component.html',\n    styles: [\n    ]\n})\nexport class DataAvailabilityReportComponent implements OnInit {\n\n    materialConstant = MATERIAL_CONSTANT;\n    commonConstant = COMMON_CONSTANT;\n    customRangeConstant = CUSTOM_RANGE_CONSTANT_EXCLUSIVE_DATE;\n\n    materialFormFieldAppearance = MaterialFormFieldAppearance;\n    buttonLabelEnum = ButtonLabelEnum;\n    dropdownTypeEnum = DropdownTypeEnum;\n    dateFormatEnum = DateFormatEnum;\n    dateInputTypeEnum = DateInputTypeEnum;\n    dateTypeEnum = DateTypeEnum;\n\n    orgID: any;\n    timezone: string;\n    startDate: string;\n    endDate: string;\n    entityID: any;\n    deviceID: any;\n    parameterList: any[] = [];\n    timestamp: any;\n    renderTable: any;\n    reportData: any;\n    showAlert: boolean = false;\n    showLoader: boolean = false;\n\n    reportAlertObj: AlertM = new Alert();\n\n    @ViewChild('customDateInput') customDateInput: DateInputComponent;\n    @ViewChild('entityInput') entityInput: EntityComponent;\n    @ViewChild('deviceInput') deviceInput: DeviceComponent;\n    @ViewChild('paramInput') paramInput: ParamMetricComponent;\n\n    constructor(\n        private storageService: StorageService,\n        private toastService: ToastrService,\n        private tscCommonService: TSCCommonService,\n        private aggregateDataService: AggregateDataService,\n        private reportService: ReportService,\n        private alertService: AlertService\n    ) { }\n\n    ngOnInit(): void {\n        this.orgID = this.storageService.getStorage('currentOrgID');\n        this.timezone = this.storageService.getStorage('timezone');\n    }\n\n    dateInpChange() {\n        this.startDate = this.customDateInput.startDateFC.value;\n        this.endDate = this.customDateInput.endDateFC.value;\n    }\n\n    entityInpChange() {\n        this.entityID = this.entityInput.entityFC.value;\n\n        this.paramInput?.parameterFC.reset();\n        this.paramInput?.parameterFC.updateValueAndValidity();\n    }\n\n    deviceInpChange() {\n        this.deviceID = this.deviceInput.deviceFC.value;\n\n        this.paramInput?.parameterFC.reset();\n        this.paramInput?.parameterFC.updateValueAndValidity();\n    }\n\n    paramInpChange() {\n        let paramMetric = this.paramInput?.parameterFC.value;\n\n        if (paramMetric.length > 0) {\n            this.parameterList = this.tscCommonService.removeSelectAllID(paramMetric);\n        }\n    }\n\n    async viewReport() {\n\n        this.alertService.resetAlertProperties(this.reportAlertObj);\n\n        if (this.isValidInputField()) {\n            this.toastService.openToast(InvalidForm.INVALID_FORM_TITLE, InvalidForm.INVALID_FORM_MESSAGE, ToastrColor.ERROR);\n            return;\n        }\n\n        if (this.startDate == this.endDate) {\n            this.alertService.setAlertProperties(this.reportAlertObj, ReportErrorEnum.INVALID_DATE_LABEL, ReportErrorEnum.INVALID_DATE_MESSAGE, MessageAlertTypeEnum.INFO, MessageAlertIconEnum.INFO_ICON);\n            return;\n        }\n\n        this.showLoader = true;\n\n        try {\n            //INFO: SOMYA AGRAWAL, to discuss..\n\n        } catch (error) {\n            console.error(\"Error in viewReport()\", error);\n            this.alertService.setAlertProperties(this.reportAlertObj, ReportErrorEnum.INVALID_ERROR_LABEL, ReportErrorEnum.INVALID_ERROR_MESSAGE, MessageAlertTypeEnum.DANGER, MessageAlertIconEnum.DANGER_ICON);\n        } finally {\n            this.showLoader = false;\n        }\n    }\n\n    isValidInputField() {\n        const controls = [\n            this.customDateInput.startDateFC,\n            this.entityInput.entityFC,\n            this.deviceInput.deviceFC,\n            this.paramInput.parameterFC\n        ];\n\n        controls.forEach(control => control.markAsTouched());\n        return controls.some(control => control.invalid);\n    }\n\n}\n","<div class=\"card main-card cardOverwrite h100\">\n    <div class=\"headerContainer\">\n        <div class=\"headerLeftContainer\">\n            <div class=\"pageTitle\">Data Availability Report</div>\n        </div>\n    </div>\n\n    <div class=\"card-body\">\n        <div class=\"row\">\n            <div class=\"col-sm-3\">\n                <lib-date-input #customDateInput (emitFilter)=\"dateInpChange()\" [materialFieldWidthInp]=\"true\"\n                    [materialFormFieldAppearanceInp]=\"materialFormFieldAppearance.FORM_FIELD_APPEARANCE\"\n                    [isMandatoryFieldInp]=\"true\" [dateInputTypeInp]=\"dateInputTypeEnum.CUSTOM_INPUT\"\n                    [dateTypeInp]=\"dateTypeEnum.EXCLUSIVE\" [showDefaultDurationInp]=\"true\" [showCdrRangeLabelInp]=\"true\"\n                    [labelInp]=\"'Select date'\" [timezoneInp]=\"timezone\" [rangeInp]=\"customRangeConstant\" [showTimeInCDRInp]=\"true\"\n                    [showRangeInp]=\"true\" [cdrFormatInp]=\"'YYYY-MM-DD HH:mm:ss'\"></lib-date-input>\n            </div>\n\n            <div class=\"col-sm-3\">\n                <lib-entity #entityInput (emitFilter)=\"entityInpChange()\"></lib-entity>\n            </div>\n\n            <div class=\"col-sm-3\">\n                <lib-device #deviceInput [dropdownTypeInp]=\"dropdownTypeEnum.SINGLE_DROPDOWN\" [entityInp]=\"entityID\"\n                    (emitFilter)=\"deviceInpChange()\"></lib-device>\n            </div>\n\n            <div class=\"col-sm-3\">\n                <lib-param-metric #paramInput [deviceInp]=\"deviceID\" (emitFilter)=\"paramInpChange()\"></lib-param-metric>\n            </div>\n        </div>\n\n        <div class=\"row\">\n            <div class=\"col-sm-12\">\n                <div class=\"float-end\">\n                    <button class=\"btn btn-sm btn-primary\" type=\"button\" (click)=\"viewReport()\" matRipple\n                        [matRippleCentered]=\"materialConstant.MAT_RIPPLE_CENTER\">\n                        {{ buttonLabelEnum.READ_BTN_LABEL }}\n                    </button>\n                </div>\n            </div>\n        </div>\n\n        <div class=\"row\">\n            <div class=\"col-sm-12\">\n                <lib-message-alert *ngIf=\"reportAlertObj.showAlert\" [labelInp]=\"reportAlertObj.alertLabel\"\n                    [contentInp]=\"reportAlertObj.alertContent\" [messageAlertTypeInp]=\"reportAlertObj.messageAlertType\"\n                    [messageAlertIconInp]=\"reportAlertObj.messageAlertIcon\">\n                </lib-message-alert>\n            </div>\n        </div>\n\n        <div class=\"row\">\n            <div class=\"centerAlign\">\n                <lib-skeleton-loader *ngIf=\"showLoader\" [count]=\"3\" [appearance]=\"'circle'\"\n                    [theme]=\"{ height: '15px', width: '15px', 'background-color': '#e7ebf3' }\"></lib-skeleton-loader>\n            </div>\n        </div>\n\n        <div class=\"row mt-3\" *ngIf=\"reportData && reportData.length > 0\">\n            <div class=\"overflowX customScrollBar\">\n                <table class=\"table\">\n                    <tbody>\n                        <tr class=\"tableHeader\">\n                            <td class=\"fw-bold\"> Sr. No. </td>\n                            <td align=\"center\" class=\"fw-bold\"> Entity </td>\n                            <td align=\"center\" class=\"fw-bold\"> Device </td>\n                            <td align=\"center\" class=\"fw-bold\"> Parameter </td>\n                            <td align=\"center\" class=\"fw-bold\"> Min Value </td>\n                            <td align=\"center\" class=\"fw-bold\"> Max Value </td>\n                            <td align=\"center\" class=\"fw-bold\"> Avg Value </td>\n                            <td align=\"center\" class=\"fw-bold\"> Data availability (%) </td>\n                        </tr>\n                    </tbody>\n                    <tbody>\n                        <!-- INFO: SOMYA AGRAWAL, to discuss.. -->\n                    </tbody>\n                </table>\n            </div>\n        </div>\n    </div>\n</div>","import { NgModule } from '@angular/core';\nimport { RouterModule, Routes } from '@angular/router';\n\nimport { DataAvailabilityReportComponent } from './data-availability.component';\n\nconst routes: Routes = [\n    {\n        path: '',\n        component: DataAvailabilityReportComponent\n    }\n];\n\n@NgModule({\n    imports: [RouterModule.forChild(routes)],\n    exports: [RouterModule]\n})\n\nexport class DataAvailabilityReportRoutingModule { }\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\n\nimport { DataAvailabilityReportRoutingModule } from './data-availability-routing.module';\nimport { DataAvailabilityReportComponent } from './data-availability.component';\n\nimport { EntityModule } from '../../dropdown/entity/entity.module';\nimport { DeviceModule } from '../../dropdown/device/device.module';\nimport { ParamMetricModule } from '../../dropdown/param-metric/param-metric.module';\n\nimport { MatTableModule } from '@angular/material/table';\nimport { MatRippleModule } from '@angular/material/core';\n\n// tsc-library\nimport { DateInputModule } from '@library/date';\nimport { MessageAlertModule, SkeletonModule } from '@library/tsc-common';\n// /tsc-library/\n\n@NgModule({\n    declarations: [\n        DataAvailabilityReportComponent\n    ],\n    imports: [\n        CommonModule,\n        DataAvailabilityReportRoutingModule,\n        DateInputModule,\n        EntityModule,\n        DeviceModule,\n        ParamMetricModule,\n        SkeletonModule,\n        MessageAlertModule,\n        MatTableModule,\n        MatRippleModule,\n    ]\n})\nexport class DataAvailabilityReportModule { }\n","import { Component, OnInit, ViewChild } from '@angular/core';\nimport { FormControl } from '@angular/forms';\n\nimport * as moment from 'moment-timezone';\n\nimport { ReportErrorEnum } from '../../../enum/error.enum';\n\nimport { AggregateDataRequest } from '../../../model/aggregate-data.model';\nimport { DevicesWithEntities, DevicesWithEntitiesM } from '../../../model/device.model';\nimport { Alert, AlertM } from '../../../model/alert.model';\n\nimport { AggregationDurationComponent } from '../../dropdown/aggregation-duration/aggregation-duration.component';\nimport { ParamMetricComponent } from '../../dropdown/param-metric/param-metric.component';\n\nimport { EntityDeviceService } from '../../../service/entity-device.service';\nimport { AggregateDataService } from '../../../service/aggregate-data.service';\nimport { ReportService } from '../../../service/report.service';\nimport { AlertService } from '../../../service/alert.service';\n\n// tsc-library\nimport { CUSTOM_RANGE_CONSTANT_EXCLUSIVE_DATE, DateFormatEnum, DateInputComponent, DateInputTypeEnum, DateTypeEnum } from '@library/date';\nimport { StorageService } from '@library/storage-service';\nimport { ToastrColor, ToastrService } from '@library/toastr-service';\nimport { ButtonLabelEnum, COMMON_CONSTANT, InvalidForm, MATERIAL_CONSTANT, MatSelectSearchService, MaterialFormFieldAppearance, MessageAlertIconEnum, MessageAlertTypeEnum, TSCCommonService } from '@library/tsc-common';\nimport { ApplicationKeyID } from '@library/application-service';\n// /tsc-library/\n\n@Component({\n    selector: 'lib-meter',\n    templateUrl: './meter.component.html',\n    styles: [\n    ]\n})\nexport class MeterReportComponent implements OnInit {\n\n    materialConstant = MATERIAL_CONSTANT;\n    commonConstant = COMMON_CONSTANT;\n    customRangeConstant = CUSTOM_RANGE_CONSTANT_EXCLUSIVE_DATE;\n\n    materialFormFieldAppearance = MaterialFormFieldAppearance;\n    buttonLabelEnum = ButtonLabelEnum;\n    dateFormatEnum = DateFormatEnum;\n    dateInputTypeEnum = DateInputTypeEnum;\n    dateTypeEnum = DateTypeEnum;\n\n    orgID: any;\n    applicationKeyID: any;\n    paramMetric: any;\n    timezone: string;\n    startDate: string;\n    endDate: string;\n    aggDuration: string;\n    entityID: any;\n    parameterList: any[] = [];\n    timestamp: any;\n    renderTable: any;\n    reportData: any;\n    showAlert: boolean = false;\n    showLoader: boolean = false;\n\n    entityDeviceM = [new DevicesWithEntities()];\n    reportAlertObj: AlertM = new Alert();\n\n    meterFC: FormControl = new FormControl();\n\n    meterSearchUtil: MatSelectSearchService = new MatSelectSearchService(['name']);\n\n    @ViewChild('customDateInput') customDateInput: DateInputComponent;\n    @ViewChild('aggDurationInput') aggDurationInput: AggregationDurationComponent;\n    @ViewChild('paramInput') paramInput: ParamMetricComponent;\n\n    constructor(\n        private storageService: StorageService,\n        private toastService: ToastrService,\n        private tscCommonService: TSCCommonService,\n        private entityDeviceService: EntityDeviceService,\n        private aggregateDataService: AggregateDataService,\n        private reportService: ReportService,\n        private alertService: AlertService\n    ) { }\n\n    ngOnInit(): void {\n        this.orgID = this.storageService.getStorage('currentOrgID');\n        this.timezone = this.storageService.getStorage('timezone');\n        this.applicationKeyID = this.storageService.getStorage('applicationKeyID');\n\n        if (this.applicationKeyID == ApplicationKeyID.ENERGY_KEY_ID) {\n            this.paramMetric = \"engEnergyUsed\";\n        } else if (this.applicationKeyID == ApplicationKeyID.WATER_KEY_ID) {\n            this.paramMetric = \"gwFlowTotalizer\";\n        }\n\n        this.getDevicesWithEntitiesByParameter();\n    }\n\n    async getDevicesWithEntitiesByParameter() {\n        this.entityDeviceM = <DevicesWithEntitiesM[]>await this.entityDeviceService.getDevicesWithEntitiesByParameter(this.orgID, this.paramMetric);\n\n        this.meterSearchUtil.entityArr = this.entityDeviceM;\n        this.meterSearchUtil.createSubscription();\n\n        if (this.entityDeviceM.length > 1) {\n            const deviceID = this.entityDeviceM?.[0]?.['devices']?.[0]?.['id'];\n            this.meterFC.patchValue(deviceID);\n            this.entityID = this.getEntityIDByDeviceID(deviceID);\n        }\n    }\n\n    meterChange(selectedMeter) {\n        this.paramInput?.parameterFC.reset();\n        this.paramInput?.parameterFC.updateValueAndValidity();\n\n        this.meterFC.patchValue(selectedMeter);\n        this.entityID = this.getEntityIDByDeviceID(selectedMeter);\n    }\n\n    getEntityIDByDeviceID(deviceID) {\n        for (const entity of this.entityDeviceM) {\n            for (const device of entity.devices) {\n                if (device.id == deviceID) {\n                    return entity.id;\n                }\n            }\n        }\n        return null;\n    }\n\n    dateInpChange() {\n        this.startDate = this.customDateInput.startDateFC.value;\n        this.endDate = this.customDateInput.endDateFC.value;\n    }\n\n    aggDurationInpChange() {\n        this.aggDuration = this.aggDurationInput.aggDurationFC.value;\n    }\n\n    paramInpChange() {\n        let paramMetric = this.paramInput?.parameterFC.value;\n\n        if (paramMetric.length > 0) {\n            this.parameterList = this.tscCommonService.removeSelectAllID(paramMetric);\n        }\n    }\n\n    async viewReport() {\n\n        this.alertService.resetAlertProperties(this.reportAlertObj);\n\n        if (this.isValidInputField()) {\n            this.toastService.openToast(InvalidForm.INVALID_FORM_TITLE, InvalidForm.INVALID_FORM_MESSAGE, ToastrColor.ERROR);\n            return;\n        }\n\n        if (this.startDate == this.endDate) {\n            this.alertService.setAlertProperties(this.reportAlertObj, ReportErrorEnum.INVALID_DATE_LABEL, ReportErrorEnum.INVALID_DATE_MESSAGE, MessageAlertTypeEnum.INFO, MessageAlertIconEnum.INFO_ICON);\n            return;\n        }\n\n        this.showLoader = true;\n\n        try {\n            const requestData = this.createDataRequest();\n\n            this.reportData = await this.aggregateDataService.getAggregateData(this.orgID, requestData);\n\n            if (this.reportData?.length > 0) {\n                this.timestamp = this.reportService.extractTimestamp(this.reportData);\n                this.renderTable = this.reportService.populateTable(this.timestamp, this.reportData, this.dateFormatEnum.DATE_TIME);\n            } else if (this.reportData?.length == 0) {\n                this.alertService.setAlertProperties(this.reportAlertObj, ReportErrorEnum.DATA_NOT_FOUND_LABEL, ReportErrorEnum.DATA_NOT_FOUND_MESSAGE, MessageAlertTypeEnum.WARNING, MessageAlertIconEnum.WARNING_ICON);\n            }\n\n        } catch (error) {\n            console.error(\"Error in viewReport()\", error);\n            this.alertService.setAlertProperties(this.reportAlertObj, ReportErrorEnum.INVALID_ERROR_LABEL, ReportErrorEnum.INVALID_ERROR_MESSAGE, MessageAlertTypeEnum.DANGER, MessageAlertIconEnum.DANGER_ICON);\n        } finally {\n            this.showLoader = false;\n        }\n    }\n\n    createDataRequest() {\n\n        const requestData = new AggregateDataRequest();\n\n        requestData.startTime = this.startDate;\n        requestData.endTime = this.endDate;\n        requestData.interval = this.aggDuration;\n        requestData.entityID = [this.entityID];\n        requestData.deviceID = [this.meterFC.value];\n        requestData.params = [];\n        for (const paramMetric of this.parameterList) {\n            requestData.params.push({\n                name: paramMetric,\n                dsAgg: \"avg\",\n                agg: \"avg\"\n            });\n        }\n        requestData.nullifyParams();\n\n        return requestData;\n    }\n\n    isValidInputField() {\n        const controls = [\n            this.customDateInput.startDateFC,\n            this.aggDurationInput.aggDurationFC,\n            this.meterFC,\n            this.paramInput.parameterFC\n        ];\n\n        controls.forEach(control => control.markAsTouched());\n        return controls.some(control => control.invalid);\n    }\n\n}\n","<div class=\"card main-card cardOverwrite h100\">\n    <div class=\"headerContainer\">\n        <div class=\"headerLeftContainer\">\n            <div class=\"pageTitle\">Meter Report</div>\n        </div>\n    </div>\n\n    <div class=\"card-body\">\n        <div class=\"row\">\n            <div class=\"col-sm-3\">\n                <lib-date-input #customDateInput (emitFilter)=\"dateInpChange()\" [materialFieldWidthInp]=\"true\"\n                    [materialFormFieldAppearanceInp]=\"materialFormFieldAppearance.FORM_FIELD_APPEARANCE\"\n                    [isMandatoryFieldInp]=\"true\" [dateInputTypeInp]=\"dateInputTypeEnum.CUSTOM_INPUT\"\n                    [dateTypeInp]=\"dateTypeEnum.EXCLUSIVE\" [showDefaultDurationInp]=\"true\" [showCdrRangeLabelInp]=\"true\"\n                    [labelInp]=\"'Select date'\" [timezoneInp]=\"timezone\" [rangeInp]=\"customRangeConstant\" [showTimeInCDRInp]=\"true\"\n                    [showRangeInp]=\"true\" [cdrFormatInp]=\"'YYYY-MM-DD HH:mm:ss'\"></lib-date-input>\n            </div>\n\n            <div class=\"col-sm-3\">\n                <lib-aggregation-duration #aggDurationInput\n                    (emitFilter)=\"aggDurationInpChange()\"></lib-aggregation-duration>\n            </div>\n\n            <div class=\"col-sm-3\">\n                <mat-form-field class=\"matFieldWidth100\" [appearance]=\"materialFormFieldAppearance.FORM_FIELD_APPEARANCE\">\n                    <mat-label>Select meter</mat-label>\n                    <mat-select (selectionChange)=\"meterChange($event.value)\" [formControl]=\"meterFC\">\n                        <ng-container *ngIf=\"entityDeviceM && entityDeviceM.length > 1; else noDataFound\">\n                            <mat-option>\n                                <ngx-mat-select-search [formControl]=\"meterSearchUtil.filterFC\" placeholderLabel=\"Search by entity name\"\n                                    noEntriesFoundLabel=\"No matching name found.\">\n                                </ngx-mat-select-search>\n                            </mat-option>\n                            <mat-optgroup *ngFor=\"let entity of meterSearchUtil.filteredEntities | async\" [label]=\"entity.name\"\n                                [disabled]=\"entity.disabled\">\n                                <mat-option *ngFor=\"let device of entity.devices\" [value]=\"device.id\">\n                                    {{ device.name }}\n                                </mat-option>\n                            </mat-optgroup>\n                        </ng-container>\n                        <ng-template #noDataFound>\n                            <mat-option disabled>\n                                {{ commonConstant.NO_DATA_FOUND }}\n                            </mat-option>\n                        </ng-template>\n                    </mat-select>\n                    <mat-error *ngIf=\"meterFC.touched && meterFC.hasError('required')\">\n                        Select meter\n                    </mat-error>\n                </mat-form-field>\n            </div>\n\n            <div class=\"col-sm-3\">\n                <lib-param-metric #paramInput [deviceInp]=\"meterFC.value\" (emitFilter)=\"paramInpChange()\"></lib-param-metric>\n            </div>\n        </div>\n\n        <div class=\"row\">\n            <div class=\"col-sm-12\">\n                <div class=\"float-end\">\n                    <button class=\"btn btn-sm btn-primary\" type=\"button\" (click)=\"viewReport()\" matRipple\n                        [matRippleCentered]=\"materialConstant.MAT_RIPPLE_CENTER\">\n                        {{ buttonLabelEnum.READ_BTN_LABEL }}\n                    </button>\n                </div>\n            </div>\n        </div>\n\n        <div class=\"row\">\n            <div class=\"col-sm-12\">\n                <lib-message-alert *ngIf=\"reportAlertObj.showAlert\" [labelInp]=\"reportAlertObj.alertLabel\"\n                    [contentInp]=\"reportAlertObj.alertContent\" [messageAlertTypeInp]=\"reportAlertObj.messageAlertType\"\n                    [messageAlertIconInp]=\"reportAlertObj.messageAlertIcon\">\n                </lib-message-alert>\n            </div>\n        </div>\n\n        <div class=\"row\">\n            <div class=\"centerAlign\">\n                <lib-skeleton-loader *ngIf=\"showLoader\" [count]=\"3\" [appearance]=\"'circle'\"\n                    [theme]=\"{ height: '15px', width: '15px', 'background-color': '#e7ebf3' }\"></lib-skeleton-loader>\n            </div>\n        </div>\n\n        <div class=\"row mt-3\" *ngIf=\"reportData && reportData.length > 0\">\n            <div class=\"overflowX customScrollBar\">\n                <table class=\"table\">\n                    <tbody>\n                        <tr class=\"tableHeader\">\n                            <td class=\"fw-bold\"> Sr. No. </td>\n                            <td align=\"center\" class=\"fw-bold\"> Time </td>\n                            <ng-container *ngFor=\"let data of reportData; let i = index\">\n                                <td align=\"center\" class=\"fw-bold\">\n                                    {{ data.paramLabel }} ({{ data.unit }}) ({{ data.dsAgg }})\n                                </td>\n                            </ng-container>\n                        </tr>\n                    </tbody>\n                    <tbody>\n                        <tr *ngFor=\"let row of renderTable\">\n                            <td>{{ row.index }}</td>\n                            <td align=\"center\" class=\"colWidthContainingDateTime\">{{ row.time }}</td>\n                            <td align=\"center\" *ngFor=\"let value of row.data\">{{ value ? value : commonConstant.HYPHEN\n                                }}\n                            </td>\n                        </tr>\n                    </tbody>\n                </table>\n            </div>\n        </div>\n    </div>\n</div>","import { NgModule } from '@angular/core';\nimport { RouterModule, Routes } from '@angular/router';\n\nimport { MeterReportComponent } from './meter.component';\n\nconst routes: Routes = [\n    {\n        path: '',\n        component: MeterReportComponent\n    }\n];\n\n@NgModule({\n  imports: [RouterModule.forChild(routes)],\n  exports: [RouterModule]\n})\nexport class MeterReportRoutingModule { }\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\n\nimport { MeterReportRoutingModule } from './meter-routing.module';\nimport { MeterReportComponent } from './meter.component';\n\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\n\nimport { AggregationDurationModule } from '../../dropdown/aggregation-duration/aggregation-duration.module';\nimport { ParamMetricModule } from '../../dropdown/param-metric/param-metric.module';\n\nimport { MatInputModule } from '@angular/material/input';\nimport { MatFormFieldModule } from '@angular/material/form-field';\nimport { MatSelectModule } from '@angular/material/select';\nimport { MatTableModule } from '@angular/material/table';\nimport { MatRippleModule } from '@angular/material/core';\n\nimport { NgxMatSelectSearchModule } from 'ngx-mat-select-search';\n\n// tsc-library\nimport { DateInputModule } from '@library/date';\nimport { MessageAlertModule, SkeletonModule } from '@library/tsc-common';\n// /tsc-library/\n\n@NgModule({\n    declarations: [\n        MeterReportComponent\n    ],\n    imports: [\n        CommonModule,\n        MeterReportRoutingModule,\n        FormsModule,\n        ReactiveFormsModule,\n        DateInputModule,\n        AggregationDurationModule,\n        ParamMetricModule,\n        MessageAlertModule,\n        SkeletonModule,\n        NgxMatSelectSearchModule,\n        MatInputModule,\n        MatFormFieldModule,\n        MatSelectModule,\n        MatTableModule,\n        MatRippleModule\n    ]\n})\nexport class MeterReportModule { }\n","import { Component, OnInit, ViewChild } from '@angular/core';\n\nimport * as moment from 'moment-timezone';\n\nimport { DropdownTypeEnum } from '../../../enum/dropdown.enum';\nimport { ReportErrorEnum } from '../../../enum/error.enum';\n\nimport { AggregateDataRequest } from '../../../model/aggregate-data.model';\nimport { Parameter, ParameterM } from '../../../model/parameter.model';\nimport { Alert, AlertM } from '../../../model/alert.model';\n\nimport { AggregationDurationComponent } from '../../dropdown/aggregation-duration/aggregation-duration.component';\nimport { EntityComponent } from '../../dropdown/entity/entity.component';\nimport { DeviceComponent } from '../../dropdown/device/device.component';\nimport { ParamMetricComponent } from '../../dropdown/param-metric/param-metric.component';\nimport { AggregationComponent } from '../../dropdown/aggregation/aggregation.component';\n\nimport { AggregateDataService } from '../../../service/aggregate-data.service';\nimport { ParameterService } from '../../../service/parameter.service';\nimport { ReportService } from '../../../service/report.service';\nimport { AlertService } from '../../../service/alert.service';\n\n// tsc-library\nimport { CUSTOM_RANGE_CONSTANT_EXCLUSIVE_DATE, DateFormatEnum, DateInputComponent, DateInputTypeEnum, DateTypeEnum } from '@library/date';\nimport { StorageService } from '@library/storage-service';\nimport { ToastrColor, ToastrService } from '@library/toastr-service';\nimport { ButtonLabelEnum, COMMON_CONSTANT, InvalidForm, MATERIAL_CONSTANT, MaterialFormFieldAppearance, MessageAlertIconEnum, MessageAlertTypeEnum, TSCCommonService } from '@library/tsc-common';\n// /tsc-library/\n\n@Component({\n    selector: 'lib-parameter',\n    templateUrl: './parameter.component.html',\n    styles: [\n    ]\n})\nexport class ParameterReportComponent implements OnInit {\n\n    materialConstant = MATERIAL_CONSTANT;\n    commonConstant = COMMON_CONSTANT;\n    customRangeConstant = CUSTOM_RANGE_CONSTANT_EXCLUSIVE_DATE;\n\n    materialFormFieldAppearance = MaterialFormFieldAppearance;\n    buttonLabelEnum = ButtonLabelEnum;\n    dropdownTypeEnum = DropdownTypeEnum;\n    dateFormatEnum = DateFormatEnum;\n    dateInputTypeEnum = DateInputTypeEnum;\n    dateTypeEnum = DateTypeEnum;\n\n    orgID: any;\n    timezone: string;\n    startDate: string;\n    endDate: string;\n    aggDuration: string;\n    entityID: any;\n    deviceID: any;\n    paramMetric: any[] = [];\n    parameterList: any;\n    metricListArray: any[] = [];\n    timestamp: any;\n    renderTable: any;\n    reportData: any;\n    showAlert: boolean = false;\n    showLoader: boolean = false;\n\n    parameterM = [new Parameter()];\n    reportAlertObj: AlertM = new Alert();\n\n    @ViewChild('customDateInput') customDateInput: DateInputComponent;\n    @ViewChild('aggDurationInput') aggDurationInput: AggregationDurationComponent;\n    @ViewChild('entityInput') entityInput: EntityComponent;\n    @ViewChild('deviceInput') deviceInput: DeviceComponent;\n    @ViewChild('paramInput') paramInput: ParamMetricComponent;\n    @ViewChild('aggInput') aggInput: AggregationComponent;\n\n    constructor(\n        private storageService: StorageService,\n        private toastService: ToastrService,\n        private tscCommonService: TSCCommonService,\n        private aggregateDataService: AggregateDataService,\n        private parameterService: ParameterService,\n        private reportService: ReportService,\n        private alertService: AlertService\n    ) { }\n\n    ngOnInit(): void {\n        this.orgID = this.storageService.getStorage('currentOrgID');\n        this.timezone = this.storageService.getStorage('timezone');\n\n        this.getParameterByLayoutID();\n    }\n\n    async getParameterByLayoutID() {\n        this.parameterM = <ParameterM[]>await this.parameterService.getParameterByLayoutID(this.orgID);\n    }\n\n    dateInpChange() {\n        this.startDate = this.customDateInput.startDateFC.value;\n        this.endDate = this.customDateInput.endDateFC.value;\n    }\n\n    aggDurationInpChange() {\n        this.aggDuration = this.aggDurationInput.aggDurationFC.value;\n    }\n\n    entityInpChange() {\n        this.entityID = this.entityInput.entityFC.value;\n\n        this.paramInput?.parameterFC.reset();\n        this.paramInput?.parameterFC.updateValueAndValidity();\n        this.parameterList = [];\n    }\n\n    deviceInpChange() {\n        this.deviceID = this.deviceInput.deviceFC.value;\n\n        this.paramInput?.parameterFC.reset();\n        this.paramInput?.parameterFC.updateValueAndValidity();\n        this.parameterList = [];\n    }\n\n    paramInpChange() {\n        this.paramMetric = this.paramInput?.parameterFC.value;\n\n        if (this.paramMetric?.length > 0) {\n            this.parameterList = this.tscCommonService.removeSelectAllID(this.paramMetric);\n        }\n    }\n\n    aggInpChange(dsAgg?: any, metric?: any) {\n        const metricList: any[] = [];\n\n        if (dsAgg) {\n            dsAgg.forEach(aggregation => {\n                const metricObject = {\n                    name: metric,\n                    dsAgg: aggregation,\n                    agg: \"avg\"\n                };\n                metricList.push(metricObject);\n            });\n        }\n\n        this.metricListArray = this.metricListArray.filter(entry => entry.name != metric);\n\n        this.metricListArray.push(...metricList);\n    }\n\n    async viewReport() {\n\n        this.alertService.resetAlertProperties(this.reportAlertObj);\n\n        if (this.isValidInputField()) {\n            this.toastService.openToast(InvalidForm.INVALID_FORM_TITLE, InvalidForm.INVALID_FORM_MESSAGE, ToastrColor.ERROR);\n            return;\n        }\n\n        if (this.startDate == this.endDate) {\n            this.alertService.setAlertProperties(this.reportAlertObj, ReportErrorEnum.INVALID_DATE_LABEL, ReportErrorEnum.INVALID_DATE_MESSAGE, MessageAlertTypeEnum.INFO, MessageAlertIconEnum.INFO_ICON);\n            return;\n        }\n\n        this.showLoader = true;\n\n        try {\n            const requestData = this.createDataRequest();\n\n            this.reportData = await this.aggregateDataService.getAggregateData(this.orgID, requestData);\n\n            if (this.reportData?.length > 0) {\n                this.timestamp = this.reportService.extractTimestamp(this.reportData);\n                this.renderTable = this.reportService.populateTable(this.timestamp, this.reportData, this.dateFormatEnum.DATE_TIME);\n            } else if (this.reportData?.length == 0) {\n                this.alertService.setAlertProperties(this.reportAlertObj, ReportErrorEnum.DATA_NOT_FOUND_LABEL, ReportErrorEnum.DATA_NOT_FOUND_MESSAGE, MessageAlertTypeEnum.WARNING, MessageAlertIconEnum.WARNING_ICON);\n            }\n\n        } catch (error) {\n            console.error(\"Error in viewReport()\", error);\n            this.alertService.setAlertProperties(this.reportAlertObj, ReportErrorEnum.INVALID_ERROR_LABEL, ReportErrorEnum.INVALID_ERROR_MESSAGE, MessageAlertTypeEnum.DANGER, MessageAlertIconEnum.DANGER_ICON);\n        } finally {\n            this.showLoader = false;\n        }\n    }\n\n    createDataRequest() {\n\n        const filteredMetricListArray = this.metricListArray.filter(metric => this.parameterList.includes(metric.name));\n\n        const requestData = new AggregateDataRequest();\n\n        requestData.startTime = this.startDate;\n        requestData.endTime = this.endDate;\n        requestData.interval = this.aggDuration;\n        requestData.entityID = [this.entityID];\n        requestData.deviceID = [this.deviceID];\n        requestData.params = [];\n        requestData.params.push(\n            ...filteredMetricListArray.map(metric => ({\n                name: metric.name,\n                dsAgg: metric.dsAgg,\n                agg: metric.agg,\n            }))\n        );\n        requestData.nullifyParams();\n\n        return requestData;\n    }\n\n    isValidInputField() {\n        const controls = [\n            this.customDateInput.startDateFC,\n            this.aggDurationInput.aggDurationFC,\n            this.entityInput.entityFC,\n            this.deviceInput.deviceFC,\n            this.paramInput.parameterFC\n        ];\n\n        controls.forEach(control => control.markAsTouched());\n        return controls.some(control => control.invalid);\n    }\n\n    getParameterLabel(paramMetricValue) {\n        const parameter = this.tscCommonService.getUniqueObject(this.parameterM, 'paramMetric', paramMetricValue);\n        return parameter ? parameter.label : '';\n    }\n\n}","<div class=\"card main-card cardOverwrite h100\">\n    <div class=\"headerContainer\">\n        <div class=\"headerLeftContainer\">\n            <div class=\"pageTitle\">Parameter Report</div>\n        </div>\n    </div>\n\n    <div class=\"card-body\">\n        <div class=\"row\">\n            <div class=\"col-sm-3\">\n                <lib-date-input #customDateInput (emitFilter)=\"dateInpChange()\" [materialFieldWidthInp]=\"true\"\n                    [materialFormFieldAppearanceInp]=\"materialFormFieldAppearance.FORM_FIELD_APPEARANCE\"\n                    [isMandatoryFieldInp]=\"true\" [dateInputTypeInp]=\"dateInputTypeEnum.CUSTOM_INPUT\"\n                    [dateTypeInp]=\"dateTypeEnum.EXCLUSIVE\" [showDefaultDurationInp]=\"true\" [showCdrRangeLabelInp]=\"true\"\n                    [labelInp]=\"'Select date'\" [timezoneInp]=\"timezone\" [rangeInp]=\"customRangeConstant\" [showTimeInCDRInp]=\"true\"\n                    [showRangeInp]=\"true\" [cdrFormatInp]=\"'YYYY-MM-DD HH:mm:ss'\"></lib-date-input>\n            </div>\n\n            <div class=\"col-sm-3\">\n                <lib-aggregation-duration #aggDurationInput\n                    (emitFilter)=\"aggDurationInpChange()\"></lib-aggregation-duration>\n            </div>\n\n            <div class=\"col-sm-3\">\n                <lib-entity #entityInput (emitFilter)=\"entityInpChange()\"></lib-entity>\n            </div>\n\n            <div class=\"col-sm-3\">\n                <lib-device #deviceInput [dropdownTypeInp]=\"dropdownTypeEnum.SINGLE_DROPDOWN\" [entityInp]=\"entityID\"\n                    (emitFilter)=\"deviceInpChange()\"></lib-device>\n            </div>\n        </div>\n\n        <div class=\"row\">\n            <div class=\"col-sm-3\">\n                <lib-param-metric #paramInput [deviceInp]=\"deviceID\" (emitFilter)=\"paramInpChange()\"></lib-param-metric>\n            </div>\n        </div>\n\n        <div class=\"row\" *ngIf=\"paramMetric && paramMetric.length > 0\">\n            <table class=\"table\">\n                <tbody>\n                    <tr class=\"tableHeader\">\n                        <td align=\"center\" class=\"fw-bold\"> Metric </td>\n                        <td align=\"center\" class=\"fw-bold\"> Aggregation </td>\n                    </tr>\n                </tbody>\n                <tbody>\n                    <tr *ngFor=\"let metric of parameterList; let i = index\">\n                        <td align=\"center\">\n                            <div class=\"mt-4\">\n                                {{ getParameterLabel(metric) }}\n                            </div>\n                        </td>\n                        <td align=\"center\">\n                            <div class=\"col-sm-6 mt-3\">\n                                <lib-aggregation #aggInput\n                                    (emitFilter)=\"aggInpChange(aggInput.aggregationFC.value, metric)\"></lib-aggregation>\n                            </div>\n                        </td>\n                    </tr>\n                </tbody>\n            </table>\n        </div>\n\n        <div class=\"row\">\n            <div class=\"col-sm-12\">\n                <div class=\"float-end\">\n                    <button class=\"btn btn-sm btn-primary\" type=\"button\" (click)=\"viewReport()\" matRipple\n                        [matRippleCentered]=\"materialConstant.MAT_RIPPLE_CENTER\">\n                        {{ buttonLabelEnum.READ_BTN_LABEL }}\n                    </button>\n                </div>\n            </div>\n        </div>\n\n        <div class=\"row\">\n            <div class=\"col-sm-12\">\n                <lib-message-alert *ngIf=\"reportAlertObj.showAlert\" [labelInp]=\"reportAlertObj.alertLabel\"\n                    [contentInp]=\"reportAlertObj.alertContent\" [messageAlertTypeInp]=\"reportAlertObj.messageAlertType\"\n                    [messageAlertIconInp]=\"reportAlertObj.messageAlertIcon\">\n                </lib-message-alert>\n            </div>\n        </div>\n\n        <div class=\"row\">\n            <div class=\"centerAlign\">\n                <lib-skeleton-loader *ngIf=\"showLoader\" [count]=\"3\" [appearance]=\"'circle'\"\n                    [theme]=\"{ height: '15px', width: '15px', 'background-color': '#e7ebf3' }\"></lib-skeleton-loader>\n            </div>\n        </div>\n\n        <div class=\"row mt-3\" *ngIf=\"reportData && reportData.length > 0\">\n            <div class=\"overflowX customScrollBar\">\n                <table class=\"table\">\n                    <tbody>\n                        <tr class=\"tableHeader\">\n                            <td class=\"fw-bold\"> Sr. No. </td>\n                            <td align=\"center\" class=\"fw-bold\"> Time </td>\n                            <ng-container *ngFor=\"let data of reportData; let i = index\">\n                                <td align=\"center\" class=\"fw-bold\">\n                                    {{ data.paramLabel }} ({{ data.unit }}) ({{ data.dsAgg }})\n                                </td>\n                            </ng-container>\n                        </tr>\n                    </tbody>\n                    <tbody>\n                        <tr *ngFor=\"let row of renderTable\">\n                            <td>{{ row.index }}</td>\n                            <td align=\"center\" class=\"colWidthContainingDateTime\">{{ row.time }}</td>\n                            <td align=\"center\" *ngFor=\"let value of row.data\">{{ value ? value : commonConstant.HYPHEN\n                                }}\n                            </td>\n                        </tr>\n                    </tbody>\n                </table>\n            </div>\n        </div>\n    </div>\n</div>","import { NgModule } from '@angular/core';\nimport { RouterModule, Routes } from '@angular/router';\n\nimport { ParameterReportComponent } from './parameter.component';\n\nconst routes: Routes = [\n    {\n        path: '',\n        component: ParameterReportComponent\n    }\n];\n\n@NgModule({\n    imports: [RouterModule.forChild(routes)],\n    exports: [RouterModule]\n})\n\nexport class ParameterReportRoutingModule { }\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\n\nimport { ParameterReportRoutingModule } from './parameter-routing.module';\nimport { ParameterReportComponent } from './parameter.component';\n\nimport { AggregationDurationModule } from '../../dropdown/aggregation-duration/aggregation-duration.module';\nimport { EntityModule } from '../../dropdown/entity/entity.module';\nimport { DeviceModule } from '../../dropdown/device/device.module';\nimport { ParamMetricModule } from '../../dropdown/param-metric/param-metric.module';\nimport { AggregationModule } from '../../dropdown/aggregation/aggregation.module';\n\nimport { MatTableModule } from '@angular/material/table';\nimport { MatRippleModule } from '@angular/material/core';\n\n// tsc-library\nimport { DateInputModule } from '@library/date';\nimport { MessageAlertModule, SkeletonModule } from '@library/tsc-common';\n// /tsc-library/\n\n@NgModule({\n    declarations: [\n        ParameterReportComponent\n    ],\n    imports: [\n        CommonModule,\n        ParameterReportRoutingModule,\n        DateInputModule,\n        AggregationDurationModule,\n        EntityModule,\n        DeviceModule,\n        ParamMetricModule,\n        AggregationModule,\n        SkeletonModule,\n        MessageAlertModule,\n        MatTableModule,\n        MatRippleModule\n    ]\n})\nexport class ParameterReportModule { }\n","import { Component, OnInit, ViewChild } from '@angular/core';\n\nimport * as moment from 'moment-timezone';\n\nimport { DropdownTypeEnum } from '../../../enum/dropdown.enum';\nimport { ReportErrorEnum } from '../../../enum/error.enum';\n\nimport { Parameter, ParameterM } from '../../../model/parameter.model';\nimport { Alert, AlertM } from '../../../model/alert.model';\nimport { AggregateDataRequest } from '../../../model/aggregate-data.model';\n\nimport { EntityComponent } from '../../dropdown/entity/entity.component';\nimport { DeviceComponent } from '../../dropdown/device/device.component';\n\nimport { AggregateDataService } from '../../../service/aggregate-data.service';\nimport { ParameterService } from '../../../service/parameter.service';\nimport { ReportService } from '../../../service/report.service';\nimport { AlertService } from '../../../service/alert.service';\n\n// tsc-library\nimport { CUSTOM_RANGE_CONSTANT_EXCLUSIVE_DATE, DateFormatEnum, DateInputComponent, DateInputTypeEnum, DateTypeEnum } from '@library/date';\nimport { StorageService } from '@library/storage-service';\nimport { ToastrColor, ToastrService } from '@library/toastr-service';\nimport { ButtonLabelEnum, COMMON_CONSTANT, InvalidForm, MATERIAL_CONSTANT, MaterialFormFieldAppearance, MessageAlertIconEnum, MessageAlertTypeEnum, TSCCommonService } from '@library/tsc-common';\n// /tsc-library/\n\n\n@Component({\n    selector: 'lib-raw-data',\n    templateUrl: './raw-data.component.html',\n    styles: [\n    ]\n})\nexport class RawDataReportComponent implements OnInit {\n\n    materialConstant = MATERIAL_CONSTANT;\n    commonConstant = COMMON_CONSTANT;\n    customRangeConstant = CUSTOM_RANGE_CONSTANT_EXCLUSIVE_DATE;\n\n    materialFormFieldAppearance = MaterialFormFieldAppearance;\n    buttonLabelEnum = ButtonLabelEnum;\n    dropdownTypeEnum = DropdownTypeEnum;\n    dateFormatEnum = DateFormatEnum;\n    dateInputTypeEnum = DateInputTypeEnum;\n    dateTypeEnum = DateTypeEnum;\n\n    orgID: any;\n    timezone: string;\n    startDate: string;\n    endDate: string;\n    entityID: any;\n    deviceID: any;\n    dayDifference: any;\n    timestamp: any;\n    renderTable: any;\n    reportData: any;\n    showAlert: boolean = false;\n    showLoader: boolean = false;\n\n    parameterM = [new Parameter()];\n    reportAlertObj: AlertM = new Alert();\n\n    @ViewChild('customDateInput') customDateInput: DateInputComponent;\n    @ViewChild('entityInput') entityInput: EntityComponent;\n    @ViewChild('deviceInput') deviceInput: DeviceComponent;\n\n    constructor(\n        private storageService: StorageService,\n        private toastService: ToastrService,\n        private tscCommonService: TSCCommonService,\n        private aggregateDataService: AggregateDataService,\n        private parameterService: ParameterService,\n        private reportService: ReportService,\n        private alertService: AlertService\n    ) { }\n\n    ngOnInit(): void {\n        this.orgID = this.storageService.getStorage('currentOrgID');\n        this.timezone = this.storageService.getStorage('timezone');\n    }\n\n    dateInpChange() {\n        this.startDate = this.customDateInput.startDateFC.value;\n        this.endDate = this.customDateInput.endDateFC.value;\n    }\n\n    entityInpChange() {\n        this.entityID = this.entityInput.entityFC.value;\n    }\n\n    deviceInpChange() {\n        this.deviceID = this.deviceInput.deviceFC.value;\n\n        if (this.deviceID) {\n            this.getParameterByDeviceID(this.deviceID);\n        }\n    }\n\n    async getParameterByDeviceID(deviceID) {\n        let requestBody = {};\n        requestBody['deviceID'] = [deviceID];\n\n        this.parameterM = <ParameterM[]>await this.parameterService.getParameterByDeviceID(this.orgID, requestBody);\n    }\n\n    async viewReport() {\n\n        this.alertService.resetAlertProperties(this.reportAlertObj);\n\n        if (!this.parameterM || this.parameterM.length == 0 || !this.parameterM[0]['id']) {\n            await this.getParameterByDeviceID(this.deviceID);\n        }\n\n        if (this.isValidInputField()) {\n            this.toastService.openToast(InvalidForm.INVALID_FORM_TITLE, InvalidForm.INVALID_FORM_MESSAGE, ToastrColor.ERROR);\n            return;\n        }\n\n        if (this.startDate == this.endDate) {\n            this.alertService.setAlertProperties(this.reportAlertObj, ReportErrorEnum.INVALID_DATE_LABEL, ReportErrorEnum.INVALID_DATE_MESSAGE, MessageAlertTypeEnum.INFO, MessageAlertIconEnum.INFO_ICON);\n            return;\n        }\n\n        this.dayDifference = this.getTimeDifference(this.startDate, this.endDate);\n\n        if (this.dayDifference <= 1) {\n\n            try {\n                this.showLoader = true;\n\n                const requestData = this.createDataRequest();\n\n                this.reportData = await this.aggregateDataService.getAggregateData(this.orgID, requestData);\n\n                if (this.reportData?.length > 0) {\n                    this.timestamp = this.reportService.extractTimestamp(this.reportData);\n                    this.renderTable = this.reportService.populateTable(this.timestamp, this.reportData, this.dateFormatEnum.DATE_TIME);\n                } else if (this.reportData?.length == 0) {\n                    this.alertService.setAlertProperties(this.reportAlertObj, ReportErrorEnum.DATA_NOT_FOUND_LABEL, ReportErrorEnum.DATA_NOT_FOUND_MESSAGE, MessageAlertTypeEnum.WARNING, MessageAlertIconEnum.WARNING_ICON);\n                }\n\n            } catch (error) {\n                console.error(\"Error in viewReport()\", error);\n                this.alertService.setAlertProperties(this.reportAlertObj, ReportErrorEnum.INVALID_ERROR_LABEL, ReportErrorEnum.INVALID_ERROR_MESSAGE, MessageAlertTypeEnum.DANGER, MessageAlertIconEnum.DANGER_ICON);\n            } finally {\n                this.showLoader = false;\n            }\n\n        } else {\n            this.alertService.setAlertProperties(this.reportAlertObj, ReportErrorEnum.TIME_EXCEEDED_LABEL, ReportErrorEnum.TIME_EXCEEDED_MESSAGE, MessageAlertTypeEnum.INFO, MessageAlertIconEnum.INFO_ICON);\n        }\n\n    }\n\n    createDataRequest() {\n        const requestData = new AggregateDataRequest();\n\n        requestData.startTime = this.startDate;\n        requestData.endTime = this.endDate;\n        requestData.interval = \"raw\";\n        requestData.entityID = [this.entityID];\n        requestData.deviceID = [this.deviceID];\n\n        requestData.params = this.parameterM.map(param => ({\n            name: param.paramMetric,\n            dsAgg: 'avg',\n            agg: 'avg'\n        }));\n        requestData.nullifyParams();\n\n        return requestData;\n    }\n\n    isValidInputField() {\n        const controls = [\n            this.customDateInput.startDateFC,\n            this.entityInput.entityFC,\n            this.deviceInput.deviceFC,\n        ];\n\n        controls.forEach(control => control.markAsTouched());\n        return controls.some(control => control.invalid);\n    }\n\n    getTimeDifference(startTime: string, endTime: string): number {\n        const date1 = new Date(startTime).getTime();\n        const date2 = new Date(endTime).getTime();\n        const diffTime = Math.abs(date2 - date1);\n        const diffDays = Math.ceil(diffTime / (1000 * 60 * 60 * 24));\n        return diffDays;\n    }\n\n}\n","<div class=\"card main-card cardOverwrite h100\">\n    <div class=\"headerContainer\">\n        <div class=\"headerLeftContainer\">\n            <div class=\"pageTitle\">Raw Data Report</div>\n        </div>\n    </div>\n\n    <div class=\"card-body\">\n        <div class=\"row\">\n            <div class=\"col-sm-3\">\n                <lib-date-input #customDateInput (emitFilter)=\"dateInpChange()\" [materialFieldWidthInp]=\"true\"\n                    [materialFormFieldAppearanceInp]=\"materialFormFieldAppearance.FORM_FIELD_APPEARANCE\"\n                    [isMandatoryFieldInp]=\"true\" [dateInputTypeInp]=\"dateInputTypeEnum.CUSTOM_INPUT\"\n                    [dateTypeInp]=\"dateTypeEnum.EXCLUSIVE\" [showDefaultDurationInp]=\"true\" [showCdrRangeLabelInp]=\"true\"\n                    [labelInp]=\"'Select date'\" [timezoneInp]=\"timezone\" [rangeInp]=\"customRangeConstant\" [showTimeInCDRInp]=\"true\"\n                    [showRangeInp]=\"true\" [cdrFormatInp]=\"'YYYY-MM-DD HH:mm:ss'\"></lib-date-input>\n            </div>\n\n            <div class=\"col-sm-3\">\n                <lib-entity #entityInput (emitFilter)=\"entityInpChange()\"></lib-entity>\n            </div>\n\n            <div class=\"col-sm-3\">\n                <lib-device #deviceInput [dropdownTypeInp]=\"dropdownTypeEnum.SINGLE_DROPDOWN\" [entityInp]=\"entityID\"\n                    (emitFilter)=\"deviceInpChange()\"></lib-device>\n            </div>\n        </div>\n\n        <div class=\"row\">\n            <div class=\"col-sm-12\">\n                <div class=\"float-end\">\n                    <button class=\"btn btn-sm btn-primary\" type=\"button\" (click)=\"viewReport()\" matRipple\n                        [matRippleCentered]=\"materialConstant.MAT_RIPPLE_CENTER\">\n                        {{ buttonLabelEnum.READ_BTN_LABEL }}\n                    </button>\n                </div>\n            </div>\n        </div>\n\n        <div class=\"row\">\n            <div class=\"col-sm-12\">\n                <lib-message-alert *ngIf=\"reportAlertObj.showAlert\" [labelInp]=\"reportAlertObj.alertLabel\"\n                    [contentInp]=\"reportAlertObj.alertContent\" [messageAlertTypeInp]=\"reportAlertObj.messageAlertType\"\n                    [messageAlertIconInp]=\"reportAlertObj.messageAlertIcon\">\n                </lib-message-alert>\n            </div>\n        </div>\n\n        <div class=\"row\">\n            <div class=\"centerAlign\">\n                <lib-skeleton-loader *ngIf=\"showLoader\" [count]=\"3\" [appearance]=\"'circle'\"\n                    [theme]=\"{ height: '15px', width: '15px', 'background-color': '#e7ebf3' }\"></lib-skeleton-loader>\n            </div>\n        </div>\n\n        <div class=\"row mt-3\" *ngIf=\"reportData && reportData.length > 0\">\n            <div class=\"overflowX customScrollBar\">\n                <table class=\"table\">\n                    <tbody>\n                        <tr class=\"tableHeader\">\n                            <td class=\"fw-bold\"> Sr. No. </td>\n                            <td align=\"center\" class=\"fw-bold\"> Time </td>\n                            <ng-container *ngFor=\"let data of reportData; let i = index\">\n                                <td align=\"center\" class=\"fw-bold\">\n                                    {{ data.paramLabel }} ({{ data.unit }}) ({{ data.dsAgg }})\n                                </td>\n                            </ng-container>\n                        </tr>\n                    </tbody>\n                    <tbody>\n                        <tr *ngFor=\"let row of renderTable\">\n                            <td>{{ row.index }}</td>\n                            <td align=\"center\" class=\"colWidthContainingDateTime\">{{ row.time }}</td>\n                            <td align=\"center\" *ngFor=\"let value of row.data\">{{ value ? value : commonConstant.HYPHEN\n                                }}\n                            </td>\n                        </tr>\n                    </tbody>\n                </table>\n            </div>\n        </div>\n    </div>\n</div>","import { NgModule } from '@angular/core';\nimport { RouterModule, Routes } from '@angular/router';\n\nimport { RawDataReportComponent } from './raw-data.component';\n\nconst routes: Routes = [\n    {\n        path: '',\n        component: RawDataReportComponent\n    }\n];\n\n@NgModule({\n    imports: [RouterModule.forChild(routes)],\n    exports: [RouterModule]\n})\n\nexport class RawDataReportRoutingModule { }\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\n\nimport { RawDataReportRoutingModule } from './raw-data-routing.module';\nimport { RawDataReportComponent } from './raw-data.component';\n\nimport { EntityModule } from '../../dropdown/entity/entity.module';\nimport { DeviceModule } from '../../dropdown/device/device.module';\n\nimport { MatTableModule } from '@angular/material/table';\nimport { MatRippleModule } from '@angular/material/core';\n\n// tsc-library\nimport { DateInputModule } from '@library/date';\nimport { MessageAlertModule, SkeletonModule } from '@library/tsc-common';\n// /tsc-library/\n\n@NgModule({\n    declarations: [\n        RawDataReportComponent\n    ],\n    imports: [\n        CommonModule,\n        RawDataReportRoutingModule,\n        DateInputModule,\n        EntityModule,\n        DeviceModule,\n        SkeletonModule,\n        MessageAlertModule,\n        MatTableModule,\n        MatRippleModule\n    ]\n})\nexport class RawDataReportModule { }\n","import { Component, OnInit, ViewChild } from '@angular/core';\nimport { FormControl, Validators } from '@angular/forms';\n\nimport * as moment from 'moment-timezone';\n\nimport { DropdownTypeEnum } from '../../../enum/dropdown.enum';\nimport { ReportErrorEnum } from '../../../enum/error.enum';\n\nimport { AggregateDataRequest } from '../../../model/aggregate-data.model';\nimport { Parameter, ParameterM } from '../../../model/parameter.model';\nimport { Entity, EntityM } from '../../../model/entity.model';\nimport { Alert, AlertM } from '../../../model/alert.model';\n\nimport { AggregationDurationComponent } from '../../dropdown/aggregation-duration/aggregation-duration.component';\n\nimport { AggregateDataService } from '../../../service/aggregate-data.service';\nimport { ParameterService } from '../../../service/parameter.service';\nimport { EntityService } from '../../../service/entity.service';\nimport { ReportService } from '../../../service/report.service';\nimport { AlertService } from '../../../service/alert.service';\n\n// tsc-library\nimport { CUSTOM_RANGE_CONSTANT_EXCLUSIVE_DATE, DateFormatEnum, DateInputComponent, DateInputTypeEnum, DateTypeEnum } from '@library/date';\nimport { StorageService } from '@library/storage-service';\nimport { ToastrColor, ToastrService } from '@library/toastr-service';\nimport { ButtonLabelEnum, COMMON_CONSTANT, InvalidForm, MATERIAL_CONSTANT, MatSelectSearchService, MaterialFormFieldAppearance, MessageAlertIconEnum, MessageAlertTypeEnum, TSCCommonService } from '@library/tsc-common';\n// /tsc-library/\n\n@Component({\n    selector: 'lib-derived-parameter',\n    templateUrl: './derived-parameter.component.html',\n    styles: [\n    ]\n})\nexport class DerivedParameterComponent implements OnInit {\n\n    materialConstant = MATERIAL_CONSTANT;\n    commonConstant = COMMON_CONSTANT;\n    customRangeConstant = CUSTOM_RANGE_CONSTANT_EXCLUSIVE_DATE;\n\n    materialFormFieldAppearance = MaterialFormFieldAppearance;\n    buttonLabelEnum = ButtonLabelEnum;\n    dropdownTypeEnum = DropdownTypeEnum;\n    dateFormatEnum = DateFormatEnum;\n    dateInputTypeEnum = DateInputTypeEnum;\n    dateTypeEnum = DateTypeEnum;\n\n    orgID: any;\n    timezone: string;\n    startDate: string;\n    endDate: string;\n    aggDuration: string;\n    timestamp: any;\n    renderTable: any;\n    reportData: any;\n    selectedParamMetric: any;\n    showAlert: boolean = false;\n    showLoader: boolean = false;\n    totalParameterCount: number = 0;\n    allParameterID: any[] = [];\n\n    parameterM = [new Parameter()];\n    entityM = [new Entity()];\n\n    parameterFC: FormControl = new FormControl([], [Validators.required]);\n    entityFC: FormControl = new FormControl([], [Validators.required]);\n\n    paramSearchUtil: MatSelectSearchService = new MatSelectSearchService(['label']);\n    entitySearchUtil: MatSelectSearchService = new MatSelectSearchService(['name']);\n\n    reportAlertObj: AlertM = new Alert();\n\n    @ViewChild('customDateInput') customDateInput: DateInputComponent;\n    @ViewChild('aggDurationInput') aggDurationInput: AggregationDurationComponent;\n\n    constructor(\n        private storageService: StorageService,\n        private toastService: ToastrService,\n        private tscCommonService: TSCCommonService,\n        private aggregateDataService: AggregateDataService,\n        private parameterService: ParameterService,\n        private entityService: EntityService,\n        private reportService: ReportService,\n        private alertService: AlertService\n    ) { }\n\n    ngOnInit(): void {\n        this.orgID = this.storageService.getStorage('currentOrgID');\n        this.timezone = this.storageService.getStorage('timezone');\n\n        this.getDerivedParameterByLayoutID();\n    }\n\n    dateInpChange() {\n        this.startDate = this.customDateInput.startDateFC.value;\n        this.endDate = this.customDateInput.endDateFC.value;\n    }\n\n    aggDurationInpChange() {\n        this.aggDuration = this.aggDurationInput.aggDurationFC.value;\n    }\n\n    async getDerivedParameterByLayoutID() {\n        this.parameterM = <ParameterM[]>await this.parameterService.getDerivedParameterByLayoutID(this.orgID);\n\n        this.paramSearchUtil.entityArr = this.parameterM;\n        this.paramSearchUtil.createSubscription();\n\n        this.totalParameterCount = this.parameterM.length;\n        this.parameterM.forEach(parameter => this.allParameterID.push(parameter['paramMetric']));\n    }\n\n    selectAllParameters() {\n        if (!this.parameterFC.value.includes(-1)) {\n            this.parameterFC.reset([]);\n            return;\n        }\n        this.parameterFC.setValue([-1, ...this.allParameterID]);\n\n        this.getEntityByParameterID();\n    }\n\n    selectedParameters() {\n        const selected = this.parameterFC.value;\n\n        if (selected.includes(-1)) {\n            selected.shift();\n            this.parameterFC.patchValue(selected);\n        } else if (this.parameterFC.value.length == this.totalParameterCount) {\n            this.allParameterID.splice(0, 0, -1);\n            this.parameterFC.patchValue(this.allParameterID);\n        } else {\n            const filteredSelected = selected.filter(s => s != -1);\n            this.parameterFC.patchValue(filteredSelected);\n        }\n\n        this.getEntityByParameterID();\n    }\n\n    async getEntityByParameterID() {\n\n        this.entityFC.reset();\n\n        this.selectedParamMetric = this.tscCommonService.removeSelectAllID(this.parameterFC.value);\n        let parameter = this.parameterM.filter(param => this.selectedParamMetric.includes(param.paramMetric));\n        let parameterID = parameter.map(param => param.id);\n\n        let requestBody = {};\n        requestBody['parameterID'] = parameterID;\n\n        this.entityM = <EntityM[]>await this.entityService.getEntityByParameterID(this.orgID, requestBody);\n\n        this.entitySearchUtil.entityArr = this.entityM;\n        this.entitySearchUtil.createSubscription();\n    }\n\n    entityChange(selectedEntity) {\n        this.entityFC.patchValue(selectedEntity);\n    }\n\n    async viewReport() {\n\n        this.alertService.resetAlertProperties(this.reportAlertObj);\n\n        if (this.isValidInputField()) {\n            this.toastService.openToast(InvalidForm.INVALID_FORM_TITLE, InvalidForm.INVALID_FORM_MESSAGE, ToastrColor.ERROR);\n            return;\n        }\n\n        if (this.startDate == this.endDate) {\n            this.alertService.setAlertProperties(this.reportAlertObj, ReportErrorEnum.INVALID_DATE_LABEL, ReportErrorEnum.INVALID_DATE_MESSAGE, MessageAlertTypeEnum.INFO, MessageAlertIconEnum.INFO_ICON);\n            return;\n        }\n\n        this.showLoader = true;\n\n        try {\n            const requestData = this.createDataRequest();\n\n            this.reportData = await this.aggregateDataService.getAggregateData(this.orgID, requestData);\n\n            if (this.reportData?.length > 0) {\n                this.timestamp = this.reportService.extractTimestamp(this.reportData);\n                this.renderTable = this.reportService.populateTable(this.timestamp, this.reportData, this.dateFormatEnum.DATE_TIME);\n            } else if (this.reportData?.length == 0) {\n                this.alertService.setAlertProperties(this.reportAlertObj, ReportErrorEnum.DATA_NOT_FOUND_LABEL, ReportErrorEnum.DATA_NOT_FOUND_MESSAGE, MessageAlertTypeEnum.WARNING, MessageAlertIconEnum.WARNING_ICON);\n            }\n\n        } catch (error) {\n            console.error(\"Error in viewReport()\", error);\n            this.alertService.setAlertProperties(this.reportAlertObj, ReportErrorEnum.INVALID_ERROR_LABEL, ReportErrorEnum.INVALID_ERROR_MESSAGE, MessageAlertTypeEnum.DANGER, MessageAlertIconEnum.DANGER_ICON);\n        } finally {\n            this.showLoader = false;\n        }\n    }\n\n    createDataRequest() {\n\n        const requestData = new AggregateDataRequest();\n\n        requestData.startTime = this.startDate;\n        requestData.endTime = this.endDate;\n        requestData.interval = this.aggDuration;\n        requestData.entityID = [this.entityFC.value];\n        requestData.params = [];\n        for (const paramMetric of this.selectedParamMetric) {\n            requestData.params.push({\n                name: paramMetric,\n                dsAgg: \"sum\",\n                agg: \"sum\"\n            });\n        }\n        requestData.nullifyParams();\n\n        return requestData;\n    }\n\n    isValidInputField() {\n        const controls = [\n            this.customDateInput.startDateFC,\n            this.aggDurationInput.aggDurationFC,\n            this.parameterFC,\n            this.entityFC\n        ];\n\n        controls.forEach(control => control.markAsTouched());\n        return controls.some(control => control.invalid);\n    }\n\n}\n","<div class=\"card main-card cardOverwrite h100\">\n    <div class=\"headerContainer\">\n        <div class=\"headerLeftContainer\">\n            <div class=\"pageTitle\">Derived Parameter Report</div>\n        </div>\n    </div>\n\n    <div class=\"card-body\">\n        <div class=\"row\">\n            <div class=\"col-sm-3\">\n                <lib-date-input #customDateInput (emitFilter)=\"dateInpChange()\" [materialFieldWidthInp]=\"true\"\n                    [materialFormFieldAppearanceInp]=\"materialFormFieldAppearance.FORM_FIELD_APPEARANCE\"\n                    [isMandatoryFieldInp]=\"true\" [dateInputTypeInp]=\"dateInputTypeEnum.CUSTOM_INPUT\"\n                    [dateTypeInp]=\"dateTypeEnum.EXCLUSIVE\" [showDefaultDurationInp]=\"true\" [showCdrRangeLabelInp]=\"true\"\n                    [labelInp]=\"'Select date'\" [timezoneInp]=\"timezone\" [rangeInp]=\"customRangeConstant\" [showTimeInCDRInp]=\"true\"\n                    [showRangeInp]=\"true\" [cdrFormatInp]=\"'YYYY-MM-DD HH:mm:ss'\"></lib-date-input>\n            </div>\n\n            <div class=\"col-sm-3\">\n                <lib-aggregation-duration #aggDurationInput\n                    (emitFilter)=\"aggDurationInpChange()\"></lib-aggregation-duration>\n            </div>\n\n            <div class=\"col-sm-3\">\n                <mat-form-field class=\"matFieldWidth100\" [appearance]=\"materialFormFieldAppearance.FORM_FIELD_APPEARANCE\">\n                    <mat-label>Select parameter</mat-label>\n                    <ng-container *ngIf=\"parameterM && parameterM.length > 0 && parameterM[0]['id']; else noParameterFound\">\n                        <mat-select [formControl]=\"parameterFC\" multiple required>\n                            <ngx-mat-select-search [formControl]=\"paramSearchUtil.filterFC\" placeholderLabel=\"Search by name\"\n                                noEntriesFoundLabel=\"No matching name found.\">\n                            </ngx-mat-select-search>\n                            <mat-option [value]=\"-1\" (click)=\"selectAllParameters()\" [hidden]=\"paramSearchUtil.filterFC.value\">\n                                Select all\n                            </mat-option>\n                            <mat-option *ngFor=\"let parameter of paramSearchUtil.filteredEntities | async\"\n                                [value]=\"parameter.paramMetric\" (click)=\"selectedParameters()\">\n                                {{ parameter.label }}\n                            </mat-option>\n                        </mat-select>\n                    </ng-container>\n                    <ng-template #noParameterFound>\n                        <mat-select [formControl]=\"parameterFC\">\n                            <mat-option disabled>\n                                {{ commonConstant.NO_DATA_FOUND }}\n                            </mat-option>\n                        </mat-select>\n                    </ng-template>\n                    <mat-error *ngIf=\"parameterFC.touched && parameterFC.hasError('required')\">\n                        Select parameter\n                    </mat-error>\n                </mat-form-field>\n            </div>\n\n            <div class=\"col-sm-3\">\n                <mat-form-field class=\"matFieldWidth100\" [appearance]=\"materialFormFieldAppearance.FORM_FIELD_APPEARANCE\">\n                    <mat-label>Select entity</mat-label>\n                    <mat-select (selectionChange)=\"entityChange($event.value)\" [formControl]=\"entityFC\" required>\n                        <ng-container *ngIf=\"entityM && entityM.length > 0 && entityM[0]['id']; else noEntityFound\">\n                            <mat-option>\n                                <ngx-mat-select-search [formControl]=\"entitySearchUtil.filterFC\" placeholderLabel=\"Search by name\"\n                                    noEntriesFoundLabel=\"No matching name found.\">\n                                </ngx-mat-select-search>\n                            </mat-option>\n                            <mat-option *ngFor=\"let entity of entitySearchUtil.filteredEntities | async\" [value]=\"entity.id\">\n                                {{ entity.name }}\n                            </mat-option>\n                        </ng-container>\n                        <ng-template #noEntityFound>\n                            <mat-option disabled>\n                                {{ commonConstant.NO_DATA_FOUND }}\n                            </mat-option>\n                        </ng-template>\n                    </mat-select>\n                    <mat-error *ngIf=\"entityFC.touched && entityFC.hasError('required')\">\n                        Select entity\n                    </mat-error>\n                </mat-form-field>\n            </div>\n\n        </div>\n\n        <div class=\"row\">\n            <div class=\"col-sm-12\">\n                <div class=\"float-end\">\n                    <button class=\"btn btn-sm btn-primary\" type=\"button\" (click)=\"viewReport()\" matRipple\n                        [matRippleCentered]=\"materialConstant.MAT_RIPPLE_CENTER\">\n                        {{ buttonLabelEnum.READ_BTN_LABEL }}\n                    </button>\n                </div>\n            </div>\n        </div>\n\n        <div class=\"row\">\n            <div class=\"col-sm-12\">\n                <lib-message-alert *ngIf=\"reportAlertObj.showAlert\" [labelInp]=\"reportAlertObj.alertLabel\"\n                    [contentInp]=\"reportAlertObj.alertContent\" [messageAlertTypeInp]=\"reportAlertObj.messageAlertType\"\n                    [messageAlertIconInp]=\"reportAlertObj.messageAlertIcon\">\n                </lib-message-alert>\n            </div>\n        </div>\n\n        <div class=\"row\">\n            <div class=\"centerAlign\">\n                <lib-skeleton-loader *ngIf=\"showLoader\" [count]=\"3\" [appearance]=\"'circle'\"\n                    [theme]=\"{ height: '15px', width: '15px', 'background-color': '#e7ebf3' }\"></lib-skeleton-loader>\n            </div>\n        </div>\n\n        <div class=\"row mt-3\" *ngIf=\"reportData && reportData.length > 0\">\n            <div class=\"overflowX customScrollBar\">\n                <table class=\"table\">\n                    <tbody>\n                        <tr class=\"tableHeader\">\n                            <td class=\"fw-bold\"> Sr. No. </td>\n                            <td align=\"center\" class=\"fw-bold\"> Time </td>\n                            <ng-container *ngFor=\"let data of reportData; let i = index\">\n                                <td align=\"center\" class=\"fw-bold\">\n                                    {{ data.paramLabel }} ({{ data.unit }}) ({{ data.dsAgg }})\n                                </td>\n                            </ng-container>\n                        </tr>\n                    </tbody>\n                    <tbody>\n                        <tr *ngFor=\"let row of renderTable\">\n                            <td>{{ row.index }}</td>\n                            <td align=\"center\" class=\"colWidthContainingDateTime\">{{ row.time }}</td>\n                            <td align=\"center\" *ngFor=\"let value of row.data\">{{ value ? value : commonConstant.HYPHEN\n                                }}\n                            </td>\n                        </tr>\n                    </tbody>\n                </table>\n            </div>\n        </div>\n    </div>\n</div>","import { NgModule } from '@angular/core';\nimport { RouterModule, Routes } from '@angular/router';\n\nimport { DerivedParameterComponent } from './derived-parameter.component';\n\nconst routes: Routes = [\n    {\n        path: '',\n        component: DerivedParameterComponent\n    }\n];\n\n@NgModule({\n    imports: [RouterModule.forChild(routes)],\n    exports: [RouterModule]\n})\nexport class DerivedParameterRoutingModule { }\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\n\nimport { DerivedParameterRoutingModule } from './derived-parameter-routing.module';\nimport { DerivedParameterComponent } from './derived-parameter.component';\n\nimport { AggregationDurationModule } from '../../dropdown/aggregation-duration/aggregation-duration.module';\n\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\n\nimport { MatTableModule } from '@angular/material/table';\nimport { MatRippleModule } from '@angular/material/core';\nimport { MatInputModule } from '@angular/material/input';\nimport { MatFormFieldModule } from '@angular/material/form-field';\nimport { MatSelectModule } from '@angular/material/select';\n\nimport { NgxMatSelectSearchModule } from 'ngx-mat-select-search';\n\n// tsc-library\nimport { DateInputModule } from '@library/date';\nimport { MessageAlertModule, SkeletonModule } from '@library/tsc-common';\n// /tsc-library/\n\n@NgModule({\n    declarations: [\n        DerivedParameterComponent\n    ],\n    imports: [\n        CommonModule,\n        DerivedParameterRoutingModule,\n        FormsModule,\n        ReactiveFormsModule,\n        DateInputModule,\n        AggregationDurationModule,\n        SkeletonModule,\n        MessageAlertModule,\n        MatTableModule,\n        MatRippleModule,\n        MatInputModule,\n        MatFormFieldModule,\n        MatSelectModule,\n        NgxMatSelectSearchModule\n    ]\n})\nexport class DerivedParameterModule { }\n","import { Component, OnInit, ViewChild } from '@angular/core';\n\nimport * as moment from 'moment-timezone';\n\nimport { ReportErrorEnum } from '../../../enum/error.enum';\n\nimport { AggregateDataRequest } from '../../../model/aggregate-data.model';\nimport { Alert, AlertM } from '../../../model/alert.model';\n\nimport { SourceLoadComponent } from '../../_shared/filter/source-load/source-load.component';\nimport { AggregationDurationComponent } from '../../dropdown/aggregation-duration/aggregation-duration.component';\n\nimport { AggregateDataService } from '../../../service/aggregate-data.service';\nimport { ReportService } from '../../../service/report.service';\nimport { AlertService } from '../../../service/alert.service';\n\n// tsc-library\nimport { CUSTOM_RANGE_CONSTANT_EXCLUSIVE_DATE, DateFormatEnum, DateInputComponent, DateInputTypeEnum, DateTypeEnum } from '@library/date';\nimport { StorageService } from '@library/storage-service';\nimport { ToastrColor, ToastrService } from '@library/toastr-service';\nimport { ButtonLabelEnum, COMMON_CONSTANT, InvalidForm, MATERIAL_CONSTANT, MaterialFormFieldAppearance, MessageAlertIconEnum, MessageAlertTypeEnum, TSCCommonService } from '@library/tsc-common';\nimport { ApplicationKeyID } from '@library/application-service';\n// /tsc-library/\n\n@Component({\n    selector: 'lib-usage-across-facility',\n    templateUrl: './usage-across-facility.component.html',\n    styles: [\n    ]\n})\n\nexport class UsageAcrossFacilityComponent implements OnInit {\n\n    materialConstant = MATERIAL_CONSTANT;\n    commonConstant = COMMON_CONSTANT;\n    customRangeConstant = CUSTOM_RANGE_CONSTANT_EXCLUSIVE_DATE;\n\n    materialFormFieldAppearance = MaterialFormFieldAppearance;\n    buttonLabelEnum = ButtonLabelEnum;\n    dateFormatEnum = DateFormatEnum;\n    dateInputTypeEnum = DateInputTypeEnum;\n    dateTypeEnum = DateTypeEnum;\n\n    orgID: any;\n    applicationKeyID: any;\n    paramMetric: any;\n    timezone: string;\n    category: string;\n    startDate: string;\n    endDate: string;\n    aggDuration: string;\n    timestamp: any;\n    renderTable: any;\n    reportData: any;\n    showAlert: boolean = false;\n    showLoader: boolean = false;\n\n    reportAlertObj: AlertM = new Alert();\n\n    @ViewChild('sourceLoadInput') sourceLoadInput: SourceLoadComponent;\n    @ViewChild('customDateInput') customDateInput: DateInputComponent;\n    @ViewChild('aggDurationInput') aggDurationInput: AggregationDurationComponent;\n\n    constructor(\n        private storageService: StorageService,\n        private toastService: ToastrService,\n        private tscCommonService: TSCCommonService,\n        private aggregateDataService: AggregateDataService,\n        private reportService: ReportService,\n        private alertService: AlertService\n    ) { }\n\n    ngOnInit(): void {\n        this.orgID = this.storageService.getStorage('currentOrgID');\n        this.timezone = this.storageService.getStorage('timezone');\n        this.applicationKeyID = this.storageService.getStorage('applicationKeyID');\n\n        if (this.applicationKeyID == ApplicationKeyID.ENERGY_KEY_ID) {\n            this.paramMetric = \"engEnergyUsed\";\n        } else if (this.applicationKeyID == ApplicationKeyID.WATER_KEY_ID) {\n            this.paramMetric = \"gwFlowTotalizer\";\n        }\n    }\n\n    sourceLoadInpChange() {\n        this.category = this.sourceLoadInput.categoryFC.value;\n    }\n\n    dateInpChange() {\n        this.startDate = this.customDateInput.startDateFC.value;\n        this.endDate = this.customDateInput.endDateFC.value;\n    }\n\n    aggDurationInpChange() {\n        this.aggDuration = this.aggDurationInput.aggDurationFC.value;\n    }\n\n    async viewReport() {\n\n        this.alertService.resetAlertProperties(this.reportAlertObj);\n\n        if (this.isValidInputField()) {\n            this.toastService.openToast(InvalidForm.INVALID_FORM_TITLE, InvalidForm.INVALID_FORM_MESSAGE, ToastrColor.ERROR);\n            return;\n        }\n\n        if (this.startDate == this.endDate) {\n            this.alertService.setAlertProperties(this.reportAlertObj, ReportErrorEnum.INVALID_DATE_LABEL, ReportErrorEnum.INVALID_DATE_MESSAGE, MessageAlertTypeEnum.INFO, MessageAlertIconEnum.INFO_ICON);\n            return;\n        }\n\n        this.showLoader = true;\n\n        try {\n            const requestData = this.createDataRequest();\n\n            this.reportData = await this.aggregateDataService.getAggregateData(this.orgID, requestData);\n\n            if (this.reportData?.length > 0) {\n                this.timestamp = this.reportService.extractTimestamp(this.reportData);\n                this.renderTable = this.reportService.populateTable(this.timestamp, this.reportData, this.dateFormatEnum.DATE_TIME);\n            } else if (this.reportData?.length == 0) {\n                this.alertService.setAlertProperties(this.reportAlertObj, ReportErrorEnum.DATA_NOT_FOUND_LABEL, ReportErrorEnum.DATA_NOT_FOUND_MESSAGE, MessageAlertTypeEnum.WARNING, MessageAlertIconEnum.WARNING_ICON);\n            }\n\n        } catch (error) {\n            console.error(\"Error in viewReport()\", error);\n            this.alertService.setAlertProperties(this.reportAlertObj, ReportErrorEnum.INVALID_ERROR_LABEL, ReportErrorEnum.INVALID_ERROR_MESSAGE, MessageAlertTypeEnum.DANGER, MessageAlertIconEnum.DANGER_ICON);\n        } finally {\n            this.showLoader = false;\n        }\n    }\n\n    createDataRequest() {\n\n        const requestData = new AggregateDataRequest();\n\n        requestData.startTime = this.startDate;\n        requestData.endTime = this.endDate;\n        requestData.interval = this.aggDuration;\n        requestData.params = [\n            {\n                name: this.paramMetric,\n                dsAgg: \"sum\",\n                agg: \"sum\",\n                source_or_load: this.category,\n                sourceLoadType: 'all'\n            }\n        ];\n        requestData.nullifyParams();\n\n        return requestData;\n    }\n\n    isValidInputField() {\n        const controls = [\n            this.customDateInput.startDateFC,\n            this.aggDurationInput.aggDurationFC\n        ];\n\n        controls.forEach(control => control.markAsTouched());\n        return controls.some(control => control.invalid);\n    }\n\n}\n","<div class=\"card main-card cardOverwrite h100\">\n    <div class=\"headerContainer\">\n        <div class=\"headerLeftContainer\">\n            <div class=\"pageTitle\">Usage Across Facility Report</div>\n        </div>\n    </div>\n\n    <div class=\"card-body\">\n        <div class=\"row\">\n            <div class=\"col-sm-4\">\n                <lib-source-load #sourceLoadInput (emitFilter)=\"sourceLoadInpChange()\"></lib-source-load>\n            </div>\n        </div>\n\n        <div class=\"row mt-3\">\n            <div class=\"col-sm-3\">\n                <lib-date-input #customDateInput (emitFilter)=\"dateInpChange()\" [materialFieldWidthInp]=\"true\"\n                    [materialFormFieldAppearanceInp]=\"materialFormFieldAppearance.FORM_FIELD_APPEARANCE\"\n                    [isMandatoryFieldInp]=\"true\" [dateInputTypeInp]=\"dateInputTypeEnum.CUSTOM_INPUT\"\n                    [dateTypeInp]=\"dateTypeEnum.EXCLUSIVE\" [showDefaultDurationInp]=\"true\" [showCdrRangeLabelInp]=\"true\"\n                    [labelInp]=\"'Select date'\" [timezoneInp]=\"timezone\" [rangeInp]=\"customRangeConstant\" [showTimeInCDRInp]=\"true\"\n                    [showRangeInp]=\"true\" [cdrFormatInp]=\"'YYYY-MM-DD HH:mm:ss'\"></lib-date-input>\n            </div>\n\n            <div class=\"col-sm-3\">\n                <lib-aggregation-duration #aggDurationInput\n                    (emitFilter)=\"aggDurationInpChange()\"></lib-aggregation-duration>\n            </div>\n        </div>\n\n        <div class=\"row\">\n            <div class=\"col-sm-12\">\n                <div class=\"float-end\">\n                    <button class=\"btn btn-sm btn-primary\" type=\"button\" (click)=\"viewReport()\" matRipple\n                        [matRippleCentered]=\"materialConstant.MAT_RIPPLE_CENTER\">\n                        {{ buttonLabelEnum.READ_BTN_LABEL }}\n                    </button>\n                </div>\n            </div>\n        </div>\n\n        <div class=\"row\">\n            <div class=\"col-sm-12\">\n                <lib-message-alert *ngIf=\"reportAlertObj.showAlert\" [labelInp]=\"reportAlertObj.alertLabel\"\n                    [contentInp]=\"reportAlertObj.alertContent\" [messageAlertTypeInp]=\"reportAlertObj.messageAlertType\"\n                    [messageAlertIconInp]=\"reportAlertObj.messageAlertIcon\">\n                </lib-message-alert>\n            </div>\n        </div>\n\n        <div class=\"row\">\n            <div class=\"centerAlign\">\n                <lib-skeleton-loader *ngIf=\"showLoader\" [count]=\"3\" [appearance]=\"'circle'\"\n                    [theme]=\"{ height: '15px', width: '15px', 'background-color': '#e7ebf3' }\"></lib-skeleton-loader>\n            </div>\n        </div>\n\n        <div class=\"row mt-3\" *ngIf=\"reportData && reportData.length > 0\">\n            <div class=\"overflowX customScrollBar\">\n                <table class=\"table\">\n                    <tbody>\n                        <tr class=\"tableHeader\">\n                            <td class=\"fw-bold\"> Sr. No. </td>\n                            <td align=\"center\" class=\"fw-bold\"> Time </td>\n                            <ng-container *ngFor=\"let data of reportData; let i = index\">\n                                <td align=\"center\" class=\"fw-bold\">\n                                    {{ data.entityName }}<br />\n                                    {{ data.paramLabel }} ({{ data.unit }}) ({{ data.dsAgg }})\n                                </td>\n                            </ng-container>\n                        </tr>\n                    </tbody>\n                    <tbody>\n                        <tr *ngFor=\"let row of renderTable\">\n                            <td>{{ row.index }}</td>\n                            <td align=\"center\" class=\"colWidthContainingDateTime\">{{ row.time }}</td>\n                            <td align=\"center\" *ngFor=\"let value of row.data\">{{ value ? value : commonConstant.HYPHEN\n                                }}\n                            </td>\n                        </tr>\n                    </tbody>\n                </table>\n            </div>\n        </div>\n    </div>\n</div>","import { NgModule } from '@angular/core';\nimport { RouterModule, Routes } from '@angular/router';\n\nimport { UsageAcrossFacilityComponent } from './usage-across-facility.component';\n\nconst routes: Routes = [\n    {\n        path: '',\n        component: UsageAcrossFacilityComponent\n    }\n];\n\n@NgModule({\n    imports: [RouterModule.forChild(routes)],\n    exports: [RouterModule]\n})\nexport class UsageAcrossFacilityRoutingModule { }\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\n\nimport { UsageAcrossFacilityRoutingModule } from './usage-across-facility-routing.module';\nimport { UsageAcrossFacilityComponent } from './usage-across-facility.component';\n\nimport { SourceLoadModule } from '../../_shared/filter/source-load/source-load.module';\nimport { AggregationDurationModule } from '../../dropdown/aggregation-duration/aggregation-duration.module';\n\nimport { MatTableModule } from '@angular/material/table';\nimport { MatRippleModule } from '@angular/material/core';\n\n// tsc-library\nimport { DateInputModule } from '@library/date';\nimport { MessageAlertModule, SkeletonModule } from '@library/tsc-common';\n// /tsc-library/\n\n@NgModule({\n    declarations: [\n        UsageAcrossFacilityComponent\n    ],\n    imports: [\n        CommonModule,\n        UsageAcrossFacilityRoutingModule,\n        SourceLoadModule,\n        DateInputModule,\n        AggregationDurationModule,\n        SkeletonModule,\n        MessageAlertModule,\n        MatTableModule,\n        MatRippleModule\n    ]\n})\nexport class UsageAcrossFacilityModule { }\n","import { NgModule } from '@angular/core';\nimport { RouterModule, Routes } from '@angular/router';\n\nconst routes: Routes = [\n    {\n        path: 'page',\n        loadChildren: () => import('./page/page.module').then(m => m.PageModule)\n    },\n];\n\n@NgModule({\n    imports: [RouterModule.forChild(routes)],\n    exports: [RouterModule]\n})\nexport class LayoutRoutingModule { }","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\n\nimport { LayoutRoutingModule } from './layout-routing.module';\n\n@NgModule({\n    declarations: [],\n    imports: [\n        CommonModule,\n        LayoutRoutingModule\n    ]\n})\nexport class LayoutModule { }\n","export enum TscLiteButtonLabelEnum {\n    LAYOUT_BTN_LABEL = 'Layout',\n    EXPORT_BTN_LABEL = 'Export as'\n}","import { Inject, Injectable } from '@angular/core';\nimport { HttpClient, HttpParams } from '@angular/common/http';\n\nimport { Observable } from 'rxjs';\n\nimport { LayoutPageM } from '../model/layout.model';\n\n// tsc-library\nimport { PageM } from '@library/tsc-common';\n// /tsc-library/\n\n@Injectable({\n    providedIn: 'root'\n})\n\nexport class LayoutController {\n\n    constructor(\n        private http: HttpClient,\n        @Inject('environment') private environment: any\n    ) { }\n\n    getLayoutByPage(pageNo: number, pageSize: number, sortBy: string, orderBy: string, search: any[], orgID: number): Observable<PageM<LayoutPageM>>{\n        let params = new HttpParams();\n\n        params = params.append('pageNo', pageNo);\n        params = params.append('pageSize', pageSize);\n        params = params.append('sortBy', sortBy);\n        params = params.append('orderBy', orderBy);\n\n        search.forEach(search => params = params.append('search', search));\n        \n        return this.http.get<PageM<LayoutPageM>>(`${this.environment.TSC_COMMON_API_URL}organizations/${orgID}/layouts/page`, { params: params });\n    }\n}\n","import { Component, ElementRef, OnInit, ViewChild } from '@angular/core';\n\nimport { MatSort } from '@angular/material/sort';\nimport { MatPaginator } from '@angular/material/paginator';\n\nimport { merge, fromEvent, of as observableOf } from 'rxjs';\nimport { map, startWith, switchMap, catchError } from \"rxjs/operators\";\n\nimport { faPlus, faEllipsisV } from '@fortawesome/free-solid-svg-icons';\n\nimport { TscLiteButtonLabelEnum } from '../../../enum/button.enum';\nimport { LayoutPageM } from '../../../model/layout.model';\n\nimport { LayoutController } from '../../../controller/layout.controller';\n\n// tsc-library\nimport { StorageService } from '@library/storage-service';\nimport { PageM, SearchBarOneComponent } from '@library/tsc-common';\nimport { TABLE_CONSTANT, ButtonLabelEnum } from '@library/tsc-common';\n// /tsc-library/\n\n@Component({\n    selector: 'app-page',\n    templateUrl: './page.component.html',\n    styleUrls: ['./page.component.scss']\n})\n\nexport class PageComponent implements OnInit {\n    TABLE_CONSTANT = TABLE_CONSTANT;\n    TscLiteButtonLabelEnum = TscLiteButtonLabelEnum;\n    ButtonLabelEnum: ButtonLabelEnum;\n\n    faPlus = faPlus;\n    faEllipsisV = faEllipsisV;\n\n    orgID: any;\n\n    displayedColumn: string[] = ['id', 'name', 'description', 'option'];\n    resultLength: number = 0;\n    dataSource: any[] = [];\n\n    searchFlag: boolean = false;\n    searchValue: string;\n    searchArr: any[] = [];\n\n    theme: any;\n    entityTypeLoader: boolean = true;\n\n    @ViewChild('sort') sort: MatSort;\n    @ViewChild('paginator') paginator: MatPaginator;\n    @ViewChild('refreshBtn') refreshBtn: ElementRef;\n    @ViewChild('searchBar') searchBar: SearchBarOneComponent;\n\n    constructor(\n        private storageService: StorageService,\n        private layoutController: LayoutController,\n    ) { }\n\n    ngOnInit(): void {\n        this.orgID = this.storageService.getStorage('currentOrgID');\n    }\n\n    ngAfterViewInit() {\n        merge(\n            this.paginator.page,\n            this.sort.sortChange,\n            fromEvent(this.refreshBtn.nativeElement, 'click')\n        ).pipe(\n            startWith({}),\n            switchMap((): any => {\n                this.searchArr = [];\n                if (this.searchFlag) {\n                    this.searchArr.push('name:' + this.searchValue)\n                }\n\n                return this.layoutController.getLayoutByPage(\n                    this.paginator.pageIndex,\n                    this.paginator.pageSize,\n                    this.sort.active,\n                    this.sort.direction,\n                    this.searchArr,\n                    this.orgID\n                ).pipe(catchError(() => observableOf(null)));\n            }),\n            map((response: PageM<LayoutPageM>): any => {\n                if (response == null) {\n                    this.resultLength = 0;\n                    return [];\n                }\n                this.entityTypeLoader = false;\n                this.resultLength = response[\"totalCount\"];\n                return response[\"records\"];\n            })\n        ).subscribe((dataSource) => {\n            this.dataSource = dataSource;\n        });\n    }\n\n    searchFn(value: string) {\n        this.searchFlag = true;\n        this.searchValue = value;\n        if (value.length == 0) {\n            this.resetSearch();\n        } else {\n            this.paginator.pageIndex = 0;\n        }\n        this.refreshBtn.nativeElement.click();\n    }\n\n    resetSearch() {\n        this.searchFlag = false;\n        this.searchBar.searchClear();\n    }\n}","<div class=\"card main-card cardOverwrite h100\">\n    <div class=\"headerContainer\">\n        <div class=\"headerLeftContainer\">\n            <div class=\"pageTitle\">Layout</div>\n        </div>\n        <div class=\"headerRightContainer\">\n            <div class=\"headerRightContainerInner\">\n                <lib-search-bar-one class=\"me-3\" #searchBar searchBy=\"name\" (emitSearch)=\"searchFn($event)\">\n                </lib-search-bar-one>\n                <a class=\"btn btn-sm btn-success btnBase\" matRipple>\n                    <fa-icon [icon]=\"faPlus\"></fa-icon>&nbsp; {{ TscLiteButtonLabelEnum.LAYOUT_BTN_LABEL }}\n                </a>\n            </div>\n        </div>\n    </div>\n\n    <button #refreshBtn class=\"d-none\"></button>\n\n    <table mat-table [dataSource]=\"dataSource\" #sort=\"matSort\" matSort matSortActive=\"id\" matSortDirection=\"asc\"\n        matSortDisableClear>\n\n        <ng-container matColumnDef=\"id\">\n            <th class=\"columnWidth1 px-3\" mat-header-cell *matHeaderCellDef mat-sort-header disableClear>\n                ID\n            </th>\n            <td class=\"columnWidth1\" mat-cell *matCellDef=\"let row\">\n                {{ row['id'] }}\n            </td>\n        </ng-container>\n\n        <ng-container matColumnDef=\"name\">\n            <th class=\"columnWidth2 px-3\" mat-header-cell *matHeaderCellDef> Name </th>\n            <td class=\"columnWidth2 px-3\" mat-cell *matCellDef=\"let row\"\n                [matTooltip]=\"row?.['name']?.length>24? row['name']: ''\" matTooltipPosition=\"above\"\n                matTooltipClass=\"nameTooltip\">\n                {{ row?.['name'] | dotdotdot:24}}\n            </td>\n        </ng-container>\n\n        <ng-container matColumnDef=\"description\">\n            <th class=\"columnWidth2 px-3\" mat-header-cell *matHeaderCellDef> Description </th>\n            <td class=\"columnWidth2 px-3\" mat-cell *matCellDef=\"let row\"\n                [matTooltip]=\"row?.['description']?.length>24? row['description']: ''\" matTooltipPosition=\"above\"\n                matTooltipClass=\"nameTooltip\">\n                {{ row?.['description'] | dotdotdot:24}}\n            </td>\n        </ng-container>\n\n        <ng-container matColumnDef=\"option\">\n            <th class=\"columnWidth3\" mat-header-cell *matHeaderCellDef> Action </th>\n            <td class=\"columnWidth3 text-center\" mat-cell *matCellDef=\"let row\">\n                <div class=\"d-flex align-items-center\">\n                    <div class=\"btn-group\" ngbDropdown placement=\"left\">\n                        <button type=\"button\" ngbDropdownToggle class=\"dropdown-after dropdownAfter btn\">\n                            <fa-icon [icon]=\"faEllipsisV\"></fa-icon>\n                        </button>\n                        <div ngbDropdownMenu>\n                            <button class=\"dropdown-item\">\n                                {{ ButtonLabelEnum.UPDATE }}\n                            </button>\n                        </div>\n                    </div>\n                </div>\n            </td>\n        </ng-container>\n\n        <tr mat-header-row *matHeaderRowDef=\"displayedColumn\"></tr>\n        <tr mat-row *matRowDef=\"let row; columns: displayedColumn;\" class=\"data-row\"></tr>\n\n        <tr class=\"mat-row\" *matNoDataRow>\n            <ng-container *ngIf=\"entityTypeLoader; else showEntityType\">\n                <ng-container *ngTemplateOutlet=\"showLoader; context: { count: 3 }\"></ng-container>\n            </ng-container>\n            <ng-template #showEntityType>\n                <td class=\"mat-cell text-center\" [attr.colspan]=\"displayedColumn.length\">\n                    {{ TABLE_CONSTANT.TABLE_NO_DATA }}\n                </td>\n            </ng-template>\n        </tr>\n    </table>\n\n    <ng-template #showLoader let-count=\"count\" class=\"text-center\">\n        <td class=\"mat-cell text-center\" [attr.colspan]=\"displayedColumn.length\">\n            <lib-skeleton-loader [count]=\"count\" [appearance]=\"'circle'\"\n                [theme]=\"{}\">\n            </lib-skeleton-loader>\n        </td>\n    </ng-template>\n\n    <mat-paginator #paginator class=\"roundedBorder\" showFirstLastButtons [length]=\"resultLength\"\n        [pageSize]=\"TABLE_CONSTANT.DEFAULT_PAGE_SIZE\" [pageSizeOptions]=\"TABLE_CONSTANT.PAGE_SIZE_OPTION\">\n    </mat-paginator>\n</div>","import { NgModule } from '@angular/core';\nimport { RouterModule, Routes } from '@angular/router';\n\nimport { PageComponent } from './page.component';\n\nconst routes: Routes = [\n    {\n        path: '',\n        component: PageComponent\n    }\n];\n\n@NgModule({\n    imports: [RouterModule.forChild(routes)],\n    exports: [RouterModule]\n})\nexport class PageRoutingModule { }","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\n\nimport { PageRoutingModule } from './page-routing.module';\nimport { PageComponent } from './page.component';\n\nimport { NgbModule } from '@ng-bootstrap/ng-bootstrap';\nimport { FontAwesomeModule } from '@fortawesome/angular-fontawesome';\n\nimport { MatIconModule } from '@angular/material/icon';\nimport { MatButtonModule } from '@angular/material/button';\nimport { MatRippleModule } from '@angular/material/core';\nimport { MatTableModule } from '@angular/material/table';\nimport { MatPaginatorModule } from '@angular/material/paginator';\nimport { MatSortModule } from '@angular/material/sort';\nimport { MatDialogModule } from '@angular/material/dialog';\nimport { MatTooltipModule } from '@angular/material/tooltip';\n\n// tsc-library\nimport { SkeletonModule } from '@library/tsc-common';\nimport { SearchBarOneModule, EllipsisPipeModule } from '@library/tsc-common';\n// /tsc-library/\n\n\n@NgModule({\n    declarations: [\n        PageComponent\n    ],\n    imports: [\n        CommonModule,\n        PageRoutingModule,\n        SearchBarOneModule,\n        EllipsisPipeModule,\n        NgbModule,\n        FontAwesomeModule,\n        MatIconModule,\n        MatButtonModule,\n        MatRippleModule,\n        MatTableModule,\n        MatPaginatorModule,\n        MatSortModule,\n        MatDialogModule,\n        MatTooltipModule,\n        SkeletonModule\n    ]\n})\nexport class PageModule { }\n","/*\n * Public API Surface of tsc-lite\n */\n\nexport * from './lib/tsc-lite.service';\nexport * from './lib/tsc-lite.component';\nexport * from './lib/tsc-lite.module';\n\nexport * from './lib/tsc/constant/list.constant';\n\nexport * from './lib/tsc/model/parameter.model';\nexport * from './lib/tsc/model/entity.model';\nexport * from './lib/tsc/model/device.model';\nexport * from './lib/tsc/model/unit.model';\nexport * from './lib/tsc/model/shift.model';\nexport * from './lib/tsc/model/recent-data.model';\nexport * from './lib/tsc/model/alert.model';\n\n\nexport * from './lib/tsc/component/_shared/dialog/trend/trend.module';\nexport * from './lib/tsc/component/_shared/dialog/trend/trend.component';\n\nexport * from './lib/tsc/component/dropdown/aggregation/aggregation.module';\nexport * from './lib/tsc/component/dropdown/aggregation/aggregation.component';\n\nexport * from './lib/tsc/component/dropdown/aggregation-duration/aggregation-duration.module';\nexport * from './lib/tsc/component/dropdown/aggregation-duration/aggregation-duration.component';\n\nexport * from './lib/tsc/component/dropdown/param-metric/param-metric.module';\nexport * from './lib/tsc/component/dropdown/param-metric/param-metric.component';\n\nexport * from './lib/tsc/component/dropdown/parameter/parameter.module';\nexport * from './lib/tsc/component/dropdown/parameter/parameter.component';\n\nexport * from './lib/tsc/component/dropdown/device/device.module';\nexport * from './lib/tsc/component/dropdown/device/device.component';\n\nexport * from './lib/tsc/component/dropdown/entity/entity.module';\nexport * from './lib/tsc/component/dropdown/entity/entity.component';\n\nexport * from './lib/tsc/component/dropdown/unit/unit.module';\nexport * from './lib/tsc/component/dropdown/unit/unit.component';\n\nexport * from './lib/tsc/component/landing-page/home/home.module';\nexport * from './lib/tsc/component/landing-page/home/home.component';\n\nexport * from './lib/tsc/component/dropdown/shift/shift.module';\nexport * from './lib/tsc/component/dropdown/shift/shift.component';\n\nexport * from './lib/tsc/component/dashboard/balance/balance.module';\nexport * from './lib/tsc/component/dashboard/balance/balance.component';\n\nexport * from './lib/tsc/component/dashboard/consumption/consumption.module';\nexport * from './lib/tsc/component/dashboard/consumption/consumption.component';\n\nexport * from './lib/tsc/component/dashboard/consumption-breakup/consumption-breakup.module';\nexport * from './lib/tsc/component/dashboard/consumption-breakup/consumption-breakup.component';\n\nexport * from './lib/tsc/component/dashboard/entity/entity.module';\nexport * from './lib/tsc/component/dashboard/entity/entity.component';\n\nexport * from './lib/tsc/component/dashboard/facility/facility.module';\nexport * from './lib/tsc/component/dashboard/facility/facility.component';\n\nexport * from './lib/tsc/component/dashboard/meter-data/meter-data.module';\nexport * from './lib/tsc/component/dashboard/meter-data/meter-data.component';\n\nexport * from './lib/tsc/component/report/cgwa/cgwa.module';\nexport * from './lib/tsc/component/report/cgwa/cgwa.component';\n\nexport * from './lib/tsc/component/report/consumption-breakup/consumption-breakup.module';\nexport * from './lib/tsc/component/report/consumption-breakup/consumption-breakup.component';\n\nexport * from './lib/tsc/component/report/data-availability/data-availability.module';\nexport * from './lib/tsc/component/report/data-availability/data-availability.component';\n\nexport * from './lib/tsc/component/report/meter/meter.module';\nexport * from './lib/tsc/component/report/meter/meter.component';\n\nexport * from './lib/tsc/component/report/parameter/parameter.module';\nexport * from './lib/tsc/component/report/parameter/parameter.component';\n\nexport * from './lib/tsc/component/report/raw-data/raw-data.module';\nexport * from './lib/tsc/component/report/raw-data/raw-data.component';\n\nexport * from './lib/tsc/component/report/derived-parameter/derived-parameter.module';\nexport * from './lib/tsc/component/report/derived-parameter/derived-parameter.component';\n\nexport * from './lib/tsc/component/report/usage-across-facility/usage-across-facility.module';\nexport * from './lib/tsc/component/report/usage-across-facility/usage-across-facility.component';\n\n\nexport * from './lib/tsc/controller/parameter.controller';\nexport * from './lib/tsc/controller/entity.controller';\nexport * from './lib/tsc/controller/device.controller';\nexport * from './lib/tsc/controller/unit.controller';\nexport * from './lib/tsc/controller/shift.controller';\nexport * from './lib/tsc/controller/recent-data.controller';\nexport * from './lib/tsc/controller/aggregate-data.controller';\n\n\nexport * from './lib/tsc/service/parameter.service';\nexport * from './lib/tsc/service/entity.service';\nexport * from './lib/tsc/service/device.service';\nexport * from './lib/tsc/service/unit.service';\nexport * from './lib/tsc/service/shift.service';\nexport * from './lib/tsc/service/recent-data.service';\nexport * from './lib/tsc/service/aggregate-data.service';\nexport * from './lib/tsc/service/trend.service';\nexport * from './lib/tsc/service/report.service';\n\n\nexport * from './lib/tsc/component/layout/layout.module';\nexport * from './lib/tsc/component/layout/page/page.module';\n","/**\n * Generated bundle index. Do not edit.\n */\n\nexport * from './public-api';\n"],"names":["i1.ParameterController","i2","i1.AggregateDataController","i4.ParameterService","i5.AggregateDataService","i6","i1","i8","i9","i10","i12","i13","i3","i4","i5","i2.ParameterService","i7","i1.DeviceController","i2.DeviceService","i1.EntityController","i2.EntityService","i1.UnitController","i2.UnitService","i4.AggregateDataService","i5.EntityController","i6.DeviceController","routes","i1.ShiftController","i2.ShiftService","i2.AggregateDataService","i1.RecentDataController","i3.RecentDataService","i5.TrendService","i11","i14","i15","i16","i17","i4.TrendService","i5.RecentDataService","i6.AlertService","i1.EntityDeviceController","i2.RecentDataService","i3.EntityDeviceService","i5.AlertService","i7.TrendService","i5.ReportService","i7.SourceLoadComponent","i9.AggregationDurationComponent","i10.EntityComponent","i8.EntityComponent","i9.DeviceComponent","i10.ParamMetricComponent","i4.EntityDeviceService","i6.ReportService","i7.AlertService","i14.ParamMetricComponent","i5.ParameterService","i11.DeviceComponent","i12.ParamMetricComponent","i13.AggregationComponent","i9.EntityComponent","i10.DeviceComponent","i6.EntityService","i7.ReportService","i8.AlertService","i10.AggregationDurationComponent","observableOf","i2.LayoutController"],"mappings":"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"}