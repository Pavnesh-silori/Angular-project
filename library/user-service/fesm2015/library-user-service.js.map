{"version":3,"file":"library-user-service.js","sources":["../../../projects/library/user-service/src/lib/user-service.service.ts","../../../projects/library/user-service/src/lib/user-service.component.ts","../../../projects/library/user-service/src/lib/user-service.module.ts","../../../projects/library/user-service/src/lib/tsc/enum/profile-image.enum.ts","../../../projects/library/user-service/src/lib/tsc/enum/user.enum.ts","../../../projects/library/user-service/src/lib/tsc/model/user.model.ts","../../../projects/library/user-service/src/lib/tsc/controller/user.controller.ts","../../../projects/library/user-service/src/lib/tsc/service/user.service.ts","../../../projects/library/user-service/src/public-api.ts","../../../projects/library/user-service/src/library-user-service.ts"],"sourcesContent":["import { Injectable } from '@angular/core';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class UserServiceService {\n\n  constructor() { }\n}\n","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'lib-user-service',\n  template: `\n    <p>\n      user-service works!\n    </p>\n  `,\n  styles: [\n  ]\n})\nexport class UserServiceComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit(): void {\n  }\n\n}\n","import { NgModule, ModuleWithProviders } from '@angular/core';\n\nimport { UserServiceComponent } from './user-service.component';\n\n@NgModule({\n    declarations: [\n        UserServiceComponent\n    ],\n    imports: [\n    ],\n    exports: [\n        UserServiceComponent\n    ]\n})\nexport class UserServiceModule {\n    static forRoot(environment: any): ModuleWithProviders<UserServiceModule> {\n        return {\n            ngModule: UserServiceModule,\n            providers: [\n                { provide: 'environment', useValue: environment }\n            ]\n        };\n    }\n}\n","export enum ProfileImg {\n    PROFILE_IMAGE_BODY_VIEW = 'PROFILE_IMAGE_BODY_VIEW',\n    PROFILE_IMAGE_DROPDOWN_NAME_VIEW = 'PROFILE_IMAGE_DROPDOWN_NAME_VIEW',\n    PROFILE_IMAGE_DROPDOWN_NAME_EMAIL_VIEW = 'PROFILE_IMAGE_DROPDOWN_NAME_EMAIL_VIEW'\n}","export enum UserStatus {\n    ACTIVE = 'ACTIVE',\n    INACTIVE = 'INACTIVE',\n    INVITED = 'INVITED'\n}\n\nexport enum UserContext {\n    ROOT_ORG_USER = 'ROOT_ORG_USER',\n    CURRENT_ORG_USER = 'CURRENT_ORG_USER'\n}","export interface UserM {\n    id: number;\n    firstName: string;\n    lastName: string;\n    genderValue: string;\n    genderLabel: string;\n    email: string;\n    countryCallingCode: number;\n    contactCountryCode: string;\n    contactNumber: string;\n    profileImgUrl: string;\n    imgID: number;\n    status: string;\n    newsLetterSub: boolean;\n}\n\nexport class User implements UserM {\n    id;\n    firstName;\n    lastName;\n    genderValue;\n    genderLabel;\n    email;\n    countryCallingCode;\n    contactCountryCode;\n    contactNumber;\n    profileImgUrl;\n    imgID;\n    status;\n    newsLetterSub;\n}\n\nexport interface UserOrgAccessM {\n    isFacilityAccess: boolean;\n    isOrgAccess: boolean;\n}\n\nexport class UserOrgAccess implements UserOrgAccessM {\n    isFacilityAccess;\n    isOrgAccess;\n}\n\n","import { Inject, Injectable } from \"@angular/core\";\nimport { Observable } from \"rxjs\";\nimport { HttpClient } from \"@angular/common/http\";\n\nimport { UserM, UserOrgAccessM } from \"../model/user.model\";\n\n@Injectable({\n    providedIn: 'root'\n})\n\nexport class UserController {\n\n    constructor(\n        private http: HttpClient,\n        @Inject('environment') private environment: any\n    ) { }\n\n    getUserByID(userID): Observable<UserM> {\n        return this.http.get<UserM>(`${this.environment.ORGANIZATION_API_URL}users/${userID}`);\n    }\n\n    getUserOrgAccess(orgID): Observable<UserOrgAccessM> {\n        return this.http.get<UserOrgAccessM>(`${this.environment.ORGANIZATION_API_URL}organizations/${orgID}/user-access`);\n    }\n\n    getUsersByOrgID(orgID): Observable<UserM[]> {\n        return this.http.get<UserM[]>(`${this.environment.ORGANIZATION_API_URL}organizations/${orgID}/users`);\n    }\n\n    getCurrentOrgUserAccess(orgID): Observable<UserM[]> {\n        return this.http.get<UserM[]>(`${this.environment.ORGANIZATION_API_URL}organizations/${orgID}/users/access`);\n    }\n}","import { Injectable } from \"@angular/core\";\n\nimport { ProfileImg } from \"../enum/profile-image.enum\";\n\nimport { User, UserM, UserOrgAccess, UserOrgAccessM } from \"../model/user.model\";\n\nimport { UserController } from \"../controller/user.controller\";\n\n@Injectable({\n    providedIn: 'root'\n})\n\nexport class UserService {\n\n    ProfileImg: ProfileImg;\n\n    constructor(\n        private userController: UserController\n    ) { }\n\n\n    async getUserByID(userID): Promise<UserM> {\n        let userM: UserM;\n\n        try {\n            userM = await this.userController.getUserByID(userID).toPromise();\n\n            if (userM) {\n                return userM;\n            } else {\n                return new User();\n            }\n        } catch (error) {\n            console.error('Error -', error);\n            return new User();\n        }\n    }\n\n    async getUserOrgAccess(orgID): Promise<UserOrgAccessM> {\n        let userOrgAccessM: UserOrgAccessM;\n\n        try {\n            userOrgAccessM = await this.userController.getUserOrgAccess(orgID).toPromise();\n\n            if (userOrgAccessM) {\n                return userOrgAccessM;\n            } else {\n                return new UserOrgAccess();\n            }\n        } catch (error) {\n            console.error('Error -', error);\n            return new UserOrgAccess();\n        }\n    }\n\n    async getUsersByOrgID(orgID): Promise<UserM[]> {\n        let orgUserM: UserM[];\n        try {\n            orgUserM = await this.userController.getUsersByOrgID(orgID).toPromise();\n\n            if (orgUserM) {\n                return orgUserM;\n            } else {\n                return [new User()];\n            }\n        } catch (error) {\n            console.error('Error -', error);\n            return [new User()];\n        }\n    }\n\n    async getCurrentOrgUserAccess(orgID): Promise<UserM[]> {\n        let currentOrgUserM: UserM[];\n        try {\n            currentOrgUserM = await this.userController.getCurrentOrgUserAccess(orgID).toPromise();\n\n            if (currentOrgUserM) {\n                return currentOrgUserM;\n            } else {\n                return [new User()];\n            }\n        } catch (error) {\n            console.error('Error -', error);\n            return [new User()];\n        }\n    }\n\n    defaultImage(name: String, element: string) {\n        let profileImg;\n\n        if (name) {\n            profileImg = this.generateDefaultImage(name, element);\n        } else {\n            profileImg = 'assets/images/default-profile-img.jpg';\n        }\n\n        return profileImg;\n    }\n\n    generateDefaultImage(name: String, element: string) {\n        let canvasWidth;\n        let canvasHeight;\n        let fontSize;\n        let fillTextDoubleStart;\n        let fillTextDoubleTop;\n        let fillTextSingleStart;\n        let fillTextSingleTop;\n\n        if (element == ProfileImg.PROFILE_IMAGE_BODY_VIEW) {\n            canvasWidth = 22;\n            canvasHeight = 22;\n            fontSize = '11px';\n            fillTextDoubleStart = 4;\n            fillTextDoubleTop = 15;\n            fillTextSingleStart = 8;\n            fillTextSingleTop = 15;\n        } else if (element == ProfileImg.PROFILE_IMAGE_DROPDOWN_NAME_VIEW) {\n            canvasWidth = 75;\n            canvasHeight = 75;\n            fontSize = '40px';\n            fillTextDoubleStart = 13;\n            fillTextDoubleTop = 52;\n            fillTextSingleStart = 23;\n            fillTextSingleTop = 52;\n        } else if (element == ProfileImg.PROFILE_IMAGE_DROPDOWN_NAME_EMAIL_VIEW) {\n            //INFO: SOMYA AGRAWAL - currently WIP, configurations are not fully correct while showing name and email alongWith profile in dropdown!\n            canvasWidth = 120;\n            canvasHeight = 120;\n            fontSize = '60px';\n            fillTextDoubleStart = 20;\n            fillTextDoubleTop = 62;\n            fillTextSingleStart = 30;\n            fillTextSingleTop = 62;\n        }\n\n        const canvas = document.createElement('canvas');\n        canvas.style.display = 'none';\n        canvas.width = canvasWidth;\n        canvas.height = canvasHeight;\n        document.body.appendChild(canvas);\n        const context = canvas.getContext('2d')!;\n        context.fillStyle = '#3f6ad8';\n        context.fillRect(0, 0, canvas.width, canvas.height);\n        context.font = fontSize + ' Helvetica';\n        context.fillStyle = '#fff';\n        const nameArray = name.split(' ');\n        let initials = '';\n        for (let i = 0; i < nameArray.length; i++) {\n            if (i <= 1) {\n                if (nameArray[i].length > 0) {\n                    initials = initials + nameArray[i][0];\n                }\n            }\n        }\n        if (initials.length > 1) {\n            context.fillText(initials.toUpperCase(), fillTextDoubleStart, fillTextDoubleTop);\n        } else {\n            context.fillText(initials.toUpperCase(), fillTextSingleStart, fillTextSingleTop);\n        }\n        const data = canvas.toDataURL();\n        document.body.removeChild(canvas);\n        return data;\n    }\n}","/*\n * Public API Surface of user-service\n */\n\nexport * from './lib/user-service.service';\nexport * from './lib/user-service.component';\nexport * from './lib/user-service.module';\n\nexport * from './lib/tsc/enum/profile-image.enum';\nexport * from './lib/tsc/enum/user.enum';\n\nexport * from './lib/tsc/model/user.model';\nexport * from './lib/tsc/controller/user.controller';\nexport * from './lib/tsc/service/user.service';\n","/**\n * Generated bundle index. Do not edit.\n */\n\nexport * from './public-api';\n"],"names":["i1.UserController"],"mappings":"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"}