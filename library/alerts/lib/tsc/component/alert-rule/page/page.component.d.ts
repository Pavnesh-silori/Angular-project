import { ElementRef, OnInit } from '@angular/core';
import { ActivatedRoute, Router } from '@angular/router';
import { FormControl } from '@angular/forms';
import { MatSort } from '@angular/material/sort';
import { MatPaginator } from '@angular/material/paginator';
import { MatDialog } from '@angular/material/dialog';
import { AlertButtonLabelEnum, AlertTypeEnum, AlertPageLabelEnum } from '../../../enum/alert.enum';
import { EscalationPermission } from '../../../model/escalation.model';
import { AlertRuleController } from '../../../controller/alert.controller';
import { EscalationController } from '../../../controller/escalation.controller';
import { StorageService } from '@library/storage-service';
import { ToastrService } from '@library/toastr-service';
import { ButtonLabelEnum, DialogEnum, SearchBarOneComponent, MaterialFormFieldAppearance } from '@library/tsc-common';
import * as i0 from "@angular/core";
export declare class PageComponent implements OnInit {
    private router;
    private activatedRoute;
    private storageService;
    private toastrService;
    private alertController;
    private escalationController;
    private dialog;
    faPlus: import("@fortawesome/fontawesome-common-types").IconDefinition;
    faEllipsisV: import("@fortawesome/fontawesome-common-types").IconDefinition;
    TABLE_CONSTANT: {
        TABLE_NO_DATA: string;
        DEFAULT_PAGE_SIZE: number;
        PAGE_SIZE_OPTION: number[];
    };
    COMMON_CONSTANT: {
        PRIVACY: string;
        TERMS: string;
        PRICING: string;
        SUPPORT_EMAIL: string;
        HYPHEN: string;
        NO_DATA_FOUND: string;
        NO_DATA: string;
        EMAIL_PATTERN: string;
        ZIPCODE_PATTERN: string;
        GST_NUMBER_PATTERN: string;
        ALLOWED_IMAGE_TYPES: string[];
        MAX_IMAGE_SIZE: number;
    };
    MATERIAL_CONSTANT: {
        MAT_RIPPLE_CENTER: boolean;
    };
    AlertTypeEnum: typeof AlertTypeEnum;
    AlertPageLabelEnum: typeof AlertPageLabelEnum;
    AlertButtonLabelEnum: typeof AlertButtonLabelEnum;
    ButtonLabelEnum: typeof ButtonLabelEnum;
    DialogEnum: typeof DialogEnum;
    MaterialFormFieldAppearance: typeof MaterialFormFieldAppearance;
    orgID: any;
    alertLabel: any;
    baseUrl: any;
    displayedColumn: string[];
    resultLength: number;
    dataSource: any[];
    searchFlag: boolean;
    searchValue: string;
    searchArr: any[];
    escalationPermissionM: EscalationPermission;
    alertStatusFC: FormControl;
    sort: MatSort;
    paginator: MatPaginator;
    refreshBtn: ElementRef;
    searchBar: SearchBarOneComponent;
    constructor(router: Router, activatedRoute: ActivatedRoute, storageService: StorageService, toastrService: ToastrService, alertController: AlertRuleController, escalationController: EscalationController, dialog: MatDialog);
    ngOnInit(): void;
    ngAfterViewInit(): void;
    getEscalationPermission(): void;
    getAlertStatusFC(alertID: number): FormControl;
    alertStatusChange(alertID: any): void;
    searchFn(value: string): void;
    resetSearch(): void;
    openDeleteAlertDialog(alertID: any, alertName: any): void;
    deleteAlertRule(alertID: any): void;
    static ɵfac: i0.ɵɵFactoryDeclaration<PageComponent, never>;
    static ɵcmp: i0.ɵɵComponentDeclaration<PageComponent, "lib-page", never, {}, {}, never, never>;
}
