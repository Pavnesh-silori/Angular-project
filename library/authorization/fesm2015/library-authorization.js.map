{"version":3,"file":"library-authorization.js","sources":["../../../projects/library/authorization/src/lib/tsc/controller/authorization.controller.ts","../../../projects/library/authorization/src/lib/tsc/service/authorization.service.ts","../../../projects/library/authorization/src/lib/tsc/component/authorization/authorization.component.ts","../../../projects/library/authorization/src/lib/tsc/component/authorization/authorization.component.html","../../../projects/library/authorization/src/lib/authorization.module.ts","../../../projects/library/authorization/src/public-api.ts","../../../projects/library/authorization/src/library-authorization.ts"],"sourcesContent":["import { Inject, Injectable } from \"@angular/core\";\n\nimport { HttpClient, HttpParams, HttpHeaders } from '@angular/common/http';\n\nimport { Observable } from 'rxjs';\n\nimport { AuthorizationM } from '../model/authorization.model';\n\n@Injectable({\n    providedIn: 'root'\n})\n\nexport class AuthorizationController {\n    constructor(\n        private http: HttpClient,\n        @Inject('environment') private environment: any\n    ) { }\n\n    getAuthorizationByApp(applicationKeyID: string, orgID: number): Observable<AuthorizationM> {\n        let headers = new HttpHeaders();\n        headers = headers.set('applicationKeyID', applicationKeyID);\n\n        let params = new HttpParams();\n        params = params.append('orgID', orgID);\n\n        return this.http.get<AuthorizationM>(`${this.environment.ORGANIZATION_API_URL}authorization`, { params: params, headers: headers });\n    }\n}","import { Injectable } from '@angular/core';\n\nimport { AuthorizationM } from '../model/authorization.model';\n\nimport { AuthorizationController } from '../controller/authorization.controller';\n\n@Injectable({\n    providedIn: 'root'\n})\n\nexport class AuthorizationService {\n\n    constructor(\n        private authorizationController: AuthorizationController\n    ) { }\n\n    async getAuthorizationByApp(applicationKeyID: string, orgID: any = ''): Promise<AuthorizationM> {\n        let authorizationM: AuthorizationM;\n        try {\n            authorizationM = await this.authorizationController.getAuthorizationByApp(applicationKeyID, orgID).toPromise();\n            return authorizationM;\n        } catch (error) {\n            console.error('Error -', error);\n        }\n    }\n\n}\n","import {\n    Component,\n    OnInit\n} from '@angular/core';\n\nimport {\n    ActivatedRoute,\n    Router\n} from '@angular/router';\n\nimport { AuthorizationM } from '../../model/authorization.model';\nimport { AuthorizationService } from '../../service/authorization.service';\n\n// tsc-library\nimport { StorageService } from '@library/storage-service';\nimport { AuthenticationService } from '@library/authentication-service';\nimport { SubscriptionService } from '@library/subscription-service';\nimport { ApplicationKeyID, ApplicationService } from '@library/application-service';\nimport { ApplicationResourcePermission, RBACService } from '@library/rbac-service';\nimport { ApplicationFeature, FeatureService } from '@library/feature-service';\nimport { OrgStatus } from '@library/organization-service';\n// /tsc-library/\n\n@Component({\n    selector: 'lib-authorization',\n    templateUrl: './authorization.component.html',\n    styleUrls: ['./authorization.component.scss']\n})\n\nexport class AuthorizationComponent implements OnInit {\n    ApplicationKeyID: ApplicationKeyID;\n\n    redirectUrl: string = '';\n    applicationKeyID: string;\n    token: string = '';\n    userID: any;\n    orgID: any;\n\n    constructor(\n        private router: Router,\n        private activatedRoute: ActivatedRoute,\n        private authorizationService: AuthorizationService,\n        private storageService: StorageService,\n        private applicationService: ApplicationService,\n        private authenticationService: AuthenticationService,\n        private subscriptionService: SubscriptionService,\n        private rbacService: RBACService,\n        private featureService: FeatureService,\n    ) { }\n\n    ngOnInit(): void {\n        this.activatedRoute.data.subscribe(data => {\n            this.applicationKeyID = data.applicationKeyID;\n        });\n\n        this.activatedRoute.queryParams.subscribe(queryParam => {\n            this.token = queryParam.token;\n            this.userID = queryParam.userID;\n\n            if (queryParam.redirectUrl) {\n                this.redirectUrl = queryParam.redirectUrl;\n            }\n\n            if (queryParam.orgID) {\n                this.orgID = queryParam.orgID;\n            }\n\n            this.storageService.setStorage('token', this.token);\n            this.storageService.setStorage('userID', this.userID);\n            this.storageService.setStorage('applicationKeyID', this.applicationKeyID);\n\n            this.getAuthorizationByApp(this.applicationKeyID, this.orgID);\n        });\n    }\n\n    async getAuthorizationByApp(applicationKeyID, orgID) {\n        let authorizationM: AuthorizationM;\n        let permissionResult: any = null;\n        let featureResult: any = null;\n\n        authorizationM = <AuthorizationM>await this.authorizationService.getAuthorizationByApp(applicationKeyID, orgID);\n\n        this.storageService.setStorage('currentOrgID', authorizationM.orgID);\n        this.storageService.setStorage('rootOrgID', authorizationM.rootOrgID);\n        this.storageService.setStorage('currentOrgType', authorizationM.orgType);\n        this.storageService.setStorage('userUID', authorizationM.userUID);\n        this.storageService.setStorage('applicationID', authorizationM.applicationID);\n        this.storageService.setStorage('enableModule', authorizationM.enableModule);\n\n        // permissionResult = <any>await this.rbacService.getResourcePermissionByOrgIDAndUserID(authorizationM.rootOrgID, authorizationM.userID);\n        // this.storageService.setStorage(ApplicationResourcePermission.ADMIN_RESOURCE_PERMISSION, JSON.stringify(permissionResult));\n\n        // featureResult = <any>await this.featureService.getFeatureByOrgID(authorizationM.rootOrgID);\n        // this.storageService.setStorage(ApplicationFeature.ADMIN_FEATURE, JSON.stringify(featureResult));\n\n        // if (permissionResult && featureResult) {\n            if (authorizationM.orgStatus == OrgStatus.SETUP_PENDING_STATUS) {\n                if (this.applicationKeyID == ApplicationKeyID.ADMIN_KEY_ID) {\n                    this.router.navigate(['/organization', authorizationM.orgID, 'setup'], { queryParams: { subscriptionStatus: authorizationM.subscriptionStatus } });\n                } else {\n                    this.storageService.clearStorage();\n                    window.location.href = `${this.applicationService.appRedirect(ApplicationKeyID.ADMIN_KEY_ID)}login?token=${this.token}&userID=${this.userID}&orgID=${authorizationM.orgID}`;\n                }\n            } else if (authorizationM.subscriptionStatus != 'ACTIVE') {\n                if (this.applicationKeyID == ApplicationKeyID.ADMIN_KEY_ID) {\n                    this.router.navigate([`/subscription-new/active`]);\n                } else {\n                    this.storageService.clearStorage();\n                    window.location.href = `${this.applicationService.appRedirect(ApplicationKeyID.ADMIN_KEY_ID)}login?token=${this.token}&userID=${this.userID}&orgID=${authorizationM.orgID}`;\n                }\n            } else if (authorizationM.subscriptionStatus == 'ACTIVE') {\n                this.router.navigate(['/authorization/success'], { queryParams: { redirectUrl: this.redirectUrl } });\n            } else {\n                this.authenticationService.logout('', '', '');\n            }\n        // } else {\n        //     console.error('Error in permissionResult or featureResult');\n        //     console.log('permissionResult', permissionResult);\n        //     console.log('permissionResult', permissionResult);\n        //     this.authenticationService.logout('', '', '');\n        // }\n    }\n\n}\n","<div class=\"d-flex h-100 justify-content-center align-items-center\">\n    <div class=\"text-center fs-4\"><img class=\"appAuthImg\"\n            src=\"assets/images/application-logo/tsc-with-name.png\" />\n        <br />\n        <br />\n        <span class=\"spinner-border spinner-border-sm text-success\"></span> ..\n    </div>\n</div>","import {\n    NgModule,\n    ModuleWithProviders\n} from '@angular/core';\n\nimport { AuthorizationComponent } from './tsc/component/authorization/authorization.component';\n\n@NgModule({\n    declarations: [\n        AuthorizationComponent\n    ],\n    imports: [\n    ],\n    exports: [\n        AuthorizationComponent\n    ]\n})\n\nexport class AuthorizationModule {\n    static forRoot(environment: any): ModuleWithProviders<AuthorizationModule> {\n        return {\n            ngModule: AuthorizationModule,\n            providers: [\n                { provide: 'environment', useValue: environment }\n            ]\n        };\n    }\n}\n","/*\n * Public API Surface of authorization\n */\n\nexport * from './lib/authorization.module';\n\nexport * from './lib/tsc/model/authorization.model';\nexport * from './lib/tsc/service/authorization.service';\nexport * from './lib/tsc/controller/authorization.controller';\n\nexport * from './lib/tsc/component/authorization/authorization.component';\n","/**\n * Generated bundle index. Do not edit.\n */\n\nexport * from './public-api';\n"],"names":["i1.AuthorizationController","i1","i2.AuthorizationService"],"mappings":"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"}