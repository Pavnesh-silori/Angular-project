{"version":3,"file":"library-toastr-service.js","sources":["../../../projects/library/toastr-service/src/lib/toastr-service.service.ts","../../../projects/library/toastr-service/src/lib/toastr-service.component.ts","../../../projects/library/toastr-service/src/lib/toastr-service.module.ts","../../../projects/library/toastr-service/src/lib/tsc/enum/toastr.enum.ts","../../../projects/library/toastr-service/src/lib/tsc/service/toastr.service.ts","../../../projects/library/toastr-service/src/public-api.ts","../../../projects/library/toastr-service/src/library-toastr-service.ts"],"sourcesContent":["import { Injectable } from '@angular/core';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class ToastrServiceService {\n\n  constructor() { }\n}\n","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'lib-toastr-service',\n  template: `\n    <p>\n      toastr-service works!\n    </p>\n  `,\n  styles: [\n  ]\n})\nexport class ToastrServiceComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit(): void {\n  }\n\n}\n","import { NgModule } from '@angular/core';\nimport { ToastrServiceComponent } from './toastr-service.component';\n\n\n\n@NgModule({\n  declarations: [\n    ToastrServiceComponent\n  ],\n  imports: [\n  ],\n  exports: [\n    ToastrServiceComponent\n  ]\n})\nexport class ToastrServiceModule { }\n","export enum ToastrTitle {\n    SUCCESS = 'Success',\n    WARNING = 'Warning',\n    ERROR = 'Error',\n    INFO = 'Info'\n}\n\nexport enum ToastrColor {\n    SUCCESS = 'success',\n    WARNING = 'warning',\n    ERROR = 'error',\n    INFO = 'info'\n}\n","import { Injectable } from '@angular/core';\n\nimport { cloneDeep } from 'lodash-es';\nimport { ToastrService as NgxToastrService } from 'ngx-toastr';\n\nimport { ToastrTitle, ToastrColor } from '../enum/toastr.enum';\n\n@Injectable({\n    providedIn: 'root'\n})\n\nexport class ToastrService {\n\n    constructor(\n        private ngxToastrService: NgxToastrService\n    ) { }\n\n    openToast(title, message, notiType) {\n        // Clone current config so it doesn't change when ngModel updates\n        const opt = cloneDeep(this.ngxToastrService.toastrConfig);\n\n        const inserted = this.ngxToastrService.show(\n            message,\n            title,\n            opt,\n            this.ngxToastrService.toastrConfig.iconClasses[notiType],\n        );\n        return inserted;\n    }\n\n    getToastStatus(status) {\n        let toast = {\n            title: '',\n            color: '',\n        };\n\n        switch (status) {\n            case \"error\":\n                toast.title = ToastrTitle.ERROR;\n                toast.color = ToastrColor.ERROR;\n                break;\n            case 'warning':\n                toast.title = ToastrTitle.WARNING;\n                toast.color = ToastrColor.WARNING;\n                break;\n            case 'info':\n                toast.title = ToastrTitle.INFO;\n                toast.color = ToastrColor.INFO;\n                break;\n            case 'success':\n                toast.title = ToastrTitle.SUCCESS;\n                toast.color = ToastrColor.SUCCESS;\n                break;\n            default:\n                toast.title = ToastrTitle.ERROR;\n                toast.color = ToastrColor.ERROR;\n        }\n        return toast;\n    }\n\n    success = (message: String) => {\n        this.openToast(ToastrTitle.SUCCESS, message, ToastrColor.SUCCESS);\n    }\n\n    error = (message: String) => {\n        this.openToast(ToastrTitle.ERROR, message, ToastrColor.ERROR);\n    }\n\n    warn = (message: String) => {\n        this.openToast(ToastrTitle.WARNING, message, ToastrColor.WARNING);\n    }\n\n    info = (message: String) => {\n        this.openToast(ToastrTitle.INFO, message, ToastrColor.INFO);\n    }\n}\n","/*\n * Public API Surface of toastr-service\n */\n\nexport * from './lib/toastr-service.service';\nexport * from './lib/toastr-service.component';\nexport * from './lib/toastr-service.module';\n\nexport * from './lib/tsc/enum/toastr.enum'; \nexport * from './lib/tsc/service/toastr.service';\n","/**\n * Generated bundle index. Do not edit.\n */\n\nexport * from './public-api';\n"],"names":[],"mappings":";;;;;MAKa,oBAAoB,CAAA;AAE/B,IAAA,WAAA,GAAA,GAAiB;;kHAFN,oBAAoB,EAAA,IAAA,EAAA,EAAA,EAAA,MAAA,EAAA,EAAA,CAAA,eAAA,CAAA,UAAA,EAAA,CAAA,CAAA;AAApB,oBAAA,CAAA,KAAA,GAAA,EAAA,CAAA,qBAAA,CAAA,EAAA,UAAA,EAAA,QAAA,EAAA,OAAA,EAAA,SAAA,EAAA,QAAA,EAAA,EAAA,EAAA,IAAA,EAAA,oBAAoB,cAFnB,MAAM,EAAA,CAAA,CAAA;4FAEP,oBAAoB,EAAA,UAAA,EAAA,CAAA;kBAHhC,UAAU;AAAC,YAAA,IAAA,EAAA,CAAA;AACV,oBAAA,UAAU,EAAE,MAAM;AACnB,iBAAA,CAAA;;;MCQY,sBAAsB,CAAA;AAEjC,IAAA,WAAA,GAAA,GAAiB;IAEjB,QAAQ,GAAA;KACP;;oHALU,sBAAsB,EAAA,IAAA,EAAA,EAAA,EAAA,MAAA,EAAA,EAAA,CAAA,eAAA,CAAA,SAAA,EAAA,CAAA,CAAA;AAAtB,sBAAA,CAAA,IAAA,GAAA,EAAA,CAAA,oBAAA,CAAA,EAAA,UAAA,EAAA,QAAA,EAAA,OAAA,EAAA,SAAA,EAAA,IAAA,EAAA,sBAAsB,EARvB,QAAA,EAAA,oBAAA,EAAA,QAAA,EAAA,EAAA,EAAA,QAAA,EAAA,CAAA;;;;AAIT,EAAA,CAAA,EAAA,QAAA,EAAA,IAAA,EAAA,CAAA,CAAA;4FAIU,sBAAsB,EAAA,UAAA,EAAA,CAAA;kBAVlC,SAAS;AAAC,YAAA,IAAA,EAAA,CAAA;AACT,oBAAA,QAAQ,EAAE,oBAAoB;AAC9B,oBAAA,QAAQ,EAAE,CAAA;;;;AAIT,EAAA,CAAA;AACD,oBAAA,MAAM,EAAE,EACP;AACF,iBAAA,CAAA;;;MCIY,mBAAmB,CAAA;;iHAAnB,mBAAmB,EAAA,IAAA,EAAA,EAAA,EAAA,MAAA,EAAA,EAAA,CAAA,eAAA,CAAA,QAAA,EAAA,CAAA,CAAA;kHAAnB,mBAAmB,EAAA,YAAA,EAAA,CAR5B,sBAAsB,CAAA,EAAA,OAAA,EAAA,CAKtB,sBAAsB,CAAA,EAAA,CAAA,CAAA;AAGb,mBAAA,CAAA,IAAA,GAAA,EAAA,CAAA,mBAAA,CAAA,EAAA,UAAA,EAAA,QAAA,EAAA,OAAA,EAAA,SAAA,EAAA,QAAA,EAAA,EAAA,EAAA,IAAA,EAAA,mBAAmB,YANrB,EACR,CAAA,EAAA,CAAA,CAAA;4FAKU,mBAAmB,EAAA,UAAA,EAAA,CAAA;kBAV/B,QAAQ;AAAC,YAAA,IAAA,EAAA,CAAA;AACR,oBAAA,YAAY,EAAE;wBACZ,sBAAsB;AACvB,qBAAA;AACD,oBAAA,OAAO,EAAE,EACR;AACD,oBAAA,OAAO,EAAE;wBACP,sBAAsB;AACvB,qBAAA;AACF,iBAAA,CAAA;;;ICdW,YAKX;AALD,CAAA,UAAY,WAAW,EAAA;AACnB,IAAA,WAAA,CAAA,SAAA,CAAA,GAAA,SAAmB,CAAA;AACnB,IAAA,WAAA,CAAA,SAAA,CAAA,GAAA,SAAmB,CAAA;AACnB,IAAA,WAAA,CAAA,OAAA,CAAA,GAAA,OAAe,CAAA;AACf,IAAA,WAAA,CAAA,MAAA,CAAA,GAAA,MAAa,CAAA;AACjB,CAAC,EALW,WAAW,KAAX,WAAW,GAKtB,EAAA,CAAA,CAAA,CAAA;IAEW,YAKX;AALD,CAAA,UAAY,WAAW,EAAA;AACnB,IAAA,WAAA,CAAA,SAAA,CAAA,GAAA,SAAmB,CAAA;AACnB,IAAA,WAAA,CAAA,SAAA,CAAA,GAAA,SAAmB,CAAA;AACnB,IAAA,WAAA,CAAA,OAAA,CAAA,GAAA,OAAe,CAAA;AACf,IAAA,WAAA,CAAA,MAAA,CAAA,GAAA,MAAa,CAAA;AACjB,CAAC,EALW,WAAW,KAAX,WAAW,GAKtB,EAAA,CAAA,CAAA;;MCDY,aAAa,CAAA;AAEtB,IAAA,WAAA,CACY,gBAAkC,EAAA;QAAlC,IAAgB,CAAA,gBAAA,GAAhB,gBAAgB,CAAkB;AA8C9C,QAAA,IAAA,CAAA,OAAO,GAAG,CAAC,OAAe,KAAI;AAC1B,YAAA,IAAI,CAAC,SAAS,CAAC,WAAW,CAAC,OAAO,EAAE,OAAO,EAAE,WAAW,CAAC,OAAO,CAAC,CAAC;AACtE,SAAC,CAAA;AAED,QAAA,IAAA,CAAA,KAAK,GAAG,CAAC,OAAe,KAAI;AACxB,YAAA,IAAI,CAAC,SAAS,CAAC,WAAW,CAAC,KAAK,EAAE,OAAO,EAAE,WAAW,CAAC,KAAK,CAAC,CAAC;AAClE,SAAC,CAAA;AAED,QAAA,IAAA,CAAA,IAAI,GAAG,CAAC,OAAe,KAAI;AACvB,YAAA,IAAI,CAAC,SAAS,CAAC,WAAW,CAAC,OAAO,EAAE,OAAO,EAAE,WAAW,CAAC,OAAO,CAAC,CAAC;AACtE,SAAC,CAAA;AAED,QAAA,IAAA,CAAA,IAAI,GAAG,CAAC,OAAe,KAAI;AACvB,YAAA,IAAI,CAAC,SAAS,CAAC,WAAW,CAAC,IAAI,EAAE,OAAO,EAAE,WAAW,CAAC,IAAI,CAAC,CAAC;AAChE,SAAC,CAAA;KA3DI;AAEL,IAAA,SAAS,CAAC,KAAK,EAAE,OAAO,EAAE,QAAQ,EAAA;;QAE9B,MAAM,GAAG,GAAG,SAAS,CAAC,IAAI,CAAC,gBAAgB,CAAC,YAAY,CAAC,CAAC;QAE1D,MAAM,QAAQ,GAAG,IAAI,CAAC,gBAAgB,CAAC,IAAI,CACvC,OAAO,EACP,KAAK,EACL,GAAG,EACH,IAAI,CAAC,gBAAgB,CAAC,YAAY,CAAC,WAAW,CAAC,QAAQ,CAAC,CAC3D,CAAC;AACF,QAAA,OAAO,QAAQ,CAAC;KACnB;AAED,IAAA,cAAc,CAAC,MAAM,EAAA;AACjB,QAAA,IAAI,KAAK,GAAG;AACR,YAAA,KAAK,EAAE,EAAE;AACT,YAAA,KAAK,EAAE,EAAE;SACZ,CAAC;AAEF,QAAA,QAAQ,MAAM;AACV,YAAA,KAAK,OAAO;AACR,gBAAA,KAAK,CAAC,KAAK,GAAG,WAAW,CAAC,KAAK,CAAC;AAChC,gBAAA,KAAK,CAAC,KAAK,GAAG,WAAW,CAAC,KAAK,CAAC;gBAChC,MAAM;AACV,YAAA,KAAK,SAAS;AACV,gBAAA,KAAK,CAAC,KAAK,GAAG,WAAW,CAAC,OAAO,CAAC;AAClC,gBAAA,KAAK,CAAC,KAAK,GAAG,WAAW,CAAC,OAAO,CAAC;gBAClC,MAAM;AACV,YAAA,KAAK,MAAM;AACP,gBAAA,KAAK,CAAC,KAAK,GAAG,WAAW,CAAC,IAAI,CAAC;AAC/B,gBAAA,KAAK,CAAC,KAAK,GAAG,WAAW,CAAC,IAAI,CAAC;gBAC/B,MAAM;AACV,YAAA,KAAK,SAAS;AACV,gBAAA,KAAK,CAAC,KAAK,GAAG,WAAW,CAAC,OAAO,CAAC;AAClC,gBAAA,KAAK,CAAC,KAAK,GAAG,WAAW,CAAC,OAAO,CAAC;gBAClC,MAAM;AACV,YAAA;AACI,gBAAA,KAAK,CAAC,KAAK,GAAG,WAAW,CAAC,KAAK,CAAC;AAChC,gBAAA,KAAK,CAAC,KAAK,GAAG,WAAW,CAAC,KAAK,CAAC;AACvC,SAAA;AACD,QAAA,OAAO,KAAK,CAAC;KAChB;;2GA/CQ,aAAa,EAAA,IAAA,EAAA,CAAA,EAAA,KAAA,EAAA,EAAA,CAAA,aAAA,EAAA,CAAA,EAAA,MAAA,EAAA,EAAA,CAAA,eAAA,CAAA,UAAA,EAAA,CAAA,CAAA;AAAb,aAAA,CAAA,KAAA,GAAA,EAAA,CAAA,qBAAA,CAAA,EAAA,UAAA,EAAA,QAAA,EAAA,OAAA,EAAA,SAAA,EAAA,QAAA,EAAA,EAAA,EAAA,IAAA,EAAA,aAAa,cAHV,MAAM,EAAA,CAAA,CAAA;4FAGT,aAAa,EAAA,UAAA,EAAA,CAAA;kBAJzB,UAAU;AAAC,YAAA,IAAA,EAAA,CAAA;AACR,oBAAA,UAAU,EAAE,MAAM;AACrB,iBAAA,CAAA;;;ACTD;;AAEG;;ACFH;;AAEG;;;;"}