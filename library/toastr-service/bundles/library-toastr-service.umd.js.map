{"version":3,"file":"library-toastr-service.umd.js","sources":["../../../projects/library/toastr-service/src/lib/toastr-service.service.ts","../../../projects/library/toastr-service/src/lib/toastr-service.component.ts","../../../projects/library/toastr-service/src/lib/toastr-service.module.ts","../../../projects/library/toastr-service/src/lib/tsc/enum/toastr.enum.ts","../../../projects/library/toastr-service/src/lib/tsc/service/toastr.service.ts","../../../projects/library/toastr-service/src/public-api.ts","../../../projects/library/toastr-service/src/library-toastr-service.ts"],"sourcesContent":["import { Injectable } from '@angular/core';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class ToastrServiceService {\n\n  constructor() { }\n}\n","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'lib-toastr-service',\n  template: `\n    <p>\n      toastr-service works!\n    </p>\n  `,\n  styles: [\n  ]\n})\nexport class ToastrServiceComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit(): void {\n  }\n\n}\n","import { NgModule } from '@angular/core';\nimport { ToastrServiceComponent } from './toastr-service.component';\n\n\n\n@NgModule({\n  declarations: [\n    ToastrServiceComponent\n  ],\n  imports: [\n  ],\n  exports: [\n    ToastrServiceComponent\n  ]\n})\nexport class ToastrServiceModule { }\n","export enum ToastrTitle {\n    SUCCESS = 'Success',\n    WARNING = 'Warning',\n    ERROR = 'Error',\n    INFO = 'Info'\n}\n\nexport enum ToastrColor {\n    SUCCESS = 'success',\n    WARNING = 'warning',\n    ERROR = 'error',\n    INFO = 'info'\n}\n","import { Injectable } from '@angular/core';\n\nimport { cloneDeep } from 'lodash-es';\nimport { ToastrService as NgxToastrService } from 'ngx-toastr';\n\nimport { ToastrTitle, ToastrColor } from '../enum/toastr.enum';\n\n@Injectable({\n    providedIn: 'root'\n})\n\nexport class ToastrService {\n\n    constructor(\n        private ngxToastrService: NgxToastrService\n    ) { }\n\n    openToast(title, message, notiType) {\n        // Clone current config so it doesn't change when ngModel updates\n        const opt = cloneDeep(this.ngxToastrService.toastrConfig);\n\n        const inserted = this.ngxToastrService.show(\n            message,\n            title,\n            opt,\n            this.ngxToastrService.toastrConfig.iconClasses[notiType],\n        );\n        return inserted;\n    }\n\n    getToastStatus(status) {\n        let toast = {\n            title: '',\n            color: '',\n        };\n\n        switch (status) {\n            case \"error\":\n                toast.title = ToastrTitle.ERROR;\n                toast.color = ToastrColor.ERROR;\n                break;\n            case 'warning':\n                toast.title = ToastrTitle.WARNING;\n                toast.color = ToastrColor.WARNING;\n                break;\n            case 'info':\n                toast.title = ToastrTitle.INFO;\n                toast.color = ToastrColor.INFO;\n                break;\n            case 'success':\n                toast.title = ToastrTitle.SUCCESS;\n                toast.color = ToastrColor.SUCCESS;\n                break;\n            default:\n                toast.title = ToastrTitle.ERROR;\n                toast.color = ToastrColor.ERROR;\n        }\n        return toast;\n    }\n}\n","/*\n * Public API Surface of toastr-service\n */\n\nexport * from './lib/toastr-service.service';\nexport * from './lib/toastr-service.component';\nexport * from './lib/toastr-service.module';\n\nexport * from './lib/tsc/enum/toastr.enum'; \nexport * from './lib/tsc/service/toastr.service';\n","/**\n * Generated bundle index. Do not edit.\n */\n\nexport * from './public-api';\n"],"names":["i0","Injectable","Component","NgModule","ToastrTitle","ToastrColor","cloneDeep","i1"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;AAKA,QAAA,oBAAA,kBAAA,YAAA;IAEE,IAAA,SAAA,oBAAA,GAAA;SAAiB;;;4IAFN,oBAAoB,EAAA,IAAA,EAAA,EAAA,EAAA,MAAA,EAAAA,aAAA,CAAA,eAAA,CAAA,UAAA,EAAA,CAAA,CAAA;IAApB,oBAAA,CAAA,KAAA,GAAAA,aAAA,CAAA,qBAAA,CAAA,EAAA,UAAA,EAAA,QAAA,EAAA,OAAA,EAAA,SAAA,EAAA,QAAA,EAAAA,aAAA,EAAA,IAAA,EAAA,oBAAoB,cAFnB,MAAM,EAAA,CAAA,CAAA;sHAEP,oBAAoB,EAAA,UAAA,EAAA,CAAA;sBAHhCC,aAAU;IAAC,YAAA,IAAA,EAAA,CAAA;IACV,oBAAA,UAAU,EAAE,MAAM;qBACnB,CAAA;;;ACQD,QAAA,sBAAA,kBAAA,YAAA;IAEE,IAAA,SAAA,sBAAA,GAAA;SAAiB;IAEjB,IAAA,sBAAA,CAAA,SAAA,CAAA,QAAQ,GAAR,YAAA;SACC,CAAA;;;8IALU,sBAAsB,EAAA,IAAA,EAAA,EAAA,EAAA,MAAA,EAAAD,aAAA,CAAA,eAAA,CAAA,SAAA,EAAA,CAAA,CAAA;IAAtB,sBAAA,CAAA,IAAA,GAAAA,aAAA,CAAA,oBAAA,CAAA,EAAA,UAAA,EAAA,QAAA,EAAA,OAAA,EAAA,SAAA,EAAA,IAAA,EAAA,sBAAsB,EARvB,QAAA,EAAA,oBAAA,EAAA,QAAA,EAAAA,aAAA,EAAA,QAAA,EAAA,sDAIT,EAAA,QAAA,EAAA,IAAA,EAAA,CAAA,CAAA;sHAIU,sBAAsB,EAAA,UAAA,EAAA,CAAA;sBAVlCE,YAAS;IAAC,YAAA,IAAA,EAAA,CAAA;IACT,oBAAA,QAAQ,EAAE,oBAAoB;IAC9B,oBAAA,QAAQ,EAAE,sDAIT;IACD,oBAAA,MAAM,EAAE,EACP;qBACF,CAAA;;;ACID,QAAA,mBAAA,kBAAA,YAAA;IAAA,IAAA,SAAA,mBAAA,GAAA;;;;2IAAa,mBAAmB,EAAA,IAAA,EAAA,EAAA,EAAA,MAAA,EAAAF,aAAA,CAAA,eAAA,CAAA,QAAA,EAAA,CAAA,CAAA;4IAAnB,mBAAmB,EAAA,YAAA,EAAA,CAR5B,sBAAsB,CAAA,EAAA,OAAA,EAAA,CAKtB,sBAAsB,CAAA,EAAA,CAAA,CAAA;IAGb,mBAAA,CAAA,IAAA,GAAAA,aAAA,CAAA,mBAAA,CAAA,EAAA,UAAA,EAAA,QAAA,EAAA,OAAA,EAAA,SAAA,EAAA,QAAA,EAAAA,aAAA,EAAA,IAAA,EAAA,mBAAmB,YANrB,EACR,CAAA,EAAA,CAAA,CAAA;sHAKU,mBAAmB,EAAA,UAAA,EAAA,CAAA;sBAV/BG,WAAQ;IAAC,YAAA,IAAA,EAAA,CAAA;IACR,oBAAA,YAAY,EAAE;4BACZ,sBAAsB;IACvB,qBAAA;IACD,oBAAA,OAAO,EAAE,EACR;IACD,oBAAA,OAAO,EAAE;4BACP,sBAAsB;IACvB,qBAAA;qBACF,CAAA;;;ACdWC,iCAKX;IALD,CAAA,UAAY,WAAW,EAAA;IACnB,IAAA,WAAA,CAAA,SAAA,CAAA,GAAA,SAAmB,CAAA;IACnB,IAAA,WAAA,CAAA,SAAA,CAAA,GAAA,SAAmB,CAAA;IACnB,IAAA,WAAA,CAAA,OAAA,CAAA,GAAA,OAAe,CAAA;IACf,IAAA,WAAA,CAAA,MAAA,CAAA,GAAA,MAAa,CAAA;IACjB,CAAC,EALWA,mBAAW,KAAXA,mBAAW,GAKtB,EAAA,CAAA,CAAA,CAAA;AAEWC,iCAKX;IALD,CAAA,UAAY,WAAW,EAAA;IACnB,IAAA,WAAA,CAAA,SAAA,CAAA,GAAA,SAAmB,CAAA;IACnB,IAAA,WAAA,CAAA,SAAA,CAAA,GAAA,SAAmB,CAAA;IACnB,IAAA,WAAA,CAAA,OAAA,CAAA,GAAA,OAAe,CAAA;IACf,IAAA,WAAA,CAAA,MAAA,CAAA,GAAA,MAAa,CAAA;IACjB,CAAC,EALWA,mBAAW,KAAXA,mBAAW,GAKtB,EAAA,CAAA,CAAA;;ACDD,QAAA,aAAA,kBAAA,YAAA;IAEI,IAAA,SAAA,aAAA,CACY,gBAAkC,EAAA;IAAlC,QAAA,IAAgB,CAAA,gBAAA,GAAhB,gBAAgB,CAAkB;SACzC;IAEL,IAAA,aAAA,CAAA,SAAA,CAAA,SAAS,GAAT,UAAU,KAAK,EAAE,OAAO,EAAE,QAAQ,EAAA;;YAE9B,IAAM,GAAG,GAAGC,kBAAS,CAAC,IAAI,CAAC,gBAAgB,CAAC,YAAY,CAAC,CAAC;YAE1D,IAAM,QAAQ,GAAG,IAAI,CAAC,gBAAgB,CAAC,IAAI,CACvC,OAAO,EACP,KAAK,EACL,GAAG,EACH,IAAI,CAAC,gBAAgB,CAAC,YAAY,CAAC,WAAW,CAAC,QAAQ,CAAC,CAC3D,CAAC;IACF,QAAA,OAAO,QAAQ,CAAC;SACnB,CAAA;QAED,aAAc,CAAA,SAAA,CAAA,cAAA,GAAd,UAAe,MAAM,EAAA;IACjB,QAAA,IAAI,KAAK,GAAG;IACR,YAAA,KAAK,EAAE,EAAE;IACT,YAAA,KAAK,EAAE,EAAE;aACZ,CAAC;IAEF,QAAA,QAAQ,MAAM;IACV,YAAA,KAAK,OAAO;IACR,gBAAA,KAAK,CAAC,KAAK,GAAGF,mBAAW,CAAC,KAAK,CAAC;IAChC,gBAAA,KAAK,CAAC,KAAK,GAAGC,mBAAW,CAAC,KAAK,CAAC;oBAChC,MAAM;IACV,YAAA,KAAK,SAAS;IACV,gBAAA,KAAK,CAAC,KAAK,GAAGD,mBAAW,CAAC,OAAO,CAAC;IAClC,gBAAA,KAAK,CAAC,KAAK,GAAGC,mBAAW,CAAC,OAAO,CAAC;oBAClC,MAAM;IACV,YAAA,KAAK,MAAM;IACP,gBAAA,KAAK,CAAC,KAAK,GAAGD,mBAAW,CAAC,IAAI,CAAC;IAC/B,gBAAA,KAAK,CAAC,KAAK,GAAGC,mBAAW,CAAC,IAAI,CAAC;oBAC/B,MAAM;IACV,YAAA,KAAK,SAAS;IACV,gBAAA,KAAK,CAAC,KAAK,GAAGD,mBAAW,CAAC,OAAO,CAAC;IAClC,gBAAA,KAAK,CAAC,KAAK,GAAGC,mBAAW,CAAC,OAAO,CAAC;oBAClC,MAAM;IACV,YAAA;IACI,gBAAA,KAAK,CAAC,KAAK,GAAGD,mBAAW,CAAC,KAAK,CAAC;IAChC,gBAAA,KAAK,CAAC,KAAK,GAAGC,mBAAW,CAAC,KAAK,CAAC;IACvC,SAAA;IACD,QAAA,OAAO,KAAK,CAAC;SAChB,CAAA;;;qIA/CQ,aAAa,EAAA,IAAA,EAAA,CAAA,EAAA,KAAA,EAAAE,aAAA,CAAA,aAAA,EAAA,CAAA,EAAA,MAAA,EAAAP,aAAA,CAAA,eAAA,CAAA,UAAA,EAAA,CAAA,CAAA;IAAb,aAAA,CAAA,KAAA,GAAAA,aAAA,CAAA,qBAAA,CAAA,EAAA,UAAA,EAAA,QAAA,EAAA,OAAA,EAAA,SAAA,EAAA,QAAA,EAAAA,aAAA,EAAA,IAAA,EAAA,aAAa,cAHV,MAAM,EAAA,CAAA,CAAA;sHAGT,aAAa,EAAA,UAAA,EAAA,CAAA;sBAJzBC,aAAU;IAAC,YAAA,IAAA,EAAA,CAAA;IACR,oBAAA,UAAU,EAAE,MAAM;qBACrB,CAAA;;;ICTD;;IAEG;;ICFH;;IAEG;;;;;;;;;;;;;"}