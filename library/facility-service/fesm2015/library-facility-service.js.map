{"version":3,"file":"library-facility-service.js","sources":["../../../projects/library/facility-service/src/lib/facility-service.service.ts","../../../projects/library/facility-service/src/lib/facility-service.component.ts","../../../projects/library/facility-service/src/lib/facility-service.module.ts","../../../projects/library/facility-service/src/lib/tsc/model/facility.model.ts","../../../projects/library/facility-service/src/lib/tsc/controller/facility.controller.ts","../../../projects/library/facility-service/src/lib/tsc/service/facility.service.ts","../../../projects/library/facility-service/src/public-api.ts","../../../projects/library/facility-service/src/library-facility-service.ts"],"sourcesContent":["import { Injectable } from '@angular/core';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class FacilityServiceService {\n\n  constructor() { }\n}\n","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'lib-facility-service',\n  template: `\n    <p>\n      facility-service works!\n    </p>\n  `,\n  styles: [\n  ]\n})\nexport class FacilityServiceComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit(): void {\n  }\n\n}\n","import { NgModule, ModuleWithProviders } from '@angular/core';\nimport { FacilityServiceComponent } from './facility-service.component';\n\n\n\n@NgModule({\n    declarations: [\n        FacilityServiceComponent\n    ],\n    imports: [\n    ],\n    exports: [\n        FacilityServiceComponent\n    ]\n})\nexport class FacilityServiceModule {\n    static forRoot(environment: any): ModuleWithProviders<FacilityServiceModule> {\n        return {\n            ngModule: FacilityServiceModule,\n            providers: [\n                { provide: 'environment', useValue: environment }\n            ]\n        };\n    }\n}\n","export interface FacilityM {\n    address1: string;\n    id: number;\n    name: string;\n    logoUrl: string;\n    status: string;\n    stateCode: string;\n    stateName: string;\n    countryCode: string;\n    countryName: string;\n    city: string;\n    zipCode: string;\n    address: string;\n    fiscalStartMonth: string;\n    timeZoneID: number;\n    timeZoneName: string\n}\n\nexport class Facility implements FacilityM {\n    address1;\n    id;\n    name;\n    logoUrl;\n    status;\n    stateCode;\n    stateName;\n    countryCode;\n    countryName;\n    city;\n    zipCode;\n    address;\n    fiscalStartMonth;\n    timeZoneID;\n    timeZoneName;\n}","import { HttpClient } from \"@angular/common/http\";\n\nimport { Inject, Injectable } from \"@angular/core\";\n\nimport { Observable } from \"rxjs\";\n\nimport { FacilityM } from \"../model/facility.model\";\n\n@Injectable({\n    providedIn: 'root'\n})\n\nexport class FacilityController {\n\n    constructor(\n        private http: HttpClient,\n        @Inject('environment') private environment: any\n    ) { }\n\n    getFacilityByID(rootOrgID, facilityID): Observable<FacilityM> {\n        return this.http.get<FacilityM>(`${this.environment.ORGANIZATION_API_URL}organizations/${rootOrgID}/facility/${facilityID}`);\n    }\n}","import { Injectable } from \"@angular/core\";\n\nimport { Facility, FacilityM } from \"../model/facility.model\";\n\nimport { FacilityController } from \"../controller/facility.controller\";\n\n@Injectable({\n    providedIn: 'root'\n})\n\nexport class FacilityService {\n\n    constructor(\n        private facilityController: FacilityController\n    ) { }\n\n    async getFacilityByID(rootOrgID: number, facilityID: number): Promise<FacilityM> {\n        let facilityM: FacilityM;\n        let facility = new Facility();\n\n        try {\n            facilityM = await this.facilityController.getFacilityByID(rootOrgID, facilityID).toPromise();\n\n            if (facilityM) {\n                return facilityM;\n            } else {\n                return facility;\n            }\n        } catch (error) {\n            console.error('Error -', error);\n            return facility;\n        }\n    }\n}","/*\n * Public API Surface of facility-service\n */\n\nexport * from './lib/facility-service.service';\nexport * from './lib/facility-service.component';\nexport * from './lib/facility-service.module';\n\nexport * from './lib/tsc/model/facility.model';\nexport * from './lib/tsc/controller/facility.controller';\nexport * from './lib/tsc/service/facility.service';\n","/**\n * Generated bundle index. Do not edit.\n */\n\nexport * from './public-api';\n"],"names":["i1.FacilityController"],"mappings":"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"}