import { NgModule } from '@angular/core';
import { CommonModule } from '@angular/common';
import { CircleProgressComponent, CircleProgressOptions } from './ng-circle-progress.component';
import * as ɵngcc0 from '@angular/core';
export class NgCircleProgressModule {
    static forRoot(options = {}) {
        return {
            ngModule: NgCircleProgressModule,
            providers: [
                { provide: CircleProgressOptions, useValue: options }
            ]
        };
    }
}
NgCircleProgressModule.ɵfac = function NgCircleProgressModule_Factory(t) { return new (t || NgCircleProgressModule)(); };
NgCircleProgressModule.ɵmod = /*@__PURE__*/ ɵngcc0.ɵɵdefineNgModule({ type: NgCircleProgressModule });
NgCircleProgressModule.ɵinj = /*@__PURE__*/ ɵngcc0.ɵɵdefineInjector({ imports: [[
            CommonModule
        ]] });
(function () { (typeof ngDevMode === "undefined" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(NgCircleProgressModule, [{
        type: NgModule,
        args: [{
                declarations: [CircleProgressComponent],
                imports: [
                    CommonModule
                ],
                exports: [CircleProgressComponent]
            }]
    }], null, null); })();
(function () { (typeof ngJitMode === "undefined" || ngJitMode) && ɵngcc0.ɵɵsetNgModuleScope(NgCircleProgressModule, { declarations: function () { return [CircleProgressComponent]; }, imports: function () { return [CommonModule]; }, exports: function () { return [CircleProgressComponent]; } }); })();
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoibmctY2lyY2xlLXByb2dyZXNzLm1vZHVsZS5qcyIsInNvdXJjZXMiOlsiQzovVXNlcnMvemV0YWwvdG1wL25nLWNpcmNsZS1wcm9ncmVzcy1saWJyYXJ5L3Byb2plY3RzL25nLWNpcmNsZS1wcm9ncmVzcy9zcmMvbGliL25nLWNpcmNsZS1wcm9ncmVzcy5tb2R1bGUudHMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUEsT0FBTyxFQUFFLFFBQVEsRUFBdUIsTUFBTSxlQUFlLENBQUM7QUFDOUQsT0FBTyxFQUFFLFlBQVksRUFBRSxNQUFNLGlCQUFpQixDQUFDO0FBQy9DLE9BQU8sRUFBRSx1QkFBdUIsRUFBa0MscUJBQXFCLEVBQUUsTUFBTSxnQ0FBZ0MsQ0FBQzs7QUFVaEksTUFBTSxPQUFPLHNCQUFzQjtBQUNsQyxJQUFDLE1BQU0sQ0FBQyxPQUFPLENBQUMsVUFBMEMsRUFBRTtBQUFLLFFBQzlELE9BQU87QUFDVixZQUFLLFFBQVEsRUFBRSxzQkFBc0I7QUFDckMsWUFBSyxTQUFTLEVBQUU7QUFDaEIsZ0JBQU8sRUFBRSxPQUFPLEVBQUUscUJBQXFCLEVBQUUsUUFBUSxFQUFFLE9BQU8sRUFBRTtBQUM1RCxhQUFNO0FBQ04sU0FBSSxDQUFDO0FBQ0wsSUFBQyxDQUFDO0FBQ0Y7b0RBaEJBLFFBQVEsU0FBQyxtQkFDUixZQUFZLEVBQUUsQ0FBQztJQUF1QixDQUFDLG1CQUN2QyxPQUFPLEVBQUUsdUJBQ1AsWUFBWSxtQkFDYjtHQUNELE9BQU8sRUFBRSxDQUFDLHVCQUF1QixDQUFDLGVBQ25DOzs7Ozs7Ozs7Ozs7OztBQVhBLEFBQUEsQUFBQSxBQUFBLEFBQUEsQUFBQSxBQUFBLEFBQUEsQUFDQSxBQUFBLEFBQUEsQUFBQSxBQUFBLEFBQUEsQUFBQSxBQUFBLEFBQ0EsQUFBQSxBQUFBLEFBQUEsQUFBQSxBQUFBLEFBQUEsQUFBQSxBQUFBLEFBQUEsQUFVQSxBQUFBLEFBQUEsQUFBQSxBQUNBLEFBQUEsQUFBQSxBQUFBLEFBQUEsQUFBQSxBQUFBLEFBQ0EsQUFBQSxBQUNBLEFBQUEsQUFBQSxBQUFBLEFBQ0EsQUFBQSxBQUFBLEFBQ0EsQUFBQSxBQUFBLEFBQUEsQUFBQSxBQUFBLEFBQUEsQUFBQSxBQUFBLEFBQUEsQUFDQSxBQUNBLEFBQUEsQUFDQSxBQUFBLEFBZkEsQUFBQSxBQUFBLEFBQ0EsQUFBQSxBQUFBLEFBQUEsQUFBQSxBQUFBLEFBQ0EsQUFBQSxBQUFBLEFBQ0EsQUFBQSxBQUNBLEFBQ0EsQUFBQSxBQUFBLEFBQUEsQUFBQSxBQUFBLEFBQ0EiLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgeyBOZ01vZHVsZSwgTW9kdWxlV2l0aFByb3ZpZGVycyB9IGZyb20gJ0Bhbmd1bGFyL2NvcmUnO1xuaW1wb3J0IHsgQ29tbW9uTW9kdWxlIH0gZnJvbSAnQGFuZ3VsYXIvY29tbW9uJztcbmltcG9ydCB7IENpcmNsZVByb2dyZXNzQ29tcG9uZW50LCBDaXJjbGVQcm9ncmVzc09wdGlvbnNJbnRlcmZhY2UsIENpcmNsZVByb2dyZXNzT3B0aW9ucyB9IGZyb20gJy4vbmctY2lyY2xlLXByb2dyZXNzLmNvbXBvbmVudCc7XG5cblxuQE5nTW9kdWxlKHtcbiAgZGVjbGFyYXRpb25zOiBbQ2lyY2xlUHJvZ3Jlc3NDb21wb25lbnRdLFxuICBpbXBvcnRzOiBbXG4gICAgQ29tbW9uTW9kdWxlXG4gIF0sXG4gIGV4cG9ydHM6IFtDaXJjbGVQcm9ncmVzc0NvbXBvbmVudF1cbn0pXG5leHBvcnQgY2xhc3MgTmdDaXJjbGVQcm9ncmVzc01vZHVsZSB7XG4gIHN0YXRpYyBmb3JSb290KG9wdGlvbnM6IENpcmNsZVByb2dyZXNzT3B0aW9uc0ludGVyZmFjZSA9IHt9KTogTW9kdWxlV2l0aFByb3ZpZGVyczxOZ0NpcmNsZVByb2dyZXNzTW9kdWxlPiB7XG4gICAgcmV0dXJuIHtcbiAgICAgIG5nTW9kdWxlOiBOZ0NpcmNsZVByb2dyZXNzTW9kdWxlLFxuICAgICAgcHJvdmlkZXJzOiBbXG4gICAgICAgIHsgcHJvdmlkZTogQ2lyY2xlUHJvZ3Jlc3NPcHRpb25zLCB1c2VWYWx1ZTogb3B0aW9ucyB9XG4gICAgICBdXG4gICAgfTtcbiAgfVxufVxuIl19