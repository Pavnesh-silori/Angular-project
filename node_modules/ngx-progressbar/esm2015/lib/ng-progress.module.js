import { NgModule } from '@angular/core';
import { CommonModule } from '@angular/common';
import { NgProgressComponent } from './ng-progress.component';
import { NG_PROGRESS_CONFIG } from './ng-progress.interface';
import * as ɵngcc0 from '@angular/core';
export class NgProgressModule {
    static withConfig(config) {
        return {
            ngModule: NgProgressModule,
            providers: [
                { provide: NG_PROGRESS_CONFIG, useValue: config }
            ]
        };
    }
}
NgProgressModule.ɵfac = function NgProgressModule_Factory(t) { return new (t || NgProgressModule)(); };
NgProgressModule.ɵmod = /*@__PURE__*/ ɵngcc0.ɵɵdefineNgModule({ type: NgProgressModule });
NgProgressModule.ɵinj = /*@__PURE__*/ ɵngcc0.ɵɵdefineInjector({ imports: [[CommonModule]] });
(function () { (typeof ngDevMode === "undefined" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(NgProgressModule, [{
        type: NgModule,
        args: [{
                declarations: [NgProgressComponent],
                exports: [NgProgressComponent],
                imports: [CommonModule]
            }]
    }], null, null); })();
(function () { (typeof ngJitMode === "undefined" || ngJitMode) && ɵngcc0.ɵɵsetNgModuleScope(NgProgressModule, { declarations: function () { return [NgProgressComponent]; }, imports: function () { return [CommonModule]; }, exports: function () { return [NgProgressComponent]; } }); })();

//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoibmctcHJvZ3Jlc3MubW9kdWxlLmpzIiwic291cmNlcyI6WyIuLi8uLi8uLi8uLi9wcm9qZWN0cy9uZ3gtcHJvZ3Jlc3NiYXIvc3JjL2xpYi9uZy1wcm9ncmVzcy5tb2R1bGUudHMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUEsT0FBTyxFQUF1QixRQUFRLEVBQUUsTUFBTSxlQUFlLENBQUM7QUFDOUQsT0FBTyxFQUFFLFlBQVksRUFBRSxNQUFNLGlCQUFpQixDQUFDO0FBQy9DLE9BQU8sRUFBRSxtQkFBbUIsRUFBRSxNQUFNLHlCQUF5QixDQUFDO0FBQzlELE9BQU8sRUFBb0Isa0JBQWtCLEVBQUUsTUFBTSx5QkFBeUIsQ0FBQzs7QUFPL0UsTUFBTSxPQUFPLGdCQUFnQjtBQUM3QixJQUFFLE1BQU0sQ0FBQyxVQUFVLENBQUMsTUFBd0I7QUFBSSxRQUM1QyxPQUFPO0FBQ1gsWUFBTSxRQUFRLEVBQUUsZ0JBQWdCO0FBQ2hDLFlBQU0sU0FBUyxFQUFFO0FBQ2pCLGdCQUFRLEVBQUMsT0FBTyxFQUFFLGtCQUFrQixFQUFFLFFBQVEsRUFBRSxNQUFNLEVBQUM7QUFDdkQsYUFBTztBQUNQLFNBQUssQ0FBQztBQUNOLElBQUUsQ0FBQztBQUNIOzRDQWRDLFFBQVEsU0FBQyxrQkFDUixZQUFZLEVBQUUsQ0FBQztTQUFtQixDQUFDLGtCQUNuQyxPQUFPLEVBQUUsQ0FBQyxtQkFBbUIsQ0FBQyxrQkFDOUIsT0FBTyxFQUFFLENBQUM7T0FBWSxDQUFDLGNBQ3hCOzs7Ozs7Ozs7OFJBQ0k7QUFBQyIsInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7IE1vZHVsZVdpdGhQcm92aWRlcnMsIE5nTW9kdWxlIH0gZnJvbSAnQGFuZ3VsYXIvY29yZSc7XG5pbXBvcnQgeyBDb21tb25Nb2R1bGUgfSBmcm9tICdAYW5ndWxhci9jb21tb24nO1xuaW1wb3J0IHsgTmdQcm9ncmVzc0NvbXBvbmVudCB9IGZyb20gJy4vbmctcHJvZ3Jlc3MuY29tcG9uZW50JztcbmltcG9ydCB7IE5nUHJvZ3Jlc3NDb25maWcsIE5HX1BST0dSRVNTX0NPTkZJRyB9IGZyb20gJy4vbmctcHJvZ3Jlc3MuaW50ZXJmYWNlJztcblxuQE5nTW9kdWxlKHtcbiAgZGVjbGFyYXRpb25zOiBbTmdQcm9ncmVzc0NvbXBvbmVudF0sXG4gIGV4cG9ydHM6IFtOZ1Byb2dyZXNzQ29tcG9uZW50XSxcbiAgaW1wb3J0czogW0NvbW1vbk1vZHVsZV1cbn0pXG5leHBvcnQgY2xhc3MgTmdQcm9ncmVzc01vZHVsZSB7XG4gIHN0YXRpYyB3aXRoQ29uZmlnKGNvbmZpZzogTmdQcm9ncmVzc0NvbmZpZyk6IE1vZHVsZVdpdGhQcm92aWRlcnM8TmdQcm9ncmVzc01vZHVsZT4ge1xuICAgIHJldHVybiB7XG4gICAgICBuZ01vZHVsZTogTmdQcm9ncmVzc01vZHVsZSxcbiAgICAgIHByb3ZpZGVyczogW1xuICAgICAgICB7cHJvdmlkZTogTkdfUFJPR1JFU1NfQ09ORklHLCB1c2VWYWx1ZTogY29uZmlnfVxuICAgICAgXVxuICAgIH07XG4gIH1cbn1cbiJdfQ==