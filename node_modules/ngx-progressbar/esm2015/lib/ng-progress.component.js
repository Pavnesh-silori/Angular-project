import { Component, Input, Output, EventEmitter, ChangeDetectionStrategy } from '@angular/core';
import { map } from 'rxjs/operators';
import { NgProgress } from './ng-progress.service';
import * as ɵngcc0 from '@angular/core';
import * as ɵngcc1 from './ng-progress.service';
import * as ɵngcc2 from '@angular/common';

function NgProgressComponent_ng_container_0_div_4_Template(rf, ctx) { if (rf & 1) {
    ɵngcc0.ɵɵelement(0, "div", 6);
} if (rf & 2) {
    const ctx_r2 = ɵngcc0.ɵɵnextContext(2);
    ɵngcc0.ɵɵstyleProp("box-shadow", "0 0 10px " + ctx_r2.color + ", 0 0 5px " + ctx_r2.color);
} }
function NgProgressComponent_ng_container_0_div_5_Template(rf, ctx) { if (rf & 1) {
    ɵngcc0.ɵɵelementStart(0, "div", 7);
    ɵngcc0.ɵɵelement(1, "div", 8);
    ɵngcc0.ɵɵelementEnd();
} if (rf & 2) {
    const ctx_r3 = ɵngcc0.ɵɵnextContext(2);
    ɵngcc0.ɵɵadvance(1);
    ɵngcc0.ɵɵstyleProp("border-top-color", ctx_r3.color)("border-left-color", ctx_r3.color);
} }
function NgProgressComponent_ng_container_0_Template(rf, ctx) { if (rf & 1) {
    ɵngcc0.ɵɵelementContainerStart(0);
    ɵngcc0.ɵɵelementStart(1, "div", 1);
    ɵngcc0.ɵɵelementStart(2, "div", 2);
    ɵngcc0.ɵɵelementStart(3, "div", 3);
    ɵngcc0.ɵɵtemplate(4, NgProgressComponent_ng_container_0_div_4_Template, 1, 2, "div", 4);
    ɵngcc0.ɵɵelementEnd();
    ɵngcc0.ɵɵelementEnd();
    ɵngcc0.ɵɵtemplate(5, NgProgressComponent_ng_container_0_div_5_Template, 2, 4, "div", 5);
    ɵngcc0.ɵɵelementEnd();
    ɵngcc0.ɵɵelementContainerEnd();
} if (rf & 2) {
    const state_r1 = ctx.$implicit;
    const ctx_r0 = ɵngcc0.ɵɵnextContext();
    ɵngcc0.ɵɵadvance(1);
    ɵngcc0.ɵɵstyleProp("transition", "opacity " + ctx_r0.speed + "ms " + ctx_r0.ease);
    ɵngcc0.ɵɵattribute("active", state_r1.active);
    ɵngcc0.ɵɵadvance(2);
    ɵngcc0.ɵɵstyleProp("transform", state_r1.transform)("background-color", ctx_r0.color)("transition", state_r1.active ? "all " + ctx_r0.speed + "ms " + ctx_r0.ease : "none");
    ɵngcc0.ɵɵadvance(1);
    ɵngcc0.ɵɵproperty("ngIf", ctx_r0.meteor);
    ɵngcc0.ɵɵadvance(1);
    ɵngcc0.ɵɵproperty("ngIf", ctx_r0.spinner);
} }
export class NgProgressComponent {
    constructor(_ngProgress) {
        this._ngProgress = _ngProgress;
        /** Creates a new instance if id is not already exists */
        this.id = 'root';
        /** Initializes inputs from the global config */
        this.min = this._ngProgress.config.min;
        this.max = this._ngProgress.config.max;
        this.ease = this._ngProgress.config.ease;
        this.color = this._ngProgress.config.color;
        this.speed = this._ngProgress.config.speed;
        this.thick = this._ngProgress.config.thick;
        this.fixed = this._ngProgress.config.fixed;
        this.meteor = this._ngProgress.config.meteor;
        this.spinner = this._ngProgress.config.spinner;
        this.trickleSpeed = this._ngProgress.config.trickleSpeed;
        this.debounceTime = this._ngProgress.config.debounceTime;
        this.trickleFunc = this._ngProgress.config.trickleFunc;
        this.spinnerPosition = this._ngProgress.config.spinnerPosition;
        this.direction = this._ngProgress.config.direction;
        this.started = new EventEmitter();
        this.completed = new EventEmitter();
    }
    get isStarted() {
        var _a;
        return (_a = this.progressRef) === null || _a === void 0 ? void 0 : _a.isStarted;
    }
    ngOnChanges() {
        var _a;
        // Update progress bar config when inputs change
        (_a = this.progressRef) === null || _a === void 0 ? void 0 : _a.setConfig({
            max: (this.max > 0 && this.max <= 100) ? this.max : 100,
            min: (this.min < 100 && this.min >= 0) ? this.min : 0,
            speed: this.speed,
            trickleSpeed: this.trickleSpeed,
            trickleFunc: this.trickleFunc,
            debounceTime: this.debounceTime
        });
    }
    ngOnInit() {
        // Get progress bar service instance
        this.progressRef = this._ngProgress.ref(this.id, {
            max: this.max,
            min: this.min,
            speed: this.speed,
            trickleSpeed: this.trickleSpeed,
            debounceTime: this.debounceTime
        });
        // Subscribe to progress state
        this.state$ = this.progressRef.state.pipe(map((state) => ({
            active: state.active,
            transform: `translate3d(${state.value}%,0,0)`
        })));
        // Subscribes to started and completed events on demand
        if (this.started.observers.length) {
            this._started = this.progressRef.started.subscribe(() => this.started.emit());
        }
        if (this.completed.observers.length) {
            this._completed = this.progressRef.completed.subscribe(() => this.completed.emit());
        }
    }
    ngOnDestroy() {
        var _a, _b, _c;
        (_a = this._started) === null || _a === void 0 ? void 0 : _a.unsubscribe();
        (_b = this._completed) === null || _b === void 0 ? void 0 : _b.unsubscribe();
        (_c = this.progressRef) === null || _c === void 0 ? void 0 : _c.destroy();
    }
    start() {
        this.progressRef.start();
    }
    complete() {
        this.progressRef.complete();
    }
    inc(n) {
        this.progressRef.inc(n);
    }
    set(n) {
        this.progressRef.set(n);
    }
}
NgProgressComponent.ɵfac = function NgProgressComponent_Factory(t) { return new (t || NgProgressComponent)(ɵngcc0.ɵɵdirectiveInject(ɵngcc1.NgProgress)); };
NgProgressComponent.ɵcmp = /*@__PURE__*/ ɵngcc0.ɵɵdefineComponent({ type: NgProgressComponent, selectors: [["ng-progress"]], hostAttrs: ["role", "progressbar"], hostVars: 4, hostBindings: function NgProgressComponent_HostBindings(rf, ctx) { if (rf & 2) {
        ɵngcc0.ɵɵattribute("spinnerPosition", ctx.spinnerPosition)("dir", ctx.direction)("thick", ctx.thick)("fixed", ctx.fixed);
    } }, inputs: { id: "id", min: "min", max: "max", ease: "ease", color: "color", speed: "speed", thick: "thick", fixed: "fixed", meteor: "meteor", spinner: "spinner", trickleSpeed: "trickleSpeed", debounceTime: "debounceTime", trickleFunc: "trickleFunc", spinnerPosition: "spinnerPosition", direction: "direction" }, outputs: { started: "started", completed: "completed" }, features: [ɵngcc0.ɵɵNgOnChangesFeature], decls: 2, vars: 3, consts: [[4, "ngIf"], [1, "ng-progress-bar"], [1, "ng-bar-placeholder"], [1, "ng-bar"], ["class", "ng-meteor", 3, "boxShadow", 4, "ngIf"], ["class", "ng-spinner", 4, "ngIf"], [1, "ng-meteor"], [1, "ng-spinner"], [1, "ng-spinner-icon"]], template: function NgProgressComponent_Template(rf, ctx) { if (rf & 1) {
        ɵngcc0.ɵɵtemplate(0, NgProgressComponent_ng_container_0_Template, 6, 11, "ng-container", 0);
        ɵngcc0.ɵɵpipe(1, "async");
    } if (rf & 2) {
        ɵngcc0.ɵɵproperty("ngIf", ɵngcc0.ɵɵpipeBind1(1, 1, ctx.state$));
    } }, directives: [ɵngcc2.NgIf], pipes: [ɵngcc2.AsyncPipe], styles: ["[_nghost-%COMP%]{z-index:999999;pointer-events:none}[fixed=true][_nghost-%COMP%]   .ng-progress-bar[_ngcontent-%COMP%], [fixed=true][_nghost-%COMP%]   .ng-spinner[_ngcontent-%COMP%]{position:fixed}[fixed=true][_nghost-%COMP%]   .ng-spinner[_ngcontent-%COMP%]{top:15px}[fixed=true][spinnerPosition=left][_nghost-%COMP%]   .ng-spinner[_ngcontent-%COMP%]{left:15px}[fixed=true][spinnerPosition=right][_nghost-%COMP%]   .ng-spinner[_ngcontent-%COMP%]{right:15px}[thick=true][_nghost-%COMP%]   .ng-spinner-icon[_ngcontent-%COMP%]{width:24px;height:24px;border-width:3px}[thick=true][_nghost-%COMP%]   .ng-bar-placeholder[_ngcontent-%COMP%]{height:3px!important}[dir=\"ltr+\"][_nghost-%COMP%]   .ng-meteor[_ngcontent-%COMP%], [dir=ltr-][_nghost-%COMP%]   .ng-meteor[_ngcontent-%COMP%]{transform:rotate(3deg)}[dir=\"ltr+\"][thick=true][_nghost-%COMP%]   .ng-meteor[_ngcontent-%COMP%], [dir=ltr-][thick=true][_nghost-%COMP%]   .ng-meteor[_ngcontent-%COMP%]{transform:rotate(4deg)}[dir=\"ltr+\"][_nghost-%COMP%]   .ng-bar[_ngcontent-%COMP%], [dir=\"rtl+\"][_nghost-%COMP%]   .ng-bar[_ngcontent-%COMP%]{margin-left:-100%}[dir=\"ltr+\"][_nghost-%COMP%]   .ng-meteor[_ngcontent-%COMP%], [dir=\"rtl+\"][_nghost-%COMP%]   .ng-meteor[_ngcontent-%COMP%]{right:0}[dir=\"ltr+\"][_nghost-%COMP%]   .ng-meteor[_ngcontent-%COMP%], [dir=rtl-][_nghost-%COMP%]   .ng-meteor[_ngcontent-%COMP%]{top:-3px}[dir=\"ltr+\"][thick=true][_nghost-%COMP%]   .ng-meteor[_ngcontent-%COMP%], [dir=rtl-][thick=true][_nghost-%COMP%]   .ng-meteor[_ngcontent-%COMP%]{top:-4px}[dir=\"rtl+\"][_nghost-%COMP%]   .ng-meteor[_ngcontent-%COMP%], [dir=ltr-][_nghost-%COMP%]   .ng-meteor[_ngcontent-%COMP%]{bottom:-3px}[dir=\"rtl+\"][thick=true][_nghost-%COMP%]   .ng-meteor[_ngcontent-%COMP%], [dir=ltr-][thick=true][_nghost-%COMP%]   .ng-meteor[_ngcontent-%COMP%]{bottom:-4px}[dir=\"rtl+\"][_nghost-%COMP%]   .ng-bar-placeholder[_ngcontent-%COMP%], [dir=ltr-][_nghost-%COMP%]   .ng-bar-placeholder[_ngcontent-%COMP%]{transform:rotate(180deg)}[dir=\"rtl+\"][_nghost-%COMP%]   .ng-spinner-icon[_ngcontent-%COMP%], [dir=ltr-][_nghost-%COMP%]   .ng-spinner-icon[_ngcontent-%COMP%]{animation-direction:reverse}[dir=\"rtl+\"][_nghost-%COMP%]   .ng-meteor[_ngcontent-%COMP%], [dir=rtl-][_nghost-%COMP%]   .ng-meteor[_ngcontent-%COMP%]{transform:rotate(-3deg)}[dir=\"rtl+\"][thick=true][_nghost-%COMP%]   .ng-meteor[_ngcontent-%COMP%], [dir=rtl-][thick=true][_nghost-%COMP%]   .ng-meteor[_ngcontent-%COMP%]{transform:rotate(-4deg)}[spinnerPosition=left][_nghost-%COMP%]   .ng-spinner[_ngcontent-%COMP%]{left:10px}[spinnerPosition=right][_nghost-%COMP%]   .ng-spinner[_ngcontent-%COMP%]{right:10px}.ng-progress-bar[_ngcontent-%COMP%]{position:relative;z-index:999999;top:0;left:0;width:100%;zoom:1;filter:alpha(opacity=0);opacity:0}.ng-progress-bar[active=true][_ngcontent-%COMP%]{filter:alpha(opacity=100);opacity:1;transition:none}.ng-bar-placeholder[_ngcontent-%COMP%]{position:absolute;height:2px;width:100%}.ng-bar[_ngcontent-%COMP%]{width:100%;height:100%;transform:translate(-100%,0,0)}.ng-meteor[_ngcontent-%COMP%]{width:100px;height:100%;opacity:1}.ng-meteor[_ngcontent-%COMP%], .ng-spinner[_ngcontent-%COMP%]{display:block;position:absolute}.ng-spinner[_ngcontent-%COMP%]{z-index:1031;top:10px}.ng-spinner-icon[_ngcontent-%COMP%]{width:18px;height:18px;box-sizing:border-box;-webkit-animation:spinner-animation .25s linear infinite;animation:spinner-animation .25s linear infinite;border:2px solid transparent;border-radius:50%}@-webkit-keyframes spinner-animation{0%{transform:rotate(0deg)}to{transform:rotate(1turn)}}@keyframes spinner-animation{0%{transform:rotate(0deg)}to{transform:rotate(1turn)}}"], changeDetection: 0 });
NgProgressComponent.ctorParameters = () => [
    { type: NgProgress }
];
NgProgressComponent.propDecorators = {
    id: [{ type: Input }],
    min: [{ type: Input }],
    max: [{ type: Input }],
    ease: [{ type: Input }],
    color: [{ type: Input }],
    speed: [{ type: Input }],
    thick: [{ type: Input }],
    fixed: [{ type: Input }],
    meteor: [{ type: Input }],
    spinner: [{ type: Input }],
    trickleSpeed: [{ type: Input }],
    debounceTime: [{ type: Input }],
    trickleFunc: [{ type: Input }],
    spinnerPosition: [{ type: Input }],
    direction: [{ type: Input }],
    started: [{ type: Output }],
    completed: [{ type: Output }]
};
(function () { (typeof ngDevMode === "undefined" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(NgProgressComponent, [{
        type: Component,
        args: [{
                selector: 'ng-progress',
                host: {
                    'role': 'progressbar',
                    '[attr.spinnerPosition]': 'spinnerPosition',
                    '[attr.dir]': 'direction',
                    '[attr.thick]': 'thick',
                    '[attr.fixed]': 'fixed'
                },
                template: `
    <ng-container *ngIf="state$ | async; let state">
      <div class="ng-progress-bar"
           [attr.active]="state.active"
           [style.transition]="'opacity ' + speed + 'ms ' + ease">
        <div class="ng-bar-placeholder">
          <div class="ng-bar"
               [style.transform]="state.transform"
               [style.backgroundColor]="color"
               [style.transition]="state.active ? 'all ' + speed + 'ms ' + ease : 'none'">
            <div *ngIf="meteor" class="ng-meteor" [style.boxShadow]="'0 0 10px '+ color + ', 0 0 5px ' + color"></div>
          </div>
        </div>
        <div *ngIf="spinner" class="ng-spinner">
          <div class="ng-spinner-icon"
               [style.borderTopColor]="color"
               [style.borderLeftColor]="color"></div>
        </div>
      </div>
    </ng-container>
  `,
                changeDetection: ChangeDetectionStrategy.OnPush,
                styles: [":host{z-index:999999;pointer-events:none}:host[fixed=true] .ng-progress-bar,:host[fixed=true] .ng-spinner{position:fixed}:host[fixed=true] .ng-spinner{top:15px}:host[fixed=true][spinnerPosition=left] .ng-spinner{left:15px}:host[fixed=true][spinnerPosition=right] .ng-spinner{right:15px}:host[thick=true] .ng-spinner-icon{width:24px;height:24px;border-width:3px}:host[thick=true] .ng-bar-placeholder{height:3px!important}:host[dir=\"ltr+\"] .ng-meteor,:host[dir=ltr-] .ng-meteor{transform:rotate(3deg)}:host[dir=\"ltr+\"][thick=true] .ng-meteor,:host[dir=ltr-][thick=true] .ng-meteor{transform:rotate(4deg)}:host[dir=\"ltr+\"] .ng-bar,:host[dir=\"rtl+\"] .ng-bar{margin-left:-100%}:host[dir=\"ltr+\"] .ng-meteor,:host[dir=\"rtl+\"] .ng-meteor{right:0}:host[dir=\"ltr+\"] .ng-meteor,:host[dir=rtl-] .ng-meteor{top:-3px}:host[dir=\"ltr+\"][thick=true] .ng-meteor,:host[dir=rtl-][thick=true] .ng-meteor{top:-4px}:host[dir=\"rtl+\"] .ng-meteor,:host[dir=ltr-] .ng-meteor{bottom:-3px}:host[dir=\"rtl+\"][thick=true] .ng-meteor,:host[dir=ltr-][thick=true] .ng-meteor{bottom:-4px}:host[dir=\"rtl+\"] .ng-bar-placeholder,:host[dir=ltr-] .ng-bar-placeholder{transform:rotate(180deg)}:host[dir=\"rtl+\"] .ng-spinner-icon,:host[dir=ltr-] .ng-spinner-icon{animation-direction:reverse}:host[dir=\"rtl+\"] .ng-meteor,:host[dir=rtl-] .ng-meteor{transform:rotate(-3deg)}:host[dir=\"rtl+\"][thick=true] .ng-meteor,:host[dir=rtl-][thick=true] .ng-meteor{transform:rotate(-4deg)}:host[spinnerPosition=left] .ng-spinner{left:10px}:host[spinnerPosition=right] .ng-spinner{right:10px}.ng-progress-bar{position:relative;z-index:999999;top:0;left:0;width:100%;zoom:1;filter:alpha(opacity=0);opacity:0}.ng-progress-bar[active=true]{filter:alpha(opacity=100);opacity:1;transition:none}.ng-bar-placeholder{position:absolute;height:2px;width:100%}.ng-bar{width:100%;height:100%;transform:translate(-100%,0,0)}.ng-meteor{width:100px;height:100%;opacity:1}.ng-meteor,.ng-spinner{display:block;position:absolute}.ng-spinner{z-index:1031;top:10px}.ng-spinner-icon{width:18px;height:18px;box-sizing:border-box;-webkit-animation:spinner-animation .25s linear infinite;animation:spinner-animation .25s linear infinite;border:2px solid transparent;border-radius:50%}@-webkit-keyframes spinner-animation{0%{transform:rotate(0deg)}to{transform:rotate(1turn)}}@keyframes spinner-animation{0%{transform:rotate(0deg)}to{transform:rotate(1turn)}}"]
            }]
    }], function () { return [{ type: ɵngcc1.NgProgress }]; }, { id: [{
            type: Input
        }], min: [{
            type: Input
        }], max: [{
            type: Input
        }], ease: [{
            type: Input
        }], color: [{
            type: Input
        }], speed: [{
            type: Input
        }], thick: [{
            type: Input
        }], fixed: [{
            type: Input
        }], meteor: [{
            type: Input
        }], spinner: [{
            type: Input
        }], trickleSpeed: [{
            type: Input
        }], debounceTime: [{
            type: Input
        }], trickleFunc: [{
            type: Input
        }], spinnerPosition: [{
            type: Input
        }], direction: [{
            type: Input
        }], started: [{
            type: Output
        }], completed: [{
            type: Output
        }] }); })();

//# sourceMappingURL=data:application/json;charset=utf-8;base64,