import { __decorate, __metadata, __param } from "tslib";
import { Component, Input, Inject } from "@angular/core";
import { BootstrapVersion } from "../../../lib/Enums/BootstrapVersion";
import { BOOTSTRAP_VERSION } from "../../Tokens/tokens";
import * as ɵngcc0 from '@angular/core';
import * as ɵngcc1 from '@angular/common';

function MessagesComponent_span_0_Template(rf, ctx) { if (rf & 1) {
    ɵngcc0.ɵɵelementStart(0, "span", 1);
    ɵngcc0.ɵɵtext(1);
    ɵngcc0.ɵɵelementEnd();
} if (rf & 2) {
    const message_r1 = ctx.$implicit;
    const ctx_r0 = ɵngcc0.ɵɵnextContext();
    ɵngcc0.ɵɵproperty("ngClass", ctx_r0.className);
    ɵngcc0.ɵɵadvance(1);
    ɵngcc0.ɵɵtextInterpolate(message_r1);
} }
let MessagesComponent = class MessagesComponent {
    constructor(bootstrapVersion) {
        this.bootstrapVersion = bootstrapVersion;
        this.messages = () => [];
    }
    get className() {
        switch (this.bootstrapVersion) {
            case BootstrapVersion.Three:
                return "help-block";
            case BootstrapVersion.Four:
                return "invalid-feedback";
        }
    }
};
MessagesComponent.ɵfac = function MessagesComponent_Factory(t) { return new (t || MessagesComponent)(ɵngcc0.ɵɵdirectiveInject(BOOTSTRAP_VERSION)); };
MessagesComponent.ɵcmp = /*@__PURE__*/ ɵngcc0.ɵɵdefineComponent({ type: MessagesComponent, selectors: [["bfv-messages"]], inputs: { messages: "messages" }, decls: 1, vars: 1, consts: [[3, "ngClass", 4, "ngFor", "ngForOf"], [3, "ngClass"]], template: function MessagesComponent_Template(rf, ctx) { if (rf & 1) {
        ɵngcc0.ɵɵtemplate(0, MessagesComponent_span_0_Template, 2, 2, "span", 0);
    } if (rf & 2) {
        ɵngcc0.ɵɵproperty("ngForOf", ctx.messages());
    } }, directives: [ɵngcc1.NgForOf, ɵngcc1.NgClass], styles: [".invalid-feedback[_ngcontent-%COMP%], .valid-feedback[_ngcontent-%COMP%] {\n        display: block;\n      }"] });
MessagesComponent.ctorParameters = () => [
    { type: undefined, decorators: [{ type: Inject, args: [BOOTSTRAP_VERSION,] }] }
];
__decorate([
    Input(),
    __metadata("design:type", Object)
], MessagesComponent.prototype, "messages", void 0);
MessagesComponent = __decorate([ __param(0, Inject(BOOTSTRAP_VERSION)),
    __metadata("design:paramtypes", [Number])
], MessagesComponent);
(function () { (typeof ngDevMode === "undefined" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(MessagesComponent, [{
        type: Component,
        args: [{
                selector: "bfv-messages",
                template: `
    <span [ngClass]="className" *ngFor="let message of messages()">{{message}}</span>
  `,
                styles: [`
      .invalid-feedback,
      .valid-feedback {
        display: block;
      }
    `]
            }]
    }], function () { return [{ type: undefined, decorators: [{
                type: Inject,
                args: [BOOTSTRAP_VERSION]
            }] }]; }, { messages: [{
            type: Input
        }] }); })();
export { MessagesComponent };

//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoibWVzc2FnZXMuY29tcG9uZW50LmpzIiwic291cmNlcyI6WyJuZy1ib290c3RyYXAtZm9ybS12YWxpZGF0aW9uL2xpYi9Db21wb25lbnRzL21lc3NhZ2VzL21lc3NhZ2VzLmNvbXBvbmVudC50cyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiO0FBQUEsT0FBTyxFQUFFLFNBQVMsRUFBRSxLQUFLLEVBQUUsTUFBTSxFQUFFLE1BQU0sZUFBZSxDQUFDO0FBQ3pELE9BQU8sRUFBRSxnQkFBZ0IsRUFBRSxNQUFNLHFDQUFxQyxDQUFDO0FBQ3ZFLE9BQU8sRUFBRSxpQkFBaUIsRUFBRSxNQUFNLHFCQUFxQixDQUFDOzs7Ozs7Ozs7Ozs7Ozs7QUFnQnhELElBQWEsaUJBQWlCLEdBQTlCLE1BQWEsaUJBQWlCO0FBQzlCLElBWUUsWUFDcUMsZ0JBQWtDO0FBQ3RFLFFBRG9DLHFCQUFnQixHQUFoQixnQkFBZ0IsQ0FBa0I7QUFDekUsUUFiUyxhQUFRLEdBQUcsR0FBRyxFQUFFLENBQUMsRUFBRSxDQUFDO0FBQzdCLElBWUssQ0FBQztBQUNOLElBWkUsSUFBSSxTQUFTO0FBQ2YsUUFBSSxRQUFRLElBQUksQ0FBQyxnQkFBZ0IsRUFBRTtBQUNuQyxZQUFNLEtBQUssZ0JBQWdCLENBQUMsS0FBSztBQUNqQyxnQkFBUSxPQUFPLFlBQVksQ0FBQztBQUM1QixZQUFNLEtBQUssZ0JBQWdCLENBQUMsSUFBSTtBQUNoQyxnQkFBUSxPQUFPLGtCQUFrQixDQUFDO0FBQ2xDLFNBQUs7QUFDTCxJQUFFLENBQUM7QUFDSCxDQUlDOzs7Ozs7bUxBQUE7QUFDRDtBQUEyQyw0Q0FIdEMsTUFBTSxTQUFDLGlCQUFpQjtBQUFRO0FBWm5DO0FBQWEsSUFEWixLQUFLLEVBQUU7QUFDVDtBQUVPLG1EQUZxQjtBQUZoQixpQkFBaUIsb0JBZDdCLFNBQVMsQ0FBQyxVQUNULFFBQVEsRUFBRSxuQ0FhUixDQWNDLFdBQUEsTUFBTSxDQUFDLGlCQUFpQixDQUFDLENBQUE7U0EzQkosVUFDeEIsUUFBUSxFQUFFLDdCQTBCb0I7QUFDNUIsR0FmUyxpQkFBaUIsQ0FnQjdCO21EQTFCRSxtQkFFQzs7O0dBS0MsT0FFSixDQUFDOzs7Ozs7Ozs7Ozs7Ozs7O29CQWtCRjtBQUFDLFNBakJZLGlCQUFpQjtBQUM3QiIsInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7IENvbXBvbmVudCwgSW5wdXQsIEluamVjdCB9IGZyb20gXCJAYW5ndWxhci9jb3JlXCI7XG5pbXBvcnQgeyBCb290c3RyYXBWZXJzaW9uIH0gZnJvbSBcIi4uLy4uLy4uL2xpYi9FbnVtcy9Cb290c3RyYXBWZXJzaW9uXCI7XG5pbXBvcnQgeyBCT09UU1RSQVBfVkVSU0lPTiB9IGZyb20gXCIuLi8uLi9Ub2tlbnMvdG9rZW5zXCI7XG5cbkBDb21wb25lbnQoe1xuICBzZWxlY3RvcjogXCJiZnYtbWVzc2FnZXNcIixcbiAgdGVtcGxhdGU6IGBcbiAgICA8c3BhbiBbbmdDbGFzc109XCJjbGFzc05hbWVcIiAqbmdGb3I9XCJsZXQgbWVzc2FnZSBvZiBtZXNzYWdlcygpXCI+e3ttZXNzYWdlfX08L3NwYW4+XG4gIGAsXG4gIHN0eWxlczogW1xuICAgIGBcbiAgICAgIC5pbnZhbGlkLWZlZWRiYWNrLFxuICAgICAgLnZhbGlkLWZlZWRiYWNrIHtcbiAgICAgICAgZGlzcGxheTogYmxvY2s7XG4gICAgICB9XG4gICAgYFxuICBdXG59KVxuZXhwb3J0IGNsYXNzIE1lc3NhZ2VzQ29tcG9uZW50IHtcbiAgQElucHV0KClcbiAgcHVibGljIG1lc3NhZ2VzID0gKCkgPT4gW107XG5cbiAgZ2V0IGNsYXNzTmFtZSgpIHtcbiAgICBzd2l0Y2ggKHRoaXMuYm9vdHN0cmFwVmVyc2lvbikge1xuICAgICAgY2FzZSBCb290c3RyYXBWZXJzaW9uLlRocmVlOlxuICAgICAgICByZXR1cm4gXCJoZWxwLWJsb2NrXCI7XG4gICAgICBjYXNlIEJvb3RzdHJhcFZlcnNpb24uRm91cjpcbiAgICAgICAgcmV0dXJuIFwiaW52YWxpZC1mZWVkYmFja1wiO1xuICAgIH1cbiAgfVxuXG4gIGNvbnN0cnVjdG9yKFxuICAgIEBJbmplY3QoQk9PVFNUUkFQX1ZFUlNJT04pIHByaXZhdGUgYm9vdHN0cmFwVmVyc2lvbjogQm9vdHN0cmFwVmVyc2lvblxuICApIHt9XG59XG4iXX0=