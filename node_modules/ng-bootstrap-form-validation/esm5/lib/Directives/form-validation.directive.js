import { __decorate, __metadata } from "tslib";
import { Directive, EventEmitter, Input, Output, HostListener } from "@angular/core";
import { FormArray, FormControl, FormGroup } from "@angular/forms";
import * as ɵngcc0 from '@angular/core';
var FormValidationDirective = /** @class */ (function () {
    function FormValidationDirective() {
        this.validSubmit = new EventEmitter();
    }
    FormValidationDirective.prototype.onSubmit = function () {
        this.markAsTouchedAndDirty(this.formGroup);
        if (this.formGroup.valid) {
            this.validSubmit.emit(this.formGroup.value);
        }
    };
    FormValidationDirective.prototype.markAsTouchedAndDirty = function (control) {
        var _this = this;
        if (control instanceof FormGroup) {
            Object.keys(control.controls).forEach(function (key) {
                return _this.markAsTouchedAndDirty(control.controls[key]);
            });
        }
        else if (control instanceof FormArray) {
            control.controls.forEach(function (c) { return _this.markAsTouchedAndDirty(c); });
        }
        else if (control instanceof FormControl && control.enabled) {
            control.markAsDirty();
            control.markAsTouched();
            control.updateValueAndValidity();
        }
    };
    __decorate([
        Input(),
        __metadata("design:type", FormGroup)
    ], FormValidationDirective.prototype, "formGroup", void 0);
    __decorate([
        Output(),
        __metadata("design:type", Object)
    ], FormValidationDirective.prototype, "validSubmit", void 0);
    __decorate([
        HostListener("submit"),
        __metadata("design:type", Function),
        __metadata("design:paramtypes", []),
        __metadata("design:returntype", void 0)
    ], FormValidationDirective.prototype, "onSubmit", null);
FormValidationDirective.ɵfac = function FormValidationDirective_Factory(t) { return new (t || FormValidationDirective)(); };
FormValidationDirective.ɵdir = /*@__PURE__*/ ɵngcc0.ɵɵdefineDirective({ type: FormValidationDirective, selectors: [["", "formGroup", ""]], hostBindings: function FormValidationDirective_HostBindings(rf, ctx) { if (rf & 1) {
        ɵngcc0.ɵɵlistener("submit", function FormValidationDirective_submit_HostBindingHandler() { return ctx.onSubmit(); });
    } }, inputs: { formGroup: "formGroup" }, outputs: { validSubmit: "validSubmit" } });
(function () { (typeof ngDevMode === "undefined" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(FormValidationDirective, [{
        type: Directive,
        args: [{
                // tslint:disable-next-line:directive-selector
                selector: "[formGroup]"
            }]
    }], function () { return []; }, { validSubmit: [{
            type: Output
        }], onSubmit: [{
            type: HostListener,
            args: ["submit"]
        }], formGroup: [{
            type: Input
        }] }); })();
    return FormValidationDirective;
}());
export { FormValidationDirective };

//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiZm9ybS12YWxpZGF0aW9uLmRpcmVjdGl2ZS5qcyIsInNvdXJjZXMiOlsibmctYm9vdHN0cmFwLWZvcm0tdmFsaWRhdGlvbi9saWIvRGlyZWN0aXZlcy9mb3JtLXZhbGlkYXRpb24uZGlyZWN0aXZlLnRzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiI7QUFBQSxPQUFPLEVBQ0wsU0FBUyxFQUNULFlBQVksRUFDWixLQUFLLEVBQ0wsTUFBTSxFQUNOLFlBQVksRUFDYixNQUFNLGVBQWUsQ0FBQztBQUN2QixPQUFPLEVBRUwsU0FBUyxFQUNULFdBQVcsRUFDWCxTQUFTLEVBQ1YsTUFBTSxnQkFBZ0IsQ0FBQzs7QUFNeEI7QUFFUyxJQUZUO0FBQXFDLFFBSW5DLGdCQUFXLEdBQUcsSUFBSSxZQUFZLEVBQU8sQ0FBQztBQUN4QyxJQXNCQSxDQUFDO0FBQ0QsSUFyQkUsMENBQVEsR0FBUjtBQUNELFFBQUcsSUFBSSxDQUFDLHFCQUFxQixDQUFDLElBQUksQ0FBQyxTQUFTLENBQUMsQ0FBQztBQUMvQyxRQUFJLElBQUksSUFBSSxDQUFDLFNBQVMsQ0FBQyxLQUFLLEVBQUU7QUFDOUIsWUFBTSxJQUFJLENBQUMsV0FBVyxDQUFDLElBQUksQ0FBQyxJQUFJLENBQUMsU0FBUyxDQUFDLEtBQUssQ0FBQyxDQUFDO0FBQ2xELFNBQUs7QUFDTCxJQUFFLENBQUM7QUFFSCxJQUFFLHVEQUFxQixHQUFyQixVQUFzQixPQUF3QjtBQUNoRCxRQURFLGlCQVlDO0FBQ0gsUUFaSSxJQUFJLE9BQU8sWUFBWSxTQUFTLEVBQUU7QUFDdEMsWUFBTSxNQUFNLENBQUMsSUFBSSxDQUFDLE9BQU8sQ0FBQyxRQUFRLENBQUMsQ0FBQyxPQUFPLENBQUMsVUFBQSxHQUFHO0FBQy9DLGdCQUFRLE9BQUEsS0FBSSxDQUFDLHFCQUFxQixDQUFDLE9BQU8sQ0FBQyxRQUFRLENBQUMsR0FBRyxDQUFDLENBQUM7QUFDeEQsWUFETyxDQUFpRCxDQUNsRCxDQUFDO0FBQ1IsU0FBSztBQUFDLGFBQUssSUFBSSxPQUFPLFlBQVksU0FBUyxFQUFFO0FBQzdDLFlBQU0sT0FBTyxDQUFDLFFBQVEsQ0FBQyxPQUFPLENBQUMsVUFBQSxDQUFDLElBQUksT0FBQSxLQUFJLENBQUMscUJBQXFCLENBQUMsQ0FBQyxDQUFDLEVBQTdCLENBQTZCLENBQUMsQ0FBQztBQUNuRSxTQUFLO0FBQUMsYUFBSyxJQUFJLE9BQU8sWUFBWSxXQUFXLElBQUksT0FBTyxDQUFDLE9BQU8sRUFBRTtBQUNsRSxZQUFNLE9BQU8sQ0FBQyxXQUFXLEVBQUUsQ0FBQztBQUM1QixZQUFNLE9BQU8sQ0FBQyxhQUFhLEVBQUUsQ0FBQztBQUM5QixZQUFNLE9BQU8sQ0FBQyxzQkFBc0IsRUFBRSxDQUFDO0FBQ3ZDLFNBQUs7QUFDTCxJQUFFLENBQUM7QUFDRixJQXpCQztBQUFhLFFBRFosS0FBSyxFQUFFO0FBQ1Qsa0NBQVksU0FBUztBQUN0Qiw4REFEdUI7QUFDdEIsSUFDQztBQUFhLFFBRFosTUFBTSxFQUFFO0FBQ1Y7QUFFQSxnRUFGdUM7QUFFeEMsSUFDRTtBQUNGLFFBRkcsWUFBWSxDQUFDLFFBQVEsQ0FBQztBQUN4QjtBQUM4QjtBQUNIO0FBQ2dCLDJEQUV6QztJQVpVLHVCQUF1Qix3QkFKbkMsU0FBUyxDQUFDLGNBQ1QsOENBQThDO1NBQzlDLFFBQVEsRUFBRSxhQUFhLFVBQ3hCLENBQUMsUUFDVyx1QkFBdUIsQ0EyQm5DOzs7Ozs7Ozs7Ozs7Ozs7O29CQUNEO0FBQUMsSUFERCw4QkFBQztBQUNBLENBREEsQUEzQkQsSUEyQkM7QUFDRCxTQTVCYSx1QkFBdUI7QUFDbkMiLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQge1xuICBEaXJlY3RpdmUsXG4gIEV2ZW50RW1pdHRlcixcbiAgSW5wdXQsXG4gIE91dHB1dCxcbiAgSG9zdExpc3RlbmVyXG59IGZyb20gXCJAYW5ndWxhci9jb3JlXCI7XG5pbXBvcnQge1xuICBBYnN0cmFjdENvbnRyb2wsXG4gIEZvcm1BcnJheSxcbiAgRm9ybUNvbnRyb2wsXG4gIEZvcm1Hcm91cFxufSBmcm9tIFwiQGFuZ3VsYXIvZm9ybXNcIjtcblxuQERpcmVjdGl2ZSh7XG4gIC8vIHRzbGludDpkaXNhYmxlLW5leHQtbGluZTpkaXJlY3RpdmUtc2VsZWN0b3JcbiAgc2VsZWN0b3I6IFwiW2Zvcm1Hcm91cF1cIlxufSlcbmV4cG9ydCBjbGFzcyBGb3JtVmFsaWRhdGlvbkRpcmVjdGl2ZSB7XG4gIEBJbnB1dCgpXG4gIGZvcm1Hcm91cDogRm9ybUdyb3VwO1xuICBAT3V0cHV0KClcbiAgdmFsaWRTdWJtaXQgPSBuZXcgRXZlbnRFbWl0dGVyPGFueT4oKTtcblxuICBASG9zdExpc3RlbmVyKFwic3VibWl0XCIpXG4gIG9uU3VibWl0KCkge1xuICAgIHRoaXMubWFya0FzVG91Y2hlZEFuZERpcnR5KHRoaXMuZm9ybUdyb3VwKTtcbiAgICBpZiAodGhpcy5mb3JtR3JvdXAudmFsaWQpIHtcbiAgICAgIHRoaXMudmFsaWRTdWJtaXQuZW1pdCh0aGlzLmZvcm1Hcm91cC52YWx1ZSk7XG4gICAgfVxuICB9XG5cbiAgbWFya0FzVG91Y2hlZEFuZERpcnR5KGNvbnRyb2w6IEFic3RyYWN0Q29udHJvbCkge1xuICAgIGlmIChjb250cm9sIGluc3RhbmNlb2YgRm9ybUdyb3VwKSB7XG4gICAgICBPYmplY3Qua2V5cyhjb250cm9sLmNvbnRyb2xzKS5mb3JFYWNoKGtleSA9PlxuICAgICAgICB0aGlzLm1hcmtBc1RvdWNoZWRBbmREaXJ0eShjb250cm9sLmNvbnRyb2xzW2tleV0pXG4gICAgICApO1xuICAgIH0gZWxzZSBpZiAoY29udHJvbCBpbnN0YW5jZW9mIEZvcm1BcnJheSkge1xuICAgICAgY29udHJvbC5jb250cm9scy5mb3JFYWNoKGMgPT4gdGhpcy5tYXJrQXNUb3VjaGVkQW5kRGlydHkoYykpO1xuICAgIH0gZWxzZSBpZiAoY29udHJvbCBpbnN0YW5jZW9mIEZvcm1Db250cm9sICYmIGNvbnRyb2wuZW5hYmxlZCkge1xuICAgICAgY29udHJvbC5tYXJrQXNEaXJ0eSgpO1xuICAgICAgY29udHJvbC5tYXJrQXNUb3VjaGVkKCk7XG4gICAgICBjb250cm9sLnVwZGF0ZVZhbHVlQW5kVmFsaWRpdHkoKTtcbiAgICB9XG4gIH1cbn1cbiJdfQ==