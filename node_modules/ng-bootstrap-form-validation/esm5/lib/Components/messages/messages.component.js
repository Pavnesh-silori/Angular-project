import { __decorate, __metadata, __param } from "tslib";
import { Component, Input, Inject } from "@angular/core";
import { BootstrapVersion } from "../../../lib/Enums/BootstrapVersion";
import { BOOTSTRAP_VERSION } from "../../Tokens/tokens";
import * as ɵngcc0 from '@angular/core';
import * as ɵngcc1 from '@angular/common';

function MessagesComponent_span_0_Template(rf, ctx) { if (rf & 1) {
    ɵngcc0.ɵɵelementStart(0, "span", 1);
    ɵngcc0.ɵɵtext(1);
    ɵngcc0.ɵɵelementEnd();
} if (rf & 2) {
    var message_r1 = ctx.$implicit;
    var ctx_r0 = ɵngcc0.ɵɵnextContext();
    ɵngcc0.ɵɵproperty("ngClass", ctx_r0.className);
    ɵngcc0.ɵɵadvance(1);
    ɵngcc0.ɵɵtextInterpolate(message_r1);
} }
var MessagesComponent = /** @class */ (function () {
    function MessagesComponent(bootstrapVersion) {
        this.bootstrapVersion = bootstrapVersion;
        this.messages = function () { return []; };
    }
    Object.defineProperty(MessagesComponent.prototype, "className", {
        get: function () {
            switch (this.bootstrapVersion) {
                case BootstrapVersion.Three:
                    return "help-block";
                case BootstrapVersion.Four:
                    return "invalid-feedback";
            }
        },
        enumerable: true,
        configurable: true
    });
    MessagesComponent.ctorParameters = function () { return [
        { type: undefined, decorators: [{ type: Inject, args: [BOOTSTRAP_VERSION,] }] }
    ]; };
    __decorate([
        Input(),
        __metadata("design:type", Object)
    ], MessagesComponent.prototype, "messages", void 0);
    MessagesComponent = __decorate([ __param(0, Inject(BOOTSTRAP_VERSION)),
        __metadata("design:paramtypes", [Number])
    ], MessagesComponent);
MessagesComponent.ɵfac = function MessagesComponent_Factory(t) { return new (t || MessagesComponent)(ɵngcc0.ɵɵdirectiveInject(BOOTSTRAP_VERSION)); };
MessagesComponent.ɵcmp = /*@__PURE__*/ ɵngcc0.ɵɵdefineComponent({ type: MessagesComponent, selectors: [["bfv-messages"]], inputs: { messages: "messages" }, decls: 1, vars: 1, consts: [[3, "ngClass", 4, "ngFor", "ngForOf"], [3, "ngClass"]], template: function MessagesComponent_Template(rf, ctx) { if (rf & 1) {
        ɵngcc0.ɵɵtemplate(0, MessagesComponent_span_0_Template, 2, 2, "span", 0);
    } if (rf & 2) {
        ɵngcc0.ɵɵproperty("ngForOf", ctx.messages());
    } }, directives: [ɵngcc1.NgForOf, ɵngcc1.NgClass], styles: [".invalid-feedback[_ngcontent-%COMP%], .valid-feedback[_ngcontent-%COMP%] {\n        display: block;\n      }"] });
(function () { (typeof ngDevMode === "undefined" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(MessagesComponent, [{
        type: Component,
        args: [{
                selector: "bfv-messages",
                template: "\n    <span [ngClass]=\"className\" *ngFor=\"let message of messages()\">{{message}}</span>\n  ",
                styles: ["\n      .invalid-feedback,\n      .valid-feedback {\n        display: block;\n      }\n    "]
            }]
    }], function () { return [{ type: undefined, decorators: [{
                type: Inject,
                args: [BOOTSTRAP_VERSION]
            }] }]; }, { messages: [{
            type: Input
        }] }); })();
    return MessagesComponent;
}());
export { MessagesComponent };

//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoibWVzc2FnZXMuY29tcG9uZW50LmpzIiwic291cmNlcyI6WyJuZy1ib290c3RyYXAtZm9ybS12YWxpZGF0aW9uL2xpYi9Db21wb25lbnRzL21lc3NhZ2VzL21lc3NhZ2VzLmNvbXBvbmVudC50cyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiO0FBQUEsT0FBTyxFQUFFLFNBQVMsRUFBRSxLQUFLLEVBQUUsTUFBTSxFQUFFLE1BQU0sZUFBZSxDQUFDO0FBQ3pELE9BQU8sRUFBRSxnQkFBZ0IsRUFBRSxNQUFNLHFDQUFxQyxDQUFDO0FBQ3ZFLE9BQU8sRUFBRSxpQkFBaUIsRUFBRSxNQUFNLHFCQUFxQixDQUFDOzs7Ozs7Ozs7Ozs7Ozs7QUFnQnhEO0FBRVMsSUFXUCwyQkFDcUMsZ0JBQWtDO0FBQ3RFLFFBRG9DLHFCQUFnQixHQUFoQixnQkFBZ0IsQ0FBa0I7QUFDekUsUUFiUyxhQUFRLEdBQUcsY0FBTSxPQUFBLEVBQUUsRUFBRixDQUFFLENBQUM7QUFDN0IsSUFZSyxDQUFDO0FBQ04sSUFaRSxzQkFBSSx3Q0FBUztBQUFJLGFBQWpCO0FBQWMsWUFDWixRQUFRLElBQUksQ0FBQyxnQkFBZ0IsRUFBRTtBQUNuQyxnQkFBTSxLQUFLLGdCQUFnQixDQUFDLEtBQUs7QUFDakMsb0JBQVEsT0FBTyxZQUFZLENBQUM7QUFDNUIsZ0JBQU0sS0FBSyxnQkFBZ0IsQ0FBQyxJQUFJO0FBQ2hDLG9CQUFRLE9BQU8sa0JBQWtCLENBQUM7QUFDbEMsYUFBSztBQUNMLFFBQUUsQ0FBQztBQUVIO0FBQ1c7QUFBMkIsT0FIbkM7QUFDSDtBQUU4QyxnREFBekMsTUFBTSxTQUFDLGlCQUFpQjtBQUFRO0FBQVUsSUFaN0M7QUFBYSxRQURaLEtBQUssRUFBRTtBQUNUO0FBRVcsdURBRmlCO0FBRTdCLElBSmEsaUJBQWlCLHdCQWQ3QixTQUFTLENBQUMsY0FDVCxqQ0FhTSxDQWNILFdBQUEsTUFBTSxDQUFDLGlCQUFpQixDQUFDLENBQUE7Q0EzQnBCLEVBQUUsY0FBYyxjQUN4QixRQUFRLEVBQUUsekNBMEJvQjtBQUUvQixPQWhCWSxpQkFBaUIsQ0FnQjdCOzZEQTFCRSx1QkFFQzsyQkFLQyxXQUVKLENBQUM7Ozs7Ozs7Ozs7Ozs7Ozs7O29CQWtCRjtBQUFDLElBREQsd0JBQUM7QUFDQSxDQURBLEFBaEJELElBZ0JDO0FBQ0QsU0FqQmEsaUJBQWlCO0FBQzdCIiwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IHsgQ29tcG9uZW50LCBJbnB1dCwgSW5qZWN0IH0gZnJvbSBcIkBhbmd1bGFyL2NvcmVcIjtcbmltcG9ydCB7IEJvb3RzdHJhcFZlcnNpb24gfSBmcm9tIFwiLi4vLi4vLi4vbGliL0VudW1zL0Jvb3RzdHJhcFZlcnNpb25cIjtcbmltcG9ydCB7IEJPT1RTVFJBUF9WRVJTSU9OIH0gZnJvbSBcIi4uLy4uL1Rva2Vucy90b2tlbnNcIjtcblxuQENvbXBvbmVudCh7XG4gIHNlbGVjdG9yOiBcImJmdi1tZXNzYWdlc1wiLFxuICB0ZW1wbGF0ZTogYFxuICAgIDxzcGFuIFtuZ0NsYXNzXT1cImNsYXNzTmFtZVwiICpuZ0Zvcj1cImxldCBtZXNzYWdlIG9mIG1lc3NhZ2VzKClcIj57e21lc3NhZ2V9fTwvc3Bhbj5cbiAgYCxcbiAgc3R5bGVzOiBbXG4gICAgYFxuICAgICAgLmludmFsaWQtZmVlZGJhY2ssXG4gICAgICAudmFsaWQtZmVlZGJhY2sge1xuICAgICAgICBkaXNwbGF5OiBibG9jaztcbiAgICAgIH1cbiAgICBgXG4gIF1cbn0pXG5leHBvcnQgY2xhc3MgTWVzc2FnZXNDb21wb25lbnQge1xuICBASW5wdXQoKVxuICBwdWJsaWMgbWVzc2FnZXMgPSAoKSA9PiBbXTtcblxuICBnZXQgY2xhc3NOYW1lKCkge1xuICAgIHN3aXRjaCAodGhpcy5ib290c3RyYXBWZXJzaW9uKSB7XG4gICAgICBjYXNlIEJvb3RzdHJhcFZlcnNpb24uVGhyZWU6XG4gICAgICAgIHJldHVybiBcImhlbHAtYmxvY2tcIjtcbiAgICAgIGNhc2UgQm9vdHN0cmFwVmVyc2lvbi5Gb3VyOlxuICAgICAgICByZXR1cm4gXCJpbnZhbGlkLWZlZWRiYWNrXCI7XG4gICAgfVxuICB9XG5cbiAgY29uc3RydWN0b3IoXG4gICAgQEluamVjdChCT09UU1RSQVBfVkVSU0lPTikgcHJpdmF0ZSBib290c3RyYXBWZXJzaW9uOiBCb290c3RyYXBWZXJzaW9uXG4gICkge31cbn1cbiJdfQ==