import { __decorate, __metadata } from "tslib";
import { Component, ContentChildren, ContentChild, ElementRef, HostBinding, Input, QueryList, OnInit, AfterContentInit } from "@angular/core";
import { FormControlName } from "@angular/forms";
import { ErrorMessageService } from "../../Services/error-message.service";
import { MessagesComponent } from "../messages/messages.component";
import * as ɵngcc0 from '@angular/core';
import * as ɵngcc1 from '../../Services/error-message.service';
import * as ɵngcc2 from '@angular/common';
import * as ɵngcc3 from '../messages/messages.component';

var _c0 = ["class", "form-group"];
function FormGroupComponent_bfv_messages_1_Template(rf, ctx) { if (rf & 1) {
    ɵngcc0.ɵɵelement(0, "bfv-messages", 1);
} if (rf & 2) {
    var ctx_r0 = ɵngcc0.ɵɵnextContext();
    ɵngcc0.ɵɵproperty("messages", ctx_r0.messages);
} }
var _c1 = ["*"];
var FormGroupComponent = /** @class */ (function () {
    function FormGroupComponent(elRef, errorMessageService) {
        var _this = this;
        this.elRef = elRef;
        this.errorMessageService = errorMessageService;
        this.customErrorMessages = [];
        this.validationDisabled = false;
        this.messages = function () { return _this.getMessages(); };
    }
    Object.defineProperty(FormGroupComponent.prototype, "hasErrors", {
        get: function () {
            return (this.FormControlNames.some(function (c) { return !c.valid && c.dirty && c.touched; }) &&
                !this.validationDisabled);
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(FormGroupComponent.prototype, "hasSuccess", {
        get: function () {
            return (!this.FormControlNames.some(function (c) { return !c.valid; }) &&
                this.FormControlNames.some(function (c) { return c.dirty && c.touched; }) &&
                !this.validationDisabled);
        },
        enumerable: true,
        configurable: true
    });
    FormGroupComponent.prototype.ngAfterContentInit = function () {
        if (this.messagesBlock) {
            this.messagesBlock.messages = this.messages;
        }
    };
    FormGroupComponent.prototype.ngOnInit = function () {
        this.errorMessages = this.errorMessageService.errorMessages
            .concat(this.customErrorMessages)
            .reverse();
    };
    Object.defineProperty(FormGroupComponent.prototype, "label", {
        get: function () {
            var label = this.elRef.nativeElement.querySelector("label");
            return label && label.textContent ? label.textContent.trim() : "This field";
        },
        enumerable: true,
        configurable: true
    });
    Object.defineProperty(FormGroupComponent.prototype, "isDirtyAndTouched", {
        get: function () {
            return this.FormControlNames.some(function (c) { return c.dirty && c.touched; });
        },
        enumerable: true,
        configurable: true
    });
    FormGroupComponent.prototype.getMessages = function () {
        var _this = this;
        var messages = [];
        if (!this.isDirtyAndTouched || this.validationDisabled) {
            return messages;
        }
        var names = this.FormControlNames.map(function (f) { return f.name; });
        this.FormControlNames.filter(function (c, i) {
            return !c.valid &&
                !!c.errors &&
                // filter out FormControlNames that share the same name - usually for radio buttons
                names.indexOf(c.name) === i;
        }).forEach(function (control) {
            Object.keys(control.errors).forEach(function (key) {
                var error = _this.errorMessages.find(function (err) { return err.error === key; });
                if (!error) {
                    return;
                }
                messages.push(error.format(_this.label, control.errors[key]));
            });
        });
        return messages;
    };
    FormGroupComponent.ctorParameters = function () { return [
        { type: ElementRef },
        { type: ErrorMessageService }
    ]; };
    __decorate([
        ContentChildren(FormControlName, { descendants: true }),
        __metadata("design:type", QueryList)
    ], FormGroupComponent.prototype, "FormControlNames", void 0);
    __decorate([
        Input(),
        __metadata("design:type", Array)
    ], FormGroupComponent.prototype, "customErrorMessages", void 0);
    __decorate([
        Input(),
        __metadata("design:type", Object)
    ], FormGroupComponent.prototype, "validationDisabled", void 0);
    __decorate([
        HostBinding("class.has-error"),
        __metadata("design:type", Object),
        __metadata("design:paramtypes", [])
    ], FormGroupComponent.prototype, "hasErrors", null);
    __decorate([
        HostBinding("class.has-success"),
        __metadata("design:type", Object),
        __metadata("design:paramtypes", [])
    ], FormGroupComponent.prototype, "hasSuccess", null);
    __decorate([
        ContentChild(MessagesComponent),
        __metadata("design:type", MessagesComponent)
    ], FormGroupComponent.prototype, "messagesBlock", void 0);
    FormGroupComponent = __decorate([ __metadata("design:paramtypes", [ElementRef,
            ErrorMessageService])
    ], FormGroupComponent);
FormGroupComponent.ɵfac = function FormGroupComponent_Factory(t) { return new (t || FormGroupComponent)(ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ElementRef), ɵngcc0.ɵɵdirectiveInject(ɵngcc1.ErrorMessageService)); };
FormGroupComponent.ɵcmp = /*@__PURE__*/ ɵngcc0.ɵɵdefineComponent({ type: FormGroupComponent, selectors: [["", 8, "form-group"]], contentQueries: function FormGroupComponent_ContentQueries(rf, ctx, dirIndex) { if (rf & 1) {
        ɵngcc0.ɵɵcontentQuery(dirIndex, MessagesComponent, 5);
        ɵngcc0.ɵɵcontentQuery(dirIndex, FormControlName, 5);
    } if (rf & 2) {
        var _t;
        ɵngcc0.ɵɵqueryRefresh(_t = ɵngcc0.ɵɵloadQuery()) && (ctx.messagesBlock = _t.first);
        ɵngcc0.ɵɵqueryRefresh(_t = ɵngcc0.ɵɵloadQuery()) && (ctx.FormControlNames = _t);
    } }, hostVars: 4, hostBindings: function FormGroupComponent_HostBindings(rf, ctx) { if (rf & 2) {
        ɵngcc0.ɵɵclassProp("has-error", ctx.hasErrors)("has-success", ctx.hasSuccess);
    } }, inputs: { customErrorMessages: "customErrorMessages", validationDisabled: "validationDisabled" }, attrs: _c0, ngContentSelectors: _c1, decls: 2, vars: 1, consts: [[3, "messages", 4, "ngIf"], [3, "messages"]], template: function FormGroupComponent_Template(rf, ctx) { if (rf & 1) {
        ɵngcc0.ɵɵprojectionDef();
        ɵngcc0.ɵɵprojection(0);
        ɵngcc0.ɵɵtemplate(1, FormGroupComponent_bfv_messages_1_Template, 1, 1, "bfv-messages", 0);
    } if (rf & 2) {
        ɵngcc0.ɵɵadvance(1);
        ɵngcc0.ɵɵproperty("ngIf", !ctx.messagesBlock);
    } }, directives: [ɵngcc2.NgIf, ɵngcc3.MessagesComponent], encapsulation: 2 });
(function () { (typeof ngDevMode === "undefined" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(FormGroupComponent, [{
        type: Component,
        args: [{
                // tslint:disable:component-selector
                selector: ".form-group",
                template: "\n    <ng-content></ng-content>\n    <bfv-messages *ngIf=\"!messagesBlock\" [messages]=\"messages\"></bfv-messages>\n  "
            }]
    }], function () { return [{ type: ɵngcc0.ElementRef }, { type: ɵngcc1.ErrorMessageService }]; }, { customErrorMessages: [{
            type: Input
        }], validationDisabled: [{
            type: Input
        }], hasErrors: [{
            type: HostBinding,
            args: ["class.has-error"]
        }], hasSuccess: [{
            type: HostBinding,
            args: ["class.has-success"]
        }], FormControlNames: [{
            type: ContentChildren,
            args: [FormControlName, { descendants: true }]
        }], messagesBlock: [{
            type: ContentChild,
            args: [MessagesComponent]
        }] }); })();
    return FormGroupComponent;
}());
export { FormGroupComponent };

//# sourceMappingURL=data:application/json;charset=utf-8;base64,