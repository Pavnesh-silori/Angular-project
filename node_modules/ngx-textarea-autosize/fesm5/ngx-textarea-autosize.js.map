{"version":3,"file":"ngx-textarea-autosize.js","sources":["ngx-textarea-autosize/autosize.directive.ts","ngx-textarea-autosize/textarea-autosize.module.ts","ngx-textarea-autosize/ngx-textarea-autosize.ts"],"names":["tslib_1.__decorate"],"mappings":";;;;;;IAsBE,2BAAoB,IAAgB,EAAU,QAAmB;AAAI,QAAjD,SAAI,GAAJ,IAAI,CAAY;AAAC,QAAS,aAAQ,GAAR,QAAQ,CAAW;AAAC,QAN3D,aAAQ,GAAG,QAAQ,CAAC;AAC7B,QAGS,SAAI,GAAG,CAAC,CAAC;AAClB,KACuE;AACvE,IACS,2CAAe,GAAtB;AAAc,QACZ,IAAI,CAAC,MAAM,EAAE,CAAC;AAClB,KAAG;AAEH,IAAS,qCAAS,GAAhB;AAAc,QACZ,IAAI,CAAC,MAAM,EAAE,CAAC;AAClB,KAAG;AAEH,IACU,kCAAM,GAAd;AAAc,QACZ,IAAM,QAAQ,GAAG,IAAI,CAAC,IAAI,CAAC,aAAoC,CAAC;AACpE;AACI,QAAA,IAAM,YAAY,GAAG,QAAQ,CAAC,YAAY,GAAG,QAAQ,CAAC,YAAY,CAAC;AACvE;AACI,QAAA,IAAI,CAAC,SAAS,CAAC,MAAM,CAAC,CAAC;AAC3B;AACI,QAAA,IAAI,CAAC,SAAS,CAAI,QAAQ,CAAC,YAAY,GAAG,YAAY,OAAI,CAAC,CAAC;AAChE,KAAG;AAEH,IAAU,qCAAS,GAAjB,UAAkB,KAAa;AACjC,QAAI,IAAI,CAAC,QAAQ,CAAC,QAAQ,CAAC,IAAI,CAAC,IAAI,CAAC,aAAa,EAAE,QAAQ,EAAE,KAAK,CAAC,CAAC;AACrE,KAAG;AACF,IA9BCA;AAAaA,QADZ,WAAW,CAAC,gBAAgB,CAAC;AAC/B;AAGA,uDAH4B;AAE7B,IAEEA;AAAaA,QAFZ,KAAK,EAAE;AACT,QAAE,WAAW,CAAC,MAAM,CAAC;AACrB;AAEsB,mDAFL;AAElB,IAWEA;AAAaA,QADZ,YAAY,CAAC,OAAO,CAAC;AACvB;AACwB;AACxB;AAAgD,mDAM9C;AAEH,IA7Ba,iBAAiB,wBAH7B,SAAS,CAAC,cACT,QAAQ,EAAE,3CAEJ,kCAQoB,UAAU,EAAoB,SAAS;KAVnC,UAC/B,CAAC,hBASoE,OARzD,iBAAiB,CAgC7B;;;;;;;;;;;;;;;;;;;;;;;;oBACD;AAAC,IADD,wBAAC;AACA,CAjCD;AAAK;AAAC;AAA0D,ICLhE;AAAoC,KAAE;IAAzB,sBAAsB,wBALlC,QAAQ,CAAC,cACR,OAAO,EAAE,CAAC,YAAY,CAAC,cACvB;AAAY,EAAE,CAAC,iBAAiB,CAAC,cACjC,OAAO,EAAE,CAAC,iBAAiB,CAAC,UAC7B,CAAC,QACW;CAAsB,CAAG;;;;;;;;;gSACtC;AAAC,IADoC,6BAAC;AACrC,CADD;AAAK;ACTL;AACA;AACA,GAAG;AACH;AACA;AAEkC","sourcesContent":["import {\n  AfterViewInit,\n  Directive,\n  ElementRef,\n  HostListener,\n  Input,\n  HostBinding,\n  DoCheck,\n  Renderer2\n} from '@angular/core';\n\n@Directive({\n  selector: 'textarea[autosize]'\n})\nexport class AutosizeDirective implements AfterViewInit, DoCheck {\n  @HostBinding('style.overflow')\n  public overflow = 'hidden';\n\n  @Input()\n  @HostBinding('rows')\n  public rows = 1;\n\n  constructor(private elem: ElementRef, private renderer: Renderer2) {}\n\n  public ngAfterViewInit() {\n    this.resize();\n  }\n\n  public ngDoCheck() {\n    this.resize();\n  }\n\n  @HostListener('input')\n  private resize() {\n    const textarea = this.elem.nativeElement as HTMLTextAreaElement;\n    // Calculate border height which is not included in scrollHeight\n    const borderHeight = textarea.offsetHeight - textarea.clientHeight;\n    // Reset textarea height to auto that correctly calculate the new height\n    this.setHeight('auto');\n    // Set new height\n    this.setHeight(`${textarea.scrollHeight + borderHeight}px`);\n  }\n\n  private setHeight(value: string) {\n    this.renderer.setStyle(this.elem.nativeElement, 'height', value);\n  }\n}\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { AutosizeDirective } from './autosize.directive';\n\n@NgModule({\n  imports: [CommonModule],\n  declarations: [AutosizeDirective],\n  exports: [AutosizeDirective]\n})\nexport class TextareaAutosizeModule {}\n","/**\n * Generated bundle index. Do not edit.\n */\n\nexport * from './index';\n\nexport {AutosizeDirective as Éµa} from './autosize.directive';"]}