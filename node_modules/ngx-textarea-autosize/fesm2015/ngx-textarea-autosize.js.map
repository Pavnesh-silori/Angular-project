{"version":3,"file":"ngx-textarea-autosize.js","sources":["ngx-textarea-autosize/autosize.directive.ts","ngx-textarea-autosize/textarea-autosize.module.ts","ngx-textarea-autosize/ngx-textarea-autosize.ts"],"names":["tslib_1.__decorate"],"mappings":";;;;;IAca,iBAAiB,GAA9B,MAAa,iBAAiB;AAAG,IAQ/B,YAAoB,IAAgB,EAAU,QAAmB;AAAI,QAAjD,SAAI,GAAJ,IAAI,CAAY;AAAC,QAAS,aAAQ,GAAR,QAAQ,CAAW;AAAC,QAN3D,aAAQ,GAAG,QAAQ,CAAC;AAC7B,QAGS,SAAI,GAAG,CAAC,CAAC;AAClB,KACuE;AACvE,IACS,eAAe;AACxB,QAAI,IAAI,CAAC,MAAM,EAAE,CAAC;AAClB,KAAG;AACH,IACS,SAAS;AAClB,QAAI,IAAI,CAAC,MAAM,EAAE,CAAC;AAClB,KAAG;AACH,IAEU,MAAM;AAChB,QAAI,MAAM,QAAQ,GAAG,IAAI,CAAC,IAAI,CAAC,aAAoC,CAAC;AACpE;AACI,QAAA,MAAM,YAAY,GAAG,QAAQ,CAAC,YAAY,GAAG,QAAQ,CAAC,YAAY,CAAC;AACvE;AACI,QAAA,IAAI,CAAC,SAAS,CAAC,MAAM,CAAC,CAAC;AAC3B;AACI,QAAA,IAAI,CAAC,SAAS,CAAC,GAAG,QAAQ,CAAC,YAAY,GAAG,YAAY,IAAI,CAAC,CAAC;AAChE,KAAG;AACH,IACU,SAAS,CAAC,KAAa;AACjC,QAAI,IAAI,CAAC,QAAQ,CAAC,QAAQ,CAAC,IAAI,CAAC,IAAI,CAAC,aAAa,EAAE,QAAQ,EAAE,KAAK,CAAC,CAAC;AACrE,KAAG;AACH,CAAC;;;;;;;qCAAA;AA9BCA;AAAaA,IADZ,WAAW,CAAC,gBAAgB,CAAC;AAC/B;AAEO,mDAFqB;AAI3BA;AAAaA,IAFZ,KAAK,EAAE;AACT,IAAE,WAAW,CAAC,MAAM,CAAC;AACrB;AAEkB,+CAFD;AAahBA;AAAaA,IADZ,YAAY,CAAC,OAAO,CAAC;AACvB;AACoB;AAAyC;AACzB,+CAMlC;AA3BU,iBAAiB,oBAH7B,SAAS,CAAC,UACT,QAAQ,EAAE,oBAAoB,vDAE5B,kCAQwB,UAAU,EAAoB,SAAS;GATlE,CAAC,JASoE,GARzD,iBAAiB,CAgC7B;AACA;AAAC,ICtCW,sBAAsB,GAAnC,MAAa,sBAAsB;AAAG,CAAA,CAAA;AAAzB,sBAAsB,oBALlC,QAAQ,CAAC,UACR,OAAO,EAAE,CAAC,YAAY,CAAC,UACvB,YAAY,EAAE,CAAC;IAAiB,CAAC,UACjC,OAAO,EAAE,CAAC,iBAAiB,CAAC,MAC7B,CAAC,IACW,sBAAsB,CAAG;;;;;;;;;;;;;;;;;;;;;;;;;;;gSACtC;AAAC;ACVD;AACA;AACA,GAAG;AACH;AACA;AAEkC","sourcesContent":["import {\n  AfterViewInit,\n  Directive,\n  ElementRef,\n  HostListener,\n  Input,\n  HostBinding,\n  DoCheck,\n  Renderer2\n} from '@angular/core';\n\n@Directive({\n  selector: 'textarea[autosize]'\n})\nexport class AutosizeDirective implements AfterViewInit, DoCheck {\n  @HostBinding('style.overflow')\n  public overflow = 'hidden';\n\n  @Input()\n  @HostBinding('rows')\n  public rows = 1;\n\n  constructor(private elem: ElementRef, private renderer: Renderer2) {}\n\n  public ngAfterViewInit() {\n    this.resize();\n  }\n\n  public ngDoCheck() {\n    this.resize();\n  }\n\n  @HostListener('input')\n  private resize() {\n    const textarea = this.elem.nativeElement as HTMLTextAreaElement;\n    // Calculate border height which is not included in scrollHeight\n    const borderHeight = textarea.offsetHeight - textarea.clientHeight;\n    // Reset textarea height to auto that correctly calculate the new height\n    this.setHeight('auto');\n    // Set new height\n    this.setHeight(`${textarea.scrollHeight + borderHeight}px`);\n  }\n\n  private setHeight(value: string) {\n    this.renderer.setStyle(this.elem.nativeElement, 'height', value);\n  }\n}\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { AutosizeDirective } from './autosize.directive';\n\n@NgModule({\n  imports: [CommonModule],\n  declarations: [AutosizeDirective],\n  exports: [AutosizeDirective]\n})\nexport class TextareaAutosizeModule {}\n","/**\n * Generated bundle index. Do not edit.\n */\n\nexport * from './index';\n\nexport {AutosizeDirective as Éµa} from './autosize.directive';"]}