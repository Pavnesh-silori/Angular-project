import * as tslib_1 from "tslib";
import { Directive, ElementRef, HostListener, Input, HostBinding, Renderer2 } from '@angular/core';
import * as ɵngcc0 from '@angular/core';
let AutosizeDirective = class AutosizeDirective {
    constructor(elem, renderer) {
        this.elem = elem;
        this.renderer = renderer;
        this.overflow = 'hidden';
        this.rows = 1;
    }
    ngAfterViewInit() {
        this.resize();
    }
    ngDoCheck() {
        this.resize();
    }
    resize() {
        const textarea = this.elem.nativeElement;
        // Calculate border height which is not included in scrollHeight
        const borderHeight = textarea.offsetHeight - textarea.clientHeight;
        // Reset textarea height to auto that correctly calculate the new height
        this.setHeight('auto');
        // Set new height
        this.setHeight(`${textarea.scrollHeight + borderHeight}px`);
    }
    setHeight(value) {
        this.renderer.setStyle(this.elem.nativeElement, 'height', value);
    }
};
AutosizeDirective.ɵfac = function AutosizeDirective_Factory(t) { return new (t || AutosizeDirective)(ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ElementRef), ɵngcc0.ɵɵdirectiveInject(ɵngcc0.Renderer2)); };
AutosizeDirective.ɵdir = /*@__PURE__*/ ɵngcc0.ɵɵdefineDirective({ type: AutosizeDirective, selectors: [["textarea", "autosize", ""]], hostVars: 3, hostBindings: function AutosizeDirective_HostBindings(rf, ctx) { if (rf & 1) {
        ɵngcc0.ɵɵlistener("input", function AutosizeDirective_input_HostBindingHandler() { return ctx.resize(); });
    } if (rf & 2) {
        ɵngcc0.ɵɵhostProperty("rows", ctx.rows);
        ɵngcc0.ɵɵstyleProp("overflow", ctx.overflow);
    } }, inputs: { rows: "rows" } });
tslib_1.__decorate([
    HostBinding('style.overflow'),
    tslib_1.__metadata("design:type", Object)
], AutosizeDirective.prototype, "overflow", void 0);
tslib_1.__decorate([
    Input(),
    HostBinding('rows'),
    tslib_1.__metadata("design:type", Object)
], AutosizeDirective.prototype, "rows", void 0);
tslib_1.__decorate([
    HostListener('input'),
    tslib_1.__metadata("design:type", Function),
    tslib_1.__metadata("design:paramtypes", []),
    tslib_1.__metadata("design:returntype", void 0)
], AutosizeDirective.prototype, "resize", null);
AutosizeDirective = tslib_1.__decorate([ tslib_1.__metadata("design:paramtypes", [ElementRef, Renderer2])
], AutosizeDirective);
(function () { (typeof ngDevMode === "undefined" || ngDevMode) && ɵngcc0.ɵsetClassMetadata(AutosizeDirective, [{
        type: Directive,
        args: [{
                selector: 'textarea[autosize]'
            }]
    }], function () { return [{ type: ɵngcc0.ElementRef }, { type: ɵngcc0.Renderer2 }]; }, { overflow: [{
            type: HostBinding,
            args: ['style.overflow']
        }], rows: [{
            type: Input
        }, {
            type: HostBinding,
            args: ['rows']
        }], resize: [{
            type: HostListener,
            args: ['input']
        }] }); })();
export { AutosizeDirective };

//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiYXV0b3NpemUuZGlyZWN0aXZlLmpzIiwic291cmNlcyI6WyJuZ3gtdGV4dGFyZWEtYXV0b3NpemUvYXV0b3NpemUuZGlyZWN0aXZlLnRzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiI7QUFBQSxPQUFPLEVBRUwsU0FBUyxFQUNULFVBQVUsRUFDVixZQUFZLEVBQ1osS0FBSyxFQUNMLFdBQVcsRUFFWCxTQUFTLEVBQ1YsTUFBTSxlQUFlLENBQUM7O0FBS3ZCLElBQWEsaUJBQWlCLEdBQTlCLE1BQWEsaUJBQWlCO0FBQUcsSUFRL0IsWUFBb0IsSUFBZ0IsRUFBVSxRQUFtQjtBQUFJLFFBQWpELFNBQUksR0FBSixJQUFJLENBQVk7QUFBQyxRQUFTLGFBQVEsR0FBUixRQUFRLENBQVc7QUFBQyxRQU4zRCxhQUFRLEdBQUcsUUFBUSxDQUFDO0FBQzdCLFFBR1MsU0FBSSxHQUFHLENBQUMsQ0FBQztBQUNsQixJQUNzRSxDQUFDO0FBQ3ZFLElBQ1MsZUFBZTtBQUN4QixRQUFJLElBQUksQ0FBQyxNQUFNLEVBQUUsQ0FBQztBQUNsQixJQUFFLENBQUM7QUFDSCxJQUNTLFNBQVM7QUFDbEIsUUFBSSxJQUFJLENBQUMsTUFBTSxFQUFFLENBQUM7QUFDbEIsSUFBRSxDQUFDO0FBQ0gsSUFFVSxNQUFNO0FBQ2hCLFFBQUksTUFBTSxRQUFRLEdBQUcsSUFBSSxDQUFDLElBQUksQ0FBQyxhQUFvQyxDQUFDO0FBQ3BFLFFBQUksZ0VBQWdFO0FBQ3BFLFFBQUksTUFBTSxZQUFZLEdBQUcsUUFBUSxDQUFDLFlBQVksR0FBRyxRQUFRLENBQUMsWUFBWSxDQUFDO0FBQ3ZFLFFBQUksd0VBQXdFO0FBQzVFLFFBQUksSUFBSSxDQUFDLFNBQVMsQ0FBQyxNQUFNLENBQUMsQ0FBQztBQUMzQixRQUFJLGlCQUFpQjtBQUNyQixRQUFJLElBQUksQ0FBQyxTQUFTLENBQUMsR0FBRyxRQUFRLENBQUMsWUFBWSxHQUFHLFlBQVksSUFBSSxDQUFDLENBQUM7QUFDaEUsSUFBRSxDQUFDO0FBQ0gsSUFDVSxTQUFTLENBQUMsS0FBYTtBQUNqQyxRQUFJLElBQUksQ0FBQyxRQUFRLENBQUMsUUFBUSxDQUFDLElBQUksQ0FBQyxJQUFJLENBQUMsYUFBYSxFQUFFLFFBQVEsRUFBRSxLQUFLLENBQUMsQ0FBQztBQUNyRSxJQUFFLENBQUM7QUFDSCxDQUFDOzs7Ozs7O3FDQUFBO0FBOUJDO0FBQXFCLElBRHBCLFdBQVcsQ0FBQyxnQkFBZ0IsQ0FBQztBQUMvQjtBQUdJLG1EQUh3QjtBQUkzQjtBQUVDLElBSkEsS0FBSyxFQUFFO0FBQ1QsSUFBRSxXQUFXLENBQUMsTUFBTSxDQUFDO0FBQ3JCO0FBRTBCLCtDQUZUO0FBYWhCO0FBQ0EsSUFGQyxZQUFZLENBQUMsT0FBTyxDQUFDO0FBQ3ZCO0FBQzRCO0FBQ3BCO0FBQW9ELCtDQU0xRDtBQTNCVSxpQkFBaUIsNEJBSDdCLFNBQVMsQ0FBQyxVQUNULFFBQVEsRUFBRSxvQkFBb0IsTUFDL0IsQ0FBQyw5REFDRSwwQ0FRd0IsVUFBVSxFQUFvQixTQUFTO0FBQUcsR0FSekQsaUJBQWlCLENBZ0M3Qjs7Ozs7Ozs7Ozs7Ozs7Ozs7b0JBQ0Q7QUFBQyxTQWpDWSxpQkFBaUI7QUFBSSIsInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7XG4gIEFmdGVyVmlld0luaXQsXG4gIERpcmVjdGl2ZSxcbiAgRWxlbWVudFJlZixcbiAgSG9zdExpc3RlbmVyLFxuICBJbnB1dCxcbiAgSG9zdEJpbmRpbmcsXG4gIERvQ2hlY2ssXG4gIFJlbmRlcmVyMlxufSBmcm9tICdAYW5ndWxhci9jb3JlJztcblxuQERpcmVjdGl2ZSh7XG4gIHNlbGVjdG9yOiAndGV4dGFyZWFbYXV0b3NpemVdJ1xufSlcbmV4cG9ydCBjbGFzcyBBdXRvc2l6ZURpcmVjdGl2ZSBpbXBsZW1lbnRzIEFmdGVyVmlld0luaXQsIERvQ2hlY2sge1xuICBASG9zdEJpbmRpbmcoJ3N0eWxlLm92ZXJmbG93JylcbiAgcHVibGljIG92ZXJmbG93ID0gJ2hpZGRlbic7XG5cbiAgQElucHV0KClcbiAgQEhvc3RCaW5kaW5nKCdyb3dzJylcbiAgcHVibGljIHJvd3MgPSAxO1xuXG4gIGNvbnN0cnVjdG9yKHByaXZhdGUgZWxlbTogRWxlbWVudFJlZiwgcHJpdmF0ZSByZW5kZXJlcjogUmVuZGVyZXIyKSB7fVxuXG4gIHB1YmxpYyBuZ0FmdGVyVmlld0luaXQoKSB7XG4gICAgdGhpcy5yZXNpemUoKTtcbiAgfVxuXG4gIHB1YmxpYyBuZ0RvQ2hlY2soKSB7XG4gICAgdGhpcy5yZXNpemUoKTtcbiAgfVxuXG4gIEBIb3N0TGlzdGVuZXIoJ2lucHV0JylcbiAgcHJpdmF0ZSByZXNpemUoKSB7XG4gICAgY29uc3QgdGV4dGFyZWEgPSB0aGlzLmVsZW0ubmF0aXZlRWxlbWVudCBhcyBIVE1MVGV4dEFyZWFFbGVtZW50O1xuICAgIC8vIENhbGN1bGF0ZSBib3JkZXIgaGVpZ2h0IHdoaWNoIGlzIG5vdCBpbmNsdWRlZCBpbiBzY3JvbGxIZWlnaHRcbiAgICBjb25zdCBib3JkZXJIZWlnaHQgPSB0ZXh0YXJlYS5vZmZzZXRIZWlnaHQgLSB0ZXh0YXJlYS5jbGllbnRIZWlnaHQ7XG4gICAgLy8gUmVzZXQgdGV4dGFyZWEgaGVpZ2h0IHRvIGF1dG8gdGhhdCBjb3JyZWN0bHkgY2FsY3VsYXRlIHRoZSBuZXcgaGVpZ2h0XG4gICAgdGhpcy5zZXRIZWlnaHQoJ2F1dG8nKTtcbiAgICAvLyBTZXQgbmV3IGhlaWdodFxuICAgIHRoaXMuc2V0SGVpZ2h0KGAke3RleHRhcmVhLnNjcm9sbEhlaWdodCArIGJvcmRlckhlaWdodH1weGApO1xuICB9XG5cbiAgcHJpdmF0ZSBzZXRIZWlnaHQodmFsdWU6IHN0cmluZykge1xuICAgIHRoaXMucmVuZGVyZXIuc2V0U3R5bGUodGhpcy5lbGVtLm5hdGl2ZUVsZW1lbnQsICdoZWlnaHQnLCB2YWx1ZSk7XG4gIH1cbn1cbiJdfQ==