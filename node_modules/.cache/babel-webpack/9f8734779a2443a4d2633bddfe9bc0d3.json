{"ast":null,"code":"import { HttpHeaders, HttpParams } from '@angular/common/http';\nimport { environment } from 'src/environments/environment';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/common/http\";\nexport let CbamRunController = /*#__PURE__*/(() => {\n  class CbamRunController {\n    constructor(http) {\n      this.http = http;\n    }\n    getValidation(orgID, productID, prID, startDate, endDate) {\n      let headers = new HttpHeaders().set('skipSuccessStatus', '1');\n      let params = new HttpParams();\n      params = params.append('startDate', startDate);\n      params = params.append('endDate', endDate);\n      params = params.append('productID', productID);\n      params = params.append('prID', prID);\n      return this.http.get(`${environment.CARBON_ACCOUNTING_API_URL}organizations/${orgID}/cbam/run-exists`, {\n        params: params,\n        headers: headers\n      });\n    }\n    getFailedRunDetails() {\n      return this.http.get(`${environment.MOCK_SERVER}failedRunDetails`);\n    }\n    createAuditDetails(orgID, cbamReportID, auditDetails) {\n      return this.http.post(`${environment.CARBON_ACCOUNTING_API_URL}organizations/${orgID}/cbam-report/${cbamReportID}/audit`, auditDetails);\n    }\n    // getAuditDetails(orgID, cbamReportID) {\n    //     return this.http.get(`${environment.CARBON_ACCOUNTING_API_URL}organizations/${orgID}/cbam-report/${cbamReportID}/audit`);\n    // }\n    // updateAuditDetails(orgID, cbamReportID, auditDetails) {\n    //     return this.http.patch(`${environment.CARBON_ACCOUNTING_API_URL}organizations/${orgID}/cbam-report/${cbamReportID}/audit`, auditDetails);\n    // }\n    getCbamProductRunList(orgID) {\n      return this.http.get(`${environment.CARBON_ACCOUNTING_API_URL}organizations/${orgID}/cbam/runs`);\n    }\n    createCbamReport(orgID, runConfigID, reportDetails) {\n      return this.http.post(`${environment.CARBON_ACCOUNTING_API_URL}organizations/${orgID}/cbam-run-config/${runConfigID}/report`, reportDetails);\n    }\n    getCbamReportByID(orgID, reportID) {\n      return this.http.get(`${environment.CARBON_ACCOUNTING_API_URL}organizations/${orgID}/cbam-run-config/report/${reportID}`);\n    }\n    getCbamReportPage(pageNo, pageSize, sortBy, orderBy, orgID, searchFlag, searchValue) {\n      let params = new HttpParams();\n      params = params.append('pageNo', pageNo);\n      params = params.append('pageSize', pageSize);\n      params = params.append('sortBy', sortBy);\n      params = params.append('orderBy', orderBy);\n      if (searchFlag) {\n        params = params.append('search', searchValue);\n      }\n      return this.http.get(`${environment.CARBON_ACCOUNTING_API_URL}organizations/${orgID}/cbam-run-config/report/page`, {\n        params: params\n      });\n    }\n    sendEmail(orgID, email) {\n      return this.http.post(`${environment.CARBON_ACCOUNTING_API_URL}organizations/${orgID}/report/send/email`, email);\n    }\n    updateCbamRunStatus(orgID, runID, data, skipSuccessStatus = true) {\n      let headers = new HttpHeaders();\n      if (skipSuccessStatus) {\n        headers = headers.append('skipSuccessStatus', '1');\n      }\n      return this.http.patch(`${environment.CARBON_ACCOUNTING_API_URL}organizations/${orgID}/cbam/run/${runID}/status`, data, {\n        headers: headers\n      });\n    }\n    getCbamRunRequestByID(orgID, runID) {\n      let headers = new HttpHeaders();\n      headers = headers.append('skipLoader', 'YES');\n      return this.http.get(`${environment.CARBON_ACCOUNTING_API_URL}organizations/${orgID}/cbam/run/${runID}/request`, {\n        headers: headers\n      });\n    }\n    getCbamRunByID(orgID, runID) {\n      return this.http.get(`${environment.CARBON_ACCOUNTING_API_URL}organizations/${orgID}/cbam/run/${runID}`);\n    }\n  }\n  CbamRunController.ɵfac = function CbamRunController_Factory(t) {\n    return new (t || CbamRunController)(i0.ɵɵinject(i1.HttpClient));\n  };\n  CbamRunController.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n    token: CbamRunController,\n    factory: CbamRunController.ɵfac,\n    providedIn: 'root'\n  });\n  return CbamRunController;\n})();","map":null,"metadata":{},"sourceType":"module"}