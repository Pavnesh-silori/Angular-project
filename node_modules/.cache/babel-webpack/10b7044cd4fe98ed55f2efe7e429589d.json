{"ast":null,"code":"import { IntervalStatus } from '@report-framework/enum/status.enum';\n// lib\nimport { COMMON_CONSTANT } from '@library/tsc-common';\nimport { FrequencyKeyIDEnum } from '@report-framework/enum/frequency.enum';\nimport * as moment from 'moment-timezone';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/router\";\nimport * as i2 from \"@report-framework/controller/report-config.controller\";\nimport * as i3 from \"@library/storage-service\";\nimport * as i4 from \"@report-framework/service/active-page-pill.service\";\nimport * as i5 from \"@angular/material/card\";\nimport * as i6 from \"@angular/common\";\nimport * as i7 from \"@angular/material/tooltip\";\nimport * as i8 from \"ng-circle-progress\";\nfunction IntervalTrackingComponent_div_6_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\", 9);\n    i0.ɵɵelementStart(1, \"div\", 10);\n    i0.ɵɵelementStart(2, \"p\");\n    i0.ɵɵtext(3, \"Report name:\");\n    i0.ɵɵelementStart(4, \"strong\", 11);\n    i0.ɵɵtext(5);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(6, \"p\");\n    i0.ɵɵtext(7, \"Reporting framework name:\");\n    i0.ɵɵelementStart(8, \"strong\", 11);\n    i0.ɵɵtext(9);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(10, \"div\", 10);\n    i0.ɵɵelementStart(11, \"p\");\n    i0.ɵɵtext(12, \"Reporting year:\");\n    i0.ɵɵelementStart(13, \"strong\", 11);\n    i0.ɵɵtext(14);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(15, \"p\");\n    i0.ɵɵtext(16, \"Reporting interval:\");\n    i0.ɵɵelementStart(17, \"strong\", 11);\n    i0.ɵɵtext(18);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(19, \"div\", 10);\n    i0.ɵɵelementStart(20, \"p\");\n    i0.ɵɵtext(21, \"Reporting sector:\");\n    i0.ɵɵelementStart(22, \"strong\", 11);\n    i0.ɵɵtext(23);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const ctx_r0 = i0.ɵɵnextContext();\n    i0.ɵɵadvance(5);\n    i0.ɵɵtextInterpolate(ctx_r0.configData.name || ctx_r0.COMMON_CONSTANT.HYPHEN);\n    i0.ɵɵadvance(4);\n    i0.ɵɵtextInterpolate1(\" \", ctx_r0.configData.reportingFrameworkName, \"\");\n    i0.ɵɵadvance(5);\n    i0.ɵɵtextInterpolate1(\" \", ctx_r0.configData.reportingYear, \" \");\n    i0.ɵɵadvance(4);\n    i0.ɵɵtextInterpolate1(\" \", ctx_r0.configData.reportingIntervalName, \" \");\n    i0.ɵɵadvance(5);\n    i0.ɵɵtextInterpolate1(\" \", ctx_r0.configData.frameworkSector != null ? ctx_r0.configData.frameworkSector : ctx_r0.COMMON_CONSTANT.HYPHEN, \" \");\n  }\n}\nconst _c0 = function (a0) {\n  return {\n    \"disabled\": a0\n  };\n};\nfunction IntervalTrackingComponent_div_8_div_1_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\", 15);\n    i0.ɵɵelementStart(1, \"mat-card\", 16);\n    i0.ɵɵelementStart(2, \"div\", 17);\n    i0.ɵɵelementStart(3, \"mat-card-content\");\n    i0.ɵɵelementStart(4, \"h4\");\n    i0.ɵɵtext(5);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(6, \"p\");\n    i0.ɵɵtext(7);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(8, \"p\");\n    i0.ɵɵtext(9, \"Progress\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(10, \"div\", 18);\n    i0.ɵɵelementStart(11, \"mat-card-content\");\n    i0.ɵɵelementStart(12, \"span\", 19);\n    i0.ɵɵtext(13);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(14, \"div\", 20);\n    i0.ɵɵelementStart(15, \"span\", 21);\n    i0.ɵɵtext(16);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelement(17, \"circle-progress\", 22);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const item_r2 = i0.ɵɵnextContext().$implicit;\n    const ctx_r4 = i0.ɵɵnextContext();\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"matTooltip\", ctx_r4.getTooltipMessage(item_r2))(\"ngClass\", i0.ɵɵpureFunction1(9, _c0, item_r2.status === \"SCHEDULED\"));\n    i0.ɵɵadvance(4);\n    i0.ɵɵtextInterpolate(item_r2.name);\n    i0.ɵɵadvance(2);\n    i0.ɵɵtextInterpolate(item_r2.reportingPeriod);\n    i0.ɵɵadvance(6);\n    i0.ɵɵtextInterpolate(item_r2.status);\n    i0.ɵɵadvance(3);\n    i0.ɵɵtextInterpolate1(\"\", item_r2.progressPct, \"%\");\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"options\", ctx_r4.circleB)(\"renderOnClick\", false)(\"percent\", item_r2.progressPct);\n  }\n}\nfunction IntervalTrackingComponent_div_8_ng_template_2_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r10 = i0.ɵɵgetCurrentView();\n    i0.ɵɵelementStart(0, \"mat-card\", 23);\n    i0.ɵɵlistener(\"click\", function IntervalTrackingComponent_div_8_ng_template_2_Template_mat_card_click_0_listener() {\n      i0.ɵɵrestoreView(_r10);\n      const item_r2 = i0.ɵɵnextContext().$implicit;\n      const ctx_r8 = i0.ɵɵnextContext();\n      return ctx_r8.navigateToTrackingData(item_r2);\n    });\n    i0.ɵɵelementStart(1, \"div\", 17);\n    i0.ɵɵelementStart(2, \"mat-card-content\");\n    i0.ɵɵelementStart(3, \"h4\");\n    i0.ɵɵtext(4);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(5, \"p\");\n    i0.ɵɵtext(6);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(7, \"p\");\n    i0.ɵɵtext(8, \"Progress\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(9, \"div\", 18);\n    i0.ɵɵelementStart(10, \"mat-card-content\");\n    i0.ɵɵelementStart(11, \"span\", 24);\n    i0.ɵɵtext(12);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(13, \"div\", 20);\n    i0.ɵɵelementStart(14, \"span\", 21);\n    i0.ɵɵtext(15);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelement(16, \"circle-progress\", 22);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const item_r2 = i0.ɵɵnextContext().$implicit;\n    const ctx_r6 = i0.ɵɵnextContext();\n    i0.ɵɵadvance(4);\n    i0.ɵɵtextInterpolate(item_r2.name);\n    i0.ɵɵadvance(2);\n    i0.ɵɵtextInterpolate(item_r2.reportingPeriod);\n    i0.ɵɵadvance(6);\n    i0.ɵɵtextInterpolate(item_r2.status);\n    i0.ɵɵadvance(3);\n    i0.ɵɵtextInterpolate1(\"\", item_r2.progressPct, \"%\");\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"options\", ctx_r6.circleB)(\"renderOnClick\", false)(\"percent\", item_r2.progressPct);\n  }\n}\nfunction IntervalTrackingComponent_div_8_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\", 12);\n    i0.ɵɵtemplate(1, IntervalTrackingComponent_div_8_div_1_Template, 18, 11, \"div\", 13);\n    i0.ɵɵtemplate(2, IntervalTrackingComponent_div_8_ng_template_2_Template, 17, 7, \"ng-template\", null, 14, i0.ɵɵtemplateRefExtractor);\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const item_r2 = ctx.$implicit;\n    const _r5 = i0.ɵɵreference(3);\n    const ctx_r1 = i0.ɵɵnextContext();\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngIf\", item_r2.status === ctx_r1.IntervalStatus.SCHEDULED || item_r2.status === ctx_r1.IntervalStatus.DELETED || item_r2.status == ctx_r1.IntervalStatus.LOCKED)(\"ngIfElse\", _r5);\n  }\n}\n// lib\nexport let IntervalTrackingComponent = /*#__PURE__*/(() => {\n  class IntervalTrackingComponent {\n    constructor(router, activatedRoute, reportConfigController, storageService, activePagePillService) {\n      this.router = router;\n      this.activatedRoute = activatedRoute;\n      this.reportConfigController = reportConfigController;\n      this.storageService = storageService;\n      this.activePagePillService = activePagePillService;\n      this.COMMON_CONSTANT = COMMON_CONSTANT;\n      this.IntervalStatus = IntervalStatus;\n      this.reportData = [];\n      this.circleB = {\n        \"radius\": 20,\n        \"space\": -10,\n        \"outerStrokeGradient\": true,\n        \"outerStrokeWidth\": 7,\n        \"outerStrokeColor\": \"#4882c2\",\n        \"outerStrokeGradientStopColor\": \"#53a9ff\",\n        \"innerStrokeColor\": \"#e7e8ea\",\n        \"innerStrokeWidth\": 7,\n        \"animateTitle\": false,\n        \"animationDuration\": 1000,\n        \"showTitle\": false,\n        \"showSubtitle\": false,\n        \"showUnits\": false,\n        \"showBackground\": false,\n        \"progress\": 10\n      };\n    }\n    ngOnInit() {\n      this.currentOrgID = this.storageService.getStorage('currentOrgID');\n      this.activatedRoute.params.subscribe(param => {\n        this.id = param['configID'];\n        this.name = param['configName'];\n      });\n      this.activePagePillService.setOngoingReportBSubject = null;\n      let folder = {\n        name: this.name,\n        route: `${decodeURI(this.router.url)}`\n      };\n      setTimeout(() => {\n        this.activePagePillService.setOngoingReportBSubject = folder;\n      });\n      this.getReportData();\n      this.getReportTrackingDetails();\n    }\n    getReportData() {\n      this.reportConfigController.getReportConfigData(this.currentOrgID, this.id).subscribe(res => {\n        this.configData = res;\n      }, error => {\n        console.log(error, \"Error\");\n      });\n    }\n    getReportTrackingDetails() {\n      this.reportConfigController.getReportTrackingDetails(this.currentOrgID, this.id).subscribe(res => {\n        this.reportData = res;\n      }, error => {\n        console.log(error, \"Error\");\n      });\n    }\n    navigateToTrackingData(item) {\n      this.router.navigate([`/reporting-framework/tab/tracking/${this.name}/${this.id}/interval/${item.name}/${item.id}/data`], {\n        queryParams: {\n          reportingFrameworkID: this.configData.reportingFrameworkID,\n          reportingFrameworkKeyID: this.configData.reportingFrameworkKeyID\n        }\n      });\n    }\n    getTooltipMessage(data) {\n      if (data.status == IntervalStatus.LOCKED) {\n        return;\n      }\n      let reportingPeriod = data.reportingPeriod.split('-');\n      let month = reportingPeriod[0].split(' ');\n      const date = moment(month[0], 'MMM');\n      let frequency;\n      if (this.configData['reportingIntervalKeyID'] == FrequencyKeyIDEnum.HALF_YEARLY) {\n        frequency = 'Half yearly';\n      } else {\n        frequency = 'Quarterly';\n      }\n      return frequency + \" reports will become accessible starting in \" + date.format('MMMM');\n    }\n  }\n  IntervalTrackingComponent.ɵfac = function IntervalTrackingComponent_Factory(t) {\n    return new (t || IntervalTrackingComponent)(i0.ɵɵdirectiveInject(i1.Router), i0.ɵɵdirectiveInject(i1.ActivatedRoute), i0.ɵɵdirectiveInject(i2.ReportConfigController), i0.ɵɵdirectiveInject(i3.StorageService), i0.ɵɵdirectiveInject(i4.ActivePagePillService));\n  };\n  IntervalTrackingComponent.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n    type: IntervalTrackingComponent,\n    selectors: [[\"app-interval-tracking\"]],\n    decls: 9,\n    vars: 2,\n    consts: [[1, \"card\", \"main-card\", \"cardOverwrite\", \"h100\"], [1, \"headerContainer\"], [1, \"headerLeftContainer\"], [1, \"pageTitle\"], [1, \"pt-3\"], [1, \"border\", \"cardOverwrite\"], [\"class\", \"row\", 4, \"ngIf\"], [1, \"row\", \"mt-3\"], [\"class\", \"col-sm-4\", 4, \"ngFor\", \"ngForOf\"], [1, \"row\"], [1, \"col-sm-6\"], [1, \"ms-3\"], [1, \"col-sm-4\"], [\"class\", \"cursorStyle\", 4, \"ngIf\", \"ngIfElse\"], [\"showOnGoingData\", \"\"], [1, \"cursorStyle\"], [1, \"border\", \"cardOverwrite\", \"ms-4\", \"mb-3\", \"me-2\", 2, \"display\", \"flex\", 3, \"matTooltip\", \"ngClass\"], [1, \"displayFlex\"], [1, \"progressStyle\"], [1, \"btn-sm\", \"btn-secondary\"], [1, \"spinner-container\", \"mt-2\"], [1, \"spinner-label\"], [3, \"options\", \"renderOnClick\", \"percent\"], [1, \"border\", \"cardOverwrite\", \"ms-4\", \"mb-3\", \"me-3\", \"cursorPointer\", 2, \"display\", \"flex\", 3, \"click\"], [1, \"btn-sm\", \"btn-primary\"]],\n    template: function IntervalTrackingComponent_Template(rf, ctx) {\n      if (rf & 1) {\n        i0.ɵɵelementStart(0, \"div\", 0);\n        i0.ɵɵelementStart(1, \"div\", 1);\n        i0.ɵɵelementStart(2, \"div\", 2);\n        i0.ɵɵelement(3, \"div\", 3);\n        i0.ɵɵelementStart(4, \"div\", 4);\n        i0.ɵɵelementStart(5, \"mat-card\", 5);\n        i0.ɵɵtemplate(6, IntervalTrackingComponent_div_6_Template, 24, 5, \"div\", 6);\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(7, \"div\", 7);\n        i0.ɵɵtemplate(8, IntervalTrackingComponent_div_8_Template, 4, 2, \"div\", 8);\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementEnd();\n      }\n      if (rf & 2) {\n        i0.ɵɵadvance(6);\n        i0.ɵɵproperty(\"ngIf\", ctx.configData);\n        i0.ɵɵadvance(2);\n        i0.ɵɵproperty(\"ngForOf\", ctx.reportData);\n      }\n    },\n    directives: [i5.MatCard, i6.NgIf, i6.NgForOf, i7.MatTooltip, i6.NgClass, i5.MatCardContent, i8.CircleProgressComponent],\n    styles: [\".spinner-container[_ngcontent-%COMP%]{display:flex;align-items:end;justify-content:end;padding-top:10px}.spinner-label[_ngcontent-%COMP%]{margin-left:8px}.progressStyle[_ngcontent-%COMP%]{flex:0 0 50px;align-items:center;display:flex}.disabled[_ngcontent-%COMP%]{display:block;opacity:.7}.custom-badge[_ngcontent-%COMP%]{height:1rem;width:4rem}.intervalCards[_ngcontent-%COMP%]{display:flex}.cursorStyle[_ngcontent-%COMP%]{cursor:not-allowed}.displayStyle[_ngcontent-%COMP%]{display:flex}.displayFlex[_ngcontent-%COMP%]{flex:1}\"]\n  });\n  return IntervalTrackingComponent;\n})();","map":null,"metadata":{},"sourceType":"module"}