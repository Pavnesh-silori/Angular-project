{"ast":null,"code":"import { NavigationEnd } from '@angular/router';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/router\";\nimport * as i2 from \"@angular/material/tabs\";\nimport * as i3 from \"@angular/common\";\nfunction ServiceByContractorComponent_ng_container_2_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r4 = i0.ɵɵgetCurrentView();\n    i0.ɵɵelementContainerStart(0);\n    i0.ɵɵelementStart(1, \"a\", 3);\n    i0.ɵɵlistener(\"click\", function ServiceByContractorComponent_ng_container_2_Template_a_click_1_listener() {\n      const restoredCtx = i0.ɵɵrestoreView(_r4);\n      const tab_r1 = restoredCtx.$implicit;\n      const ctx_r3 = i0.ɵɵnextContext();\n      return ctx_r3.activeLink = tab_r1[\"routerLink\"];\n    });\n    i0.ɵɵtext(2);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementContainerEnd();\n  }\n  if (rf & 2) {\n    const tab_r1 = ctx.$implicit;\n    const ctx_r0 = i0.ɵɵnextContext();\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"routerLink\", tab_r1[\"routerLink\"])(\"active\", ctx_r0.activeLink == tab_r1[\"routerLink\"]);\n    i0.ɵɵadvance(1);\n    i0.ɵɵtextInterpolate1(\" \", tab_r1[\"label\"], \" \");\n  }\n}\nexport let ServiceByContractorComponent = /*#__PURE__*/(() => {\n  class ServiceByContractorComponent {\n    constructor(router, activatedRoute) {\n      this.router = router;\n      this.activatedRoute = activatedRoute;\n      this.tabs = [{\n        label: 'Purchase and acquisition',\n        routerLink: 'purchase-acquisition'\n      }, {\n        label: 'Equipment servicing',\n        routerLink: 'equipment-servicing'\n      }, {\n        label: 'Sales and disbursements',\n        routerLink: 'sales-disbursement'\n      }, {\n        label: 'Retrofitting',\n        routerLink: 'retrofitting'\n      }];\n    }\n    ngOnInit() {}\n    ngAfterViewInit() {\n      this.router.events.subscribe(val => {\n        if (val instanceof NavigationEnd) {\n          this.setRoute();\n        }\n      });\n      this.activatedRoute.url.subscribe(() => this.setRoute());\n    }\n    setRoute() {\n      let currentPath = window.location.pathname;\n      for (let i = 0; i < this.tabs.length; i++) {\n        if (currentPath.includes(this.tabs[i].routerLink)) {\n          this.activeLink = this.tabs[i].routerLink;\n          break;\n        }\n      }\n    }\n  }\n  ServiceByContractorComponent.ɵfac = function ServiceByContractorComponent_Factory(t) {\n    return new (t || ServiceByContractorComponent)(i0.ɵɵdirectiveInject(i1.Router), i0.ɵɵdirectiveInject(i1.ActivatedRoute));\n  };\n  ServiceByContractorComponent.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n    type: ServiceByContractorComponent,\n    selectors: [[\"app-service-by-contractor\"]],\n    decls: 4,\n    vars: 1,\n    consts: [[1, \"card\", \"main-card\", \"cardOverwrite\", \"h100\"], [\"mat-tab-nav-bar\", \"\"], [4, \"ngFor\", \"ngForOf\"], [\"mat-tab-link\", \"\", 3, \"routerLink\", \"active\", \"click\"]],\n    template: function ServiceByContractorComponent_Template(rf, ctx) {\n      if (rf & 1) {\n        i0.ɵɵelementStart(0, \"div\", 0);\n        i0.ɵɵelementStart(1, \"nav\", 1);\n        i0.ɵɵtemplate(2, ServiceByContractorComponent_ng_container_2_Template, 3, 3, \"ng-container\", 2);\n        i0.ɵɵelementEnd();\n        i0.ɵɵelement(3, \"router-outlet\");\n        i0.ɵɵelementEnd();\n      }\n      if (rf & 2) {\n        i0.ɵɵadvance(2);\n        i0.ɵɵproperty(\"ngForOf\", ctx.tabs);\n      }\n    },\n    directives: [i2.MatTabNav, i3.NgForOf, i1.RouterOutlet, i1.RouterLinkWithHref, i2.MatTabLink],\n    styles: [\".mat-tab-link.mat-tab-label-active[_ngcontent-%COMP%]{color:#040484}.mat-tab-link[_ngcontent-%COMP%]{opacity:1!important}.col-recordID[_ngcontent-%COMP%]{min-width:120px}.col-date[_ngcontent-%COMP%]{min-width:140px}.col-group[_ngcontent-%COMP%]{min-width:120px}.col-gasQuantity[_ngcontent-%COMP%]{max-width:130px}.col-equipmentCapacity[_ngcontent-%COMP%]{min-width:140px}.col-doc[_ngcontent-%COMP%]{min-width:140px}\"]\n  });\n  return ServiceByContractorComponent;\n})();","map":null,"metadata":{},"sourceType":"module"}