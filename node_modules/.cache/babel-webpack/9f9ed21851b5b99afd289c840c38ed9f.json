{"ast":null,"code":"import { __awaiter } from \"tslib\";\nimport { FormControl, Validators } from '@angular/forms';\nimport { MAT_DIALOG_DATA } from '@angular/material/dialog';\nimport * as moment from 'moment';\nimport { ReplaySubject, Subject } from 'rxjs';\nimport { isEqual } from 'lodash';\nimport { ConfirmationDailog } from '../../../_shared/confirmation-dailog/confirmation-dailog.component';\nimport { CalculationApproachKeyIDEnum, EquipmentTabEnum } from '@carbon/enum/equiment.enum';\n// tsc-library\nimport { BulkUploadEnum, ButtonLabelEnum, DialogEnum, DialogResponseEnum, FormAction, InvalidForm, MatSelectSearchService, MaterialFormFieldAppearance, NocFileUploadEnum } from '@library/tsc-common';\nimport { ToastrColor, ToastrTitle } from '@library/toastr-service';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/material/dialog\";\nimport * as i2 from \"@carbon/controller/fugitive-service-by-contractor.controller\";\nimport * as i3 from \"@angular/forms\";\nimport * as i4 from \"@carbon/service/fugitive-activity-type.service\";\nimport * as i5 from \"@carbon/service/fugitive.service\";\nimport * as i6 from \"@library/unit-service\";\nimport * as i7 from \"@carbon/service/gas.service\";\nimport * as i8 from \"@library/toastr-service\";\nimport * as i9 from \"@angular/material/button\";\nimport * as i10 from \"@angular/material/tooltip\";\nimport * as i11 from \"@angular/material/form-field\";\nimport * as i12 from \"@angular/material/select\";\nimport * as i13 from \"@angular/material/core\";\nimport * as i14 from \"ngx-mat-select-search\";\nimport * as i15 from \"@angular/common\";\nimport * as i16 from \"@library/date\";\nimport * as i17 from \"@angular/material/input\";\nimport * as i18 from \"@angular/material/datepicker\";\nconst _c0 = [\"fileInput\"];\nfunction RetrofittingCreateUpdateDialog_mat_option_14_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"mat-option\", 34);\n    i0.ɵɵelementStart(1, \"span\", 35);\n    i0.ɵɵtext(2);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const gas_r19 = ctx.$implicit;\n    i0.ɵɵproperty(\"value\", gas_r19.id);\n    i0.ɵɵadvance(2);\n    i0.ɵɵtextInterpolate1(\" \", gas_r19.name, \" \");\n  }\n}\nfunction RetrofittingCreateUpdateDialog_mat_error_16_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"mat-error\");\n    i0.ɵɵtext(1, \" Gas is required \");\n    i0.ɵɵelementEnd();\n  }\n}\nfunction RetrofittingCreateUpdateDialog_mat_error_24_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"mat-error\");\n    i0.ɵɵtext(1, \" Date is required \");\n    i0.ɵɵelementEnd();\n  }\n}\nfunction RetrofittingCreateUpdateDialog_mat_error_29_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"mat-error\");\n    i0.ɵɵtext(1, \" Gas quantity is required \");\n    i0.ɵɵelementEnd();\n  }\n}\nfunction RetrofittingCreateUpdateDialog_mat_error_30_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"mat-error\");\n    i0.ɵɵtext(1, \" Gas quantity can not be negative \");\n    i0.ɵɵelementEnd();\n  }\n}\nfunction RetrofittingCreateUpdateDialog_mat_option_37_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"mat-option\", 34);\n    i0.ɵɵelementStart(1, \"span\", 35);\n    i0.ɵɵtext(2);\n    i0.ɵɵelementStart(3, \"span\");\n    i0.ɵɵtext(4);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const unit_r20 = ctx.$implicit;\n    i0.ɵɵproperty(\"value\", unit_r20.id);\n    i0.ɵɵadvance(2);\n    i0.ɵɵtextInterpolate1(\" \", unit_r20.name, \" -- \");\n    i0.ɵɵadvance(2);\n    i0.ɵɵtextInterpolate(unit_r20.uomCode);\n  }\n}\nfunction RetrofittingCreateUpdateDialog_mat_error_38_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"mat-error\");\n    i0.ɵɵtext(1, \" Unit ID is required \");\n    i0.ɵɵelementEnd();\n  }\n}\nfunction RetrofittingCreateUpdateDialog_mat_option_45_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"mat-option\", 34);\n    i0.ɵɵelementStart(1, \"span\", 35);\n    i0.ɵɵtext(2);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const type_r21 = ctx.$implicit;\n    i0.ɵɵproperty(\"value\", type_r21.keyID);\n    i0.ɵɵadvance(2);\n    i0.ɵɵtextInterpolate1(\" \", type_r21.name, \" \");\n  }\n}\nfunction RetrofittingCreateUpdateDialog_mat_error_46_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"mat-error\");\n    i0.ɵɵtext(1, \" Type is required \");\n    i0.ɵɵelementEnd();\n  }\n}\nfunction RetrofittingCreateUpdateDialog_mat_error_51_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"mat-error\");\n    i0.ɵɵtext(1, \" Total gas capacity of equipment is required \");\n    i0.ɵɵelementEnd();\n  }\n}\nfunction RetrofittingCreateUpdateDialog_mat_error_52_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"mat-error\");\n    i0.ɵɵtext(1, \" Total gas capacity of retiring equipment can not be negative \");\n    i0.ɵɵelementEnd();\n  }\n}\nfunction RetrofittingCreateUpdateDialog_mat_option_59_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"mat-option\", 34);\n    i0.ɵɵelementStart(1, \"span\", 35);\n    i0.ɵɵtext(2);\n    i0.ɵɵelementStart(3, \"span\");\n    i0.ɵɵtext(4);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const unit_r22 = ctx.$implicit;\n    i0.ɵɵproperty(\"value\", unit_r22.id);\n    i0.ɵɵadvance(2);\n    i0.ɵɵtextInterpolate1(\" \", unit_r22.name, \" \");\n    i0.ɵɵadvance(2);\n    i0.ɵɵtextInterpolate(unit_r22.uomCode);\n  }\n}\nfunction RetrofittingCreateUpdateDialog_mat_error_60_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"mat-error\");\n    i0.ɵɵtext(1, \" Unit ID is required \");\n    i0.ɵɵelementEnd();\n  }\n}\nconst _c1 = function (a0) {\n  return {\n    \"d-none\": a0\n  };\n};\nfunction RetrofittingCreateUpdateDialog_div_61_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r25 = i0.ɵɵgetCurrentView();\n    i0.ɵɵelementStart(0, \"div\");\n    i0.ɵɵelementStart(1, \"div\", 36);\n    i0.ɵɵelementStart(2, \"div\", 37);\n    i0.ɵɵelementStart(3, \"div\", 35);\n    i0.ɵɵelementStart(4, \"span\", 38);\n    i0.ɵɵtext(5, \" Attach bill\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(6, \"button\", 39);\n    i0.ɵɵlistener(\"click\", function RetrofittingCreateUpdateDialog_div_61_Template_button_click_6_listener() {\n      i0.ɵɵrestoreView(_r25);\n      const ctx_r24 = i0.ɵɵnextContext();\n      return ctx_r24.uploadFile();\n    });\n    i0.ɵɵtext(7, \"Upload file\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(8, \"input\", 40, 41);\n    i0.ɵɵlistener(\"change\", function RetrofittingCreateUpdateDialog_div_61_Template_input_change_8_listener($event) {\n      i0.ɵɵrestoreView(_r25);\n      const ctx_r26 = i0.ɵɵnextContext();\n      return ctx_r26.fileUpload($event);\n    });\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(10, \"div\", 42);\n    i0.ɵɵelementStart(11, \"div\", 43);\n    i0.ɵɵelement(12, \"img\", 44);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(13, \"div\", 45);\n    i0.ɵɵtext(14);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(15, \"div\", 46);\n    i0.ɵɵelementStart(16, \"button\", 47);\n    i0.ɵɵlistener(\"click\", function RetrofittingCreateUpdateDialog_div_61_Template_button_click_16_listener() {\n      i0.ɵɵrestoreView(_r25);\n      const ctx_r27 = i0.ɵɵnextContext();\n      return ctx_r27.removeFile();\n    });\n    i0.ɵɵelementStart(17, \"span\", 48);\n    i0.ɵɵtext(18, \" delete \");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const ctx_r14 = i0.ɵɵnextContext();\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngClass\", i0.ɵɵpureFunction1(3, _c1, !ctx_r14.noFileSelected));\n    i0.ɵɵadvance(9);\n    i0.ɵɵproperty(\"ngClass\", i0.ɵɵpureFunction1(5, _c1, ctx_r14.noFileSelected));\n    i0.ɵɵadvance(4);\n    i0.ɵɵtextInterpolate1(\" \", ctx_r14.uploadedFileName, \" \");\n  }\n}\nfunction RetrofittingCreateUpdateDialog_button_71_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r29 = i0.ɵɵgetCurrentView();\n    i0.ɵɵelementStart(0, \"button\", 49);\n    i0.ɵɵlistener(\"click\", function RetrofittingCreateUpdateDialog_button_71_Template_button_click_0_listener() {\n      i0.ɵɵrestoreView(_r29);\n      const ctx_r28 = i0.ɵɵnextContext();\n      return ctx_r28.createRetrofittingRecord();\n    });\n    i0.ɵɵtext(1);\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const ctx_r16 = i0.ɵɵnextContext();\n    i0.ɵɵadvance(1);\n    i0.ɵɵtextInterpolate1(\" \", ctx_r16.ButtonLabelEnum.CREATE_BTN_LABEL, \" \");\n  }\n}\nconst _c2 = function (a0) {\n  return {\n    \"disabled\": a0\n  };\n};\nfunction RetrofittingCreateUpdateDialog_button_72_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r31 = i0.ɵɵgetCurrentView();\n    i0.ɵɵelementStart(0, \"button\", 50);\n    i0.ɵɵlistener(\"click\", function RetrofittingCreateUpdateDialog_button_72_Template_button_click_0_listener() {\n      i0.ɵɵrestoreView(_r31);\n      const ctx_r30 = i0.ɵɵnextContext();\n      return ctx_r30.getConfirmation();\n    });\n    i0.ɵɵtext(1);\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const ctx_r17 = i0.ɵɵnextContext();\n    i0.ɵɵproperty(\"ngClass\", i0.ɵɵpureFunction1(2, _c2, ctx_r17.isEqual));\n    i0.ɵɵadvance(1);\n    i0.ɵɵtextInterpolate1(\" \", ctx_r17.ButtonLabelEnum.SAVE_BTN_LABEL, \" \");\n  }\n}\nfunction RetrofittingCreateUpdateDialog_button_73_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelement(0, \"button\", 51);\n  }\n}\n// /tsc-library\nexport let RetrofittingCreateUpdateDialog = /*#__PURE__*/(() => {\n  class RetrofittingCreateUpdateDialog {\n    constructor(dialog, fugitiveServiceByContractorController, formBuilder, dialogRef, fugitiveActivityTypeService, fugitiveService, unitService, gasService, toastrService, data) {\n      this.dialog = dialog;\n      this.fugitiveServiceByContractorController = fugitiveServiceByContractorController;\n      this.formBuilder = formBuilder;\n      this.dialogRef = dialogRef;\n      this.fugitiveActivityTypeService = fugitiveActivityTypeService;\n      this.fugitiveService = fugitiveService;\n      this.unitService = unitService;\n      this.gasService = gasService;\n      this.toastrService = toastrService;\n      this.data = data;\n      this.MaterialFormFieldAppearance = MaterialFormFieldAppearance;\n      this.FormAction = FormAction;\n      this.ButtonLabelEnum = ButtonLabelEnum;\n      this.title = 'Create';\n      this.isCreate = false;\n      this.retrofitTypeList = [];\n      this.uploadedFile = null;\n      this.noFileSelected = true;\n      this.isReadOnly = false;\n      this.gasFilterFC = new FormControl();\n      this.gasFilterUnsubscribe = new Subject();\n      this.gasFiltered = new ReplaySubject(1);\n      this.maxLength = 800;\n      this.gasSearchUtil = new MatSelectSearchService(['name']);\n      this.errorHandling = (control, error) => {\n        return this.retrofittingFG.get(control).hasError(error);\n      };\n      this.action = this.data['action'];\n      this.currentOrgID = this.data['currentOrgID'];\n      this.dialogRef.disableClose = true;\n      this.recordDate = this.data['recors'];\n    }\n    ngOnInit() {\n      this.retrofittingFGInit();\n      this.getUnit();\n      this.getGas();\n      this.getRetrofitTypeList();\n      if (this.action == FormAction.CREATE) {\n        this.isCreate = true;\n      } else if (this.action == FormAction.UPDATE) {\n        this.isCreate = false;\n        this.isReadOnly = true;\n        this.title = \"Update\";\n        this.retrofittingRecordID = this.data['equipmentCapacityID'];\n        this.getRetrofittingRecordByID();\n      } else {\n        this.toastrService.openToast(InvalidForm.INVALID_FORM_TITLE, 'Unrecognized action!', ToastrColor.ERROR);\n        this.dialogRef.close();\n      }\n    }\n    retrofittingFGInit() {\n      this.retrofittingFG = this.formBuilder.group({\n        recordID: [],\n        gasID: [, Validators.required],\n        recordDate: [, Validators.required],\n        gasQuantity: [, Validators.required],\n        gasQuantityUnitID: [, Validators.required],\n        equipmentTypeKeyID: [, Validators.required],\n        totalEquipmentCapacity: [, Validators.required],\n        totalEquipmentCapacityUnitID: [, Validators.required],\n        note: []\n      });\n    }\n    formatDate(control) {\n      let date = moment(this.retrofittingFG.controls[control].value).format(\"YYYY-MM-DD\");\n      this.retrofittingFG.controls[control].patchValue(date);\n    }\n    getGas() {\n      return __awaiter(this, void 0, void 0, function* () {\n        this.gasList = yield this.gasService.getGas();\n        // ngx mat select search\n        this.gasSearchUtil.entityArr = this.gasList;\n        this.gasSearchUtil.createSubscription();\n      });\n    }\n    getUnit() {\n      return __awaiter(this, void 0, void 0, function* () {\n        let unitFilter = [];\n        unitFilter = ['unitType:MASS'];\n        this.unitList = yield this.unitService.getUnit(unitFilter);\n      });\n    }\n    fileUpload(event) {\n      let file = event.target.files[0];\n      if (file) {\n        if (file.type !== 'application/pdf') {\n          this.toastrService.openToast(ToastrTitle.ERROR, NocFileUploadEnum.INVALID_FILE_TYPE_ERROR, ToastrColor.ERROR);\n          return;\n        }\n        if (file.size > BulkUploadEnum.MAX_FILE_SIZE) {\n          this.toastrService.openToast(ToastrTitle.ERROR, NocFileUploadEnum.INVAID_FILE_SIZE_ERROR, ToastrColor.ERROR);\n          return;\n        }\n        let reader = new FileReader();\n        reader.readAsDataURL(file);\n        reader.onload = e => {};\n        this.uploadedFile = file;\n        this.noFileSelected = false;\n        this.uploadedFileName = file['name'];\n      }\n    }\n    removeFile() {\n      this.uploadedFile = null;\n      this.uploadedFileName = '';\n      this.noFileSelected = true;\n      this.fileInput.nativeElement.value = null;\n    }\n    uploadFile() {\n      this.fileInput.nativeElement.click();\n    }\n    toFormData() {\n      const formData = new FormData();\n      formData.append(\"file\", this.uploadedFile);\n      formData.append(\"data\", JSON.stringify(this.retrofittingFG.value));\n      return formData;\n    }\n    getRetrofittingRecordByID() {\n      return __awaiter(this, void 0, void 0, function* () {\n        this.retrofittingRecord = yield this.fugitiveService.getServiceByContractorRecordByID(this.currentOrgID, this.retrofittingRecordID);\n        this.patchRetrofittingRecord(this.retrofittingRecord);\n      });\n    }\n    createRetrofittingRecord() {\n      if (!this.checkForValidForm()) {\n        return [];\n      }\n      this.fugitiveServiceByContractorController.createEquipmentCapacityRecord(this.currentOrgID, this.toFormData()).subscribe(createRes => {\n        this.dialogRef.close(DialogEnum.SUCCESS_DR);\n      }, error => {\n        console.log('error in createRetrofittingRecord -', error);\n      });\n    }\n    patchRetrofittingRecord(retrofittingRecord) {\n      this.retrofittingFG.patchValue({\n        recordID: retrofittingRecord['recordID'],\n        gasID: retrofittingRecord['gasID'],\n        recordDate: retrofittingRecord['recordDate'],\n        gasQuantity: retrofittingRecord['gasQuantity'],\n        gasQuantityUnitID: retrofittingRecord['gasQuantityUnitID'],\n        equipmentTypeKeyID: retrofittingRecord['equipmentTypeKeyID'],\n        totalEquipmentCapacity: retrofittingRecord['totalEquipmentCapacity'],\n        totalEquipmentCapacityUnitID: retrofittingRecord['totalEquipmentCapacityUnitID'],\n        note: retrofittingRecord['note']\n      });\n      this.initialObject = this.retrofittingFG.value;\n      this.isEqual = true;\n    }\n    getConfirmation() {\n      if (!this.checkForValidForm()) {\n        return [];\n      }\n      if (this.showConfirmationDialog()) {\n        let recalculationDate = moment(this.recordDate).startOf('month').format('DD-MMM-YYYY');\n        const message = 'This will cause re-calculation from ' + recalculationDate + '. Fugitive emissions from refrigeration, air conditioning and fire suppression after the above date will be re-calculated.';\n        const dialogRef = this.dialog.open(ConfirmationDailog, {\n          data: {\n            currentOrgID: this.currentOrgID,\n            message: message\n          },\n          maxWidth: '500px',\n          maxHeight: '600px'\n        });\n        dialogRef.afterClosed().subscribe(result => {\n          if (result == DialogResponseEnum.YES) {\n            this.updateRetrofittingRecord();\n          }\n          //  else {\n          // \tthis.dialogRef.close('close');\n          // }\n        });\n      } else {\n        this.updateRetrofittingRecord();\n      }\n    }\n    updateRetrofittingRecord() {\n      this.fugitiveServiceByContractorController.updateEquipmentCapacityRecord(this.currentOrgID, this.retrofittingRecordID, this.retrofittingFG.value).subscribe(updateRes => {\n        this.dialogRef.close(DialogEnum.SUCCESS_DR);\n      }, error => {\n        console.log('error in updateRetrofittingRecord -', error);\n      });\n    }\n    getRetrofitTypeList() {\n      return __awaiter(this, void 0, void 0, function* () {\n        this.retrofitTypeList = yield this.fugitiveActivityTypeService.getFugitiveActivityType(EquipmentTabEnum.RETROFIT, CalculationApproachKeyIDEnum.CALCULATION_SERVICE_BY_CONTRACTOR);\n      });\n    }\n    checkForValidForm() {\n      if (this.retrofittingFG.invalid) {\n        this.retrofittingFG.markAllAsTouched();\n        console.log('invalid form -', this.retrofittingFG.value);\n        this.toastrService.openToast(InvalidForm.INVALID_FORM_TITLE, InvalidForm.INVALID_FORM_MESSAGE, ToastrColor.ERROR);\n        return false;\n      } else {\n        return true;\n      }\n    }\n    showConfirmationDialog() {\n      // if only note is updated, no need to show confirmation dailog box because it will not affect calculations\n      let showConfirmationDialog = false;\n      if (this.retrofittingFG.get('gasQuantity').touched || this.retrofittingFG.get('gasQuantityUnitID').touched || this.retrofittingFG.get('totalEquipmentCapacity').touched || this.retrofittingFG.get('totalEquipmentCapacityUnitID').touched || this.retrofittingFG.get('equipmentTypeKeyID').touched) {\n        showConfirmationDialog = true;\n      }\n      if (!showConfirmationDialog) {\n        let newRecordDate = this.retrofittingFG.get('recordDate').value;\n        if (newRecordDate !== this.retrofittingRecord['recordDate']) {\n          showConfirmationDialog = true;\n        }\n      }\n      return showConfirmationDialog;\n    }\n    ngAfterViewInit() {\n      this.retrofittingFG.valueChanges.subscribe(() => this.isEqual = isEqual(this.initialObject, this.retrofittingFG.value));\n    }\n    openDatepicker(datepicker) {\n      if (!datepicker.opened) {\n        datepicker.open();\n      }\n    }\n  }\n  RetrofittingCreateUpdateDialog.ɵfac = function RetrofittingCreateUpdateDialog_Factory(t) {\n    return new (t || RetrofittingCreateUpdateDialog)(i0.ɵɵdirectiveInject(i1.MatDialog), i0.ɵɵdirectiveInject(i2.FugitiveServiceByContractorController), i0.ɵɵdirectiveInject(i3.FormBuilder), i0.ɵɵdirectiveInject(i1.MatDialogRef), i0.ɵɵdirectiveInject(i4.FugitiveActivityTypeService), i0.ɵɵdirectiveInject(i5.FugitiveService), i0.ɵɵdirectiveInject(i6.UnitService), i0.ɵɵdirectiveInject(i7.GasService), i0.ɵɵdirectiveInject(i8.ToastrService), i0.ɵɵdirectiveInject(MAT_DIALOG_DATA));\n  };\n  RetrofittingCreateUpdateDialog.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n    type: RetrofittingCreateUpdateDialog,\n    selectors: [[\"app-retrofitting-create-update\"]],\n    viewQuery: function RetrofittingCreateUpdateDialog_Query(rf, ctx) {\n      if (rf & 1) {\n        i0.ɵɵviewQuery(_c0, 5);\n      }\n      if (rf & 2) {\n        let _t;\n        i0.ɵɵqueryRefresh(_t = i0.ɵɵloadQuery()) && (ctx.fileInput = _t.first);\n      }\n    },\n    decls: 74,\n    vars: 37,\n    consts: [[\"mat-dialog-title\", \"\"], [1, \"dialogTitle\"], [\"mat-icon-button\", \"\", \"mat-dialog-close\", \"\", \"cdkFocusInitial\", \"\", \"matTooltip\", \"Close\", \"matTooltipPosition\", \"before\", 1, \"float-end\", \"matDialogClose\"], [1, \"material-symbols-outlined\"], [\"mat-dialog-content\", \"\", 1, \"matDialogContent\"], [3, \"formGroup\"], [1, \"matFieldWidth100\", 3, \"appearance\"], [1, \"formLabel\"], [\"formControlName\", \"gasID\", \"required\", \"\", 3, \"disabled\"], [\"placeholderLabel\", \"Search by gas name\", \"noEntriesFoundLabel\", \"No matching found.\", 3, \"formControl\"], [3, \"value\", 4, \"ngFor\", \"ngForOf\"], [4, \"ngIf\"], [\"appDateMonthYearFormat\", \"\", 1, \"matFieldWidth100\", \"cursorPointer\", 3, \"appearance\", \"click\", \"keydown.enter\", \"keydown.arrowdown\"], [\"matInput\", \"\", \"formControlName\", \"recordDate\", \"required\", \"\", 1, \"noFocus\", 3, \"matDatepicker\", \"readonly\", \"dateInput\"], [\"matSuffix\", \"\", 3, \"for\"], [\"disabled\", \"false\"], [\"date\", \"\"], [\"matTooltip\", \"Quantity of gas\", 3, \"appearance\"], [\"matInput\", \"\", \"type\", \"number\", \"min\", \"0\", \"placeholder\", \"0\", \"formControlName\", \"gasQuantity\", \"required\", \"\", 1, \"formPlaceholder\"], [1, \"ms-2\", 3, \"appearance\"], [\"formControlName\", \"gasQuantityUnitID\", \"required\", \"\"], [\"disabled\", \"\"], [\"formControlName\", \"equipmentTypeKeyID\", \"required\", \"\"], [\"matTooltip\", \"Total gas capacity of equipment\", 3, \"appearance\"], [\"matInput\", \"\", \"type\", \"number\", \"min\", \"0\", \"placeholder\", \"0\", \"formControlName\", \"totalEquipmentCapacity\", \"required\", \"\", 1, \"formPlaceholder\"], [\"formControlName\", \"totalEquipmentCapacityUnitID\", \"required\", \"\"], [1, \"matFieldWidth100\", \"mt-2\", 3, \"appearance\"], [\"matInput\", \"\", \"formControlName\", \"note\", 1, \"formPlaceholder\", 3, \"maxlength\"], [\"myInput\", \"\"], [\"mat-dialog-footer\", \"\", \"align\", \"end\"], [1, \"d-inline\", 3, \"ngSwitch\"], [\"type\", \"submit\", \"class\", \"button btn btn-success\", 3, \"click\", 4, \"ngSwitchCase\"], [\"type\", \"submit\", \"class\", \"button btn btn-success\", 3, \"ngClass\", \"click\", 4, \"ngSwitchCase\"], [\"class\", \"d-none\", 4, \"ngSwitchDefault\"], [3, \"value\"], [1, \"d-flex\", \"justify-content-between\"], [1, \"row\", \"my-3\", 3, \"ngClass\"], [1, \"col-sm-8\"], [1, \"my-auto\", \"fw-bold\", \"ms-1\", \"uploadDocumentFont\"], [\"type\", \"button\", 1, \"button\", \"btn\", \"btn-primary\", 3, \"click\"], [\"type\", \"file\", \"accept\", \"application/pdf\", 1, \"d-none\", 3, \"change\"], [\"fileInput\", \"\"], [1, \"row\", \"border\", \"border-2\", \"rounded\", \"m-1\", \"p-2\", 3, \"ngClass\"], [1, \"col-sm-3\", \"docIcon\"], [\"height\", \"80px\", \"src\", \"assets/images/default-doc.ico\", \"alt\", \"noc document preview\"], [1, \"col-sm-7\", \"centerAlignVertical\", \"uploadDocumentFont\"], [1, \"col-sm-2\", \"centerAlign\"], [\"type\", \"button\", \"mat-icon-button\", \"\", 1, \"btn\", 3, \"click\"], [1, \"material-symbols-outlined\", \"text-danger\"], [\"type\", \"submit\", 1, \"button\", \"btn\", \"btn-success\", 3, \"click\"], [\"type\", \"submit\", 1, \"button\", \"btn\", \"btn-success\", 3, \"ngClass\", \"click\"], [1, \"d-none\"]],\n    template: function RetrofittingCreateUpdateDialog_Template(rf, ctx) {\n      if (rf & 1) {\n        const _r32 = i0.ɵɵgetCurrentView();\n        i0.ɵɵelementStart(0, \"div\", 0);\n        i0.ɵɵelementStart(1, \"strong\", 1);\n        i0.ɵɵtext(2);\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(3, \"button\", 2);\n        i0.ɵɵelementStart(4, \"span\", 3);\n        i0.ɵɵtext(5, \"close\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(6, \"div\", 4);\n        i0.ɵɵelementStart(7, \"form\", 5);\n        i0.ɵɵelementStart(8, \"mat-form-field\", 6);\n        i0.ɵɵelementStart(9, \"mat-label\", 7);\n        i0.ɵɵtext(10, \"Select gas\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(11, \"mat-select\", 8);\n        i0.ɵɵelementStart(12, \"mat-option\");\n        i0.ɵɵelement(13, \"ngx-mat-select-search\", 9);\n        i0.ɵɵelementEnd();\n        i0.ɵɵtemplate(14, RetrofittingCreateUpdateDialog_mat_option_14_Template, 3, 2, \"mat-option\", 10);\n        i0.ɵɵpipe(15, \"async\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵtemplate(16, RetrofittingCreateUpdateDialog_mat_error_16_Template, 2, 0, \"mat-error\", 11);\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(17, \"mat-form-field\", 12);\n        i0.ɵɵlistener(\"click\", function RetrofittingCreateUpdateDialog_Template_mat_form_field_click_17_listener() {\n          i0.ɵɵrestoreView(_r32);\n          const _r2 = i0.ɵɵreference(23);\n          return ctx.openDatepicker(_r2);\n        })(\"keydown.enter\", function RetrofittingCreateUpdateDialog_Template_mat_form_field_keydown_enter_17_listener() {\n          i0.ɵɵrestoreView(_r32);\n          const _r2 = i0.ɵɵreference(23);\n          return ctx.openDatepicker(_r2);\n        })(\"keydown.arrowdown\", function RetrofittingCreateUpdateDialog_Template_mat_form_field_keydown_arrowdown_17_listener() {\n          i0.ɵɵrestoreView(_r32);\n          const _r2 = i0.ɵɵreference(23);\n          return ctx.openDatepicker(_r2);\n        });\n        i0.ɵɵelementStart(18, \"mat-label\", 7);\n        i0.ɵɵtext(19, \" Retrofitted on\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(20, \"input\", 13);\n        i0.ɵɵlistener(\"dateInput\", function RetrofittingCreateUpdateDialog_Template_input_dateInput_20_listener() {\n          return ctx.formatDate(\"recordDate\");\n        });\n        i0.ɵɵelementEnd();\n        i0.ɵɵelement(21, \"mat-datepicker-toggle\", 14);\n        i0.ɵɵelement(22, \"mat-datepicker\", 15, 16);\n        i0.ɵɵtemplate(24, RetrofittingCreateUpdateDialog_mat_error_24_Template, 2, 0, \"mat-error\", 11);\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(25, \"mat-form-field\", 17);\n        i0.ɵɵelementStart(26, \"mat-label\", 7);\n        i0.ɵɵtext(27, \" Quantity of gas \");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelement(28, \"input\", 18);\n        i0.ɵɵtemplate(29, RetrofittingCreateUpdateDialog_mat_error_29_Template, 2, 0, \"mat-error\", 11);\n        i0.ɵɵtemplate(30, RetrofittingCreateUpdateDialog_mat_error_30_Template, 2, 0, \"mat-error\", 11);\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(31, \"mat-form-field\", 19);\n        i0.ɵɵelementStart(32, \"mat-label\", 7);\n        i0.ɵɵtext(33, \"Unit\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(34, \"mat-select\", 20);\n        i0.ɵɵelementStart(35, \"mat-option\", 21);\n        i0.ɵɵtext(36, \"Select unit\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵtemplate(37, RetrofittingCreateUpdateDialog_mat_option_37_Template, 5, 3, \"mat-option\", 10);\n        i0.ɵɵelementEnd();\n        i0.ɵɵtemplate(38, RetrofittingCreateUpdateDialog_mat_error_38_Template, 2, 0, \"mat-error\", 11);\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(39, \"mat-form-field\", 6);\n        i0.ɵɵelementStart(40, \"mat-label\", 7);\n        i0.ɵɵtext(41, \"Type\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(42, \"mat-select\", 22);\n        i0.ɵɵelementStart(43, \"mat-option\", 21);\n        i0.ɵɵtext(44, \"Type\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵtemplate(45, RetrofittingCreateUpdateDialog_mat_option_45_Template, 3, 2, \"mat-option\", 10);\n        i0.ɵɵelementEnd();\n        i0.ɵɵtemplate(46, RetrofittingCreateUpdateDialog_mat_error_46_Template, 2, 0, \"mat-error\", 11);\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(47, \"mat-form-field\", 23);\n        i0.ɵɵelementStart(48, \"mat-label\", 7);\n        i0.ɵɵtext(49, \" Total gas capacity of equipment \");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelement(50, \"input\", 24);\n        i0.ɵɵtemplate(51, RetrofittingCreateUpdateDialog_mat_error_51_Template, 2, 0, \"mat-error\", 11);\n        i0.ɵɵtemplate(52, RetrofittingCreateUpdateDialog_mat_error_52_Template, 2, 0, \"mat-error\", 11);\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(53, \"mat-form-field\", 19);\n        i0.ɵɵelementStart(54, \"mat-label\", 7);\n        i0.ɵɵtext(55, \"Unit\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(56, \"mat-select\", 25);\n        i0.ɵɵelementStart(57, \"mat-option\", 21);\n        i0.ɵɵtext(58, \"Select unit\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵtemplate(59, RetrofittingCreateUpdateDialog_mat_option_59_Template, 5, 3, \"mat-option\", 10);\n        i0.ɵɵelementEnd();\n        i0.ɵɵtemplate(60, RetrofittingCreateUpdateDialog_mat_error_60_Template, 2, 0, \"mat-error\", 11);\n        i0.ɵɵelementEnd();\n        i0.ɵɵtemplate(61, RetrofittingCreateUpdateDialog_div_61_Template, 19, 7, \"div\", 11);\n        i0.ɵɵelementStart(62, \"mat-form-field\", 26);\n        i0.ɵɵelementStart(63, \"mat-label\", 7);\n        i0.ɵɵtext(64, \" Add a note \");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelement(65, \"input\", 27, 28);\n        i0.ɵɵelementStart(67, \"mat-hint\");\n        i0.ɵɵtext(68);\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(69, \"div\", 29);\n        i0.ɵɵelementStart(70, \"div\", 30);\n        i0.ɵɵtemplate(71, RetrofittingCreateUpdateDialog_button_71_Template, 2, 1, \"button\", 31);\n        i0.ɵɵtemplate(72, RetrofittingCreateUpdateDialog_button_72_Template, 2, 4, \"button\", 32);\n        i0.ɵɵtemplate(73, RetrofittingCreateUpdateDialog_button_73_Template, 1, 0, \"button\", 33);\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementEnd();\n      }\n      if (rf & 2) {\n        const _r2 = i0.ɵɵreference(23);\n        const _r15 = i0.ɵɵreference(66);\n        i0.ɵɵadvance(2);\n        i0.ɵɵtextInterpolate1(\" \", ctx.title, \" retrofitting record \");\n        i0.ɵɵadvance(5);\n        i0.ɵɵproperty(\"formGroup\", ctx.retrofittingFG);\n        i0.ɵɵadvance(1);\n        i0.ɵɵproperty(\"appearance\", ctx.MaterialFormFieldAppearance.FORM_FIELD_APPEARANCE);\n        i0.ɵɵadvance(3);\n        i0.ɵɵproperty(\"disabled\", ctx.isReadOnly);\n        i0.ɵɵadvance(2);\n        i0.ɵɵproperty(\"formControl\", ctx.gasSearchUtil.filterFC);\n        i0.ɵɵadvance(1);\n        i0.ɵɵproperty(\"ngForOf\", i0.ɵɵpipeBind1(15, 35, ctx.gasSearchUtil.filteredEntities));\n        i0.ɵɵadvance(2);\n        i0.ɵɵproperty(\"ngIf\", ctx.errorHandling(\"gasID\", \"required\"));\n        i0.ɵɵadvance(1);\n        i0.ɵɵproperty(\"appearance\", ctx.MaterialFormFieldAppearance.FORM_FIELD_APPEARANCE);\n        i0.ɵɵadvance(3);\n        i0.ɵɵproperty(\"matDatepicker\", _r2)(\"readonly\", true);\n        i0.ɵɵadvance(1);\n        i0.ɵɵproperty(\"for\", _r2);\n        i0.ɵɵadvance(3);\n        i0.ɵɵproperty(\"ngIf\", ctx.errorHandling(\"recordDate\", \"required\"));\n        i0.ɵɵadvance(1);\n        i0.ɵɵproperty(\"appearance\", ctx.MaterialFormFieldAppearance.FORM_FIELD_APPEARANCE);\n        i0.ɵɵadvance(4);\n        i0.ɵɵproperty(\"ngIf\", ctx.errorHandling(\"gasQuantity\", \"required\"));\n        i0.ɵɵadvance(1);\n        i0.ɵɵproperty(\"ngIf\", ctx.errorHandling(\"gasQuantity\", \"min\"));\n        i0.ɵɵadvance(1);\n        i0.ɵɵproperty(\"appearance\", ctx.MaterialFormFieldAppearance.FORM_FIELD_APPEARANCE);\n        i0.ɵɵadvance(6);\n        i0.ɵɵproperty(\"ngForOf\", ctx.unitList);\n        i0.ɵɵadvance(1);\n        i0.ɵɵproperty(\"ngIf\", ctx.errorHandling(\"gasQuantityUnitID\", \"required\"));\n        i0.ɵɵadvance(1);\n        i0.ɵɵproperty(\"appearance\", ctx.MaterialFormFieldAppearance.FORM_FIELD_APPEARANCE);\n        i0.ɵɵadvance(6);\n        i0.ɵɵproperty(\"ngForOf\", ctx.retrofitTypeList);\n        i0.ɵɵadvance(1);\n        i0.ɵɵproperty(\"ngIf\", ctx.errorHandling(\"equipmentTypeKeyID\", \"required\"));\n        i0.ɵɵadvance(1);\n        i0.ɵɵproperty(\"appearance\", ctx.MaterialFormFieldAppearance.FORM_FIELD_APPEARANCE);\n        i0.ɵɵadvance(4);\n        i0.ɵɵproperty(\"ngIf\", ctx.errorHandling(\"totalEquipmentCapacity\", \"required\"));\n        i0.ɵɵadvance(1);\n        i0.ɵɵproperty(\"ngIf\", ctx.errorHandling(\"totalEquipmentCapacity\", \"min\"));\n        i0.ɵɵadvance(1);\n        i0.ɵɵproperty(\"appearance\", ctx.MaterialFormFieldAppearance.FORM_FIELD_APPEARANCE);\n        i0.ɵɵadvance(6);\n        i0.ɵɵproperty(\"ngForOf\", ctx.unitList);\n        i0.ɵɵadvance(1);\n        i0.ɵɵproperty(\"ngIf\", ctx.errorHandling(\"totalEquipmentCapacityUnitID\", \"required\"));\n        i0.ɵɵadvance(1);\n        i0.ɵɵproperty(\"ngIf\", !ctx.isReadOnly);\n        i0.ɵɵadvance(1);\n        i0.ɵɵproperty(\"appearance\", ctx.MaterialFormFieldAppearance.FORM_FIELD_APPEARANCE);\n        i0.ɵɵadvance(3);\n        i0.ɵɵproperty(\"maxlength\", ctx.maxLength);\n        i0.ɵɵadvance(3);\n        i0.ɵɵtextInterpolate2(\"Total number of character remaining: \", _r15.value.length, \" /\", ctx.maxLength, \"\");\n        i0.ɵɵadvance(2);\n        i0.ɵɵproperty(\"ngSwitch\", ctx.action);\n        i0.ɵɵadvance(1);\n        i0.ɵɵproperty(\"ngSwitchCase\", ctx.FormAction.CREATE);\n        i0.ɵɵadvance(1);\n        i0.ɵɵproperty(\"ngSwitchCase\", ctx.FormAction.UPDATE);\n      }\n    },\n    directives: [i1.MatDialogTitle, i9.MatButton, i1.MatDialogClose, i10.MatTooltip, i1.MatDialogContent, i3.ɵNgNoValidate, i3.NgControlStatusGroup, i3.FormGroupDirective, i11.MatFormField, i11.MatLabel, i12.MatSelect, i3.NgControlStatus, i3.FormControlName, i3.RequiredValidator, i13.MatOption, i14.MatSelectSearchComponent, i3.FormControlDirective, i15.NgForOf, i15.NgIf, i16.DateMonthYearFormatDirective, i17.MatInput, i3.DefaultValueAccessor, i18.MatDatepickerInput, i18.MatDatepickerToggle, i11.MatSuffix, i18.MatDatepicker, i3.MinValidator, i3.NumberValueAccessor, i3.MaxLengthValidator, i11.MatHint, i15.NgSwitch, i15.NgSwitchCase, i15.NgSwitchDefault, i11.MatError, i15.NgClass],\n    pipes: [i15.AsyncPipe],\n    encapsulation: 2\n  });\n  return RetrofittingCreateUpdateDialog;\n})();","map":null,"metadata":{},"sourceType":"module"}