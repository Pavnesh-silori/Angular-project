{"ast":null,"code":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nvar ng_redux_1 = require(\"../components/ng-redux\");\nvar helpers_1 = require(\"./helpers\");\n/**\n * Auto-dispatches the return value of the decorated function.\n *\n * Decorate a function creator method with @dispatch and its return\n * value will automatically be passed to ngRedux.dispatch() for you.\n */\nfunction dispatch() {\n  return function decorate(target, key, descriptor) {\n    var originalMethod;\n    var wrapped = function () {\n      var args = [];\n      for (var _i = 0; _i < arguments.length; _i++) {\n        args[_i] = arguments[_i];\n      }\n      var result = originalMethod.apply(this, args);\n      if (result !== false) {\n        var store = helpers_1.getBaseStore(this) || ng_redux_1.NgRedux.instance;\n        if (store) {\n          store.dispatch(result);\n        }\n      }\n      return result;\n    };\n    descriptor = descriptor || Object.getOwnPropertyDescriptor(target, key);\n    if (descriptor === undefined) {\n      var dispatchDescriptor = {\n        get: function () {\n          return wrapped;\n        },\n        set: function (setMethod) {\n          return originalMethod = setMethod;\n        }\n      };\n      Object.defineProperty(target, key, dispatchDescriptor);\n      return dispatchDescriptor;\n    } else {\n      originalMethod = descriptor.value;\n      descriptor.value = wrapped;\n      return descriptor;\n    }\n  };\n}\nexports.dispatch = dispatch;\n//# sourceMappingURL=dispatch.js.map","map":null,"metadata":{},"sourceType":"script"}