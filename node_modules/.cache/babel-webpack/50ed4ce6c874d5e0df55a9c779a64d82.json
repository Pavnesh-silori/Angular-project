{"ast":null,"code":"import { HttpParams } from '@angular/common/http';\nimport { environment } from 'src/environments/environment';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/common/http\";\nexport let SustainabilityAccountingController = /*#__PURE__*/(() => {\n  class SustainabilityAccountingController {\n    constructor(http) {\n      this.http = http;\n    }\n    getAccountList(currentOrgID, pageNo, pazeSize, sortBy, orderBy, startDate, endDate, includeSubsidiary, consolidationApproachKeyID, filterArr, dateFlag) {\n      let params = new HttpParams();\n      params = params.append('pageNo', pageNo + 1);\n      params = params.append('pageSize', pazeSize);\n      params = params.append('sortBy', sortBy);\n      params = params.append('orderBy', orderBy);\n      params = params.append('startDate', startDate);\n      params = params.append('endDate', endDate);\n      params = params.append('includeSubsidiary', includeSubsidiary);\n      params = params.append('consolidationApproachKeyID', consolidationApproachKeyID);\n      params = params.append('dateFlag', dateFlag);\n      filterArr.forEach(filter => {\n        params = params.append('filter', filter);\n      });\n      return this.http.get(`${environment.CARBON_ACCOUNTING_API_URL}organizations/${currentOrgID}/accounting/record/page`, {\n        params: params\n      });\n    }\n  }\n  SustainabilityAccountingController.ɵfac = function SustainabilityAccountingController_Factory(t) {\n    return new (t || SustainabilityAccountingController)(i0.ɵɵinject(i1.HttpClient));\n  };\n  SustainabilityAccountingController.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n    token: SustainabilityAccountingController,\n    factory: SustainabilityAccountingController.ɵfac,\n    providedIn: 'root'\n  });\n  return SustainabilityAccountingController;\n})();","map":null,"metadata":{},"sourceType":"module"}