{"ast":null,"code":"import { __awaiter } from \"tslib\";\nimport { FormControl, Validators } from '@angular/forms';\nimport { UnitTypeEnum } from '@carbon/enum/unit-type.enum';\nimport { MatSelectSearchService, MaterialFormFieldAppearance } from '@library/tsc-common';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@carbon/service/currency.service\";\nimport * as i2 from \"@library/unit-service\";\nimport * as i3 from \"@angular/forms\";\nimport * as i4 from \"@angular/material/card\";\nimport * as i5 from \"@angular/common\";\nimport * as i6 from \"@angular/material/form-field\";\nimport * as i7 from \"@angular/material/input\";\nimport * as i8 from \"@angular/material/select\";\nimport * as i9 from \"@angular/material/core\";\nimport * as i10 from \"ngx-mat-select-search\";\nfunction PurchasedEnergyComponent_ng_container_8_ng_container_3_mat_error_5_ng_container_1_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementContainerStart(0);\n    i0.ɵɵtext(1);\n    i0.ɵɵelementContainerEnd();\n  }\n  if (rf & 2) {\n    const validators_r6 = i0.ɵɵnextContext().$implicit;\n    i0.ɵɵadvance(1);\n    i0.ɵɵtextInterpolate1(\" \", validators_r6[\"error\"], \" \");\n  }\n}\nfunction PurchasedEnergyComponent_ng_container_8_ng_container_3_mat_error_5_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"mat-error\");\n    i0.ɵɵtemplate(1, PurchasedEnergyComponent_ng_container_8_ng_container_3_mat_error_5_ng_container_1_Template, 2, 1, \"ng-container\", 12);\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const validators_r6 = ctx.$implicit;\n    const field_r1 = i0.ɵɵnextContext(2).$implicit;\n    const ctx_r5 = i0.ɵɵnextContext();\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngIf\", ctx_r5.errorHandling(field_r1[\"control\"], validators_r6[\"validator\"]));\n  }\n}\nfunction PurchasedEnergyComponent_ng_container_8_ng_container_3_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementContainerStart(0);\n    i0.ɵɵelementStart(1, \"mat-form-field\", 9);\n    i0.ɵɵelementStart(2, \"mat-label\", 10);\n    i0.ɵɵtext(3);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelement(4, \"input\", 11);\n    i0.ɵɵtemplate(5, PurchasedEnergyComponent_ng_container_8_ng_container_3_mat_error_5_Template, 2, 1, \"mat-error\", 5);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementContainerEnd();\n  }\n  if (rf & 2) {\n    const field_r1 = i0.ɵɵnextContext().$implicit;\n    const ctx_r2 = i0.ɵɵnextContext();\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"appearance\", ctx_r2.MaterialFormFieldAppearance.FORM_FIELD_APPEARANCE);\n    i0.ɵɵadvance(2);\n    i0.ɵɵtextInterpolate(field_r1[\"label\"]);\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"type\", field_r1[\"type\"])(\"formControlName\", field_r1[\"control\"])(\"placeholder\", field_r1[\"placeholder\"]);\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngForOf\", field_r1[\"validators\"]);\n  }\n}\nfunction PurchasedEnergyComponent_ng_container_8_ng_container_4_mat_option_5_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"mat-option\");\n    i0.ɵɵelement(1, \"ngx-mat-select-search\", 15);\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const field_r1 = i0.ɵɵnextContext(2).$implicit;\n    const ctx_r11 = i0.ɵɵnextContext();\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"formControl\", ctx_r11.getSearchUtil(field_r1[\"searchUtil\"][\"name\"])[\"filterFC\"])(\"placeholderLabel\", field_r1[\"searchUtil\"][\"placeholderLabel\"])(\"noEntriesFoundLabel\", field_r1[\"searchUtil\"][\"noEntriesFoundLabel\"]);\n  }\n}\nfunction PurchasedEnergyComponent_ng_container_8_ng_container_4_mat_option_6_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"mat-option\", 16);\n    i0.ɵɵtext(1);\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const entity_r15 = ctx.$implicit;\n    const field_r1 = i0.ɵɵnextContext(2).$implicit;\n    i0.ɵɵproperty(\"value\", entity_r15[field_r1[\"option\"][\"value\"]]);\n    i0.ɵɵadvance(1);\n    i0.ɵɵtextInterpolate1(\" \", entity_r15[field_r1[\"option\"][\"view\"]], \" \");\n  }\n}\nfunction PurchasedEnergyComponent_ng_container_8_ng_container_4_mat_error_8_ng_container_1_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementContainerStart(0);\n    i0.ɵɵtext(1);\n    i0.ɵɵelementContainerEnd();\n  }\n  if (rf & 2) {\n    const validators_r17 = i0.ɵɵnextContext().$implicit;\n    i0.ɵɵadvance(1);\n    i0.ɵɵtextInterpolate1(\" \", validators_r17[\"error\"], \" \");\n  }\n}\nfunction PurchasedEnergyComponent_ng_container_8_ng_container_4_mat_error_8_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"mat-error\");\n    i0.ɵɵtemplate(1, PurchasedEnergyComponent_ng_container_8_ng_container_4_mat_error_8_ng_container_1_Template, 2, 1, \"ng-container\", 12);\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const validators_r17 = ctx.$implicit;\n    const field_r1 = i0.ɵɵnextContext(2).$implicit;\n    const ctx_r13 = i0.ɵɵnextContext();\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngIf\", ctx_r13.errorHandling(field_r1[\"control\"], validators_r17[\"validator\"]));\n  }\n}\nfunction PurchasedEnergyComponent_ng_container_8_ng_container_4_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementContainerStart(0);\n    i0.ɵɵelementStart(1, \"mat-form-field\", 9);\n    i0.ɵɵelementStart(2, \"mat-label\", 10);\n    i0.ɵɵtext(3);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(4, \"mat-select\", 13);\n    i0.ɵɵtemplate(5, PurchasedEnergyComponent_ng_container_8_ng_container_4_mat_option_5_Template, 2, 3, \"mat-option\", 12);\n    i0.ɵɵtemplate(6, PurchasedEnergyComponent_ng_container_8_ng_container_4_mat_option_6_Template, 2, 2, \"mat-option\", 14);\n    i0.ɵɵpipe(7, \"async\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵtemplate(8, PurchasedEnergyComponent_ng_container_8_ng_container_4_mat_error_8_Template, 2, 1, \"mat-error\", 5);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementContainerEnd();\n  }\n  if (rf & 2) {\n    const field_r1 = i0.ɵɵnextContext().$implicit;\n    const ctx_r3 = i0.ɵɵnextContext();\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"appearance\", ctx_r3.MaterialFormFieldAppearance.FORM_FIELD_APPEARANCE);\n    i0.ɵɵadvance(2);\n    i0.ɵɵtextInterpolate(field_r1[\"label\"]);\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"formControlName\", field_r1[\"control\"])(\"mulitple\", field_r1[\"multiple\"]);\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngIf\", field_r1[\"search\"]);\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngForOf\", field_r1[\"search\"] ? i0.ɵɵpipeBind1(7, 7, ctx_r3.getSearchUtil(field_r1[\"searchUtil\"][\"name\"])[\"filteredEntities\"]) : field_r1[\"entityList\"]);\n    i0.ɵɵadvance(2);\n    i0.ɵɵproperty(\"ngForOf\", field_r1[\"validators\"]);\n  }\n}\nfunction PurchasedEnergyComponent_ng_container_8_ng_container_5_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementContainerStart(0);\n    i0.ɵɵelementStart(1, \"div\", 4);\n    i0.ɵɵelementStart(2, \"div\", 17);\n    i0.ɵɵelementStart(3, \"div\", 18);\n    i0.ɵɵtext(4);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(5, \"div\", 19);\n    i0.ɵɵelementStart(6, \"div\", 20);\n    i0.ɵɵtext(7);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementContainerEnd();\n  }\n  if (rf & 2) {\n    const field_r1 = i0.ɵɵnextContext().$implicit;\n    i0.ɵɵadvance(4);\n    i0.ɵɵtextInterpolate1(\" \", field_r1[\"title\"], \" \");\n    i0.ɵɵadvance(3);\n    i0.ɵɵtextInterpolate1(\" \", field_r1[\"value\"], \" \");\n  }\n}\nfunction PurchasedEnergyComponent_ng_container_8_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementContainerStart(0);\n    i0.ɵɵelementStart(1, \"div\");\n    i0.ɵɵelementContainerStart(2, 6);\n    i0.ɵɵtemplate(3, PurchasedEnergyComponent_ng_container_8_ng_container_3_Template, 6, 6, \"ng-container\", 7);\n    i0.ɵɵtemplate(4, PurchasedEnergyComponent_ng_container_8_ng_container_4_Template, 9, 9, \"ng-container\", 7);\n    i0.ɵɵtemplate(5, PurchasedEnergyComponent_ng_container_8_ng_container_5_Template, 8, 2, \"ng-container\", 8);\n    i0.ɵɵelementContainerEnd();\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementContainerEnd();\n  }\n  if (rf & 2) {\n    const field_r1 = ctx.$implicit;\n    i0.ɵɵadvance(1);\n    i0.ɵɵclassMap(field_r1[\"width\"]);\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngSwitch\", field_r1[\"input\"]);\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngSwitchCase\", \"input\");\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngSwitchCase\", \"select\");\n  }\n}\nexport let PurchasedEnergyComponent = /*#__PURE__*/(() => {\n  class PurchasedEnergyComponent {\n    constructor(currencyService, unitService, formBuilder) {\n      this.currencyService = currencyService;\n      this.unitService = unitService;\n      this.formBuilder = formBuilder;\n      this.MaterialFormFieldAppearance = MaterialFormFieldAppearance;\n      this.formFields = [{\n        view: true,\n        width: 'col-sm-6',\n        key: 'amount',\n        label: 'Amount',\n        control: 'amount',\n        value: null,\n        placeholder: 'Amount of money',\n        input: 'input',\n        type: 'number',\n        validators: [{\n          validator: 'required',\n          error: 'Amount is mandatory'\n        }, {\n          validator: 'min',\n          limit: -0.000000000000000000001,\n          error: 'Amount cannot be negative!'\n        }]\n      }, {\n        view: true,\n        width: 'col-sm-3',\n        key: 'currency',\n        label: 'Currency',\n        control: 'currencyID',\n        value: null,\n        input: 'select',\n        type: 'select',\n        multiple: false,\n        search: true,\n        searchUtil: {\n          name: 'currencySearchUtil',\n          placeholderLabel: 'Search by currency name',\n          noEntriesFoundLabel: 'No matching currency found',\n          searchBy: 'currencyName'\n        },\n        entityList: [],\n        option: {\n          value: 'currencyID',\n          view: 'currencyName'\n        },\n        validators: [{\n          validator: 'required',\n          error: 'Select a currency'\n        }]\n      }, {\n        view: true,\n        width: 'col-sm-3',\n        key: 'unit',\n        label: 'Unit',\n        control: 'unitID',\n        value: null,\n        input: 'select',\n        type: 'select',\n        multiple: false,\n        search: true,\n        searchUtil: {\n          name: 'unitSearchUtil',\n          placeholderLabel: 'Search by unit name',\n          noEntriesFoundLabel: 'No matching unit found',\n          searchBy: 'uomName'\n        },\n        entityList: [],\n        option: {\n          value: 'id',\n          view: 'name'\n        },\n        validators: [{\n          validator: 'required',\n          error: 'Select a unit'\n        }]\n      }];\n      this.searchUtility = {};\n      this.isIndividualGasesFC = new FormControl(true);\n      this.referenceData = {};\n      this.errorHandling = (control, error) => {\n        return this.valueFG.get(control).hasError(error);\n      };\n    }\n    createSearchUtilities() {\n      this.formFields.forEach(ff => {\n        if (ff['input'] == 'select' && ff['search']) {\n          let searchUtil = ff['searchUtil'];\n          let name = searchUtil['name'];\n          this.searchUtility[name] = new MatSelectSearchService([searchUtil['searchBy']]);\n        }\n      });\n    }\n    getSearchUtil(util) {\n      return this.searchUtility[util];\n    }\n    setEntityList(key, list) {\n      this.formFields.find(f => (f === null || f === void 0 ? void 0 : f.key) == key)['entityList'] = list;\n    }\n    ngOnInit() {\n      this.createSearchUtilities();\n      this.initFormGroup();\n      this.getCurrency();\n      this.getUnit();\n    }\n    initFormGroup() {\n      this.valueFG = this.formBuilder.group(this.createFormGroup());\n    }\n    createFormGroup() {\n      let formGroup = {};\n      let formFields = this.formFields.filter(ff => ff['key'] != 'other');\n      formFields.forEach(ff => {\n        formGroup[ff['control']] = this.formBuilder.control(ff['value'], Validators.compose(ff['validators'].map(v => (v === null || v === void 0 ? void 0 : v.limit) ? Validators[v['validator']](v.limit) : Validators[v['validator']])));\n      });\n      return formGroup;\n    }\n    getCurrency() {\n      return __awaiter(this, void 0, void 0, function* () {\n        let currency = yield this.currencyService.getCurrency();\n        this.searchUtility['currencySearchUtil'].entityArr = currency;\n        this.searchUtility['currencySearchUtil'].createSubscription();\n      });\n    }\n    getUnit() {\n      return __awaiter(this, void 0, void 0, function* () {\n        let unitFilter = [`unitType:${UnitTypeEnum.ENERGY}`];\n        let unit = yield this.unitService.getUnit(unitFilter);\n        this.searchUtility['unitSearchUtil'].entityArr = unit;\n        this.searchUtility['unitSearchUtil'].createSubscription();\n      });\n    }\n    patchValue(values) {\n      if (values['isCo2e'] == 'YES') {\n        this.isIndividualGasesFC.patchValue(false);\n      } else {\n        this.isIndividualGasesFC.patchValue(true);\n      }\n      this.valueFG.patchValue(values);\n    }\n    isValidForm() {\n      if (this.valueFG.invalid) {\n        this.valueFG.markAllAsTouched();\n        console.log('invalid form -', this.valueFG);\n        return false;\n      }\n      return true;\n    }\n    getValuesJson() {\n      this.referenceData = {};\n      let factorValue = JSON.parse(JSON.stringify(this.valueFG.value));\n      Object.keys(factorValue).forEach(key => {\n        if (key == 'isCo2e') this.referenceData[key] = factorValue[key];else this.referenceData[key] = Number(factorValue[key]);\n      });\n      return this.referenceData;\n    }\n  }\n  PurchasedEnergyComponent.ɵfac = function PurchasedEnergyComponent_Factory(t) {\n    return new (t || PurchasedEnergyComponent)(i0.ɵɵdirectiveInject(i1.CurrencyService), i0.ɵɵdirectiveInject(i2.UnitService), i0.ɵɵdirectiveInject(i3.FormBuilder));\n  };\n  PurchasedEnergyComponent.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n    type: PurchasedEnergyComponent,\n    selectors: [[\"app-purchased-energy\"]],\n    decls: 9,\n    vars: 2,\n    consts: [[1, \"border\", \"cardOverwrite\"], [1, \"cardTitle\", \"pb-2\"], [1, \"pageSubtitle\"], [3, \"formGroup\"], [1, \"row\"], [4, \"ngFor\", \"ngForOf\"], [3, \"ngSwitch\"], [4, \"ngSwitchCase\"], [4, \"ngSwitchDefault\"], [1, \"matFieldWidth100\", 3, \"appearance\"], [1, \"formLabel\"], [\"matInput\", \"\", 1, \"formPlaceholder\", 3, \"type\", \"formControlName\", \"placeholder\"], [4, \"ngIf\"], [3, \"formControlName\", \"mulitple\"], [3, \"value\", 4, \"ngFor\", \"ngForOf\"], [3, \"formControl\", \"placeholderLabel\", \"noEntriesFoundLabel\"], [3, \"value\"], [1, \"col-sm-4\"], [1, \"col-form-label\", \"fs-5\", \"fw-bold\"], [1, \"col-sm-8\"], [1, \"form-control-plaintext\", \"fw-bold\"]],\n    template: function PurchasedEnergyComponent_Template(rf, ctx) {\n      if (rf & 1) {\n        i0.ɵɵelementStart(0, \"mat-card\", 0);\n        i0.ɵɵelementStart(1, \"div\", 1);\n        i0.ɵɵtext(2, \" Factor values \");\n        i0.ɵɵelementStart(3, \"div\", 2);\n        i0.ɵɵtext(4, \"Price based\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(5, \"form\", 3);\n        i0.ɵɵelementStart(6, \"div\", 4);\n        i0.ɵɵelementStart(7, \"div\", 4);\n        i0.ɵɵtemplate(8, PurchasedEnergyComponent_ng_container_8_Template, 6, 5, \"ng-container\", 5);\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementEnd();\n      }\n      if (rf & 2) {\n        i0.ɵɵadvance(5);\n        i0.ɵɵproperty(\"formGroup\", ctx.valueFG);\n        i0.ɵɵadvance(3);\n        i0.ɵɵproperty(\"ngForOf\", ctx.formFields);\n      }\n    },\n    directives: [i4.MatCard, i3.ɵNgNoValidate, i3.NgControlStatusGroup, i3.FormGroupDirective, i5.NgForOf, i5.NgSwitch, i5.NgSwitchCase, i5.NgSwitchDefault, i6.MatFormField, i6.MatLabel, i7.MatInput, i3.DefaultValueAccessor, i3.NgControlStatus, i3.FormControlName, i6.MatError, i5.NgIf, i8.MatSelect, i9.MatOption, i10.MatSelectSearchComponent, i3.FormControlDirective],\n    pipes: [i5.AsyncPipe],\n    encapsulation: 2\n  });\n  return PurchasedEnergyComponent;\n})();","map":null,"metadata":{},"sourceType":"module"}