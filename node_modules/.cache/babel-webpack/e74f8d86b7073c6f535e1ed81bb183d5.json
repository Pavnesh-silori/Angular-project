{"ast":null,"code":"import { Validators } from '@angular/forms';\nimport { MatButtonModule } from '@angular/material/button';\nimport { MAT_DIALOG_DATA, MatDialogModule } from '@angular/material/dialog';\nimport { MatIconModule } from '@angular/material/icon';\nimport { EmissionDataModule } from '@carbon/component/subsidiary-emission-data/emission-data/emission-data.module';\n// tsc-library\nimport { ButtonLabelEnum } from '@library/tsc-common';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/material/dialog\";\nimport * as i2 from \"@angular/material/button\";\nimport * as i3 from \"../../subsidiary-emission-data/emission-data/emission-data.component\";\nconst _c0 = [\"emissionDataComp\"];\n// /tsc-library\nexport let EmissionDataDialog = /*#__PURE__*/(() => {\n  class EmissionDataDialog {\n    constructor(dialogRef, data) {\n      var _a;\n      this.dialogRef = dialogRef;\n      this.data = data;\n      this.ButtonLabelEnum = ButtonLabelEnum;\n      this.emissionData = null;\n      this.dialogTitle = null;\n      this.consolidationApproachKeyIDList = [];\n      this.dialogRef.disableClose = true;\n      this.year = data['year'];\n      this.emissionData = (_a = data['yearlyEmissionData']) === null || _a === void 0 ? void 0 : _a['emissionRecords'];\n      this.dialogTitle = data['dialogTitle'];\n      this.consolidationApproachKeyIDList = data['consolidationApproachKeyIDList'];\n      this.action = data['action'];\n    }\n    ngOnInit() {}\n    saveEmission() {\n      if (this.emissionDataComp.saveEmission()) {\n        this.emissionDataComp.activityEmissionDataFG.addControl('year', this.emissionDataComp.activityEmissionDataFB.control('', Validators.required));\n        this.emissionDataComp.activityEmissionDataFG.controls['year'].patchValue(this.year);\n        this.dialogRef.close(this.emissionDataComp.activityEmissionDataFG.value);\n      }\n    }\n  }\n  EmissionDataDialog.ɵfac = function EmissionDataDialog_Factory(t) {\n    return new (t || EmissionDataDialog)(i0.ɵɵdirectiveInject(i1.MatDialogRef), i0.ɵɵdirectiveInject(MAT_DIALOG_DATA));\n  };\n  EmissionDataDialog.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n    type: EmissionDataDialog,\n    selectors: [[\"app-emission-data-dialog\"]],\n    viewQuery: function EmissionDataDialog_Query(rf, ctx) {\n      if (rf & 1) {\n        i0.ɵɵviewQuery(_c0, 5);\n      }\n      if (rf & 2) {\n        let _t;\n        i0.ɵɵqueryRefresh(_t = i0.ɵɵloadQuery()) && (ctx.emissionDataComp = _t.first);\n      }\n    },\n    decls: 13,\n    vars: 6,\n    consts: [[\"mat-dialog-title\", \"\"], [1, \"dialogTitle\"], [\"mat-icon-button\", \"\", \"cdkFocusInitial\", \"\", \"matTooltip\", \"Close\", \"matTooltipPosition\", \"before\", 1, \"float-end\"], [\"mat-dialog-close\", \"\", 1, \"material-symbols-outlined\"], [\"mat-dialog-content\", \"\", 1, \"matDialogContent\"], [1, \"row\", \"mt-2\"], [3, \"consolidationApproachKeyIDList\", \"year\", \"emissionData\", \"action\"], [\"emissionDataComp\", \"\"], [\"mat-dialog-footer\", \"\", \"align\", \"end\"], [\"type\", \"button\", 1, \"btn\", \"btn-sm\", \"btn-success\", \"mt-2\", 3, \"click\"]],\n    template: function EmissionDataDialog_Template(rf, ctx) {\n      if (rf & 1) {\n        i0.ɵɵelementStart(0, \"div\", 0);\n        i0.ɵɵelementStart(1, \"strong\", 1);\n        i0.ɵɵtext(2);\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(3, \"button\", 2);\n        i0.ɵɵelementStart(4, \"span\", 3);\n        i0.ɵɵtext(5, \" close \");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(6, \"div\", 4);\n        i0.ɵɵelementStart(7, \"div\", 5);\n        i0.ɵɵelement(8, \"app-emission-data\", 6, 7);\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(10, \"div\", 8);\n        i0.ɵɵelementStart(11, \"button\", 9);\n        i0.ɵɵlistener(\"click\", function EmissionDataDialog_Template_button_click_11_listener() {\n          return ctx.saveEmission();\n        });\n        i0.ɵɵtext(12);\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementEnd();\n      }\n      if (rf & 2) {\n        i0.ɵɵadvance(2);\n        i0.ɵɵtextInterpolate1(\" \", ctx.dialogTitle, \" \");\n        i0.ɵɵadvance(6);\n        i0.ɵɵproperty(\"consolidationApproachKeyIDList\", ctx.consolidationApproachKeyIDList)(\"year\", ctx.year)(\"emissionData\", ctx.emissionData)(\"action\", ctx.action);\n        i0.ɵɵadvance(4);\n        i0.ɵɵtextInterpolate1(\" \", ctx.ButtonLabelEnum.SAVE_BTN_LABEL, \" \");\n      }\n    },\n    directives: [i1.MatDialogTitle, i2.MatButton, i1.MatDialogClose, i1.MatDialogContent, i3.EmissionDataComponent],\n    encapsulation: 2\n  });\n  return EmissionDataDialog;\n})();\nexport let EmissionDataDialogModule = /*#__PURE__*/(() => {\n  class EmissionDataDialogModule {}\n  EmissionDataDialogModule.ɵfac = function EmissionDataDialogModule_Factory(t) {\n    return new (t || EmissionDataDialogModule)();\n  };\n  EmissionDataDialogModule.ɵmod = /*@__PURE__*/i0.ɵɵdefineNgModule({\n    type: EmissionDataDialogModule\n  });\n  EmissionDataDialogModule.ɵinj = /*@__PURE__*/i0.ɵɵdefineInjector({\n    imports: [[MatDialogModule, MatIconModule, MatButtonModule, EmissionDataModule]]\n  });\n  return EmissionDataDialogModule;\n})();","map":null,"metadata":{},"sourceType":"module"}