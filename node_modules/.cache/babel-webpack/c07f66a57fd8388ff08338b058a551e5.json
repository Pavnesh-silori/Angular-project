{"ast":null,"code":"import { __awaiter, __rest } from \"tslib\";\nimport { EventEmitter } from '@angular/core';\nimport { Validators } from '@angular/forms';\nimport { isEqual } from \"lodash\";\nimport * as moment from 'moment';\nimport { forkJoin } from 'rxjs';\nimport { ActivityKeyIDEnum } from '@carbon/enum/activity.enum';\nimport { DataInputMethodKeyIDEnum } from '@carbon/enum/data-input-method.enum';\nimport { DataCollectionMethodKeyIDEnum } from '@carbon/enum/data-collection-method.enum';\n/* tsc-library */\nimport { DateFormatEnum, DateInputComponent, DateInputTypeEnum } from '@library/date';\nimport { FormErrorEnum, MatSelectSearchService, MaterialFormFieldAppearance, NocFileUploadEnum, TypeConfirmationDialog } from '@library/tsc-common';\nimport { UnitTypeKeyID } from '@library/unit-service';\nimport { CARBON_CONSTANT } from '@carbon/constant/carbon.constant';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/material/dialog\";\nimport * as i2 from \"@carbon/controller/document.controller\";\nimport * as i3 from \"@angular/forms\";\nimport * as i4 from \"@carbon/service/fuel.service\";\nimport * as i5 from \"@netzero/service/custom-fuel.service\";\nimport * as i6 from \"@library/unit-service\";\nimport * as i7 from \"@library/date\";\nimport * as i8 from \"@library/toastr-service\";\nimport * as i9 from \"@library/tsc-common\";\nimport * as i10 from \"@carbon/service/data-collection-method.service\";\nimport * as i11 from \"@library/storage-service\";\nimport * as i12 from \"@angular/router\";\nimport * as i13 from \"@angular/common\";\nimport * as i14 from \"@angular/material/card\";\nimport * as i15 from \"@angular/material/menu\";\nimport * as i16 from \"@angular/material/form-field\";\nimport * as i17 from \"@angular/material/select\";\nimport * as i18 from \"@angular/material/core\";\nimport * as i19 from \"ngx-mat-select-search\";\nimport * as i20 from \"@angular/material/input\";\nconst _c0 = [\"fileInput\"];\nfunction ElectricityHeatExportActivityDataCreateComponent_ng_container_2_ng_container_3_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementContainerStart(0);\n    i0.ɵɵelementStart(1, \"div\", 6);\n    i0.ɵɵelementStart(2, \"div\", 37);\n    i0.ɵɵtext(3, \" Combustion equipment: \");\n    i0.ɵɵelementStart(4, \"span\", 38);\n    i0.ɵɵtext(5);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementContainerEnd();\n  }\n  if (rf & 2) {\n    const formGroup_r1 = i0.ɵɵnextContext().$implicit;\n    i0.ɵɵadvance(5);\n    i0.ɵɵtextInterpolate1(\" \", formGroup_r1.get(\"sourceName\").value, \" \");\n  }\n}\nfunction ElectricityHeatExportActivityDataCreateComponent_ng_container_2_mat_error_15_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"mat-error\", 39);\n    i0.ɵɵtext(1);\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const ctx_r5 = i0.ɵɵnextContext(2);\n    i0.ɵɵadvance(1);\n    i0.ɵɵtextInterpolate1(\" \", ctx_r5.FormErrorEnum.REQUIRED, \" \");\n  }\n}\nfunction ElectricityHeatExportActivityDataCreateComponent_ng_container_2_mat_option_32_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"mat-option\", 40);\n    i0.ɵɵtext(1);\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const type_r30 = ctx.$implicit;\n    i0.ɵɵproperty(\"value\", type_r30.id)(\"matTooltip\", type_r30 == null ? null : type_r30.description);\n    i0.ɵɵadvance(1);\n    i0.ɵɵtextInterpolate1(\" \", type_r30.name, \" \");\n  }\n}\nfunction ElectricityHeatExportActivityDataCreateComponent_ng_container_2_mat_option_42_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"mat-option\", 40);\n    i0.ɵɵtext(1);\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const type_r31 = ctx.$implicit;\n    i0.ɵɵproperty(\"value\", type_r31.id)(\"matTooltip\", type_r31 == null ? null : type_r31.description);\n    i0.ɵɵadvance(1);\n    i0.ɵɵtextInterpolate1(\" \", type_r31.name, \" \");\n  }\n}\nfunction ElectricityHeatExportActivityDataCreateComponent_ng_container_2_ng_container_44_mat_error_6_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"mat-error\");\n    i0.ɵɵtext(1);\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const ctx_r32 = i0.ɵɵnextContext(3);\n    i0.ɵɵadvance(1);\n    i0.ɵɵtextInterpolate1(\" \", ctx_r32.FormErrorEnum.NEGATIVE, \" \");\n  }\n}\nfunction ElectricityHeatExportActivityDataCreateComponent_ng_container_2_ng_container_44_mat_error_7_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"mat-error\");\n    i0.ɵɵtext(1);\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const ctx_r33 = i0.ɵɵnextContext(3);\n    i0.ɵɵadvance(1);\n    i0.ɵɵtextInterpolate1(\" \", ctx_r33.FormErrorEnum.REQUIRED, \" \");\n  }\n}\nfunction ElectricityHeatExportActivityDataCreateComponent_ng_container_2_ng_container_44_mat_option_15_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"mat-option\", 43);\n    i0.ɵɵtext(1);\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const unit_r35 = ctx.$implicit;\n    i0.ɵɵproperty(\"value\", unit_r35.id);\n    i0.ɵɵadvance(1);\n    i0.ɵɵtextInterpolate2(\" \", unit_r35.name, \" - \", unit_r35.uomCode, \" \");\n  }\n}\nfunction ElectricityHeatExportActivityDataCreateComponent_ng_container_2_ng_container_44_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementContainerStart(0);\n    i0.ɵɵelementStart(1, \"div\", 10);\n    i0.ɵɵelementStart(2, \"mat-form-field\", 27);\n    i0.ɵɵelementStart(3, \"mat-label\", 18);\n    i0.ɵɵtext(4);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelement(5, \"input\", 41);\n    i0.ɵɵtemplate(6, ElectricityHeatExportActivityDataCreateComponent_ng_container_2_ng_container_44_mat_error_6_Template, 2, 1, \"mat-error\", 5);\n    i0.ɵɵtemplate(7, ElectricityHeatExportActivityDataCreateComponent_ng_container_2_ng_container_44_mat_error_7_Template, 2, 1, \"mat-error\", 5);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(8, \"div\", 10);\n    i0.ɵɵelementStart(9, \"mat-form-field\", 27);\n    i0.ɵɵelementStart(10, \"mat-label\", 18);\n    i0.ɵɵtext(11);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(12, \"mat-select\", 42);\n    i0.ɵɵelementStart(13, \"mat-option\");\n    i0.ɵɵelement(14, \"ngx-mat-select-search\", 30);\n    i0.ɵɵelementEnd();\n    i0.ɵɵtemplate(15, ElectricityHeatExportActivityDataCreateComponent_ng_container_2_ng_container_44_mat_option_15_Template, 2, 3, \"mat-option\", 31);\n    i0.ɵɵpipe(16, \"async\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(17, \"mat-error\");\n    i0.ɵɵtext(18);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementContainerEnd();\n  }\n  if (rf & 2) {\n    const formGroup_r1 = i0.ɵɵnextContext().$implicit;\n    const ctx_r12 = i0.ɵɵnextContext();\n    i0.ɵɵadvance(2);\n    i0.ɵɵproperty(\"appearance\", ctx_r12.MaterialFormFieldAppearance.FORM_FIELD_APPEARANCE);\n    i0.ɵɵadvance(2);\n    i0.ɵɵtextInterpolate1(\" Quantity of \", ctx_r12.activityKeyID == ctx_r12.ActivityKeyIDEnum.PROCESS_ELECTRICITY_EXPORT ? \"electricity\" : \"heat\", \" exported\");\n    i0.ɵɵadvance(2);\n    i0.ɵɵproperty(\"ngIf\", ctx_r12.errorHandlingFA(formGroup_r1, \"energyExported\", \"min\"));\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngIf\", ctx_r12.errorHandlingFA(formGroup_r1, \"energyExported\", \"required\"));\n    i0.ɵɵadvance(2);\n    i0.ɵɵproperty(\"appearance\", ctx_r12.MaterialFormFieldAppearance.FORM_FIELD_APPEARANCE);\n    i0.ɵɵadvance(2);\n    i0.ɵɵtextInterpolate1(\" Select \", ctx_r12.activityKeyID == ctx_r12.ActivityKeyIDEnum.PROCESS_ELECTRICITY_EXPORT ? \"electricity\" : \"heat\", \" exported unit \");\n    i0.ɵɵadvance(3);\n    i0.ɵɵproperty(\"formControl\", ctx_r12.energyUnitSearchUtil.filterFC);\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngForOf\", i0.ɵɵpipeBind1(16, 9, ctx_r12.energyUnitSearchUtil.filteredEntities));\n    i0.ɵɵadvance(3);\n    i0.ɵɵtextInterpolate1(\" \", ctx_r12.FormErrorEnum.REQUIRED, \" \");\n  }\n}\nfunction ElectricityHeatExportActivityDataCreateComponent_ng_container_2_mat_error_51_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"mat-error\");\n    i0.ɵɵtext(1);\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const ctx_r13 = i0.ɵɵnextContext(2);\n    i0.ɵɵadvance(1);\n    i0.ɵɵtextInterpolate1(\" \", ctx_r13.FormErrorEnum.NEGATIVE, \" \");\n  }\n}\nfunction ElectricityHeatExportActivityDataCreateComponent_ng_container_2_mat_error_52_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"mat-error\");\n    i0.ɵɵtext(1);\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const ctx_r14 = i0.ɵɵnextContext(2);\n    i0.ɵɵadvance(1);\n    i0.ɵɵtextInterpolate1(\" \", ctx_r14.FormErrorEnum.REQUIRED, \" \");\n  }\n}\nfunction ElectricityHeatExportActivityDataCreateComponent_ng_container_2_mat_option_60_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"mat-option\", 43);\n    i0.ɵɵtext(1);\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const unit_r37 = ctx.$implicit;\n    i0.ɵɵproperty(\"value\", unit_r37.id);\n    i0.ɵɵadvance(1);\n    i0.ɵɵtextInterpolate2(\" \", unit_r37.name, \" - \", unit_r37.uomCode, \" \");\n  }\n}\nfunction ElectricityHeatExportActivityDataCreateComponent_ng_container_2_mat_error_62_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"mat-error\");\n    i0.ɵɵtext(1);\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const ctx_r16 = i0.ɵɵnextContext(2);\n    i0.ɵɵadvance(1);\n    i0.ɵɵtextInterpolate1(\" \", ctx_r16.FormErrorEnum.REQUIRED, \" \");\n  }\n}\nfunction ElectricityHeatExportActivityDataCreateComponent_ng_container_2_mat_option_70_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"mat-option\", 43);\n    i0.ɵɵtext(1);\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const unit_r38 = ctx.$implicit;\n    i0.ɵɵproperty(\"value\", unit_r38.id);\n    i0.ɵɵadvance(1);\n    i0.ɵɵtextInterpolate2(\" \", unit_r38.name, \" - \", unit_r38.uomCode, \" \");\n  }\n}\nfunction ElectricityHeatExportActivityDataCreateComponent_ng_container_2_mat_error_72_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"mat-error\");\n    i0.ɵɵtext(1);\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const ctx_r18 = i0.ɵɵnextContext(2);\n    i0.ɵɵadvance(1);\n    i0.ɵɵtextInterpolate1(\" \", ctx_r18.FormErrorEnum.REQUIRED, \" \");\n  }\n}\nfunction ElectricityHeatExportActivityDataCreateComponent_ng_container_2_mat_error_79_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"mat-error\");\n    i0.ɵɵtext(1);\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const ctx_r19 = i0.ɵɵnextContext(2);\n    i0.ɵɵadvance(1);\n    i0.ɵɵtextInterpolate1(\" \", ctx_r19.FormErrorEnum.NEGATIVE, \" \");\n  }\n}\nfunction ElectricityHeatExportActivityDataCreateComponent_ng_container_2_mat_error_80_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"mat-error\");\n    i0.ɵɵtext(1, \" Value can not be more than 1 \");\n    i0.ɵɵelementEnd();\n  }\n}\nfunction ElectricityHeatExportActivityDataCreateComponent_ng_container_2_mat_error_81_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"mat-error\");\n    i0.ɵɵtext(1);\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const ctx_r21 = i0.ɵɵnextContext(2);\n    i0.ɵɵadvance(1);\n    i0.ɵɵtextInterpolate1(\" \", ctx_r21.FormErrorEnum.REQUIRED, \" \");\n  }\n}\nfunction ElectricityHeatExportActivityDataCreateComponent_ng_container_2_mat_error_89_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"mat-error\");\n    i0.ɵɵtext(1);\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const ctx_r22 = i0.ɵɵnextContext(2);\n    i0.ɵɵadvance(1);\n    i0.ɵɵtextInterpolate1(\" \", ctx_r22.FormErrorEnum.NEGATIVE, \" \");\n  }\n}\nfunction ElectricityHeatExportActivityDataCreateComponent_ng_container_2_mat_error_90_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"mat-error\");\n    i0.ɵɵtext(1, \" Value can not be more than 100 \");\n    i0.ɵɵelementEnd();\n  }\n}\nfunction ElectricityHeatExportActivityDataCreateComponent_ng_container_2_mat_error_91_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"mat-error\");\n    i0.ɵɵtext(1);\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const ctx_r24 = i0.ɵɵnextContext(2);\n    i0.ɵɵadvance(1);\n    i0.ɵɵtextInterpolate1(\" \", ctx_r24.FormErrorEnum.REQUIRED, \" \");\n  }\n}\nfunction ElectricityHeatExportActivityDataCreateComponent_ng_container_2_ng_template_93_mat_error_5_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"mat-error\");\n    i0.ɵɵtext(1);\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const ctx_r39 = i0.ɵɵnextContext(3);\n    i0.ɵɵadvance(1);\n    i0.ɵɵtextInterpolate1(\" \", ctx_r39.FormErrorEnum.NEGATIVE, \" \");\n  }\n}\nfunction ElectricityHeatExportActivityDataCreateComponent_ng_container_2_ng_template_93_mat_error_6_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"mat-error\");\n    i0.ɵɵtext(1);\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const ctx_r40 = i0.ɵɵnextContext(3);\n    i0.ɵɵadvance(1);\n    i0.ɵɵtextInterpolate1(\" \", ctx_r40.FormErrorEnum.REQUIRED, \" \");\n  }\n}\nfunction ElectricityHeatExportActivityDataCreateComponent_ng_container_2_ng_template_93_mat_error_12_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"mat-error\");\n    i0.ɵɵtext(1);\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const ctx_r41 = i0.ɵɵnextContext(3);\n    i0.ɵɵadvance(1);\n    i0.ɵɵtextInterpolate1(\" \", ctx_r41.FormErrorEnum.NEGATIVE, \" \");\n  }\n}\nfunction ElectricityHeatExportActivityDataCreateComponent_ng_container_2_ng_template_93_mat_error_13_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"mat-error\");\n    i0.ɵɵtext(1);\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const ctx_r42 = i0.ɵɵnextContext(3);\n    i0.ɵɵadvance(1);\n    i0.ɵɵtextInterpolate1(\" \", ctx_r42.FormErrorEnum.REQUIRED, \" \");\n  }\n}\nfunction ElectricityHeatExportActivityDataCreateComponent_ng_container_2_ng_template_93_mat_option_21_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"mat-option\", 43);\n    i0.ɵɵtext(1);\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const unit_r45 = ctx.$implicit;\n    i0.ɵɵproperty(\"value\", unit_r45.id);\n    i0.ɵɵadvance(1);\n    i0.ɵɵtextInterpolate2(\" \", unit_r45.name, \" - \", unit_r45.uomCode, \" \");\n  }\n}\nfunction ElectricityHeatExportActivityDataCreateComponent_ng_container_2_ng_template_93_mat_error_23_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"mat-error\");\n    i0.ɵɵtext(1);\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const ctx_r44 = i0.ɵɵnextContext(3);\n    i0.ɵɵadvance(1);\n    i0.ɵɵtextInterpolate1(\" \", ctx_r44.FormErrorEnum.NEGATIVE, \" \");\n  }\n}\nfunction ElectricityHeatExportActivityDataCreateComponent_ng_container_2_ng_template_93_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\", 44);\n    i0.ɵɵelementStart(1, \"mat-form-field\", 27);\n    i0.ɵɵelementStart(2, \"mat-label\", 18);\n    i0.ɵɵtext(3, \"Opening meter reading\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelement(4, \"input\", 45);\n    i0.ɵɵtemplate(5, ElectricityHeatExportActivityDataCreateComponent_ng_container_2_ng_template_93_mat_error_5_Template, 2, 1, \"mat-error\", 5);\n    i0.ɵɵtemplate(6, ElectricityHeatExportActivityDataCreateComponent_ng_container_2_ng_template_93_mat_error_6_Template, 2, 1, \"mat-error\", 5);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(7, \"div\", 44);\n    i0.ɵɵelementStart(8, \"mat-form-field\", 27);\n    i0.ɵɵelementStart(9, \"mat-label\", 18);\n    i0.ɵɵtext(10, \"Closing meter reading\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelement(11, \"input\", 46);\n    i0.ɵɵtemplate(12, ElectricityHeatExportActivityDataCreateComponent_ng_container_2_ng_template_93_mat_error_12_Template, 2, 1, \"mat-error\", 5);\n    i0.ɵɵtemplate(13, ElectricityHeatExportActivityDataCreateComponent_ng_container_2_ng_template_93_mat_error_13_Template, 2, 1, \"mat-error\", 5);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(14, \"div\", 47);\n    i0.ɵɵelementStart(15, \"mat-form-field\", 27);\n    i0.ɵɵelementStart(16, \"mat-label\", 18);\n    i0.ɵɵtext(17, \"Select unit\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(18, \"mat-select\", 48);\n    i0.ɵɵelementStart(19, \"mat-option\");\n    i0.ɵɵelement(20, \"ngx-mat-select-search\", 30);\n    i0.ɵɵelementEnd();\n    i0.ɵɵtemplate(21, ElectricityHeatExportActivityDataCreateComponent_ng_container_2_ng_template_93_mat_option_21_Template, 2, 3, \"mat-option\", 31);\n    i0.ɵɵpipe(22, \"async\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵtemplate(23, ElectricityHeatExportActivityDataCreateComponent_ng_container_2_ng_template_93_mat_error_23_Template, 2, 1, \"mat-error\", 5);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const formGroup_r1 = i0.ɵɵnextContext().$implicit;\n    const ctx_r26 = i0.ɵɵnextContext();\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"appearance\", ctx_r26.MaterialFormFieldAppearance.FORM_FIELD_APPEARANCE);\n    i0.ɵɵadvance(4);\n    i0.ɵɵproperty(\"ngIf\", ctx_r26.errorHandlingFA(formGroup_r1, \"openingMeterReading\", \"min\"));\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngIf\", ctx_r26.errorHandlingFA(formGroup_r1, \"openingMeterReading\", \"required\"));\n    i0.ɵɵadvance(2);\n    i0.ɵɵproperty(\"appearance\", ctx_r26.MaterialFormFieldAppearance.FORM_FIELD_APPEARANCE);\n    i0.ɵɵadvance(4);\n    i0.ɵɵproperty(\"ngIf\", ctx_r26.errorHandlingFA(formGroup_r1, \"closingMeterReading\", \"min\"));\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngIf\", ctx_r26.errorHandlingFA(formGroup_r1, \"closingMeterReading\", \"required\"));\n    i0.ɵɵadvance(2);\n    i0.ɵɵproperty(\"appearance\", ctx_r26.MaterialFormFieldAppearance.FORM_FIELD_APPEARANCE);\n    i0.ɵɵadvance(5);\n    i0.ɵɵproperty(\"formControl\", ctx_r26.energyExportedUnitSearchUtil.filterFC);\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngForOf\", i0.ɵɵpipeBind1(22, 10, ctx_r26.energyExportedUnitSearchUtil.filteredEntities));\n    i0.ɵɵadvance(2);\n    i0.ɵɵproperty(\"ngIf\", ctx_r26.errorHandlingFA(formGroup_r1, \"meterUnitID\", \"min\"));\n  }\n}\nfunction ElectricityHeatExportActivityDataCreateComponent_ng_container_2_ng_container_95_ng_container_9_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementContainer(0);\n  }\n}\nconst _c1 = function (a0) {\n  return {\n    \"d-none\": a0\n  };\n};\nfunction ElectricityHeatExportActivityDataCreateComponent_ng_container_2_ng_container_95_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r51 = i0.ɵɵgetCurrentView();\n    i0.ɵɵelementContainerStart(0);\n    i0.ɵɵelementStart(1, \"div\", 6);\n    i0.ɵɵelementStart(2, \"div\", 49);\n    i0.ɵɵelementStart(3, \"input\", 50, 51);\n    i0.ɵɵlistener(\"change\", function ElectricityHeatExportActivityDataCreateComponent_ng_container_2_ng_container_95_Template_input_change_3_listener($event) {\n      i0.ɵɵrestoreView(_r51);\n      const ctx_r50 = i0.ɵɵnextContext();\n      const formGroup_r1 = ctx_r50.$implicit;\n      const i_r2 = ctx_r50.index;\n      const ctx_r49 = i0.ɵɵnextContext();\n      return ctx_r49.fileUpload($event, formGroup_r1, i_r2);\n    });\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(5, \"div\", 52);\n    i0.ɵɵelementStart(6, \"div\", 7);\n    i0.ɵɵelementStart(7, \"div\", 53);\n    i0.ɵɵelementStart(8, \"div\", 54);\n    i0.ɵɵtemplate(9, ElectricityHeatExportActivityDataCreateComponent_ng_container_2_ng_container_95_ng_container_9_Template, 1, 0, \"ng-container\", 55);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(10, \"div\", 54);\n    i0.ɵɵelementStart(11, \"div\", 56);\n    i0.ɵɵtext(12);\n    i0.ɵɵelement(13, \"br\");\n    i0.ɵɵtext(14);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(15, \"div\", 57);\n    i0.ɵɵelementStart(16, \"button\", 58);\n    i0.ɵɵlistener(\"click\", function ElectricityHeatExportActivityDataCreateComponent_ng_container_2_ng_container_95_Template_button_click_16_listener() {\n      i0.ɵɵrestoreView(_r51);\n      const ctx_r53 = i0.ɵɵnextContext();\n      const formGroup_r1 = ctx_r53.$implicit;\n      const i_r2 = ctx_r53.index;\n      const ctx_r52 = i0.ɵɵnextContext();\n      return ctx_r52.removeFile(formGroup_r1, i_r2);\n    });\n    i0.ɵɵelementStart(17, \"span\", 59);\n    i0.ɵɵtext(18, \" delete \");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementContainerEnd();\n  }\n  if (rf & 2) {\n    const ctx_r54 = i0.ɵɵnextContext();\n    const i_r2 = ctx_r54.index;\n    const formGroup_r1 = ctx_r54.$implicit;\n    const ctx_r27 = i0.ɵɵnextContext();\n    i0.ɵɵadvance(7);\n    i0.ɵɵproperty(\"ngClass\", i0.ɵɵpureFunction1(4, _c1, ctx_r27.docFileList[i_r2] == null));\n    i0.ɵɵadvance(2);\n    i0.ɵɵproperty(\"ngTemplateOutlet\", ctx_r27.docImg);\n    i0.ɵɵadvance(3);\n    i0.ɵɵtextInterpolate1(\" \", formGroup_r1.get(\"docName\").value, \" \");\n    i0.ɵɵadvance(2);\n    i0.ɵɵtextInterpolate1(\" \", formGroup_r1.get(\"docSize\").value, \" \");\n  }\n}\nfunction ElectricityHeatExportActivityDataCreateComponent_ng_container_2_ng_container_96_ng_container_4_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementContainer(0);\n  }\n}\nfunction ElectricityHeatExportActivityDataCreateComponent_ng_container_2_ng_container_96_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r58 = i0.ɵɵgetCurrentView();\n    i0.ɵɵelementContainerStart(0);\n    i0.ɵɵelementStart(1, \"div\", 52);\n    i0.ɵɵelementStart(2, \"div\", 7);\n    i0.ɵɵelementStart(3, \"div\", 60);\n    i0.ɵɵtemplate(4, ElectricityHeatExportActivityDataCreateComponent_ng_container_2_ng_container_96_ng_container_4_Template, 1, 0, \"ng-container\", 55);\n    i0.ɵɵelementStart(5, \"div\", 54);\n    i0.ɵɵelementStart(6, \"div\", 61);\n    i0.ɵɵelementStart(7, \"a\", 62);\n    i0.ɵɵtext(8);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(9, \"div\", 63);\n    i0.ɵɵelementStart(10, \"button\", 64);\n    i0.ɵɵlistener(\"click\", function ElectricityHeatExportActivityDataCreateComponent_ng_container_2_ng_container_96_Template_button_click_10_listener() {\n      i0.ɵɵrestoreView(_r58);\n      const _r56 = i0.ɵɵreference(14);\n      return _r56.click();\n    });\n    i0.ɵɵelementStart(11, \"span\", 65);\n    i0.ɵɵtext(12, \" edit \");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(13, \"input\", 66, 51);\n    i0.ɵɵlistener(\"change\", function ElectricityHeatExportActivityDataCreateComponent_ng_container_2_ng_container_96_Template_input_change_13_listener($event) {\n      i0.ɵɵrestoreView(_r58);\n      const ctx_r60 = i0.ɵɵnextContext();\n      const formGroup_r1 = ctx_r60.$implicit;\n      const i_r2 = ctx_r60.index;\n      const ctx_r59 = i0.ɵɵnextContext();\n      return ctx_r59.fileUpload($event, formGroup_r1, i_r2);\n    });\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(15, \"button\", 67);\n    i0.ɵɵlistener(\"click\", function ElectricityHeatExportActivityDataCreateComponent_ng_container_2_ng_container_96_Template_button_click_15_listener() {\n      i0.ɵɵrestoreView(_r58);\n      const ctx_r62 = i0.ɵɵnextContext();\n      const formGroup_r1 = ctx_r62.$implicit;\n      const i_r2 = ctx_r62.index;\n      const ctx_r61 = i0.ɵɵnextContext();\n      return ctx_r61.deleteConfirmation(formGroup_r1, i_r2);\n    });\n    i0.ɵɵelementStart(16, \"span\", 59);\n    i0.ɵɵtext(17, \" delete \");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementContainerEnd();\n  }\n  if (rf & 2) {\n    const formGroup_r1 = i0.ɵɵnextContext().$implicit;\n    const ctx_r28 = i0.ɵɵnextContext();\n    i0.ɵɵadvance(4);\n    i0.ɵɵproperty(\"ngTemplateOutlet\", ctx_r28.docImg);\n    i0.ɵɵadvance(3);\n    i0.ɵɵpropertyInterpolate(\"href\", formGroup_r1.get(\"docPath\").value, i0.ɵɵsanitizeUrl);\n    i0.ɵɵproperty(\"ngClass\", i0.ɵɵpureFunction1(4, _c1, !formGroup_r1.get(\"docPath\").value));\n    i0.ɵɵadvance(1);\n    i0.ɵɵtextInterpolate1(\" \", formGroup_r1.get(\"docName\").value, \" \");\n  }\n}\nconst _c2 = function (a0) {\n  return {\n    \"fuelSelectErrorFormField\": a0\n  };\n};\nconst _c3 = function (a0, a1) {\n  return {\n    \"text-danger\": a0,\n    \"fuelSelectedLabel\": a1\n  };\n};\nfunction ElectricityHeatExportActivityDataCreateComponent_ng_container_2_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r65 = i0.ɵɵgetCurrentView();\n    i0.ɵɵelementContainerStart(0);\n    i0.ɵɵelementStart(1, \"mat-card\", 3);\n    i0.ɵɵelementContainerStart(2, 4);\n    i0.ɵɵtemplate(3, ElectricityHeatExportActivityDataCreateComponent_ng_container_2_ng_container_3_Template, 6, 1, \"ng-container\", 5);\n    i0.ɵɵelementStart(4, \"div\", 6);\n    i0.ɵɵelementStart(5, \"div\", 7);\n    i0.ɵɵelementStart(6, \"lib-date-input\", 8, 9);\n    i0.ɵɵlistener(\"emitFilter\", function ElectricityHeatExportActivityDataCreateComponent_ng_container_2_Template_lib_date_input_emitFilter_6_listener() {\n      const restoredCtx = i0.ɵɵrestoreView(_r65);\n      const formGroup_r1 = restoredCtx.$implicit;\n      const i_r2 = restoredCtx.index;\n      const ctx_r64 = i0.ɵɵnextContext();\n      return ctx_r64.dateInpChange(formGroup_r1, i_r2);\n    });\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(8, \"div\", 6);\n    i0.ɵɵelementStart(9, \"div\", 7);\n    i0.ɵɵelementStart(10, \"div\", 6);\n    i0.ɵɵelementStart(11, \"div\", 10);\n    i0.ɵɵelementStart(12, \"button\", 11);\n    i0.ɵɵlistener(\"click\", function ElectricityHeatExportActivityDataCreateComponent_ng_container_2_Template_button_click_12_listener() {\n      const restoredCtx = i0.ɵɵrestoreView(_r65);\n      const formGroup_r1 = restoredCtx.$implicit;\n      return formGroup_r1.get(\"customFuelID\").markAsTouched();\n    });\n    i0.ɵɵelementStart(13, \"span\");\n    i0.ɵɵtext(14);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementEnd();\n    i0.ɵɵtemplate(15, ElectricityHeatExportActivityDataCreateComponent_ng_container_2_mat_error_15_Template, 2, 1, \"mat-error\", 12);\n    i0.ɵɵelementStart(16, \"mat-menu\", null, 13);\n    i0.ɵɵelementStart(18, \"button\", 14);\n    i0.ɵɵlistener(\"click\", function ElectricityHeatExportActivityDataCreateComponent_ng_container_2_Template_button_click_18_listener() {\n      i0.ɵɵrestoreView(_r65);\n      const _r8 = i0.ɵɵreference(29);\n      return _r8.open();\n    });\n    i0.ɵɵtext(19, \" Custom fuels \");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(20, \"button\", 14);\n    i0.ɵɵlistener(\"click\", function ElectricityHeatExportActivityDataCreateComponent_ng_container_2_Template_button_click_20_listener() {\n      i0.ɵɵrestoreView(_r65);\n      const _r10 = i0.ɵɵreference(39);\n      return _r10.open();\n    });\n    i0.ɵɵtext(21, \" Standard fuels \");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementEnd();\n    i0.ɵɵelement(22, \"mat-menu\", null, 15);\n    i0.ɵɵelementStart(24, \"div\", 16);\n    i0.ɵɵelementStart(25, \"mat-form-field\", 17);\n    i0.ɵɵelementStart(26, \"mat-label\", 18);\n    i0.ɵɵtext(27, \" Select type of custom fuel consumed \");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(28, \"mat-select\", 19, 20);\n    i0.ɵɵlistener(\"selectionChange\", function ElectricityHeatExportActivityDataCreateComponent_ng_container_2_Template_mat_select_selectionChange_28_listener($event) {\n      const restoredCtx = i0.ɵɵrestoreView(_r65);\n      const formGroup_r1 = restoredCtx.$implicit;\n      const ctx_r69 = i0.ɵɵnextContext();\n      return ctx_r69.fuelSelected(\"CUSTOM\", $event.value, formGroup_r1);\n    });\n    i0.ɵɵelementStart(30, \"mat-option\");\n    i0.ɵɵelement(31, \"ngx-mat-select-search\", 21);\n    i0.ɵɵelementEnd();\n    i0.ɵɵtemplate(32, ElectricityHeatExportActivityDataCreateComponent_ng_container_2_mat_option_32_Template, 2, 3, \"mat-option\", 22);\n    i0.ɵɵpipe(33, \"async\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(34, \"div\", 16);\n    i0.ɵɵelementStart(35, \"mat-form-field\", 17);\n    i0.ɵɵelementStart(36, \"mat-label\", 18);\n    i0.ɵɵtext(37, \" Select type of standard fuel consumed \");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(38, \"mat-select\", 23, 24);\n    i0.ɵɵlistener(\"selectionChange\", function ElectricityHeatExportActivityDataCreateComponent_ng_container_2_Template_mat_select_selectionChange_38_listener($event) {\n      const restoredCtx = i0.ɵɵrestoreView(_r65);\n      const formGroup_r1 = restoredCtx.$implicit;\n      const ctx_r70 = i0.ɵɵnextContext();\n      return ctx_r70.fuelSelected(\"STANDARD\", $event.value, formGroup_r1);\n    });\n    i0.ɵɵelementStart(40, \"mat-option\");\n    i0.ɵɵelement(41, \"ngx-mat-select-search\", 25);\n    i0.ɵɵelementEnd();\n    i0.ɵɵtemplate(42, ElectricityHeatExportActivityDataCreateComponent_ng_container_2_mat_option_42_Template, 2, 3, \"mat-option\", 22);\n    i0.ɵɵpipe(43, \"async\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementEnd();\n    i0.ɵɵtemplate(44, ElectricityHeatExportActivityDataCreateComponent_ng_container_2_ng_container_44_Template, 19, 11, \"ng-container\", 26);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(45, \"div\", 6);\n    i0.ɵɵelementStart(46, \"div\", 10);\n    i0.ɵɵelementStart(47, \"mat-form-field\", 27);\n    i0.ɵɵelementStart(48, \"mat-label\", 18);\n    i0.ɵɵtext(49, \"Net calorific value(NCV)\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelement(50, \"input\", 28);\n    i0.ɵɵtemplate(51, ElectricityHeatExportActivityDataCreateComponent_ng_container_2_mat_error_51_Template, 2, 1, \"mat-error\", 5);\n    i0.ɵɵtemplate(52, ElectricityHeatExportActivityDataCreateComponent_ng_container_2_mat_error_52_Template, 2, 1, \"mat-error\", 5);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(53, \"div\", 10);\n    i0.ɵɵelementStart(54, \"mat-form-field\", 27);\n    i0.ɵɵelementStart(55, \"mat-label\", 18);\n    i0.ɵɵtext(56, \"Select Numerator\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(57, \"mat-select\", 29);\n    i0.ɵɵelementStart(58, \"mat-option\");\n    i0.ɵɵelement(59, \"ngx-mat-select-search\", 30);\n    i0.ɵɵelementEnd();\n    i0.ɵɵtemplate(60, ElectricityHeatExportActivityDataCreateComponent_ng_container_2_mat_option_60_Template, 2, 3, \"mat-option\", 31);\n    i0.ɵɵpipe(61, \"async\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵtemplate(62, ElectricityHeatExportActivityDataCreateComponent_ng_container_2_mat_error_62_Template, 2, 1, \"mat-error\", 5);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(63, \"div\", 10);\n    i0.ɵɵelementStart(64, \"mat-form-field\", 27);\n    i0.ɵɵelementStart(65, \"mat-label\", 18);\n    i0.ɵɵtext(66, \"Select Denominator\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(67, \"mat-select\", 32);\n    i0.ɵɵelementStart(68, \"mat-option\");\n    i0.ɵɵelement(69, \"ngx-mat-select-search\", 30);\n    i0.ɵɵelementEnd();\n    i0.ɵɵtemplate(70, ElectricityHeatExportActivityDataCreateComponent_ng_container_2_mat_option_70_Template, 2, 3, \"mat-option\", 31);\n    i0.ɵɵpipe(71, \"async\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵtemplate(72, ElectricityHeatExportActivityDataCreateComponent_ng_container_2_mat_error_72_Template, 2, 1, \"mat-error\", 5);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(73, \"div\", 6);\n    i0.ɵɵelementStart(74, \"div\", 10);\n    i0.ɵɵelementStart(75, \"mat-form-field\", 27);\n    i0.ɵɵelementStart(76, \"mat-label\", 18);\n    i0.ɵɵtext(77, \"Oxidation factor \");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelement(78, \"input\", 33);\n    i0.ɵɵtemplate(79, ElectricityHeatExportActivityDataCreateComponent_ng_container_2_mat_error_79_Template, 2, 1, \"mat-error\", 5);\n    i0.ɵɵtemplate(80, ElectricityHeatExportActivityDataCreateComponent_ng_container_2_mat_error_80_Template, 2, 0, \"mat-error\", 5);\n    i0.ɵɵtemplate(81, ElectricityHeatExportActivityDataCreateComponent_ng_container_2_mat_error_81_Template, 2, 1, \"mat-error\", 5);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(82, \"div\", 10);\n    i0.ɵɵelementStart(83, \"mat-form-field\", 27);\n    i0.ɵɵelementStart(84, \"mat-label\", 18);\n    i0.ɵɵtext(85, \"Biomass Used\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelement(86, \"input\", 34);\n    i0.ɵɵelementStart(87, \"span\", 35);\n    i0.ɵɵtext(88, \"%\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵtemplate(89, ElectricityHeatExportActivityDataCreateComponent_ng_container_2_mat_error_89_Template, 2, 1, \"mat-error\", 5);\n    i0.ɵɵtemplate(90, ElectricityHeatExportActivityDataCreateComponent_ng_container_2_mat_error_90_Template, 2, 0, \"mat-error\", 5);\n    i0.ɵɵtemplate(91, ElectricityHeatExportActivityDataCreateComponent_ng_container_2_mat_error_91_Template, 2, 1, \"mat-error\", 5);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(92, \"div\", 6);\n    i0.ɵɵtemplate(93, ElectricityHeatExportActivityDataCreateComponent_ng_container_2_ng_template_93_Template, 24, 12, \"ng-template\", null, 36, i0.ɵɵtemplateRefExtractor);\n    i0.ɵɵelementEnd();\n    i0.ɵɵtemplate(95, ElectricityHeatExportActivityDataCreateComponent_ng_container_2_ng_container_95_Template, 19, 6, \"ng-container\", 5);\n    i0.ɵɵtemplate(96, ElectricityHeatExportActivityDataCreateComponent_ng_container_2_ng_container_96_Template, 18, 6, \"ng-container\", 5);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementContainerEnd();\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementContainerEnd();\n  }\n  if (rf & 2) {\n    const formGroup_r1 = ctx.$implicit;\n    const i_r2 = ctx.index;\n    const _r6 = i0.ɵɵreference(17);\n    const _r7 = i0.ɵɵreference(23);\n    const _r25 = i0.ɵɵreference(94);\n    const ctx_r0 = i0.ɵɵnextContext();\n    i0.ɵɵadvance(2);\n    i0.ɵɵproperty(\"formGroupName\", i_r2);\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngIf\", ctx_r0.isSourceAvailable);\n    i0.ɵɵadvance(3);\n    i0.ɵɵproperty(\"materialFieldWidthInp\", true)(\"materialFormFieldAppearanceInp\", ctx_r0.MaterialFormFieldAppearance.FORM_FIELD_APPEARANCE)(\"isMandatoryFieldInp\", true)(\"dateInputTypeInp\", ctx_r0.DateInputTypeEnum.CUSTOM_INPUT)(\"cdrFormatInp\", ctx_r0.DateFormatEnum.DD_MMM_YYYY)(\"labelInp\", \"Accounting Period\");\n    i0.ɵɵadvance(6);\n    i0.ɵɵclassMap(i0.ɵɵpureFunction1(54, _c2, ctx_r0.getFuelRequiredError(formGroup_r1)));\n    i0.ɵɵproperty(\"matMenuTriggerFor\", _r6);\n    i0.ɵɵadvance(1);\n    i0.ɵɵclassMap(i0.ɵɵpureFunction2(56, _c3, ctx_r0.getFuelRequiredError(formGroup_r1), formGroup_r1.get(\"fuelName\").value));\n    i0.ɵɵadvance(1);\n    i0.ɵɵtextInterpolate1(\" \", formGroup_r1.get(\"fuelName\").value || \"Select fuel\", \" \");\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngIf\", ctx_r0.getFuelRequiredError(formGroup_r1));\n    i0.ɵɵadvance(3);\n    i0.ɵɵproperty(\"matMenuTriggerFor\", _r7);\n    i0.ɵɵadvance(2);\n    i0.ɵɵproperty(\"matMenuTriggerFor\", _r7);\n    i0.ɵɵadvance(5);\n    i0.ɵɵproperty(\"appearance\", ctx_r0.MaterialFormFieldAppearance.FORM_FIELD_APPEARANCE);\n    i0.ɵɵadvance(6);\n    i0.ɵɵproperty(\"formControl\", ctx_r0.customFuelSearchUtil.filterFC);\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngForOf\", i0.ɵɵpipeBind1(33, 46, ctx_r0.customFuelSearchUtil.filteredEntities));\n    i0.ɵɵadvance(3);\n    i0.ɵɵproperty(\"appearance\", ctx_r0.MaterialFormFieldAppearance.FORM_FIELD_APPEARANCE);\n    i0.ɵɵadvance(6);\n    i0.ɵɵproperty(\"formControl\", ctx_r0.fuelTypeSearchUtil.filterFC);\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngForOf\", i0.ɵɵpipeBind1(43, 48, ctx_r0.fuelTypeSearchUtil.filteredEntities));\n    i0.ɵɵadvance(2);\n    i0.ɵɵproperty(\"ngIf\", !ctx_r0.isMeterReading)(\"ngIfElse\", _r25);\n    i0.ɵɵadvance(3);\n    i0.ɵɵproperty(\"appearance\", ctx_r0.MaterialFormFieldAppearance.FORM_FIELD_APPEARANCE);\n    i0.ɵɵadvance(4);\n    i0.ɵɵproperty(\"ngIf\", ctx_r0.errorHandlingFA(formGroup_r1, \"netCalorificValue\", \"min\"));\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngIf\", ctx_r0.errorHandlingFA(formGroup_r1, \"netCalorificValue\", \"required\"));\n    i0.ɵɵadvance(2);\n    i0.ɵɵproperty(\"appearance\", ctx_r0.MaterialFormFieldAppearance.FORM_FIELD_APPEARANCE);\n    i0.ɵɵadvance(5);\n    i0.ɵɵproperty(\"formControl\", ctx_r0.ncvNumeratorSearchUtil.filterFC);\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngForOf\", i0.ɵɵpipeBind1(61, 50, ctx_r0.ncvNumeratorSearchUtil.filteredEntities));\n    i0.ɵɵadvance(2);\n    i0.ɵɵproperty(\"ngIf\", ctx_r0.errorHandlingFA(formGroup_r1, \"ncvNumeratorUnitID\", \"required\"));\n    i0.ɵɵadvance(2);\n    i0.ɵɵproperty(\"appearance\", ctx_r0.MaterialFormFieldAppearance.FORM_FIELD_APPEARANCE);\n    i0.ɵɵadvance(5);\n    i0.ɵɵproperty(\"formControl\", ctx_r0.ncvDenominatorSearchUtil.filterFC);\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngForOf\", i0.ɵɵpipeBind1(71, 52, ctx_r0.ncvDenominatorSearchUtil.filteredEntities));\n    i0.ɵɵadvance(2);\n    i0.ɵɵproperty(\"ngIf\", ctx_r0.errorHandlingFA(formGroup_r1, \"ncvDenominatorUnitID\", \"required\"));\n    i0.ɵɵadvance(3);\n    i0.ɵɵproperty(\"appearance\", ctx_r0.MaterialFormFieldAppearance.FORM_FIELD_APPEARANCE);\n    i0.ɵɵadvance(4);\n    i0.ɵɵproperty(\"ngIf\", ctx_r0.errorHandlingFA(formGroup_r1, \"oxidationFactor\", \"min\"));\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngIf\", ctx_r0.errorHandlingFA(formGroup_r1, \"oxidationFactor\", \"max\"));\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngIf\", ctx_r0.errorHandlingFA(formGroup_r1, \"oxidationFactor\", \"required\"));\n    i0.ɵɵadvance(2);\n    i0.ɵɵproperty(\"appearance\", ctx_r0.MaterialFormFieldAppearance.FORM_FIELD_APPEARANCE);\n    i0.ɵɵadvance(6);\n    i0.ɵɵproperty(\"ngIf\", ctx_r0.errorHandlingFA(formGroup_r1, \"biomassPct\", \"min\"));\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngIf\", ctx_r0.errorHandlingFA(formGroup_r1, \"biomassPct\", \"max\"));\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngIf\", ctx_r0.errorHandlingFA(formGroup_r1, \"biomassPct\", \"required\"));\n    i0.ɵɵadvance(4);\n    i0.ɵɵproperty(\"ngIf\", formGroup_r1.get(\"docPath\").value == null);\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngIf\", formGroup_r1.get(\"docPath\").value != null);\n  }\n}\nexport let ElectricityHeatExportActivityDataCreateComponent = /*#__PURE__*/(() => {\n  class ElectricityHeatExportActivityDataCreateComponent {\n    constructor(dialog, carbonDocumentController, formBuilder, fuelService, customFuelService, unitService, dateService, toastrService, tscCommonService, dataCollectionMethodService, storageService, activatedRoute) {\n      this.dialog = dialog;\n      this.carbonDocumentController = carbonDocumentController;\n      this.formBuilder = formBuilder;\n      this.fuelService = fuelService;\n      this.customFuelService = customFuelService;\n      this.unitService = unitService;\n      this.dateService = dateService;\n      this.toastrService = toastrService;\n      this.tscCommonService = tscCommonService;\n      this.dataCollectionMethodService = dataCollectionMethodService;\n      this.FormErrorEnum = FormErrorEnum;\n      this.DateFormatEnum = DateFormatEnum;\n      this.DateInputTypeEnum = DateInputTypeEnum;\n      this.ActivityKeyIDEnum = ActivityKeyIDEnum;\n      this.DataInputMethodKeyIDEnum = DataInputMethodKeyIDEnum;\n      this.MaterialFormFieldAppearance = MaterialFormFieldAppearance;\n      this.docFileList = new Array(1).fill(null);\n      this.action = null;\n      this.isUpdate = false;\n      this.isMeterReading = false;\n      this.isSourceAvailable = false;\n      this.isEqual = false;\n      this.initialObject = null;\n      this.billFile = null;\n      this.noBillFileAvailable = true;\n      this.fuelTypeSearchUtil = new MatSelectSearchService(['name']);\n      this.energyUnitSearchUtil = new MatSelectSearchService(['name']);\n      this.customFuelSearchUtil = new MatSelectSearchService(['name']);\n      this.ncvNumeratorSearchUtil = new MatSelectSearchService(['name']);\n      this.ncvDenominatorSearchUtil = new MatSelectSearchService(['name']);\n      this.energyExportedUnitSearchUtil = new MatSelectSearchService(['name']);\n      this.validity = new EventEmitter();\n      this.excluded_controls = ['sourceID', 'sourceName', 'sourceTypeID', 'activityID', 'activityKeyID', 'fuelName', 'dateRange', 'dataCollectionMethodID', 'meterUnitID'];\n      this.validFields = ['activityID', 'activityKeyID', 'dataCollectionMethodID', 'startDate', 'endDate', 'customFuelID', 'standardFuelID', 'fuelName', 'netCalorificValue', 'ncvNumeratorUnitID', 'ncvDenominatorUnitID', 'oxidationFactor', 'biomassPct', 'energyExported', 'energyExportedUnitID'];\n      this.config_available = false;\n      this.got_necessary_data = false;\n      this.errorHandlingFA = (formGroup, control, error) => {\n        return formGroup.get(control).hasError(error);\n      };\n      this.currentOrgID = storageService.getStorage('currentOrgID');\n      activatedRoute.queryParams.subscribe(qParams => {\n        this.action = qParams['action'];\n        this.isUpdate = this.action == 'update';\n        this.activityID = Number(qParams['activityID']);\n      });\n      this.activityKeyID = activatedRoute.snapshot.data.activityKeyID;\n    }\n    ngOnInit() {\n      this.formInit();\n      if (!this.got_necessary_data) {\n        this.getNecessaryData();\n      }\n      this.getDataCollectionMethod();\n      if (this.isUpdate) {\n        this.getActivityData();\n      }\n    }\n    ngAfterViewInit() {\n      this.fileInputLoadSub = this.fileInput.changes.subscribe(() => this.updateFileInputArray());\n      this.updateFileInputArray();\n    }\n    updateFileInputArray() {\n      if (this.fileInput && this.fileInput.length > 0) {\n        this.fileInputArr = this.fileInput.toArray();\n      }\n    }\n    patchActivityData() {\n      let formGroup = this.dataFG;\n      this.activityDataFA.push(formGroup);\n      const activity_data = this.mapDataToPatch(this.activityData);\n      const source = activity_data.source;\n      const sourceType = activity_data.sourceType;\n      const ncvNumeratorUnit = activity_data.ncvNumeratorUnit;\n      const ncvDenominatorUnit = activity_data.ncvDenominatorUnit;\n      const dataCollectionMethodStd = activity_data.dataCollectionMethodStd;\n      const energyExportedUnit = activity_data.energyExportedUnit;\n      const customFuel = activity_data.customFuel;\n      const standardFuel = activity_data.standardFuel;\n      formGroup.patchValue({\n        activityDataID: activity_data.id,\n        dataCollectionMethodID: dataCollectionMethodStd.id,\n        sourceID: this.isSourceAvailable ? source.id : null,\n        sourceName: this.isSourceAvailable ? source.name : null,\n        sourceTypeID: this.isSourceAvailable ? sourceType.id : null,\n        startDate: activity_data.startDate,\n        customFuelID: customFuel != null ? customFuel.id : null,\n        standardFuelID: standardFuel != null ? standardFuel.id : null,\n        netCalorificValue: activity_data.netCalorificValue,\n        ncvNumeratorUnitID: ncvNumeratorUnit.unitID,\n        ncvDenominatorUnitID: ncvDenominatorUnit.unitID,\n        oxidationFactor: activity_data.oxidationFactor,\n        biomassPct: activity_data.biomassPct,\n        energyExported: activity_data.energyExported,\n        energyExportedUnitID: energyExportedUnit.unitID\n      });\n      const dataInputMethod = this.activityConfig.activityConfigData.dataInputMethod;\n      if (dataInputMethod.keyID == DataInputMethodKeyIDEnum.METER_READING) {\n        formGroup.patchValue({\n          openingMeterReading: activity_data.openingMeterReading,\n          closingMeterReading: activity_data.closingMeterReading,\n          meterUnitID: activity_data.meterUnit.unitID\n        });\n        formGroup.get('meterUnitID').disable();\n      }\n      if (activity_data.file != null) {\n        formGroup.patchValue({\n          docID: activity_data.file.id,\n          docName: activity_data.file.name,\n          docPath: activity_data.file.path\n        });\n      }\n      if (this.activityData.sourceName != null) {\n        // this.sourceName = this.activityData.sourceName;\n        // this.isSource = true;\n      }\n      // this.updateValidators();\n      this.activityDataFA.valueChanges.subscribe(() => this.isEqual = isEqual(this.initialObject, this.activityDataFA.value));\n      this.initialObject = this.activityDataFA.value;\n      this.isEqual = true;\n    }\n    patchDate() {\n      const customDateInputInstance = this.customDateInputs.toArray()[0];\n      if (customDateInputInstance) {\n        customDateInputInstance.daterange.patchValue({\n          startDate: moment(this.activityData['startDate']),\n          endDate: moment(this.activityData['endDate'])\n        });\n      }\n    }\n    patchFuel() {\n      const isStandard = this.activityData.standardFuel != null ? true : false;\n      this.fuelSelected(isStandard ? 'STANDARD' : 'CUSTOM', isStandard ? this.activityData.standardFuel.id : this.activityData.customFuel.id, this.activityDataFA.get('0'), true);\n    }\n    formInit() {\n      this.activityDataFG = this.formBuilder.group({\n        activityData: this.formBuilder.array([])\n      });\n    }\n    ngOnChanges(changes) {\n      if (changes.activityDataFG.firstChange) {\n        // this.formDataInit();\n      }\n      if (changes === null || changes === void 0 ? void 0 : changes.defaultDataCollectionMethodID) {\n        if (this.defaultDataCollectionMethodID != undefined || this.defaultDataCollectionMethodID != null) {\n          this.setDataCollectionMethod();\n        }\n      }\n      if (changes.activityConfig) {\n        if (this.activityConfig != undefined && this.activityConfig != null) {\n          if (this.action == 'create') {\n            // this.addActivityDataFG();\n          }\n        }\n      }\n    }\n    addActivityDataFG(formGroup) {\n      let sources = this.activityConfig.activityConfigSource[0].source;\n      sources.forEach(source => {\n        formGroup.get('sourceID').patchValue(source.id);\n        formGroup.get('sourceName').patchValue(source.name);\n        formGroup.get('sourceTypeID').patchValue(this.activityConfig.activityConfigSource[0].sourceTypeID);\n      });\n    }\n    setDataCollectionMethod() {\n      this.activityDataFA.controls.forEach(group => {\n        group.get('dataCollectionMethodID').patchValue(this.defaultDataCollectionMethodID);\n      });\n    }\n    get dataFG() {\n      return this.formBuilder.group({\n        activityID: [this.activityID, [Validators.required]],\n        activityKeyID: [this.activityKeyID, [Validators.required]],\n        activityDataID: [, this.isUpdate ? [Validators.required] : null],\n        sourceTypeID: [, this.isSourceAvailable ? [Validators.required] : null],\n        sourceID: [, this.isSourceAvailable ? [Validators.required] : null],\n        sourceName: [],\n        dataCollectionMethodID: [this.defaultDataCollectionMethodID, [Validators.required]],\n        startDate: [, [Validators.required]],\n        endDate: [, [Validators.required]],\n        customFuelID: [, [Validators.required]],\n        standardFuelID: [, [Validators.required]],\n        fuelName: [, [Validators.required]],\n        energyExported: [, !this.isMeterReading ? [Validators.required, Validators.min(0)] : null],\n        energyExportedUnitID: [, !this.isMeterReading ? [Validators.required] : null],\n        openingMeterReading: [, this.isMeterReading ? [Validators.required, Validators.min(0)] : null],\n        closingMeterReading: [, this.isMeterReading ? [Validators.required, Validators.min(0)] : null],\n        meterUnitID: [, this.isMeterReading ? [Validators.required] : null],\n        netCalorificValue: [, [Validators.required, Validators.min(0)]],\n        ncvNumeratorUnitID: [, [Validators.required]],\n        ncvDenominatorUnitID: [, [Validators.required]],\n        oxidationFactor: [CARBON_CONSTANT.DEFAULT_OXIDATION_FACTOR, [Validators.required, Validators.min(0), Validators.max(1)]],\n        biomassPct: [CARBON_CONSTANT.DEFAULT_BIOMASS_PCT, [Validators.required, Validators.min(0), Validators.max(100)]],\n        docID: [],\n        docType: [],\n        docName: [],\n        docSize: [],\n        docPath: []\n      });\n    }\n    get activityDataFA() {\n      return this.activityDataFG.get('activityData');\n    }\n    getFuelRequiredError(formGroup) {\n      if (formGroup.get('customFuelID').invalid && formGroup.get('standardFuelID').invalid && formGroup.get('customFuelID').touched) return true;\n      return false;\n    }\n    haveValue(formGroup) {\n      for (let control in formGroup.controls) {\n        if (!this.excluded_controls.includes(control)) {\n          let value = formGroup.get(control).value;\n          if (control == 'oxidationFactor' || control == 'biomassPct') {\n            if (control == 'oxidationFactor' && value !== CARBON_CONSTANT.DEFAULT_OXIDATION_FACTOR) {\n              return true;\n            }\n            if (control == 'biomassPct' && value !== CARBON_CONSTANT.DEFAULT_BIOMASS_PCT) {\n              return true;\n            }\n          } else if (value !== null && value !== void 0 ? value : false) {\n            return true;\n          }\n        }\n      }\n      return false;\n    }\n    addValidationToGroup(formGroup) {\n      for (let control of this.validFields) {\n        formGroup.get(control).addValidators([Validators.required]);\n        formGroup.get(control).updateValueAndValidity({\n          emitEvent: false\n        });\n      }\n    }\n    removeValidationFromGroup(formGroup) {\n      for (let control in formGroup.controls) {\n        formGroup.get(control).removeValidators([Validators.required]);\n        formGroup.get(control).updateValueAndValidity({\n          emitEvent: false\n        });\n      }\n    }\n    getConfiguration(configuration) {\n      return __awaiter(this, void 0, void 0, function* () {\n        if (configuration != null) {\n          this.config_available = true;\n          this.activityConfig = configuration;\n          const activityConfigData = configuration.activityConfigData;\n          this.dataInputMethoutKeyID = activityConfigData.dataInputMethod.keyID;\n          this.isMeterReading = this.dataInputMethoutKeyID == DataInputMethodKeyIDEnum.METER_READING;\n          this.docFileList = new Array(1).fill(null);\n          if (!this.isUpdate) {\n            const activityConfigSource = configuration.activityConfigSource;\n            if (activityConfigSource.length > 0) {\n              this.isSourceAvailable = true;\n              this.docFileList = new Array(activityConfigSource[0].source.length).fill(null);\n            }\n            let formGroup = this.dataFG;\n            if (this.isSourceAvailable) {\n              this.addActivityDataFG(formGroup);\n            }\n            if (this.isMeterReading) {\n              const meterRollover = activityConfigData.meterRollover;\n              formGroup.get('meterUnitID').patchValue(meterRollover.unit.unitID);\n              formGroup.get('meterUnitID').disable();\n            }\n            this.activityDataFA.push(formGroup);\n          } else {\n            this.activityData = this.activityConfig.activityData;\n            this.isSourceAvailable = this.activityData.source != null;\n            this.patchActivityData();\n            this.dateInputSub = this.customDateInputs.changes.subscribe(list => {\n              if (list.length > 0) {\n                this.patchDate();\n                this.dateInputSub.unsubscribe();\n              }\n            });\n          }\n        }\n      });\n    }\n    getDataCollectionMethod() {\n      return __awaiter(this, void 0, void 0, function* () {\n        let dataCollectionMethods = yield this.dataCollectionMethodService.getDataCollectionMethod();\n        let manual_entry = this.tscCommonService.getUniqueObject(dataCollectionMethods, 'keyID', DataCollectionMethodKeyIDEnum.MANUAL_ENTRY);\n        this.defaultDataCollectionMethodID = manual_entry.dataCollectionMethodID;\n      });\n    }\n    getFuelHhv(fuelID, formGroup) {\n      return __awaiter(this, void 0, void 0, function* () {\n        let ncv = yield this.fuelService.getFuelHhv(this.currentOrgID, fuelID);\n        if (ncv.value != null) {\n          formGroup.patchValue({\n            netCalorificValue: ncv.value,\n            ncvNumeratorUnitID: ncv.numeratorUnit.id,\n            ncvDenominatorUnitID: ncv.denominatorUnit.id,\n            oxidationFactor: CARBON_CONSTANT.DEFAULT_OXIDATION_FACTOR,\n            biomassPct: CARBON_CONSTANT.DEFAULT_BIOMASS_PCT\n          });\n        }\n      });\n    }\n    getCustomFuelByID(fuelID, formGroup) {\n      return __awaiter(this, void 0, void 0, function* () {\n        let fuel = yield this.customFuelService.getCustomFuelByID(this.currentOrgID, fuelID);\n        if (fuel != null) {\n          formGroup.patchValue({\n            netCalorificValue: fuel.netCalorificValue,\n            ncvNumeratorUnitID: fuel.ncvNumeratorUnitID,\n            ncvDenominatorUnitID: fuel.ncvDenominatorUnitID,\n            oxidationFactor: fuel.oxidationFactor,\n            biomassPct: fuel.biomassPct\n          });\n        }\n      });\n    }\n    getNecessaryData() {\n      return __awaiter(this, void 0, void 0, function* () {\n        this.customFuelList = yield this.customFuelService.getCustomFuelList(this.currentOrgID);\n        this.customFuelSearchUtil.entityArr = this.customFuelList;\n        this.customFuelSearchUtil.createSubscription();\n        forkJoin([this.fuelService.getFuelByActivityKeyID(ActivityKeyIDEnum.STATIONARY_COMBUSTION),\n        // this.customFuelService.getCustomFuelList(this.currentOrgID),\n        this.unitService.getUnit([])]).subscribe(([fuel, /* customFuel, */units]) => {\n          this.fuelList = fuel;\n          // this.customFuelList = <any[]>customFuel;\n          const unitM = units;\n          const energyUnitM = this.unitService.filterUnit(unitM, [UnitTypeKeyID.ENERGY]);\n          const volumeAndMassUnits = this.unitService.filterUnit(unitM, [UnitTypeKeyID.MASS, UnitTypeKeyID.VOLUME]);\n          this.energyUnitSearchUtil.entityArr = energyUnitM;\n          this.energyUnitSearchUtil.createSubscription();\n          this.energyExportedUnitSearchUtil.entityArr = energyUnitM;\n          this.energyExportedUnitSearchUtil.createSubscription();\n          this.ncvNumeratorSearchUtil.entityArr = energyUnitM;\n          this.ncvNumeratorSearchUtil.createSubscription();\n          this.fuelTypeSearchUtil.entityArr = this.fuelList;\n          this.fuelTypeSearchUtil.createSubscription();\n          // this.customFuelSearchUtil.entityArr = this.customFuelList;\n          // this.customFuelSearchUtil.createSubscription();\n          this.ncvDenominatorSearchUtil.entityArr = volumeAndMassUnits;\n          this.ncvDenominatorSearchUtil.createSubscription();\n          this.got_necessary_data = true;\n          if (this.isUpdate) {\n            this.patchFuel();\n          }\n        }, error => {\n          console.error('error in formInitialization -', error);\n        });\n      });\n    }\n    dateInpChange(formGroup, index) {\n      if (this.customDateInputs) {\n        const customDateInputInstance = this.customDateInputs.toArray()[index];\n        const startDate = customDateInputInstance.startDateFC.value;\n        const endDate = customDateInputInstance.endDateFC.value;\n        if (startDate) {\n          const formatted_startDate = this.dateService.formatDate(startDate, DateFormatEnum.YYYY_MM_DD);\n          formGroup.get('startDate').patchValue(formatted_startDate);\n        }\n        if (endDate) {\n          const formatted_endDate = this.dateService.formatDate(endDate, DateFormatEnum.YYYY_MM_DD);\n          formGroup.get('endDate').patchValue(formatted_endDate);\n        }\n      }\n    }\n    fuelSelected(fuelType, fuelID, formGroup, isPatch = false) {\n      let selected_fuel;\n      let reset_field;\n      if (fuelType == 'STANDARD') {\n        reset_field = 'customFuelID';\n        selected_fuel = this.fuelList.find(fuel => fuel.id == fuelID);\n        if (!isPatch) {\n          this.getFuelHhv(fuelID, formGroup);\n        }\n      } else {\n        reset_field = 'standardFuelID';\n        selected_fuel = this.customFuelList.find(fuel => fuel.id == fuelID);\n        if (!isPatch) {\n          this.getCustomFuelByID(fuelID, formGroup);\n        }\n      }\n      formGroup.get('fuelName').patchValue(selected_fuel.name);\n      formGroup.get(reset_field).reset(null);\n      formGroup.get(reset_field).removeValidators([Validators.required]);\n      formGroup.get(reset_field).updateValueAndValidity();\n    }\n    fileUpload(event, formGroup, index) {\n      let file = event.target.files[0];\n      if (file) {\n        if (file.type !== 'application/pdf') {\n          this.toastrService.error(NocFileUploadEnum.INVALID_FILE_TYPE_ERROR);\n          return;\n        }\n        if (file.size > NocFileUploadEnum.MAX_FILE_SIZE) {\n          this.toastrService.error(NocFileUploadEnum.INVAID_FILE_SIZE_ERROR);\n          return;\n        }\n        let reader = new FileReader();\n        reader.readAsDataURL(file);\n        reader.onload = e => {};\n        this.billFile = file;\n        this.billFileName = file['name'];\n        formGroup.get('docName').patchValue(file['name']);\n        formGroup.get('docSize').patchValue(this.getFileSizeWithUnit(file['size']));\n        this.docFileList[index] = file;\n        if (this.action == 'update') {\n          this.fileCreateUpdate(formGroup);\n        }\n      } else {\n        this.toastrService.error('Please upload a file!');\n        return;\n      }\n    }\n    getFileSizeWithUnit(billFileSize) {\n      const fileSizeInKB = Math.round(billFileSize / 1024);\n      const fileSizeInMB = Math.round(fileSizeInKB / 1024);\n      const fileSizeInGB = Math.round(fileSizeInMB / 1024);\n      if (fileSizeInGB > 1) {\n        return fileSizeInGB + ' GB';\n      } else if (fileSizeInMB > 1) {\n        return fileSizeInMB + ' MB';\n      } else {\n        return fileSizeInKB + ' KB';\n      }\n    }\n    removeFile(formGroup, index) {\n      if (this.action == 'create') {\n        this.fileInputArr[index].nativeElement.value = null;\n      }\n      this.billFile = null;\n      this.billFileName = '';\n      formGroup.get('docName').reset();\n      formGroup.get('docSize').reset();\n      formGroup.get('docPath').reset(null);\n      formGroup.get('docID').reset();\n      this.docFileList[index] = this.billFile;\n    }\n    toFormData() {\n      const formData = new FormData();\n      formData.append('payload', this.billFile);\n      return formData;\n    }\n    fileCreateUpdate(formGroup) {\n      if (formGroup.get('docID').value == null) {\n        this.carbonDocumentController.createDocument(this.currentOrgID, formGroup.get('activityDataID').value, this.activityKeyID, this.toFormData()).subscribe(response => {\n          this.file = response['response'];\n          this.updateFileFormControl(formGroup);\n        }, error => {\n          console.log(\"error in fileCreate -\", error);\n        });\n      } else {\n        this.carbonDocumentController.updateDocument(this.currentOrgID, formGroup.get('docID').value, this.toFormData()).subscribe(response => {\n          this.file = response['response'];\n          this.updateFileFormControl(formGroup);\n        }, error => {\n          console.log(\"error in fileUpdate -\", error);\n        });\n      }\n    }\n    updateFileFormControl(formGroup) {\n      formGroup.get('docID').patchValue(this.file.id);\n      formGroup.get('docName').patchValue(this.file.name);\n      formGroup.get('docPath').patchValue(this.file.path);\n    }\n    deleteConfirmation(formGroup, index) {\n      const dialogRef = this.dialog.open(TypeConfirmationDialog, {\n        minWidth: '650px',\n        maxWidth: '600px',\n        data: {\n          icon: 'delete',\n          header: 'Are you sure you want to delete ?',\n          body: '<p class = \"ps-1\"><strong class=\"pe-1\"> Note:</strong>This file will be deleted permanently and you won`t be able to track it`s progress.</p><span class=\"fw-bold ps-1\">Are you sure you want to delete?</span>',\n          confirmationInput: 'DELETE',\n          buttonOne: 'Cancel',\n          buttonTwo: 'Delete'\n        }\n      });\n      dialogRef.afterClosed().subscribe(result => {\n        if (result) {\n          this.deleteDocument(formGroup.get('docID').value, formGroup, index);\n        } else {\n          dialogRef.close();\n        }\n      });\n    }\n    deleteDocument(docID, formGroup, index) {\n      this.carbonDocumentController.deleteDocument(this.currentOrgID, docID).subscribe(res => {\n        this.removeFile(formGroup, index);\n      }, error => {\n        console.log(\"error in deleteDocument -\", error);\n      });\n    }\n    isValidForm() {\n      // let isAnyRowFilled: boolean = this.isAnyRowFilled();\n      // if (!isAnyRowFilled) {\n      //     this.toastrService.error('Fill atleast one data row!');\n      //     return false;\n      // }\n      if (this.activityDataFG.invalid) {\n        this.customDateInputs.toArray()[0].daterange.markAsTouched();\n        this.activityDataFG.markAllAsTouched();\n        console.error('invalid form -', this.activityDataFG);\n        return false;\n      }\n      this.activityData = {};\n      this.activityData = JSON.parse(JSON.stringify(this.mapDataAccordingToActivity()));\n      return true;\n    }\n    mapDataAccordingToActivity() {\n      let dataArr = [];\n      let activityData = this.activityDataFG.getRawValue().activityData;\n      activityData.forEach(data => {\n        dataArr.push(this.mapData(data, this.activityKeyID));\n      });\n      return dataArr;\n    }\n    mapData(oldData, activityKeyID) {\n      const {\n          energyExported,\n          energyExportedUnitID\n        } = oldData,\n        rest = __rest(oldData, [\"energyExported\", \"energyExportedUnitID\"]); // Destructure the properties that need to be renamed\n      if (activityKeyID == ActivityKeyIDEnum.PROCESS_ELECTRICITY_EXPORT) {\n        return Object.assign({\n          electricityExported: energyExported,\n          electricityExportedUnitID: energyExportedUnitID\n        }, rest);\n      } else {\n        return Object.assign({\n          heatExported: energyExported,\n          heatExportedUnitID: energyExportedUnitID\n        }, rest);\n      }\n    }\n    mapDataToPatch(oldData) {\n      if (this.activityKeyID == ActivityKeyIDEnum.PROCESS_ELECTRICITY_EXPORT) {\n        let {\n            electricityExported,\n            electricityExportedUnit\n          } = oldData,\n          rest = __rest(oldData, [\"electricityExported\", \"electricityExportedUnit\"]); // Destructure the properties that need to be renamed\n        return Object.assign({\n          energyExported: electricityExported,\n          energyExportedUnit: electricityExportedUnit\n        }, rest);\n      } else {\n        let {\n            heatExported,\n            heatExportedUnit\n          } = oldData,\n          rest = __rest(oldData, [\"heatExported\", \"heatExportedUnit\"]); // Destructure the properties that need to be renamed\n        return Object.assign({\n          energyExported: heatExported,\n          energyExportedUnit: heatExportedUnit\n        }, rest);\n      }\n    }\n    activityDataValidity() {\n      this.activityDataFG.valueChanges.subscribe(() => this.validity.emit(!this.activityDataFG.invalid));\n    }\n    getActivityData() {\n      return {\n        'activityData': this.mapDataAccordingToActivity(),\n        'activityDataFile': this.docFileList\n      };\n    }\n    updateActivityData() {\n      console.log('this.activityData[0]  - ', this.activityData[0]);\n      return this.activityData[0];\n    }\n  }\n  ElectricityHeatExportActivityDataCreateComponent.ɵfac = function ElectricityHeatExportActivityDataCreateComponent_Factory(t) {\n    return new (t || ElectricityHeatExportActivityDataCreateComponent)(i0.ɵɵdirectiveInject(i1.MatDialog), i0.ɵɵdirectiveInject(i2.CarbonDocumentController), i0.ɵɵdirectiveInject(i3.FormBuilder), i0.ɵɵdirectiveInject(i4.FuelService), i0.ɵɵdirectiveInject(i5.CustomFuelService), i0.ɵɵdirectiveInject(i6.UnitService), i0.ɵɵdirectiveInject(i7.DateService), i0.ɵɵdirectiveInject(i8.ToastrService), i0.ɵɵdirectiveInject(i9.TSCCommonService), i0.ɵɵdirectiveInject(i10.DataCollectionMethodService), i0.ɵɵdirectiveInject(i11.StorageService), i0.ɵɵdirectiveInject(i12.ActivatedRoute));\n  };\n  ElectricityHeatExportActivityDataCreateComponent.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n    type: ElectricityHeatExportActivityDataCreateComponent,\n    selectors: [[\"app-create\"]],\n    viewQuery: function ElectricityHeatExportActivityDataCreateComponent_Query(rf, ctx) {\n      if (rf & 1) {\n        i0.ɵɵviewQuery(_c0, 5);\n        i0.ɵɵviewQuery(DateInputComponent, 5);\n      }\n      if (rf & 2) {\n        let _t;\n        i0.ɵɵqueryRefresh(_t = i0.ɵɵloadQuery()) && (ctx.fileInput = _t);\n        i0.ɵɵqueryRefresh(_t = i0.ɵɵloadQuery()) && (ctx.customDateInputs = _t);\n      }\n    },\n    features: [i0.ɵɵNgOnChangesFeature],\n    decls: 3,\n    vars: 2,\n    consts: [[3, \"formGroup\"], [\"formArrayName\", \"activityData\"], [4, \"ngFor\", \"ngForOf\"], [1, \"border\", \"cardOverwrite\", \"my-1\"], [3, \"formGroupName\"], [4, \"ngIf\"], [1, \"row\"], [1, \"col-sm-8\"], [1, \"cursorPointer\", 3, \"materialFieldWidthInp\", \"materialFormFieldAppearanceInp\", \"isMandatoryFieldInp\", \"dateInputTypeInp\", \"cdrFormatInp\", \"labelInp\", \"emitFilter\"], [\"customDateInput\", \"\"], [1, \"col-sm-4\"], [\"type\", \"button\", 1, \"btn\", \"btn-light\", \"w-100\", \"text-start\", \"text-secondary\", \"fs-6\", \"fuelSelect\", \"fuelSelectFormField\", 3, \"matMenuTriggerFor\", \"click\"], [\"class\", \"fuelSelectError\", 4, \"ngIf\"], [\"fuels\", \"matMenu\"], [\"mat-menu-item\", \"\", 3, \"matMenuTriggerFor\", \"click\"], [\"triggerMenu\", \"matMenu\"], [1, \"funnelFilterDD\"], [1, \"fuel\", 3, \"appearance\"], [1, \"formLabel\"], [\"formControlName\", \"customFuelID\", 3, \"selectionChange\"], [\"customFuel\", \"\"], [\"placeholderLabel\", \"Search by custom fuel name\", \"noEntriesFoundLabel\", \"No matching fuel found.\", 3, \"formControl\"], [\"matTooltipPosition\", \"above\", \"matTooltipClass\", \"infoTooltip\", 3, \"value\", \"matTooltip\", 4, \"ngFor\", \"ngForOf\"], [\"formControlName\", \"standardFuelID\", 3, \"selectionChange\"], [\"standardFuel\", \"\"], [\"placeholderLabel\", \"Search by standard fuel name\", \"noEntriesFoundLabel\", \"No matching fuel found.\", 3, \"formControl\"], [4, \"ngIf\", \"ngIfElse\"], [1, \"matFieldWidth100\", 3, \"appearance\"], [\"matInput\", \"\", \"min\", \"0\", \"type\", \"number\", \"matInput\", \"\", \"placeholder\", \"\", \"type\", \"number\", \"formControlName\", \"netCalorificValue\", 1, \"formPlaceholder\"], [\"formControlName\", \"ncvNumeratorUnitID\"], [\"placeholderLabel\", \"Search by unit name\", \"noEntriesFoundLabel\", \"No matching found.\", 3, \"formControl\"], [3, \"value\", 4, \"ngFor\", \"ngForOf\"], [\"formControlName\", \"ncvDenominatorUnitID\"], [\"matInput\", \"\", \"min\", \"0\", \"max\", \"1\", \"type\", \"number\", \"placeholder\", \"0.02\", \"formControlName\", \"oxidationFactor\", 1, \"formPlaceholder\"], [\"matInput\", \"\", \"min\", \"0\", \"max\", \"100\", \"type\", \"number\", \"placeholder\", \"\", \"formControlName\", \"biomassPct\", 1, \"formPlaceholder\"], [\"matSuffix\", \"\", 1, \"matSuffix\", \"ms-2\", \"pb-5\"], [\"meterReading\", \"\"], [1, \"col-sm-4\", \"mb-3\"], [1, \"cardTitle\", \"pb-2\"], [1, \"fuelSelectError\"], [\"matTooltipPosition\", \"above\", \"matTooltipClass\", \"infoTooltip\", 3, \"value\", \"matTooltip\"], [\"matInput\", \"\", \"type\", \"number\", \"formControlName\", \"energyExported\", \"placeholder\", \"0.00\", \"min\", \"0\"], [\"formControlName\", \"energyExportedUnitID\"], [3, \"value\"], [1, \"col-sm-3\"], [\"matInput\", \"\", \"type\", \"number\", \"formControlName\", \"openingMeterReading\", \"placeholder\", \"0.00\", \"min\", \"0\"], [\"matInput\", \"\", \"type\", \"number\", \"formControlName\", \"closingMeterReading\", \"placeholder\", \"0.00\", \"min\", \"0\"], [1, \"col-sm-2\"], [\"formControlName\", \"meterUnitID\"], [1, \"col-sm-8\", \"fileInput\"], [\"type\", \"file\", \"accept\", \"application/pdf\", 1, \"form-control\", 3, \"change\"], [\"fileInput\", \"\"], [1, \"row\", \"pt-2\"], [1, \"border\", \"rounded\", \"d-flex\", 3, \"ngClass\"], [1, \"p-1\"], [4, \"ngTemplateOutlet\"], [1, \"centerAlignVertical\", \"p-1\"], [1, \"ms-auto\", \"p-1\"], [\"type\", \"button\", \"mat-icon-button\", \"\", 1, \"btn\", \"p-1\", 3, \"click\"], [1, \"material-symbols-outlined\", \"text-danger\"], [1, \"border\", \"rounded\", \"d-flex\"], [1, \"centerAlignVertical\", \"p-3\"], [\"target\", \"_blank\", 3, \"href\", \"ngClass\"], [1, \"ms-auto\", \"centerAlignVertical\", \"p-2\"], [\"type\", \"button\", \"mat-icon-button\", \"\", \"matTooltip\", \"Edit\", \"matTooltipClass\", \"nameTooltip\", \"matTooltipPosition\", \"below\", 1, \"btn\", \"p-1\", 3, \"click\"], [1, \"material-symbols-outlined\", \"text-primary\", \"updateIconHover\", \"fs-5\"], [\"type\", \"file\", \"accept\", \"application/pdf\", 1, \"form-control\", 2, \"display\", \"none\", 3, \"change\"], [\"type\", \"button\", \"mat-icon-button\", \"\", \"matTooltip\", \"Delete\", \"matTooltipClass\", \"nameTooltip\", \"matTooltipPosition\", \"below\", 1, \"btn\", \"p-1\", 3, \"click\"]],\n    template: function ElectricityHeatExportActivityDataCreateComponent_Template(rf, ctx) {\n      if (rf & 1) {\n        i0.ɵɵelementStart(0, \"form\", 0);\n        i0.ɵɵelementContainerStart(1, 1);\n        i0.ɵɵtemplate(2, ElectricityHeatExportActivityDataCreateComponent_ng_container_2_Template, 97, 59, \"ng-container\", 2);\n        i0.ɵɵelementContainerEnd();\n        i0.ɵɵelementEnd();\n      }\n      if (rf & 2) {\n        i0.ɵɵproperty(\"formGroup\", ctx.activityDataFG);\n        i0.ɵɵadvance(2);\n        i0.ɵɵproperty(\"ngForOf\", ctx.activityDataFA.controls);\n      }\n    },\n    directives: [i3.ɵNgNoValidate, i3.NgControlStatusGroup, i3.FormGroupDirective, i3.FormArrayName, i13.NgForOf, i14.MatCard, i3.FormGroupName, i13.NgIf, i7.DateInputComponent, i15.MatMenuTrigger, i15.MatMenu, i15.MatMenuItem, i16.MatFormField, i16.MatLabel, i17.MatSelect, i3.NgControlStatus, i3.FormControlName, i18.MatOption, i19.MatSelectSearchComponent, i3.FormControlDirective, i20.MatInput, i3.MinValidator, i3.NumberValueAccessor, i3.DefaultValueAccessor, i3.MaxValidator, i16.MatSuffix, i16.MatError, i13.NgClass, i13.NgTemplateOutlet],\n    pipes: [i13.AsyncPipe],\n    styles: [\".funnelFilterDD[_ngcontent-%COMP%]{width:0;height:0;overflow:hidden}  .fuel{position:absolute;z-index:-999;left:175px}  .mat-menu-panel{min-width:0!important;min-height:0!important}.fuelSelect[_ngcontent-%COMP%]{height:52px;margin-top:3px;background-color:transparent}.fuelSelectedLabel[_ngcontent-%COMP%]{color:#000000de!important}.fuelSelectFormField[_ngcontent-%COMP%]{border:1.5px rgba(26,54,126,.125) solid}.fuelSelectErrorFormField[_ngcontent-%COMP%]{border:2px solid red!important}.fuelSelectError[_ngcontent-%COMP%]{font-size:10.5px;margin-top:4px;padding-left:10px}\"]\n  });\n  return ElectricityHeatExportActivityDataCreateComponent;\n})();","map":null,"metadata":{},"sourceType":"module"}