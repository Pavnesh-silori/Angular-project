{"ast":null,"code":"import { environment } from \"src/environments/environment\";\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/common/http\";\nexport let PdfController = /*#__PURE__*/(() => {\n  class PdfController {\n    constructor(http) {\n      this.http = http;\n    }\n    pdfReportGenerate(orgID, reportingFrameworkKeyID, configIntervalID) {\n      return this.http.get(`${environment.REPORTING_FRAMEWORK_PUBLIC_API_URL}organizations/${orgID}/reporting-framework/${reportingFrameworkKeyID}/config-interval/${configIntervalID}/download/pdf`);\n    }\n    xbrlReportGenerate(orgID, reportingFrameworkKeyID, configIntervalID) {\n      return this.http.get(`${environment.REPORTING_FRAMEWORK_PUBLIC_API_URL}organizations/${orgID}/reporting-framework/${reportingFrameworkKeyID}/config-interval/${configIntervalID}/download/xbrl`);\n    }\n    excelReportGenerate(orgID, reportingFrameworkKeyID, configIntervalID) {\n      return this.http.get(`${environment.REPORTING_FRAMEWORK_PUBLIC_API_URL}organizations/${orgID}/reporting-framework/${reportingFrameworkKeyID}/config-interval/${configIntervalID}/download/xlsx`);\n    }\n    unlockReport(orgID, configIntervalID, reportHistoryID) {\n      return this.http.get(`${environment.REPORTING_FRAMEWORK_API_URL}organizations/${orgID}/config-interval/${configIntervalID}/report-history/${reportHistoryID}/unlock`);\n    }\n    lockReport(orgID, configIntervalID) {\n      return this.http.get(`${environment.REPORTING_FRAMEWORK_API_URL}organizations/${orgID}/config-interval/${configIntervalID}/lock`);\n    }\n  }\n  PdfController.ɵfac = function PdfController_Factory(t) {\n    return new (t || PdfController)(i0.ɵɵinject(i1.HttpClient));\n  };\n  PdfController.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n    token: PdfController,\n    factory: PdfController.ɵfac,\n    providedIn: \"root\"\n  });\n  return PdfController;\n})();","map":null,"metadata":{},"sourceType":"module"}