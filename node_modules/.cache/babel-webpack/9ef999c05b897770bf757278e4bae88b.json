{"ast":null,"code":"import { HttpParams } from '@angular/common/http';\nimport { environment } from 'src/environments/environment';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/common/http\";\nexport let CarbonDocumentController = /*#__PURE__*/(() => {\n  class CarbonDocumentController {\n    constructor(http) {\n      this.http = http;\n    }\n    postDoc(typeID, fileType, filePayload) {\n      let params = new HttpParams();\n      params = params.append('fileType', fileType);\n      params = params.append('typeID', typeID);\n      return this.http.post(`${environment.CARBON_ACCOUNTING_API_URL}organizations/files/doc`, filePayload, {\n        params: params\n      });\n    }\n    createDocument(orgID, typeID, typeKeyID, payload) {\n      let params = new HttpParams();\n      params = params.append('typeKeyID', typeKeyID);\n      params = params.append('typeID', typeID);\n      return this.http.post(`${environment.CARBON_ACCOUNTING_API_URL}organizations/${orgID}/files/doc`, payload, {\n        params: params\n      });\n    }\n    updateDocument(orgID, docID, payload) {\n      return this.http.patch(`${environment.CARBON_ACCOUNTING_API_URL}organizations/${orgID}/files/doc/${docID}`, payload);\n    }\n    deleteDocument(orgID, docID) {\n      return this.http.delete(`${environment.CARBON_ACCOUNTING_API_URL}organizations/${orgID}/files/doc/${docID}`);\n    }\n  }\n  CarbonDocumentController.ɵfac = function CarbonDocumentController_Factory(t) {\n    return new (t || CarbonDocumentController)(i0.ɵɵinject(i1.HttpClient));\n  };\n  CarbonDocumentController.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n    token: CarbonDocumentController,\n    factory: CarbonDocumentController.ɵfac,\n    providedIn: 'root'\n  });\n  return CarbonDocumentController;\n})();","map":null,"metadata":{},"sourceType":"module"}