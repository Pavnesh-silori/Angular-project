{"ast":null,"code":"import { __awaiter } from \"tslib\";\nimport { combineLatest, merge } from 'rxjs';\nimport { CreateConfig } from '../create-config';\nimport { ActivityConfigEnum } from '@carbon/enum/activity-config.enum';\nimport { ACTIVITY_FORM_TYPE_KEYID_ENUM } from '@carbon/enum/activity-form-enum';\nimport { ActivityKeyIDEnum } from '@carbon/enum/activity.enum';\nimport { ACTIVITY_CONFIG_VIEW_PAGE_CONSTANT } from '@carbon/constant/activity.constant';\nimport { ToastrColor } from '@library/toastr-service';\nimport { InvalidForm } from '@library/tsc-common';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@library/storage-service\";\nimport * as i2 from \"@library/toastr-service\";\nimport * as i3 from \"@carbon/service/activity.service\";\nimport * as i4 from \"@angular/router\";\nimport * as i5 from \"@library/user-service\";\nimport * as i6 from \"@carbon/controller/ad-hoc.controller\";\nimport * as i7 from \"@carbon/controller/activity-config.controller\";\nimport * as i8 from \"@library/tsc-common\";\nimport * as i9 from \"@library/netzero\";\nimport * as i10 from \"@angular/common\";\nimport * as i11 from \"./config-create/config-create.component\";\nimport * as i12 from \"../../../../create/_templates/workflow-scheduler/scheduler-workflow/scheduler-workflow.component\";\nimport * as i13 from \"../../../../create/_templates/api/api.component\";\nconst _c0 = [\"schedulerWorkflow\"];\nconst _c1 = [\"configCreate\"];\nconst _c2 = [\"api\"];\nfunction CreateComponent_div_4_span_3_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"span\");\n    i0.ɵɵelementStart(1, \"span\", 13);\n    i0.ɵɵtext(2);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const formType_r4 = ctx.$implicit;\n    i0.ɵɵadvance(2);\n    i0.ɵɵtextInterpolate1(\" \", formType_r4.name, \" \");\n  }\n}\nfunction CreateComponent_div_4_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\", 9);\n    i0.ɵɵelementStart(1, \"div\", 10);\n    i0.ɵɵtext(2);\n    i0.ɵɵtemplate(3, CreateComponent_div_4_span_3_Template, 3, 1, \"span\", 11);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(4, \"small\", 12);\n    i0.ɵɵtext(5);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const ctx_r0 = i0.ɵɵnextContext();\n    i0.ɵɵadvance(2);\n    i0.ɵɵtextInterpolate1(\" \", ctx_r0.title, \" \");\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngForOf\", ctx_r0.activity.types);\n    i0.ɵɵadvance(2);\n    i0.ɵɵtextInterpolate1(\" \", ctx_r0.subTitle, \" \");\n  }\n}\nfunction CreateComponent_ng_container_6_ng_container_3_div_1_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\", 18);\n    i0.ɵɵnamespaceSVG();\n    i0.ɵɵelementStart(1, \"svg\", 19);\n    i0.ɵɵelement(2, \"use\", 20);\n    i0.ɵɵelementEnd();\n    i0.ɵɵnamespaceHTML();\n    i0.ɵɵelementStart(3, \"div\", 21);\n    i0.ɵɵtext(4, \" Please fill mandatory fields in details tab first. \");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementEnd();\n  }\n}\nconst _c3 = function (a0) {\n  return {\n    \"invisible\": a0\n  };\n};\nfunction CreateComponent_ng_container_6_ng_container_3_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementContainerStart(0);\n    i0.ɵɵtemplate(1, CreateComponent_ng_container_6_ng_container_3_div_1_Template, 5, 0, \"div\", 16);\n    i0.ɵɵelement(2, \"div\", 17);\n    i0.ɵɵelementContainerEnd();\n  }\n  if (rf & 2) {\n    const ctx_r6 = i0.ɵɵnextContext(2);\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngIf\", ctx_r6.showActivityDataError == \"YES\");\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngClass\", i0.ɵɵpureFunction1(2, _c3, ctx_r6.showActivityDataError == \"YES\"));\n  }\n}\nfunction CreateComponent_ng_container_6_ng_container_4_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementContainerStart(0);\n    i0.ɵɵelementStart(1, \"div\", 22);\n    i0.ɵɵelement(2, \"app-scheduler-workflow\", 23, 24);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(4, \"div\", 22);\n    i0.ɵɵelement(5, \"app-api\", 14, 25);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementContainerEnd();\n  }\n  if (rf & 2) {\n    const ctx_r7 = i0.ɵɵnextContext(2);\n    i0.ɵɵadvance(2);\n    i0.ɵɵproperty(\"assignee\", ctx_r7.users)(\"approver\", ctx_r7.users);\n  }\n}\nfunction CreateComponent_ng_container_6_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementContainerStart(0);\n    i0.ɵɵelement(1, \"app-config-create\", 14, 15);\n    i0.ɵɵtemplate(3, CreateComponent_ng_container_6_ng_container_3_Template, 3, 4, \"ng-container\", 6);\n    i0.ɵɵtemplate(4, CreateComponent_ng_container_6_ng_container_4_Template, 7, 2, \"ng-container\", 6);\n    i0.ɵɵelementContainerEnd();\n  }\n  if (rf & 2) {\n    const ctx_r1 = i0.ɵɵnextContext();\n    i0.ɵɵadvance(3);\n    i0.ɵɵproperty(\"ngIf\", ctx_r1.activityDataTabView == \"YES\");\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngIf\", ctx_r1.origin == ctx_r1.ActivityConfigEnum.PFF);\n  }\n}\nfunction CreateComponent_div_8_ng_container_1_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r14 = i0.ɵɵgetCurrentView();\n    i0.ɵɵelementContainerStart(0);\n    i0.ɵɵelementStart(1, \"div\");\n    i0.ɵɵelementStart(2, \"a\", 27);\n    i0.ɵɵlistener(\"click\", function CreateComponent_div_8_ng_container_1_Template_a_click_2_listener() {\n      i0.ɵɵrestoreView(_r14);\n      const ctx_r13 = i0.ɵɵnextContext(2);\n      return ctx_r13.cancelBtn();\n    });\n    i0.ɵɵtext(3, \" Cancel \");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(4, \"button\", 28);\n    i0.ɵɵlistener(\"click\", function CreateComponent_div_8_ng_container_1_Template_button_click_4_listener() {\n      i0.ɵɵrestoreView(_r14);\n      const ctx_r15 = i0.ɵɵnextContext(2);\n      return ctx_r15.isValidForm();\n    });\n    i0.ɵɵtext(5);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementContainerEnd();\n  }\n  if (rf & 2) {\n    const ctx_r11 = i0.ɵɵnextContext(2);\n    i0.ɵɵadvance(4);\n    i0.ɵɵproperty(\"disabled\", ctx_r11.isEqual);\n    i0.ɵɵadvance(1);\n    i0.ɵɵtextInterpolate1(\" \", ctx_r11.isPFFUpdate ? \"Update\" : \"Create\", \" \");\n  }\n}\nfunction CreateComponent_div_8_ng_container_2_button_4_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r20 = i0.ɵɵgetCurrentView();\n    i0.ɵɵelementStart(0, \"button\", 33);\n    i0.ɵɵlistener(\"click\", function CreateComponent_div_8_ng_container_2_button_4_Template_button_click_0_listener() {\n      i0.ɵɵrestoreView(_r20);\n      const ctx_r19 = i0.ɵɵnextContext(3);\n      return ctx_r19.isValidForm();\n    });\n    i0.ɵɵtext(1, \" Save \");\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const ctx_r16 = i0.ɵɵnextContext(3);\n    i0.ɵɵproperty(\"disabled\", ctx_r16.isEqual);\n  }\n}\nfunction CreateComponent_div_8_ng_container_2_button_5_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r22 = i0.ɵɵgetCurrentView();\n    i0.ɵɵelementStart(0, \"button\", 34);\n    i0.ɵɵlistener(\"click\", function CreateComponent_div_8_ng_container_2_button_5_Template_button_click_0_listener() {\n      i0.ɵɵrestoreView(_r22);\n      const ctx_r21 = i0.ɵɵnextContext(3);\n      return ctx_r21.isValidForm();\n    });\n    i0.ɵɵtext(1, \" Submit for approval \");\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const ctx_r17 = i0.ɵɵnextContext(3);\n    i0.ɵɵproperty(\"disabled\", ctx_r17.isEqual);\n  }\n}\nfunction CreateComponent_div_8_ng_container_2_button_6_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r24 = i0.ɵɵgetCurrentView();\n    i0.ɵɵelementStart(0, \"button\", 35);\n    i0.ɵɵlistener(\"click\", function CreateComponent_div_8_ng_container_2_button_6_Template_button_click_0_listener() {\n      i0.ɵɵrestoreView(_r24);\n      const ctx_r23 = i0.ɵɵnextContext(3);\n      return ctx_r23.isValidForm();\n    });\n    i0.ɵɵtext(1, \" Save & Approve \");\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const ctx_r18 = i0.ɵɵnextContext(3);\n    i0.ɵɵproperty(\"disabled\", ctx_r18.isEqual);\n  }\n}\nfunction CreateComponent_div_8_ng_container_2_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r26 = i0.ɵɵgetCurrentView();\n    i0.ɵɵelementContainerStart(0);\n    i0.ɵɵelementStart(1, \"div\");\n    i0.ɵɵelementStart(2, \"button\", 29);\n    i0.ɵɵlistener(\"click\", function CreateComponent_div_8_ng_container_2_Template_button_click_2_listener() {\n      i0.ɵɵrestoreView(_r26);\n      const ctx_r25 = i0.ɵɵnextContext(2);\n      return ctx_r25.cancelBtn();\n    });\n    i0.ɵɵtext(3, \" Cancel \");\n    i0.ɵɵelementEnd();\n    i0.ɵɵtemplate(4, CreateComponent_div_8_ng_container_2_button_4_Template, 2, 1, \"button\", 30);\n    i0.ɵɵtemplate(5, CreateComponent_div_8_ng_container_2_button_5_Template, 2, 1, \"button\", 31);\n    i0.ɵɵtemplate(6, CreateComponent_div_8_ng_container_2_button_6_Template, 2, 1, \"button\", 32);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementContainerEnd();\n  }\n  if (rf & 2) {\n    const ctx_r12 = i0.ɵɵnextContext(2);\n    i0.ɵɵadvance(4);\n    i0.ɵɵproperty(\"ngIf\", ctx_r12.saveBtn);\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngIf\", ctx_r12.submitBtn);\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngIf\", ctx_r12.approveBtn);\n  }\n}\nfunction CreateComponent_div_8_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\", 26);\n    i0.ɵɵtemplate(1, CreateComponent_div_8_ng_container_1_Template, 6, 2, \"ng-container\", 6);\n    i0.ɵɵtemplate(2, CreateComponent_div_8_ng_container_2_Template, 7, 3, \"ng-container\", 6);\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const ctx_r2 = i0.ɵɵnextContext();\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngIf\", ctx_r2.origin == ctx_r2.ActivityConfigEnum.PFF);\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngIf\", ctx_r2.origin != ctx_r2.ActivityConfigEnum.PFF);\n  }\n}\nconst CREATE_AD_HOC_SUBTITLE = 'Create a new record with details and activity data.';\nexport let CreateComponent = /*#__PURE__*/(() => {\n  class CreateComponent extends CreateConfig {\n    constructor(storageService, toastrService, activityService, router, activatedRoute, userService, adHocController, activityConfigController, tscCommonService, vehicleService) {\n      super(activityService, activityConfigController, router);\n      this.storageService = storageService;\n      this.toastrService = toastrService;\n      this.activityService = activityService;\n      this.router = router;\n      this.activatedRoute = activatedRoute;\n      this.userService = userService;\n      this.adHocController = adHocController;\n      this.activityConfigController = activityConfigController;\n      this.tscCommonService = tscCommonService;\n      this.vehicleService = vehicleService;\n      this.ActivityConfigEnum = ActivityConfigEnum;\n      this.ACTIVITY_FORM_TYPE_KEYID_ENUM = ACTIVITY_FORM_TYPE_KEYID_ENUM;\n      this.title = 'Title';\n      this.subTitle = '';\n      this.origin = '';\n      this.action = '';\n      this.usePFF = 'NO';\n      this.tabView = 'NO';\n      this.activityDataTabView = 'NO';\n      this.showActivitySelection = 'YES';\n      this.showActivityDataError = 'YES';\n      this.from = 'NO';\n      this.isPFFUpdate = false;\n      this.isAdHocCreateUsingPFF = false;\n      this.users = [];\n      this.dataEntryMethod = [];\n      this.estimationMethod = [];\n      this.isWorkflowValid = true;\n      this.isApiValid = true;\n      this.isConfigValid = true;\n      // component: any; \n      this.isActivityDataValid = true;\n      this.docFileList = []; /* get upload file value */\n      this.saveAdHocAsPff = false;\n      this.createAdHocJson = {\n        configData: undefined,\n        activityData: undefined\n      };\n      this.isEqual = false;\n      this.approveBtn = false;\n      this.saveBtn = true;\n      this.submitBtn = false;\n      this.activityDataAction = 'APPROVED';\n      this.vehicles = [];\n      this.initCheck = true;\n      this.currentOrgID = storageService.getStorage('currentOrgID');\n    }\n    ngOnInit() {\n      this.getUsersByOrg();\n      combineLatest([this.activatedRoute.params, this.activatedRoute.queryParams]).subscribe(([params, queryParams]) => {\n        this.handleQueryParams(queryParams);\n        this.handleParams(params);\n      });\n      if (this.activityID) {\n        this.getActivityByID(this.activityID);\n      }\n      console.log(this.configCreate);\n    }\n    getActivityByID(activityID) {\n      return __awaiter(this, void 0, void 0, function* () {\n        this.activity = yield this.activityService.getActivityByID(activityID);\n        this.activityKeyID = this.activity.keyID;\n        this.activityName = this.activity.name;\n        this.title = `${this.titlePrefix} ${this.activityName} ${this.titleSuffix}`;\n        this.subTitle = this.activity.description;\n        //update case\n        if (this.isPFFUpdate || this.isAdHocCreateUsingPFF) {\n          this.getActivityConfigByID(this.currentOrgID, this.activityKeyID, this.activityConfigID);\n        }\n        /* sets which route should we redirects to after creation or updation of an entity */\n        this.setRedirectUrl();\n      });\n    }\n    getUsersByOrg() {\n      return __awaiter(this, void 0, void 0, function* () {\n        this.users = yield this.userService.getUserListByOrgIDAndAppID(this.currentOrgID, this.currentApplicationID);\n      });\n    }\n    getActivityConfigByID(orgID, activityKeyID, activityConfigID) {\n      this.configuration = null;\n      this.activityConfigController.getActivityConfigByID(orgID, activityKeyID, activityConfigID).subscribe(config => {\n        this.configuration = config;\n        if (this.isPFFUpdate) {\n          this.patchConfiguration(this.configuration);\n        }\n        if (this.isAdHocCreateUsingPFF) {\n          this.checkApprover(this.configuration);\n          this.activityDataComp.getConfiguration(this.configuration);\n          this.patchConfigForAdHoc(this.configuration);\n        }\n      }, error => {\n        console.log('error in getConfigurationByID() -', error);\n      });\n    }\n    checkApprover(configuration) {\n      var _a, _b, _c, _d;\n      if ((configuration === null || configuration === void 0 ? void 0 : configuration['workflowEnabled']) == null) {\n        this.saveBtn = true;\n      } else if (configuration['workflow'] != null) {\n        if ((_b = (_a = configuration['workflow']) === null || _a === void 0 ? void 0 : _a['activityConfigApprover']) === null || _b === void 0 ? void 0 : _b['isApprover']) {\n          this.approveBtn = true;\n          this.saveBtn = false;\n        } else if (((_d = (_c = configuration['workflow']) === null || _c === void 0 ? void 0 : _c['activityConfigWorkflow']) === null || _d === void 0 ? void 0 : _d['autoApprove']) == 'YES') {\n          this.approveBtn = true;\n          this.saveBtn = false;\n        } else {\n          this.submitBtn = true;\n          this.saveBtn = false;\n          this.activityDataAction = 'SUBMITTED';\n        }\n      }\n    }\n    patchConfiguration(configuration) {\n      this.isEqual = true;\n      let activityConfig = configuration['activityConfig'];\n      this.configCreate.patchConfiguration(configuration);\n      this.schedulerWorkflow.patchWorkflow(activityConfig['workflowEnabled'], configuration['workflow'], activityConfig['reminderEnabled'], configuration['schedular']);\n      this.api.patchApi(activityConfig['apiEnabled'], configuration['activityConfigApi']);\n    }\n    patchConfigForAdHoc(configuration) {\n      this.configCreate.patchConfiguration(configuration);\n      this.configCreate.readOnlyForm();\n    }\n    setRedirectUrl() {\n      const nonGhgFormKeyID = [ActivityKeyIDEnum.CHP_ATTRIBUTION, ActivityKeyIDEnum.PROCESS_ELECTRICITY_CONSUMPTION, ActivityKeyIDEnum.PROCESS_HEAT_CONSUMPTION, ActivityKeyIDEnum.PROCESS_FUEL_CONSUMPTION, ActivityKeyIDEnum.PURCHASED_PRECURSOR, ActivityKeyIDEnum.PROCESS_PRECURSOR_CONSUMPTION, ActivityKeyIDEnum.PROCESS_ELECTRICITY_EXPORT, ActivityKeyIDEnum.PROCESS_HEAT_EXPORT, ActivityKeyIDEnum.PROCESS_PRECURSOR_EXPORT, ActivityKeyIDEnum.PROCESS_WASTE_GAS_EXPORT, ActivityKeyIDEnum.PROCESS_INTERMEDIATE_PRODUCT_EXPORT, ActivityKeyIDEnum.PROCESS_PRODUCTION_LEVEL, ActivityKeyIDEnum.PROCESS_PRECURSOR_EXPORT];\n      if (this.origin == ActivityConfigEnum.PFF) {\n        this.redirectUrl = `/carbon-setting/activity-config/page`;\n      } else if (this.origin == ActivityConfigEnum.AD_HOC) {\n        this.redirectUrl = `/activity-data`;\n        // this.saveAdHocAsPff = this.configCreate.saveAdHocAsPff;\n        if (nonGhgFormKeyID.includes(this.activityKeyID)) {\n          this.redirectUrl = '/cbam/activity-data/activity';\n        }\n      }\n      if (this.router.url.includes('sustainability-accounting')) {\n        this.redirectUrl = `/sustainability-accounting/carbon/page`;\n      }\n    }\n    jsonCreatForActivityData() {\n      var _a;\n      merge((_a = this.configCreate.activityConfigFG) === null || _a === void 0 ? void 0 : _a.valueChanges).subscribe(() => {\n        if (this.configCreate.isValid()) {\n          this.activityDataComp.getConfiguration(this.createJsonForActivityData);\n          this.showActivityDataError = 'NO';\n        } else {\n          this.showActivityDataError = 'YES';\n        }\n      });\n    }\n    get createJsonForActivityData() {\n      this.createJsonForAD = this.configCreate.getConfigJson;\n      return this.createJsonForAD;\n    }\n    ngAfterViewInit() {\n      if (this.isPFFUpdate) this.isUpdateValid();\n    }\n    ngAfterContentChecked() {\n      if (this.usePFF == 'NO') {\n        if (this.initCheck) {\n          if (this.activityDataComp && this.configCreate) {\n            this.jsonCreatForActivityData();\n            this.initCheck = false;\n          }\n        }\n      }\n    }\n    isUpdateValid() {\n      var _a;\n      let configUpdate;\n      (_a = this.configCreate) === null || _a === void 0 ? void 0 : _a.isEqual.subscribe(isEqual => {\n        configUpdate = isEqual;\n        this.updateEqual(configUpdate, workflowUpdate, apiUpdate);\n      });\n      let workflowUpdate;\n      this.schedulerWorkflow.isEqual.subscribe(isEqual => {\n        workflowUpdate = isEqual;\n        this.updateEqual(configUpdate, workflowUpdate, apiUpdate);\n      });\n      let apiUpdate;\n      this.api.isEqual.subscribe(isEqual => {\n        apiUpdate = isEqual;\n        this.updateEqual(configUpdate, workflowUpdate, apiUpdate);\n      });\n    }\n    updateEqual(configUpdate, workflowUpdate, apiUpdate) {\n      this.isEqual = configUpdate && workflowUpdate && apiUpdate;\n    }\n    createActivityConfig() {\n      this.activityConfigController.createActivityConfig(this.currentOrgID, this.activityKeyID, this.activityConfigJson).subscribe(response => {\n        if (ACTIVITY_CONFIG_VIEW_PAGE_CONSTANT.includes(this.activityKeyID)) {\n          this.router.navigate(['/carbon-setting/activity-config', response.response.activityConfig.activityConfigID, 'activity', this.activityKeyID, {\n            outlets: {\n              activityConfig: ['view']\n            }\n          }], {\n            queryParams: {\n              activityKeyID: this.activityKeyID\n            }\n          });\n        } else {\n          this.router.navigate([this.redirectUrl], {\n            queryParams: {\n              origin: this.origin\n            }\n          });\n        }\n      }, error => {\n        console.log('error in createActivityConfig() -', error);\n      });\n    }\n    patchChildren() {\n      this.activityConfigJson = this.configCreate.configuration;\n      this.activityConfigJson['activityConfig']['activityID'] = this.activityID;\n      this.activityConfigJson['activityConfig']['activityKeyID'] = this.activityKeyID;\n      if (this.origin == ActivityConfigEnum.PFF) {\n        this.activityConfigJson['activityConfig']['workflowEnabled'] = this.schedulerWorkflow.enableWorkflowFC.value;\n        this.activityConfigJson['activityConfig']['reminderEnabled'] = this.schedulerWorkflow.isReminderSetAC.value && this.schedulerWorkflow.enableWorkflowFC.value;\n        this.activityConfigJson['activityConfig']['apiEnabled'] = this.api.enableApiFC.value;\n        this.activityConfigJson['activityConfigApi'] = this.api.enableApiFC.value ? this.api.apiFG.getRawValue() : null;\n        this.activityConfigJson['workflow'] = this.schedulerWorkflow.enableWorkflowFC.value ? this.schedulerWorkflow.workflowAC.getRawValue() : null;\n        this.activityConfigJson['schedular'] = this.schedulerWorkflow.isReminderSetAC.value ? this.schedulerWorkflow.schedulerAC.value : null;\n      }\n      if (this.origin == ActivityConfigEnum.PFF) {\n        if (this.isPFFUpdate) {\n          this.updateActivityConfig();\n        } else {\n          this.createActivityConfig();\n        }\n      } else if (this.origin == ActivityConfigEnum.AD_HOC) {\n        // this.saveAdHocAsPff = this.configCreate.saveAdHocAsPff;\n        if (this.saveAdHocAsPff) {\n          /* not yet configured/ not known if it will be used further */\n          this.createActivityDataAndActivityConfig();\n        } else {\n          this.createActivityData();\n        }\n      }\n    }\n    updateActivityConfig() {\n      this.activityConfigController.updateActivityConfig(this.currentOrgID, this.activityKeyID, this.activityConfigID, this.activityConfigJson).subscribe(response => {\n        if (ACTIVITY_CONFIG_VIEW_PAGE_CONSTANT.includes(this.activityKeyID)) {\n          this.router.navigate(['/carbon-setting/activity-config', response.response.activityConfig.activityConfigID, 'activity', this.activityKeyID, {\n            outlets: {\n              activityConfig: ['view']\n            }\n          }], {\n            queryParams: {\n              activityKeyID: this.activityKeyID\n            }\n          });\n        } else {\n          this.router.navigate([this.redirectUrl], {\n            queryParams: {\n              origin: this.origin\n            }\n          });\n        }\n      }, error => {\n        console.log('error in updateActivityConfig() -', error);\n      });\n    }\n    isValidForm() {\n      var _a, _b, _c, _d, _e, _f, _g;\n      if (this.usePFF != 'YES') {\n        console.log('config component validity', (_a = this.configCreate) === null || _a === void 0 ? void 0 : _a.isValidForm());\n        this.isConfigValid = (_b = this.configCreate) === null || _b === void 0 ? void 0 : _b.isValidForm();\n        (_c = this.configCreate) === null || _c === void 0 ? void 0 : _c.activityConfigValidity();\n        console.log(this.isConfigValid = (_d = this.configCreate) === null || _d === void 0 ? void 0 : _d.isValidForm(), (_e = this.configCreate) === null || _e === void 0 ? void 0 : _e.activityConfigValidity());\n        (_f = this.configCreate) === null || _f === void 0 ? void 0 : _f.validity.subscribe(invalid => this.isConfigValid = invalid);\n        if (this.origin == ActivityConfigEnum.PFF) {\n          this.isWorkflowValid = this.schedulerWorkflow.isValidForm();\n          this.isApiValid = this.api.isValidForm();\n          this.api.apiValidity();\n          this.api.validity.subscribe(invalid => this.isApiValid = invalid);\n        }\n      }\n      // for activityData validation\n      if (this.isConfigValid && this.activityDataTabView == 'YES') {\n        this.isActivityDataValid = (_g = this.activityDataComp) === null || _g === void 0 ? void 0 : _g.isValidForm();\n        this.activityDataComp.activityDataValidity();\n        this.activityDataComp.validity.subscribe(invalid => this.isActivityDataValid = invalid);\n      }\n      if (this.origin == ActivityConfigEnum.PFF) {\n        if (this.isConfigValid && this.isWorkflowValid && this.isApiValid) {\n          this.patchChildren();\n        } else {\n          this.toastrService.openToast(InvalidForm.INVALID_FORM_TITLE, InvalidForm.INVALID_FORM_MESSAGE, ToastrColor.ERROR);\n          return;\n        }\n      }\n      // else if (this.origin == ActivityConfigEnum.AD_HOC) {\n      //     if (this.usePFF == 'YES' && this.isActivityDataValid) {\n      //         this.createActivityData();\n      //     } else if (this.usePFF == 'NO' && this.isConfigValid && this.isActivityDataValid && this.isWorkflowValid && this.isApiValid) {\n      //         this.patchChildren();\n      //     } else {\n      //         this.toastrService.openToast(InvalidForm.INVALID_FORM_TITLE, InvalidForm.INVALID_FORM_MESSAGE, ToastrColor.ERROR);\n      //         return;\n      //     }\n      // }\n    }\n\n    getAdHocJson() {\n      const activityData = this.activityDataComp.getActivityData();\n      let configData;\n      if (this.usePFF == 'YES') {\n        configData = this.configuration;\n      } else {\n        configData = this.activityConfigJson;\n      }\n      this.createAdHocJson['configData'] = configData;\n      this.createAdHocJson['activityData'] = activityData.activityData;\n      this.docFileList = activityData.activityDataFile;\n      return this.createAdHocJson;\n    }\n    toFormData() {\n      const formData = new FormData();\n      formData.append('payload', JSON.stringify(this.getAdHocJson()));\n      for (const file of this.docFileList) {\n        if (file == null) {\n          formData.append('file', new File([], '', {\n            type: 'application/octet-stream'\n          }));\n        } else {\n          formData.append('file', file, file.name);\n        }\n      }\n      return formData;\n    }\n    createActivityDataAndActivityConfig() {\n      this.adHocController.createActivityDataAndActivityConfig(this.currentOrgID, this.activityKeyID, this.toFormData()).subscribe(res => {\n        // if (this.router.url.includes('sustainability-accounting')) {\n        //     this.router.navigate([this.redirectUrl], { queryParams: { activityID: this.activityID, activityKeyID: this.activityKeyID } });\n        // } else {\n        //     this.router.navigate([this.redirectUrl, this.activityKeyID], { queryParams: { activityID: this.activityID, activityKeyID: this.activityKeyID } });\n        // }\n        this.tscCommonService.back();\n      }, error => {\n        console.log('error in createAdHocWithActivityConfig() -', error);\n      });\n    }\n    createActivityData() {\n      this.adHocController.createActivityData(this.currentOrgID, this.activityKeyID, this.activityConfigID, this.toFormData(), this.usePFF, this.activityDataAction).subscribe(res => {\n        // if (this.router.url.includes('sustainability-accounting')) {\n        //     this.router.navigate([this.redirectUrl], { queryParams: { activityID: this.activityID, activityKeyID: this.activityKeyID } });\n        // } else {\n        //     this.router.navigate([this.redirectUrl, this.activityKeyID, 'page'], { queryParams: { activityID: this.activityID, activityKeyID: this.activityKeyID } });\n        // }\n        this.tscCommonService.back();\n      }, error => {\n        console.log('error in createAdHocWithoutActivityConfig() -', error);\n      });\n    }\n    cancelBtn() {\n      this.tscCommonService.back();\n    }\n    ngOnDestroy() {\n      this.storageService.setStorage('switchOrgRedirect', 'NO');\n    }\n  }\n  CreateComponent.ɵfac = function CreateComponent_Factory(t) {\n    return new (t || CreateComponent)(i0.ɵɵdirectiveInject(i1.StorageService), i0.ɵɵdirectiveInject(i2.ToastrService), i0.ɵɵdirectiveInject(i3.ActivityService), i0.ɵɵdirectiveInject(i4.Router), i0.ɵɵdirectiveInject(i4.ActivatedRoute), i0.ɵɵdirectiveInject(i5.UserService), i0.ɵɵdirectiveInject(i6.AdHocController), i0.ɵɵdirectiveInject(i7.ActivityConfigController), i0.ɵɵdirectiveInject(i8.TSCCommonService), i0.ɵɵdirectiveInject(i9.VehicleService));\n  };\n  CreateComponent.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n    type: CreateComponent,\n    selectors: [[\"app-create\"]],\n    viewQuery: function CreateComponent_Query(rf, ctx) {\n      if (rf & 1) {\n        i0.ɵɵviewQuery(_c0, 5);\n        i0.ɵɵviewQuery(_c1, 5);\n        i0.ɵɵviewQuery(_c2, 5);\n      }\n      if (rf & 2) {\n        let _t;\n        i0.ɵɵqueryRefresh(_t = i0.ɵɵloadQuery()) && (ctx.schedulerWorkflow = _t.first);\n        i0.ɵɵqueryRefresh(_t = i0.ɵɵloadQuery()) && (ctx.configCreate = _t.first);\n        i0.ɵɵqueryRefresh(_t = i0.ɵɵloadQuery()) && (ctx.api = _t.first);\n      }\n    },\n    features: [i0.ɵɵInheritDefinitionFeature],\n    decls: 9,\n    vars: 3,\n    consts: [[1, \"card\", \"cardOverwrite\", \"main-container\"], [1, \"pffBody\", \"customScrollBar\"], [1, \"cardHeaderBlock\"], [1, \"row\", \"centerAlign\"], [\"class\", \"col-sm-12\", 4, \"ngIf\"], [1, \"card-body\"], [4, \"ngIf\"], [1, \"fixed-footer\"], [\"class\", \"float-end\", 4, \"ngIf\"], [1, \"col-sm-12\"], [1, \"pageTitle\"], [4, \"ngFor\", \"ngForOf\"], [1, \"pageSubtitle\"], [1, \"badge\", \"rounded-pill\", \"ms-2\", \"activityFormTypeLabel\"], [1, \"d-block\"], [\"configCreate\", \"\"], [\"class\", \"alert alert-warning alert-dismissible centerAlignVertical roundedBorder m-5\", 4, \"ngIf\"], [3, \"ngClass\"], [1, \"alert\", \"alert-warning\", \"alert-dismissible\", \"centerAlignVertical\", \"roundedBorder\", \"m-5\"], [1, \"bi\", \"flex-shrink-0\", \"me-3\", \"extraInfoCardIcon\"], [0, \"xlink\", \"href\", \"#info-fill\"], [1, \"extraInfoCardText\", \"pe-4\"], [1, \"mt-3\"], [1, \"d-block\", 3, \"assignee\", \"approver\"], [\"schedulerWorkflow\", \"\"], [\"api\", \"\"], [1, \"float-end\"], [1, \"btn\", \"btn-secondary\", \"me-2\", 3, \"click\"], [1, \"btn\", \"btn-primary\", 3, \"disabled\", \"click\"], [\"type\", \"button\", 1, \"btn\", \"btn-secondary\", \"me-2\", 3, \"click\"], [\"class\", \"btn btn-primary me-2\", \"type\", \"button\", 3, \"disabled\", \"click\", 4, \"ngIf\"], [\"class\", \"btn btn-success me-2\", \"type\", \"button\", 3, \"disabled\", \"click\", 4, \"ngIf\"], [\"class\", \"btn btn-success\", \"type\", \"button\", 3, \"disabled\", \"click\", 4, \"ngIf\"], [\"type\", \"button\", 1, \"btn\", \"btn-primary\", \"me-2\", 3, \"disabled\", \"click\"], [\"type\", \"button\", 1, \"btn\", \"btn-success\", \"me-2\", 3, \"disabled\", \"click\"], [\"type\", \"button\", 1, \"btn\", \"btn-success\", 3, \"disabled\", \"click\"]],\n    template: function CreateComponent_Template(rf, ctx) {\n      if (rf & 1) {\n        i0.ɵɵelementStart(0, \"div\", 0);\n        i0.ɵɵelementStart(1, \"div\", 1);\n        i0.ɵɵelementStart(2, \"div\", 2);\n        i0.ɵɵelementStart(3, \"div\", 3);\n        i0.ɵɵtemplate(4, CreateComponent_div_4_Template, 6, 3, \"div\", 4);\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(5, \"div\", 5);\n        i0.ɵɵtemplate(6, CreateComponent_ng_container_6_Template, 5, 2, \"ng-container\", 6);\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(7, \"div\", 7);\n        i0.ɵɵtemplate(8, CreateComponent_div_8_Template, 3, 2, \"div\", 8);\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementEnd();\n      }\n      if (rf & 2) {\n        i0.ɵɵadvance(4);\n        i0.ɵɵproperty(\"ngIf\", ctx.activity);\n        i0.ɵɵadvance(2);\n        i0.ɵɵproperty(\"ngIf\", ctx.tabView == \"YES\");\n        i0.ɵɵadvance(2);\n        i0.ɵɵproperty(\"ngIf\", ctx.tabView == \"YES\");\n      }\n    },\n    directives: [i10.NgIf, i10.NgForOf, i11.ConfigCreateComponent, i10.NgClass, i12.SchedulerWorkflowComponent, i13.ApiComponent],\n    styles: [\"\"]\n  });\n  return CreateComponent;\n})();","map":null,"metadata":{},"sourceType":"module"}