{"ast":null,"code":"import { __awaiter } from \"tslib\";\nimport { Validators } from '@angular/forms';\nimport { MAT_DIALOG_DATA } from '@angular/material/dialog';\nimport { isEqual } from 'lodash';\nimport { MATERIAL_CONSTANT, COMMON_CONSTANT, ButtonTooltipEnum, FormAction, MaterialFormFieldAppearance, FormErrorEnum, InvalidForm, DialogResponseEnum, MatSelectSearchService } from '@library/tsc-common';\nimport { ToastrColor } from '@library/toastr-service';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/material/dialog\";\nimport * as i2 from \"@angular/forms\";\nimport * as i3 from \"@netzero/controller/fugitive-sector-specific.controller\";\nimport * as i4 from \"@netzero/service/fugitive-sector-specific.service\";\nimport * as i5 from \"@carbon/service/gas.service\";\nimport * as i6 from \"@library/storage-service\";\nimport * as i7 from \"@library/tsc-common\";\nimport * as i8 from \"@library/toastr-service\";\nimport * as i9 from \"@angular/material/core\";\nimport * as i10 from \"@angular/material/tooltip\";\nimport * as i11 from \"@angular/material/form-field\";\nimport * as i12 from \"@angular/material/input\";\nimport * as i13 from \"@angular/common\";\nimport * as i14 from \"@angular/material/select\";\nimport * as i15 from \"ngx-mat-select-search\";\nconst _c0 = [\"header\"];\nconst _c1 = [\"footer\"];\nconst _c2 = [\"body\"];\nfunction FssCuComponent_mat_error_17_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"mat-error\");\n    i0.ɵɵtext(1);\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const ctx_r2 = i0.ɵɵnextContext();\n    i0.ɵɵadvance(1);\n    i0.ɵɵtextInterpolate1(\" \", ctx_r2.FormErrorEnum.REQUIRED, \" \");\n  }\n}\nfunction FssCuComponent_mat_option_24_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"mat-option\", 25);\n    i0.ɵɵtext(1);\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const gas_r7 = ctx.$implicit;\n    i0.ɵɵproperty(\"value\", gas_r7.id);\n    i0.ɵɵadvance(1);\n    i0.ɵɵtextInterpolate1(\" \", gas_r7.name, \" \");\n  }\n}\nfunction FssCuComponent_mat_error_26_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"mat-error\");\n    i0.ɵɵtext(1);\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const ctx_r4 = i0.ɵɵnextContext();\n    i0.ɵɵadvance(1);\n    i0.ɵɵtextInterpolate1(\" \", ctx_r4.FormErrorEnum.REQUIRED, \" \");\n  }\n}\nconst _c3 = function (a0) {\n  return {\n    \"disabled\": a0\n  };\n};\n// /tsc-library/\nexport let FssCuComponent = /*#__PURE__*/(() => {\n  class FssCuComponent {\n    constructor(data, dialogRef, renderer, formBuilder, fugitiveSectorSpecificController, fugitiveSectorSpecificService, gasService,\n    // tsc-library\n    storageService, tSCCommonService, toastrService\n    // /tsc-library/\n    ) {\n      this.data = data;\n      this.dialogRef = dialogRef;\n      this.renderer = renderer;\n      this.formBuilder = formBuilder;\n      this.fugitiveSectorSpecificController = fugitiveSectorSpecificController;\n      this.fugitiveSectorSpecificService = fugitiveSectorSpecificService;\n      this.gasService = gasService;\n      this.tSCCommonService = tSCCommonService;\n      this.toastrService = toastrService;\n      this.MATERIAL_CONSTANT = MATERIAL_CONSTANT;\n      this.COMMON_CONSTANT = COMMON_CONSTANT;\n      this.ButtonTooltipEnum = ButtonTooltipEnum;\n      this.FormAction = FormAction;\n      this.MaterialFormFieldAppearance = MaterialFormFieldAppearance;\n      this.FormErrorEnum = FormErrorEnum;\n      this.pageTitle = 'Sector Specific Fugitive Source';\n      this.pageSubtitle = '';\n      this.maxLength = 100;\n      this.isEqual = true;\n      this.descriptionCharMaxLength = 100;\n      this.allGas = [];\n      this.gasSelectSearch = new MatSelectSearchService(['name']);\n      this.errorHandling = (formGroup, controlPath, error) => {\n        return formGroup.get(controlPath).hasError(error);\n      };\n      this.charactersRemainingFn = fg => {\n        let description = fg.get('description').value;\n        if (description) return this.maxLength - description.length;else return this.maxLength;\n      };\n      this.currentOrgID = storageService.getStorage('currentOrgID');\n      this.action = data.action;\n      this.sourceID = data.sourceID;\n    }\n    ngOnInit() {\n      this.sourceFGInit();\n      this.getAllGas();\n      if (this.action == FormAction.UPDATE) {\n        this.getSourceByID(this.currentOrgID, this.sourceID);\n      }\n    }\n    ngAfterViewInit() {\n      this.heightHandler();\n    }\n    sourceFGInit() {\n      this.sourceFG = this.formBuilder.group({\n        name: [, Validators.required],\n        gasID: [, Validators.required],\n        description: ['', [Validators.maxLength(100)]]\n      });\n    }\n    heightHandler() {\n      const headerHeight = this.header.nativeElement.offsetHeight;\n      const footerHeight = this.footer.nativeElement.offsetHeight;\n      const offsetHeight = 'calc(100vh - ' + (headerHeight + footerHeight + 24) + 'px)';\n      this.renderer.setStyle(this.body.nativeElement, 'height', offsetHeight);\n      this.renderer.setStyle(this.body.nativeElement, 'max-height', offsetHeight);\n    }\n    getAllGas() {\n      return __awaiter(this, void 0, void 0, function* () {\n        this.allGas = yield this.gasService.getGas();\n        this.gasSelectSearch.entityArr = this.allGas;\n        this.gasSelectSearch.createSubscription();\n      });\n    }\n    getSourceByID(orgID, sourceID) {\n      return __awaiter(this, void 0, void 0, function* () {\n        console.log('in getSourceByID', orgID, sourceID);\n        this.source = yield this.fugitiveSectorSpecificService.getSourceByID(orgID, sourceID);\n        console.log('this.source', this.source);\n        this.patchSource(this.source);\n      });\n    }\n    patchSource(source) {\n      this.sourceFG.patchValue(source);\n      this.intialObject = this.sourceFG.value;\n      this.sourceFG.valueChanges.subscribe(() => {\n        this.isEqual = isEqual(this.intialObject, this.sourceFG.value);\n      });\n    }\n    onSubmit(action) {\n      if (this.sourceFG.invalid) {\n        this.toastrService.openToast(InvalidForm.INVALID_FORM_TITLE, InvalidForm.INVALID_FORM_MESSAGE, ToastrColor.ERROR);\n        return;\n      } else {\n        switch (action) {\n          case FormAction.CREATE:\n            this.createSource();\n            break;\n          case FormAction.UPDATE:\n            this.updateSource();\n            break;\n        }\n      }\n    }\n    createSource() {\n      this.fugitiveSectorSpecificController.createSource(this.currentOrgID, this.sourceFG.value).subscribe(response => {\n        let result;\n        result = {\n          status: DialogResponseEnum.SUCCESS\n        };\n        this.dialogRef.close(result);\n      }, error => {\n        console.log('error in createSource -', error);\n      });\n    }\n    updateSource() {\n      this.fugitiveSectorSpecificController.updateSourceByID(this.currentOrgID, this.sourceID, this.sourceFG.value).subscribe(response => {\n        let result;\n        result = {\n          status: DialogResponseEnum.SUCCESS\n        };\n        this.dialogRef.close(result);\n      }, error => {\n        console.log('error in updateSource -', error);\n      });\n    }\n  }\n  FssCuComponent.ɵfac = function FssCuComponent_Factory(t) {\n    return new (t || FssCuComponent)(i0.ɵɵdirectiveInject(MAT_DIALOG_DATA), i0.ɵɵdirectiveInject(i1.MatDialogRef), i0.ɵɵdirectiveInject(i0.Renderer2), i0.ɵɵdirectiveInject(i2.FormBuilder), i0.ɵɵdirectiveInject(i3.FugitiveSectorSpecificController), i0.ɵɵdirectiveInject(i4.FugitiveSectorSpecificService), i0.ɵɵdirectiveInject(i5.GasService), i0.ɵɵdirectiveInject(i6.StorageService), i0.ɵɵdirectiveInject(i7.TSCCommonService), i0.ɵɵdirectiveInject(i8.ToastrService));\n  };\n  FssCuComponent.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n    type: FssCuComponent,\n    selectors: [[\"app-fss-cu\"]],\n    viewQuery: function FssCuComponent_Query(rf, ctx) {\n      if (rf & 1) {\n        i0.ɵɵviewQuery(_c0, 5);\n        i0.ɵɵviewQuery(_c1, 5);\n        i0.ɵɵviewQuery(_c2, 5);\n      }\n      if (rf & 2) {\n        let _t;\n        i0.ɵɵqueryRefresh(_t = i0.ɵɵloadQuery()) && (ctx.header = _t.first);\n        i0.ɵɵqueryRefresh(_t = i0.ɵɵloadQuery()) && (ctx.footer = _t.first);\n        i0.ɵɵqueryRefresh(_t = i0.ɵɵloadQuery()) && (ctx.body = _t.first);\n      }\n    },\n    decls: 44,\n    vars: 26,\n    consts: [[1, \"headerContainer\", \"p-0\"], [\"header\", \"\"], [1, \"headerLeftContainer\"], [1, \"pageTitle\"], [1, \"headerRightContainer\"], [1, \"headerRightContainerInner\"], [\"matRipple\", \"\", \"matTooltipPosition\", \"below\", \"mat-dialog-close\", \"\", 1, \"btn\", \"btn-sm\", \"centerAlign\", \"py-1\", \"iconBtn\", 3, \"matRippleCentered\", \"matTooltip\"], [1, \"material-symbols-outlined\"], [1, \"mat-typography\", \"customScrollBar\", \"pt-2\"], [\"body\", \"\"], [3, \"formGroup\", \"ngSubmit\"], [1, \"matFieldWidth100\", 3, \"appearance\"], [1, \"formLabel\"], [\"type\", \"text\", \"placeholder\", \"Source name\", \"matInput\", \"\", \"formControlName\", \"name\", \"required\", \"\", 1, \"formPlaceholder\"], [4, \"ngIf\"], [\"formControlName\", \"gasID\", \"multiple\", \"\", \"required\", \"\"], [\"placeholderLabel\", \"Search by gas name\", 3, \"formControl\", \"noEntriesFoundLabel\"], [3, \"value\", 4, \"ngFor\", \"ngForOf\"], [\"matInput\", \"\", \"matTextareaAutosize\", \"\", \"matAutosizeMinRows\", \"2\", \"matAutosizeMaxRows\", \"10\", \"formControlName\", \"description\", 3, \"maxlength\"], [\"type\", \"submit\", 1, \"d-none\"], [\"formSubmitBtn\", \"\"], [1, \"tscDialogFooter\"], [\"footer\", \"\"], [\"matRipple\", \"\", \"matTooltipPosition\", \"below\", 1, \"btn\", \"btn-sm\", \"btn-success\", 3, \"ngClass\", \"matRippleCentered\", \"matTooltip\", \"click\"], [\"mat-dialog-close\", \"\", \"matRipple\", \"\", 1, \"btn\", \"btn-sm\", \"btn-secondary\", \"me-2\", 3, \"matRippleCentered\"], [3, \"value\"]],\n    template: function FssCuComponent_Template(rf, ctx) {\n      if (rf & 1) {\n        const _r8 = i0.ɵɵgetCurrentView();\n        i0.ɵɵelementStart(0, \"div\", 0, 1);\n        i0.ɵɵelementStart(2, \"div\", 2);\n        i0.ɵɵelementStart(3, \"div\", 3);\n        i0.ɵɵtext(4);\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(5, \"div\", 4);\n        i0.ɵɵelementStart(6, \"div\", 5);\n        i0.ɵɵelementStart(7, \"button\", 6);\n        i0.ɵɵelementStart(8, \"span\", 7);\n        i0.ɵɵtext(9, \" close \");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(10, \"mat-dialog-content\", 8, 9);\n        i0.ɵɵelementStart(12, \"form\", 10);\n        i0.ɵɵlistener(\"ngSubmit\", function FssCuComponent_Template_form_ngSubmit_12_listener() {\n          return ctx.onSubmit(ctx.action);\n        });\n        i0.ɵɵelementStart(13, \"mat-form-field\", 11);\n        i0.ɵɵelementStart(14, \"mat-label\", 12);\n        i0.ɵɵtext(15, \"Source name\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelement(16, \"input\", 13);\n        i0.ɵɵtemplate(17, FssCuComponent_mat_error_17_Template, 2, 1, \"mat-error\", 14);\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(18, \"mat-form-field\", 11);\n        i0.ɵɵelementStart(19, \"mat-label\", 12);\n        i0.ɵɵtext(20, \"Select one or more gases released\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(21, \"mat-select\", 15);\n        i0.ɵɵelementStart(22, \"mat-option\");\n        i0.ɵɵelement(23, \"ngx-mat-select-search\", 16);\n        i0.ɵɵelementEnd();\n        i0.ɵɵtemplate(24, FssCuComponent_mat_option_24_Template, 2, 2, \"mat-option\", 17);\n        i0.ɵɵpipe(25, \"async\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵtemplate(26, FssCuComponent_mat_error_26_Template, 2, 1, \"mat-error\", 14);\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(27, \"mat-form-field\", 11);\n        i0.ɵɵelementStart(28, \"mat-label\", 12);\n        i0.ɵɵtext(29, \"Description\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelement(30, \"textarea\", 18);\n        i0.ɵɵelementStart(31, \"mat-hint\");\n        i0.ɵɵtext(32, \"Total number of character remaining: \");\n        i0.ɵɵelementStart(33, \"span\");\n        i0.ɵɵtext(34);\n        i0.ɵɵelementEnd();\n        i0.ɵɵtext(35);\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementEnd();\n        i0.ɵɵelement(36, \"button\", 19, 20);\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(38, \"div\", 21, 22);\n        i0.ɵɵelementStart(40, \"button\", 23);\n        i0.ɵɵlistener(\"click\", function FssCuComponent_Template_button_click_40_listener() {\n          i0.ɵɵrestoreView(_r8);\n          const _r5 = i0.ɵɵreference(37);\n          return _r5.click();\n        });\n        i0.ɵɵtext(41);\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(42, \"button\", 24);\n        i0.ɵɵtext(43, \"Cancel\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementEnd();\n      }\n      if (rf & 2) {\n        i0.ɵɵadvance(4);\n        i0.ɵɵtextInterpolate(ctx.pageTitle);\n        i0.ɵɵadvance(3);\n        i0.ɵɵproperty(\"matRippleCentered\", ctx.MATERIAL_CONSTANT.MAT_RIPPLE_CENTER)(\"matTooltip\", ctx.ButtonTooltipEnum.CLOSE);\n        i0.ɵɵadvance(5);\n        i0.ɵɵproperty(\"formGroup\", ctx.sourceFG);\n        i0.ɵɵadvance(1);\n        i0.ɵɵproperty(\"appearance\", ctx.MaterialFormFieldAppearance.FORM_FIELD_APPEARANCE);\n        i0.ɵɵadvance(4);\n        i0.ɵɵproperty(\"ngIf\", ctx.errorHandling(ctx.sourceFG, \"name\", \"required\"));\n        i0.ɵɵadvance(1);\n        i0.ɵɵproperty(\"appearance\", ctx.MaterialFormFieldAppearance.FORM_FIELD_APPEARANCE);\n        i0.ɵɵadvance(5);\n        i0.ɵɵproperty(\"formControl\", ctx.gasSelectSearch.filterFC)(\"noEntriesFoundLabel\", ctx.COMMON_CONSTANT.NO_MATCH_FOUND);\n        i0.ɵɵadvance(1);\n        i0.ɵɵproperty(\"ngForOf\", i0.ɵɵpipeBind1(25, 22, ctx.gasSelectSearch.filteredEntities));\n        i0.ɵɵadvance(2);\n        i0.ɵɵproperty(\"ngIf\", ctx.errorHandling(ctx.sourceFG, \"gasID\", \"required\"));\n        i0.ɵɵadvance(1);\n        i0.ɵɵproperty(\"appearance\", ctx.MaterialFormFieldAppearance.FORM_FIELD_APPEARANCE);\n        i0.ɵɵadvance(3);\n        i0.ɵɵproperty(\"maxlength\", ctx.maxLength);\n        i0.ɵɵadvance(3);\n        i0.ɵɵclassMap(ctx.charactersRemainingFn(ctx.sourceFG) < 20 ? \"text-danger\" : \"\");\n        i0.ɵɵadvance(1);\n        i0.ɵɵtextInterpolate(ctx.charactersRemainingFn(ctx.sourceFG));\n        i0.ɵɵadvance(1);\n        i0.ɵɵtextInterpolate1(\" /\", ctx.maxLength, \" \");\n        i0.ɵɵadvance(5);\n        i0.ɵɵproperty(\"ngClass\", i0.ɵɵpureFunction1(24, _c3, ctx.isEqual && ctx.action == ctx.FormAction.UPDATE))(\"matRippleCentered\", ctx.MATERIAL_CONSTANT.MAT_RIPPLE_CENTER)(\"matTooltip\", ctx.ButtonTooltipEnum.NO_CHANGE);\n        i0.ɵɵadvance(1);\n        i0.ɵɵtextInterpolate1(\" \", ctx.tSCCommonService.getButtonLabel(ctx.action), \"\");\n        i0.ɵɵadvance(1);\n        i0.ɵɵproperty(\"matRippleCentered\", ctx.MATERIAL_CONSTANT.MAT_RIPPLE_CENTER);\n      }\n    },\n    directives: [i9.MatRipple, i1.MatDialogClose, i10.MatTooltip, i1.MatDialogContent, i2.ɵNgNoValidate, i2.NgControlStatusGroup, i2.FormGroupDirective, i11.MatFormField, i11.MatLabel, i12.MatInput, i2.DefaultValueAccessor, i2.NgControlStatus, i2.FormControlName, i2.RequiredValidator, i13.NgIf, i14.MatSelect, i9.MatOption, i15.MatSelectSearchComponent, i2.FormControlDirective, i13.NgForOf, i12.MatTextareaAutosize, i2.MaxLengthValidator, i11.MatHint, i13.NgClass, i11.MatError],\n    pipes: [i13.AsyncPipe],\n    encapsulation: 2\n  });\n  return FssCuComponent;\n})();","map":null,"metadata":{},"sourceType":"module"}