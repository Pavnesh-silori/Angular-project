{"ast":null,"code":"import { __awaiter } from \"tslib\";\nimport { EventEmitter } from '@angular/core';\nimport { TotalAmountComponent } from './total-amount/total-amount.component';\nimport { MeterReadingComponent } from './meter-reading/meter-reading.component';\nimport { DataInputMethodKeyIDEnum } from '@carbon/enum/data-input-method.enum';\nimport { DataCollectionMethodKeyIDEnum } from '@carbon/enum/data-collection-method.enum';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/forms\";\nimport * as i2 from \"@library/tsc-common\";\nimport * as i3 from \"@carbon/service/data-collection-method.service\";\nimport * as i4 from \"@angular/router\";\nimport * as i5 from \"@angular/common\";\nimport * as i6 from \"./total-amount/total-amount.component\";\nimport * as i7 from \"./meter-reading/meter-reading.component\";\nfunction WasteGasExportCreateComponent_app_total_amount_0_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r3 = i0.ɵɵgetCurrentView();\n    i0.ɵɵelementStart(0, \"app-total-amount\", 1);\n    i0.ɵɵlistener(\"formGroupChange\", function WasteGasExportCreateComponent_app_total_amount_0_Template_app_total_amount_formGroupChange_0_listener($event) {\n      i0.ɵɵrestoreView(_r3);\n      const ctx_r2 = i0.ɵɵnextContext();\n      return ctx_r2.onChildFormGroupChange($event);\n    });\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const ctx_r0 = i0.ɵɵnextContext();\n    i0.ɵɵproperty(\"activityConfig\", ctx_r0.activityConfig)(\"activityDataFG\", ctx_r0.activityDataFG)(\"defaultDataCollectionMethodID\", ctx_r0.defaultDataCollectionMethodID)(\"docFileList\", ctx_r0.docFileList);\n  }\n}\nfunction WasteGasExportCreateComponent_app_meter_reading_1_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r5 = i0.ɵɵgetCurrentView();\n    i0.ɵɵelementStart(0, \"app-meter-reading\", 1);\n    i0.ɵɵlistener(\"formGroupChange\", function WasteGasExportCreateComponent_app_meter_reading_1_Template_app_meter_reading_formGroupChange_0_listener($event) {\n      i0.ɵɵrestoreView(_r5);\n      const ctx_r4 = i0.ɵɵnextContext();\n      return ctx_r4.onChildFormGroupChange($event);\n    });\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const ctx_r1 = i0.ɵɵnextContext();\n    i0.ɵɵproperty(\"activityConfig\", ctx_r1.activityConfig)(\"activityDataFG\", ctx_r1.activityDataFG)(\"defaultDataCollectionMethodID\", ctx_r1.defaultDataCollectionMethodID)(\"docFileList\", ctx_r1.docFileList);\n  }\n}\n// / tsc-library\nexport let WasteGasExportCreateComponent = /*#__PURE__*/(() => {\n  class WasteGasExportCreateComponent {\n    constructor(formBuilder, tscCommonService, dataCollectionMethodService, activatedRoute) {\n      this.formBuilder = formBuilder;\n      this.tscCommonService = tscCommonService;\n      this.dataCollectionMethodService = dataCollectionMethodService;\n      this.DataInputMethodKeyIDEnum = DataInputMethodKeyIDEnum;\n      this.dataInputMethoutStdKeyID = null;\n      this.docFileList = [];\n      this.isUpdate = false;\n      this.action = null;\n      this.validity = new EventEmitter();\n      activatedRoute.queryParams.subscribe(qParams => {\n        this.action = qParams['action'];\n        this.isUpdate = this.action == 'update';\n      });\n    }\n    ngOnInit() {\n      this.activityDataFG = this.formBuilder.group({\n        activityData: this.formBuilder.array([])\n      });\n      this.getDataCollectionMethod();\n    }\n    getDataCollectionMethod() {\n      return __awaiter(this, void 0, void 0, function* () {\n        let dataCollectionMethods = yield this.dataCollectionMethodService.getDataCollectionMethod();\n        let manual_entry = this.tscCommonService.getUniqueObject(dataCollectionMethods, 'keyID', DataCollectionMethodKeyIDEnum.MANUAL_ENTRY);\n        this.defaultDataCollectionMethodID = manual_entry.dataCollectionMethodID;\n      });\n    }\n    activityDataValidity() {\n      this.activityDataFG.valueChanges.subscribe(() => this.validity.emit(!this.activityDataFG.invalid));\n    }\n    getActivityData() {\n      return {\n        'activityData': this.activityData.activityData,\n        'activityDataFile': this.docFileList\n      };\n    }\n    updateActivityData() {\n      return this.activityData.activityData[0];\n    }\n    getConfiguration(configuration) {\n      return __awaiter(this, void 0, void 0, function* () {\n        if (configuration != null) {\n          this.activityConfig = configuration;\n          let activityConfigData = configuration.activityConfigData;\n          this.dataInputMethoutStdKeyID = activityConfigData.dataInputMethod.keyID;\n          if (this.isUpdate) {\n            this.docFileList = new Array(1).fill(null);\n          } else {\n            let activityConfigSource = configuration.activityConfigSource;\n            this.docFileList = new Array(activityConfigSource[0].source.length).fill(null);\n          }\n        }\n      });\n    }\n    onChildFormGroupChange(formGroup) {\n      // Use the child component's FormGroup here\n      this.activityDataFG = formGroup;\n    }\n    isValidForm() {\n      if (this.activityDataFG.invalid) {\n        this.activityDataFG.markAllAsTouched();\n        return false;\n      }\n      this.activityData = JSON.parse(JSON.stringify(this.activityDataFG.getRawValue()));\n      return true;\n    }\n  }\n  WasteGasExportCreateComponent.ɵfac = function WasteGasExportCreateComponent_Factory(t) {\n    return new (t || WasteGasExportCreateComponent)(i0.ɵɵdirectiveInject(i1.FormBuilder), i0.ɵɵdirectiveInject(i2.TSCCommonService), i0.ɵɵdirectiveInject(i3.DataCollectionMethodService), i0.ɵɵdirectiveInject(i4.ActivatedRoute));\n  };\n  WasteGasExportCreateComponent.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n    type: WasteGasExportCreateComponent,\n    selectors: [[\"app-create\"]],\n    viewQuery: function WasteGasExportCreateComponent_Query(rf, ctx) {\n      if (rf & 1) {\n        i0.ɵɵviewQuery(TotalAmountComponent, 5);\n        i0.ɵɵviewQuery(MeterReadingComponent, 5);\n      }\n      if (rf & 2) {\n        let _t;\n        i0.ɵɵqueryRefresh(_t = i0.ɵɵloadQuery()) && (ctx.totalAmountComponent = _t.first);\n        i0.ɵɵqueryRefresh(_t = i0.ɵɵloadQuery()) && (ctx.meterReadingComponent = _t.first);\n      }\n    },\n    decls: 2,\n    vars: 2,\n    consts: [[3, \"activityConfig\", \"activityDataFG\", \"defaultDataCollectionMethodID\", \"docFileList\", \"formGroupChange\", 4, \"ngIf\"], [3, \"activityConfig\", \"activityDataFG\", \"defaultDataCollectionMethodID\", \"docFileList\", \"formGroupChange\"]],\n    template: function WasteGasExportCreateComponent_Template(rf, ctx) {\n      if (rf & 1) {\n        i0.ɵɵtemplate(0, WasteGasExportCreateComponent_app_total_amount_0_Template, 1, 4, \"app-total-amount\", 0);\n        i0.ɵɵtemplate(1, WasteGasExportCreateComponent_app_meter_reading_1_Template, 1, 4, \"app-meter-reading\", 0);\n      }\n      if (rf & 2) {\n        i0.ɵɵproperty(\"ngIf\", ctx.dataInputMethoutStdKeyID == ctx.DataInputMethodKeyIDEnum.TOTAL_AMOUNT);\n        i0.ɵɵadvance(1);\n        i0.ɵɵproperty(\"ngIf\", ctx.dataInputMethoutStdKeyID == ctx.DataInputMethodKeyIDEnum.METER_READING);\n      }\n    },\n    directives: [i5.NgIf, i6.TotalAmountComponent, i7.MeterReadingComponent],\n    encapsulation: 2\n  });\n  return WasteGasExportCreateComponent;\n})();","map":null,"metadata":{},"sourceType":"module"}