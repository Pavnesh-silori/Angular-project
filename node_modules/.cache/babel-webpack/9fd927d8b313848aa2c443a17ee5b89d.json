{"ast":null,"code":"import { faLock } from '@fortawesome/free-solid-svg-icons';\nimport { ReportStatusEnum } from '@report-framework/enum/report-status.enum';\nimport { RecordConfigInterval } from '@report-framework/model/report-config-interval.model';\n// tsc-library\nimport { COMMON_CONSTANT } from '@library/tsc-common';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/router\";\nimport * as i2 from \"@report-framework/controller/report-config-interval.controller\";\nimport * as i3 from \"@report-framework/controller/pdf.controller\";\nimport * as i4 from \"@library/storage-service\";\nimport * as i5 from \"@angular/material/card\";\nimport * as i6 from \"@angular/common\";\nimport * as i7 from \"@angular/material/tooltip\";\nimport * as i8 from \"@fortawesome/angular-fontawesome\";\nimport * as i9 from \"ng-circle-progress\";\nfunction IntervalConfigDetailsComponent_span_13_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"span\", 26);\n    i0.ɵɵtext(1, \" Ongoing \");\n    i0.ɵɵelementEnd();\n  }\n}\nfunction IntervalConfigDetailsComponent_span_14_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"span\", 27);\n    i0.ɵɵtext(1, \" Scheduled \");\n    i0.ɵɵelementEnd();\n  }\n}\nfunction IntervalConfigDetailsComponent_span_15_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"span\", 28);\n    i0.ɵɵtext(1, \" Complete \");\n    i0.ɵɵelementEnd();\n  }\n}\nfunction IntervalConfigDetailsComponent_span_16_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"span\");\n    i0.ɵɵtext(1);\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const ctx_r3 = i0.ɵɵnextContext();\n    i0.ɵɵadvance(1);\n    i0.ɵɵtextInterpolate1(\" \", ctx_r3.configIntervalRes.status, \" \");\n  }\n}\nfunction IntervalConfigDetailsComponent_ng_container_22_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementContainer(0);\n  }\n}\nfunction IntervalConfigDetailsComponent_ng_container_23_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementContainer(0);\n  }\n}\nfunction IntervalConfigDetailsComponent_ng_container_34_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementContainer(0);\n  }\n}\nfunction IntervalConfigDetailsComponent_ng_container_35_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementContainer(0);\n  }\n}\nfunction IntervalConfigDetailsComponent_ng_template_46_span_5_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"span\", 30);\n    i0.ɵɵtext(1);\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const value_r14 = i0.ɵɵnextContext().value;\n    i0.ɵɵadvance(1);\n    i0.ɵɵtextInterpolate1(\" \", value_r14, \" \");\n  }\n}\nfunction IntervalConfigDetailsComponent_ng_template_46_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\", 19);\n    i0.ɵɵelementStart(1, \"div\", 3);\n    i0.ɵɵelementStart(2, \"div\", 5);\n    i0.ɵɵelementStart(3, \"div\", 6);\n    i0.ɵɵtext(4);\n    i0.ɵɵtemplate(5, IntervalConfigDetailsComponent_ng_template_46_span_5_Template, 2, 1, \"span\", 29);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const title_r13 = ctx.title;\n    const value_r14 = ctx.value;\n    i0.ɵɵnextContext();\n    const _r11 = i0.ɵɵreference(49);\n    i0.ɵɵadvance(4);\n    i0.ɵɵtextInterpolate1(\" \", title_r13, \" \");\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngIf\", value_r14)(\"ngIfElse\", _r11);\n  }\n}\nfunction IntervalConfigDetailsComponent_ng_template_48_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"span\", 30);\n    i0.ɵɵtext(1);\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const ctx_r12 = i0.ɵɵnextContext();\n    i0.ɵɵadvance(1);\n    i0.ɵɵtextInterpolate1(\" \", ctx_r12.COMMON_CONSTANT.HYPHEN, \" \");\n  }\n}\nconst _c0 = function (a0, a1, a2) {\n  return {\n    \"btn-success\": a0,\n    \"custom-cursor\": a1,\n    \"custom-not-allowed\": a2\n  };\n};\nconst _c1 = function (a1) {\n  return {\n    title: \"Reporting framework:\",\n    value: a1\n  };\n};\nconst _c2 = function (a1) {\n  return {\n    title: \"Reporting interval:\",\n    value: a1\n  };\n};\nconst _c3 = function (a1) {\n  return {\n    title: \"Reporting year:\",\n    value: a1\n  };\n};\nconst _c4 = function (a1) {\n  return {\n    title: \"Reporting sector:\",\n    value: a1\n  };\n};\n// /tsc-library\nexport let IntervalConfigDetailsComponent = /*#__PURE__*/(() => {\n  class IntervalConfigDetailsComponent {\n    constructor(router, reportConfigIntervalController, pdfController, storageService) {\n      this.router = router;\n      this.reportConfigIntervalController = reportConfigIntervalController;\n      this.pdfController = pdfController;\n      this.storageService = storageService;\n      this.configIntervalID = null;\n      this.refresh = false;\n      this.COMMON_CONSTANT = COMMON_CONSTANT;\n      this.ReportStatusEnum = ReportStatusEnum;\n      this.faLock = faLock;\n      this.configIntervalRes = new RecordConfigInterval();\n      this.circleA = {\n        radius: 15,\n        space: -10,\n        outerStrokeGradient: true,\n        outerStrokeWidth: 7,\n        outerStrokeColor: \"#4882c2\",\n        outerStrokeGradientStopColor: \"#53a9ff\",\n        innerStrokeColor: \"#e7e8ea\",\n        innerStrokeWidth: 7,\n        animateTitle: false,\n        animationDuration: 1000,\n        showTitle: false,\n        showSubtitle: false,\n        showUnits: false,\n        showBackground: false,\n        progress: 10\n      };\n    }\n    ngOnInit() {\n      this.currentOrgID = parseInt(this.storageService.getStorage('currentOrgID'));\n      this.getConfigIntervalByID();\n    }\n    ngOnChanges(changes) {\n      var _a;\n      if (!((_a = changes.refresh) === null || _a === void 0 ? void 0 : _a.firstChange)) {\n        this.getConfigIntervalByID();\n      }\n    }\n    getConfigIntervalByID() {\n      this.reportConfigIntervalController.getReportConfigInterrvalByID(this.currentOrgID, this.configIntervalID).subscribe(res => {\n        this.configIntervalRes = res;\n      }, error => {\n        console.log('error in getRecordDetails -', error);\n      });\n    }\n    textColor(metric, totalMetric) {\n      if (metric) {\n        let value = metric * 100 / totalMetric;\n        if (value < 33) {\n          return 'valueLess33';\n        } else if (value > 33 && value < 66) {\n          return 'valueLess66';\n        } else {\n          return 'valueGreated66';\n        }\n      }\n    }\n    // lock report \n    lockReport(configIntervalID, progressPct) {\n      if (progressPct == 100) {\n        this.pdfController.lockReport(this.currentOrgID, configIntervalID).subscribe(response => {\n          this.router.navigate([`/reporting-framework/tab/history/page`]);\n        }, error => {\n          console.log('error in unlockReport() -', error);\n        });\n      }\n    }\n  }\n  IntervalConfigDetailsComponent.ɵfac = function IntervalConfigDetailsComponent_Factory(t) {\n    return new (t || IntervalConfigDetailsComponent)(i0.ɵɵdirectiveInject(i1.Router), i0.ɵɵdirectiveInject(i2.ReportConfigIntervalController), i0.ɵɵdirectiveInject(i3.PdfController), i0.ɵɵdirectiveInject(i4.StorageService));\n  };\n  IntervalConfigDetailsComponent.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n    type: IntervalConfigDetailsComponent,\n    selectors: [[\"app-interval-config-details\"]],\n    inputs: {\n      configIntervalID: \"configIntervalID\",\n      refresh: \"refresh\"\n    },\n    features: [i0.ɵɵNgOnChangesFeature],\n    decls: 50,\n    vars: 35,\n    consts: [[1, \"card-body\"], [1, \"border\", \"cardOverwrite\"], [1, \"row\", \"pb-1\"], [1, \"row\"], [1, \"col-sm-8\"], [1, \"col-sm-12\", \"centerAlignVertical\"], [1, \"col-form-label\", \"ms-2\"], [1, \"fw-bold\", \"fs-3\"], [1, \"col-sm-4\", \"centerAlignVertical\"], [1, \"col-form-value\", \"ms-2\"], [3, \"ngSwitch\"], [\"class\", \"badge rounded-pill bg-primary\", 4, \"ngSwitchCase\"], [\"class\", \"badge rounded-pill bg-warning\", 4, \"ngSwitchCase\"], [\"class\", \"badge rounded-pill bg-success\", 4, \"ngSwitchCase\"], [4, \"ngSwitchDefault\"], [\"type\", \"button\", \"matTooltipPosition\", \"above\", 1, \"btn\", \"btn-sm\", \"btn-success\", \"ms-3\", 3, \"matTooltip\", \"ngClass\", \"click\"], [\"tooltip\", \"matTooltip\"], [3, \"icon\"], [4, \"ngTemplateOutlet\", \"ngTemplateOutletContext\"], [1, \"col-sm-4\"], [1, \"col-sm-5\", \"col-form-label\", \"ms-2\"], [1, \"fw-bold\"], [3, \"options\", \"renderOnClick\", \"percent\"], [3, \"ngClass\"], [\"value\", \"\"], [\"hyphen\", \"\"], [1, \"badge\", \"rounded-pill\", \"bg-primary\"], [1, \"badge\", \"rounded-pill\", \"bg-warning\"], [1, \"badge\", \"rounded-pill\", \"bg-success\"], [\"class\", \"fw-bold ms-3\", 4, \"ngIf\", \"ngIfElse\"], [1, \"fw-bold\", \"ms-3\"]],\n    template: function IntervalConfigDetailsComponent_Template(rf, ctx) {\n      if (rf & 1) {\n        i0.ɵɵelementStart(0, \"div\", 0);\n        i0.ɵɵelementStart(1, \"mat-card\", 1);\n        i0.ɵɵelementStart(2, \"div\", 2);\n        i0.ɵɵelementStart(3, \"div\", 3);\n        i0.ɵɵelementStart(4, \"div\", 4);\n        i0.ɵɵelementStart(5, \"div\", 3);\n        i0.ɵɵelementStart(6, \"div\", 5);\n        i0.ɵɵelementStart(7, \"div\", 6);\n        i0.ɵɵelementStart(8, \"span\", 7);\n        i0.ɵɵtext(9);\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(10, \"div\", 8);\n        i0.ɵɵelementStart(11, \"div\", 9);\n        i0.ɵɵelementContainerStart(12, 10);\n        i0.ɵɵtemplate(13, IntervalConfigDetailsComponent_span_13_Template, 2, 0, \"span\", 11);\n        i0.ɵɵtemplate(14, IntervalConfigDetailsComponent_span_14_Template, 2, 0, \"span\", 12);\n        i0.ɵɵtemplate(15, IntervalConfigDetailsComponent_span_15_Template, 2, 0, \"span\", 13);\n        i0.ɵɵtemplate(16, IntervalConfigDetailsComponent_span_16_Template, 2, 1, \"span\", 14);\n        i0.ɵɵelementContainerEnd();\n        i0.ɵɵelementStart(17, \"button\", 15, 16);\n        i0.ɵɵlistener(\"click\", function IntervalConfigDetailsComponent_Template_button_click_17_listener() {\n          return ctx.lockReport(ctx.configIntervalRes.configIntervalID, ctx.configIntervalRes.progressPct);\n        });\n        i0.ɵɵelement(19, \"fa-icon\", 17);\n        i0.ɵɵtext(20, \" Lock report \");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(21, \"div\", 3);\n        i0.ɵɵtemplate(22, IntervalConfigDetailsComponent_ng_container_22_Template, 1, 0, \"ng-container\", 18);\n        i0.ɵɵtemplate(23, IntervalConfigDetailsComponent_ng_container_23_Template, 1, 0, \"ng-container\", 18);\n        i0.ɵɵelementStart(24, \"div\", 19);\n        i0.ɵɵelementStart(25, \"div\", 3);\n        i0.ɵɵelementStart(26, \"div\", 5);\n        i0.ɵɵelementStart(27, \"div\", 20);\n        i0.ɵɵtext(28, \" Progress: \");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(29, \"div\", 19);\n        i0.ɵɵelementStart(30, \"span\", 21);\n        i0.ɵɵtext(31);\n        i0.ɵɵelement(32, \"circle-progress\", 22);\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(33, \"div\", 3);\n        i0.ɵɵtemplate(34, IntervalConfigDetailsComponent_ng_container_34_Template, 1, 0, \"ng-container\", 18);\n        i0.ɵɵtemplate(35, IntervalConfigDetailsComponent_ng_container_35_Template, 1, 0, \"ng-container\", 18);\n        i0.ɵɵelementStart(36, \"div\", 19);\n        i0.ɵɵelementStart(37, \"div\", 3);\n        i0.ɵɵelementStart(38, \"div\", 5);\n        i0.ɵɵelementStart(39, \"div\", 20);\n        i0.ɵɵtext(40, \" Unassigned metrics: \");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(41, \"div\", 19);\n        i0.ɵɵelementStart(42, \"span\", 21);\n        i0.ɵɵelementStart(43, \"span\", 23);\n        i0.ɵɵtext(44);\n        i0.ɵɵelementEnd();\n        i0.ɵɵtext(45);\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementEnd();\n        i0.ɵɵtemplate(46, IntervalConfigDetailsComponent_ng_template_46_Template, 6, 3, \"ng-template\", null, 24, i0.ɵɵtemplateRefExtractor);\n        i0.ɵɵtemplate(48, IntervalConfigDetailsComponent_ng_template_48_Template, 2, 1, \"ng-template\", null, 25, i0.ɵɵtemplateRefExtractor);\n      }\n      if (rf & 2) {\n        const _r9 = i0.ɵɵreference(47);\n        i0.ɵɵadvance(9);\n        i0.ɵɵtextInterpolate1(\" \", ctx.configIntervalRes.configIntervalName != null ? ctx.configIntervalRes.configIntervalName : ctx.COMMON_CONSTANT.HYPHEN, \" \");\n        i0.ɵɵadvance(3);\n        i0.ɵɵproperty(\"ngSwitch\", ctx.configIntervalRes.status);\n        i0.ɵɵadvance(1);\n        i0.ɵɵproperty(\"ngSwitchCase\", ctx.ReportStatusEnum.ONGOING);\n        i0.ɵɵadvance(1);\n        i0.ɵɵproperty(\"ngSwitchCase\", ctx.ReportStatusEnum.SCHEDULED);\n        i0.ɵɵadvance(1);\n        i0.ɵɵproperty(\"ngSwitchCase\", ctx.ReportStatusEnum.COMPLETE);\n        i0.ɵɵadvance(2);\n        i0.ɵɵproperty(\"matTooltip\", ctx.configIntervalRes.progressPct != 100 ? \"Lock report get activated when progress reaches 100%\" : \"\")(\"ngClass\", i0.ɵɵpureFunction3(23, _c0, ctx.configIntervalRes.progressPct == 100, ctx.configIntervalRes.progressPct == 100, ctx.configIntervalRes.progressPct != 100));\n        i0.ɵɵadvance(2);\n        i0.ɵɵproperty(\"icon\", ctx.faLock);\n        i0.ɵɵadvance(3);\n        i0.ɵɵproperty(\"ngTemplateOutlet\", _r9)(\"ngTemplateOutletContext\", i0.ɵɵpureFunction1(27, _c1, ctx.configIntervalRes.reportingFrameworkName));\n        i0.ɵɵadvance(1);\n        i0.ɵɵproperty(\"ngTemplateOutlet\", _r9)(\"ngTemplateOutletContext\", i0.ɵɵpureFunction1(29, _c2, ctx.configIntervalRes.intervalName));\n        i0.ɵɵadvance(8);\n        i0.ɵɵtextInterpolate1(\" \", ctx.configIntervalRes.progressPct, \"% \");\n        i0.ɵɵadvance(1);\n        i0.ɵɵproperty(\"options\", ctx.circleA)(\"renderOnClick\", false)(\"percent\", ctx.configIntervalRes.progressPct);\n        i0.ɵɵadvance(2);\n        i0.ɵɵproperty(\"ngTemplateOutlet\", _r9)(\"ngTemplateOutletContext\", i0.ɵɵpureFunction1(31, _c3, ctx.configIntervalRes.reportingPeriod));\n        i0.ɵɵadvance(1);\n        i0.ɵɵproperty(\"ngTemplateOutlet\", _r9)(\"ngTemplateOutletContext\", i0.ɵɵpureFunction1(33, _c4, ctx.configIntervalRes.frameworkSector));\n        i0.ɵɵadvance(8);\n        i0.ɵɵproperty(\"ngClass\", ctx.textColor(ctx.configIntervalRes.unassignedMetric, ctx.configIntervalRes.totalMetric));\n        i0.ɵɵadvance(1);\n        i0.ɵɵtextInterpolate1(\" \", ctx.configIntervalRes.unassignedMetric != null ? ctx.configIntervalRes.unassignedMetric : ctx.COMMON_CONSTANT.HYPHEN, \" \");\n        i0.ɵɵadvance(1);\n        i0.ɵɵtextInterpolate1(\" / \", ctx.configIntervalRes.totalMetric != null ? ctx.configIntervalRes.totalMetric : ctx.COMMON_CONSTANT.HYPHEN, \" \");\n      }\n    },\n    directives: [i5.MatCard, i6.NgSwitch, i6.NgSwitchCase, i6.NgSwitchDefault, i7.MatTooltip, i6.NgClass, i8.FaIconComponent, i6.NgTemplateOutlet, i9.CircleProgressComponent, i6.NgIf],\n    styles: [\".spinnerContainer[_ngcontent-%COMP%]{display:flex;align-items:end;justify-content:end;padding-top:3px}.spinnerLabel[_ngcontent-%COMP%]{margin-left:8px}.progressStyle[_ngcontent-%COMP%]{flex:0 0 50px;align-items:center;display:flex;stroke:#d03fd8!important}.custom-cursor[_ngcontent-%COMP%]{cursor:pointer}.custom-not-allowed[_ngcontent-%COMP%]{cursor:not-allowed;background-color:#b5b2b2;border-color:#b5b2b2;color:#fff}.mat-progress-spinner[_ngcontent-%COMP%]   circle[_ngcontent-%COMP%], .mat-spinner[_ngcontent-%COMP%]   circle[_ngcontent-%COMP%]{stroke:none}.valueLess66[_ngcontent-%COMP%]{color:#0e60ff}.valueLess33[_ngcontent-%COMP%]{color:#467000}.valueGreated66[_ngcontent-%COMP%]{color:#ff3636}\"]\n  });\n  return IntervalConfigDetailsComponent;\n})();","map":null,"metadata":{},"sourceType":"module"}