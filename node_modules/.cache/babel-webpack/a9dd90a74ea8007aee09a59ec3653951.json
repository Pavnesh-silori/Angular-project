{"ast":null,"code":"import { __awaiter } from \"tslib\";\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@carbon/controller/fuel.controller\";\nexport let FuelService = /*#__PURE__*/(() => {\n  class FuelService {\n    constructor(fuelController) {\n      this.fuelController = fuelController;\n    }\n    getFuelByActivityKeyID(activityKeyID) {\n      return __awaiter(this, void 0, void 0, function* () {\n        let fuel;\n        try {\n          fuel = yield this.fuelController.getFuelByActivityKeyID(activityKeyID).toPromise();\n          if (fuel) {\n            return fuel;\n          } else {\n            return fuel;\n          }\n        } catch (error) {\n          console.log('Error -', error);\n          return fuel;\n        }\n      });\n    }\n    getFuelSource() {\n      return __awaiter(this, void 0, void 0, function* () {\n        let fuel;\n        try {\n          fuel = yield this.fuelController.getFuelSource().toPromise();\n          if (fuel) {\n            return fuel;\n          } else {\n            return fuel;\n          }\n        } catch (error) {\n          console.log('Error -', error);\n          return fuel;\n        }\n      });\n    }\n    getFuelHhv(orgID, fuelID) {\n      return __awaiter(this, void 0, void 0, function* () {\n        let hhv;\n        try {\n          hhv = yield this.fuelController.getHhv(orgID, fuelID).toPromise();\n          if (hhv) {\n            return hhv;\n          } else {\n            return hhv;\n          }\n        } catch (error) {\n          console.log('Error -', error);\n          return hhv;\n        }\n      });\n    }\n  }\n  FuelService.ɵfac = function FuelService_Factory(t) {\n    return new (t || FuelService)(i0.ɵɵinject(i1.FuelController));\n  };\n  FuelService.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n    token: FuelService,\n    factory: FuelService.ɵfac,\n    providedIn: 'root'\n  });\n  return FuelService;\n})();","map":null,"metadata":{},"sourceType":"module"}