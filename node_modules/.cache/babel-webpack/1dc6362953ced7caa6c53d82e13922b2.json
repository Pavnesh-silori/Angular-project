{"ast":null,"code":"import { __awaiter } from \"tslib\";\nimport { EventEmitter } from '@angular/core';\nimport { Validators } from '@angular/forms';\nimport * as moment from 'moment';\nimport { FrequencyKeyIDEnum } from '@report-framework/enum/frequency.enum';\nimport { ReportingPrefenceForReportDetail } from '@report-framework/model/reporting-preference.model';\nimport { ToastrColor } from '@library/toastr-service';\nimport { ButtonLabelEnum, COMMON_CONSTANT, FormAction, InvalidForm, MatSelectSearchService, MaterialFormFieldAppearance } from '@library/tsc-common';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/forms\";\nimport * as i2 from \"@angular/router\";\nimport * as i3 from \"@angular/common\";\nimport * as i4 from \"@report-framework/controller/report-config.controller\";\nimport * as i5 from \"@report-framework/controller/reporting-preference.controller\";\nimport * as i6 from \"@library/storage-service\";\nimport * as i7 from \"@library/toastr-service\";\nimport * as i8 from \"@library/date\";\nimport * as i9 from \"@angular/material/form-field\";\nimport * as i10 from \"@angular/material/input\";\nimport * as i11 from \"@angular/material/select\";\nimport * as i12 from \"@angular/material/core\";\nimport * as i13 from \"ngx-mat-select-search\";\nfunction ReportConfigComponent_div_1_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\", 19);\n    i0.ɵɵelementStart(1, \"div\", 20);\n    i0.ɵɵelementStart(2, \"div\", 21);\n    i0.ɵɵtext(3, \"Update report\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(4, \"div\", 22);\n    i0.ɵɵtext(5, \" Based on your reporting settings create the report details as you prefer. \");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementEnd();\n  }\n}\nfunction ReportConfigComponent_mat_error_9_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"mat-error\");\n    i0.ɵɵtext(1, \" Name is required field. \");\n    i0.ɵɵelementEnd();\n  }\n}\nfunction ReportConfigComponent_mat_option_17_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"mat-option\", 23);\n    i0.ɵɵelementStart(1, \"span\", 24);\n    i0.ɵɵtext(2);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const framework_r12 = ctx.$implicit;\n    i0.ɵɵproperty(\"value\", framework_r12.reportFrameworkID);\n    i0.ɵɵadvance(2);\n    i0.ɵɵtextInterpolate1(\" \", framework_r12.reportFrameworkName, \" \");\n  }\n}\nfunction ReportConfigComponent_mat_error_19_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"mat-error\");\n    i0.ɵɵtext(1, \" Reporting framework is required field. \");\n    i0.ɵɵelementEnd();\n  }\n}\nfunction ReportConfigComponent_div_20_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\", 13);\n    i0.ɵɵelementStart(1, \"div\", 14);\n    i0.ɵɵelementStart(2, \"span\", 15);\n    i0.ɵɵtext(3, \" Reporting sector \");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(4, \"div\", 16);\n    i0.ɵɵelementStart(5, \"span\");\n    i0.ɵɵtext(6);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const ctx_r4 = i0.ɵɵnextContext();\n    i0.ɵɵadvance(6);\n    i0.ɵɵtextInterpolate1(\" \", ctx_r4.reportingSector == null ? ctx_r4.COMMON_CONSTANT.HYPHEN : ctx_r4.reportingSector, \" \");\n  }\n}\nfunction ReportConfigComponent_div_28_mat_option_5_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"mat-option\", 23);\n    i0.ɵɵelementStart(1, \"span\", 24);\n    i0.ɵɵtext(2);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const year_r15 = ctx.$implicit;\n    i0.ɵɵproperty(\"value\", year_r15.name);\n    i0.ɵɵadvance(2);\n    i0.ɵɵtextInterpolate1(\" \", year_r15.name, \" \");\n  }\n}\nfunction ReportConfigComponent_div_28_mat_error_6_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"mat-error\");\n    i0.ɵɵtext(1, \" Reporting year is required field. \");\n    i0.ɵɵelementEnd();\n  }\n}\nfunction ReportConfigComponent_div_28_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r17 = i0.ɵɵgetCurrentView();\n    i0.ɵɵelementStart(0, \"div\", 25);\n    i0.ɵɵelementStart(1, \"mat-form-field\", 5);\n    i0.ɵɵelementStart(2, \"mat-label\", 6);\n    i0.ɵɵtext(3, \"Select reporting year\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(4, \"mat-select\", 26);\n    i0.ɵɵlistener(\"selectionChange\", function ReportConfigComponent_div_28_Template_mat_select_selectionChange_4_listener($event) {\n      i0.ɵɵrestoreView(_r17);\n      const ctx_r16 = i0.ɵɵnextContext();\n      return ctx_r16.convertPeriodToStartAndEndDate($event.value);\n    });\n    i0.ɵɵtemplate(5, ReportConfigComponent_div_28_mat_option_5_Template, 3, 2, \"mat-option\", 11);\n    i0.ɵɵelementEnd();\n    i0.ɵɵtemplate(6, ReportConfigComponent_div_28_mat_error_6_Template, 2, 0, \"mat-error\", 8);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const ctx_r5 = i0.ɵɵnextContext();\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"appearance\", ctx_r5.MaterialFormFieldAppearance.FORM_FIELD_APPEARANCE);\n    i0.ɵɵadvance(3);\n    i0.ɵɵproperty(\"disabled\", ctx_r5.isReadOnly);\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngForOf\", ctx_r5.reportingFrameworkExistYearList);\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngIf\", ctx_r5.errorHandling(\"reportingYear\", \"required\"));\n  }\n}\nfunction ReportConfigComponent_div_30_span_5_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"span\");\n    i0.ɵɵtext(1, \" Yearly \");\n    i0.ɵɵelementEnd();\n  }\n}\nfunction ReportConfigComponent_div_30_span_6_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"span\");\n    i0.ɵɵtext(1, \" Half-Yearly \");\n    i0.ɵɵelementEnd();\n  }\n}\nfunction ReportConfigComponent_div_30_span_7_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"span\");\n    i0.ɵɵtext(1, \" Quarterly \");\n    i0.ɵɵelementEnd();\n  }\n}\nfunction ReportConfigComponent_div_30_span_8_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"span\");\n    i0.ɵɵtext(1);\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const ctx_r21 = i0.ɵɵnextContext(2);\n    i0.ɵɵadvance(1);\n    i0.ɵɵtextInterpolate1(\" \", ctx_r21.reportInterval, \" \");\n  }\n}\nfunction ReportConfigComponent_div_30_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\", 13);\n    i0.ɵɵelementStart(1, \"div\", 14);\n    i0.ɵɵelementStart(2, \"span\", 15);\n    i0.ɵɵtext(3, \" Reporting interval \");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(4, \"div\", 27);\n    i0.ɵɵtemplate(5, ReportConfigComponent_div_30_span_5_Template, 2, 0, \"span\", 28);\n    i0.ɵɵtemplate(6, ReportConfigComponent_div_30_span_6_Template, 2, 0, \"span\", 28);\n    i0.ɵɵtemplate(7, ReportConfigComponent_div_30_span_7_Template, 2, 0, \"span\", 28);\n    i0.ɵɵtemplate(8, ReportConfigComponent_div_30_span_8_Template, 2, 1, \"span\", 29);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const ctx_r6 = i0.ɵɵnextContext();\n    i0.ɵɵadvance(4);\n    i0.ɵɵproperty(\"ngSwitch\", ctx_r6.formDataFG.controls[\"reportingInterval\"].value);\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngSwitchCase\", ctx_r6.FrequencyKeyIDEnum[\"YEARLY\"]);\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngSwitchCase\", ctx_r6.FrequencyKeyIDEnum[\"HALF_YEARLY\"]);\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngSwitchCase\", ctx_r6.FrequencyKeyIDEnum[\"QUARTERLY\"]);\n  }\n}\nfunction ReportConfigComponent_div_31_div_5_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\");\n    i0.ɵɵelementStart(1, \"span\");\n    i0.ɵɵtext(2);\n    i0.ɵɵelement(3, \"br\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const frequency_r23 = ctx.$implicit;\n    i0.ɵɵadvance(2);\n    i0.ɵɵtextInterpolate1(\"\", frequency_r23, \" \");\n  }\n}\nfunction ReportConfigComponent_div_31_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\", 13);\n    i0.ɵɵelementStart(1, \"div\", 30);\n    i0.ɵɵelementStart(2, \"span\", 31);\n    i0.ɵɵtext(3, \"Reporting frequency\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(4, \"div\", 32);\n    i0.ɵɵtemplate(5, ReportConfigComponent_div_31_div_5_Template, 4, 1, \"div\", 33);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const ctx_r7 = i0.ɵɵnextContext();\n    i0.ɵɵadvance(5);\n    i0.ɵɵproperty(\"ngForOf\", ctx_r7.frequencyList);\n  }\n}\nfunction ReportConfigComponent_div_32_ng_container_1_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementContainer(0);\n  }\n}\nfunction ReportConfigComponent_div_32_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\");\n    i0.ɵɵtemplate(1, ReportConfigComponent_div_32_ng_container_1_Template, 1, 0, \"ng-container\", 34);\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    i0.ɵɵnextContext();\n    const _r10 = i0.ɵɵreference(35);\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngTemplateOutlet\", _r10);\n  }\n}\nfunction ReportConfigComponent_div_33_ng_container_1_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementContainer(0);\n  }\n}\nfunction ReportConfigComponent_div_33_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\");\n    i0.ɵɵtemplate(1, ReportConfigComponent_div_33_ng_container_1_Template, 1, 0, \"ng-container\", 34);\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    i0.ɵɵnextContext();\n    const _r10 = i0.ɵɵreference(35);\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngTemplateOutlet\", _r10);\n  }\n}\nfunction ReportConfigComponent_ng_template_34_button_7_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r28 = i0.ɵɵgetCurrentView();\n    i0.ɵɵelementStart(0, \"button\", 41);\n    i0.ɵɵlistener(\"click\", function ReportConfigComponent_ng_template_34_button_7_Template_button_click_0_listener() {\n      i0.ɵɵrestoreView(_r28);\n      const ctx_r27 = i0.ɵɵnextContext(2);\n      return ctx_r27.submit(\"NEXT\");\n    });\n    i0.ɵɵtext(1);\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const ctx_r26 = i0.ɵɵnextContext(2);\n    i0.ɵɵproperty(\"disabled\", ctx_r26.isDisable);\n    i0.ɵɵadvance(1);\n    i0.ɵɵtextInterpolate1(\" \", \"Next\", \" \");\n  }\n}\nfunction ReportConfigComponent_ng_template_34_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r30 = i0.ɵɵgetCurrentView();\n    i0.ɵɵelementStart(0, \"div\", 35);\n    i0.ɵɵelementStart(1, \"div\", 36);\n    i0.ɵɵelementStart(2, \"div\", 37);\n    i0.ɵɵelementStart(3, \"button\", 38);\n    i0.ɵɵlistener(\"click\", function ReportConfigComponent_ng_template_34_Template_button_click_3_listener() {\n      i0.ɵɵrestoreView(_r30);\n      const ctx_r29 = i0.ɵɵnextContext();\n      return ctx_r29.cancelBtn();\n    });\n    i0.ɵɵtext(4);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(5, \"button\", 39);\n    i0.ɵɵlistener(\"click\", function ReportConfigComponent_ng_template_34_Template_button_click_5_listener() {\n      i0.ɵɵrestoreView(_r30);\n      const ctx_r31 = i0.ɵɵnextContext();\n      return ctx_r31.submit(ctx_r31.ButtonLabelEnum.SAVE_BTN_LABEL);\n    });\n    i0.ɵɵtext(6);\n    i0.ɵɵelementEnd();\n    i0.ɵɵtemplate(7, ReportConfigComponent_ng_template_34_button_7_Template, 2, 2, \"button\", 40);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const ctx_r11 = i0.ɵɵnextContext();\n    i0.ɵɵadvance(4);\n    i0.ɵɵtextInterpolate1(\" \", ctx_r11.ButtonLabelEnum.CANCEL_BTN_LABEL, \" \");\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"disabled\", ctx_r11.isDisable);\n    i0.ɵɵadvance(1);\n    i0.ɵɵtextInterpolate1(\" \", ctx_r11.ButtonLabelEnum.SAVE_BTN_LABEL, \" \");\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngIf\", ctx_r11.type != null);\n  }\n}\nconst _c0 = function (a0, a1) {\n  return {\n    \"h100\": a0,\n    \"border\": a1\n  };\n};\n// / tsc-library\nexport let ReportConfigComponent = /*#__PURE__*/(() => {\n  class ReportConfigComponent {\n    constructor(formBuilder, activatedRoute, location, reportConfigController, reportingPreferenceController, storageService, toastrService, dateService) {\n      this.formBuilder = formBuilder;\n      this.activatedRoute = activatedRoute;\n      this.location = location;\n      this.reportConfigController = reportConfigController;\n      this.reportingPreferenceController = reportingPreferenceController;\n      this.storageService = storageService;\n      this.toastrService = toastrService;\n      this.dateService = dateService;\n      this.type = null;\n      this.nextEmit = new EventEmitter(null);\n      this.reportingFrameworkEmit = new EventEmitter();\n      this.MaterialFormFieldAppearance = MaterialFormFieldAppearance;\n      this.COMMON_CONSTANT = COMMON_CONSTANT;\n      this.ButtonLabelEnum = ButtonLabelEnum;\n      this.FormAction = FormAction;\n      this.FrequencyKeyIDEnum = FrequencyKeyIDEnum;\n      this.configID = null;\n      this.action = FormAction.CREATE;\n      this.prefReportingFrameworkList = [new ReportingPrefenceForReportDetail()];\n      this.reportingSector = null;\n      this.reporingPeriods = [];\n      this.reportingPeriodList = [];\n      this.intervalList = [];\n      this.frequencyList = [];\n      this.reportingFrameworkExistYearList = [];\n      this.isReadOnly = false;\n      this.isDisable = false;\n      this.frameworkSearchUtil = new MatSelectSearchService(['reportFrameworkName']);\n      this.errorHandling = (control, error) => {\n        return this.formDataFG.controls[control].hasError(error);\n      };\n    }\n    ngOnInit() {\n      this.currentOrgID = parseInt(this.storageService.getStorage('currentOrgID'));\n      this.rootOrgID = parseInt(this.storageService.getStorage('rootOrgID'));\n      this.activatedRoute.queryParams.subscribe(queryParam => {\n        this.configID = queryParam['configID'];\n        if (this.configID != null) {\n          this.action = FormAction.UPDATE;\n          this.getReportDetailsByID();\n          this.isReadOnly = true;\n        }\n      });\n      this.formGroupInit();\n      this.getReportFrameworkPrefByOrgID();\n      this.generateRepotingYearList();\n    }\n    formGroupInit() {\n      this.formDataFG = this.formBuilder.group({\n        name: [, Validators.required],\n        reportingFrameworkID: [, Validators.required],\n        reportingYear: [, Validators.required],\n        startDate: [, Validators.required],\n        endDate: [, Validators.required],\n        reportingInterval: [, Validators.required],\n        sectorID: []\n      });\n    }\n    getReportFrameworkPrefByOrgID() {\n      this.reportingPreferenceController.getReportingPreferencesByOrgID(this.rootOrgID).subscribe(res => {\n        this.prefReportingFrameworkList = res;\n        // ngx mat select search\n        this.frameworkSearchUtil.entityArr = this.prefReportingFrameworkList;\n        this.frameworkSearchUtil.createSubscription();\n      });\n    }\n    getSector(reportingFrameworkID) {\n      this.reportingFrameworkExistYearList = [];\n      this.formDataFG.controls['reportingYear'].reset(null);\n      const framework = this.prefReportingFrameworkList.find(item => item.reportFrameworkID === reportingFrameworkID);\n      this.reportingSector = framework['sectorName'];\n      this.formDataFG.patchValue({\n        reportingInterval: framework['reportIntervalKeyID'],\n        sectorID: framework['sectorID']\n      });\n      this.getReportingFrameworkExistPeriodList(reportingFrameworkID);\n      this.showFrequency();\n    }\n    getReportingFrameworkExistPeriodList(reportingFrameworkID) {\n      this.reportConfigController.getReportingFrameworkExistYear(this.currentOrgID, reportingFrameworkID).subscribe(res => {\n        this.reportingFrameworkExistYearList = res;\n        if (this.action = FormAction.CREATE) {\n          this.removeYearFromReportingPeriodList();\n        }\n      }, error => {\n        console.log('error in getReportingFrameworkExistPeriodList', error);\n      });\n    }\n    removeYearFromReportingPeriodList() {\n      this.isDisable = false;\n      this.reportingFrameworkExistYearList = this.reportingPeriodList.filter(year => !this.reportingFrameworkExistYearList.some(year2 => year.name === year2.name));\n      if (this.reportingFrameworkExistYearList.length == 0) {\n        this.isDisable = true;\n        this.toastrService.openToast('Your organization already created all reporting year report for this reporting framework', 'Please check your selected reporting framework', ToastrColor.INFO);\n      }\n    }\n    getReportDetailsByID() {\n      this.reportConfigController.getReportConfigByID(this.currentOrgID, this.configID).subscribe(res => {\n        this.reportDetails = res;\n        this.patchFormGroup();\n      }, error => {\n        console.log('error in getRecordDetails -', error);\n      });\n    }\n    patchFormGroup() {\n      const formattedStartDate = moment(this.reportDetails.startDate).format('MMM YYYY');\n      const formattedEndDate = moment(this.reportDetails.endDate).format('MMM YYYY');\n      this.formDataFG.patchValue({\n        name: this.reportDetails.name,\n        reportingFrameworkID: this.reportDetails.reportingFrameworkID,\n        reportingYear: `${formattedStartDate} - ${formattedEndDate}`,\n        startDate: this.reportDetails.startDate,\n        endDate: this.reportDetails.endDate,\n        reportingInterval: this.reportDetails.reportingIntervalKeyID,\n        reportingPreferenceID: this.reportDetails.reportingPreferenceID\n      });\n      this.showFrequency();\n    }\n    generateRepotingYearList() {\n      return __awaiter(this, void 0, void 0, function* () {\n        try {\n          this.reportingPeriodList = yield this.dateService.getReportingPeriodList(this.rootOrgID, 2);\n          this.reportingFrameworkExistYearList = this.reportingPeriodList;\n        } catch (error) {\n          console.error('Error fetching reporting year list:', error);\n        }\n        this.orgReportingPeriod = this.reportingPeriodList[0]['name'];\n        this.showFrequency();\n      });\n    }\n    convertPeriodToStartAndEndDate(period) {\n      const reportingYear = this.reportingPeriodList.find(item => item.name === period);\n      this.formDataFG.patchValue({\n        startDate: moment(reportingYear.startDate).format(\"YYYY-MM-DD\"),\n        endDate: moment(reportingYear.endDate).format(\"YYYY-MM-DD\")\n      });\n      this.showFrequency();\n    }\n    showFrequency() {\n      this.frequencyList = [];\n      if (this.formDataFG.get('reportingInterval').value != null && this.formDataFG.get('reportingYear').value != null) {\n        let metric = {\n          startDate: this.formDataFG.get('startDate').value,\n          endDate: this.formDataFG.get('endDate').value,\n          interval: this.formDataFG.get('reportingInterval').value\n        };\n        this.reportConfigController.getFrequency(this.currentOrgID, metric).subscribe(res => {\n          this.frequencyList = res;\n        }, error => {\n          console.log('Error in get frequency', error);\n        });\n      }\n    }\n    submit(buttonType) {\n      if (this.formDataFG.invalid) {\n        this.formDataFG.markAllAsTouched();\n        this.toastrService.openToast(InvalidForm.INVALID_FORM_TITLE, InvalidForm.INVALID_FORM_MESSAGE, ToastrColor.ERROR);\n        return;\n      }\n      if (this.action == FormAction.CREATE) {\n        this.reportConfigController.saveReportConfig(this.currentOrgID, this.formDataFG.value).subscribe(res => {\n          if (buttonType == ButtonLabelEnum.SAVE_BTN_LABEL) {\n            this.location.back();\n          } else {\n            this.nextEmit.emit(res['response']);\n          }\n        }, error => {\n          console.log('error in save report() -', error);\n        });\n      } else if (this.action == FormAction.UPDATE) {\n        this.reportConfigController.updateReportConfig(this.currentOrgID, this.configID, this.formDataFG.value).subscribe(res => {\n          if (buttonType == ButtonLabelEnum.SAVE_BTN_LABEL) {\n            this.location.back();\n          } else {\n            this.nextEmit.emit(res['response']);\n          }\n        }, error => {\n          console.log('error in update report() -', error);\n        });\n      }\n    }\n    cancelBtn() {\n      this.location.back();\n    }\n  }\n  ReportConfigComponent.ɵfac = function ReportConfigComponent_Factory(t) {\n    return new (t || ReportConfigComponent)(i0.ɵɵdirectiveInject(i1.FormBuilder), i0.ɵɵdirectiveInject(i2.ActivatedRoute), i0.ɵɵdirectiveInject(i3.Location), i0.ɵɵdirectiveInject(i4.ReportConfigController), i0.ɵɵdirectiveInject(i5.ReportingPreferenceController), i0.ɵɵdirectiveInject(i6.StorageService), i0.ɵɵdirectiveInject(i7.ToastrService), i0.ɵɵdirectiveInject(i8.DateService));\n  };\n  ReportConfigComponent.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n    type: ReportConfigComponent,\n    selectors: [[\"app-report-config\"]],\n    inputs: {\n      type: \"type\"\n    },\n    outputs: {\n      nextEmit: \"nextEmit\",\n      reportingFrameworkEmit: \"reportingFrameworkEmit\"\n    },\n    decls: 36,\n    vars: 22,\n    consts: [[1, \"card\", \"main-card\", \"cardOverwrite\", 3, \"ngClass\"], [\"class\", \"headerContainer\", 4, \"ngIf\"], [1, \"card-body\"], [3, \"formGroup\"], [1, \"row\"], [1, \"col-sm-5\", \"ms-3\", 3, \"appearance\"], [1, \"formLabel\"], [\"matInput\", \"\", \"type\", \"text\", \"formControlName\", \"name\", 1, \"formPlaceholder\"], [4, \"ngIf\"], [\"formControlName\", \"reportingFrameworkID\", 3, \"disabled\", \"selectionChange\"], [\"placeholderLabel\", \"Search by framework name\", \"noEntriesFoundLabel\", \"No matching found.\", 3, \"formControl\"], [3, \"value\", 4, \"ngFor\", \"ngForOf\"], [\"class\", \"row mt-2\", 4, \"ngIf\"], [1, \"row\", \"mt-2\"], [1, \"col-sm-3\", \"ms-3\", \"justify-content-start\", \"centerAlign\"], [1, \"fw-bold\"], [1, \"col-sm-6\", \"justify-content-start\", \"centerAlign\"], [\"class\", \"row mt-4\", 4, \"ngIf\"], [\"saveBtn\", \"\"], [1, \"headerContainer\"], [1, \"headerLeftContainer\"], [1, \"pageTitle\"], [1, \"pageSubtitle\"], [3, \"value\"], [1, \"d-flex\", \"justify-content-between\"], [1, \"row\", \"mt-4\"], [\"formControlName\", \"reportingYear\", 3, \"disabled\", \"selectionChange\"], [1, \"col-sm-6\", \"ms-1\", \"justify-content-start\", \"centerAlign\", 3, \"ngSwitch\"], [4, \"ngSwitchCase\"], [4, \"ngSwitchDefault\"], [1, \"col-sm-3\", \"ms-2\"], [1, \"fw-bold\", \"ms-2\"], [1, \"col-sm-6\", \"ms-2\"], [4, \"ngFor\", \"ngForOf\"], [4, \"ngTemplateOutlet\"], [1, \"row\", \"mb-3\", \"mt-3\"], [1, \"col-sm-12\"], [1, \"float-end\"], [\"type\", \"button\", 1, \"button\", \"btn\", \"btn-sm\", \"btn-secondary\", \"me-2\", 3, \"click\"], [\"type\", \"button\", 1, \"btn\", \"btn-success\", \"btn-sm\", \"me-2\", 3, \"disabled\", \"click\"], [\"class\", \"btn btn-warning btn-sm\", \"type\", \"button\", 3, \"disabled\", \"click\", 4, \"ngIf\"], [\"type\", \"button\", 1, \"btn\", \"btn-warning\", \"btn-sm\", 3, \"disabled\", \"click\"]],\n    template: function ReportConfigComponent_Template(rf, ctx) {\n      if (rf & 1) {\n        i0.ɵɵelementStart(0, \"div\", 0);\n        i0.ɵɵtemplate(1, ReportConfigComponent_div_1_Template, 6, 0, \"div\", 1);\n        i0.ɵɵelementStart(2, \"div\", 2);\n        i0.ɵɵelementStart(3, \"form\", 3);\n        i0.ɵɵelementStart(4, \"div\", 4);\n        i0.ɵɵelementStart(5, \"mat-form-field\", 5);\n        i0.ɵɵelementStart(6, \"mat-label\", 6);\n        i0.ɵɵtext(7, \"Report name\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelement(8, \"input\", 7);\n        i0.ɵɵtemplate(9, ReportConfigComponent_mat_error_9_Template, 2, 0, \"mat-error\", 8);\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(10, \"div\", 4);\n        i0.ɵɵelementStart(11, \"mat-form-field\", 5);\n        i0.ɵɵelementStart(12, \"mat-label\", 6);\n        i0.ɵɵtext(13, \"Select reporting framework\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(14, \"mat-select\", 9);\n        i0.ɵɵlistener(\"selectionChange\", function ReportConfigComponent_Template_mat_select_selectionChange_14_listener($event) {\n          return ctx.getSector($event.value);\n        });\n        i0.ɵɵelementStart(15, \"mat-option\");\n        i0.ɵɵelement(16, \"ngx-mat-select-search\", 10);\n        i0.ɵɵelementEnd();\n        i0.ɵɵtemplate(17, ReportConfigComponent_mat_option_17_Template, 3, 2, \"mat-option\", 11);\n        i0.ɵɵpipe(18, \"async\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵtemplate(19, ReportConfigComponent_mat_error_19_Template, 2, 0, \"mat-error\", 8);\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementEnd();\n        i0.ɵɵtemplate(20, ReportConfigComponent_div_20_Template, 7, 1, \"div\", 12);\n        i0.ɵɵelementStart(21, \"div\", 13);\n        i0.ɵɵelementStart(22, \"div\", 14);\n        i0.ɵɵelementStart(23, \"span\", 15);\n        i0.ɵɵtext(24, \" Organization reporting period \");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(25, \"div\", 16);\n        i0.ɵɵelementStart(26, \"span\");\n        i0.ɵɵtext(27);\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementEnd();\n        i0.ɵɵtemplate(28, ReportConfigComponent_div_28_Template, 7, 4, \"div\", 17);\n        i0.ɵɵelementStart(29, \"div\", 4);\n        i0.ɵɵtemplate(30, ReportConfigComponent_div_30_Template, 9, 4, \"div\", 12);\n        i0.ɵɵelementEnd();\n        i0.ɵɵtemplate(31, ReportConfigComponent_div_31_Template, 6, 1, \"div\", 12);\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementEnd();\n        i0.ɵɵtemplate(32, ReportConfigComponent_div_32_Template, 2, 1, \"div\", 8);\n        i0.ɵɵelementEnd();\n        i0.ɵɵtemplate(33, ReportConfigComponent_div_33_Template, 2, 1, \"div\", 8);\n        i0.ɵɵtemplate(34, ReportConfigComponent_ng_template_34_Template, 8, 4, \"ng-template\", null, 18, i0.ɵɵtemplateRefExtractor);\n      }\n      if (rf & 2) {\n        i0.ɵɵproperty(\"ngClass\", i0.ɵɵpureFunction2(19, _c0, ctx.action == ctx.FormAction.UPDATE, ctx.action == ctx.FormAction.CREATE));\n        i0.ɵɵadvance(1);\n        i0.ɵɵproperty(\"ngIf\", ctx.action == ctx.FormAction.UPDATE);\n        i0.ɵɵadvance(2);\n        i0.ɵɵproperty(\"formGroup\", ctx.formDataFG);\n        i0.ɵɵadvance(2);\n        i0.ɵɵproperty(\"appearance\", ctx.MaterialFormFieldAppearance.FORM_FIELD_APPEARANCE);\n        i0.ɵɵadvance(4);\n        i0.ɵɵproperty(\"ngIf\", ctx.errorHandling(\"name\", \"required\"));\n        i0.ɵɵadvance(2);\n        i0.ɵɵproperty(\"appearance\", ctx.MaterialFormFieldAppearance.FORM_FIELD_APPEARANCE);\n        i0.ɵɵadvance(3);\n        i0.ɵɵproperty(\"disabled\", ctx.isReadOnly);\n        i0.ɵɵadvance(2);\n        i0.ɵɵproperty(\"formControl\", ctx.frameworkSearchUtil.filterFC);\n        i0.ɵɵadvance(1);\n        i0.ɵɵproperty(\"ngForOf\", i0.ɵɵpipeBind1(18, 17, ctx.frameworkSearchUtil.filteredEntities));\n        i0.ɵɵadvance(2);\n        i0.ɵɵproperty(\"ngIf\", ctx.errorHandling(\"reportingFrameworkID\", \"required\"));\n        i0.ɵɵadvance(1);\n        i0.ɵɵproperty(\"ngIf\", ctx.formDataFG.controls[\"reportingFrameworkID\"].value != null);\n        i0.ɵɵadvance(7);\n        i0.ɵɵtextInterpolate1(\" \", ctx.orgReportingPeriod, \" \");\n        i0.ɵɵadvance(1);\n        i0.ɵɵproperty(\"ngIf\", ctx.formDataFG.controls[\"reportingFrameworkID\"].value != null && ctx.reportingFrameworkExistYearList.length != 0);\n        i0.ɵɵadvance(2);\n        i0.ɵɵproperty(\"ngIf\", ctx.formDataFG.controls[\"reportingFrameworkID\"].value != null && ctx.reportingFrameworkExistYearList.length != 0);\n        i0.ɵɵadvance(1);\n        i0.ɵɵproperty(\"ngIf\", ctx.formDataFG.controls[\"reportingInterval\"].value != null && ctx.formDataFG.controls[\"reportingYear\"].value != null);\n        i0.ɵɵadvance(1);\n        i0.ɵɵproperty(\"ngIf\", ctx.action == ctx.FormAction.UPDATE);\n        i0.ɵɵadvance(1);\n        i0.ɵɵproperty(\"ngIf\", ctx.action == ctx.FormAction.CREATE);\n      }\n    },\n    directives: [i3.NgClass, i3.NgIf, i1.ɵNgNoValidate, i1.NgControlStatusGroup, i1.FormGroupDirective, i9.MatFormField, i9.MatLabel, i10.MatInput, i1.DefaultValueAccessor, i1.NgControlStatus, i1.FormControlName, i11.MatSelect, i12.MatOption, i13.MatSelectSearchComponent, i1.FormControlDirective, i3.NgForOf, i9.MatError, i3.NgSwitch, i3.NgSwitchCase, i3.NgSwitchDefault, i3.NgTemplateOutlet],\n    pipes: [i3.AsyncPipe],\n    encapsulation: 2\n  });\n  return ReportConfigComponent;\n})();","map":null,"metadata":{},"sourceType":"module"}