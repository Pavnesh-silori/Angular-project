{"ast":null,"code":"import { HttpParams } from '@angular/common/http';\nimport { environment } from 'src/environments/environment';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/common/http\";\nexport let GhgBaseYearController = /*#__PURE__*/(() => {\n  class GhgBaseYearController {\n    constructor(http) {\n      this.http = http;\n    }\n    getStructuralChangeByPage(pageNo, pageSize, sortBy, orderBy, search, orgID, type) {\n      let params = new HttpParams();\n      params = params.append('pageNo', pageNo);\n      params = params.append('pageSize', pageSize);\n      params = params.append('sortBy', sortBy);\n      params = params.append('orderBy', orderBy);\n      params = params.append('type', type);\n      search.forEach(search => params = params.append('search', search));\n      return this.http.get(`${environment.CARBON_ACCOUNTING_API_URL}organizations/${orgID}/structural-change/page`, {\n        params: params\n      });\n    }\n    getStructuralChangeOrgByID(orgID, recordID, type) {\n      let params = new HttpParams();\n      params = params.append('type', type);\n      return this.http.get(`${environment.CARBON_ACCOUNTING_API_URL}organizations/${orgID}/structural-change/${recordID}`, {\n        params: params\n      });\n    }\n    createStructuralChangeOrg(orgID, structuralChange) {\n      return this.http.post(`${environment.CARBON_ACCOUNTING_API_URL}organizations/${orgID}/structural-change`, structuralChange);\n    }\n    updateStructuralChangeOrg(orgID, recordID, structuralChange) {\n      return this.http.patch(`${environment.CARBON_ACCOUNTING_API_URL}organizations/${orgID}/structural-change/${recordID}`, structuralChange);\n    }\n    deleteStructuralChangeorgByID(orgID, recordID) {\n      return this.http.delete(`${environment.CARBON_ACCOUNTING_API_URL}organizations/${orgID}/structural-change/${recordID}`);\n    }\n    getGHGBaseYearConfirmView(orgID) {\n      return this.http.get(`${environment.CARBON_ACCOUNTING_API_URL}organizations/${orgID}/base-year/ghg-base-year/emission`);\n    }\n    createBaseYear(orgID, type, value) {\n      return this.http.post(`${environment.CARBON_ACCOUNTING_API_URL}organizations/${orgID}/base-year`, value);\n    }\n    getBaseYear(orgID, type) {\n      return this.http.get(`${environment.CARBON_ACCOUNTING_API_URL}organizations/${orgID}/base-year/${type}`);\n    }\n    getBaseYearAndEmission(orgID, type) {\n      return this.http.get(`${environment.CARBON_ACCOUNTING_API_URL}organizations/${orgID}/base-year/${type}/emission`);\n    }\n    updateBaseYear(orgID, baseYear) {\n      return this.http.patch(`${environment.CARBON_ACCOUNTING_API_URL}organizations/${orgID}/base-year`, baseYear);\n    }\n    /* TODO_PN remove it */\n    postGHGBaseYearAllEmissions(orgID, value) {\n      return this.http.post(`${environment.CARBON_ACCOUNTING_API_URL}organizations/${orgID}/ghg/setup`, value);\n    }\n    getGHGBaseYearUpdate(orgID) {\n      return this.http.get(`${environment.CARBON_ACCOUNTING_API_URL}organizations/${orgID}/ghg/setup`);\n    }\n    getGHGBaseEmissions(orgID, year) {\n      return this.http.get(`${environment.CARBON_ACCOUNTING_API_URL}organizations/${orgID}/ghg/base-year/${year}/emissions`);\n    }\n    patchGHGBaseYearAllEmissions(orgID, value) {\n      console.log(\"ads\");\n      return this.http.patch(`${environment.CARBON_ACCOUNTING_API_URL}organizations/${orgID}/ghg/setup`, value);\n    }\n    getBaseYearByOrgIDAndType(orgID, type) {\n      return this.http.get(`${environment.CARBON_ACCOUNTING_API_URL}organizations/${orgID}/base-year/${type}`);\n    }\n  }\n  GhgBaseYearController.ɵfac = function GhgBaseYearController_Factory(t) {\n    return new (t || GhgBaseYearController)(i0.ɵɵinject(i1.HttpClient));\n  };\n  GhgBaseYearController.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n    token: GhgBaseYearController,\n    factory: GhgBaseYearController.ɵfac,\n    providedIn: 'root'\n  });\n  return GhgBaseYearController;\n})();","map":null,"metadata":{},"sourceType":"module"}