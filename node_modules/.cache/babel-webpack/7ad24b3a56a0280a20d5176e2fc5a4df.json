{"ast":null,"code":"import { __awaiter } from \"tslib\";\nimport { EventEmitter } from '@angular/core';\nimport { Validators } from '@angular/forms';\nimport { RunStatusKeyIDEnum } from '@carbon/enum/cbam.enum';\nimport { PROCESS_INPUT_ENUM, PROCESS_OUTPUT_ENUM } from '@netzero/enum/process.enum';\nimport { ACTIVITY_FORM_TYPE_KEYID_ENUM } from '@carbon/enum/activity-form-enum';\nimport { PROCESS_OUTPUT_ENTITY_SOURCE_KEYID_ENUM } from '@netzero/enum/process.enum';\nimport { MaterialFormFieldAppearance } from '@library/tsc-common';\nimport { MessageAlertTypeEnum, MessageAlertIconEnum } from '@library/tsc-common';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/forms\";\nimport * as i2 from \"@library/toastr-service\";\nimport * as i3 from \"@carbon/controller/allocate-review-run.controller\";\nimport * as i4 from \"@library/storage-service\";\nimport * as i5 from \"@angular/router\";\nimport * as i6 from \"@angular/common\";\nimport * as i7 from \"@angular/material/card\";\nimport * as i8 from \"@angular/material/expansion\";\nimport * as i9 from \"@library/tsc-common\";\nimport * as i10 from \"@angular/material/form-field\";\nimport * as i11 from \"@angular/material/input\";\nimport * as i12 from \"@angular/material/select\";\nimport * as i13 from \"@angular/material/core\";\nimport * as i14 from \"../show-result/show-result.component\";\nimport * as i15 from \"../failed-run/failed-run.component\";\nfunction AllocateReviewRunComponent_ng_container_0_form_4_mat_expansion_panel_2_mat_expansion_panel_11_mat_expansion_panel_header_1_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"mat-expansion-panel-header\");\n    i0.ɵɵtext(1);\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const input_r9 = i0.ɵɵnextContext().$implicit;\n    i0.ɵɵadvance(1);\n    i0.ɵɵtextInterpolate1(\" \", input_r9.get(\"inputName\").value, \" \");\n  }\n}\nfunction AllocateReviewRunComponent_ng_container_0_form_4_mat_expansion_panel_2_mat_expansion_panel_11_ng_container_2_ng_container_1_div_1_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\", 30);\n    i0.ɵɵelementStart(1, \"strong\");\n    i0.ɵɵtext(2);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const source_r16 = i0.ɵɵnextContext().$implicit;\n    i0.ɵɵadvance(2);\n    i0.ɵɵtextInterpolate(source_r16.get(\"sourceName\").value);\n  }\n}\nfunction AllocateReviewRunComponent_ng_container_0_form_4_mat_expansion_panel_2_mat_expansion_panel_11_ng_container_2_ng_container_1_div_5_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\", 31);\n    i0.ɵɵelementStart(1, \"label\");\n    i0.ɵɵtext(2);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(3, \"span\", 32);\n    i0.ɵɵtext(4);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const source_r16 = i0.ɵɵnextContext().$implicit;\n    const input_r9 = i0.ɵɵnextContext(2).$implicit;\n    const ctx_r19 = i0.ɵɵnextContext(4);\n    i0.ɵɵadvance(2);\n    i0.ɵɵtextInterpolate(ctx_r19.getLabelText(input_r9.get(\"inputKeyID\").value));\n    i0.ɵɵadvance(2);\n    i0.ɵɵtextInterpolate(source_r16.get(\"entityName\").value);\n  }\n}\nfunction AllocateReviewRunComponent_ng_container_0_form_4_mat_expansion_panel_2_mat_expansion_panel_11_ng_container_2_ng_container_1_span_6_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"span\", 33);\n    i0.ɵɵtext(1);\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const input_r9 = i0.ɵɵnextContext(3).$implicit;\n    i0.ɵɵadvance(1);\n    i0.ɵɵtextInterpolate1(\" Total \", input_r9.get(\"inputName\").value, \" consumed in these process \");\n  }\n}\nfunction AllocateReviewRunComponent_ng_container_0_form_4_mat_expansion_panel_2_mat_expansion_panel_11_ng_container_2_ng_container_1_span_7_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"span\", 33);\n    i0.ɵɵtext(1);\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const input_r9 = i0.ɵɵnextContext(3).$implicit;\n    i0.ɵɵadvance(1);\n    i0.ɵɵtextInterpolate1(\" Total \", input_r9.get(\"inputName\").value, \" generated in these process \");\n  }\n}\nfunction AllocateReviewRunComponent_ng_container_0_form_4_mat_expansion_panel_2_mat_expansion_panel_11_ng_container_2_ng_container_1_div_18_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\");\n    i0.ɵɵelementStart(1, \"div\", 34);\n    i0.ɵɵelement(2, \"lib-message-alert\", 35);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(3, \"div\", 36);\n    i0.ɵɵelementStart(4, \"mat-form-field\", 37);\n    i0.ɵɵelementStart(5, \"mat-label\", 38);\n    i0.ɵɵtext(6, \"Allocation percentage\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelement(7, \"input\", 39);\n    i0.ɵɵelementStart(8, \"span\", 40);\n    i0.ɵɵtext(9, \"%\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(10, \"div\", 36);\n    i0.ɵɵelementStart(11, \"mat-form-field\", 37);\n    i0.ɵɵelementStart(12, \"mat-label\", 38);\n    i0.ɵɵtext(13, \"Brief description of allocation methodology used\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelement(14, \"input\", 41);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(15, \"div\", 42);\n    i0.ɵɵelementStart(16, \"div\", 43);\n    i0.ɵɵelementStart(17, \"span\");\n    i0.ɵɵtext(18);\n    i0.ɵɵelementStart(19, \"strong\", 22);\n    i0.ɵɵtext(20);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const source_r16 = i0.ɵɵnextContext().$implicit;\n    const input_r9 = i0.ɵɵnextContext(2).$implicit;\n    const ctx_r22 = i0.ɵɵnextContext(4);\n    i0.ɵɵadvance(2);\n    i0.ɵɵpropertyInterpolate1(\"contentInp\", \"Enter the percentage of \", input_r9.get(\"inputName\").value, \"  that has been used in this process.\");\n    i0.ɵɵproperty(\"messageAlertTypeInp\", ctx_r22.messageAlertTypeEnum.INFO)(\"messageAlertIconInp\", ctx_r22.messageAlertIconEnum.INFO_ICON);\n    i0.ɵɵadvance(2);\n    i0.ɵɵproperty(\"appearance\", ctx_r22.MaterialFormFieldAppearance.FORM_FIELD_APPEARANCE);\n    i0.ɵɵadvance(3);\n    i0.ɵɵproperty(\"formControl\", source_r16.get(\"allocationPct\"));\n    i0.ɵɵadvance(4);\n    i0.ɵɵproperty(\"appearance\", ctx_r22.MaterialFormFieldAppearance.FORM_FIELD_APPEARANCE);\n    i0.ɵɵadvance(3);\n    i0.ɵɵproperty(\"formControl\", source_r16.get(\"description\"));\n    i0.ɵɵadvance(4);\n    i0.ɵɵtextInterpolate1(\" Total \", input_r9.get(\"inputName\").value, \" consumed \");\n    i0.ɵɵadvance(2);\n    i0.ɵɵtextInterpolate(ctx_r22.getConsumedPercentage(source_r16.get(\"allocationPct\").value, source_r16.get(\"amount\").value, source_r16.get(\"unitName\").value, source_r16.get(\"uomCode\").value));\n  }\n}\nfunction AllocateReviewRunComponent_ng_container_0_form_4_mat_expansion_panel_2_mat_expansion_panel_11_ng_container_2_ng_container_1_div_20_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r33 = i0.ɵɵgetCurrentView();\n    i0.ɵɵelementStart(0, \"div\", 44);\n    i0.ɵɵelementStart(1, \"span\", 45);\n    i0.ɵɵlistener(\"click\", function AllocateReviewRunComponent_ng_container_0_form_4_mat_expansion_panel_2_mat_expansion_panel_11_ng_container_2_ng_container_1_div_20_Template_span_click_1_listener() {\n      const restoredCtx = i0.ɵɵrestoreView(_r33);\n      const activity_r31 = restoredCtx.$implicit;\n      const ctx_r32 = i0.ɵɵnextContext(7);\n      return ctx_r32.routeToActivity(activity_r31);\n    });\n    i0.ɵɵtext(2);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const activity_r31 = ctx.$implicit;\n    i0.ɵɵadvance(2);\n    i0.ɵɵtextInterpolate(activity_r31.activityName);\n  }\n}\nfunction AllocateReviewRunComponent_ng_container_0_form_4_mat_expansion_panel_2_mat_expansion_panel_11_ng_container_2_ng_container_1_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementContainerStart(0);\n    i0.ɵɵtemplate(1, AllocateReviewRunComponent_ng_container_0_form_4_mat_expansion_panel_2_mat_expansion_panel_11_ng_container_2_ng_container_1_div_1_Template, 3, 1, \"div\", 18);\n    i0.ɵɵelementStart(2, \"div\");\n    i0.ɵɵelementStart(3, \"div\", 19);\n    i0.ɵɵelementStart(4, \"div\");\n    i0.ɵɵtemplate(5, AllocateReviewRunComponent_ng_container_0_form_4_mat_expansion_panel_2_mat_expansion_panel_11_ng_container_2_ng_container_1_div_5_Template, 5, 2, \"div\", 20);\n    i0.ɵɵtemplate(6, AllocateReviewRunComponent_ng_container_0_form_4_mat_expansion_panel_2_mat_expansion_panel_11_ng_container_2_ng_container_1_span_6_Template, 2, 1, \"span\", 21);\n    i0.ɵɵtemplate(7, AllocateReviewRunComponent_ng_container_0_form_4_mat_expansion_panel_2_mat_expansion_panel_11_ng_container_2_ng_container_1_span_7_Template, 2, 1, \"span\", 21);\n    i0.ɵɵelementStart(8, \"span\", 22);\n    i0.ɵɵelementStart(9, \"strong\");\n    i0.ɵɵtext(10);\n    i0.ɵɵelementStart(11, \"span\", 23);\n    i0.ɵɵtext(12);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(13, \"span\", 24);\n    i0.ɵɵelementStart(14, \"label\", 25);\n    i0.ɵɵelement(15, \"input\", 26);\n    i0.ɵɵelementStart(16, \"span\", 27);\n    i0.ɵɵtext(17, \"Mark as reviewed\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementEnd();\n    i0.ɵɵtemplate(18, AllocateReviewRunComponent_ng_container_0_form_4_mat_expansion_panel_2_mat_expansion_panel_11_ng_container_2_ng_container_1_div_18_Template, 21, 9, \"div\", 0);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(19, \"div\", 28);\n    i0.ɵɵtemplate(20, AllocateReviewRunComponent_ng_container_0_form_4_mat_expansion_panel_2_mat_expansion_panel_11_ng_container_2_ng_container_1_div_20_Template, 3, 1, \"div\", 29);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementContainerEnd();\n  }\n  if (rf & 2) {\n    const source_r16 = ctx.$implicit;\n    const input_r9 = i0.ɵɵnextContext(2).$implicit;\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngIf\", source_r16.get(\"sourceName\").value);\n    i0.ɵɵadvance(4);\n    i0.ɵɵproperty(\"ngIf\", source_r16.get(\"entityName\").value);\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngIf\", input_r9.get(\"inputKeyID\").value == \"fuel\");\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngIf\", input_r9.get(\"inputKeyID\").value !== \"fuel\");\n    i0.ɵɵadvance(3);\n    i0.ɵɵtextInterpolate2(\" \", source_r16.get(\"amount\").value, \" \", source_r16.get(\"uomCode\").value, \"\");\n    i0.ɵɵadvance(2);\n    i0.ɵɵtextInterpolate1(\"(\", source_r16.get(\"unitName\").value, \")\");\n    i0.ɵɵadvance(3);\n    i0.ɵɵproperty(\"formControl\", source_r16.get(\"markAsReviewed\"));\n    i0.ɵɵadvance(3);\n    i0.ɵɵproperty(\"ngIf\", source_r16.get(\"isAllocation\").value || source_r16.get(\"isCommonSubMeter\").value);\n    i0.ɵɵadvance(2);\n    i0.ɵɵproperty(\"ngForOf\", source_r16.get(\"activityData\").value);\n  }\n}\nfunction AllocateReviewRunComponent_ng_container_0_form_4_mat_expansion_panel_2_mat_expansion_panel_11_ng_container_2_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementContainerStart(0);\n    i0.ɵɵtemplate(1, AllocateReviewRunComponent_ng_container_0_form_4_mat_expansion_panel_2_mat_expansion_panel_11_ng_container_2_ng_container_1_Template, 21, 10, \"ng-container\", 17);\n    i0.ɵɵelementContainerEnd();\n  }\n  if (rf & 2) {\n    const input_r9 = i0.ɵɵnextContext().$implicit;\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngForOf\", input_r9.get(\"sourceFG\").controls);\n  }\n}\nfunction AllocateReviewRunComponent_ng_container_0_form_4_mat_expansion_panel_2_mat_expansion_panel_11_ng_template_3_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\", 30);\n    i0.ɵɵelementStart(1, \"strong\");\n    i0.ɵɵtext(2, \"No allocation required\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementEnd();\n  }\n}\nfunction AllocateReviewRunComponent_ng_container_0_form_4_mat_expansion_panel_2_mat_expansion_panel_11_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"mat-expansion-panel\", 14);\n    i0.ɵɵtemplate(1, AllocateReviewRunComponent_ng_container_0_form_4_mat_expansion_panel_2_mat_expansion_panel_11_mat_expansion_panel_header_1_Template, 2, 1, \"mat-expansion-panel-header\", 0);\n    i0.ɵɵtemplate(2, AllocateReviewRunComponent_ng_container_0_form_4_mat_expansion_panel_2_mat_expansion_panel_11_ng_container_2_Template, 2, 1, \"ng-container\", 15);\n    i0.ɵɵtemplate(3, AllocateReviewRunComponent_ng_container_0_form_4_mat_expansion_panel_2_mat_expansion_panel_11_ng_template_3_Template, 3, 0, \"ng-template\", null, 16, i0.ɵɵtemplateRefExtractor);\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const input_r9 = ctx.$implicit;\n    const _r12 = i0.ɵɵreference(4);\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngIf\", input_r9.get(\"inputName\").value);\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngIf\", input_r9.get(\"sourceFG\").controls.length > 0)(\"ngIfElse\", _r12);\n  }\n}\nfunction AllocateReviewRunComponent_ng_container_0_form_4_mat_expansion_panel_2_mat_expansion_panel_16_ng_container_3_ng_container_1_div_1_div_1_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\", 30);\n    i0.ɵɵelementStart(1, \"strong\");\n    i0.ɵɵtext(2);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const source_r41 = i0.ɵɵnextContext(2).$implicit;\n    i0.ɵɵadvance(2);\n    i0.ɵɵtextInterpolate(source_r41.get(\"sourceName\").value);\n  }\n}\nfunction AllocateReviewRunComponent_ng_container_0_form_4_mat_expansion_panel_2_mat_expansion_panel_16_ng_container_3_ng_container_1_div_1_div_2_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\", 43);\n    i0.ɵɵelementStart(1, \"label\");\n    i0.ɵɵtext(2);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(3, \"span\", 32);\n    i0.ɵɵtext(4);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const source_r41 = i0.ɵɵnextContext(2).$implicit;\n    const input_r36 = i0.ɵɵnextContext(2).$implicit;\n    const ctx_r47 = i0.ɵɵnextContext(4);\n    i0.ɵɵadvance(2);\n    i0.ɵɵtextInterpolate(ctx_r47.getLabelText(input_r36.get(\"outputKeyID\").value));\n    i0.ɵɵadvance(2);\n    i0.ɵɵtextInterpolate(source_r41.get(\"entityName\").value);\n  }\n}\nfunction AllocateReviewRunComponent_ng_container_0_form_4_mat_expansion_panel_2_mat_expansion_panel_16_ng_container_3_ng_container_1_div_1_span_6_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"span\", 33);\n    i0.ɵɵtext(1);\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const input_r36 = i0.ɵɵnextContext(4).$implicit;\n    i0.ɵɵadvance(1);\n    i0.ɵɵtextInterpolate1(\" Total \", input_r36.get(\"outputName\").value, \" consumed in these process \");\n  }\n}\nfunction AllocateReviewRunComponent_ng_container_0_form_4_mat_expansion_panel_2_mat_expansion_panel_16_ng_container_3_ng_container_1_div_1_span_7_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"span\", 33);\n    i0.ɵɵtext(1);\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const input_r36 = i0.ɵɵnextContext(4).$implicit;\n    i0.ɵɵadvance(1);\n    i0.ɵɵtextInterpolate1(\" Total \", input_r36.get(\"outputName\").value, \" generated in these process \");\n  }\n}\nfunction AllocateReviewRunComponent_ng_container_0_form_4_mat_expansion_panel_2_mat_expansion_panel_16_ng_container_3_ng_container_1_div_1_div_18_span_1_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"span\", 33);\n    i0.ɵɵtext(1);\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const input_r36 = i0.ɵɵnextContext(5).$implicit;\n    i0.ɵɵadvance(1);\n    i0.ɵɵtextInterpolate1(\" Total \", input_r36.get(\"outputName\").value, \" exported in these process \");\n  }\n}\nfunction AllocateReviewRunComponent_ng_container_0_form_4_mat_expansion_panel_2_mat_expansion_panel_16_ng_container_3_ng_container_1_div_1_div_18_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\");\n    i0.ɵɵtemplate(1, AllocateReviewRunComponent_ng_container_0_form_4_mat_expansion_panel_2_mat_expansion_panel_16_ng_container_3_ng_container_1_div_1_div_18_span_1_Template, 2, 1, \"span\", 21);\n    i0.ɵɵelementStart(2, \"span\", 22);\n    i0.ɵɵelementStart(3, \"strong\");\n    i0.ɵɵtext(4);\n    i0.ɵɵelementStart(5, \"span\", 23);\n    i0.ɵɵtext(6);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const source_r41 = i0.ɵɵnextContext(2).$implicit;\n    const input_r36 = i0.ɵɵnextContext(2).$implicit;\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngIf\", input_r36.get(\"outputKeyID\").value !== \"fuel\");\n    i0.ɵɵadvance(3);\n    i0.ɵɵtextInterpolate2(\" \", source_r41.get(\"exportedQuantity\").value, \" \", source_r41.get(\"exportUomCode\").value, \" \");\n    i0.ɵɵadvance(2);\n    i0.ɵɵtextInterpolate1(\"(\", source_r41.get(\"exportedUnitName\").value, \")\");\n  }\n}\nfunction AllocateReviewRunComponent_ng_container_0_form_4_mat_expansion_panel_2_mat_expansion_panel_16_ng_container_3_ng_container_1_div_1_div_21_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r63 = i0.ɵɵgetCurrentView();\n    i0.ɵɵelementStart(0, \"div\", 44);\n    i0.ɵɵelementStart(1, \"span\", 45);\n    i0.ɵɵlistener(\"click\", function AllocateReviewRunComponent_ng_container_0_form_4_mat_expansion_panel_2_mat_expansion_panel_16_ng_container_3_ng_container_1_div_1_div_21_Template_span_click_1_listener() {\n      const restoredCtx = i0.ɵɵrestoreView(_r63);\n      const activity_r61 = restoredCtx.$implicit;\n      const ctx_r62 = i0.ɵɵnextContext(8);\n      return ctx_r62.routeToActivity(activity_r61);\n    });\n    i0.ɵɵtext(2);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const activity_r61 = ctx.$implicit;\n    i0.ɵɵadvance(2);\n    i0.ɵɵtextInterpolate(activity_r61.activityName);\n  }\n}\nfunction AllocateReviewRunComponent_ng_container_0_form_4_mat_expansion_panel_2_mat_expansion_panel_16_ng_container_3_ng_container_1_div_1_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\");\n    i0.ɵɵtemplate(1, AllocateReviewRunComponent_ng_container_0_form_4_mat_expansion_panel_2_mat_expansion_panel_16_ng_container_3_ng_container_1_div_1_div_1_Template, 3, 1, \"div\", 18);\n    i0.ɵɵtemplate(2, AllocateReviewRunComponent_ng_container_0_form_4_mat_expansion_panel_2_mat_expansion_panel_16_ng_container_3_ng_container_1_div_1_div_2_Template, 5, 2, \"div\", 48);\n    i0.ɵɵelementStart(3, \"div\");\n    i0.ɵɵelementStart(4, \"div\", 36);\n    i0.ɵɵelementStart(5, \"div\");\n    i0.ɵɵtemplate(6, AllocateReviewRunComponent_ng_container_0_form_4_mat_expansion_panel_2_mat_expansion_panel_16_ng_container_3_ng_container_1_div_1_span_6_Template, 2, 1, \"span\", 21);\n    i0.ɵɵtemplate(7, AllocateReviewRunComponent_ng_container_0_form_4_mat_expansion_panel_2_mat_expansion_panel_16_ng_container_3_ng_container_1_div_1_span_7_Template, 2, 1, \"span\", 21);\n    i0.ɵɵelementStart(8, \"span\", 22);\n    i0.ɵɵelementStart(9, \"strong\");\n    i0.ɵɵtext(10);\n    i0.ɵɵelementStart(11, \"span\", 23);\n    i0.ɵɵtext(12);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(13, \"span\", 24);\n    i0.ɵɵelementStart(14, \"label\", 49);\n    i0.ɵɵelement(15, \"input\", 26);\n    i0.ɵɵelementStart(16, \"span\", 27);\n    i0.ɵɵtext(17, \"Mark as reviewed\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementEnd();\n    i0.ɵɵtemplate(18, AllocateReviewRunComponent_ng_container_0_form_4_mat_expansion_panel_2_mat_expansion_panel_16_ng_container_3_ng_container_1_div_1_div_18_Template, 7, 4, \"div\", 0);\n    i0.ɵɵelement(19, \"div\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(20, \"div\", 28);\n    i0.ɵɵtemplate(21, AllocateReviewRunComponent_ng_container_0_form_4_mat_expansion_panel_2_mat_expansion_panel_16_ng_container_3_ng_container_1_div_1_div_21_Template, 3, 1, \"div\", 29);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const source_r41 = i0.ɵɵnextContext().$implicit;\n    const input_r36 = i0.ɵɵnextContext(2).$implicit;\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngIf\", source_r41.get(\"sourceName\").value);\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngIf\", source_r41.get(\"entityName\").value);\n    i0.ɵɵadvance(4);\n    i0.ɵɵproperty(\"ngIf\", input_r36.get(\"outputKeyID\").value == \"fuel\");\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngIf\", input_r36.get(\"outputKeyID\").value !== \"fuel\");\n    i0.ɵɵadvance(3);\n    i0.ɵɵtextInterpolate2(\" \", source_r41.get(\"amount\").value, \" \", source_r41.get(\"uomCode\").value, \" \");\n    i0.ɵɵadvance(2);\n    i0.ɵɵtextInterpolate1(\"(\", source_r41.get(\"unitName\").value, \")\");\n    i0.ɵɵadvance(3);\n    i0.ɵɵproperty(\"formControl\", source_r41.get(\"markAsReviewed\"));\n    i0.ɵɵadvance(3);\n    i0.ɵɵproperty(\"ngIf\", source_r41.get(\"exportedQuantity\").value != null);\n    i0.ɵɵadvance(3);\n    i0.ɵɵproperty(\"ngForOf\", source_r41.get(\"activityData\").value);\n  }\n}\nfunction AllocateReviewRunComponent_ng_container_0_form_4_mat_expansion_panel_2_mat_expansion_panel_16_ng_container_3_ng_container_1_ng_template_2_span_0_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"span\", 24);\n    i0.ɵɵelementStart(1, \"label\", 25);\n    i0.ɵɵelement(2, \"input\", 26);\n    i0.ɵɵelementStart(3, \"span\", 27);\n    i0.ɵɵtext(4, \"Mark as reviewed\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const source_r41 = i0.ɵɵnextContext(2).$implicit;\n    i0.ɵɵadvance(2);\n    i0.ɵɵproperty(\"formControl\", source_r41.get(\"markAsReviewed\"));\n  }\n}\nfunction AllocateReviewRunComponent_ng_container_0_form_4_mat_expansion_panel_2_mat_expansion_panel_16_ng_container_3_ng_container_1_ng_template_2_div_1_mat_option_5_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"mat-option\", 59);\n    i0.ɵɵtext(1);\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const method_r73 = ctx.$implicit;\n    i0.ɵɵproperty(\"value\", method_r73.keyID);\n    i0.ɵɵadvance(1);\n    i0.ɵɵtextInterpolate1(\" \", method_r73.name, \" \");\n  }\n}\nfunction AllocateReviewRunComponent_ng_container_0_form_4_mat_expansion_panel_2_mat_expansion_panel_16_ng_container_3_ng_container_1_ng_template_2_div_1_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r76 = i0.ɵɵgetCurrentView();\n    i0.ɵɵelementStart(0, \"div\", 52);\n    i0.ɵɵelementStart(1, \"mat-form-field\", 56);\n    i0.ɵɵelementStart(2, \"mat-label\", 38);\n    i0.ɵɵtext(3, \"Select allocation method\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(4, \"mat-select\", 57);\n    i0.ɵɵlistener(\"selectionChange\", function AllocateReviewRunComponent_ng_container_0_form_4_mat_expansion_panel_2_mat_expansion_panel_16_ng_container_3_ng_container_1_ng_template_2_div_1_Template_mat_select_selectionChange_4_listener($event) {\n      i0.ɵɵrestoreView(_r76);\n      const source_r41 = i0.ɵɵnextContext(2).$implicit;\n      const ctx_r74 = i0.ɵɵnextContext(6);\n      return ctx_r74.allocationMethodCheck($event.value, source_r41.get(\"index\").value);\n    });\n    i0.ɵɵtemplate(5, AllocateReviewRunComponent_ng_container_0_form_4_mat_expansion_panel_2_mat_expansion_panel_16_ng_container_3_ng_container_1_ng_template_2_div_1_mat_option_5_Template, 2, 2, \"mat-option\", 58);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const source_r41 = i0.ɵɵnextContext(2).$implicit;\n    const ctx_r67 = i0.ɵɵnextContext(6);\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"appearance\", ctx_r67.MaterialFormFieldAppearance.FORM_FIELD_APPEARANCE);\n    i0.ɵɵadvance(3);\n    i0.ɵɵproperty(\"formControl\", source_r41.get(\"allocationMethod\"));\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngForOf\", ctx_r67.allocationMethod);\n  }\n}\nfunction AllocateReviewRunComponent_ng_container_0_form_4_mat_expansion_panel_2_mat_expansion_panel_16_ng_container_3_ng_container_1_ng_template_2_div_3_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\");\n    i0.ɵɵelementStart(1, \"div\");\n    i0.ɵɵelementStart(2, \"mat-form-field\", 56);\n    i0.ɵɵelementStart(3, \"mat-label\", 38);\n    i0.ɵɵtext(4, \"Brief description of allocation methodology used\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelement(5, \"input\", 41);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const source_r41 = i0.ɵɵnextContext(2).$implicit;\n    const ctx_r68 = i0.ɵɵnextContext(6);\n    i0.ɵɵadvance(2);\n    i0.ɵɵproperty(\"appearance\", ctx_r68.MaterialFormFieldAppearance.FORM_FIELD_APPEARANCE);\n    i0.ɵɵadvance(3);\n    i0.ɵɵproperty(\"formControl\", source_r41.get(\"description\"));\n  }\n}\nfunction AllocateReviewRunComponent_ng_container_0_form_4_mat_expansion_panel_2_mat_expansion_panel_16_ng_container_3_ng_container_1_ng_template_2_div_12_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\", 60);\n    i0.ɵɵelementStart(1, \"mat-form-field\", 61);\n    i0.ɵɵelementStart(2, \"mat-label\", 62);\n    i0.ɵɵtext(3, \"Allocation percentage\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelement(4, \"input\", 39);\n    i0.ɵɵelementStart(5, \"span\", 40);\n    i0.ɵɵtext(6, \"%\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const source_r41 = i0.ɵɵnextContext(2).$implicit;\n    const ctx_r69 = i0.ɵɵnextContext(6);\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"appearance\", ctx_r69.MaterialFormFieldAppearance.FORM_FIELD_APPEARANCE);\n    i0.ɵɵadvance(3);\n    i0.ɵɵproperty(\"formControl\", source_r41.get(\"allocationPct\"));\n  }\n}\nfunction AllocateReviewRunComponent_ng_container_0_form_4_mat_expansion_panel_2_mat_expansion_panel_16_ng_container_3_ng_container_1_ng_template_2_div_14_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r82 = i0.ɵɵgetCurrentView();\n    i0.ɵɵelementStart(0, \"div\", 44);\n    i0.ɵɵelementStart(1, \"span\", 45);\n    i0.ɵɵlistener(\"click\", function AllocateReviewRunComponent_ng_container_0_form_4_mat_expansion_panel_2_mat_expansion_panel_16_ng_container_3_ng_container_1_ng_template_2_div_14_Template_span_click_1_listener() {\n      const restoredCtx = i0.ɵɵrestoreView(_r82);\n      const activity_r80 = restoredCtx.$implicit;\n      const ctx_r81 = i0.ɵɵnextContext(8);\n      return ctx_r81.routeToActivity(activity_r80);\n    });\n    i0.ɵɵtext(2);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const activity_r80 = ctx.$implicit;\n    i0.ɵɵadvance(2);\n    i0.ɵɵtextInterpolate(activity_r80.activityName);\n  }\n}\nfunction AllocateReviewRunComponent_ng_container_0_form_4_mat_expansion_panel_2_mat_expansion_panel_16_ng_container_3_ng_container_1_ng_template_2_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵtemplate(0, AllocateReviewRunComponent_ng_container_0_form_4_mat_expansion_panel_2_mat_expansion_panel_16_ng_container_3_ng_container_1_ng_template_2_span_0_Template, 5, 1, \"span\", 50);\n    i0.ɵɵtemplate(1, AllocateReviewRunComponent_ng_container_0_form_4_mat_expansion_panel_2_mat_expansion_panel_16_ng_container_3_ng_container_1_ng_template_2_div_1_Template, 6, 3, \"div\", 51);\n    i0.ɵɵelementStart(2, \"div\", 52);\n    i0.ɵɵtemplate(3, AllocateReviewRunComponent_ng_container_0_form_4_mat_expansion_panel_2_mat_expansion_panel_16_ng_container_3_ng_container_1_ng_template_2_div_3_Template, 6, 2, \"div\", 0);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(4, \"div\", 53);\n    i0.ɵɵelementStart(5, \"div\", 54);\n    i0.ɵɵelementStart(6, \"span\");\n    i0.ɵɵtext(7);\n    i0.ɵɵelementStart(8, \"strong\", 22);\n    i0.ɵɵtext(9);\n    i0.ɵɵelementStart(10, \"span\", 23);\n    i0.ɵɵtext(11);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementEnd();\n    i0.ɵɵtemplate(12, AllocateReviewRunComponent_ng_container_0_form_4_mat_expansion_panel_2_mat_expansion_panel_16_ng_container_3_ng_container_1_ng_template_2_div_12_Template, 7, 2, \"div\", 55);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(13, \"div\", 28);\n    i0.ɵɵtemplate(14, AllocateReviewRunComponent_ng_container_0_form_4_mat_expansion_panel_2_mat_expansion_panel_16_ng_container_3_ng_container_1_ng_template_2_div_14_Template, 3, 1, \"div\", 29);\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const ctx_r83 = i0.ɵɵnextContext();\n    const k_r42 = ctx_r83.index;\n    const source_r41 = ctx_r83.$implicit;\n    const input_r36 = i0.ɵɵnextContext(2).$implicit;\n    const ctx_r45 = i0.ɵɵnextContext(4);\n    i0.ɵɵproperty(\"ngIf\", k_r42 == 0);\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngIf\", k_r42 == 0 && input_r36.get(\"outputKeyID\").value !== \"intermediate-product\" && input_r36.get(\"outputSourceFG\").controls.length == 2);\n    i0.ɵɵadvance(2);\n    i0.ɵɵproperty(\"ngIf\", ctx_r45.massOrVolume[source_r41.get(\"index\").value] == \"percentage\" && k_r42 == 0);\n    i0.ɵɵadvance(4);\n    i0.ɵɵtextInterpolate1(\"Total quantity of \", source_r41.get(\"entityName\").value, \" produced in this process \");\n    i0.ɵɵadvance(2);\n    i0.ɵɵtextInterpolate2(\" \", source_r41.get(\"amount\").value, \" \", source_r41.get(\"uomCode\").value, \" \");\n    i0.ɵɵadvance(2);\n    i0.ɵɵtextInterpolate1(\"(\", source_r41.get(\"unitName\").value, \")\");\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngIf\", ctx_r45.massOrVolume[source_r41.get(\"index\").value] == \"percentage\");\n    i0.ɵɵadvance(2);\n    i0.ɵɵproperty(\"ngForOf\", source_r41.get(\"activityData\").value);\n  }\n}\nfunction AllocateReviewRunComponent_ng_container_0_form_4_mat_expansion_panel_2_mat_expansion_panel_16_ng_container_3_ng_container_1_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementContainerStart(0, 19);\n    i0.ɵɵtemplate(1, AllocateReviewRunComponent_ng_container_0_form_4_mat_expansion_panel_2_mat_expansion_panel_16_ng_container_3_ng_container_1_div_1_Template, 22, 10, \"div\", 15);\n    i0.ɵɵtemplate(2, AllocateReviewRunComponent_ng_container_0_form_4_mat_expansion_panel_2_mat_expansion_panel_16_ng_container_3_ng_container_1_ng_template_2_Template, 15, 9, \"ng-template\", null, 47, i0.ɵɵtemplateRefExtractor);\n    i0.ɵɵelementContainerEnd();\n  }\n  if (rf & 2) {\n    const _r44 = i0.ɵɵreference(3);\n    const input_r36 = i0.ɵɵnextContext(2).$implicit;\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngIf\", input_r36.get(\"outputKeyID\").value !== \"co-product\")(\"ngIfElse\", _r44);\n  }\n}\nfunction AllocateReviewRunComponent_ng_container_0_form_4_mat_expansion_panel_2_mat_expansion_panel_16_ng_container_3_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementContainerStart(0);\n    i0.ɵɵtemplate(1, AllocateReviewRunComponent_ng_container_0_form_4_mat_expansion_panel_2_mat_expansion_panel_16_ng_container_3_ng_container_1_Template, 4, 2, \"ng-container\", 46);\n    i0.ɵɵelementContainerEnd();\n  }\n  if (rf & 2) {\n    const input_r36 = i0.ɵɵnextContext().$implicit;\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngForOf\", input_r36.get(\"outputSourceFG\").controls);\n  }\n}\nfunction AllocateReviewRunComponent_ng_container_0_form_4_mat_expansion_panel_2_mat_expansion_panel_16_ng_template_4_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\", 30);\n    i0.ɵɵelementStart(1, \"strong\");\n    i0.ɵɵtext(2, \"No allocation required\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementEnd();\n  }\n}\nfunction AllocateReviewRunComponent_ng_container_0_form_4_mat_expansion_panel_2_mat_expansion_panel_16_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"mat-expansion-panel\", 14);\n    i0.ɵɵelementStart(1, \"mat-expansion-panel-header\");\n    i0.ɵɵtext(2);\n    i0.ɵɵelementEnd();\n    i0.ɵɵtemplate(3, AllocateReviewRunComponent_ng_container_0_form_4_mat_expansion_panel_2_mat_expansion_panel_16_ng_container_3_Template, 2, 1, \"ng-container\", 15);\n    i0.ɵɵtemplate(4, AllocateReviewRunComponent_ng_container_0_form_4_mat_expansion_panel_2_mat_expansion_panel_16_ng_template_4_Template, 3, 0, \"ng-template\", null, 16, i0.ɵɵtemplateRefExtractor);\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const input_r36 = ctx.$implicit;\n    const _r38 = i0.ɵɵreference(5);\n    i0.ɵɵadvance(2);\n    i0.ɵɵtextInterpolate(input_r36.get(\"outputName\").value);\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngIf\", input_r36.get(\"outputSourceFG\").controls.length > 0)(\"ngIfElse\", _r38);\n  }\n}\nfunction AllocateReviewRunComponent_ng_container_0_form_4_mat_expansion_panel_2_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"mat-expansion-panel\", 7);\n    i0.ɵɵelementStart(1, \"mat-expansion-panel-header\");\n    i0.ɵɵelementStart(2, \"div\", 8);\n    i0.ɵɵelementStart(3, \"div\", 9);\n    i0.ɵɵelementStart(4, \"strong\");\n    i0.ɵɵtext(5);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(6, \"div\", 10);\n    i0.ɵɵelementStart(7, \"div\", 11);\n    i0.ɵɵelementStart(8, \"strong\");\n    i0.ɵɵtext(9, \"Input\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(10, \"mat-accordion\", 5);\n    i0.ɵɵtemplate(11, AllocateReviewRunComponent_ng_container_0_form_4_mat_expansion_panel_2_mat_expansion_panel_11_Template, 5, 3, \"mat-expansion-panel\", 12);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(12, \"div\", 13);\n    i0.ɵɵelementStart(13, \"strong\");\n    i0.ɵɵtext(14, \"Output\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(15, \"mat-accordion\", 5);\n    i0.ɵɵtemplate(16, AllocateReviewRunComponent_ng_container_0_form_4_mat_expansion_panel_2_mat_expansion_panel_16_Template, 6, 3, \"mat-expansion-panel\", 12);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const process_r5 = ctx.$implicit;\n    i0.ɵɵadvance(5);\n    i0.ɵɵtextInterpolate1(\"Process Name - \", process_r5.get(\"processName\").value, \"\");\n    i0.ɵɵadvance(6);\n    i0.ɵɵproperty(\"ngForOf\", process_r5.get(\"inputFA\").controls);\n    i0.ɵɵadvance(5);\n    i0.ɵɵproperty(\"ngForOf\", process_r5.get(\"outputFA\").controls);\n  }\n}\nfunction AllocateReviewRunComponent_ng_container_0_form_4_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"form\", 4);\n    i0.ɵɵelementStart(1, \"mat-accordion\", 5);\n    i0.ɵɵtemplate(2, AllocateReviewRunComponent_ng_container_0_form_4_mat_expansion_panel_2_Template, 17, 3, \"mat-expansion-panel\", 6);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const ctx_r3 = i0.ɵɵnextContext(2);\n    i0.ɵɵproperty(\"formGroup\", ctx_r3.allocationFG);\n    i0.ɵɵadvance(2);\n    i0.ɵɵproperty(\"ngForOf\", ctx_r3.allocationFG.get(\"processFA\").controls);\n  }\n}\nfunction AllocateReviewRunComponent_ng_container_0_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementContainerStart(0);\n    i0.ɵɵelementStart(1, \"mat-card\", 1);\n    i0.ɵɵelementStart(2, \"div\", 2);\n    i0.ɵɵtext(3, \" 5. Allocate, review and run \");\n    i0.ɵɵelementEnd();\n    i0.ɵɵtemplate(4, AllocateReviewRunComponent_ng_container_0_form_4_Template, 3, 2, \"form\", 3);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementContainerEnd();\n  }\n  if (rf & 2) {\n    const ctx_r0 = i0.ɵɵnextContext();\n    i0.ɵɵadvance(4);\n    i0.ɵɵproperty(\"ngIf\", ctx_r0.allocationFG);\n  }\n}\nfunction AllocateReviewRunComponent_ng_container_1_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r88 = i0.ɵɵgetCurrentView();\n    i0.ɵɵelementContainerStart(0);\n    i0.ɵɵelementStart(1, \"app-show-result\", 63);\n    i0.ɵɵlistener(\"runStatusChange\", function AllocateReviewRunComponent_ng_container_1_Template_app_show_result_runStatusChange_1_listener($event) {\n      i0.ɵɵrestoreView(_r88);\n      const ctx_r87 = i0.ɵɵnextContext();\n      return ctx_r87.runStatusChangeFnc($event);\n    });\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementContainerEnd();\n  }\n  if (rf & 2) {\n    const ctx_r1 = i0.ɵɵnextContext();\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"runStatusInp\", ctx_r1.runStatus);\n  }\n}\nfunction AllocateReviewRunComponent_ng_container_2_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementContainerStart(0);\n    i0.ɵɵelement(1, \"app-failed-run\");\n    i0.ɵɵelementContainerEnd();\n  }\n}\nexport let AllocateReviewRunComponent = /*#__PURE__*/(() => {\n  class AllocateReviewRunComponent {\n    constructor(formBuilder, toasterService, allocateReviewRun, storageService, activatedRoute, router) {\n      this.formBuilder = formBuilder;\n      this.toasterService = toasterService;\n      this.allocateReviewRun = allocateReviewRun;\n      this.storageService = storageService;\n      this.activatedRoute = activatedRoute;\n      this.router = router;\n      this.RunStatusKeyIDEnum = RunStatusKeyIDEnum;\n      this.massAllocation = false;\n      // global constant\n      this.MaterialFormFieldAppearance = MaterialFormFieldAppearance;\n      this.messageAlertTypeEnum = MessageAlertTypeEnum;\n      this.messageAlertIconEnum = MessageAlertIconEnum;\n      this.percentage = false;\n      this.ProcessInputEnum = PROCESS_INPUT_ENUM;\n      this.ProcessOutputEnum = PROCESS_OUTPUT_ENUM;\n      this.massOrVolume = [];\n      this.allocationMethod = [{\n        name: \"Mass or Volume\",\n        keyID: \"MASS_OR_VOLUME\",\n        id: 1\n      }, {\n        name: \"Percentage\",\n        keyID: \"PERCENTAGE\",\n        id: 2\n      }];\n      this.runStatusChange = new EventEmitter();\n      this.checkLinkedRecords = 0;\n    }\n    ngOnInit() {\n      return __awaiter(this, void 0, void 0, function* () {\n        this.currentOrgID = this.storageService.getStorage('currentOrgID');\n        this.activatedRoute.queryParams.subscribe(queryParams => {\n          if (queryParams.runID) {\n            this.runID = queryParams.runID;\n          }\n        });\n      });\n    }\n    ngOnChanges(changes) {\n      if (changes.linkedRecordsInp && this.linkedRecordsInp) {\n        this.linkedRecords = this.linkedRecordsInp;\n      }\n      if (changes.runStatusInp && this.runStatusInp) {\n        this.runStatus = this.runStatusInp;\n      }\n      if (this.isDataCollection || this.stepperIndex === 4) {\n        this.handleChanges();\n      }\n    }\n    getLabelText(label) {\n      if (label == null) {\n        return;\n      }\n      if (label == this.ProcessInputEnum.FUEL) {\n        return 'Fuel name: ';\n      } else if (label == this.ProcessOutputEnum.FINISHED_PRODUCT || label == this.ProcessOutputEnum.CO_PRODUCT || label == this.ProcessOutputEnum.INTERMEDIATE_PRODUCT || label == this.ProcessOutputEnum.PRECURSOR_PRODUCT) {\n        return 'Product name';\n      }\n      {\n        return 'Name: ';\n      }\n    }\n    handleChanges() {\n      return __awaiter(this, void 0, void 0, function* () {\n        yield this.getAllocateReviewRun();\n        this.createForm();\n      });\n    }\n    createForm() {\n      this.allocationFG = this.formBuilder.group({\n        processFA: this.formBuilder.array([])\n      });\n      if (this.allocationData) {\n        this.setProcessFormArray();\n      }\n    }\n    get processFAControls() {\n      return this.allocationFG.get('processFA').controls;\n    }\n    processFG(process) {\n      return this.formBuilder.group({\n        processID: process.id,\n        recordsCollected: process.recordsCollected,\n        processName: process.name,\n        inputFA: this.formBuilder.array([]),\n        outputFA: this.formBuilder.array([])\n      });\n    }\n    setProcessFormArray() {\n      this.checkLinkedRecords = 0;\n      this.allocationData.forEach(process => {\n        let processFG = this.processFG(process);\n        if (this.linkedRecords == null) {\n          this.checkLinkedRecords += process.linkedRecords;\n        }\n        this.processFA.push(processFG);\n        process.input.forEach(input => {\n          let inputFG = this.getProcessInput(input);\n          processFG.get('inputFA').push(inputFG);\n          input.source.forEach(source => {\n            let activityData = [];\n            let sourceInputFG;\n            if (source.data.length > 0) {\n              source.data.forEach(data => __awaiter(this, void 0, void 0, function* () {\n                if (source.allocations[0].isAllocationRequired) {\n                  sourceInputFG = this.getInputSourceFG(source, 'allocationMethod', data, activityData);\n                } else {\n                  let checkSingleOrCommonSource = this.checkAllocate(source.allocations, source.allocationMethodStdID);\n                  if (checkSingleOrCommonSource == \"singleSource\") {\n                    sourceInputFG = this.getInputSourceFG(source, 'singleSource', data, activityData);\n                  } else if (checkSingleOrCommonSource == \"allocationMethod\") {\n                    sourceInputFG = this.getInputSourceFG(source, 'allocationMethod', data, activityData);\n                  } else {\n                    sourceInputFG = this.getInputSourceFG(source, 'commonSubMeter', data, activityData);\n                  }\n                }\n                inputFG.get('sourceFG').push(sourceInputFG);\n              }));\n            }\n          });\n        });\n        process.output.forEach((output, outputIndex) => {\n          let outputFG = this.getProcessOutput(output);\n          processFG.get('outputFA').push(outputFG);\n          output.source.forEach((source, index) => {\n            let sourceOutputFG;\n            // if (source.data.length >= 0) {\n            source.data.forEach((data, index1) => {\n              if (output.keyID === this.ProcessOutputEnum.PRECURSOR_PRODUCT || output.keyID === this.ProcessOutputEnum.INTERMEDIATE_PRODUCT || output.keyID === this.ProcessOutputEnum.FINISHED_PRODUCT) {\n                sourceOutputFG = this.getOutputSourceFG(source, 'MassOrVol', 'multi', data, output.keyID, outputIndex, index1);\n              } else if (output.keyID === this.ProcessOutputEnum.CO_PRODUCT) {\n                sourceOutputFG = this.getOutputSourceFG(source, 'MassOrVol', 'singleSource', data, output.keyID, outputIndex, index1);\n              } else {\n                sourceOutputFG = this.getOutputSourceFG(source, 'percentage', 'multi', data, output.keyID, outputIndex, index1);\n              }\n              outputFG.get('outputSourceFG').push(sourceOutputFG);\n            });\n            // }\n          });\n        });\n      });\n    }\n\n    get processFA() {\n      return this.allocationFG.get('processFA');\n    }\n    getProcessInput(input) {\n      return this.formBuilder.group({\n        inputID: input.id,\n        inputName: input.name,\n        inputKeyID: input.keyID,\n        sourceFG: this.formBuilder.array([])\n      });\n    }\n    getProcessOutput(output) {\n      return this.formBuilder.group({\n        outputID: output.id,\n        outputName: output.name,\n        outputKeyID: output.keyID,\n        outputSourceFG: this.formBuilder.array([])\n      });\n    }\n    getOutputSourceFG(source, allocationMethod, singleSource, data, outputKeyID, index, dataIndex) {\n      let formGroup;\n      formGroup = this.formBuilder.group({\n        entityID: data.entity ? [data.entity.id] : null,\n        sourceID: source.id,\n        sourceName: [source.name],\n        sourceKeyID: [source.keyID],\n        entityName: data.entity ? [data.entity.name] : null,\n        sourceProcessInputOutPutID: [source.processInputOutputID],\n        massOrVolume: [data.massOrVolumm],\n        massAllocation: true,\n        markAsReviewed: [data.markAsReviewed ? data.markAsReviewed : null, Validators.required],\n        allocationMethod: outputKeyID === 'intermediate-product' ? 'MASS_OR_VOLUME' : allocationMethod === 'percentage' ? 'PERCENTAGE' : data.allocationMethod != null ? data.allocationMethod : null,\n        allocationPct: [data.allocationPct || null],\n        description: [data.description || null],\n        uomCode: data.unit.uomCode ? data.unit.uomCode : '',\n        unitName: data.unit.uomName,\n        amount: data.amount,\n        activityData: [],\n        keyID: outputKeyID,\n        exportedQuantity: source.keyID == PROCESS_OUTPUT_ENTITY_SOURCE_KEYID_ENUM.EXPORTED_FROM_THIS_PROCESS ? data.totalProductProduced : null,\n        // exportedUnitName: source.keyID == PROCESS_OUTPUT_ENTITY_SOURCE_KEYID_ENUM.EXPORTED_FROM_THIS_PROCESS || PROCESS_OUTPUT_ENTITY_SOURCE_KEYID_ENUM.EXPORTED_FROM_THIS_PROCESS ? data.totalProductProducedUnit ? data.totalProductProducedUnit.uomName : null,\n        // exportUomCode: source.keyID == PROCESS_OUTPUT_ENTITY_SOURCE_KEYID_ENUM.EXPORTED_FROM_THIS_PROCESS || PROCESS_OUTPUT_ENTITY_SOURCE_KEYID_ENUM.EXPORTED_FROM_THIS_PROCESS ? data.totalProductProducedUnit ? data.totalProductProducedUnit.uomCode : null,\n        exportedUnitName: source.keyID === PROCESS_OUTPUT_ENTITY_SOURCE_KEYID_ENUM.EXPORTED_FROM_THIS_PROCESS ? data.totalProductProducedUnit ? data.totalProductProducedUnit.uomName : null : null,\n        exportUomCode: source.keyID === PROCESS_OUTPUT_ENTITY_SOURCE_KEYID_ENUM.EXPORTED_FROM_THIS_PROCESS ? data.totalProductProducedUnit ? data.totalProductProducedUnit.uomCode : null : null,\n        singleSource: singleSource,\n        isMassBasedAllocationRequired: allocationMethod == 'MassOrVol' ? true : false,\n        index: index,\n        dataIndex: dataIndex\n      });\n      if (data.allocationMethod != null) {\n        if (data.allocationMethod == 'MASS_OR_VOLUME') {\n          this.allocationMethodCheck(\"MASS_OR_VOLUME\", index);\n        } else if (data.allocationMethod == 'PERCENTAGE') {\n          this.allocationMethodCheck(\"PERCENTAGE\", index);\n        }\n      }\n      this.getActivityConfigData(formGroup, source);\n      return formGroup;\n    }\n    getInitialMarkAsReviewed(data) {\n      if (data.allocationMethod == \"MASS_OR_VOLUME\" || data.allocationMethod == \"PERCENTAGE\") {\n        return true;\n      } else {\n        return false;\n      }\n    }\n    getInitialAllocationMethod(massOrVolume, percentage) {\n      if (massOrVolume) {\n        this.massAllocation = true;\n        this.percentage = false;\n        return 'MASS_OR_VOLUME';\n      } else if (percentage) {\n        this.massAllocation = false;\n        this.percentage = true;\n        return 'PERCENTAGE';\n      } else {\n        return '';\n      }\n    }\n    allocationMethodCheck(keyID, index) {\n      if (keyID == 'MASS_OR_VOLUME') {\n        this.massAllocation = true;\n        this.percentage = false;\n        this.massOrVolume[index] = 'massAllocation';\n      } else if (keyID == \"PERCENTAGE\") {\n        this.massAllocation = false;\n        this.percentage = true;\n        this.massOrVolume[index] = 'percentage';\n      }\n    }\n    routeToActivity(activity) {\n      if (activity.formType == ACTIVITY_FORM_TYPE_KEYID_ENUM.GHG_FORM) {\n        this.router.navigate([`/activity-data/${activity.activityKeyID}/page`], {\n          queryParams: {\n            activityConfigID: activity.ids\n          }\n        });\n      } else {\n        this.router.navigate([`/cbam/activity-data/activity/${activity.activityKeyID}/page`], {\n          queryParams: {\n            activityConfigID: activity.ids\n          }\n        });\n      }\n    }\n    getConsumedPercentage(percentage, totalAmount, unit, uomCode) {\n      if (percentage <= 100) {\n        const consumedAmount = percentage / 100 * totalAmount;\n        return `${consumedAmount} ${uomCode} (${unit})`;\n      }\n    }\n    getInputSourceFG(source, allocationMethod, data, activityData) {\n      const isAllocationMethod = allocationMethod === 'allocationMethod';\n      const isSingleSource = allocationMethod === 'singleSource';\n      const isCommonSubMeter = allocationMethod === 'commonSubMeter';\n      let awaited_activity_data = [];\n      let fg = this.formBuilder.group({\n        entityID: data.entity ? [data.entity.id] : null,\n        sourceID: source.id,\n        sourceName: [source.name],\n        sourceKeyID: [source.keyID],\n        entityName: data.entity ? [data.entity.name] : null,\n        sourceProcessInputOutPutID: source.processInputOutputID,\n        isSingleSource: isSingleSource,\n        isAllocation: isAllocationMethod,\n        isCommonSubMeter: isCommonSubMeter,\n        allocationPct: isSingleSource ? null : [data.allocationPct || '', Validators.required],\n        description: isSingleSource ? null : [data.description || '', Validators.required],\n        markAsReviewed: [data.allocationPct != null, Validators.required],\n        uomCode: data.unit ? data.unit.uomCode : '--',\n        unitName: data.unit ? data.unit.uomName : '--',\n        amount: data.amount,\n        activityData: []\n      });\n      this.getActivityConfigData(fg, source);\n      return fg;\n    }\n    getActivityConfigData(formGroup, source) {\n      let activityData = [];\n      source.activity.forEach(activity => {\n        activity.config.forEach(config => {\n          const {\n            activityKeyID,\n            id,\n            name\n          } = config;\n          let existingEntry = activityData.find(item => item.activityKeyID === activityKeyID);\n          if (existingEntry) {\n            existingEntry.ids.push(id);\n          } else {\n            existingEntry = {\n              activityKeyID: activityKeyID,\n              name: name,\n              formType: activity.type[0].keyID,\n              activityName: activity.name,\n              ids: []\n            };\n            existingEntry.ids.push(id);\n            activityData.push(existingEntry);\n          }\n        });\n      });\n      // Convert activityData to an array of objects\n      activityData = Object.values(activityData);\n      formGroup.patchValue({\n        activityData: activityData\n      });\n    }\n    getAllocateReviewRun() {\n      return __awaiter(this, void 0, void 0, function* () {\n        try {\n          const res = yield this.allocateReviewRun.getAllocationReviewRun(this.currentOrgID, this.runID).toPromise();\n          this.allocationData = res;\n          // this.isAllocateOrNot();\n        } catch (error) {\n          console.error('Error fetching allocation review run data:', error);\n        }\n      });\n    }\n    checkAllocate(sourceAllocations, sourceAllocationStdID) {\n      if (sourceAllocationStdID.length == 2) {\n        if (sourceAllocations[0].subtype[0].id == sourceAllocationStdID[1]) {\n          return 'singleSource';\n        } else {\n          return 'commonSubMeter';\n        }\n      } else {\n        if (sourceAllocations[0].id == sourceAllocationStdID[0]) {\n          return 'singleSource';\n        } else {\n          return 'allocationMethod';\n        }\n      }\n    }\n    onSubmit(runStatus) {\n      return __awaiter(this, void 0, void 0, function* () {\n        console.log('allocation form group', this.allocationFG);\n        let result = [];\n        let isValid = true;\n        const processFAArray = this.allocationFG.get('processFA');\n        if (this.allocationFG.valid) {\n          processFAArray.controls.forEach((process, index) => {\n            let inputOutputIndex;\n            if (!result[index]) {\n              result[index] = {};\n            }\n            result[index].processID = process.value.processID;\n            result[index].sourceLevelData = [];\n            process.value.inputFA.forEach((input, i) => {\n              var _a;\n              inputOutputIndex = i;\n              result[index].sourceLevelData.push({\n                typeID: input.inputID,\n                allocationData: []\n              });\n              (_a = input.sourceFG) === null || _a === void 0 ? void 0 : _a.forEach(source => {\n                if (source && !source.markAsReviewed) {\n                  isValid = false;\n                  console.log('input casse false', source);\n                  this.toasterService.error('Please select \"Mark as reviewed\" for all allocations.');\n                  return;\n                } else {\n                  result[index].sourceLevelData[i].allocationData.push({\n                    \"sourceID\": source.sourceID,\n                    \"entityID\": source.entityID,\n                    \"allocationPct\": source.allocationPct,\n                    \"description\": source.description,\n                    \"allocationMethod\": \"PERCENTAGE\",\n                    \"processInputOutputID\": source.sourceProcessInputOutPutID,\n                    \"markAsReviewed\": true,\n                    \"ioType\": 'INPUT',\n                    \"massOrVolume\": '',\n                    \"uomCode\": ''\n                  });\n                }\n              });\n            });\n            process.value.outputFA.forEach((input, j) => {\n              var _a;\n              result[index].sourceLevelData.push({\n                typeID: input.outputID,\n                allocationData: []\n              });\n              (_a = input.outputSourceFG) === null || _a === void 0 ? void 0 : _a.forEach((source, sourceIndex) => {\n                if (source.singleSource == 'singleSource') {\n                  source.allocationMethod = 'PERCENTAGE';\n                }\n                if (sourceIndex != 0 && (source.keyID == 'co-product' || source.keyID == 'finished-product')) {\n                  if (source.allocationPct) {\n                    source.allocationMethod = 'PERCENTAGE';\n                  } else {\n                    source.allocationMethod = 'MASS_OR_VOLUME';\n                  }\n                }\n                if (source && !source.markAsReviewed && sourceIndex == 0) {\n                  // if (sourceIndex == 0) {\n                  isValid = false;\n                  this.toasterService.error('Please select \"Mark as reviewed\" for all allocations.');\n                  return;\n                  // }\n                } else {\n                  if (source.allocationMethod == 'PERCENTAGE' && (source.allocationPct == null || source.description == null)) {\n                    console.log('single source', source);\n                    if (source.singleSource != 'multi' && source.singleSource != 'singleSource') {\n                      console.log('check single source', source);\n                      if (sourceIndex == 0) {\n                        isValid = false;\n                        this.toasterService.error('Please fill all valid fields');\n                        return;\n                      }\n                    }\n                  } else if (source.allocationMethod == 'PERCENTAGE') {\n                    source.massOrVolume = null;\n                  } else if (source.allocationMethod == 'MASS_OR_VOLUME') {\n                    source.allocationPct = null;\n                    source.description = null;\n                  }\n                  result[index].sourceLevelData[j + inputOutputIndex + 1].allocationData.push({\n                    \"sourceID\": source.sourceID,\n                    \"entityID\": source.entityID,\n                    \"allocationPct\": source.allocationPct,\n                    \"description\": source.description,\n                    \"processInputOutputID\": source.sourceProcessInputOutPutID,\n                    \"ioType\": 'OUTPUT',\n                    \"markAsReviewed\": true,\n                    \"massOrVolume\": source.massOrVolume,\n                    \"uomCode\": '',\n                    \"allocationMethod\": source.allocationMethod\n                  });\n                }\n              });\n            });\n          });\n        } else {\n          isValid = false;\n          this.toasterService.error('please fill percentage and description');\n        }\n        if (isValid) {\n          console.log(this.linkedRecords, 'check records', this.checkLinkedRecords);\n          if (this.linkedRecords == null) {\n            this.linkedRecords = this.checkLinkedRecords;\n          }\n          let allocationData = {\n            totalActivityData: this.linkedRecords,\n            runStatus: runStatus,\n            processLevelData: {}\n          };\n          allocationData.processLevelData = result;\n          // this.allocateReviewRun.createAllocationData(this.currentOrgID, this.runID, allocationData).subscribe((res: any) => {\n          // \tif (res.status == 'success') {\n          // \t\treturn true;\n          // \t} else {\n          // \t\treturn false;\n          // \t}\n          // })\n          let promise = this.allocateReviewRun.createAllocationData(this.currentOrgID, this.runID, allocationData).toPromise();\n          try {\n            const response = yield promise;\n            return true;\n          } catch (error) {\n            return false;\n          }\n        }\n      });\n    }\n    runStatusChangeFnc(event) {\n      this.runStatusChange.emit(event);\n    }\n  }\n  AllocateReviewRunComponent.ɵfac = function AllocateReviewRunComponent_Factory(t) {\n    return new (t || AllocateReviewRunComponent)(i0.ɵɵdirectiveInject(i1.FormBuilder), i0.ɵɵdirectiveInject(i2.ToastrService), i0.ɵɵdirectiveInject(i3.AlllocateReviewRunController), i0.ɵɵdirectiveInject(i4.StorageService), i0.ɵɵdirectiveInject(i5.ActivatedRoute), i0.ɵɵdirectiveInject(i5.Router));\n  };\n  AllocateReviewRunComponent.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n    type: AllocateReviewRunComponent,\n    selectors: [[\"app-allocate-review-run\"]],\n    inputs: {\n      isDataCollection: \"isDataCollection\",\n      stepperIndex: \"stepperIndex\",\n      linkedRecordsInp: \"linkedRecordsInp\",\n      runStatusInp: \"runStatusInp\"\n    },\n    outputs: {\n      runStatusChange: \"runStatusChange\"\n    },\n    features: [i0.ɵɵNgOnChangesFeature],\n    decls: 3,\n    vars: 3,\n    consts: [[4, \"ngIf\"], [1, \"border\", \"cardOverwrite\"], [1, \"cardTitle\", \"pb-3\"], [3, \"formGroup\", 4, \"ngIf\"], [3, \"formGroup\"], [\"multi\", \"true\"], [\"class\", \"cardOverwrite matAccordion mb-2\", \"expanded\", \"false\", 4, \"ngFor\", \"ngForOf\"], [\"expanded\", \"false\", 1, \"cardOverwrite\", \"matAccordion\", \"mb-2\"], [1, \"row\", \"w-100\"], [1, \"col-sm-8\"], [1, \"cardOverwrite\", \"border\", \"card-body\", \"bg-light\"], [1, \"text-secondary\", \"fs-5\", \"pb-3\"], [\"class\", \"cardOverwrite mb-2\", \"expanded\", \"false\", 4, \"ngFor\", \"ngForOf\"], [1, \"text-secondary\", \"fs-5\", \"pb-3\", \"pt-3\"], [\"expanded\", \"false\", 1, \"cardOverwrite\", \"mb-2\"], [4, \"ngIf\", \"ngIfElse\"], [\"noAllocationMessage\", \"\"], [4, \"ngFor\", \"ngForOf\"], [\"class\", \"text-secondary bg-light p-2 rounded\", 4, \"ngIf\"], [1, \"pt-2\"], [\"class\", \"pb-3\", 4, \"ngIf\"], [\"style\", \"max-width: 550px; display: inline-block; padding-bottom: 20px;\", 4, \"ngIf\"], [1, \"ps-5\"], [1, \"ps-1\"], [1, \"float-end\", \"me-3\"], [2, \"font-size\", \"1.2em\", \"cursor\", \"pointer\"], [\"type\", \"checkbox\", 1, \"checkbox-lg\", \"textInline\", 3, \"formControl\"], [1, \"ps-2\"], [1, \"d-flex\", \"flex-wrap\", \"gap-3\"], [\"class\", \"me-3 mb-3\", 4, \"ngFor\", \"ngForOf\"], [1, \"text-secondary\", \"bg-light\", \"p-2\", \"rounded\"], [1, \"pb-3\"], [1, \"fw-normal\", \"ps-2\"], [2, \"max-width\", \"550px\", \"display\", \"inline-block\", \"padding-bottom\", \"20px\"], [1, \"allocationInfo\", \"col-sm-10\"], [3, \"messageAlertTypeInp\", \"messageAlertIconInp\", \"contentInp\"], [1, \"pt-3\"], [1, \"col-sm-3\", 3, \"appearance\"], [1, \"formLabel\"], [\"matInput\", \"\", \"type\", \"number\", \"min\", \"0\", \"max\", \"100\", \"placeholder\", \"Allocation percentage\", 1, \"formPlaceholder\", 3, \"formControl\"], [\"matSuffix\", \"\"], [\"matInput\", \"\", \"type\", \"text\", \"placeholder\", \"Brief description\", 1, \"formPlaceholder\", 3, \"formControl\"], [1, \"row\", \"col-sm-10\"], [1, \"pb-3\", \"pt-3\"], [1, \"me-3\", \"mb-3\"], [1, \"link-primary\", \"cursorPointer\", 3, \"click\"], [\"class\", \"pt-2\", 4, \"ngFor\", \"ngForOf\"], [\"coProduct\", \"\"], [\"class\", \"pb-3 pt-3\", 4, \"ngIf\"], [2, \"font-size\", \"1.2em\"], [\"class\", \"float-end me-3\", 4, \"ngIf\"], [\"class\", \"col-sm-3 pt-1\", 4, \"ngIf\"], [1, \"col-sm-3\", \"pt-1\"], [1, \"row\", \"col-sm-12\", \"d-flex\", \"align-items-center\"], [1, \"col-sm-5\"], [\"class\", \"col-sm-3 pt-2\", 4, \"ngIf\"], [1, \"matFieldWidth100\", 3, \"appearance\"], [3, \"formControl\", \"selectionChange\"], [3, \"value\", 4, \"ngFor\", \"ngForOf\"], [3, \"value\"], [1, \"col-sm-3\", \"pt-2\"], [1, \"matFieldWidth100\", \"d-inline-block\", 3, \"appearance\"], [1, \"formLabel\", \"ps-3\"], [3, \"runStatusInp\", \"runStatusChange\"]],\n    template: function AllocateReviewRunComponent_Template(rf, ctx) {\n      if (rf & 1) {\n        i0.ɵɵtemplate(0, AllocateReviewRunComponent_ng_container_0_Template, 5, 1, \"ng-container\", 0);\n        i0.ɵɵtemplate(1, AllocateReviewRunComponent_ng_container_1_Template, 2, 1, \"ng-container\", 0);\n        i0.ɵɵtemplate(2, AllocateReviewRunComponent_ng_container_2_Template, 2, 0, \"ng-container\", 0);\n      }\n      if (rf & 2) {\n        i0.ɵɵproperty(\"ngIf\", ctx.runStatus == ctx.RunStatusKeyIDEnum.ALLOCATE_REVIEW);\n        i0.ɵɵadvance(1);\n        i0.ɵɵproperty(\"ngIf\", ctx.runStatus == ctx.RunStatusKeyIDEnum.CALCULATION_PENDING || ctx.runStatus == ctx.RunStatusKeyIDEnum.DONE || ctx.runStatus == ctx.RunStatusKeyIDEnum.RUN_ERROR);\n        i0.ɵɵadvance(1);\n        i0.ɵɵproperty(\"ngIf\", false);\n      }\n    },\n    directives: [i6.NgIf, i7.MatCard, i1.ɵNgNoValidate, i1.NgControlStatusGroup, i1.FormGroupDirective, i8.MatAccordion, i6.NgForOf, i8.MatExpansionPanel, i8.MatExpansionPanelHeader, i1.CheckboxControlValueAccessor, i1.NgControlStatus, i1.FormControlDirective, i9.MessageAlertComponent, i10.MatFormField, i10.MatLabel, i11.MatInput, i1.MinValidator, i1.MaxValidator, i1.NumberValueAccessor, i1.DefaultValueAccessor, i10.MatSuffix, i12.MatSelect, i13.MatOption, i14.ShowResultComponent, i15.FailedRunComponent],\n    styles: [\".activityContainer[_ngcontent-%COMP%]{width:100%;margin:0 auto;padding:20px;display:flex;align-items:center}.activityContainerLeft[_ngcontent-%COMP%]{flex:1}.activityContainerRight[_ngcontent-%COMP%]{flex:1;display:flex;justify-content:flex-end}.activityContainerRightInner[_ngcontent-%COMP%]{display:flex;align-items:center}.activityTitle[_ngcontent-%COMP%]{color:gray;text-transform:capitalize;font-size:14px;font-weight:700}.activitySubtitle[_ngcontent-%COMP%]{color:gray;font-size:12px;font-weight:200;text-transform:none}.matAccordion[_ngcontent-%COMP%]{box-shadow:none!important;background:whitesmoke;border-radius:16px!important}.subType[_ngcontent-%COMP%]{margin:5px}.custom-header[_ngcontent-%COMP%]{display:flex;flex-direction:column;align-items:flex-start}.formSelected[_ngcontent-%COMP%]{margin-left:100px}.table[_ngcontent-%COMP%]{width:100%}th[_ngcontent-%COMP%], td[_ngcontent-%COMP%]{padding:8px;text-align:left}th[_ngcontent-%COMP%]{border:none}.checkbox-lg[_ngcontent-%COMP%]{width:1.2rem;height:1.2rem;padding-bottom:10px}.allocationInfo[_ngcontent-%COMP%]{width:650px}.activityforms[_ngcontent-%COMP%]{margin-left:300px}.formSelected[_ngcontent-%COMP%]{margin-left:300px}.textInline[_ngcontent-%COMP%]{display:inline-block;vertical-align:middle}\"]\n  });\n  return AllocateReviewRunComponent;\n})();","map":null,"metadata":{},"sourceType":"module"}