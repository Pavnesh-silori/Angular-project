{"ast":null,"code":"// tsc-library\nimport { ToastrColor } from \"@library/toastr-service\";\nimport { InvalidForm } from \"@library/tsc-common\";\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@carbon/controller/gas.controller\";\nimport * as i2 from \"@library/toastr-service\";\n// /tsc-library\nexport let GasService = /*#__PURE__*/(() => {\n  class GasService {\n    constructor(gasController, toastrService) {\n      this.gasController = gasController;\n      this.toastrService = toastrService;\n    }\n    getGas() {\n      return new Promise(resole => {\n        let gas;\n        this.gasController.getGas().subscribe(gasRes => {\n          gas = gasRes;\n          resole(gas);\n        }, error => {\n          console.log('error in getGas -', error);\n          this.toastrService.openToast(InvalidForm.INVALID_FORM_TITLE, 'Error in getting gas', ToastrColor.ERROR);\n        });\n      });\n    }\n  }\n  GasService.ɵfac = function GasService_Factory(t) {\n    return new (t || GasService)(i0.ɵɵinject(i1.GasController), i0.ɵɵinject(i2.ToastrService));\n  };\n  GasService.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n    token: GasService,\n    factory: GasService.ɵfac,\n    providedIn: 'root'\n  });\n  return GasService;\n})();","map":null,"metadata":{},"sourceType":"module"}