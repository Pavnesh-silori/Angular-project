{"ast":null,"code":"// tsc-library\nimport { ToastrColor } from \"@library/toastr-service\";\nimport { InvalidForm } from \"@library/tsc-common\";\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@carbon/controller/equipment-group.controller\";\nimport * as i2 from \"@library/toastr-service\";\n// /tsc-library\nexport let EquipmentGroupService = /*#__PURE__*/(() => {\n  class EquipmentGroupService {\n    constructor(equipmentGroupController, toastrService) {\n      this.equipmentGroupController = equipmentGroupController;\n      this.toastrService = toastrService;\n    }\n    getEquipmentGroup(currentOrgID) {\n      return new Promise(resole => {\n        let equipment;\n        this.equipmentGroupController.getEquipment(currentOrgID).subscribe(equipmentRes => {\n          equipment = equipmentRes;\n          resole(equipment);\n        }, error => {\n          console.log('error in getEquipment -', error);\n          this.toastrService.openToast(InvalidForm.INVALID_FORM_TITLE, 'Error in getting source gas', ToastrColor.ERROR);\n        });\n      });\n    }\n  }\n  EquipmentGroupService.ɵfac = function EquipmentGroupService_Factory(t) {\n    return new (t || EquipmentGroupService)(i0.ɵɵinject(i1.EquipmentGroupController), i0.ɵɵinject(i2.ToastrService));\n  };\n  EquipmentGroupService.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n    token: EquipmentGroupService,\n    factory: EquipmentGroupService.ɵfac,\n    providedIn: 'root'\n  });\n  return EquipmentGroupService;\n})();","map":null,"metadata":{},"sourceType":"module"}