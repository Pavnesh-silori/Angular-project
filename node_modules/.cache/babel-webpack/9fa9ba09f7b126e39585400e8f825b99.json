{"ast":null,"code":"import * as i0 from \"@angular/core\";\nimport * as i1 from \"@library/toastr-service\";\nimport * as i2 from \"@carbon/controller/activity.controller\";\nexport let ActivityService = /*#__PURE__*/(() => {\n  class ActivityService {\n    constructor(toastrService, activityController) {\n      this.toastrService = toastrService;\n      this.activityController = activityController;\n    }\n    getAllActivity() {\n      return new Promise(resolve => {\n        let activity;\n        this.activityController.getAllActivity().subscribe(result => {\n          activity = result;\n        }, error => {\n          console.log('error in getAllActivity -', error);\n          this.toastrService.openToast('Error', 'Error in getting activity', 'error');\n        }).add(() => {\n          resolve(activity);\n        });\n      });\n    }\n    getActivityByID(activityID) {\n      return new Promise(resolve => {\n        let activity;\n        this.activityController.getActivityByID(activityID).subscribe(result => {\n          activity = result;\n        }, error => {\n          console.log('error in getActivityByID -', error);\n          this.toastrService.openToast('Error', 'Error in getting activity detail', 'error');\n        }).add(() => {\n          resolve(activity);\n        });\n      });\n    }\n    getActivityByScopeID(scopeID) {\n      return new Promise(resolve => {\n        let activity;\n        this.activityController.getActivityListByScopeID(scopeID).subscribe(result => {\n          activity = result;\n        }, error => {\n          console.log(\"error in getActivityByScopeID -\", error);\n          this.toastrService.openToast('Error', 'Error in getting details', 'error');\n        }).add(() => {\n          resolve(activity);\n        });\n      });\n    }\n    getAllActivityNew() {\n      return new Promise(resolve => {\n        let activity;\n        this.activityController.getAllActivityNew().subscribe(result => {\n          activity = result;\n        }, error => {\n          console.log('error in getAllActivity -', error);\n        }).add(() => {\n          resolve(activity);\n        });\n      });\n    }\n    getActivityByKeyIDFromActivityList(activityKeyID, activityList) {\n      return activityList.find(activity => activity.keyID == activityKeyID);\n    }\n  }\n  ActivityService.ɵfac = function ActivityService_Factory(t) {\n    return new (t || ActivityService)(i0.ɵɵinject(i1.ToastrService), i0.ɵɵinject(i2.ActivityController));\n  };\n  ActivityService.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n    token: ActivityService,\n    factory: ActivityService.ɵfac,\n    providedIn: 'root'\n  });\n  return ActivityService;\n})();","map":null,"metadata":{},"sourceType":"module"}