{"ast":null,"code":"import { ToastrTitle, ToastrColor } from \"@library/toastr-service\";\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@library/toastr-service\";\nimport * as i2 from \"@carbon/controller/activity-data.controller\";\nexport let ActivityDataService = /*#__PURE__*/(() => {\n  class ActivityDataService {\n    constructor(toastrService, activityDataController) {\n      this.toastrService = toastrService;\n      this.activityDataController = activityDataController;\n    }\n    getActivityDataByID(currentOrgID, activityDataID, activityKeyID) {\n      return new Promise(resolve => {\n        let formData;\n        this.activityDataController.getActivityDataByID(currentOrgID, activityKeyID, activityDataID).subscribe(result => {\n          formData = result;\n        }, error => {\n          console.log('error in getActivityDataByID() -', error);\n          this.toastrService.openToast(ToastrTitle.ERROR, 'Error in getting activity details.', ToastrColor.ERROR);\n        }).add(() => {\n          resolve(formData);\n        });\n      });\n    }\n    getFugitiveRefrigerationActivityDataByCedID(currentOrgID, activityKeyID, cedID) {\n      return new Promise(resolve => {\n        let formData;\n        this.activityDataController.getFugitiveRefrigerationActivityDataByCedID(currentOrgID, activityKeyID, cedID).subscribe(result => {\n          formData = result;\n        }, error => {\n          console.log('error in getFugitiveRefrigerationActivityDataByCedID() -', error);\n          this.toastrService.openToast(ToastrTitle.ERROR, 'Error in getting activity details.', ToastrColor.ERROR);\n        }).add(() => {\n          resolve(formData);\n        });\n      });\n    }\n    getFactorDetailsByFormDataID(currentOrgID, formDataID, activityKeyID) {\n      return new Promise(resolve => {\n        let factors;\n        this.activityDataController.getFactorDetailsByFormDataID(currentOrgID, formDataID, activityKeyID).subscribe(result => {\n          factors = result;\n        }, error => {\n          console.log('error in getFactorDetailsByFormDataID() -', error);\n          this.toastrService.openToast(ToastrTitle.ERROR, 'Error in getting factor details.', ToastrColor.ERROR);\n        }).add(() => {\n          resolve(factors);\n        });\n      });\n    }\n    getActivityDataWithActivityDataConfig(currentOrgID, activityDataKeyID, activityDataID) {\n      return new Promise(resolve => {\n        let formData;\n        this.activityDataController.getActivityDataWithActivityDataConfigByID(currentOrgID, activityDataKeyID, activityDataID).subscribe(result => {\n          formData = result;\n        }, error => {\n          console.log('error in get getActivityDataDetailsByID -', error);\n          this.toastrService.openToast(ToastrTitle.ERROR, 'Error in getting form details.', ToastrColor.ERROR);\n        }).add(() => {\n          resolve(formData);\n        });\n      });\n    }\n  }\n  ActivityDataService.ɵfac = function ActivityDataService_Factory(t) {\n    return new (t || ActivityDataService)(i0.ɵɵinject(i1.ToastrService), i0.ɵɵinject(i2.ActivityDataController));\n  };\n  ActivityDataService.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n    token: ActivityDataService,\n    factory: ActivityDataService.ɵfac,\n    providedIn: 'root'\n  });\n  return ActivityDataService;\n})();","map":null,"metadata":{},"sourceType":"module"}