{"ast":null,"code":"import { ActivityConfigEnum } from \"@carbon/enum/activity-config.enum\";\nimport { ACTIVITY_FORM_TYPE_KEYID_ENUM } from \"@carbon/enum/activity-form-enum\";\nconst CREATE_AD_HOC_SUBTITLE = 'Create a new record with details and activity data.';\nexport class CreateConfig {\n  constructor() {\n    this.ActivityConfigEnum = ActivityConfigEnum;\n    this.ACTIVITY_FORM_TYPE_KEYID_ENUM = ACTIVITY_FORM_TYPE_KEYID_ENUM;\n    this.title = 'Title';\n    this.subTitle = '';\n    this.origin = '';\n    this.action = '';\n    this.usePFF = 'NO';\n    this.tabView = 'NO';\n    this.activityDataTabView = 'NO';\n    this.showActivitySelection = 'YES';\n    this.showActivityDataError = 'YES';\n    this.from = 'NO';\n    this.isPFFUpdate = false;\n    this.isAdHocCreateUsingPFF = false;\n    this.users = [];\n    this.dataEntryMethod = [];\n    this.estimationMethod = [];\n    this.isWorkflowValid = true;\n    // @ViewChild('schedulerWorkflow') schedulerWorkflow: SchedulerWorkflowComponent;\n    // @ViewChild('configCreate') configCreate: ConfigCreateComponent;/* ACTIVITY_CONFIG_COMPONENT */\n    this.isApiValid = true;\n    // @ViewChild('api') api: ApiComponent;\n    this.isConfigValid = true;\n    // component: any; \n    this.isActivityDataValid = true;\n    this.docFileList = []; /* get upload file value */\n    this.saveAdHocAsPff = false;\n    this.createAdHocJson = {\n      configData: undefined,\n      activityData: undefined\n    };\n    this.isEqual = false;\n    this.approveBtn = false;\n    this.saveBtn = true;\n    this.submitBtn = false;\n    this.activityDataAction = 'APPROVED';\n    this.vehicles = [];\n  }\n  handleQueryParams(queryParams) {\n    const {\n      activityID,\n      action,\n      origin,\n      tabView,\n      from,\n      usePFF,\n      activityConfigID\n    } = queryParams;\n    this.activityID = activityID !== null && activityID !== void 0 ? activityID : this.activityID;\n    this.action = action !== null && action !== void 0 ? action : this.action;\n    this.origin = origin !== null && origin !== void 0 ? origin : this.origin;\n    this.tabView = tabView !== null && tabView !== void 0 ? tabView : this.tabView;\n    this.from = from !== null && from !== void 0 ? from : this.from;\n    this.usePFF = usePFF !== null && usePFF !== void 0 ? usePFF : this.usePFF;\n    this.activityConfigID = activityConfigID !== null && activityConfigID !== void 0 ? activityConfigID : this.activityConfigID;\n    if (this.from === 'reminder' || this.from === 'record') {\n      this.showActivitySelection = 'NO';\n    }\n    if (this.origin === ActivityConfigEnum.PFF) {\n      this.setupPFFConfig();\n    } else if (this.origin === ActivityConfigEnum.AD_HOC) {\n      this.setupAdHocConfig();\n    }\n  }\n  handleParams(params) {\n    if (params['activityConfigID']) {\n      this.isPFFUpdate = true;\n      this.activityConfigID = params['activityConfigID'];\n    }\n  }\n  setupPFFConfig() {\n    this.redirectUrl = `/carbon-setting/activity-config/page`;\n    this.selectedTab = 0;\n    if (this.action === 'create') {\n      this.activityDataTabView = 'NO';\n      this.titlePrefix = `Create`;\n      this.titleSuffix = `Activity Form`;\n    } else if (this.action === 'update') {\n      this.showActivitySelection = 'NO';\n      this.titlePrefix = `Update`;\n      this.titleSuffix = `Activity Form`;\n    }\n  }\n  setupAdHocConfig() {\n    this.redirectUrl = `/activity-data`;\n    this.activityDataTabView = 'YES';\n    this.titlePrefix = `Create`;\n    this.titleSuffix = `New Record`;\n    this.subTitle = CREATE_AD_HOC_SUBTITLE;\n    this.selectedTab = 0;\n    if (this.usePFF === 'YES') {\n      this.showActivityDataError = 'NO';\n      this.selectedTab = 1;\n      if (this.action === 'create') {\n        this.isAdHocCreateUsingPFF = true;\n      }\n    }\n  }\n}","map":null,"metadata":{},"sourceType":"module"}