{"ast":null,"code":"import * as i0 from '@angular/core';\nimport { Injectable, EventEmitter, Component, Output, Input, ViewChild, NgModule } from '@angular/core';\nimport * as i2 from 'ng-otp-input';\nimport { NgOtpInputComponent, NgOtpInputModule } from 'ng-otp-input';\nimport { MATERIAL_CONSTANT } from '@library/tsc-common';\nimport * as i1 from '@library/toastr-service';\nimport { ToastrTitle, ToastrColor } from '@library/toastr-service';\nimport * as i3 from '@angular/common';\nimport { CommonModule } from '@angular/common';\nimport * as i4 from '@angular/material/core';\nimport { MatRippleModule } from '@angular/material/core';\nfunction GenerateOtpComponent_button_1_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r3 = i0.ɵɵgetCurrentView();\n    i0.ɵɵelementStart(0, \"button\", 3);\n    i0.ɵɵlistener(\"click\", function GenerateOtpComponent_button_1_Template_button_click_0_listener() {\n      i0.ɵɵrestoreView(_r3);\n      const ctx_r2 = i0.ɵɵnextContext();\n      return ctx_r2.generateOtp();\n    });\n    i0.ɵɵtext(1);\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const ctx_r0 = i0.ɵɵnextContext();\n    i0.ɵɵproperty(\"matRippleCentered\", ctx_r0.MATERIAL_CONSTANT.MAT_RIPPLE_CENTER);\n    i0.ɵɵadvance(1);\n    i0.ɵɵtextInterpolate1(\" \", ctx_r0.generateOtpBtnLbl, \" \");\n  }\n}\nfunction GenerateOtpComponent_div_2_span_9_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"span\", 11);\n    i0.ɵɵtext(1);\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const ctx_r4 = i0.ɵɵnextContext(2);\n    i0.ɵɵadvance(1);\n    i0.ɵɵtextInterpolate1(\"in \", ctx_r4.formatTime(), \"\");\n  }\n}\nconst _c0 = function () {\n  return {\n    length: 6,\n    inputClass: \"dot\",\n    allowNumbersOnly: true\n  };\n};\nfunction GenerateOtpComponent_div_2_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r6 = i0.ɵɵgetCurrentView();\n    i0.ɵɵelementStart(0, \"div\");\n    i0.ɵɵelementStart(1, \"div\", 4);\n    i0.ɵɵelementStart(2, \"span\");\n    i0.ɵɵtext(3, \"Enter a OTP\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(4, \"ng-otp-input\", 5);\n    i0.ɵɵlistener(\"onInputChange\", function GenerateOtpComponent_div_2_Template_ng_otp_input_onInputChange_4_listener($event) {\n      i0.ɵɵrestoreView(_r6);\n      const ctx_r5 = i0.ɵɵnextContext();\n      return ctx_r5.onOtpChange($event);\n    });\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(5, \"div\", 4);\n    i0.ɵɵelementStart(6, \"button\", 6);\n    i0.ɵɵlistener(\"click\", function GenerateOtpComponent_div_2_Template_button_click_6_listener() {\n      i0.ɵɵrestoreView(_r6);\n      const ctx_r7 = i0.ɵɵnextContext();\n      return ctx_r7.resendOtp();\n    });\n    i0.ɵɵelementStart(7, \"span\", 7);\n    i0.ɵɵtext(8, \"Resend OTP \");\n    i0.ɵɵelementEnd();\n    i0.ɵɵtemplate(9, GenerateOtpComponent_div_2_span_9_Template, 2, 1, \"span\", 8);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(10, \"div\", 9);\n    i0.ɵɵelementStart(11, \"button\", 10);\n    i0.ɵɵlistener(\"click\", function GenerateOtpComponent_div_2_Template_button_click_11_listener() {\n      i0.ɵɵrestoreView(_r6);\n      const ctx_r8 = i0.ɵɵnextContext();\n      return ctx_r8.submitOtp();\n    });\n    i0.ɵɵtext(12);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const ctx_r1 = i0.ɵɵnextContext();\n    i0.ɵɵadvance(4);\n    i0.ɵɵproperty(\"config\", i0.ɵɵpureFunction0(5, _c0));\n    i0.ɵɵadvance(2);\n    i0.ɵɵproperty(\"disabled\", ctx_r1.remainingTime > 0);\n    i0.ɵɵadvance(3);\n    i0.ɵɵproperty(\"ngIf\", ctx_r1.remainingTime > 0);\n    i0.ɵɵadvance(2);\n    i0.ɵɵproperty(\"matRippleCentered\", ctx_r1.MATERIAL_CONSTANT.MAT_RIPPLE_CENTER);\n    i0.ɵɵadvance(1);\n    i0.ɵɵtextInterpolate1(\" \", ctx_r1.submitBtnLbl, \" \");\n  }\n}\nclass GenerateOtpService {\n  constructor() {}\n}\nGenerateOtpService.ɵfac = function GenerateOtpService_Factory(t) {\n  return new (t || GenerateOtpService)();\n};\nGenerateOtpService.ɵprov = /* @__PURE__ */i0.ɵɵdefineInjectable({\n  token: GenerateOtpService,\n  factory: GenerateOtpService.ɵfac,\n  providedIn: 'root'\n});\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(GenerateOtpService, [{\n    type: Injectable,\n    args: [{\n      providedIn: 'root'\n    }]\n  }], function () {\n    return [];\n  }, null);\n})();\nclass GenerateOtpComponent {\n  constructor(toastrService) {\n    this.toastrService = toastrService;\n    // library\n    this.MATERIAL_CONSTANT = MATERIAL_CONSTANT;\n    // /library/\n    this.otpEmitter = new EventEmitter();\n    this.generateOtpBtnLbl = 'Generate OTP';\n    this.submitBtnLbl = 'Submit';\n    this.resendOtpBoolean = false;\n    this.showGenreateOtpBtn = true;\n    this.showEnterOtp = false;\n    this.defaultRemainingTime = 100;\n    this.remainingTime = this.defaultRemainingTime;\n  }\n  ngOnInit() {}\n  ngOnChanges(changes) {\n    if (changes.submitBtnLblInput && this.submitBtnLblInput) {\n      this.submitBtnLbl = this.submitBtnLblInput;\n    }\n    if (changes.generateOtpBtnLblInput && this.generateOtpBtnLblInput) {\n      this.generateOtpBtnLbl = this.generateOtpBtnLblInput;\n    }\n    if (changes.remainingTimeInput && this.remainingTimeInput) {\n      this.defaultRemainingTime = this.remainingTimeInput;\n      this.remainingTime = this.remainingTimeInput;\n    }\n    if (this.showEnterOtpInput) {\n      this.showEnterOtpFnc();\n    }\n  }\n  generateOtp() {\n    this.otpEmitter.emit({\n      otp: this.otpValue,\n      resendOtp: this.resendOtpBoolean\n    });\n  }\n  showEnterOtpFnc() {\n    this.showGenreateOtpBtn = false;\n    this.showEnterOtp = true;\n    this.remainingTime = this.defaultRemainingTime;\n    // Start the countdown timer\n    this.startCountdown();\n  }\n  onOtpChange(value) {\n    // Handle OTP change if needed\n    this.otpValue = value;\n    this.checkOtp = true;\n  }\n  resendOtp() {\n    this.showEnterOtpInput = false;\n    this.ngOtpInput.setValue(null);\n    this.otpValue = null;\n    this.checkOtp = false;\n    this.resendOtpBoolean = true;\n    this.otpEmitter.emit({\n      otp: this.otpValue,\n      resendOtp: this.resendOtpBoolean\n    });\n    this.startCountdown();\n  }\n  submitOtp() {\n    this.resendOtpBoolean = false;\n    if (this.checkOtp && this.otpValue.length == 6) {\n      this.otpEmitter.emit({\n        otp: this.otpValue,\n        resendOtp: this.resendOtpBoolean\n      });\n    } else {\n      this.toastrService.openToast(ToastrTitle.ERROR, 'Plese enter 6 digit OTP.', ToastrColor.ERROR);\n      return;\n    }\n  }\n  startCountdown() {\n    const interval = 1000; // Update every second\n    this.remainingTime = this.defaultRemainingTime;\n    const countdown = setInterval(() => {\n      this.remainingTime--;\n      if (this.remainingTime <= 0) {\n        clearInterval(countdown); // Stop the countdown when time reaches 0\n      }\n    }, interval);\n  }\n  formatTime() {\n    clearInterval(this.countdownInterval);\n    const seconds = this.remainingTime;\n    const minutes = Math.floor(seconds % 3600 / 60);\n    const remainingSeconds = seconds % 60;\n    return `${minutes}:${remainingSeconds}`;\n  }\n}\nGenerateOtpComponent.ɵfac = function GenerateOtpComponent_Factory(t) {\n  return new (t || GenerateOtpComponent)(i0.ɵɵdirectiveInject(i1.ToastrService));\n};\nGenerateOtpComponent.ɵcmp = /* @__PURE__ */i0.ɵɵdefineComponent({\n  type: GenerateOtpComponent,\n  selectors: [[\"lib-generate-otp\"]],\n  viewQuery: function GenerateOtpComponent_Query(rf, ctx) {\n    if (rf & 1) {\n      i0.ɵɵviewQuery(NgOtpInputComponent, 5);\n    }\n    if (rf & 2) {\n      let _t;\n      i0.ɵɵqueryRefresh(_t = i0.ɵɵloadQuery()) && (ctx.ngOtpInput = _t.first);\n    }\n  },\n  inputs: {\n    showEnterOtpInput: \"showEnterOtpInput\",\n    generateOtpBtnLblInput: \"generateOtpBtnLblInput\",\n    submitBtnLblInput: \"submitBtnLblInput\",\n    remainingTimeInput: \"remainingTimeInput\"\n  },\n  outputs: {\n    otpEmitter: \"otpEmitter\"\n  },\n  features: [i0.ɵɵNgOnChangesFeature],\n  decls: 3,\n  vars: 2,\n  consts: [[1, \"text-end\"], [\"class\", \"btn btn-success\", \"type\", \"button\", \"matRipple\", \"\", 3, \"matRippleCentered\", \"click\", 4, \"ngIf\"], [4, \"ngIf\"], [\"type\", \"button\", \"matRipple\", \"\", 1, \"btn\", \"btn-success\", 3, \"matRippleCentered\", \"click\"], [1, \"pt-2\"], [3, \"config\", \"onInputChange\"], [1, \"btn\", \"ps-1\", \"fw-normal\", 3, \"disabled\", \"click\"], [1, \"cursorPointer\", \"btn-link\"], [\"class\", \"ml-2\", 4, \"ngIf\"], [1, \"pt-1\", \"sm-3\"], [\"matRipple\", \"\", 1, \"btn\", \"btn-success\", 3, \"matRippleCentered\", \"click\"], [1, \"ml-2\"]],\n  template: function GenerateOtpComponent_Template(rf, ctx) {\n    if (rf & 1) {\n      i0.ɵɵelementStart(0, \"div\", 0);\n      i0.ɵɵtemplate(1, GenerateOtpComponent_button_1_Template, 2, 2, \"button\", 1);\n      i0.ɵɵtemplate(2, GenerateOtpComponent_div_2_Template, 13, 6, \"div\", 2);\n      i0.ɵɵelementEnd();\n    }\n    if (rf & 2) {\n      i0.ɵɵadvance(1);\n      i0.ɵɵproperty(\"ngIf\", ctx.showGenreateOtpBtn);\n      i0.ɵɵadvance(1);\n      i0.ɵɵproperty(\"ngIf\", ctx.showEnterOtp);\n    }\n  },\n  directives: [i3.NgIf, i4.MatRipple, i2.NgOtpInputComponent],\n  styles: [\".otp-input{width:25px!important;height:25px!important;border-radius:5px!important;text-align:center!important;font-size:12px!important}\"]\n});\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(GenerateOtpComponent, [{\n    type: Component,\n    args: [{\n      selector: 'lib-generate-otp',\n      templateUrl: './generate-otp.component.html',\n      styleUrls: ['./generate-otp.component.scss']\n    }]\n  }], function () {\n    return [{\n      type: i1.ToastrService\n    }];\n  }, {\n    otpEmitter: [{\n      type: Output\n    }],\n    showEnterOtpInput: [{\n      type: Input\n    }],\n    generateOtpBtnLblInput: [{\n      type: Input\n    }],\n    submitBtnLblInput: [{\n      type: Input\n    }],\n    remainingTimeInput: [{\n      type: Input\n    }],\n    ngOtpInput: [{\n      type: ViewChild,\n      args: [NgOtpInputComponent, {\n        static: false\n      }]\n    }]\n  });\n})();\nclass GenerateOtpModule {}\nGenerateOtpModule.ɵfac = function GenerateOtpModule_Factory(t) {\n  return new (t || GenerateOtpModule)();\n};\nGenerateOtpModule.ɵmod = /* @__PURE__ */i0.ɵɵdefineNgModule({\n  type: GenerateOtpModule\n});\nGenerateOtpModule.ɵinj = /* @__PURE__ */i0.ɵɵdefineInjector({\n  imports: [[CommonModule, MatRippleModule, NgOtpInputModule]]\n});\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(GenerateOtpModule, [{\n    type: NgModule,\n    args: [{\n      declarations: [GenerateOtpComponent],\n      imports: [CommonModule, MatRippleModule, NgOtpInputModule],\n      exports: [GenerateOtpComponent]\n    }]\n  }], null, null);\n})();\n\n/*\n * Public API Surface of generate-otp\n */\n\n/**\n * Generated bundle index. Do not edit.\n */\n\nexport { GenerateOtpComponent, GenerateOtpModule, GenerateOtpService };","map":{"version":3,"names":["i0","Injectable","EventEmitter","Component","Output","Input","ViewChild","NgModule","i2","NgOtpInputComponent","NgOtpInputModule","MATERIAL_CONSTANT","i1","ToastrTitle","ToastrColor","i3","CommonModule","i4","MatRippleModule","GenerateOtpComponent_button_1_Template","rf","ctx","_r3","ɵɵgetCurrentView","ɵɵelementStart","ɵɵlistener","GenerateOtpComponent_button_1_Template_button_click_0_listener","ɵɵrestoreView","ctx_r2","ɵɵnextContext","generateOtp","ɵɵtext","ɵɵelementEnd","ctx_r0","ɵɵproperty","MAT_RIPPLE_CENTER","ɵɵadvance","ɵɵtextInterpolate1","generateOtpBtnLbl","GenerateOtpComponent_div_2_span_9_Template","ctx_r4","formatTime","_c0","length","inputClass","allowNumbersOnly","GenerateOtpComponent_div_2_Template","_r6","GenerateOtpComponent_div_2_Template_ng_otp_input_onInputChange_4_listener","$event","ctx_r5","onOtpChange","GenerateOtpComponent_div_2_Template_button_click_6_listener","ctx_r7","resendOtp","ɵɵtemplate","GenerateOtpComponent_div_2_Template_button_click_11_listener","ctx_r8","submitOtp","ctx_r1","ɵɵpureFunction0","remainingTime","submitBtnLbl","GenerateOtpService","constructor","ɵfac","GenerateOtpService_Factory","t","ɵprov","ɵɵdefineInjectable","token","factory","providedIn","ngDevMode","ɵsetClassMetadata","type","args","GenerateOtpComponent","toastrService","otpEmitter","resendOtpBoolean","showGenreateOtpBtn","showEnterOtp","defaultRemainingTime","ngOnInit","ngOnChanges","changes","submitBtnLblInput","generateOtpBtnLblInput","remainingTimeInput","showEnterOtpInput","showEnterOtpFnc","emit","otp","otpValue","startCountdown","value","checkOtp","ngOtpInput","setValue","openToast","ERROR","interval","countdown","setInterval","clearInterval","countdownInterval","seconds","minutes","Math","floor","remainingSeconds","GenerateOtpComponent_Factory","ɵɵdirectiveInject","ToastrService","ɵcmp","ɵɵdefineComponent","selectors","viewQuery","GenerateOtpComponent_Query","ɵɵviewQuery","_t","ɵɵqueryRefresh","ɵɵloadQuery","first","inputs","outputs","features","ɵɵNgOnChangesFeature","decls","vars","consts","template","GenerateOtpComponent_Template","directives","NgIf","MatRipple","styles","selector","templateUrl","styleUrls","static","GenerateOtpModule","GenerateOtpModule_Factory","ɵmod","ɵɵdefineNgModule","ɵinj","ɵɵdefineInjector","imports","declarations","exports"],"sources":["/home/silori/projects/gitClones/netzero-ui/library/generate-otp/fesm2015/library-generate-otp.js"],"sourcesContent":["import * as i0 from '@angular/core';\nimport { Injectable, EventEmitter, Component, Output, Input, ViewChild, NgModule } from '@angular/core';\nimport * as i2 from 'ng-otp-input';\nimport { NgOtpInputComponent, NgOtpInputModule } from 'ng-otp-input';\nimport { MATERIAL_CONSTANT } from '@library/tsc-common';\nimport * as i1 from '@library/toastr-service';\nimport { ToastrTitle, ToastrColor } from '@library/toastr-service';\nimport * as i3 from '@angular/common';\nimport { CommonModule } from '@angular/common';\nimport * as i4 from '@angular/material/core';\nimport { MatRippleModule } from '@angular/material/core';\n\nclass GenerateOtpService {\n    constructor() { }\n}\nGenerateOtpService.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"12.2.17\", ngImport: i0, type: GenerateOtpService, deps: [], target: i0.ɵɵFactoryTarget.Injectable });\nGenerateOtpService.ɵprov = i0.ɵɵngDeclareInjectable({ minVersion: \"12.0.0\", version: \"12.2.17\", ngImport: i0, type: GenerateOtpService, providedIn: 'root' });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"12.2.17\", ngImport: i0, type: GenerateOtpService, decorators: [{\n            type: Injectable,\n            args: [{\n                    providedIn: 'root'\n                }]\n        }], ctorParameters: function () { return []; } });\n\nclass GenerateOtpComponent {\n    constructor(toastrService) {\n        this.toastrService = toastrService;\n        // library\n        this.MATERIAL_CONSTANT = MATERIAL_CONSTANT;\n        // /library/\n        this.otpEmitter = new EventEmitter();\n        this.generateOtpBtnLbl = 'Generate OTP';\n        this.submitBtnLbl = 'Submit';\n        this.resendOtpBoolean = false;\n        this.showGenreateOtpBtn = true;\n        this.showEnterOtp = false;\n        this.defaultRemainingTime = 100;\n        this.remainingTime = this.defaultRemainingTime;\n    }\n    ngOnInit() {\n    }\n    ngOnChanges(changes) {\n        if (changes.submitBtnLblInput && this.submitBtnLblInput) {\n            this.submitBtnLbl = this.submitBtnLblInput;\n        }\n        if (changes.generateOtpBtnLblInput && this.generateOtpBtnLblInput) {\n            this.generateOtpBtnLbl = this.generateOtpBtnLblInput;\n        }\n        if (changes.remainingTimeInput && this.remainingTimeInput) {\n            this.defaultRemainingTime = this.remainingTimeInput;\n            this.remainingTime = this.remainingTimeInput;\n        }\n        if (this.showEnterOtpInput) {\n            this.showEnterOtpFnc();\n        }\n    }\n    generateOtp() {\n        this.otpEmitter.emit({ otp: this.otpValue, resendOtp: this.resendOtpBoolean });\n    }\n    showEnterOtpFnc() {\n        this.showGenreateOtpBtn = false;\n        this.showEnterOtp = true;\n        this.remainingTime = this.defaultRemainingTime;\n        // Start the countdown timer\n        this.startCountdown();\n    }\n    onOtpChange(value) {\n        // Handle OTP change if needed\n        this.otpValue = value;\n        this.checkOtp = true;\n    }\n    resendOtp() {\n        this.showEnterOtpInput = false;\n        this.ngOtpInput.setValue(null);\n        this.otpValue = null;\n        this.checkOtp = false;\n        this.resendOtpBoolean = true;\n        this.otpEmitter.emit({ otp: this.otpValue, resendOtp: this.resendOtpBoolean });\n        this.startCountdown();\n    }\n    submitOtp() {\n        this.resendOtpBoolean = false;\n        if (this.checkOtp && this.otpValue.length == 6) {\n            this.otpEmitter.emit({ otp: this.otpValue, resendOtp: this.resendOtpBoolean });\n        }\n        else {\n            this.toastrService.openToast(ToastrTitle.ERROR, 'Plese enter 6 digit OTP.', ToastrColor.ERROR);\n            return;\n        }\n    }\n    startCountdown() {\n        const interval = 1000; // Update every second\n        this.remainingTime = this.defaultRemainingTime;\n        const countdown = setInterval(() => {\n            this.remainingTime--;\n            if (this.remainingTime <= 0) {\n                clearInterval(countdown); // Stop the countdown when time reaches 0\n            }\n        }, interval);\n    }\n    formatTime() {\n        clearInterval(this.countdownInterval);\n        const seconds = this.remainingTime;\n        const minutes = Math.floor((seconds % 3600) / 60);\n        const remainingSeconds = seconds % 60;\n        return `${minutes}:${remainingSeconds}`;\n    }\n}\nGenerateOtpComponent.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"12.2.17\", ngImport: i0, type: GenerateOtpComponent, deps: [{ token: i1.ToastrService }], target: i0.ɵɵFactoryTarget.Component });\nGenerateOtpComponent.ɵcmp = i0.ɵɵngDeclareComponent({ minVersion: \"12.0.0\", version: \"12.2.17\", type: GenerateOtpComponent, selector: \"lib-generate-otp\", inputs: { showEnterOtpInput: \"showEnterOtpInput\", generateOtpBtnLblInput: \"generateOtpBtnLblInput\", submitBtnLblInput: \"submitBtnLblInput\", remainingTimeInput: \"remainingTimeInput\" }, outputs: { otpEmitter: \"otpEmitter\" }, viewQueries: [{ propertyName: \"ngOtpInput\", first: true, predicate: NgOtpInputComponent, descendants: true }], usesOnChanges: true, ngImport: i0, template: \"<div class=\\\"text-end\\\">\\n    <button class=\\\"btn btn-success\\\" type=\\\"button\\\" *ngIf=\\\"showGenreateOtpBtn\\\" (click)=\\\"generateOtp()\\\" matRipple\\n        [matRippleCentered]=\\\"MATERIAL_CONSTANT.MAT_RIPPLE_CENTER\\\">\\n        {{ generateOtpBtnLbl }}\\n    </button>\\n\\n    <div *ngIf=\\\"showEnterOtp\\\">\\n        <div class=\\\"pt-2\\\">\\n            <span>Enter a OTP</span>\\n            <ng-otp-input (onInputChange)=\\\"onOtpChange($event)\\\"\\n                [config]=\\\"{length:6,inputClass:'dot',allowNumbersOnly:true}\\\">\\n            </ng-otp-input>\\n\\n            <div class=\\\"pt-2\\\">\\n                <button [disabled]=\\\"remainingTime > 0\\\" class=\\\"btn ps-1 fw-normal\\\" (click)=\\\"resendOtp()\\\"><span\\n                        class=\\\"cursorPointer btn-link\\\">Resend OTP </span> <span *ngIf=\\\"remainingTime > 0\\\"\\n                        class=\\\"ml-2\\\">in {{\\n                        formatTime() }}</span></button>\\n            </div>\\n        </div>\\n\\n        <div class=\\\"pt-1 sm-3\\\">\\n            <button class=\\\"btn btn-success\\\" (click)=\\\"submitOtp()\\\" matRipple\\n                [matRippleCentered]=\\\"MATERIAL_CONSTANT.MAT_RIPPLE_CENTER\\\">\\n                {{ submitBtnLbl }}\\n            </button>\\n        </div>\\n\\n    </div>\\n</div>\\n\", styles: [\"::ng-deep .otp-input{width:25px!important;height:25px!important;border-radius:5px!important;text-align:center!important;font-size:12px!important}\\n\"], components: [{ type: i2.NgOtpInputComponent, selector: \"ng-otp-input\", inputs: [\"config\", \"formCtrl\"], outputs: [\"onInputChange\"] }], directives: [{ type: i3.NgIf, selector: \"[ngIf]\", inputs: [\"ngIf\", \"ngIfThen\", \"ngIfElse\"] }, { type: i4.MatRipple, selector: \"[mat-ripple], [matRipple]\", inputs: [\"matRippleRadius\", \"matRippleDisabled\", \"matRippleTrigger\", \"matRippleColor\", \"matRippleUnbounded\", \"matRippleCentered\", \"matRippleAnimation\"], exportAs: [\"matRipple\"] }] });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"12.2.17\", ngImport: i0, type: GenerateOtpComponent, decorators: [{\n            type: Component,\n            args: [{\n                    selector: 'lib-generate-otp',\n                    templateUrl: './generate-otp.component.html',\n                    styleUrls: ['./generate-otp.component.scss']\n                }]\n        }], ctorParameters: function () { return [{ type: i1.ToastrService }]; }, propDecorators: { otpEmitter: [{\n                type: Output\n            }], showEnterOtpInput: [{\n                type: Input\n            }], generateOtpBtnLblInput: [{\n                type: Input\n            }], submitBtnLblInput: [{\n                type: Input\n            }], remainingTimeInput: [{\n                type: Input\n            }], ngOtpInput: [{\n                type: ViewChild,\n                args: [NgOtpInputComponent, { static: false }]\n            }] } });\n\nclass GenerateOtpModule {\n}\nGenerateOtpModule.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"12.2.17\", ngImport: i0, type: GenerateOtpModule, deps: [], target: i0.ɵɵFactoryTarget.NgModule });\nGenerateOtpModule.ɵmod = i0.ɵɵngDeclareNgModule({ minVersion: \"12.0.0\", version: \"12.2.17\", ngImport: i0, type: GenerateOtpModule, declarations: [GenerateOtpComponent], imports: [CommonModule,\n        MatRippleModule,\n        NgOtpInputModule], exports: [GenerateOtpComponent] });\nGenerateOtpModule.ɵinj = i0.ɵɵngDeclareInjector({ minVersion: \"12.0.0\", version: \"12.2.17\", ngImport: i0, type: GenerateOtpModule, imports: [[\n            CommonModule,\n            MatRippleModule,\n            NgOtpInputModule\n        ]] });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"12.2.17\", ngImport: i0, type: GenerateOtpModule, decorators: [{\n            type: NgModule,\n            args: [{\n                    declarations: [\n                        GenerateOtpComponent\n                    ],\n                    imports: [\n                        CommonModule,\n                        MatRippleModule,\n                        NgOtpInputModule\n                    ],\n                    exports: [\n                        GenerateOtpComponent,\n                    ]\n                }]\n        }] });\n\n/*\n * Public API Surface of generate-otp\n */\n\n/**\n * Generated bundle index. Do not edit.\n */\n\nexport { GenerateOtpComponent, GenerateOtpModule, GenerateOtpService };\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}