{"ast":null,"code":"import { FormControl, Validators } from '@angular/forms';\nimport { MAT_DIALOG_DATA } from '@angular/material/dialog';\nimport { SearchCountryField, CountryISO, PhoneNumberFormat } from 'ngx-intl-tel-input';\nimport * as moment from 'moment';\nimport { isEqual } from 'lodash';\nimport { Employee } from '@netzero/model/employee.model';\n// tsc-library\nimport { MaterialFormFieldAppearance, InvalidForm, ButtonLabelEnum, FormAction } from '@library/tsc-common';\nimport { ToastrTitle, ToastrColor } from '@library/toastr-service';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/material/dialog\";\nimport * as i2 from \"@angular/forms\";\nimport * as i3 from \"@library/date\";\nimport * as i4 from \"@netzero/controller/employee.controller\";\nimport * as i5 from \"@library/toastr-service\";\nimport * as i6 from \"@angular/material/button\";\nimport * as i7 from \"@angular/material/tooltip\";\nimport * as i8 from \"@angular/material/form-field\";\nimport * as i9 from \"@angular/material/input\";\nimport * as i10 from \"ngx-intl-tel-input\";\nimport * as i11 from \"@angular/common\";\nimport * as i12 from \"@angular/material/datepicker\";\nfunction CreateUpdateComponent_mat_error_13_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"mat-error\");\n    i0.ɵɵtext(1, \" Employee code is required \");\n    i0.ɵɵelementEnd();\n  }\n}\nfunction CreateUpdateComponent_mat_error_18_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"mat-error\");\n    i0.ɵɵtext(1, \" Email id is required \");\n    i0.ɵɵelementEnd();\n  }\n}\nfunction CreateUpdateComponent_mat_error_24_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"mat-error\");\n    i0.ɵɵtext(1, \" Employee first name is required \");\n    i0.ɵɵelementEnd();\n  }\n}\nfunction CreateUpdateComponent_mat_error_39_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"mat-error\");\n    i0.ɵɵtext(1, \"Please input a valid mobile number.\");\n    i0.ɵɵelementEnd();\n  }\n}\nfunction CreateUpdateComponent_mat_error_48_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"mat-error\");\n    i0.ɵɵtext(1, \" Joining date is required \");\n    i0.ɵɵelementEnd();\n  }\n}\nfunction CreateUpdateComponent_button_60_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r11 = i0.ɵɵgetCurrentView();\n    i0.ɵɵelementStart(0, \"button\", 31);\n    i0.ɵɵlistener(\"click\", function CreateUpdateComponent_button_60_Template_button_click_0_listener() {\n      i0.ɵɵrestoreView(_r11);\n      const ctx_r10 = i0.ɵɵnextContext();\n      return ctx_r10.createEmployee();\n    });\n    i0.ɵɵtext(1, \" Create \");\n    i0.ɵɵelementEnd();\n  }\n}\nconst _c0 = function (a0) {\n  return {\n    \"disabled\": a0\n  };\n};\nfunction CreateUpdateComponent_button_61_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r13 = i0.ɵɵgetCurrentView();\n    i0.ɵɵelementStart(0, \"button\", 32);\n    i0.ɵɵlistener(\"click\", function CreateUpdateComponent_button_61_Template_button_click_0_listener() {\n      i0.ɵɵrestoreView(_r13);\n      const ctx_r12 = i0.ɵɵnextContext();\n      return ctx_r12.updateEmployee();\n    });\n    i0.ɵɵtext(1, \" Update \");\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const ctx_r8 = i0.ɵɵnextContext();\n    i0.ɵɵproperty(\"ngClass\", i0.ɵɵpureFunction1(1, _c0, ctx_r8.isEqual));\n  }\n}\nfunction CreateUpdateComponent_button_62_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelement(0, \"button\", 33);\n  }\n}\nconst _c1 = function (a0, a1) {\n  return [a0, a1];\n};\n// /tsc-library/\nexport let CreateUpdateComponent = /*#__PURE__*/(() => {\n  class CreateUpdateComponent {\n    constructor(data, dialogRef, formBuilder, dateService, employeeController, toastrService) {\n      this.data = data;\n      this.dialogRef = dialogRef;\n      this.formBuilder = formBuilder;\n      this.dateService = dateService;\n      this.employeeController = employeeController;\n      this.toastrService = toastrService;\n      this.MaterialFormFieldAppearance = MaterialFormFieldAppearance;\n      this.FormAction = FormAction;\n      this.employee = new Employee();\n      this.isEqual = true;\n      this.separateDialCode = true;\n      this.SearchCountryField = SearchCountryField;\n      this.CountryISO = CountryISO;\n      this.PhoneNumberFormat = PhoneNumberFormat;\n      this.preferredCountries = [CountryISO.India, CountryISO.UnitedStates, CountryISO.UnitedKingdom];\n      this.phoneFC = new FormControl('', [Validators.required]);\n      this.errorHandling = (control, error) => {\n        return this.employeeFG.get(control).hasError(error);\n      };\n      this.action = this.data['action'];\n      this.currentOrgID = this.data['currentOrgID'];\n      this.employeeID = this.data['employeeID'];\n      this.dialogRef.disableClose = true;\n    }\n    ngOnInit() {\n      if (this.action == FormAction.CREATE) {\n        this.title = ButtonLabelEnum.CREATE_BTN_LABEL;\n      } else if (this.action == FormAction.UPDATE) {\n        this.title = ButtonLabelEnum.UPDATE_BTN_LABEL;\n        this.getEmployeeByID();\n      } else {\n        this.toastrService.openToast(ToastrTitle.ERROR, 'Unrecognized action!', ToastrColor.ERROR);\n      }\n      this.equipementFGInit();\n    }\n    equipementFGInit() {\n      this.employeeFG = this.formBuilder.group({\n        employeeCode: [, Validators.required],\n        firstName: [, Validators.required],\n        lastName: [],\n        emailID: [, [Validators.required, Validators.email]],\n        department: [],\n        designation: [],\n        contactNumber: [],\n        contactCountryCode: [],\n        joiningDate: [, Validators.required],\n        leavingDate: []\n      });\n      this.phoneFC.valueChanges.subscribe(value => {\n        if (value) {\n          // Check if countryCode and number are defined\n          const countryCode = value.countryCode;\n          const number = value.number;\n          // Ensure countryCode and number are defined before using them\n          this.employeeFG.get('contactCountryCode').setValue(countryCode);\n          this.employeeFG.get('contactNumber').setValue(number);\n        }\n      });\n    }\n    createEmployee() {\n      if (this.employeeFG.invalid) {\n        this.employeeFG.markAllAsTouched();\n        this.toastrService.openToast(InvalidForm.INVALID_FORM_TITLE, InvalidForm.INVALID_FORM_MESSAGE, ToastrColor.ERROR);\n        return;\n      }\n      this.employeeController.createEmployee(this.currentOrgID, this.employeeFG.value).subscribe(createRes => {\n        let toast;\n        toast = this.toastrService.getToastStatus(createRes.status);\n        this.toastrService.openToast(toast.title, createRes['message'], toast.color);\n        if (toast.title == 'Success') {\n          this.dialogRef.close('opSuccess');\n        }\n      }, error => {\n        console.log('error in createEmployee -', error);\n      });\n    }\n    updateEmployee() {\n      if (this.employeeFG.invalid) {\n        this.employeeFG.markAllAsTouched();\n        this.toastrService.openToast(InvalidForm.INVALID_FORM_TITLE, InvalidForm.INVALID_FORM_MESSAGE, ToastrColor.ERROR);\n        return;\n      }\n      this.employeeController.updateEmployee(this.currentOrgID, this.employeeID, this.employeeFG.value).subscribe(updateRes => {\n        let toast;\n        toast = this.toastrService.getToastStatus(updateRes.status);\n        this.dialogRef.close('opSuccess');\n      }, error => {\n        console.log('error in updateEmployee -', error);\n      });\n    }\n    getEmployeeByID() {\n      this.employeeController.getEmployeeByID(this.currentOrgID, this.employeeID).subscribe(res => {\n        if (res) {\n          this.employee = res;\n          this.patchEmployeeDetails();\n        }\n      }, error => {\n        console.log('error in getEmployeeByID() -', error);\n      });\n    }\n    patchEmployeeDetails() {\n      this.employeeFG.patchValue({\n        employeeCode: this.employee['code'],\n        firstName: this.employee['firstName'],\n        lastName: this.employee['lastName'],\n        emailID: this.employee['emailID'],\n        department: this.employee['department'],\n        designation: this.employee['designation'],\n        joiningDate: this.employee['joiningDate'],\n        leavingDate: this.employee['leavingDate'] == \"9999-12-31\" ? null : this.employee['leavingDate']\n      });\n      this.phoneFC.patchValue({\n        countryCode: this.employee['contactCountryCode'],\n        number: this.employee['contactNumber']\n      });\n      this.initialObject = this.employeeFG.value;\n      this.employeeFG.valueChanges.subscribe(() => {\n        this.isEqual = isEqual(this.initialObject, this.employeeFG.value);\n      });\n    }\n    formatDate(control) {\n      let date = moment(this.employeeFG.controls[control].value).format(\"YYYY-MM-DD\");\n      this.employeeFG.controls[control].patchValue(date);\n    }\n  }\n  CreateUpdateComponent.ɵfac = function CreateUpdateComponent_Factory(t) {\n    return new (t || CreateUpdateComponent)(i0.ɵɵdirectiveInject(MAT_DIALOG_DATA), i0.ɵɵdirectiveInject(i1.MatDialogRef), i0.ɵɵdirectiveInject(i2.FormBuilder), i0.ɵɵdirectiveInject(i3.DateService), i0.ɵɵdirectiveInject(i4.EmployeeController), i0.ɵɵdirectiveInject(i5.ToastrService));\n  };\n  CreateUpdateComponent.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n    type: CreateUpdateComponent,\n    selectors: [[\"app-create-update\"]],\n    decls: 63,\n    vars: 38,\n    consts: [[\"mat-dialog-title\", \"\"], [1, \"dialogTitle\"], [\"type\", \"button\", \"mat-icon-button\", \"\", \"matTooltip\", \"Close\", \"mat-dialog-close\", \"\", \"matTooltipPosition\", \"below\", 1, \"btn\", \"float-end\"], [1, \"material-symbols-outlined\"], [1, \"pt-2\", \"me-2\"], [3, \"formGroup\"], [1, \"row\"], [1, \"col-sm-6\", \"matFieldWidth100\", 3, \"appearance\"], [1, \"formLabel\"], [\"matInput\", \"\", \"type\", \"text\", \"min\", \"0\", \"placeholder\", \"Employee code\", \"required\", \"\", \"formControlName\", \"employeeCode\", 1, \"formPlaceholder\"], [4, \"ngIf\"], [\"matInput\", \"\", \"type\", \"email\", \"placeholder\", \"Email ID\", \"formControlName\", \"emailID\", \"required\", \"\", 1, \"formPlaceholder\"], [\"matInput\", \"\", \"type\", \"text\", \"placeholder\", \"Employee first name\", \"required\", \"\", \"formControlName\", \"firstName\", 1, \"formPlaceholder\"], [\"matInput\", \"\", \"type\", \"text\", \"placeholder\", \"Employee last name\", \"formControlName\", \"lastName\", 1, \"formPlaceholder\"], [\"matInput\", \"\", \"type\", \"text\", \"placeholder\", \"Department\", \"formControlName\", \"department\", 1, \"formPlaceholder\"], [\"matInput\", \"\", \"type\", \"text\", \"placeholder\", \"Designation\", \"formControlName\", \"designation\", 1, \"formPlaceholder\"], [3, \"preferredCountries\", \"enableAutoCountrySelect\", \"enablePlaceholder\", \"searchCountryFlag\", \"searchCountryField\", \"selectFirstCountry\", \"maxLength\", \"phoneValidation\", \"separateDialCode\", \"numberFormat\", \"formControl\"], [1, \"row\", \"pt-3\"], [\"appDateMonthYearFormat\", \"\", 1, \"col-sm-6\", \"cursorPointer\", 3, \"appearance\", \"click\", \"keydown.enter\", \"keydown.arrowdown\"], [\"matInput\", \"\", \"formControlName\", \"joiningDate\", \"required\", \"\", 1, \"noFocus\", 3, \"matDatepicker\", \"readonly\", \"dateInput\"], [\"matSuffix\", \"\", 3, \"for\"], [\"disabled\", \"false\"], [\"date\", \"\"], [\"matInput\", \"\", \"formControlName\", \"leavingDate\", 1, \"noFocus\", 3, \"matDatepicker\", \"readonly\", \"dateInput\"], [\"endDate\", \"\"], [\"mat-dialog-footer\", \"\", \"align\", \"end\", 1, \"pt-5\"], [\"type\", \"button\", \"mat-dialog-close\", \"\", 1, \"button\", \"btn\", \"btn-secondary\", \"me-2\"], [1, \"d-inline\", 3, \"ngSwitch\"], [\"type\", \"submit\", \"class\", \"button btn btn-success\", 3, \"click\", 4, \"ngSwitchCase\"], [\"type\", \"submit\", \"class\", \"button btn btn-success\", 3, \"ngClass\", \"click\", 4, \"ngSwitchCase\"], [\"class\", \"d-none\", 4, \"ngSwitchDefault\"], [\"type\", \"submit\", 1, \"button\", \"btn\", \"btn-success\", 3, \"click\"], [\"type\", \"submit\", 1, \"button\", \"btn\", \"btn-success\", 3, \"ngClass\", \"click\"], [1, \"d-none\"]],\n    template: function CreateUpdateComponent_Template(rf, ctx) {\n      if (rf & 1) {\n        const _r14 = i0.ɵɵgetCurrentView();\n        i0.ɵɵelementStart(0, \"div\", 0);\n        i0.ɵɵelementStart(1, \"strong\", 1);\n        i0.ɵɵtext(2);\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(3, \"button\", 2);\n        i0.ɵɵelementStart(4, \"span\", 3);\n        i0.ɵɵtext(5, \" close \");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(6, \"div\", 4);\n        i0.ɵɵelementStart(7, \"form\", 5);\n        i0.ɵɵelementStart(8, \"div\", 6);\n        i0.ɵɵelementStart(9, \"mat-form-field\", 7);\n        i0.ɵɵelementStart(10, \"mat-label\", 8);\n        i0.ɵɵtext(11, \"Employee code\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelement(12, \"input\", 9);\n        i0.ɵɵtemplate(13, CreateUpdateComponent_mat_error_13_Template, 2, 0, \"mat-error\", 10);\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(14, \"mat-form-field\", 7);\n        i0.ɵɵelementStart(15, \"mat-label\", 8);\n        i0.ɵɵtext(16, \"Email ID\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelement(17, \"input\", 11);\n        i0.ɵɵtemplate(18, CreateUpdateComponent_mat_error_18_Template, 2, 0, \"mat-error\", 10);\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(19, \"div\", 6);\n        i0.ɵɵelementStart(20, \"mat-form-field\", 7);\n        i0.ɵɵelementStart(21, \"mat-label\", 8);\n        i0.ɵɵtext(22, \"Employee first name\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelement(23, \"input\", 12);\n        i0.ɵɵtemplate(24, CreateUpdateComponent_mat_error_24_Template, 2, 0, \"mat-error\", 10);\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(25, \"mat-form-field\", 7);\n        i0.ɵɵelementStart(26, \"mat-label\", 8);\n        i0.ɵɵtext(27, \"Employee last name\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelement(28, \"input\", 13);\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(29, \"div\", 6);\n        i0.ɵɵelementStart(30, \"mat-form-field\", 7);\n        i0.ɵɵelementStart(31, \"mat-label\", 8);\n        i0.ɵɵtext(32, \"Department\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelement(33, \"input\", 14);\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(34, \"mat-form-field\", 7);\n        i0.ɵɵelementStart(35, \"mat-label\", 8);\n        i0.ɵɵtext(36, \"Designation\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelement(37, \"input\", 15);\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementEnd();\n        i0.ɵɵelement(38, \"ngx-intl-tel-input\", 16);\n        i0.ɵɵtemplate(39, CreateUpdateComponent_mat_error_39_Template, 2, 0, \"mat-error\", 10);\n        i0.ɵɵelementStart(40, \"div\", 17);\n        i0.ɵɵelementStart(41, \"mat-form-field\", 18);\n        i0.ɵɵlistener(\"click\", function CreateUpdateComponent_Template_mat_form_field_click_41_listener() {\n          i0.ɵɵrestoreView(_r14);\n          const _r4 = i0.ɵɵreference(47);\n          return ctx.dateService.openDatepickerOnClick(_r4);\n        })(\"keydown.enter\", function CreateUpdateComponent_Template_mat_form_field_keydown_enter_41_listener() {\n          i0.ɵɵrestoreView(_r14);\n          const _r4 = i0.ɵɵreference(47);\n          return ctx.dateService.openDatepickerOnClick(_r4);\n        })(\"keydown.arrowdown\", function CreateUpdateComponent_Template_mat_form_field_keydown_arrowdown_41_listener() {\n          i0.ɵɵrestoreView(_r14);\n          const _r4 = i0.ɵɵreference(47);\n          return ctx.dateService.openDatepickerOnClick(_r4);\n        });\n        i0.ɵɵelementStart(42, \"mat-label\", 8);\n        i0.ɵɵtext(43, \"Joining date\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(44, \"input\", 19);\n        i0.ɵɵlistener(\"dateInput\", function CreateUpdateComponent_Template_input_dateInput_44_listener() {\n          return ctx.formatDate(\"joiningDate\");\n        });\n        i0.ɵɵelementEnd();\n        i0.ɵɵelement(45, \"mat-datepicker-toggle\", 20);\n        i0.ɵɵelement(46, \"mat-datepicker\", 21, 22);\n        i0.ɵɵtemplate(48, CreateUpdateComponent_mat_error_48_Template, 2, 0, \"mat-error\", 10);\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(49, \"mat-form-field\", 18);\n        i0.ɵɵlistener(\"click\", function CreateUpdateComponent_Template_mat_form_field_click_49_listener() {\n          i0.ɵɵrestoreView(_r14);\n          const _r6 = i0.ɵɵreference(55);\n          return ctx.dateService.openDatepickerOnClick(_r6);\n        })(\"keydown.enter\", function CreateUpdateComponent_Template_mat_form_field_keydown_enter_49_listener() {\n          i0.ɵɵrestoreView(_r14);\n          const _r6 = i0.ɵɵreference(55);\n          return ctx.dateService.openDatepickerOnClick(_r6);\n        })(\"keydown.arrowdown\", function CreateUpdateComponent_Template_mat_form_field_keydown_arrowdown_49_listener() {\n          i0.ɵɵrestoreView(_r14);\n          const _r6 = i0.ɵɵreference(55);\n          return ctx.dateService.openDatepickerOnClick(_r6);\n        });\n        i0.ɵɵelementStart(50, \"mat-label\", 8);\n        i0.ɵɵtext(51, \"Leaving date\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(52, \"input\", 23);\n        i0.ɵɵlistener(\"dateInput\", function CreateUpdateComponent_Template_input_dateInput_52_listener() {\n          return ctx.formatDate(\"leavingDate\");\n        });\n        i0.ɵɵelementEnd();\n        i0.ɵɵelement(53, \"mat-datepicker-toggle\", 20);\n        i0.ɵɵelement(54, \"mat-datepicker\", 21, 24);\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(56, \"div\", 25);\n        i0.ɵɵelementStart(57, \"button\", 26);\n        i0.ɵɵtext(58, \" Cancel \");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(59, \"div\", 27);\n        i0.ɵɵtemplate(60, CreateUpdateComponent_button_60_Template, 2, 0, \"button\", 28);\n        i0.ɵɵtemplate(61, CreateUpdateComponent_button_61_Template, 2, 3, \"button\", 29);\n        i0.ɵɵtemplate(62, CreateUpdateComponent_button_62_Template, 1, 0, \"button\", 30);\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementEnd();\n      }\n      if (rf & 2) {\n        const _r4 = i0.ɵɵreference(47);\n        const _r6 = i0.ɵɵreference(55);\n        i0.ɵɵadvance(2);\n        i0.ɵɵtextInterpolate1(\"\", ctx.title, \" Employee\");\n        i0.ɵɵadvance(5);\n        i0.ɵɵproperty(\"formGroup\", ctx.employeeFG);\n        i0.ɵɵadvance(2);\n        i0.ɵɵproperty(\"appearance\", ctx.MaterialFormFieldAppearance.FORM_FIELD_APPEARANCE);\n        i0.ɵɵadvance(4);\n        i0.ɵɵproperty(\"ngIf\", ctx.errorHandling(\"employeeCode\", \"required\"));\n        i0.ɵɵadvance(1);\n        i0.ɵɵproperty(\"appearance\", ctx.MaterialFormFieldAppearance.FORM_FIELD_APPEARANCE);\n        i0.ɵɵadvance(4);\n        i0.ɵɵproperty(\"ngIf\", ctx.errorHandling(\"emailID\", \"required\"));\n        i0.ɵɵadvance(2);\n        i0.ɵɵproperty(\"appearance\", ctx.MaterialFormFieldAppearance.FORM_FIELD_APPEARANCE);\n        i0.ɵɵadvance(4);\n        i0.ɵɵproperty(\"ngIf\", ctx.errorHandling(\"firstName\", \"required\"));\n        i0.ɵɵadvance(1);\n        i0.ɵɵproperty(\"appearance\", ctx.MaterialFormFieldAppearance.FORM_FIELD_APPEARANCE);\n        i0.ɵɵadvance(5);\n        i0.ɵɵproperty(\"appearance\", ctx.MaterialFormFieldAppearance.FORM_FIELD_APPEARANCE);\n        i0.ɵɵadvance(4);\n        i0.ɵɵproperty(\"appearance\", ctx.MaterialFormFieldAppearance.FORM_FIELD_APPEARANCE);\n        i0.ɵɵadvance(4);\n        i0.ɵɵproperty(\"preferredCountries\", ctx.preferredCountries)(\"enableAutoCountrySelect\", true)(\"enablePlaceholder\", true)(\"searchCountryFlag\", true)(\"searchCountryField\", i0.ɵɵpureFunction2(35, _c1, ctx.SearchCountryField.Iso2, ctx.SearchCountryField.Name))(\"selectFirstCountry\", false)(\"maxLength\", 15)(\"phoneValidation\", true)(\"separateDialCode\", ctx.separateDialCode)(\"numberFormat\", ctx.PhoneNumberFormat.National)(\"formControl\", ctx.phoneFC);\n        i0.ɵɵadvance(1);\n        i0.ɵɵproperty(\"ngIf\", ctx.phoneFC.invalid && !ctx.phoneFC.hasError(\"required\"));\n        i0.ɵɵadvance(2);\n        i0.ɵɵproperty(\"appearance\", ctx.MaterialFormFieldAppearance.FORM_FIELD_APPEARANCE);\n        i0.ɵɵadvance(3);\n        i0.ɵɵproperty(\"matDatepicker\", _r4)(\"readonly\", true);\n        i0.ɵɵadvance(1);\n        i0.ɵɵproperty(\"for\", _r4);\n        i0.ɵɵadvance(3);\n        i0.ɵɵproperty(\"ngIf\", ctx.errorHandling(\"joiningDate\", \"required\"));\n        i0.ɵɵadvance(1);\n        i0.ɵɵproperty(\"appearance\", ctx.MaterialFormFieldAppearance.FORM_FIELD_APPEARANCE);\n        i0.ɵɵadvance(3);\n        i0.ɵɵproperty(\"matDatepicker\", _r6)(\"readonly\", true);\n        i0.ɵɵadvance(1);\n        i0.ɵɵproperty(\"for\", _r6);\n        i0.ɵɵadvance(6);\n        i0.ɵɵproperty(\"ngSwitch\", ctx.action);\n        i0.ɵɵadvance(1);\n        i0.ɵɵproperty(\"ngSwitchCase\", ctx.FormAction.CREATE);\n        i0.ɵɵadvance(1);\n        i0.ɵɵproperty(\"ngSwitchCase\", ctx.FormAction.UPDATE);\n      }\n    },\n    directives: [i1.MatDialogTitle, i6.MatButton, i7.MatTooltip, i1.MatDialogClose, i2.ɵNgNoValidate, i2.NgControlStatusGroup, i2.FormGroupDirective, i8.MatFormField, i8.MatLabel, i9.MatInput, i2.DefaultValueAccessor, i2.RequiredValidator, i2.NgControlStatus, i2.FormControlName, i10.NativeElementInjectorDirective, i11.NgIf, i10.NgxIntlTelInputComponent, i2.FormControlDirective, i12.MatDatepickerInput, i12.MatDatepickerToggle, i8.MatSuffix, i12.MatDatepicker, i11.NgSwitch, i11.NgSwitchCase, i11.NgSwitchDefault, i8.MatError, i11.NgClass],\n    encapsulation: 2\n  });\n  return CreateUpdateComponent;\n})();","map":null,"metadata":{},"sourceType":"module"}