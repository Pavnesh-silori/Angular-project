{"ast":null,"code":"import { HttpParams } from '@angular/common/http';\nimport { environment } from 'src/environments/environment';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/common/http\";\nexport let EmployeeController = /*#__PURE__*/(() => {\n  class EmployeeController {\n    constructor(http) {\n      this.http = http;\n    }\n    createEmployee(orgID, value) {\n      return this.http.post(`${environment.COMMON_API_URL}organizations/${orgID}/employees`, value);\n    }\n    getEmployeeByPage(pageNo, pazeSize, sortBy, orderBy, filterArr, orgID, searchValue, searchFlag) {\n      let params = new HttpParams();\n      params = params.append('pageNo', pageNo);\n      params = params.append('pageSize', pazeSize);\n      params = params.append('sortBy', sortBy);\n      params = params.append('orderBy', orderBy);\n      filterArr.forEach(filter => params = params.append('filter', filter));\n      if (searchFlag) {\n        params = params.append('searchValue', searchValue);\n      }\n      return this.http.get(`${environment.COMMON_API_URL}organizations/${orgID}/employees/page`, {\n        params: params\n      });\n    }\n    getEmployeeByID(orgID, employeeID) {\n      return this.http.get(`${environment.COMMON_API_URL}organizations/${orgID}/employees/${employeeID}`);\n    }\n    updateEmployee(orgID, employeeID, value) {\n      return this.http.patch(`${environment.COMMON_API_URL}organizations/${orgID}/employees/${employeeID}`, value);\n    }\n    bulkUploadEmployee(orgID, file) {\n      return this.http.post(`${environment.COMMON_API_URL}organizations/${orgID}/employees/bulk-upload`, file);\n    }\n  }\n  EmployeeController.ɵfac = function EmployeeController_Factory(t) {\n    return new (t || EmployeeController)(i0.ɵɵinject(i1.HttpClient));\n  };\n  EmployeeController.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n    token: EmployeeController,\n    factory: EmployeeController.ɵfac,\n    providedIn: 'root'\n  });\n  return EmployeeController;\n})();","map":null,"metadata":{},"sourceType":"module"}