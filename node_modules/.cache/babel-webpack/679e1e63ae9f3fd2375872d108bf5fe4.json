{"ast":null,"code":"import { InjectionToken, EventEmitter, Directive, NgZone, Renderer2, ElementRef, KeyValueDiffers, Inject, PLATFORM_ID, Optional, Input, Output, Component, ViewEncapsulation, ViewChild, NgModule } from '@angular/core';\nimport { isPlatformBrowser, CommonModule } from '@angular/common';\nimport Dropzone from 'dropzone';\nimport * as ɵngcc0 from '@angular/core';\nimport * as ɵngcc1 from '@angular/common';\nfunction DropzoneComponent_div_3_Template(rf, ctx) {\n  if (rf & 1) {\n    ɵngcc0.ɵɵelement(0, \"div\", 4);\n  }\n  if (rf & 2) {\n    const ctx_r0 = ɵngcc0.ɵɵnextContext();\n    ɵngcc0.ɵɵstyleProp(\"background-image\", ctx_r0.getPlaceholder());\n  }\n}\nconst _c0 = [\"*\"];\nconst DROPZONE_CONFIG = new InjectionToken('DROPZONE_CONFIG');\nconst DropzoneEvents = ['error', 'success', 'sending', 'canceled', 'complete', 'processing', 'drop', 'dragStart', 'dragEnd', 'dragEnter', 'dragOver', 'dragLeave', 'thumbnail', 'addedFile', 'addedFiles', 'removedFile', 'uploadProgress', 'maxFilesReached', 'maxFilesExceeded', 'errorMultiple', 'successMultiple', 'sendingMultiple', 'canceledMultiple', 'completeMultiple', 'processingMultiple', 'reset', 'queueComplete', 'totalUploadProgress'];\nclass DropzoneConfig {\n  constructor(config = {}) {\n    this.assign(config);\n  }\n  assign(config = {}, target) {\n    target = target || this;\n    for (const key in config) {\n      if (config[key] != null && !Array.isArray(config[key]) && typeof config[key] === 'object' && !(config[key] instanceof HTMLElement)) {\n        target[key] = {};\n        this.assign(config[key], target[key]);\n      } else {\n        target[key] = config[key];\n      }\n    }\n  }\n}\nlet DropzoneDirective = /*#__PURE__*/(() => {\n  class DropzoneDirective {\n    constructor(zone, renderer, elementRef, differs, platformId, defaults) {\n      this.zone = zone;\n      this.renderer = renderer;\n      this.elementRef = elementRef;\n      this.differs = differs;\n      this.platformId = platformId;\n      this.defaults = defaults;\n      this.configDiff = null;\n      this.disabled = false;\n      this.DZ_INIT = new EventEmitter();\n      this.DZ_ERROR = new EventEmitter();\n      this.DZ_SUCCESS = new EventEmitter();\n      this.DZ_SENDING = new EventEmitter();\n      this.DZ_CANCELED = new EventEmitter();\n      this.DZ_COMPLETE = new EventEmitter();\n      this.DZ_PROCESSING = new EventEmitter();\n      this.DZ_DROP = new EventEmitter();\n      this.DZ_DRAGSTART = new EventEmitter();\n      this.DZ_DRAGEND = new EventEmitter();\n      this.DZ_DRAGENTER = new EventEmitter();\n      this.DZ_DRAGOVER = new EventEmitter();\n      this.DZ_DRAGLEAVE = new EventEmitter();\n      this.DZ_THUMBNAIL = new EventEmitter();\n      this.DZ_ADDEDFILE = new EventEmitter();\n      this.DZ_ADDEDFILES = new EventEmitter();\n      this.DZ_REMOVEDFILE = new EventEmitter();\n      this.DZ_UPLOADPROGRESS = new EventEmitter();\n      this.DZ_MAXFILESREACHED = new EventEmitter();\n      this.DZ_MAXFILESEXCEEDED = new EventEmitter();\n      this.DZ_ERRORMULTIPLE = new EventEmitter();\n      this.DZ_SUCCESSMULTIPLE = new EventEmitter();\n      this.DZ_SENDINGMULTIPLE = new EventEmitter();\n      this.DZ_CANCELEDMULTIPLE = new EventEmitter();\n      this.DZ_COMPLETEMULTIPLE = new EventEmitter();\n      this.DZ_PROCESSINGMULTIPLE = new EventEmitter();\n      this.DZ_RESET = new EventEmitter();\n      this.DZ_QUEUECOMPLETE = new EventEmitter();\n      this.DZ_TOTALUPLOADPROGRESS = new EventEmitter();\n      const dz = Dropzone;\n      dz.autoDiscover = false;\n    }\n    ngOnInit() {\n      if (!isPlatformBrowser(this.platformId)) {\n        return;\n      }\n      const params = new DropzoneConfig(this.defaults);\n      params.assign(this.config); // Custom configuration\n      this.renderer.addClass(this.elementRef.nativeElement, params.maxFiles === 1 ? 'dz-single' : 'dz-multiple');\n      this.renderer.removeClass(this.elementRef.nativeElement, params.maxFiles === 1 ? 'dz-multiple' : 'dz-single');\n      this.zone.runOutsideAngular(() => {\n        this.instance = new Dropzone(this.elementRef.nativeElement, params);\n      });\n      if (this.disabled) {\n        this.instance.disable();\n      }\n      if (this.DZ_INIT.observers.length) {\n        this.zone.run(() => {\n          this.DZ_INIT.emit(this.instance);\n        });\n      }\n      // Add auto reset handling for events\n      this.instance.on('success', () => {\n        if (params.autoReset != null) {\n          setTimeout(() => this.reset(), params.autoReset);\n        }\n      });\n      this.instance.on('error', () => {\n        if (params.errorReset != null) {\n          setTimeout(() => this.reset(), params.errorReset);\n        }\n      });\n      this.instance.on('canceled', () => {\n        if (params.cancelReset != null) {\n          setTimeout(() => this.reset(), params.cancelReset);\n        }\n      });\n      // Add native Dropzone event handling\n      DropzoneEvents.forEach(eventName => {\n        this.instance.on(eventName.toLowerCase(), (...args) => {\n          args = args.length === 1 ? args[0] : args;\n          const output = `DZ_${eventName.toUpperCase()}`;\n          const emitter = this[output];\n          if (emitter.observers.length > 0) {\n            this.zone.run(() => {\n              emitter.emit(args);\n            });\n          }\n        });\n      });\n      if (!this.configDiff) {\n        this.configDiff = this.differs.find(this.config || {}).create();\n        this.configDiff.diff(this.config || {});\n      }\n    }\n    ngOnDestroy() {\n      if (this.instance) {\n        this.zone.runOutsideAngular(() => {\n          this.instance.destroy();\n        });\n        this.instance = null;\n      }\n    }\n    ngDoCheck() {\n      if (!this.disabled && this.configDiff) {\n        const changes = this.configDiff.diff(this.config || {});\n        if (changes && this.instance) {\n          this.ngOnDestroy();\n          this.ngOnInit();\n        }\n      }\n    }\n    ngOnChanges(changes) {\n      if (this.instance && changes['disabled']) {\n        if (changes['disabled'].currentValue !== changes['disabled'].previousValue) {\n          if (changes['disabled'].currentValue === false) {\n            this.zone.runOutsideAngular(() => {\n              this.instance.enable();\n            });\n          } else if (changes['disabled'].currentValue === true) {\n            this.zone.runOutsideAngular(() => {\n              this.instance.disable();\n            });\n          }\n        }\n      }\n    }\n    dropzone() {\n      return this.instance;\n    }\n    reset(cancel) {\n      if (this.instance) {\n        this.zone.runOutsideAngular(() => {\n          this.instance.removeAllFiles(cancel);\n        });\n      }\n    }\n  }\n  DropzoneDirective.ɵfac = function DropzoneDirective_Factory(t) {\n    return new (t || DropzoneDirective)(ɵngcc0.ɵɵdirectiveInject(ɵngcc0.NgZone), ɵngcc0.ɵɵdirectiveInject(ɵngcc0.Renderer2), ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ElementRef), ɵngcc0.ɵɵdirectiveInject(ɵngcc0.KeyValueDiffers), ɵngcc0.ɵɵdirectiveInject(PLATFORM_ID), ɵngcc0.ɵɵdirectiveInject(DROPZONE_CONFIG, 8));\n  };\n  DropzoneDirective.ɵdir = /*@__PURE__*/ɵngcc0.ɵɵdefineDirective({\n    type: DropzoneDirective,\n    selectors: [[\"\", \"dropzone\", \"\"]],\n    inputs: {\n      disabled: \"disabled\",\n      config: [\"dropzone\", \"config\"]\n    },\n    outputs: {\n      DZ_INIT: \"init\",\n      DZ_ERROR: \"error\",\n      DZ_SUCCESS: \"success\",\n      DZ_SENDING: \"sending\",\n      DZ_CANCELED: \"canceled\",\n      DZ_COMPLETE: \"complete\",\n      DZ_PROCESSING: \"processing\",\n      DZ_DROP: \"drop\",\n      DZ_DRAGSTART: \"dragStart\",\n      DZ_DRAGEND: \"dragEnd\",\n      DZ_DRAGENTER: \"dragEnter\",\n      DZ_DRAGOVER: \"dragOver\",\n      DZ_DRAGLEAVE: \"dragLeave\",\n      DZ_THUMBNAIL: \"thumbnail\",\n      DZ_ADDEDFILE: \"addedFile\",\n      DZ_ADDEDFILES: \"addedFiles\",\n      DZ_REMOVEDFILE: \"removedFile\",\n      DZ_UPLOADPROGRESS: \"uploadProgress\",\n      DZ_MAXFILESREACHED: \"maxFilesReached\",\n      DZ_MAXFILESEXCEEDED: \"maxFilesExceeded\",\n      DZ_ERRORMULTIPLE: \"errorMultiple\",\n      DZ_SUCCESSMULTIPLE: \"successMultiple\",\n      DZ_SENDINGMULTIPLE: \"sendingMultiple\",\n      DZ_CANCELEDMULTIPLE: \"canceledMultiple\",\n      DZ_COMPLETEMULTIPLE: \"completeMultiple\",\n      DZ_PROCESSINGMULTIPLE: \"processingMultiple\",\n      DZ_RESET: \"reset\",\n      DZ_QUEUECOMPLETE: \"queueComplete\",\n      DZ_TOTALUPLOADPROGRESS: \"totalUploadProgress\"\n    },\n    exportAs: [\"ngxDropzone\"],\n    features: [ɵngcc0.ɵɵNgOnChangesFeature]\n  });\n  return DropzoneDirective;\n})();\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && void 0;\n})();\nlet DropzoneComponent = /*#__PURE__*/(() => {\n  class DropzoneComponent {\n    constructor(platformId) {\n      this.platformId = platformId;\n      this.disabled = false;\n      this.message = 'Click or drag files to upload';\n      this.placeholder = '';\n      this.useDropzoneClass = true;\n      this.DZ_INIT = new EventEmitter();\n      this.DZ_ERROR = new EventEmitter();\n      this.DZ_SUCCESS = new EventEmitter();\n      this.DZ_SENDING = new EventEmitter();\n      this.DZ_CANCELED = new EventEmitter();\n      this.DZ_COMPLETE = new EventEmitter();\n      this.DZ_PROCESSING = new EventEmitter();\n      this.DZ_DROP = new EventEmitter();\n      this.DZ_DRAGSTART = new EventEmitter();\n      this.DZ_DRAGEND = new EventEmitter();\n      this.DZ_DRAGENTER = new EventEmitter();\n      this.DZ_DRAGOVER = new EventEmitter();\n      this.DZ_DRAGLEAVE = new EventEmitter();\n      this.DZ_THUMBNAIL = new EventEmitter();\n      this.DZ_ADDEDFILE = new EventEmitter();\n      this.DZ_ADDEDFILES = new EventEmitter();\n      this.DZ_REMOVEDFILE = new EventEmitter();\n      this.DZ_UPLOADPROGRESS = new EventEmitter();\n      this.DZ_MAXFILESREACHED = new EventEmitter();\n      this.DZ_MAXFILESEXCEEDED = new EventEmitter();\n      this.DZ_ERRORMULTIPLE = new EventEmitter();\n      this.DZ_SUCCESSMULTIPLE = new EventEmitter();\n      this.DZ_SENDINGMULTIPLE = new EventEmitter();\n      this.DZ_CANCELEDMULTIPLE = new EventEmitter();\n      this.DZ_COMPLETEMULTIPLE = new EventEmitter();\n      this.DZ_PROCESSINGMULTIPLE = new EventEmitter();\n      this.DZ_RESET = new EventEmitter();\n      this.DZ_QUEUECOMPLETE = new EventEmitter();\n      this.DZ_TOTALUPLOADPROGRESS = new EventEmitter();\n    }\n    ngOnInit() {\n      if (!isPlatformBrowser(this.platformId)) {\n        return;\n      }\n      window.setTimeout(() => {\n        DropzoneEvents.forEach(eventName => {\n          if (this.directiveRef) {\n            const output = `DZ_${eventName.toUpperCase()}`;\n            const directiveOutput = output;\n            const componentOutput = output;\n            this.directiveRef[directiveOutput] = this[componentOutput];\n          }\n        });\n      }, 0);\n    }\n    getPlaceholder() {\n      return 'url(' + encodeURI(this.placeholder) + ')';\n    }\n  }\n  DropzoneComponent.ɵfac = function DropzoneComponent_Factory(t) {\n    return new (t || DropzoneComponent)(ɵngcc0.ɵɵdirectiveInject(PLATFORM_ID));\n  };\n  DropzoneComponent.ɵcmp = /*@__PURE__*/ɵngcc0.ɵɵdefineComponent({\n    type: DropzoneComponent,\n    selectors: [[\"dropzone\"]],\n    viewQuery: function DropzoneComponent_Query(rf, ctx) {\n      if (rf & 1) {\n        ɵngcc0.ɵɵviewQuery(DropzoneDirective, 7);\n      }\n      if (rf & 2) {\n        let _t;\n        ɵngcc0.ɵɵqueryRefresh(_t = ɵngcc0.ɵɵloadQuery()) && (ctx.directiveRef = _t.first);\n      }\n    },\n    inputs: {\n      disabled: \"disabled\",\n      message: \"message\",\n      placeholder: \"placeholder\",\n      useDropzoneClass: \"useDropzoneClass\",\n      config: \"config\"\n    },\n    outputs: {\n      DZ_INIT: \"init\",\n      DZ_ERROR: \"error\",\n      DZ_SUCCESS: \"success\",\n      DZ_SENDING: \"sending\",\n      DZ_CANCELED: \"canceled\",\n      DZ_COMPLETE: \"complete\",\n      DZ_PROCESSING: \"processing\",\n      DZ_DROP: \"drop\",\n      DZ_DRAGSTART: \"dragStart\",\n      DZ_DRAGEND: \"dragEnd\",\n      DZ_DRAGENTER: \"dragEnter\",\n      DZ_DRAGOVER: \"dragOver\",\n      DZ_DRAGLEAVE: \"dragLeave\",\n      DZ_THUMBNAIL: \"thumbnail\",\n      DZ_ADDEDFILE: \"addedFile\",\n      DZ_ADDEDFILES: \"addedFiles\",\n      DZ_REMOVEDFILE: \"removedFile\",\n      DZ_UPLOADPROGRESS: \"uploadProgress\",\n      DZ_MAXFILESREACHED: \"maxFilesReached\",\n      DZ_MAXFILESEXCEEDED: \"maxFilesExceeded\",\n      DZ_ERRORMULTIPLE: \"errorMultiple\",\n      DZ_SUCCESSMULTIPLE: \"successMultiple\",\n      DZ_SENDINGMULTIPLE: \"sendingMultiple\",\n      DZ_CANCELEDMULTIPLE: \"canceledMultiple\",\n      DZ_COMPLETEMULTIPLE: \"completeMultiple\",\n      DZ_PROCESSINGMULTIPLE: \"processingMultiple\",\n      DZ_RESET: \"reset\",\n      DZ_QUEUECOMPLETE: \"queueComplete\",\n      DZ_TOTALUPLOADPROGRESS: \"totalUploadProgress\"\n    },\n    exportAs: [\"ngxDropzone\"],\n    ngContentSelectors: _c0,\n    decls: 5,\n    vars: 10,\n    consts: [[1, \"dz-wrapper\", 3, \"dropzone\", \"disabled\", \"init\"], [1, \"dz-message\"], [1, \"dz-text\", 3, \"innerHTML\"], [\"class\", \"dz-image\", 3, \"background-image\", 4, \"ngIf\"], [1, \"dz-image\"]],\n    template: function DropzoneComponent_Template(rf, ctx) {\n      if (rf & 1) {\n        ɵngcc0.ɵɵprojectionDef();\n        ɵngcc0.ɵɵelementStart(0, \"div\", 0);\n        ɵngcc0.ɵɵlistener(\"init\", function DropzoneComponent_Template_div_init_0_listener($event) {\n          return ctx.DZ_INIT.emit($event);\n        });\n        ɵngcc0.ɵɵelementStart(1, \"div\", 1);\n        ɵngcc0.ɵɵelement(2, \"div\", 2);\n        ɵngcc0.ɵɵtemplate(3, DropzoneComponent_div_3_Template, 1, 2, \"div\", 3);\n        ɵngcc0.ɵɵelementEnd();\n        ɵngcc0.ɵɵprojection(4);\n        ɵngcc0.ɵɵelementEnd();\n      }\n      if (rf & 2) {\n        ɵngcc0.ɵɵclassProp(\"dropzone\", ctx.useDropzoneClass);\n        ɵngcc0.ɵɵproperty(\"dropzone\", ctx.config)(\"disabled\", ctx.disabled);\n        ɵngcc0.ɵɵadvance(1);\n        ɵngcc0.ɵɵclassProp(\"disabled\", ctx.disabled)(\"dz-placeholder\", ctx.placeholder);\n        ɵngcc0.ɵɵadvance(1);\n        ɵngcc0.ɵɵproperty(\"innerHTML\", (ctx.config == null ? null : ctx.config.dictDefaultMessage) || ctx.message, ɵngcc0.ɵɵsanitizeHtml);\n        ɵngcc0.ɵɵadvance(1);\n        ɵngcc0.ɵɵproperty(\"ngIf\", ctx.placeholder);\n      }\n    },\n    directives: [DropzoneDirective, ɵngcc1.NgIf],\n    styles: [\"dropzone{display:block;height:auto;width:100%}dropzone[fxflex]{display:flex;flex-direction:inherit;min-height:0;min-width:0}dropzone[fxflex]>.dropzone.dz-wrapper{-webkit-box-flex:1;flex:1 1 auto;min-height:0;min-width:0}dropzone[fxlayout]{-webkit-box-align:inherit;-webkit-box-pack:inherit;align-content:inherit;align-items:inherit;justify-content:inherit}dropzone[fxlayout]>.dropzone.dz-wrapper.dz-single{-webkit-box-align:center;-webkit-box-pack:center;align-content:center;align-items:center;display:flex;flex-direction:column;justify-content:center}dropzone[fxlayout]>.dropzone.dz-wrapper.dz-multiple{-webkit-box-align:flex-start;-webkit-box-pack:flex-start;align-content:flex-start;align-items:flex-start;display:flex;flex-flow:row wrap;justify-content:space-between}dropzone>.dropzone.dz-wrapper{background:transparent;border:none;color:#666;max-height:100%;min-height:0;overflow:auto;padding:0;position:relative;width:100%}dropzone>.dropzone.dz-wrapper .dz-message{background-color:#eee;border:2px dashed #aaa;display:inline-block;margin:8px;max-height:100%;max-width:calc(100% - 16px);min-height:40px;min-width:calc(100% - 16px);overflow:auto;position:relative;width:calc(100% - 16px)}dropzone>.dropzone.dz-wrapper .dz-message .dz-text{padding:8px 16px;position:absolute;text-align:center;top:50%;transform:translateY(-50%);width:100%}dropzone>.dropzone.dz-wrapper .dz-message .dz-image{background-position:50% 50%;background-repeat:no-repeat;background-size:contain;height:100%;width:100%}dropzone>.dropzone.dz-wrapper .dz-message.disabled{cursor:not-allowed}dropzone>.dropzone.dz-wrapper .dz-message.disabled .dz-text{opacity:.5}dropzone>.dropzone.dz-wrapper .dz-message.dz-placeholder{border-color:rgba(#aaa,0)}dropzone>.dropzone.dz-wrapper .dz-message.dz-placeholder .dz-text{background-color:rgba(#fff,.5);font-weight:700;left:10%;opacity:0;position:absolute;right:10%;top:0;transform:translateY(-50%);transition:filter .25s ease-in-out,opacity .25s ease-in-out,border-color .25s ease-in-out;z-index:1}dropzone>.dropzone.dz-wrapper .dz-message.dz-placeholder:hover:not(.disabled){border-color:#aaa}dropzone>.dropzone.dz-wrapper .dz-message.dz-placeholder:hover:not(.disabled) .dz-text{opacity:1}dropzone>.dropzone.dz-wrapper .dz-message.dz-placeholder:hover:not(.disabled) .dz-image{filter:blur(8px)}dropzone>.dropzone.dz-wrapper .dz-preview{margin:8px}dropzone>.dropzone.dz-wrapper .dz-preview .dz-details{padding:24px}dropzone>.dropzone.dz-wrapper .dz-preview .dz-progress{border:1px solid #aaa;border-radius:4px;margin-left:-40%;width:80%}dropzone>.dropzone.dz-wrapper .dz-preview .dz-progress .dz-upload{background-color:#666}dropzone>.dropzone.dz-wrapper .dz-preview .dz-filename span{display:block;max-width:100%;overflow:hidden;text-overflow:ellipsis;width:100%}dropzone>.dropzone.dz-wrapper .dz-preview .dz-filename span:hover{overflow:visible;white-space:normal;word-wrap:break-word}dropzone>.dropzone.dz-wrapper.dz-single .dz-message{height:100%;width:100%}dropzone>.dropzone.dz-wrapper.dz-single.dz-started .dz-message{display:none}dropzone>.dropzone.dz-wrapper.dz-single .dz-preview{height:100%;width:calc(100% - 16px)}dropzone>.dropzone.dz-wrapper.dz-single .dz-preview .dz-image{border-radius:0;height:100%;width:100%}dropzone>.dropzone.dz-wrapper.dz-single .dz-preview .dz-image img{display:block;height:auto;margin:0;width:100%}dropzone>.dropzone.dz-wrapper.dz-single .dz-error-message{left:50%;top:50%;transform:translateX(-50%) translateY(100%)}dropzone>.dropzone.dz-wrapper.dz-multiple.dz-started .dz-message{display:inline-block}\", \"@-webkit-keyframes passing-through{0%{opacity:0;transform:translateY(40px)}30%,70%{opacity:1;transform:translateY(0)}to{opacity:0;transform:translateY(-40px)}}@keyframes passing-through{0%{opacity:0;transform:translateY(40px)}30%,70%{opacity:1;transform:translateY(0)}to{opacity:0;transform:translateY(-40px)}}@-webkit-keyframes slide-in{0%{opacity:0;transform:translateY(40px)}30%{opacity:1;transform:translateY(0)}}@keyframes slide-in{0%{opacity:0;transform:translateY(40px)}30%{opacity:1;transform:translateY(0)}}@-webkit-keyframes pulse{0%{transform:scale(1)}10%{transform:scale(1.1)}20%{transform:scale(1)}}@keyframes pulse{0%{transform:scale(1)}10%{transform:scale(1.1)}20%{transform:scale(1)}}.dropzone,.dropzone *{box-sizing:border-box}.dropzone{background:#fff;border:2px solid rgba(0,0,0,.3);min-height:150px;padding:20px}.dropzone.dz-clickable{cursor:pointer}.dropzone.dz-clickable *{cursor:default}.dropzone.dz-clickable .dz-message,.dropzone.dz-clickable .dz-message *{cursor:pointer}.dropzone.dz-started .dz-message{display:none}.dropzone.dz-drag-hover{border-style:solid}.dropzone.dz-drag-hover .dz-message{opacity:.5}.dropzone .dz-message{margin:2em 0;text-align:center}.dropzone .dz-message .dz-button{background:none;border:none;color:inherit;cursor:pointer;font:inherit;outline:inherit;padding:0}.dropzone .dz-preview{display:inline-block;margin:16px;min-height:100px;position:relative;vertical-align:top}.dropzone .dz-preview:hover{z-index:1000}.dropzone .dz-preview.dz-file-preview .dz-image{background:#999;background:linear-gradient(180deg,#eee,#ddd);border-radius:20px}.dropzone .dz-preview.dz-file-preview .dz-details{opacity:1}.dropzone .dz-preview.dz-image-preview{background:#fff}.dropzone .dz-preview.dz-image-preview .dz-details{transition:opacity .2s linear}.dropzone .dz-preview .dz-remove{border:none;cursor:pointer;display:block;font-size:14px;text-align:center}.dropzone .dz-preview .dz-remove:hover{text-decoration:underline}.dropzone .dz-preview:hover .dz-details{opacity:1}.dropzone .dz-preview .dz-details{color:rgba(0,0,0,.9);font-size:13px;left:0;line-height:150%;max-width:100%;min-width:100%;opacity:0;padding:2em 1em;position:absolute;text-align:center;top:0;z-index:20}.dropzone .dz-preview .dz-details .dz-size{font-size:16px;margin-bottom:1em}.dropzone .dz-preview .dz-details .dz-filename{white-space:nowrap}.dropzone .dz-preview .dz-details .dz-filename:hover span{background-color:hsla(0,0%,100%,.8);border:1px solid hsla(0,0%,78.4%,.8)}.dropzone .dz-preview .dz-details .dz-filename:not(:hover){overflow:hidden;text-overflow:ellipsis}.dropzone .dz-preview .dz-details .dz-filename:not(:hover) span{border:1px solid transparent}.dropzone .dz-preview .dz-details .dz-filename span,.dropzone .dz-preview .dz-details .dz-size span{background-color:hsla(0,0%,100%,.4);border-radius:3px;padding:0 .4em}.dropzone .dz-preview:hover .dz-image img{filter:blur(8px);transform:scale(1.05)}.dropzone .dz-preview .dz-image{border-radius:20px;display:block;height:120px;overflow:hidden;position:relative;width:120px;z-index:10}.dropzone .dz-preview .dz-image img{display:block}.dropzone .dz-preview.dz-success .dz-success-mark{-webkit-animation:passing-through 3s cubic-bezier(.77,0,.175,1);animation:passing-through 3s cubic-bezier(.77,0,.175,1)}.dropzone .dz-preview.dz-error .dz-error-mark{-webkit-animation:slide-in 3s cubic-bezier(.77,0,.175,1);animation:slide-in 3s cubic-bezier(.77,0,.175,1);opacity:1}.dropzone .dz-preview .dz-error-mark,.dropzone .dz-preview .dz-success-mark{display:block;left:50%;margin-left:-27px;margin-top:-27px;opacity:0;pointer-events:none;position:absolute;top:50%;z-index:500}.dropzone .dz-preview .dz-error-mark svg,.dropzone .dz-preview .dz-success-mark svg{display:block;height:54px;width:54px}.dropzone .dz-preview.dz-processing .dz-progress{opacity:1;transition:all .2s linear}.dropzone .dz-preview.dz-complete .dz-progress{opacity:0;transition:opacity .4s ease-in}.dropzone .dz-preview:not(.dz-processing) .dz-progress{-webkit-animation:pulse 6s ease infinite;animation:pulse 6s ease infinite}.dropzone .dz-preview .dz-progress{-webkit-transform:scale(1);background:hsla(0,0%,100%,.9);border-radius:8px;height:16px;left:50%;margin-left:-40px;margin-top:-8px;opacity:1;overflow:hidden;pointer-events:none;position:absolute;top:50%;width:80px;z-index:1000}.dropzone .dz-preview .dz-progress .dz-upload{background:#333;background:linear-gradient(180deg,#666,#444);bottom:0;left:0;position:absolute;top:0;transition:width .3s ease-in-out;width:0}.dropzone .dz-preview.dz-error .dz-error-message{display:block}.dropzone .dz-preview.dz-error:hover .dz-error-message{opacity:1;pointer-events:auto}.dropzone .dz-preview .dz-error-message{background:#be2626;background:linear-gradient(180deg,#be2626,#a92222);border-radius:8px;color:#fff;display:block;display:none;font-size:13px;left:-10px;opacity:0;padding:.5em 1.2em;pointer-events:none;position:absolute;top:130px;transition:opacity .3s ease;width:140px;z-index:1000}.dropzone .dz-preview .dz-error-message:after{border-bottom:6px solid #be2626;border-left:6px solid transparent;border-right:6px solid transparent;content:\\\"\\\";height:0;left:64px;position:absolute;top:-6px;width:0}\"],\n    encapsulation: 2\n  });\n  return DropzoneComponent;\n})();\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && void 0;\n})();\nlet DropzoneModule = /*#__PURE__*/(() => {\n  class DropzoneModule {}\n  DropzoneModule.ɵfac = function DropzoneModule_Factory(t) {\n    return new (t || DropzoneModule)();\n  };\n  DropzoneModule.ɵmod = /*@__PURE__*/ɵngcc0.ɵɵdefineNgModule({\n    type: DropzoneModule\n  });\n  DropzoneModule.ɵinj = /*@__PURE__*/ɵngcc0.ɵɵdefineInjector({\n    imports: [[CommonModule], CommonModule]\n  });\n  return DropzoneModule;\n})();\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && void 0;\n})();\n(function () {\n  (typeof ngJitMode === \"undefined\" || ngJitMode) && ɵngcc0.ɵɵsetNgModuleScope(DropzoneModule, {\n    declarations: function () {\n      return [DropzoneComponent, DropzoneDirective];\n    },\n    imports: function () {\n      return [CommonModule];\n    },\n    exports: function () {\n      return [CommonModule, DropzoneComponent, DropzoneDirective];\n    }\n  });\n})();\n\n/**\n * Generated bundle index. Do not edit.\n */\n\nexport { DROPZONE_CONFIG, DropzoneComponent, DropzoneConfig, DropzoneDirective, DropzoneModule };\n\n//# sourceMappingURL=ngx-dropzone-wrapper.js.map","map":null,"metadata":{},"sourceType":"module"}