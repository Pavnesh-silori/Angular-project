{"ast":null,"code":"import { HttpParams } from \"@angular/common/http\";\nimport { environment } from \"src/environments/environment\";\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/common/http\";\nexport let ProductAndServiceController = /*#__PURE__*/(() => {\n  class ProductAndServiceController {\n    constructor(http) {\n      this.http = http;\n    }\n    createProduct(orgID, formData) {\n      return this.http.post(`${environment.COMMON_API_URL}organizations/${orgID}/product`, formData);\n    }\n    createService(orgID, formData) {\n      return this.http.post(`${environment.COMMON_API_URL}organizations/${orgID}/service`, formData);\n    }\n    getProductByID(orgID, id) {\n      return this.http.get(`${environment.COMMON_API_URL}organizations/${orgID}/product/${id}`);\n    }\n    getServiceByID(orgID, id) {\n      return this.http.get(`${environment.COMMON_API_URL}organizations/${orgID}/service/${id}`);\n    }\n    updateProduct(orgID, formData, id) {\n      return this.http.patch(`${environment.COMMON_API_URL}organizations/${orgID}/product/${id}`, formData);\n    }\n    updateService(orgID, formData, id) {\n      return this.http.patch(`${environment.COMMON_API_URL}organizations/${orgID}/service/${id}`, formData);\n    }\n    getProductByPage(pageNo, pazeSize, sortBy, orderBy, orgID, filterArr, searchValue, searchFlag) {\n      let params = new HttpParams();\n      params = params.append('pageNo', pageNo);\n      params = params.append('pageSize', pazeSize);\n      params = params.append('sortBy', sortBy);\n      params = params.append('orderBy', orderBy);\n      if (searchFlag) {\n        params = params.append('search', searchValue);\n      }\n      filterArr.forEach(filter => params = params.append('filter', filter));\n      return this.http.get(`${environment.COMMON_API_URL}organizations/${orgID}/product/page`, {\n        params: params\n      });\n    }\n    getServiceByPage(pageNo, pazeSize, sortBy, orderBy, orgID, searchValue) {\n      let params = new HttpParams();\n      params = params.append('pageNo', pageNo);\n      params = params.append('pageSize', pazeSize);\n      params = params.append('sortBy', sortBy);\n      params = params.append('orderBy', orderBy);\n      if (searchValue) {\n        params = params.append('search', searchValue);\n      }\n      return this.http.get(`${environment.COMMON_API_URL}organizations/${orgID}/service/page`, {\n        params: params\n      });\n    }\n    bulkUploadProduct(orgID, file) {\n      return this.http.post(`${environment.COMMON_API_URL}organizations/${orgID}/product/bulk-upload`, file);\n    }\n    bulkUploadService(orgID, file) {\n      return this.http.post(`${environment.COMMON_API_URL}organizations/${orgID}/service/bulk-upload`, file);\n    }\n    getProductList(orgID) {\n      return this.http.get(`${environment.COMMON_API_URL}organizations/${orgID}/product`);\n    }\n    deleteProduct(orgID, id) {\n      return this.http.delete(`${environment.COMMON_API_URL}organizations/${orgID}/product/${id}`);\n    }\n    deleteService(orgID, id) {\n      return this.http.delete(`${environment.COMMON_API_URL}organizations/${orgID}/service/${id}`);\n    }\n    getCnAggerated(lookUpCode, lookUpValue) {\n      let params = new HttpParams();\n      params = params.append('lookUpCode', lookUpCode);\n      params = params.append('lookUpValue', lookUpValue);\n      return this.http.get(`${environment.COMMON_API_URL}lookup`, {\n        params: params\n      });\n    }\n    getProductCategoryList() {\n      return this.http.get(`${environment.COMMON_API_URL}product-category`);\n    }\n  }\n  ProductAndServiceController.ɵfac = function ProductAndServiceController_Factory(t) {\n    return new (t || ProductAndServiceController)(i0.ɵɵinject(i1.HttpClient));\n  };\n  ProductAndServiceController.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n    token: ProductAndServiceController,\n    factory: ProductAndServiceController.ɵfac,\n    providedIn: 'root'\n  });\n  return ProductAndServiceController;\n})();","map":null,"metadata":{},"sourceType":"module"}