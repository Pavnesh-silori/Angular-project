{"ast":null,"code":"import { HttpParams, HttpHeaders } from '@angular/common/http';\nimport { environment } from 'src/environments/environment';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/common/http\";\nexport let SourceController = /*#__PURE__*/(() => {\n  class SourceController {\n    constructor(http) {\n      this.http = http;\n    }\n    deleteVendor(vendorID, currentOrgID) {\n      return this.http.delete(`${environment.CARBON_ACCOUNTING_API_URL}organizations/${currentOrgID}/vendors/${vendorID}`);\n    }\n    checkKeyAvailability(currentOrgID, source, keyID) {\n      return this.http.get(`${environment.COMMON_API_URL}organizations/${currentOrgID}/${source}/keyid/${keyID}`);\n    }\n    isEmailExist(emailID) {\n      let headers = new HttpHeaders().set('skipAuth', '1');\n      let params = new HttpParams();\n      params = params.append('emailID', encodeURIComponent(emailID));\n      return this.http.get(`${environment.ORGANIZATION_PUBLIC_API_URL}users/email/validate`, {\n        params: params,\n        headers: headers\n      });\n    }\n    userOrgList(currentOrgID, emailID) {\n      let params = new HttpParams();\n      params = params.append('emailID', encodeURIComponent(emailID));\n      return this.http.get(`${environment.ORGANIZATION_API_URL}organizations/${currentOrgID}/email`, {\n        params: params\n      });\n    }\n    sendEmailDomainList(currentOrgID, emailID) {\n      let params = new HttpParams();\n      params = params.append('emailID', encodeURIComponent(emailID));\n      return this.http.get(`${environment.ORGANIZATION_API_URL}organizations/${currentOrgID}/user/email`, {\n        params: params\n      });\n    }\n    deleteScopeThreeSupplier(scopeThreeSupplierID, currentOrgID) {\n      return this.http.delete(`${environment.CARBON_ACCOUNTING_API_URL}organizations/${currentOrgID}/scope-three-supplier/${scopeThreeSupplierID}`);\n    }\n  }\n  SourceController.ɵfac = function SourceController_Factory(t) {\n    return new (t || SourceController)(i0.ɵɵinject(i1.HttpClient));\n  };\n  SourceController.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n    token: SourceController,\n    factory: SourceController.ɵfac,\n    providedIn: 'root'\n  });\n  return SourceController;\n})();","map":null,"metadata":{},"sourceType":"module"}