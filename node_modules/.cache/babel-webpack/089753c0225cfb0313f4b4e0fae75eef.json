{"ast":null,"code":"import { HttpParams } from '@angular/common/http';\nimport { environment } from 'src/environments/environment';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/common/http\";\nexport let CustomDatabaseController = /*#__PURE__*/(() => {\n  class CustomDatabaseController {\n    constructor(http) {\n      this.http = http;\n    }\n    getFactorTypeStdList() {\n      return this.http.get(`${environment.CARBON_ACCOUNTING_API_URL}custom-factor-type`);\n    }\n    getDatabase(orgID, pageNo, pageSize, sortBy, orderBy, customFactorTypeStdID, search) {\n      let params = new HttpParams();\n      params = params.append('pageNo', pageNo + 1);\n      params = params.append('pageSize', pageSize);\n      params = params.append('sortBy', sortBy);\n      params = params.append('orderBy', orderBy);\n      params = params.append('search', search);\n      params = params.append('customFactorTypeStdID', customFactorTypeStdID);\n      return this.http.get(`${environment.CARBON_ACCOUNTING_API_URL}organizations/${orgID}/custom-factors/databases/page`, {\n        params: params\n      });\n    }\n    getDatabaseByID(orgID, databaseID) {\n      return this.http.get(`${environment.CARBON_ACCOUNTING_API_URL}organizations/${orgID}/custom-factors/databases/${databaseID}`);\n    }\n    createDatabase(orgID, database) {\n      return this.http.post(`${environment.CARBON_ACCOUNTING_API_URL}organizations/${orgID}/custom-factors/databases`, database);\n    }\n    updateDatabase(orgID, database, databaseID) {\n      return this.http.patch(`${environment.CARBON_ACCOUNTING_API_URL}organizations/${orgID}/custom-factors/databases/${databaseID}`, database);\n    }\n    deleteDatabaseByID(orgID, databaseID) {\n      return this.http.delete(`${environment.CARBON_ACCOUNTING_API_URL}organizations/${orgID}/custom-factors/databases/${databaseID}`);\n    }\n  }\n  CustomDatabaseController.ɵfac = function CustomDatabaseController_Factory(t) {\n    return new (t || CustomDatabaseController)(i0.ɵɵinject(i1.HttpClient));\n  };\n  CustomDatabaseController.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n    token: CustomDatabaseController,\n    factory: CustomDatabaseController.ɵfac,\n    providedIn: 'root'\n  });\n  return CustomDatabaseController;\n})();","map":null,"metadata":{},"sourceType":"module"}