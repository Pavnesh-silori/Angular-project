{"ast":null,"code":"import { environment } from \"src/environments/environment\";\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/common/http\";\nexport let OnGoingRunController = /*#__PURE__*/(() => {\n  class OnGoingRunController {\n    constructor(http) {\n      this.http = http;\n    }\n    getByPage(orgID, body) {\n      return this.http.post(`${environment.CARBON_ACCOUNTING_API_URL}organizations/${orgID}/cbam/ongoing-run/page`, body);\n    }\n    getLedgerByPage(orgID, body) {\n      return this.http.post(`${environment.CARBON_ACCOUNTING_API_URL}organizations/${orgID}/cbam/ledger/page`, body);\n    }\n    lockProduct(orgID, runID, data) {\n      return this.http.patch(`${environment.CARBON_ACCOUNTING_API_URL}organizations/${orgID}/cbam/run/${runID}/lock-unlock/status`, data);\n    }\n    // lockProduct(orgID, productID) {\n    //     let Data = 'false'\n    //     console.log(\"product locked\");\n    //     return Data;\n    // }\n    deleteProduct(orgID, productID) {\n      let Data = 'true';\n      console.log('deleteIcon pressed');\n      return Data;\n    }\n    getRunStatus() {\n      return this.http.get(`${environment.MOCK_SERVER}runStatus`);\n    }\n  }\n  OnGoingRunController.ɵfac = function OnGoingRunController_Factory(t) {\n    return new (t || OnGoingRunController)(i0.ɵɵinject(i1.HttpClient));\n  };\n  OnGoingRunController.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n    token: OnGoingRunController,\n    factory: OnGoingRunController.ɵfac,\n    providedIn: \"root\"\n  });\n  return OnGoingRunController;\n})();","map":null,"metadata":{},"sourceType":"module"}