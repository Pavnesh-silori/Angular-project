{"ast":null,"code":"import { __awaiter } from \"tslib\";\nimport { FormControl, Validators } from '@angular/forms';\nimport { DaterangepickerDirective } from 'ngx-daterangepicker-material';\nimport { ReplaySubject, Subject } from 'rxjs';\nimport { MAT_DIALOG_DATA } from '@angular/material/dialog';\nimport { startWith } from 'rxjs/operators';\nimport * as moment from 'moment';\nimport { SubsidiaryEnum } from '@carbon/enum/subsidiary.enum';\n// tsc-library\nimport { ToastrColor } from '@library/toastr-service';\nimport { ButtonLabelEnum, DialogEnum, FormAction, InvalidForm, MatSelectSearchService, MaterialFormFieldAppearance } from '@library/tsc-common';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/forms\";\nimport * as i2 from \"@library/toastr-service\";\nimport * as i3 from \"@library/storage-service\";\nimport * as i4 from \"@carbon/service/consolidation-approach.service\";\nimport * as i5 from \"@carbon/controller/subsidiary-emission-data.controller\";\nimport * as i6 from \"@carbon/controller/subsidiary.controller\";\nimport * as i7 from \"@angular/material/dialog\";\nimport * as i8 from \"@angular/material/button\";\nimport * as i9 from \"@angular/material/tooltip\";\nimport * as i10 from \"@angular/material/form-field\";\nimport * as i11 from \"@angular/material/select\";\nimport * as i12 from \"@angular/material/core\";\nimport * as i13 from \"ngx-mat-select-search\";\nimport * as i14 from \"@angular/common\";\nimport * as i15 from \"@angular/material/input\";\nimport * as i16 from \"ngx-daterangepicker-material\";\nimport * as i17 from \"@angular/material/datepicker\";\nimport * as i18 from \"../emission-data/emission-data.component\";\nconst _c0 = [\"emissionDataComp\"];\nfunction SubsidiaryFormComponent_mat_option_20_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"mat-option\", 29);\n    i0.ɵɵtext(1);\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const subsidiary_r7 = ctx.$implicit;\n    i0.ɵɵproperty(\"value\", subsidiary_r7.id);\n    i0.ɵɵadvance(1);\n    i0.ɵɵtextInterpolate1(\" \", subsidiary_r7[\"name\"], \" \");\n  }\n}\nfunction SubsidiaryFormComponent_mat_error_22_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"mat-error\");\n    i0.ɵɵtext(1, \" Subsidiary/JV is mandatory \");\n    i0.ɵɵelementEnd();\n  }\n}\nfunction SubsidiaryFormComponent_ng_container_23_div_8_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\");\n    i0.ɵɵtext(1);\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const ctx_r8 = i0.ɵɵnextContext(2);\n    i0.ɵɵadvance(1);\n    i0.ɵɵtextInterpolate1(\" \", (ctx_r8.subsidiary == null ? null : ctx_r8.subsidiary[\"financialControl\"]) + \"%\", \" Financial control \");\n  }\n}\nfunction SubsidiaryFormComponent_ng_container_23_div_9_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\");\n    i0.ɵɵtext(1);\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const ctx_r9 = i0.ɵɵnextContext(2);\n    i0.ɵɵadvance(1);\n    i0.ɵɵtextInterpolate1(\" \", (ctx_r9.subsidiary == null ? null : ctx_r9.subsidiary[\"operationalControl\"]) + \"%\", \" Operational control \");\n  }\n}\nfunction SubsidiaryFormComponent_ng_container_23_div_10_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\");\n    i0.ɵɵtext(1);\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const ctx_r10 = i0.ɵɵnextContext(2);\n    i0.ɵɵadvance(1);\n    i0.ɵɵtextInterpolate1(\" \", (ctx_r10.subsidiary == null ? null : ctx_r10.subsidiary[\"equityControl\"]) + \"%\", \" Equity control \");\n  }\n}\nfunction SubsidiaryFormComponent_ng_container_23_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementContainerStart(0);\n    i0.ɵɵelementStart(1, \"div\", 30);\n    i0.ɵɵelementStart(2, \"div\", 31);\n    i0.ɵɵelementStart(3, \"div\", 32);\n    i0.ɵɵtext(4, \" % control on Subsidiary/JV \");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(5, \"div\", 33);\n    i0.ɵɵelementStart(6, \"div\", 34);\n    i0.ɵɵelementStart(7, \"div\", 35);\n    i0.ɵɵtemplate(8, SubsidiaryFormComponent_ng_container_23_div_8_Template, 2, 1, \"div\", 16);\n    i0.ɵɵtemplate(9, SubsidiaryFormComponent_ng_container_23_div_9_Template, 2, 1, \"div\", 16);\n    i0.ɵɵtemplate(10, SubsidiaryFormComponent_ng_container_23_div_10_Template, 2, 1, \"div\", 16);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementContainerEnd();\n  }\n  if (rf & 2) {\n    const ctx_r2 = i0.ɵɵnextContext();\n    i0.ɵɵadvance(8);\n    i0.ɵɵproperty(\"ngIf\", ctx_r2.subsidiary == null ? null : ctx_r2.subsidiary[\"financialControl\"]);\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngIf\", ctx_r2.subsidiary == null ? null : ctx_r2.subsidiary[\"operationalControl\"]);\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngIf\", ctx_r2.subsidiary == null ? null : ctx_r2.subsidiary[\"equityControl\"]);\n  }\n}\nfunction SubsidiaryFormComponent_mat_error_29_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"mat-error\");\n    i0.ɵɵtext(1, \" Accounting period is mandatory \");\n    i0.ɵɵelementEnd();\n  }\n}\nfunction SubsidiaryFormComponent_mat_option_34_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"mat-option\", 36);\n    i0.ɵɵtext(1);\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const consolidationApproach_r11 = ctx.$implicit;\n    i0.ɵɵproperty(\"value\", consolidationApproach_r11[\"id\"])(\"selected\", true);\n    i0.ɵɵadvance(1);\n    i0.ɵɵtextInterpolate1(\" \", consolidationApproach_r11.name, \" \");\n  }\n}\nfunction SubsidiaryFormComponent_mat_error_35_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"mat-error\");\n    i0.ɵɵtext(1, \" Consolidation approach is required field. \");\n    i0.ɵɵelementEnd();\n  }\n}\nconst _c1 = function () {\n  return {\n    direction: \"ltr\",\n    applyLabel: \"Apply\",\n    format: \"DD-MMM-YYYY\",\n    customRangeLabel: \"Custom Range\"\n  };\n};\n// /tsc-library\nexport let SubsidiaryFormComponent = /*#__PURE__*/(() => {\n  class SubsidiaryFormComponent {\n    constructor(fb, toastrService, storageService, consolidationApproachService, subsidiaryEmissionDataController, subsidiaryController, dialogRef, data) {\n      this.fb = fb;\n      this.toastrService = toastrService;\n      this.storageService = storageService;\n      this.consolidationApproachService = consolidationApproachService;\n      this.subsidiaryEmissionDataController = subsidiaryEmissionDataController;\n      this.subsidiaryController = subsidiaryController;\n      this.dialogRef = dialogRef;\n      this.data = data;\n      this.MaterialFormFieldAppearance = MaterialFormFieldAppearance;\n      this.consolidationApproachList = [];\n      this.isDisable = false;\n      this.submitBtnLabel = '';\n      this.subsidaryFilterFC = new FormControl();\n      this.subsidaryFilterUnsubscribe = new Subject();\n      this.subsidaryFiltered = new ReplaySubject(1);\n      this.daterange = new FormControl(null, Validators.required);\n      this.selectedConsolidationApproaches = [];\n      this.subSelectSearch = new MatSelectSearchService(['name']);\n      this.subsidiary = null;\n      this.isInternal = false;\n      this.errorHandling = (control, error) => {\n        return this.formDataFG.controls[control].hasError(error);\n      };\n      dialogRef.disableClose = true;\n      this.action = this.data['action'];\n      this.currentOrgID = this.data['currentOrgID'];\n    }\n    ngOnInit() {\n      return __awaiter(this, void 0, void 0, function* () {\n        this.formDataInit();\n        this.currentOrgID = parseInt(this.storageService.getStorage('currentOrgID'));\n        this.rootOrgID = parseInt(this.storageService.getStorage('rootOrgID'));\n        this.getSubsidaryByOrgID(this.currentOrgID);\n        this.getAllConsolidationApproachByOrgID();\n        this.formDataFG.valueChanges.pipe(startWith({})).subscribe(value => {});\n        if (this.action == FormAction.CREATE) {\n          this.submitBtnLabel = ButtonLabelEnum.CREATE_BTN_LABEL;\n          this.pageTitle = \"New\";\n        }\n        if (this.action == FormAction.UPDATE) {\n          this.submitBtnLabel = ButtonLabelEnum.SAVE_BTN_LABEL;\n          this.pageTitle = \"Edit\";\n          this.subsidaryEmissionID = this.data['subsidaryEmissionID'];\n          this.isDisable = true;\n          this.getSubsidaryEmissionDataByID();\n        }\n      });\n    }\n    formDataInit() {\n      this.formDataFG = this.fb.group({\n        recordID: [],\n        requestID: [],\n        orgID: [this.currentOrgID],\n        rootOrgID: [this.currentOrgID],\n        subsidiaryID: [, Validators.required],\n        dateRange: [],\n        startDate: [, Validators.required],\n        endDate: [, Validators.required],\n        consolidationApproachIDs: [, Validators.required],\n        consolidationApproachKeyID: [this.selectedConsolidationApproaches],\n        emission: []\n      });\n      this.formDataFG.get('consolidationApproachIDs').valueChanges.pipe(startWith({})).subscribe(caIDs => {\n        let caIDList = caIDs;\n        let consolidationApproachKeyID = [];\n        for (let i = 0; i < (caIDList === null || caIDList === void 0 ? void 0 : caIDList.length); i++) {\n          let consolidationApproach = this.consolidationApproachList.find(ca => ca['id'] == caIDList[i]);\n          consolidationApproachKeyID.push(consolidationApproach === null || consolidationApproach === void 0 ? void 0 : consolidationApproach.keyID);\n        }\n        this.formDataFG.get('consolidationApproachKeyID').patchValue(consolidationApproachKeyID);\n        this.approachList = this.formDataFG.get('consolidationApproachKeyID').value;\n      });\n    }\n    getSubsidaryByOrgID(orgID) {\n      this.subsidiaryController.getSubsidiaryByOrgID(orgID, SubsidiaryEnum.APPROVED).subscribe(response => {\n        this.orgSubsidaryList = response;\n        this.subSelectSearch.entityArr = response;\n        this.subSelectSearch.createSubscription();\n      });\n    }\n    setSubsidary(subsidiaryID) {\n      this.subsidiary = this.orgSubsidaryList.find(subsidiary => subsidiary['id'] == subsidiaryID);\n      return this.isInternal = this.subsidiary['isInternal'];\n    }\n    getSubsidiaryUserListByOrgIDAndsubsidiaryID(id) {\n      this.setSubsidary(id);\n    }\n    accodingPeriodDateRange(selectedValue) {\n      this.startDate = moment(selectedValue.startDate).format('YYYY-MM-DD');\n      this.endDate = moment(selectedValue.endDate).format('YYYY-MM-DD');\n      this.accountingPeriod = this.startDate + ' to ' + this.endDate;\n      this.formDataFG.patchValue({\n        startDate: this.startDate,\n        endDate: this.endDate\n      });\n    }\n    getAllConsolidationApproachByOrgID() {\n      return __awaiter(this, void 0, void 0, function* () {\n        this.consolidationApproachList = yield this.consolidationApproachService.getAllConsolidationApproachByOrgID(this.rootOrgID);\n        this.selectedConsolidationApproaches = this.consolidationApproachList;\n        if (this.action == FormAction.CREATE) {\n          let preSelectedConsolidationApproachID = [];\n          let preSelectedConsolidationApproachKeyID = [];\n          this.consolidationApproachList.forEach(data => {\n            preSelectedConsolidationApproachID.push(data.id);\n            preSelectedConsolidationApproachKeyID.push(data.keyID);\n          });\n          this.formDataFG.get('consolidationApproachIDs').patchValue(preSelectedConsolidationApproachID);\n          this.formDataFG.get('consolidationApproachKeyID').patchValue(preSelectedConsolidationApproachKeyID);\n          this.approachList = this.formDataFG.get('consolidationApproachKeyID').value;\n        }\n      });\n    }\n    getSubsidaryEmissionDataByID() {\n      this.subsidiaryEmissionDataController.getSubsidaryEmissionDataByID(this.currentOrgID, this.subsidaryEmissionID).subscribe(response => {\n        this.subsidaryEmissionData = response;\n        this.patchSubsidiaryEmissionData(this.subsidaryEmissionData);\n      }, error => {\n        console.log('error in getSubsidiaryEmission -', error);\n      });\n    }\n    patchSubsidiaryEmissionData(subsidaryEmissionData) {\n      this.formDataFG.patchValue({\n        recordID: subsidaryEmissionData['recordID'],\n        orgID: subsidaryEmissionData['rootOrgID'],\n        rootOrgID: subsidaryEmissionData['rootOrgID'],\n        subsidiaryID: subsidaryEmissionData['subsidiaryID'],\n        startDate: subsidaryEmissionData['startDate'],\n        endDate: subsidaryEmissionData['endDate'],\n        consolidationApproachIDs: subsidaryEmissionData['consolidationApproachIDs'],\n        consolidationApproachKeyID: subsidaryEmissionData['consolidationApproachKeyID'],\n        emission: subsidaryEmissionData['emission']\n      });\n      this.daterange.patchValue({\n        startDate: moment(subsidaryEmissionData['startDate']),\n        endDate: moment(subsidaryEmissionData['endDate'])\n      });\n      this.getSubsidiaryUserListByOrgIDAndsubsidiaryID(subsidaryEmissionData['subsidiaryID']);\n      // this.initialObject = this.equipmentFG.value;\n      // this.isEqual = true;\n    }\n\n    openCalendar() {\n      this.pickerDirective.open();\n    }\n    submitBtnClk() {\n      if (this.formDataFG.invalid) {\n        this.formDataFG.markAllAsTouched();\n        this.toastrService.openToast(InvalidForm.INVALID_FORM_TITLE, InvalidForm.INVALID_FORM_MESSAGE, ToastrColor.ERROR);\n        return;\n      }\n      if (this.emissionDataComp.saveEmission()) {\n        this.formDataFG.controls['emission'].patchValue(this.emissionDataComp.activityEmissionDataFG.controls['emissionRecords'].value);\n        if (this.action == FormAction.CREATE) {\n          this.subsidiaryEmissionDataController.createSubsidaryEmissiondata(this.currentOrgID, this.formDataFG.value).subscribe(response => {\n            this.toastrService.openToast(response['title'], response['message'], response['result']);\n            this.dialogRef.close(DialogEnum.SUCCESS_DR);\n          }, error => {\n            console.log('error in submitEmissionData() -', error);\n          });\n        }\n        if (this.action == FormAction.UPDATE) {\n          this.subsidiaryEmissionDataController.updateSubsidaryEmissiondata(this.currentOrgID, this.formDataFG.value, this.subsidaryEmissionID).subscribe(response => {\n            this.toastrService.openToast(response['title'], response['message'], response['result']);\n            this.dialogRef.close(DialogEnum.SUCCESS_DR);\n          }, error => {\n            console.log('error in submitEmissionData() -', error);\n          });\n        }\n      }\n    }\n    ngOnDestroy() {\n      this.subsidaryFilterUnsubscribe.next();\n      this.subsidaryFilterUnsubscribe.complete();\n    }\n  }\n  SubsidiaryFormComponent.ɵfac = function SubsidiaryFormComponent_Factory(t) {\n    return new (t || SubsidiaryFormComponent)(i0.ɵɵdirectiveInject(i1.FormBuilder), i0.ɵɵdirectiveInject(i2.ToastrService), i0.ɵɵdirectiveInject(i3.StorageService), i0.ɵɵdirectiveInject(i4.ConsolidationApproachService), i0.ɵɵdirectiveInject(i5.SubsidiaryEmissionDataController), i0.ɵɵdirectiveInject(i6.SubsidiaryController), i0.ɵɵdirectiveInject(i7.MatDialogRef), i0.ɵɵdirectiveInject(MAT_DIALOG_DATA));\n  };\n  SubsidiaryFormComponent.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n    type: SubsidiaryFormComponent,\n    selectors: [[\"app-subsidiary-form\"]],\n    viewQuery: function SubsidiaryFormComponent_Query(rf, ctx) {\n      if (rf & 1) {\n        i0.ɵɵviewQuery(DaterangepickerDirective, 5);\n        i0.ɵɵviewQuery(_c0, 5);\n      }\n      if (rf & 2) {\n        let _t;\n        i0.ɵɵqueryRefresh(_t = i0.ɵɵloadQuery()) && (ctx.pickerDirective = _t.first);\n        i0.ɵɵqueryRefresh(_t = i0.ɵɵloadQuery()) && (ctx.emissionDataComp = _t.first);\n      }\n    },\n    decls: 44,\n    vars: 31,\n    consts: [[1, \"content\"], [\"mat-dialog-header\", \"\"], [1, \"row\"], [1, \"col-sm-11\"], [1, \"pageTitle\", \"dialogHeader\"], [1, \"pageSubtitle\"], [1, \"col-sm-1\"], [\"mat-icon-button\", \"\", \"mat-dialog-close\", \"\", \"cdkFocusInitial\", \"\", \"matTooltip\", \"Close\", \"matTooltipPosition\", \"before\", 1, \"float-end\", \"matDialogClose\"], [1, \"material-symbols-outlined\"], [1, \"mt-2\"], [1, \"col-sm-12\"], [3, \"formGroup\"], [1, \"col-sm-6\", \"ms-3\", 3, \"appearance\"], [\"formControlName\", \"subsidiaryID\", 3, \"disabled\", \"selectionChange\"], [\"placeholderLabel\", \"Search by name\", \"noEntriesFoundLabel\", \"No matching subsidiary/JV found.\", 3, \"formControl\"], [3, \"value\", 4, \"ngFor\", \"ngForOf\"], [4, \"ngIf\"], [1, \"col-sm-6\", \"ms-3\", 3, \"appearance\", \"click\"], [1, \"formLabel\"], [\"type\", \"text\", \"matInput\", \"\", \"ngxDaterangepickerMd\", \"\", \"autocomplete\", \"off\", \"name\", \"daterange\", \"placeholder\", \"dd-mm-yyyy - dd-mm-yyyy\", \"required\", \"\", 3, \"locale\", \"drops\", \"opens\", \"alwaysShowCalendars\", \"keepCalendarOpeningWithRange\", \"showDropdowns\", \"showCancel\", \"formControl\", \"readonly\", \"ngModelChange\"], [\"matSuffix\", \"\", 3, \"for\"], [\"formControlName\", \"consolidationApproachIDs\", \"multiple\", \"\", \"required\", \"\", 3, \"disabled\"], [3, \"value\", \"selected\", 4, \"ngFor\", \"ngForOf\"], [1, \"overflowX\"], [3, \"consolidationApproachKeyIDList\", \"emissionData\", \"action\"], [\"emissionDataComp\", \"\"], [1, \"row\", \"mt-2\"], [1, \"float-end\"], [\"type\", \"button\", 1, \"btn\", \"btn-success\", 3, \"click\"], [3, \"value\"], [1, \"row\", \"pb-1\"], [1, \"col-sm-6\", \"d-flex\", \"justify-content-between\"], [1, \"col-form-label\", \"ms-3\"], [1, \"py-2\"], [1, \"col-form-value\", \"fw-bold\"], [1, \"pb-1\"], [3, \"value\", \"selected\"]],\n    template: function SubsidiaryFormComponent_Template(rf, ctx) {\n      if (rf & 1) {\n        i0.ɵɵelementStart(0, \"div\", 0);\n        i0.ɵɵelementStart(1, \"div\", 1);\n        i0.ɵɵelementStart(2, \"div\", 2);\n        i0.ɵɵelementStart(3, \"div\", 3);\n        i0.ɵɵelementStart(4, \"div\", 4);\n        i0.ɵɵtext(5);\n        i0.ɵɵelementEnd();\n        i0.ɵɵelement(6, \"div\", 5);\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(7, \"div\", 6);\n        i0.ɵɵelementStart(8, \"button\", 7);\n        i0.ɵɵelementStart(9, \"span\", 8);\n        i0.ɵɵtext(10, \" close \");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(11, \"div\", 9);\n        i0.ɵɵelementStart(12, \"div\", 10);\n        i0.ɵɵelementStart(13, \"form\", 11);\n        i0.ɵɵelementStart(14, \"mat-form-field\", 12);\n        i0.ɵɵelementStart(15, \"mat-label\");\n        i0.ɵɵtext(16, \" Select Subsidiary/JV \");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(17, \"mat-select\", 13);\n        i0.ɵɵlistener(\"selectionChange\", function SubsidiaryFormComponent_Template_mat_select_selectionChange_17_listener($event) {\n          return ctx.getSubsidiaryUserListByOrgIDAndsubsidiaryID($event.value);\n        });\n        i0.ɵɵelementStart(18, \"mat-option\");\n        i0.ɵɵelement(19, \"ngx-mat-select-search\", 14);\n        i0.ɵɵelementEnd();\n        i0.ɵɵtemplate(20, SubsidiaryFormComponent_mat_option_20_Template, 2, 2, \"mat-option\", 15);\n        i0.ɵɵpipe(21, \"async\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵtemplate(22, SubsidiaryFormComponent_mat_error_22_Template, 2, 0, \"mat-error\", 16);\n        i0.ɵɵelementEnd();\n        i0.ɵɵtemplate(23, SubsidiaryFormComponent_ng_container_23_Template, 11, 3, \"ng-container\", 16);\n        i0.ɵɵelementStart(24, \"mat-form-field\", 17);\n        i0.ɵɵlistener(\"click\", function SubsidiaryFormComponent_Template_mat_form_field_click_24_listener() {\n          return ctx.openCalendar();\n        });\n        i0.ɵɵelementStart(25, \"mat-label\", 18);\n        i0.ɵɵtext(26, \" Select accounting period \");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(27, \"input\", 19);\n        i0.ɵɵlistener(\"ngModelChange\", function SubsidiaryFormComponent_Template_input_ngModelChange_27_listener() {\n          return ctx.accodingPeriodDateRange(ctx.daterange.value);\n        });\n        i0.ɵɵelementEnd();\n        i0.ɵɵelement(28, \"mat-datepicker-toggle\", 20);\n        i0.ɵɵtemplate(29, SubsidiaryFormComponent_mat_error_29_Template, 2, 0, \"mat-error\", 16);\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(30, \"mat-form-field\", 12);\n        i0.ɵɵelementStart(31, \"mat-label\", 18);\n        i0.ɵɵtext(32, \"Select consolidation approach\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(33, \"mat-select\", 21);\n        i0.ɵɵtemplate(34, SubsidiaryFormComponent_mat_option_34_Template, 2, 3, \"mat-option\", 22);\n        i0.ɵɵelementEnd();\n        i0.ɵɵtemplate(35, SubsidiaryFormComponent_mat_error_35_Template, 2, 0, \"mat-error\", 16);\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(36, \"div\", 23);\n        i0.ɵɵelement(37, \"app-emission-data\", 24, 25);\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(39, \"div\", 26);\n        i0.ɵɵelementStart(40, \"div\", 10);\n        i0.ɵɵelementStart(41, \"div\", 27);\n        i0.ɵɵelementStart(42, \"button\", 28);\n        i0.ɵɵlistener(\"click\", function SubsidiaryFormComponent_Template_button_click_42_listener() {\n          return ctx.submitBtnClk();\n        });\n        i0.ɵɵtext(43);\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementEnd();\n      }\n      if (rf & 2) {\n        i0.ɵɵadvance(5);\n        i0.ɵɵtextInterpolate1(\"\", ctx.pageTitle, \" Subsidiary/JV emission record\");\n        i0.ɵɵadvance(8);\n        i0.ɵɵproperty(\"formGroup\", ctx.formDataFG);\n        i0.ɵɵadvance(1);\n        i0.ɵɵproperty(\"appearance\", ctx.MaterialFormFieldAppearance.FORM_FIELD_APPEARANCE);\n        i0.ɵɵadvance(3);\n        i0.ɵɵproperty(\"disabled\", ctx.isDisable);\n        i0.ɵɵadvance(2);\n        i0.ɵɵproperty(\"formControl\", ctx.subSelectSearch.filterFC);\n        i0.ɵɵadvance(1);\n        i0.ɵɵproperty(\"ngForOf\", i0.ɵɵpipeBind1(21, 28, ctx.subSelectSearch.filteredEntities));\n        i0.ɵɵadvance(2);\n        i0.ɵɵproperty(\"ngIf\", ctx.errorHandling(\"subsidiaryID\", \"required\"));\n        i0.ɵɵadvance(1);\n        i0.ɵɵproperty(\"ngIf\", ctx.subsidiary);\n        i0.ɵɵadvance(1);\n        i0.ɵɵproperty(\"appearance\", ctx.MaterialFormFieldAppearance.FORM_FIELD_APPEARANCE);\n        i0.ɵɵadvance(3);\n        i0.ɵɵproperty(\"locale\", i0.ɵɵpureFunction0(30, _c1))(\"drops\", \"down\")(\"opens\", \"right\")(\"alwaysShowCalendars\", true)(\"keepCalendarOpeningWithRange\", true)(\"showDropdowns\", true)(\"showCancel\", true)(\"formControl\", ctx.daterange)(\"readonly\", true);\n        i0.ɵɵadvance(1);\n        i0.ɵɵproperty(\"for\", ctx.pickerDirective);\n        i0.ɵɵadvance(1);\n        i0.ɵɵproperty(\"ngIf\", ctx.daterange.hasError(\"required\"));\n        i0.ɵɵadvance(1);\n        i0.ɵɵproperty(\"appearance\", ctx.MaterialFormFieldAppearance.FORM_FIELD_APPEARANCE);\n        i0.ɵɵadvance(3);\n        i0.ɵɵproperty(\"disabled\", ctx.consolidationApproachList.length == 1);\n        i0.ɵɵadvance(1);\n        i0.ɵɵproperty(\"ngForOf\", ctx.consolidationApproachList);\n        i0.ɵɵadvance(1);\n        i0.ɵɵproperty(\"ngIf\", ctx.errorHandling(\"consolidationApproachIDs\", \"required\"));\n        i0.ɵɵadvance(2);\n        i0.ɵɵproperty(\"consolidationApproachKeyIDList\", ctx.formDataFG.get(\"consolidationApproachKeyID\").value)(\"emissionData\", ctx.formDataFG.get(\"emission\").value)(\"action\", ctx.action);\n        i0.ɵɵadvance(6);\n        i0.ɵɵtextInterpolate1(\" \", ctx.submitBtnLabel, \" \");\n      }\n    },\n    directives: [i8.MatButton, i7.MatDialogClose, i9.MatTooltip, i1.ɵNgNoValidate, i1.NgControlStatusGroup, i1.FormGroupDirective, i10.MatFormField, i10.MatLabel, i11.MatSelect, i1.NgControlStatus, i1.FormControlName, i12.MatOption, i13.MatSelectSearchComponent, i1.FormControlDirective, i14.NgForOf, i14.NgIf, i15.MatInput, i16.DaterangepickerDirective, i1.DefaultValueAccessor, i1.RequiredValidator, i17.MatDatepickerToggle, i10.MatSuffix, i18.EmissionDataComponent, i10.MatError],\n    pipes: [i14.AsyncPipe],\n    styles: [\".mat-mdc-radio-button[_ngcontent-%COMP%] ~ .mat-mdc-radio-button[_ngcontent-%COMP%]{margin-left:16px}\"]\n  });\n  return SubsidiaryFormComponent;\n})();","map":null,"metadata":{},"sourceType":"module"}