{"ast":null,"code":"import { __decorate, __metadata } from 'tslib';\nimport { HostBinding, Input, HostListener, Directive, ElementRef, Renderer2, NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport * as ɵngcc0 from '@angular/core';\nlet AutosizeDirective = /*#__PURE__*/(() => {\n  let AutosizeDirective = class AutosizeDirective {\n    constructor(elem, renderer) {\n      this.elem = elem;\n      this.renderer = renderer;\n      this.overflow = 'hidden';\n      this.rows = 1;\n    }\n    ngAfterViewInit() {\n      this.resize();\n    }\n    ngDoCheck() {\n      this.resize();\n    }\n    resize() {\n      const textarea = this.elem.nativeElement;\n      // Calculate border height which is not included in scrollHeight\n      const borderHeight = textarea.offsetHeight - textarea.clientHeight;\n      // Reset textarea height to auto that correctly calculate the new height\n      this.setHeight('auto');\n      // Set new height\n      this.setHeight(`${textarea.scrollHeight + borderHeight}px`);\n    }\n    setHeight(value) {\n      this.renderer.setStyle(this.elem.nativeElement, 'height', value);\n    }\n  };\n  AutosizeDirective.ɵfac = function AutosizeDirective_Factory(t) {\n    return new (t || AutosizeDirective)(ɵngcc0.ɵɵdirectiveInject(ɵngcc0.ElementRef), ɵngcc0.ɵɵdirectiveInject(ɵngcc0.Renderer2));\n  };\n  AutosizeDirective.ɵdir = /*@__PURE__*/ɵngcc0.ɵɵdefineDirective({\n    type: AutosizeDirective,\n    selectors: [[\"textarea\", \"autosize\", \"\"]],\n    hostVars: 3,\n    hostBindings: function AutosizeDirective_HostBindings(rf, ctx) {\n      if (rf & 1) {\n        ɵngcc0.ɵɵlistener(\"input\", function AutosizeDirective_input_HostBindingHandler() {\n          return ctx.resize();\n        });\n      }\n      if (rf & 2) {\n        ɵngcc0.ɵɵhostProperty(\"rows\", ctx.rows);\n        ɵngcc0.ɵɵstyleProp(\"overflow\", ctx.overflow);\n      }\n    },\n    inputs: {\n      rows: \"rows\"\n    }\n  });\n  __decorate([HostBinding('style.overflow'), __metadata(\"design:type\", Object)], AutosizeDirective.prototype, \"overflow\", void 0);\n  __decorate([Input(), HostBinding('rows'), __metadata(\"design:type\", Object)], AutosizeDirective.prototype, \"rows\", void 0);\n  __decorate([HostListener('input'), __metadata(\"design:type\", Function), __metadata(\"design:paramtypes\", []), __metadata(\"design:returntype\", void 0)], AutosizeDirective.prototype, \"resize\", null);\n  AutosizeDirective = __decorate([__metadata(\"design:paramtypes\", [ElementRef, Renderer2])], AutosizeDirective);\n  return AutosizeDirective;\n})();\nlet TextareaAutosizeModule = /*#__PURE__*/(() => {\n  let TextareaAutosizeModule = class TextareaAutosizeModule {};\n  TextareaAutosizeModule.ɵfac = function TextareaAutosizeModule_Factory(t) {\n    return new (t || TextareaAutosizeModule)();\n  };\n  TextareaAutosizeModule.ɵmod = /*@__PURE__*/ɵngcc0.ɵɵdefineNgModule({\n    type: TextareaAutosizeModule\n  });\n  TextareaAutosizeModule.ɵinj = /*@__PURE__*/ɵngcc0.ɵɵdefineInjector({\n    imports: [[CommonModule]]\n  });\n  return TextareaAutosizeModule;\n})();\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && void 0;\n})();\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && void 0;\n})();\n(function () {\n  (typeof ngJitMode === \"undefined\" || ngJitMode) && ɵngcc0.ɵɵsetNgModuleScope(TextareaAutosizeModule, {\n    declarations: function () {\n      return [AutosizeDirective];\n    },\n    imports: function () {\n      return [CommonModule];\n    },\n    exports: function () {\n      return [AutosizeDirective];\n    }\n  });\n})();\n\n/**\n * Generated bundle index. Do not edit.\n */\n\nexport { TextareaAutosizeModule, AutosizeDirective as ɵa };\n\n//# sourceMappingURL=ngx-textarea-autosize.js.map","map":null,"metadata":{},"sourceType":"module"}