{"ast":null,"code":"import { __awaiter } from \"tslib\";\nimport { Validators } from '@angular/forms';\nimport { ActivityConfig } from '@carbon/component/activity-config/activity-config';\nimport { DataInputMethod, DataInputMethodKeyIDEnum } from '@carbon/enum/data-input-method.enum';\nimport { SupplierTypeKeyIDEnum } from '@netzero/enum/supplier.enum';\nimport { PROCESS_INPUT_ENUM } from '@netzero/enum/process.enum';\nimport { SourceKeyID } from '@carbon/enum/cbam.enum';\nimport { ENTITY_KEY_ID_ENUM } from '@carbon/enum/entity.enum';\nimport { COMMON_CONSTANT, MatSelectSearchService, MessageAlertTypeEnum, MessageAlertIconEnum } from '@library/tsc-common';\nimport { UnitTypeKeyID } from '@library/unit-service';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/router\";\nimport * as i2 from \"@angular/forms\";\nimport * as i3 from \"@carbon/service/data-input-method.service\";\nimport * as i4 from \"@carbon/service/process.service\";\nimport * as i5 from \"@netzero/service/supplier.service\";\nimport * as i6 from \"@carbon/service/activity.service\";\nimport * as i7 from \"@library/storage-service\";\nimport * as i8 from \"@library/toastr-service\";\nimport * as i9 from \"@library/unit-service\";\nimport * as i10 from \"@library/tsc-common\";\nimport * as i11 from \"@angular/material/card\";\nimport * as i12 from \"@angular/material/form-field\";\nimport * as i13 from \"@angular/material/input\";\nimport * as i14 from \"@angular/common\";\nimport * as i15 from \"@angular/material/select\";\nimport * as i16 from \"@angular/material/core\";\nimport * as i17 from \"ngx-mat-select-search\";\nimport * as i18 from \"@angular/material/radio\";\nfunction PrecursorConsumptionActivityConfigCreateComponent_mat_error_11_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"mat-error\");\n    i0.ɵɵtext(1);\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const ctx_r0 = i0.ɵɵnextContext();\n    i0.ɵɵadvance(1);\n    i0.ɵɵtextInterpolate1(\" \", ctx_r0.FormErrorEnum.REQUIRED, \" \");\n  }\n}\nfunction PrecursorConsumptionActivityConfigCreateComponent_mat_option_21_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"mat-option\", 24);\n    i0.ɵɵtext(1);\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const process_r11 = ctx.$implicit;\n    i0.ɵɵproperty(\"value\", process_r11.recordID);\n    i0.ɵɵadvance(1);\n    i0.ɵɵtextInterpolate1(\" \", process_r11.name, \" \");\n  }\n}\nfunction PrecursorConsumptionActivityConfigCreateComponent_mat_error_23_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"mat-error\");\n    i0.ɵɵtext(1);\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const ctx_r2 = i0.ɵɵnextContext();\n    i0.ɵɵadvance(1);\n    i0.ɵɵtextInterpolate1(\" \", ctx_r2.FormErrorEnum.REQUIRED, \" \");\n  }\n}\nfunction PrecursorConsumptionActivityConfigCreateComponent_ng_container_38_ng_container_1_ng_container_3_tr_2_ng_container_6_mat_option_7_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r25 = i0.ɵɵgetCurrentView();\n    i0.ɵɵelementStart(0, \"mat-option\", 32);\n    i0.ɵɵlistener(\"click\", function PrecursorConsumptionActivityConfigCreateComponent_ng_container_38_ng_container_1_ng_container_3_tr_2_ng_container_6_mat_option_7_Template_mat_option_click_0_listener() {\n      const restoredCtx = i0.ɵɵrestoreView(_r25);\n      const supplier_r23 = restoredCtx.$implicit;\n      const j_r17 = i0.ɵɵnextContext(3).index;\n      const i_r14 = i0.ɵɵnextContext().index;\n      const ctx_r24 = i0.ɵɵnextContext(2);\n      return ctx_r24.patchSourceTypeID(supplier_r23.sourceTypeID, i_r14, j_r17);\n    });\n    i0.ɵɵtext(1);\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const supplier_r23 = ctx.$implicit;\n    i0.ɵɵproperty(\"value\", supplier_r23.supplierID);\n    i0.ɵɵadvance(1);\n    i0.ɵɵtextInterpolate1(\" \", supplier_r23.supplierName, \" \");\n  }\n}\nfunction PrecursorConsumptionActivityConfigCreateComponent_ng_container_38_ng_container_1_ng_container_3_tr_2_ng_container_6_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementContainerStart(0);\n    i0.ɵɵelementStart(1, \"mat-form-field\", 6);\n    i0.ɵɵelementStart(2, \"mat-label\", 7);\n    i0.ɵɵtext(3, \"Select Supplier\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(4, \"mat-select\", 29);\n    i0.ɵɵelementStart(5, \"mat-option\");\n    i0.ɵɵelement(6, \"ngx-mat-select-search\", 30);\n    i0.ɵɵelementEnd();\n    i0.ɵɵtemplate(7, PrecursorConsumptionActivityConfigCreateComponent_ng_container_38_ng_container_1_ng_container_3_tr_2_ng_container_6_mat_option_7_Template, 2, 2, \"mat-option\", 31);\n    i0.ɵɵpipe(8, \"async\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementContainerEnd();\n  }\n  if (rf & 2) {\n    const source_r16 = i0.ɵɵnextContext(2).$implicit;\n    const ctx_r21 = i0.ɵɵnextContext(3);\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"appearance\", ctx_r21.MaterialFormFieldAppearance.FORM_FIELD_APPEARANCE);\n    i0.ɵɵadvance(3);\n    i0.ɵɵproperty(\"required\", source_r16.get(\"keyID\").value == ctx_r21.SourceKeyID.PURCHASED_FROM_A_SUPPLIER);\n    i0.ɵɵadvance(2);\n    i0.ɵɵproperty(\"formControl\", ctx_r21.supplierSelectSearch.filterFC)(\"noEntriesFoundLabel\", ctx_r21.COMMON_CONSTANT.NO_MATCH_FOUND);\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngForOf\", i0.ɵɵpipeBind1(8, 5, ctx_r21.supplierSelectSearch.filteredEntities));\n  }\n}\nfunction PrecursorConsumptionActivityConfigCreateComponent_ng_container_38_ng_container_1_ng_container_3_tr_2_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"tr\");\n    i0.ɵɵelementStart(1, \"td\");\n    i0.ɵɵtext(2);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(3, \"td\");\n    i0.ɵɵtext(4);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(5, \"td\");\n    i0.ɵɵtemplate(6, PrecursorConsumptionActivityConfigCreateComponent_ng_container_38_ng_container_1_ng_container_3_tr_2_ng_container_6_Template, 9, 7, \"ng-container\", 19);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const source_r16 = i0.ɵɵnextContext().$implicit;\n    const entity_r13 = i0.ɵɵnextContext().$implicit;\n    const ctx_r18 = i0.ɵɵnextContext(2);\n    const _r9 = i0.ɵɵreference(50);\n    i0.ɵɵadvance(1);\n    i0.ɵɵattribute(\"rowspan\", entity_r13.get(\"source\").controls.length);\n    i0.ɵɵadvance(1);\n    i0.ɵɵtextInterpolate(entity_r13.get(\"entityName\").value);\n    i0.ɵɵadvance(2);\n    i0.ɵɵtextInterpolate(source_r16.get(\"name\").value);\n    i0.ɵɵadvance(2);\n    i0.ɵɵproperty(\"ngIf\", source_r16.get(\"keyID\").value == ctx_r18.SourceKeyID.PURCHASED_FROM_A_SUPPLIER)(\"ngIfElse\", _r9);\n  }\n}\nfunction PrecursorConsumptionActivityConfigCreateComponent_ng_container_38_ng_container_1_ng_container_3_ng_template_3_ng_container_4_mat_option_7_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r35 = i0.ɵɵgetCurrentView();\n    i0.ɵɵelementStart(0, \"mat-option\", 32);\n    i0.ɵɵlistener(\"click\", function PrecursorConsumptionActivityConfigCreateComponent_ng_container_38_ng_container_1_ng_container_3_ng_template_3_ng_container_4_mat_option_7_Template_mat_option_click_0_listener() {\n      const restoredCtx = i0.ɵɵrestoreView(_r35);\n      const supplier_r33 = restoredCtx.$implicit;\n      const j_r17 = i0.ɵɵnextContext(3).index;\n      const i_r14 = i0.ɵɵnextContext().index;\n      const ctx_r34 = i0.ɵɵnextContext(2);\n      return ctx_r34.patchSourceTypeID(supplier_r33.sourceTypeID, i_r14, j_r17);\n    });\n    i0.ɵɵtext(1);\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const supplier_r33 = ctx.$implicit;\n    i0.ɵɵproperty(\"value\", supplier_r33.supplierID);\n    i0.ɵɵadvance(1);\n    i0.ɵɵtextInterpolate1(\" \", supplier_r33.supplierName, \" \");\n  }\n}\nfunction PrecursorConsumptionActivityConfigCreateComponent_ng_container_38_ng_container_1_ng_container_3_ng_template_3_ng_container_4_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementContainerStart(0);\n    i0.ɵɵelementStart(1, \"mat-form-field\", 6);\n    i0.ɵɵelementStart(2, \"mat-label\", 7);\n    i0.ɵɵtext(3, \"Select Supplier\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(4, \"mat-select\", 29);\n    i0.ɵɵelementStart(5, \"mat-option\");\n    i0.ɵɵelement(6, \"ngx-mat-select-search\", 30);\n    i0.ɵɵelementEnd();\n    i0.ɵɵtemplate(7, PrecursorConsumptionActivityConfigCreateComponent_ng_container_38_ng_container_1_ng_container_3_ng_template_3_ng_container_4_mat_option_7_Template, 2, 2, \"mat-option\", 31);\n    i0.ɵɵpipe(8, \"async\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementContainerEnd();\n  }\n  if (rf & 2) {\n    const source_r16 = i0.ɵɵnextContext(2).$implicit;\n    const ctx_r31 = i0.ɵɵnextContext(3);\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"appearance\", ctx_r31.MaterialFormFieldAppearance.FORM_FIELD_APPEARANCE);\n    i0.ɵɵadvance(3);\n    i0.ɵɵproperty(\"required\", source_r16.get(\"keyID\").value == ctx_r31.SourceKeyID.PURCHASED_FROM_A_SUPPLIER);\n    i0.ɵɵadvance(2);\n    i0.ɵɵproperty(\"formControl\", ctx_r31.supplierSelectSearch.filterFC)(\"noEntriesFoundLabel\", ctx_r31.COMMON_CONSTANT.NO_MATCH_FOUND);\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngForOf\", i0.ɵɵpipeBind1(8, 5, ctx_r31.supplierSelectSearch.filteredEntities));\n  }\n}\nfunction PrecursorConsumptionActivityConfigCreateComponent_ng_container_38_ng_container_1_ng_container_3_ng_template_3_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"tr\");\n    i0.ɵɵelementStart(1, \"td\");\n    i0.ɵɵtext(2);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(3, \"td\");\n    i0.ɵɵtemplate(4, PrecursorConsumptionActivityConfigCreateComponent_ng_container_38_ng_container_1_ng_container_3_ng_template_3_ng_container_4_Template, 9, 7, \"ng-container\", 19);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const source_r16 = i0.ɵɵnextContext().$implicit;\n    const ctx_r20 = i0.ɵɵnextContext(3);\n    const _r9 = i0.ɵɵreference(50);\n    i0.ɵɵadvance(2);\n    i0.ɵɵtextInterpolate(source_r16.get(\"name\").value);\n    i0.ɵɵadvance(2);\n    i0.ɵɵproperty(\"ngIf\", source_r16.get(\"keyID\").value == ctx_r20.SourceKeyID.PURCHASED_FROM_A_SUPPLIER)(\"ngIfElse\", _r9);\n  }\n}\nfunction PrecursorConsumptionActivityConfigCreateComponent_ng_container_38_ng_container_1_ng_container_3_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementContainerStart(0);\n    i0.ɵɵelementContainerStart(1, 26);\n    i0.ɵɵtemplate(2, PrecursorConsumptionActivityConfigCreateComponent_ng_container_38_ng_container_1_ng_container_3_tr_2_Template, 7, 5, \"tr\", 19);\n    i0.ɵɵtemplate(3, PrecursorConsumptionActivityConfigCreateComponent_ng_container_38_ng_container_1_ng_container_3_ng_template_3_Template, 5, 3, \"ng-template\", null, 28, i0.ɵɵtemplateRefExtractor);\n    i0.ɵɵelementContainerEnd();\n    i0.ɵɵelementContainerEnd();\n  }\n  if (rf & 2) {\n    const j_r17 = ctx.index;\n    const _r19 = i0.ɵɵreference(4);\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"formGroupName\", j_r17);\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngIf\", j_r17 == 0)(\"ngIfElse\", _r19);\n  }\n}\nfunction PrecursorConsumptionActivityConfigCreateComponent_ng_container_38_ng_container_1_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementContainerStart(0);\n    i0.ɵɵelementContainerStart(1, 26);\n    i0.ɵɵelementContainerStart(2, 27);\n    i0.ɵɵtemplate(3, PrecursorConsumptionActivityConfigCreateComponent_ng_container_38_ng_container_1_ng_container_3_Template, 5, 3, \"ng-container\", 25);\n    i0.ɵɵelementContainerEnd();\n    i0.ɵɵelementContainerEnd();\n    i0.ɵɵelementContainerEnd();\n  }\n  if (rf & 2) {\n    const entity_r13 = ctx.$implicit;\n    const i_r14 = ctx.index;\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"formGroupName\", i_r14);\n    i0.ɵɵadvance(2);\n    i0.ɵɵproperty(\"ngForOf\", entity_r13.get(\"source\").controls);\n  }\n}\nfunction PrecursorConsumptionActivityConfigCreateComponent_ng_container_38_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementContainerStart(0);\n    i0.ɵɵtemplate(1, PrecursorConsumptionActivityConfigCreateComponent_ng_container_38_ng_container_1_Template, 4, 2, \"ng-container\", 25);\n    i0.ɵɵelementContainerEnd();\n  }\n  if (rf & 2) {\n    const ctx_r3 = i0.ɵɵnextContext();\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngForOf\", ctx_r3.entityFA.controls);\n  }\n}\nfunction PrecursorConsumptionActivityConfigCreateComponent_mat_radio_button_44_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r42 = i0.ɵɵgetCurrentView();\n    i0.ɵɵelementStart(0, \"mat-radio-button\", 33);\n    i0.ɵɵlistener(\"change\", function PrecursorConsumptionActivityConfigCreateComponent_mat_radio_button_44_Template_mat_radio_button_change_0_listener() {\n      const restoredCtx = i0.ɵɵrestoreView(_r42);\n      const input_r40 = restoredCtx.$implicit;\n      const ctx_r41 = i0.ɵɵnextContext();\n      return ctx_r41.dataInputMethodChange(input_r40.keyID);\n    });\n    i0.ɵɵtext(1);\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const input_r40 = ctx.$implicit;\n    i0.ɵɵproperty(\"value\", input_r40.id);\n    i0.ɵɵadvance(1);\n    i0.ɵɵtextInterpolate1(\" \", input_r40.name, \" \");\n  }\n}\nfunction PrecursorConsumptionActivityConfigCreateComponent_mat_error_45_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"mat-error\");\n    i0.ɵɵtext(1);\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const ctx_r5 = i0.ɵɵnextContext();\n    i0.ɵɵadvance(1);\n    i0.ɵɵtextInterpolate1(\" \", ctx_r5.FormErrorEnum.REQUIRED, \" \");\n  }\n}\nfunction PrecursorConsumptionActivityConfigCreateComponent_ng_container_46_mat_error_7_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"mat-error\");\n    i0.ɵɵtext(1);\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const ctx_r43 = i0.ɵɵnextContext(2);\n    i0.ɵɵadvance(1);\n    i0.ɵɵtextInterpolate1(\" \", ctx_r43.FormErrorEnum.NEGATIVE, \" \");\n  }\n}\nfunction PrecursorConsumptionActivityConfigCreateComponent_ng_container_46_mat_error_8_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"mat-error\");\n    i0.ɵɵtext(1);\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const ctx_r44 = i0.ɵɵnextContext(2);\n    i0.ɵɵadvance(1);\n    i0.ɵɵtextInterpolate1(\" \", ctx_r44.FormErrorEnum.REQUIRED, \" \");\n  }\n}\nfunction PrecursorConsumptionActivityConfigCreateComponent_ng_container_46_mat_option_16_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"mat-option\", 24);\n    i0.ɵɵtext(1);\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const unit_r47 = ctx.$implicit;\n    i0.ɵɵproperty(\"value\", unit_r47.id);\n    i0.ɵɵadvance(1);\n    i0.ɵɵtextInterpolate1(\" \", unit_r47.name, \" \");\n  }\n}\nfunction PrecursorConsumptionActivityConfigCreateComponent_ng_container_46_mat_error_18_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"mat-error\");\n    i0.ɵɵtext(1);\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const ctx_r46 = i0.ɵɵnextContext(2);\n    i0.ɵɵadvance(1);\n    i0.ɵɵtextInterpolate1(\" \", ctx_r46.FormErrorEnum.REQUIRED, \" \");\n  }\n}\nfunction PrecursorConsumptionActivityConfigCreateComponent_ng_container_46_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementContainerStart(0);\n    i0.ɵɵelementStart(1, \"div\", 34);\n    i0.ɵɵelementStart(2, \"div\", 35);\n    i0.ɵɵelementStart(3, \"mat-form-field\", 6);\n    i0.ɵɵelementStart(4, \"mat-label\", 7);\n    i0.ɵɵtext(5, \"Meter Rollover Value\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelement(6, \"input\", 36);\n    i0.ɵɵtemplate(7, PrecursorConsumptionActivityConfigCreateComponent_ng_container_46_mat_error_7_Template, 2, 1, \"mat-error\", 9);\n    i0.ɵɵtemplate(8, PrecursorConsumptionActivityConfigCreateComponent_ng_container_46_mat_error_8_Template, 2, 1, \"mat-error\", 9);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(9, \"div\", 35);\n    i0.ɵɵelementStart(10, \"mat-form-field\", 6);\n    i0.ɵɵelementStart(11, \"mat-label\", 7);\n    i0.ɵɵtext(12, \"Select Meter Unit\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(13, \"mat-select\", 37);\n    i0.ɵɵelementStart(14, \"mat-option\");\n    i0.ɵɵelement(15, \"ngx-mat-select-search\", 38);\n    i0.ɵɵelementEnd();\n    i0.ɵɵtemplate(16, PrecursorConsumptionActivityConfigCreateComponent_ng_container_46_mat_option_16_Template, 2, 2, \"mat-option\", 13);\n    i0.ɵɵpipe(17, \"async\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵtemplate(18, PrecursorConsumptionActivityConfigCreateComponent_ng_container_46_mat_error_18_Template, 2, 1, \"mat-error\", 9);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementContainerEnd();\n  }\n  if (rf & 2) {\n    const ctx_r6 = i0.ɵɵnextContext();\n    i0.ɵɵadvance(3);\n    i0.ɵɵproperty(\"appearance\", ctx_r6.MaterialFormFieldAppearance.FORM_FIELD_APPEARANCE);\n    i0.ɵɵadvance(4);\n    i0.ɵɵproperty(\"ngIf\", ctx_r6.errorHandling(ctx_r6.activityConfigFG, \"activityConfigData.meterRolloverValue\", \"min\"));\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngIf\", ctx_r6.errorHandling(ctx_r6.activityConfigFG, \"activityConfigData.meterRolloverValue\", \"required\"));\n    i0.ɵɵadvance(2);\n    i0.ɵɵproperty(\"appearance\", ctx_r6.MaterialFormFieldAppearance.FORM_FIELD_APPEARANCE);\n    i0.ɵɵadvance(5);\n    i0.ɵɵproperty(\"formControl\", ctx_r6.unitSelectSearch.filterFC)(\"noEntriesFoundLabel\", ctx_r6.COMMON_CONSTANT.NO_MATCH_FOUND);\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngForOf\", i0.ɵɵpipeBind1(17, 8, ctx_r6.unitSelectSearch.filteredEntities));\n    i0.ɵɵadvance(2);\n    i0.ɵɵproperty(\"ngIf\", ctx_r6.errorHandling(ctx_r6.activityConfigFG, \"activityConfigData.meterRolloverUnitID\", \"required\"));\n  }\n}\nfunction PrecursorConsumptionActivityConfigCreateComponent_ng_template_47_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"tr\");\n    i0.ɵɵelementStart(1, \"td\");\n    i0.ɵɵtext(2);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(3, \"td\");\n    i0.ɵɵtext(4);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(5, \"td\");\n    i0.ɵɵtext(6);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const ctx_r8 = i0.ɵɵnextContext();\n    i0.ɵɵadvance(2);\n    i0.ɵɵtextInterpolate(ctx_r8.COMMON_CONSTANT.HYPHEN);\n    i0.ɵɵadvance(2);\n    i0.ɵɵtextInterpolate(ctx_r8.COMMON_CONSTANT.HYPHEN);\n    i0.ɵɵadvance(2);\n    i0.ɵɵtextInterpolate(ctx_r8.COMMON_CONSTANT.HYPHEN);\n  }\n}\nfunction PrecursorConsumptionActivityConfigCreateComponent_ng_template_49_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵtext(0);\n  }\n  if (rf & 2) {\n    const ctx_r10 = i0.ɵɵnextContext();\n    i0.ɵɵtextInterpolate1(\" \", ctx_r10.COMMON_CONSTANT.HYPHEN, \"\\n\");\n  }\n}\n// /tsc-library/\nexport let PrecursorConsumptionActivityConfigCreateComponent = /*#__PURE__*/(() => {\n  class PrecursorConsumptionActivityConfigCreateComponent extends ActivityConfig {\n    constructor(activatedRoute, formBuilder, dataInputMethodService, processService, supplierService, activityService,\n    // tsc-library\n    storageService, toastrService, unitService, tSCCommonService\n    // /tsc-library/\n    ) {\n      super();\n      this.formBuilder = formBuilder;\n      this.dataInputMethodService = dataInputMethodService;\n      this.processService = processService;\n      this.supplierService = supplierService;\n      this.activityService = activityService;\n      this.toastrService = toastrService;\n      this.unitService = unitService;\n      this.tSCCommonService = tSCCommonService;\n      this.COMMON_CONSTANT = COMMON_CONSTANT;\n      this.MessageAlertTypeEnum = MessageAlertTypeEnum;\n      this.MessageAlertIconEnum = MessageAlertIconEnum;\n      this.SourceKeyID = SourceKeyID;\n      this.isMeterReading = false;\n      this.entitySource = [];\n      this.allProcess = [];\n      this.dataInputMethod = [];\n      this.unit = [];\n      this.processSelectSearch = new MatSelectSearchService(['name']);\n      this.unitSelectSearch = new MatSelectSearchService(['name']);\n      this.supplierSelectSearch = new MatSelectSearchService(['supplierName']);\n      this.errorHandlingForFormArray = (control, index, error) => {\n        const activityConfigDetailsFA = this.activityConfigFG.get('entity');\n        const formGroup = activityConfigDetailsFA.at(index);\n        return formGroup.get(control).hasError(error);\n      };\n      this.currentOrgID = storageService.getStorage('currentOrgID');\n      activatedRoute.queryParams.subscribe(queryParams => {\n        if (queryParams['activityID']) {\n          this.activityID = queryParams.activityID;\n        }\n      });\n      activatedRoute.data.subscribe(data => {\n        this.action = data.action;\n        this.entity = data.entity;\n        this.activityKeyID = data.activityKeyID;\n      });\n    }\n    ngOnInit() {\n      this.formGroupInit();\n      this.getAllProcess(this.currentOrgID);\n      this.getDataInputMethodByActivityID(this.activityID, DataInputMethod.STANDARD);\n      this.getUnit([`type:${UnitTypeKeyID.MASS}`]);\n      this.getSupplierByType();\n      this.getPurchasedPrecursorActivityID();\n    }\n    formGroupInit() {\n      this.activityConfigFG = this.formBuilder.group({\n        activityConfig: this.formBuilder.group({\n          activityID: [this.activityID, Validators.required],\n          activityKeyID: [this.activityKeyID, Validators.required],\n          configName: [],\n          reminderEnabled: [],\n          workflowEnabled: [],\n          apiEnabled: []\n        }),\n        activityConfigData: this.formBuilder.group({\n          processID: [, Validators.required],\n          processRecordID: [, Validators.required],\n          dataInputMethodStdID: [, Validators.required],\n          meterRolloverValue: [],\n          meterRolloverUnitID: [],\n          ioSourceConfig: this.formBuilder.array([], Validators.required)\n        }),\n        entity: this.formBuilder.array([], Validators.required)\n      });\n    }\n    get ioSourceConfigFA() {\n      return this.activityConfigFG.get('activityConfigData').get('ioSourceConfig');\n    }\n    get entityFA() {\n      return this.activityConfigFG.get('entity');\n    }\n    get entitySourceFA() {\n      return this.activityConfigFG.get('entity').get('source');\n    }\n    getPurchasedPrecursorActivityID() {\n      return __awaiter(this, void 0, void 0, function* () {\n        let allActivity;\n        let activity;\n        let activityID;\n        allActivity = yield this.activityService.getAllActivityNew();\n        activity = this.tSCCommonService.getUniqueObject(allActivity, 'keyID', this.ActivityKeyIDEnum.PURCHASED_PRECURSOR);\n        activityID = activity.id;\n        if (activityID) {\n          this.sourceInfoMsg = `Precursor that are self-produced using separate production route, embedded emissions will be automatically picked from the latest CBAM run if availbale.<br /><br />For precursors purchased from a supplier, create purchased precursor form for respective precursor by clicking <a href=/carbon-setting/activity-config/activity/${this.ActivityKeyIDEnum.PURCHASED_PRECURSOR}/(activityConfig:create)?activityID=${activityID}&origin=pff&action=create&tabView=YES target=\"_blank\">here</a>.`;\n        }\n      });\n    }\n    getAllProcess(orgID) {\n      return __awaiter(this, void 0, void 0, function* () {\n        let filterProcess;\n        this.allProcess = yield this.processService.getProcessList(orgID);\n        filterProcess = this.allProcess.filter(source => source.isCBAMProcess == true);\n        this.allProcess = filterProcess;\n        this.processSelectSearch.entityArr = this.allProcess;\n        this.processSelectSearch.createSubscription();\n      });\n    }\n    processChange(orgID, processID, isLatest) {\n      return __awaiter(this, void 0, void 0, function* () {\n        this.process = yield this.processService.getProcessByID(orgID, processID, isLatest);\n        this.patchControl(this.activityConfigFG, 'activityConfigData.processID', this.process.processID);\n        this.createEntitySource(this.process);\n      });\n    }\n    getProcessByID(orgID, processID, isLatest) {\n      return __awaiter(this, void 0, void 0, function* () {\n        this.process = yield this.processService.getProcessByID(orgID, processID, isLatest);\n        this.createEntitySource(this.process);\n      });\n    }\n    getDataInputMethodByActivityID(activityID, dataInputMethodType) {\n      return __awaiter(this, void 0, void 0, function* () {\n        this.dataInputMethod = yield this.dataInputMethodService.getDataInputMethodByActivityAndType(activityID, dataInputMethodType);\n      });\n    }\n    getUnit(filter) {\n      return __awaiter(this, void 0, void 0, function* () {\n        this.unit = yield this.unitService.getUnit(filter);\n        this.unitSelectSearch.entityArr = this.unit;\n        this.unitSelectSearch.createSubscription();\n      });\n    }\n    getSupplierByType() {\n      let supplier = [];\n      this.supplierService.getSupplierByType(this.currentOrgID, SupplierTypeKeyIDEnum.PRECURSOR_SUPPLIER).then(res => {\n        supplier = res;\n        this.supplierSelectSearch.entityArr = supplier;\n        this.supplierSelectSearch.createSubscription();\n      });\n    }\n    dataInputMethodChange(dataInputMethodKeyID) {\n      if (dataInputMethodKeyID == DataInputMethodKeyIDEnum.METER_READING) {\n        this.isMeterReading = true;\n        this.addMeterRolloverValidator();\n      } else {\n        this.isMeterReading = false;\n        this.removeMeterRolloverValidator();\n      }\n    }\n    addMeterRolloverValidator() {\n      this.activityConfigDataAC.get('meterRolloverValue').setValidators([Validators.required, Validators.min(0)]);\n      this.activityConfigDataAC.get('meterRolloverUnitID').setValidators([Validators.required]);\n      this.activityConfigDataAC.get('meterRolloverValue').updateValueAndValidity();\n      this.activityConfigDataAC.get('meterRolloverUnitID').updateValueAndValidity();\n    }\n    removeMeterRolloverValidator() {\n      this.activityConfigDataAC.get('meterRolloverValue').reset();\n      this.activityConfigDataAC.get('meterRolloverUnitID').reset();\n      this.activityConfigDataAC.get('meterRolloverValue').clearValidators();\n      this.activityConfigDataAC.get('meterRolloverUnitID').clearValidators();\n      this.activityConfigDataAC.get('meterRolloverValue').updateValueAndValidity();\n      this.activityConfigDataAC.get('meterRolloverUnitID').updateValueAndValidity();\n    }\n    patchControl(formGroup, controlPath, value) {\n      formGroup.get(controlPath).patchValue(value);\n    }\n    patchSourceTypeID(sourceTypeID, entityIndex, sourceIndex) {\n      const entityFormGroup = this.entityFA.at(entityIndex);\n      const sourceFormArray = entityFormGroup.get('source');\n      const sourceFormGroup = sourceFormArray.at(sourceIndex);\n      sourceFormGroup.patchValue({\n        sourceTypeID: sourceTypeID\n      });\n    }\n    createEntitySource(process) {\n      let inputOutput;\n      let entity;\n      this.entitySource = [];\n      this.ioSourceConfigFA.clear();\n      this.entityFA.clear();\n      inputOutput = process.input.find(input => input.type.keyID == PROCESS_INPUT_ENUM.PRECURSOR_PRODUCT);\n      // this.entitySource.forEach((entitySource: any) => {\n      //     this.entityFA.push(\n      //         this.formBuilder.group({\n      //             inputOutputSourceStdID: [entitySource.source.id, Validators.required],\n      //             entityTypeID: [entitySource.entityTypeID],\n      //             entityID: [entitySource.entityID],\n      //             entityName: [entitySource.entityname],\n      //             entityKeyID: [entitySource.source.keyID],\n      //             sourceTypeID: [],\n      //             sourceID: [[]]\n      //         })\n      //     );\n      // });\n      if (inputOutput) {\n        entity = inputOutput.entities.map(entity => ({\n          entityTypeID: inputOutput.sourceTypeID,\n          entityID: entity.id,\n          entityname: entity.name,\n          source: inputOutput.entitySource.filter(source => source.entityID == entity.id)\n        }));\n        this.entitySource = entity;\n        this.entitySource.forEach(entitySource => {\n          this.entityFA.push(this.formBuilder.group({\n            entityTypeID: entitySource.entityTypeID,\n            entityID: entitySource.entityID,\n            entityName: entitySource.entityname,\n            // source: entitySource.source\n            source: this.formBuilder.array(entitySource.source.map(source => {\n              return this.formBuilder.group({\n                id: [source.id, [Validators.required]],\n                keyID: source.keyID,\n                name: source.name,\n                sourceTypeID: [],\n                sourceID: []\n              });\n            }))\n            // source: entity.entitySource.filter(source => source.entityID == entity.id)\n          }));\n        });\n      } else {\n        this.entitySource = [];\n        this.ioSourceConfigFA.clear();\n        this.entityFA.clear();\n        this.toastrService.error('No precursor product is found in this process.');\n        this.patchControl(this.activityConfigFG, 'activityConfigData.processID', null);\n      }\n    }\n    isValidForm() {\n      this.ioSourceConfigFA.clear();\n      this.entityFA.value.forEach(entity => {\n        entity.source.forEach(source => {\n          this.ioSourceConfigFA.push(this.formBuilder.group({\n            inputOutputSourceStdID: [source.id],\n            entityTypeID: [entity.entityTypeID],\n            entityID: [entity.entityID],\n            sourceTypeID: [source.sourceTypeID],\n            sourceID: source.sourceID ? [[source.sourceID]] : []\n          }));\n        });\n      });\n      if (this.activityConfigFG.invalid) {\n        this.activityConfigFG.markAllAsTouched();\n        console.error('invalid activityConfigFG -', this.activityConfigFG);\n        return false;\n      }\n      this.configuration = {};\n      this.configuration = JSON.parse(JSON.stringify(this.activityConfigFG.getRawValue()));\n      return true;\n    }\n    patchConfiguration(configuration) {\n      var _a, _b;\n      let activityConfig;\n      let activityConfigData;\n      activityConfig = configuration.activityConfig != null ? configuration['activityConfig'] : null;\n      activityConfigData = configuration['activityConfigData'];\n      if (activityConfig != null) {\n        this.activityConfigAC.patchValue({\n          configName: activityConfig.configName\n        });\n      } else {\n        this.readOnlyForm();\n      }\n      this.activityConfigDataAC.patchValue({\n        processID: activityConfigData.process.id,\n        processRecordID: activityConfigData.process.recordID,\n        dataInputMethodStdID: activityConfigData.dataInputMethod.id,\n        meterRolloverValue: (_a = activityConfigData.meterRollover) === null || _a === void 0 ? void 0 : _a.value,\n        meterRolloverUnitID: (_b = activityConfigData.meterRollover) === null || _b === void 0 ? void 0 : _b.unit.unitID\n      });\n      this.dataInputMethodChange(activityConfigData.dataInputMethod.keyID);\n      this.getProcessByID(this.currentOrgID, activityConfigData.process.id, false).then(process => {\n        // TODO-DELETE\n        console.log('activityConfigData.ioSourceConfig', activityConfigData.ioSourceConfig);\n        activityConfigData.ioSourceConfig.forEach(element => {\n          var _a;\n          const entityIndexFound = this.entityFA.controls.findIndex(control => control.get('entityID').value == element.entity.id);\n          const entityFormGroup = this.entityFA.at(entityIndexFound);\n          const sourceFormArray = entityFormGroup.get('source');\n          // TODO-DELETE\n          console.log('element.inputOutputSource', element.inputOutputSource);\n          const sourceIndexFound = sourceFormArray.controls.findIndex(control => control.get('keyID').value == element.inputOutputSource.keyID);\n          const sourceFormGroup = sourceFormArray.at(sourceIndexFound);\n          sourceFormGroup.patchValue({\n            sourceTypeID: (_a = element.sourceType) === null || _a === void 0 ? void 0 : _a.id,\n            // sourceID: element.source?.map(s => s.id)\n            sourceID: element.source ? element.source[0].id : null\n          });\n        });\n        if (this.entity == ENTITY_KEY_ID_ENUM.ACTIVITY_DATA) {\n          this.readOnlyForm();\n        }\n        this.updateInitialObject();\n      });\n    }\n  }\n  PrecursorConsumptionActivityConfigCreateComponent.ɵfac = function PrecursorConsumptionActivityConfigCreateComponent_Factory(t) {\n    return new (t || PrecursorConsumptionActivityConfigCreateComponent)(i0.ɵɵdirectiveInject(i1.ActivatedRoute), i0.ɵɵdirectiveInject(i2.FormBuilder), i0.ɵɵdirectiveInject(i3.DataInputMethodService), i0.ɵɵdirectiveInject(i4.ProcessService), i0.ɵɵdirectiveInject(i5.SupplierService), i0.ɵɵdirectiveInject(i6.ActivityService), i0.ɵɵdirectiveInject(i7.StorageService), i0.ɵɵdirectiveInject(i8.ToastrService), i0.ɵɵdirectiveInject(i9.UnitService), i0.ɵɵdirectiveInject(i10.TSCCommonService));\n  };\n  PrecursorConsumptionActivityConfigCreateComponent.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n    type: PrecursorConsumptionActivityConfigCreateComponent,\n    selectors: [[\"app-precursor-consumption-activity-config-create\"]],\n    features: [i0.ɵɵInheritDefinitionFeature],\n    decls: 51,\n    vars: 18,\n    consts: [[1, \"cardOverwrite\", \"border\"], [1, \"cardTitle\", \"pb-2\"], [3, \"formGroup\"], [1, \"row\"], [1, \"col-sm-8\"], [\"formGroupName\", \"activityConfig\"], [1, \"matFieldWidth100\", 3, \"appearance\"], [1, \"formLabel\"], [\"type\", \"text\", \"placeholder\", \"Activity Form Name\", \"formControlName\", \"configName\", \"matInput\", \"\", \"required\", \"\", 1, \"formPlaceholder\"], [4, \"ngIf\"], [\"formGroupName\", \"activityConfigData\"], [\"formControlName\", \"processRecordID\", \"required\", \"\", 3, \"selectionChange\"], [\"placeholderLabel\", \"Search by process name\", 3, \"formControl\", \"noEntriesFoundLabel\"], [3, \"value\", 4, \"ngFor\", \"ngForOf\"], [1, \"\"], [\"showCloseBtnInp\", \"true\", 3, \"messageAlertTypeInp\", \"messageAlertIconInp\", \"contentInp\"], [1, \"row\", \"mt-3\"], [1, \"table\", \"table-bordered\"], [\"formArrayName\", \"entity\"], [4, \"ngIf\", \"ngIfElse\"], [\"formControlName\", \"dataInputMethodStdID\"], [\"class\", \"col-sm-3 pt-1\", 3, \"value\", \"change\", 4, \"ngFor\", \"ngForOf\"], [\"noEntitySource\", \"\"], [\"noSupplier\", \"\"], [3, \"value\"], [4, \"ngFor\", \"ngForOf\"], [3, \"formGroupName\"], [\"formArrayName\", \"source\"], [\"noRowSpan\", \"\"], [\"formControlName\", \"sourceID\", 3, \"required\"], [\"placeholderLabel\", \"Search by supplier name\", 3, \"formControl\", \"noEntriesFoundLabel\"], [3, \"value\", \"click\", 4, \"ngFor\", \"ngForOf\"], [3, \"value\", \"click\"], [1, \"col-sm-3\", \"pt-1\", 3, \"value\", \"change\"], [1, \"row\", \"pt-3\"], [1, \"col-sm-4\"], [\"type\", \"number\", \"placeholder\", \"Meter Rollover Value\", \"matInput\", \"\", \"formControlName\", \"meterRolloverValue\", \"min\", \"0\", \"required\", \"\", 1, \"formPlaceholder\"], [\"formControlName\", \"meterRolloverUnitID\"], [\"placeholderLabel\", \"Search by unit name\", 3, \"formControl\", \"noEntriesFoundLabel\"]],\n    template: function PrecursorConsumptionActivityConfigCreateComponent_Template(rf, ctx) {\n      if (rf & 1) {\n        i0.ɵɵelementStart(0, \"mat-card\", 0);\n        i0.ɵɵelementStart(1, \"div\", 1);\n        i0.ɵɵtext(2, \" Details \");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(3, \"form\", 2);\n        i0.ɵɵelementStart(4, \"div\", 3);\n        i0.ɵɵelementStart(5, \"div\", 4);\n        i0.ɵɵelementStart(6, \"div\", 5);\n        i0.ɵɵelementStart(7, \"mat-form-field\", 6);\n        i0.ɵɵelementStart(8, \"mat-label\", 7);\n        i0.ɵɵtext(9, \"Activity Form Name\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelement(10, \"input\", 8);\n        i0.ɵɵtemplate(11, PrecursorConsumptionActivityConfigCreateComponent_mat_error_11_Template, 2, 1, \"mat-error\", 9);\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(12, \"div\", 10);\n        i0.ɵɵelementStart(13, \"div\", 3);\n        i0.ɵɵelementStart(14, \"div\", 4);\n        i0.ɵɵelementStart(15, \"mat-form-field\", 6);\n        i0.ɵɵelementStart(16, \"mat-label\", 7);\n        i0.ɵɵtext(17, \"Select Process\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(18, \"mat-select\", 11);\n        i0.ɵɵlistener(\"selectionChange\", function PrecursorConsumptionActivityConfigCreateComponent_Template_mat_select_selectionChange_18_listener($event) {\n          return ctx.processChange(ctx.currentOrgID, $event.value, true);\n        });\n        i0.ɵɵelementStart(19, \"mat-option\");\n        i0.ɵɵelement(20, \"ngx-mat-select-search\", 12);\n        i0.ɵɵelementEnd();\n        i0.ɵɵtemplate(21, PrecursorConsumptionActivityConfigCreateComponent_mat_option_21_Template, 2, 2, \"mat-option\", 13);\n        i0.ɵɵpipe(22, \"async\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵtemplate(23, PrecursorConsumptionActivityConfigCreateComponent_mat_error_23_Template, 2, 1, \"mat-error\", 9);\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(24, \"div\", 14);\n        i0.ɵɵelement(25, \"lib-message-alert\", 15);\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(26, \"div\", 16);\n        i0.ɵɵelementStart(27, \"div\", 4);\n        i0.ɵɵelementStart(28, \"table\", 17);\n        i0.ɵɵelementStart(29, \"thead\");\n        i0.ɵɵelementStart(30, \"tr\");\n        i0.ɵɵelementStart(31, \"th\");\n        i0.ɵɵtext(32, \"Precursor\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(33, \"th\");\n        i0.ɵɵtext(34, \"Source\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(35, \"th\");\n        i0.ɵɵtext(36, \"Supplier\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(37, \"tbody\", 18);\n        i0.ɵɵtemplate(38, PrecursorConsumptionActivityConfigCreateComponent_ng_container_38_Template, 2, 1, \"ng-container\", 19);\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(39, \"div\", 10);\n        i0.ɵɵelementStart(40, \"div\", 3);\n        i0.ɵɵelementStart(41, \"mat-label\", 7);\n        i0.ɵɵtext(42, \"Enter Data Using\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(43, \"mat-radio-group\", 20);\n        i0.ɵɵtemplate(44, PrecursorConsumptionActivityConfigCreateComponent_mat_radio_button_44_Template, 2, 2, \"mat-radio-button\", 21);\n        i0.ɵɵtemplate(45, PrecursorConsumptionActivityConfigCreateComponent_mat_error_45_Template, 2, 1, \"mat-error\", 9);\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementEnd();\n        i0.ɵɵtemplate(46, PrecursorConsumptionActivityConfigCreateComponent_ng_container_46_Template, 19, 10, \"ng-container\", 9);\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementEnd();\n        i0.ɵɵtemplate(47, PrecursorConsumptionActivityConfigCreateComponent_ng_template_47_Template, 7, 3, \"ng-template\", null, 22, i0.ɵɵtemplateRefExtractor);\n        i0.ɵɵtemplate(49, PrecursorConsumptionActivityConfigCreateComponent_ng_template_49_Template, 1, 1, \"ng-template\", null, 23, i0.ɵɵtemplateRefExtractor);\n      }\n      if (rf & 2) {\n        const _r7 = i0.ɵɵreference(48);\n        i0.ɵɵadvance(3);\n        i0.ɵɵproperty(\"formGroup\", ctx.activityConfigFG);\n        i0.ɵɵadvance(4);\n        i0.ɵɵproperty(\"appearance\", ctx.MaterialFormFieldAppearance.FORM_FIELD_APPEARANCE);\n        i0.ɵɵadvance(4);\n        i0.ɵɵproperty(\"ngIf\", ctx.errorHandling(ctx.activityConfigFG, \"activityConfig.configName\", \"required\"));\n        i0.ɵɵadvance(4);\n        i0.ɵɵproperty(\"appearance\", ctx.MaterialFormFieldAppearance.FORM_FIELD_APPEARANCE);\n        i0.ɵɵadvance(5);\n        i0.ɵɵproperty(\"formControl\", ctx.processSelectSearch.filterFC)(\"noEntriesFoundLabel\", ctx.COMMON_CONSTANT.NO_MATCH_FOUND);\n        i0.ɵɵadvance(1);\n        i0.ɵɵproperty(\"ngForOf\", i0.ɵɵpipeBind1(22, 16, ctx.processSelectSearch.filteredEntities));\n        i0.ɵɵadvance(2);\n        i0.ɵɵproperty(\"ngIf\", ctx.errorHandling(ctx.activityConfigFG, \"activityConfigData.processID\", \"required\"));\n        i0.ɵɵadvance(2);\n        i0.ɵɵproperty(\"messageAlertTypeInp\", ctx.MessageAlertTypeEnum.INFO)(\"messageAlertIconInp\", ctx.MessageAlertIconEnum.INFO_ICON)(\"contentInp\", ctx.sourceInfoMsg);\n        i0.ɵɵadvance(13);\n        i0.ɵɵproperty(\"ngIf\", ctx.entityFA.controls.length > 0)(\"ngIfElse\", _r7);\n        i0.ɵɵadvance(6);\n        i0.ɵɵproperty(\"ngForOf\", ctx.dataInputMethod);\n        i0.ɵɵadvance(1);\n        i0.ɵɵproperty(\"ngIf\", ctx.errorHandlingForRadio(ctx.activityConfigFG, \"activityConfigData.dataInputMethodStdID\", \"required\"));\n        i0.ɵɵadvance(1);\n        i0.ɵɵproperty(\"ngIf\", ctx.isMeterReading);\n      }\n    },\n    directives: [i11.MatCard, i2.ɵNgNoValidate, i2.NgControlStatusGroup, i2.FormGroupDirective, i2.FormGroupName, i12.MatFormField, i12.MatLabel, i2.DefaultValueAccessor, i13.MatInput, i2.NgControlStatus, i2.FormControlName, i2.RequiredValidator, i14.NgIf, i15.MatSelect, i16.MatOption, i17.MatSelectSearchComponent, i2.FormControlDirective, i14.NgForOf, i10.MessageAlertComponent, i2.FormArrayName, i18.MatRadioGroup, i12.MatError, i18.MatRadioButton, i2.NumberValueAccessor, i2.MinValidator],\n    pipes: [i14.AsyncPipe],\n    encapsulation: 2\n  });\n  return PrecursorConsumptionActivityConfigCreateComponent;\n})();","map":null,"metadata":{},"sourceType":"module"}