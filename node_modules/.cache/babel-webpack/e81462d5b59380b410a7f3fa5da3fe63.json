{"ast":null,"code":"import * as i0 from '@angular/core';\nimport { Injectable, Component, NgModule, Inject } from '@angular/core';\nimport * as i1 from '@angular/common/http';\nimport { __awaiter } from 'tslib';\nlet UserServiceService = /*#__PURE__*/(() => {\n  class UserServiceService {\n    constructor() {}\n  }\n  UserServiceService.ɵfac = function UserServiceService_Factory(t) {\n    return new (t || UserServiceService)();\n  };\n  UserServiceService.ɵprov = /* @__PURE__ */i0.ɵɵdefineInjectable({\n    token: UserServiceService,\n    factory: UserServiceService.ɵfac,\n    providedIn: 'root'\n  });\n  return UserServiceService;\n})();\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && void 0;\n})();\nlet UserServiceComponent = /*#__PURE__*/(() => {\n  class UserServiceComponent {\n    constructor() {}\n    ngOnInit() {}\n  }\n  UserServiceComponent.ɵfac = function UserServiceComponent_Factory(t) {\n    return new (t || UserServiceComponent)();\n  };\n  UserServiceComponent.ɵcmp = /* @__PURE__ */i0.ɵɵdefineComponent({\n    type: UserServiceComponent,\n    selectors: [[\"lib-user-service\"]],\n    decls: 2,\n    vars: 0,\n    template: function UserServiceComponent_Template(rf, ctx) {\n      if (rf & 1) {\n        i0.ɵɵelementStart(0, \"p\");\n        i0.ɵɵtext(1, \" user-service works! \");\n        i0.ɵɵelementEnd();\n      }\n    },\n    encapsulation: 2\n  });\n  return UserServiceComponent;\n})();\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && void 0;\n})();\nlet UserServiceModule = /*#__PURE__*/(() => {\n  class UserServiceModule {\n    static forRoot(environment) {\n      return {\n        ngModule: UserServiceModule,\n        providers: [{\n          provide: 'environment',\n          useValue: environment\n        }]\n      };\n    }\n  }\n  UserServiceModule.ɵfac = function UserServiceModule_Factory(t) {\n    return new (t || UserServiceModule)();\n  };\n  UserServiceModule.ɵmod = /* @__PURE__ */i0.ɵɵdefineNgModule({\n    type: UserServiceModule\n  });\n  UserServiceModule.ɵinj = /* @__PURE__ */i0.ɵɵdefineInjector({\n    imports: [[]]\n  });\n  return UserServiceModule;\n})();\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && void 0;\n})();\nvar ProfileImg = /*#__PURE__*/(() => {\n  (function (ProfileImg) {\n    ProfileImg[\"PROFILE_IMAGE_BODY_VIEW\"] = \"PROFILE_IMAGE_BODY_VIEW\";\n    ProfileImg[\"PROFILE_IMAGE_DROPDOWN_NAME_VIEW\"] = \"PROFILE_IMAGE_DROPDOWN_NAME_VIEW\";\n    ProfileImg[\"PROFILE_IMAGE_DROPDOWN_NAME_EMAIL_VIEW\"] = \"PROFILE_IMAGE_DROPDOWN_NAME_EMAIL_VIEW\";\n  })(ProfileImg || (ProfileImg = {}));\n  return ProfileImg;\n})();\nvar UserStatus = /*#__PURE__*/(() => {\n  (function (UserStatus) {\n    UserStatus[\"ACTIVE\"] = \"ACTIVE\";\n    UserStatus[\"INACTIVE\"] = \"INACTIVE\";\n    UserStatus[\"INVITED\"] = \"INVITED\";\n  })(UserStatus || (UserStatus = {}));\n  return UserStatus;\n})();\nvar UserContext = /*#__PURE__*/(() => {\n  (function (UserContext) {\n    UserContext[\"ROOT_ORG_USER\"] = \"ROOT_ORG_USER\";\n    UserContext[\"CURRENT_ORG_USER\"] = \"CURRENT_ORG_USER\";\n  })(UserContext || (UserContext = {}));\n  return UserContext;\n})();\nclass User {}\nclass UserOrgAccess {}\nlet UserController = /*#__PURE__*/(() => {\n  class UserController {\n    constructor(http, environment) {\n      this.http = http;\n      this.environment = environment;\n    }\n    getUserByID(userID) {\n      return this.http.get(`${this.environment.ORGANIZATION_API_URL}users/${userID}`);\n    }\n    getUserOrgAccess(orgID) {\n      return this.http.get(`${this.environment.ORGANIZATION_API_URL}organizations/${orgID}/user-access`);\n    }\n    getUsersByOrgID(orgID) {\n      return this.http.get(`${this.environment.ORGANIZATION_API_URL}organizations/${orgID}/users`);\n    }\n    getCurrentOrgUserAccess(orgID) {\n      return this.http.get(`${this.environment.ORGANIZATION_API_URL}organizations/${orgID}/users/access`);\n    }\n    getUserListByOrgIDAndAppID(orgID, applicationID) {\n      return this.http.get(`${this.environment.ORGANIZATION_API_URL}organizations/${orgID}/applications/${applicationID}/users`);\n    }\n  }\n  UserController.ɵfac = function UserController_Factory(t) {\n    return new (t || UserController)(i0.ɵɵinject(i1.HttpClient), i0.ɵɵinject('environment'));\n  };\n  UserController.ɵprov = /* @__PURE__ */i0.ɵɵdefineInjectable({\n    token: UserController,\n    factory: UserController.ɵfac,\n    providedIn: 'root'\n  });\n  return UserController;\n})();\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && void 0;\n})();\nlet UserService = /*#__PURE__*/(() => {\n  class UserService {\n    constructor(userController) {\n      this.userController = userController;\n    }\n    getUserByID(userID) {\n      return __awaiter(this, void 0, void 0, function* () {\n        let userM;\n        try {\n          userM = yield this.userController.getUserByID(userID).toPromise();\n          if (userM) {\n            return userM;\n          } else {\n            return new User();\n          }\n        } catch (error) {\n          console.error('Error -', error);\n          return new User();\n        }\n      });\n    }\n    getUserOrgAccess(orgID) {\n      return __awaiter(this, void 0, void 0, function* () {\n        let userOrgAccessM;\n        try {\n          userOrgAccessM = yield this.userController.getUserOrgAccess(orgID).toPromise();\n          if (userOrgAccessM) {\n            return userOrgAccessM;\n          } else {\n            return new UserOrgAccess();\n          }\n        } catch (error) {\n          console.error('Error -', error);\n          return new UserOrgAccess();\n        }\n      });\n    }\n    getUsersByOrgID(orgID) {\n      return __awaiter(this, void 0, void 0, function* () {\n        let orgUserM;\n        try {\n          orgUserM = yield this.userController.getUsersByOrgID(orgID).toPromise();\n          if (orgUserM) {\n            return orgUserM;\n          } else {\n            return [new User()];\n          }\n        } catch (error) {\n          console.error('Error -', error);\n          return [new User()];\n        }\n      });\n    }\n    getUserListByOrgIDAndAppID(orgID, appID) {\n      return __awaiter(this, void 0, void 0, function* () {\n        let orgUserM;\n        try {\n          orgUserM = yield this.userController.getUserListByOrgIDAndAppID(orgID, appID).toPromise();\n          if (orgUserM) {\n            return orgUserM;\n          } else {\n            return [new User()];\n          }\n        } catch (error) {\n          console.error('Error -', error);\n          return [new User()];\n        }\n      });\n    }\n    getCurrentOrgUserAccess(orgID) {\n      return __awaiter(this, void 0, void 0, function* () {\n        let currentOrgUserM;\n        try {\n          currentOrgUserM = yield this.userController.getCurrentOrgUserAccess(orgID).toPromise();\n          if (currentOrgUserM) {\n            return currentOrgUserM;\n          } else {\n            return [new User()];\n          }\n        } catch (error) {\n          console.error('Error -', error);\n          return [new User()];\n        }\n      });\n    }\n    defaultImage(name, element) {\n      let profileImg;\n      if (name) {\n        profileImg = this.generateDefaultImage(name, element);\n      } else {\n        profileImg = 'assets/images/default-profile-img.jpg';\n      }\n      return profileImg;\n    }\n    generateDefaultImage(name, element) {\n      let canvasWidth;\n      let canvasHeight;\n      let fontSize;\n      let fillTextDoubleStart;\n      let fillTextDoubleTop;\n      let fillTextSingleStart;\n      let fillTextSingleTop;\n      if (element == ProfileImg.PROFILE_IMAGE_BODY_VIEW) {\n        canvasWidth = 22;\n        canvasHeight = 22;\n        fontSize = '11px';\n        fillTextDoubleStart = 4;\n        fillTextDoubleTop = 15;\n        fillTextSingleStart = 8;\n        fillTextSingleTop = 15;\n      } else if (element == ProfileImg.PROFILE_IMAGE_DROPDOWN_NAME_VIEW) {\n        canvasWidth = 75;\n        canvasHeight = 75;\n        fontSize = '40px';\n        fillTextDoubleStart = 13;\n        fillTextDoubleTop = 52;\n        fillTextSingleStart = 23;\n        fillTextSingleTop = 52;\n      } else if (element == ProfileImg.PROFILE_IMAGE_DROPDOWN_NAME_EMAIL_VIEW) {\n        //INFO: SOMYA AGRAWAL - currently WIP, configurations are not fully correct while showing name and email alongWith profile in dropdown!\n        canvasWidth = 120;\n        canvasHeight = 120;\n        fontSize = '60px';\n        fillTextDoubleStart = 20;\n        fillTextDoubleTop = 62;\n        fillTextSingleStart = 30;\n        fillTextSingleTop = 62;\n      }\n      const canvas = document.createElement('canvas');\n      canvas.style.display = 'none';\n      canvas.width = canvasWidth;\n      canvas.height = canvasHeight;\n      document.body.appendChild(canvas);\n      const context = canvas.getContext('2d');\n      context.fillStyle = '#3f6ad8';\n      context.fillRect(0, 0, canvas.width, canvas.height);\n      context.font = fontSize + ' Helvetica';\n      context.fillStyle = '#fff';\n      const nameArray = name.split(' ');\n      let initials = '';\n      for (let i = 0; i < nameArray.length; i++) {\n        if (i <= 1) {\n          if (nameArray[i].length > 0) {\n            initials = initials + nameArray[i][0];\n          }\n        }\n      }\n      if (initials.length > 1) {\n        context.fillText(initials.toUpperCase(), fillTextDoubleStart, fillTextDoubleTop);\n      } else {\n        context.fillText(initials.toUpperCase(), fillTextSingleStart, fillTextSingleTop);\n      }\n      const data = canvas.toDataURL();\n      document.body.removeChild(canvas);\n      return data;\n    }\n  }\n  UserService.ɵfac = function UserService_Factory(t) {\n    return new (t || UserService)(i0.ɵɵinject(UserController));\n  };\n  UserService.ɵprov = /* @__PURE__ */i0.ɵɵdefineInjectable({\n    token: UserService,\n    factory: UserService.ɵfac,\n    providedIn: 'root'\n  });\n  return UserService;\n})();\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && void 0;\n})();\n\n/*\n * Public API Surface of user-service\n */\n\n/**\n * Generated bundle index. Do not edit.\n */\n\nexport { ProfileImg, User, UserContext, UserController, UserOrgAccess, UserService, UserServiceComponent, UserServiceModule, UserServiceService, UserStatus };\n//# sourceMappingURL=library-user-service.js.map","map":null,"metadata":{},"sourceType":"module"}