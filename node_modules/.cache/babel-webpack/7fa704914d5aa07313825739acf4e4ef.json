{"ast":null,"code":"import { __awaiter } from \"tslib\";\nimport { STEPPER_GLOBAL_OPTIONS } from '@angular/cdk/stepper';\nimport { MatPaginator } from '@angular/material/paginator';\nimport { MatSort } from '@angular/material/sort';\nimport { MatStepper } from '@angular/material/stepper';\nimport { Validators, FormControl } from '@angular/forms';\nimport { isEqual } from 'lodash';\nimport * as moment from 'moment';\nimport { merge, fromEvent, of as observableOf } from 'rxjs';\nimport { map, startWith, switchMap, catchError } from \"rxjs/operators\";\nimport { CARBON_CONSTANT } from '@carbon/constant/carbon.constant';\nimport { CategorizeRecordDialogComponent } from '../categorize-record-dialog/categorize-record-dialog.component';\nimport { ToastrColor, ToastrTitle } from '@library/toastr-service';\nimport { InvalidForm, MaterialFormFieldAppearance, MatSelectSearchService, TABLE_CONSTANT, MATERIAL_CONSTANT, COMMON_CONSTANT, NocFileUploadEnum } from '@library/tsc-common';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/router\";\nimport * as i2 from \"@angular/material/dialog\";\nimport * as i3 from \"@angular/common\";\nimport * as i4 from \"@angular/forms\";\nimport * as i5 from \"@carbon/service/currency.service\";\nimport * as i6 from \"@carbon/controller/emission-calculation-method.controller\";\nimport * as i7 from \"@carbon/controller/spend-based.controller\";\nimport * as i8 from \"@library/toastr-service\";\nimport * as i9 from \"@library/storage-service\";\nimport * as i10 from \"@library/date\";\nimport * as i11 from \"@angular/material/stepper\";\nimport * as i12 from \"@angular/material/form-field\";\nimport * as i13 from \"@angular/material/input\";\nimport * as i14 from \"@angular/material/select\";\nimport * as i15 from \"@angular/material/core\";\nimport * as i16 from \"ngx-mat-select-search\";\nimport * as i17 from \"@angular/material/datepicker\";\nimport * as i18 from \"@library/tsc-common\";\nimport * as i19 from \"@angular/material/table\";\nimport * as i20 from \"@angular/material/sort\";\nimport * as i21 from \"@angular/material/paginator\";\nimport * as i22 from \"@angular/material/tooltip\";\nimport * as i23 from \"@angular/material/slide-toggle\";\nconst _c0 = [\"searchBtn\"];\nconst _c1 = [\"fileUpload\"];\nconst _c2 = [\"refreshBtn\"];\nconst _c3 = [\"previewRefreshBtn\"];\nconst _c4 = [\"paginator\"];\nconst _c5 = [\"sort\"];\nconst _c6 = [\"previewPaginator\"];\nconst _c7 = [\"previewSort\"];\nconst _c8 = [\"accountSelect\"];\nconst _c9 = [\"previewAccountSelect\"];\nfunction ImportDataComponent_div_16_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\", 23);\n    i0.ɵɵelementStart(1, \"div\", 8);\n    i0.ɵɵelementStart(2, \"div\", 91);\n    i0.ɵɵtext(3, \" Download a\\u00A0\");\n    i0.ɵɵelementStart(4, \"a\", 92);\n    i0.ɵɵtext(5, \" sample file \");\n    i0.ɵɵelementEnd();\n    i0.ɵɵtext(6, \" \\u00A0and compare it with your import file to ensure it is perfect for the import. \");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const ctx_r1 = i0.ɵɵnextContext();\n    i0.ɵɵadvance(4);\n    i0.ɵɵproperty(\"href\", ctx_r1.sampleFileSrc, i0.ɵɵsanitizeUrl);\n  }\n}\nfunction ImportDataComponent_mat_error_27_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"mat-error\");\n    i0.ɵɵtext(1, \" Enter import name \");\n    i0.ɵɵelementEnd();\n  }\n}\nfunction ImportDataComponent_span_30_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"span\", 16);\n    i0.ɵɵtext(1, \" Upload file \");\n    i0.ɵɵelementEnd();\n  }\n}\nfunction ImportDataComponent_span_31_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"span\", 16);\n    i0.ɵɵtext(1, \" Uploaded file \");\n    i0.ɵɵelementEnd();\n  }\n}\nfunction ImportDataComponent_div_33_span_5_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"span\");\n    i0.ɵɵtext(1);\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const ctx_r61 = i0.ɵɵnextContext(2);\n    i0.ɵɵadvance(1);\n    i0.ɵɵtextInterpolate1(\" \", ctx_r61.fileName, \" \");\n  }\n}\nfunction ImportDataComponent_div_33_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r63 = i0.ɵɵgetCurrentView();\n    i0.ɵɵelementStart(0, \"div\", 93);\n    i0.ɵɵelementStart(1, \"input\", 94, 95);\n    i0.ɵɵlistener(\"change\", function ImportDataComponent_div_33_Template_input_change_1_listener($event) {\n      i0.ɵɵrestoreView(_r63);\n      const ctx_r62 = i0.ɵɵnextContext();\n      return ctx_r62.onFileChange($event);\n    });\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(3, \"button\", 96);\n    i0.ɵɵlistener(\"click\", function ImportDataComponent_div_33_Template_button_click_3_listener() {\n      i0.ɵɵrestoreView(_r63);\n      const ctx_r64 = i0.ɵɵnextContext();\n      return ctx_r64.isFileUploadBtn(\"fileUpload\");\n    });\n    i0.ɵɵtext(4, \" Choose file \");\n    i0.ɵɵelementEnd();\n    i0.ɵɵtemplate(5, ImportDataComponent_div_33_span_5_Template, 2, 1, \"span\", 22);\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const ctx_r5 = i0.ɵɵnextContext();\n    i0.ɵɵadvance(5);\n    i0.ɵɵproperty(\"ngIf\", !ctx_r5.progress);\n  }\n}\nfunction ImportDataComponent_div_34_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\", 93);\n    i0.ɵɵelementStart(1, \"span\");\n    i0.ɵɵtext(2);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const ctx_r6 = i0.ɵɵnextContext();\n    i0.ɵɵadvance(2);\n    i0.ɵɵtextInterpolate1(\" \", ctx_r6.fileName, \" \");\n  }\n}\nfunction ImportDataComponent_mat_option_47_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"mat-option\", 97);\n    i0.ɵɵelementStart(1, \"span\", 98);\n    i0.ɵɵtext(2);\n    i0.ɵɵelementStart(3, \"span\");\n    i0.ɵɵtext(4);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const currencies_r65 = ctx.$implicit;\n    i0.ɵɵproperty(\"value\", currencies_r65.currencyID);\n    i0.ɵɵadvance(2);\n    i0.ɵɵtextInterpolate1(\" \", currencies_r65.currencyName, \" - \");\n    i0.ɵɵadvance(2);\n    i0.ɵɵtextInterpolate(currencies_r65.currencyCode);\n  }\n}\nfunction ImportDataComponent_mat_error_64_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"mat-error\");\n    i0.ɵɵtext(1, \" Select a start date \");\n    i0.ɵɵelementEnd();\n  }\n}\nfunction ImportDataComponent_mat_error_74_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"mat-error\");\n    i0.ɵɵtext(1, \" Select an end date \");\n    i0.ɵɵelementEnd();\n  }\n}\nfunction ImportDataComponent_mat_error_75_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"mat-error\");\n    i0.ɵɵtext(1, \" End date can not be before the start date \");\n    i0.ɵɵelementEnd();\n  }\n}\nfunction ImportDataComponent_div_76_div_4_mat_error_6_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"mat-error\");\n    i0.ɵɵtext(1, \"Enter inflation rate\");\n    i0.ɵɵelementEnd();\n  }\n}\nfunction ImportDataComponent_div_76_div_4_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\", 30);\n    i0.ɵɵelementStart(1, \"div\", 102);\n    i0.ɵɵelementStart(2, \"mat-form-field\", 19);\n    i0.ɵɵelementStart(3, \"mat-label\", 20);\n    i0.ɵɵtext(4);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelement(5, \"input\", 103);\n    i0.ɵɵtemplate(6, ImportDataComponent_div_76_div_4_mat_error_6_Template, 2, 0, \"mat-error\", 22);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const inflation_r67 = ctx.$implicit;\n    const i_r68 = ctx.index;\n    const ctx_r66 = i0.ɵɵnextContext(2);\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"formGroupName\", i_r68);\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngClass\", ctx_r66.isConfigEdit == ctx_r66.CARBON_CONSTANT.NO ? \"noFocus\" : \"none\")(\"appearance\", ctx_r66.MaterialFormFieldAppearance.FORM_FIELD_APPEARANCE);\n    i0.ɵɵadvance(2);\n    i0.ɵɵtextInterpolate1(\"For year \", inflation_r67.year, \"\");\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"formControlName\", inflation_r67.year);\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngIf\", ctx_r66.errorHandlingArray(i_r68, inflation_r67.year, \"required\"));\n  }\n}\nfunction ImportDataComponent_div_76_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\", 99);\n    i0.ɵɵelementStart(1, \"div\", 15);\n    i0.ɵɵelementStart(2, \"span\", 16);\n    i0.ɵɵtext(3, \"Inflation rates (%) \");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementEnd();\n    i0.ɵɵtemplate(4, ImportDataComponent_div_76_div_4_Template, 7, 6, \"div\", 100);\n    i0.ɵɵelementStart(5, \"div\", 7);\n    i0.ɵɵelementStart(6, \"div\", 30);\n    i0.ɵɵelementStart(7, \"a\", 101);\n    i0.ɵɵelementStart(8, \"u\");\n    i0.ɵɵtext(9, \" Check inflation rates\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const ctx_r13 = i0.ɵɵnextContext();\n    i0.ɵɵadvance(4);\n    i0.ɵɵproperty(\"ngForOf\", ctx_r13.inflationRate);\n  }\n}\nfunction ImportDataComponent_div_96_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r71 = i0.ɵɵgetCurrentView();\n    i0.ɵɵelementStart(0, \"div\", 104);\n    i0.ɵɵnamespaceSVG();\n    i0.ɵɵelementStart(1, \"svg\", 105);\n    i0.ɵɵelement(2, \"use\", 106);\n    i0.ɵɵelementEnd();\n    i0.ɵɵtext(3, \" If transaction date does not match accounting date, emissions will not be calculated for these records. To categorise them, \");\n    i0.ɵɵnamespaceHTML();\n    i0.ɵɵelementStart(4, \"a\", 107);\n    i0.ɵɵlistener(\"click\", function ImportDataComponent_div_96_Template_a_click_4_listener() {\n      i0.ɵɵrestoreView(_r71);\n      const ctx_r70 = i0.ɵɵnextContext();\n      return ctx_r70.gotoBackPage();\n    });\n    i0.ɵɵtext(5, \"go back\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵtext(6, \" and change the accounting period. \");\n    i0.ɵɵelementEnd();\n  }\n}\nfunction ImportDataComponent_th_101_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"th\", 108);\n    i0.ɵɵtext(1, \" Include/Exclude \");\n    i0.ɵɵelementEnd();\n  }\n}\nconst _c10 = function (a0) {\n  return {\n    \"noFocusCategory\": a0\n  };\n};\nfunction ImportDataComponent_td_102_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"td\", 109);\n    i0.ɵɵelement(1, \"mat-slide-toggle\", 110);\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const row_r72 = ctx.$implicit;\n    const ctx_r19 = i0.ɵɵnextContext();\n    i0.ɵɵproperty(\"ngClass\", i0.ɵɵpureFunction1(2, _c10, ctx_r19.recordAvailableForCategorization(row_r72.transactionDate) === \"NO\"));\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"formControl\", ctx_r19.getenableRecordFormControl(row_r72.recordID));\n  }\n}\nfunction ImportDataComponent_th_104_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"th\", 111);\n    i0.ɵɵtext(1, \" Record ID \");\n    i0.ɵɵelementEnd();\n  }\n}\nfunction ImportDataComponent_td_105_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"td\", 109);\n    i0.ɵɵtext(1);\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const row_r73 = ctx.$implicit;\n    const ctx_r21 = i0.ɵɵnextContext();\n    i0.ɵɵproperty(\"ngClass\", i0.ɵɵpureFunction1(2, _c10, ctx_r21.recordAvailableForCategorization(row_r73.transactionDate) === \"NO\" || ctx_r21.getenableRecordFormControl(row_r73.recordID).value === false));\n    i0.ɵɵadvance(1);\n    i0.ɵɵtextInterpolate1(\" \", row_r73.recordID, \" \");\n  }\n}\nfunction ImportDataComponent_th_107_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"th\", 108);\n    i0.ɵɵtext(1, \" Date \");\n    i0.ɵɵelementEnd();\n  }\n}\nfunction ImportDataComponent_td_108_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"td\", 109);\n    i0.ɵɵtext(1);\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const row_r74 = ctx.$implicit;\n    const ctx_r23 = i0.ɵɵnextContext();\n    i0.ɵɵproperty(\"ngClass\", i0.ɵɵpureFunction1(2, _c10, ctx_r23.recordAvailableForCategorization(row_r74.transactionDate) === \"NO\" || ctx_r23.getenableRecordFormControl(row_r74.recordID).value === false));\n    i0.ɵɵadvance(1);\n    i0.ɵɵtextInterpolate1(\" \", row_r74.transactionDate, \" \");\n  }\n}\nfunction ImportDataComponent_th_110_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r77 = i0.ɵɵgetCurrentView();\n    i0.ɵɵelementStart(0, \"th\", 112);\n    i0.ɵɵelementStart(1, \"div\", 7);\n    i0.ɵɵelementStart(2, \"funnel-filter\", 113, 114);\n    i0.ɵɵlistener(\"multi\", function ImportDataComponent_th_110_Template_funnel_filter_multi_2_listener() {\n      i0.ɵɵrestoreView(_r77);\n      const ctx_r76 = i0.ɵɵnextContext();\n      return ctx_r76.accountFlag = true;\n    });\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const ctx_r24 = i0.ɵɵnextContext();\n    i0.ɵɵadvance(2);\n    i0.ɵɵproperty(\"entityList\", ctx_r24.accountList)(\"selectFC\", ctx_r24.accountFC)(\"active\", ctx_r24.accountFlag)(\"resetFlag\", ctx_r24.accountFlag);\n  }\n}\nfunction ImportDataComponent_td_111_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"td\", 109);\n    i0.ɵɵtext(1);\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const row_r78 = ctx.$implicit;\n    const ctx_r25 = i0.ɵɵnextContext();\n    i0.ɵɵproperty(\"ngClass\", ctx_r25.availableForCategorization == \"NO\" || ctx_r25.getenableRecordFormControl(row_r78.recordID).value === false ? \"noFocusCategory\" : \"none\");\n    i0.ɵɵadvance(1);\n    i0.ɵɵtextInterpolate1(\" \", row_r78.account, \" \");\n  }\n}\nfunction ImportDataComponent_th_113_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"th\", 115);\n    i0.ɵɵtext(1, \" Supplier \");\n    i0.ɵɵelementEnd();\n  }\n}\nfunction ImportDataComponent_td_114_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"td\", 109);\n    i0.ɵɵtext(1);\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const row_r79 = ctx.$implicit;\n    const ctx_r27 = i0.ɵɵnextContext();\n    i0.ɵɵproperty(\"ngClass\", ctx_r27.availableForCategorization == \"NO\" || ctx_r27.getenableRecordFormControl(row_r79.recordID).value === false ? \"noFocusCategory\" : \"none\");\n    i0.ɵɵadvance(1);\n    i0.ɵɵtextInterpolate1(\" \", row_r79.supplier, \" \");\n  }\n}\nfunction ImportDataComponent_th_116_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"th\", 116);\n    i0.ɵɵtext(1);\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const ctx_r28 = i0.ɵɵnextContext();\n    i0.ɵɵadvance(1);\n    i0.ɵɵtextInterpolate1(\" Amount \", ctx_r28.categoryCurrencySymbol ? \"(\" + ctx_r28.categoryCurrencySymbol + \")\" : \"\", \" \");\n  }\n}\nfunction ImportDataComponent_td_117_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"td\", 109);\n    i0.ɵɵtext(1);\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const row_r80 = ctx.$implicit;\n    const ctx_r29 = i0.ɵɵnextContext();\n    i0.ɵɵproperty(\"ngClass\", ctx_r29.availableForCategorization == \"NO\" || ctx_r29.getenableRecordFormControl(row_r80.recordID).value === false ? \"noFocusCategory\" : \"none\");\n    i0.ɵɵadvance(1);\n    i0.ɵɵtextInterpolate1(\" \", row_r80.amount, \" \");\n  }\n}\nfunction ImportDataComponent_th_120_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"th\", 117);\n    i0.ɵɵtext(1, \" Categorize \");\n    i0.ɵɵelementEnd();\n  }\n}\nfunction ImportDataComponent_td_121_mat_option_7_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r87 = i0.ɵɵgetCurrentView();\n    i0.ɵɵelementStart(0, \"mat-option\", 123);\n    i0.ɵɵlistener(\"click\", function ImportDataComponent_td_121_mat_option_7_Template_mat_option_click_0_listener() {\n      i0.ɵɵrestoreView(_r87);\n      const row_r81 = i0.ɵɵnextContext().$implicit;\n      const ctx_r85 = i0.ɵɵnextContext();\n      return ctx_r85.preferneceModel(row_r81.recordID, ctx_r85.categoryValues.at(row_r81.index).get(\"categoryStdID\").value, ctx_r85.categoryValues.at(row_r81.index).get(\"activityStdID\").value, row_r81.index);\n    });\n    i0.ɵɵtext(1);\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const category_r84 = ctx.$implicit;\n    i0.ɵɵproperty(\"value\", category_r84[\"id\"])(\"matTooltip\", category_r84[\"name\"].length > 30 ? category_r84[\"name\"] : \"\");\n    i0.ɵɵadvance(1);\n    i0.ɵɵtextInterpolate1(\" \", category_r84[\"name\"], \" \");\n  }\n}\nfunction ImportDataComponent_td_121_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"td\", 118);\n    i0.ɵɵelementStart(1, \"mat-form-field\", 119);\n    i0.ɵɵelementStart(2, \"mat-label\", 20);\n    i0.ɵɵtext(3, \" Select Category\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(4, \"mat-select\", 120);\n    i0.ɵɵelementStart(5, \"mat-option\");\n    i0.ɵɵelement(6, \"ngx-mat-select-search\", 121);\n    i0.ɵɵelementEnd();\n    i0.ɵɵtemplate(7, ImportDataComponent_td_121_mat_option_7_Template, 2, 3, \"mat-option\", 122);\n    i0.ɵɵpipe(8, \"async\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(9, \"mat-error\");\n    i0.ɵɵtext(10, \" Select a category \");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const row_r81 = ctx.$implicit;\n    const i_r82 = ctx.index;\n    const ctx_r31 = i0.ɵɵnextContext();\n    i0.ɵɵproperty(\"formGroupName\", row_r81.index)(\"ngClass\", ctx_r31.availableForCategorization == \"NO\" || ctx_r31.getenableRecordFormControl(row_r81.recordID).value === false ? \"noFocusCategory\" : \"none\");\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"appearance\", ctx_r31.MaterialFormFieldAppearance.FORM_FIELD_APPEARANCE);\n    i0.ɵɵadvance(5);\n    i0.ɵɵproperty(\"formControl\", ctx_r31.categorySearchUtil == null ? null : ctx_r31.categorySearchUtil[i_r82] == null ? null : ctx_r31.categorySearchUtil[i_r82].filterFC);\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngForOf\", i0.ɵɵpipeBind1(8, 5, ctx_r31.categorySearchUtil == null ? null : ctx_r31.categorySearchUtil[i_r82] == null ? null : ctx_r31.categorySearchUtil[i_r82].filteredEntities));\n  }\n}\nfunction ImportDataComponent_th_123_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"th\", 117);\n    i0.ɵɵtext(1, \" Activity type \");\n    i0.ɵɵelementEnd();\n  }\n}\nfunction ImportDataComponent_td_124_mat_option_7_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r94 = i0.ɵɵgetCurrentView();\n    i0.ɵɵelementStart(0, \"mat-option\", 126);\n    i0.ɵɵlistener(\"click\", function ImportDataComponent_td_124_mat_option_7_Template_mat_option_click_0_listener() {\n      i0.ɵɵrestoreView(_r94);\n      const row_r88 = i0.ɵɵnextContext().$implicit;\n      const ctx_r92 = i0.ɵɵnextContext();\n      return ctx_r92.preferneceModel(row_r88.recordID, ctx_r92.categoryValues.at(row_r88.index).get(\"categoryStdID\").value, ctx_r92.categoryValues.at(row_r88.index).get(\"activityStdID\").value, row_r88.index);\n    });\n    i0.ɵɵtext(1);\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const activity_r91 = ctx.$implicit;\n    i0.ɵɵproperty(\"value\", activity_r91[\"id\"]);\n    i0.ɵɵadvance(1);\n    i0.ɵɵtextInterpolate1(\" \", activity_r91[\"name\"], \" \");\n  }\n}\nfunction ImportDataComponent_td_124_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"td\", 118);\n    i0.ɵɵelementStart(1, \"mat-form-field\", 119);\n    i0.ɵɵelementStart(2, \"mat-label\", 20);\n    i0.ɵɵtext(3, \" Select Activity\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(4, \"mat-select\", 124);\n    i0.ɵɵelementStart(5, \"mat-option\");\n    i0.ɵɵelement(6, \"ngx-mat-select-search\", 121);\n    i0.ɵɵelementEnd();\n    i0.ɵɵtemplate(7, ImportDataComponent_td_124_mat_option_7_Template, 2, 2, \"mat-option\", 125);\n    i0.ɵɵpipe(8, \"async\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(9, \"mat-error\");\n    i0.ɵɵtext(10, \" Select an activity \");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const row_r88 = ctx.$implicit;\n    const i_r89 = ctx.index;\n    const ctx_r33 = i0.ɵɵnextContext();\n    i0.ɵɵproperty(\"formGroupName\", row_r88.index)(\"ngClass\", ctx_r33.availableForCategorization == \"NO\" || ctx_r33.getenableRecordFormControl(row_r88.recordID).value === false ? \"noFocusCategory\" : \"none\");\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"appearance\", ctx_r33.MaterialFormFieldAppearance.FORM_FIELD_APPEARANCE);\n    i0.ɵɵadvance(5);\n    i0.ɵɵproperty(\"formControl\", ctx_r33.activitySearchUtil == null ? null : ctx_r33.activitySearchUtil[i_r89] == null ? null : ctx_r33.activitySearchUtil[i_r89].filterFC);\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngForOf\", i0.ɵɵpipeBind1(8, 5, ctx_r33.activitySearchUtil == null ? null : ctx_r33.activitySearchUtil[i_r89] == null ? null : ctx_r33.activitySearchUtil[i_r89].filteredEntities));\n  }\n}\nfunction ImportDataComponent_tr_125_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelement(0, \"tr\", 127);\n  }\n}\nfunction ImportDataComponent_tr_126_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelement(0, \"tr\", 128);\n  }\n}\nfunction ImportDataComponent_tr_127_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"tr\", 129);\n    i0.ɵɵelementStart(1, \"td\", 130);\n    i0.ɵɵtext(2);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const ctx_r36 = i0.ɵɵnextContext();\n    i0.ɵɵadvance(1);\n    i0.ɵɵattribute(\"colspan\", ctx_r36.displayedColumns.length);\n    i0.ɵɵadvance(1);\n    i0.ɵɵtextInterpolate1(\" \", ctx_r36.TABLE_CONSTANT.TABLE_NO_DATA, \" \");\n  }\n}\nfunction ImportDataComponent_div_150_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r97 = i0.ɵɵgetCurrentView();\n    i0.ɵɵelementStart(0, \"div\", 104);\n    i0.ɵɵnamespaceSVG();\n    i0.ɵɵelementStart(1, \"svg\", 105);\n    i0.ɵɵelement(2, \"use\", 106);\n    i0.ɵɵelementEnd();\n    i0.ɵɵtext(3, \" If transaction date does not match accounting date, emissions will not be calculated for these records. To categorise them, \");\n    i0.ɵɵnamespaceHTML();\n    i0.ɵɵelementStart(4, \"a\", 107);\n    i0.ɵɵlistener(\"click\", function ImportDataComponent_div_150_Template_a_click_4_listener() {\n      i0.ɵɵrestoreView(_r97);\n      const ctx_r96 = i0.ɵɵnextContext();\n      return ctx_r96.gotoBackPage();\n    });\n    i0.ɵɵtext(5, \"go back\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵtext(6, \" and change the accounting period. \");\n    i0.ɵɵelementEnd();\n  }\n}\nfunction ImportDataComponent_th_155_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"th\", 111);\n    i0.ɵɵtext(1, \" Record ID \");\n    i0.ɵɵelementEnd();\n  }\n}\nfunction ImportDataComponent_td_156_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"td\", 109);\n    i0.ɵɵtext(1);\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const row_r98 = ctx.$implicit;\n    const ctx_r43 = i0.ɵɵnextContext();\n    i0.ɵɵproperty(\"ngClass\", i0.ɵɵpureFunction1(2, _c10, ctx_r43.recordAvailableForCategorization(row_r98.transactionDate) === \"NO\"));\n    i0.ɵɵadvance(1);\n    i0.ɵɵtextInterpolate1(\" \", row_r98.recordID, \" \");\n  }\n}\nfunction ImportDataComponent_th_158_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"th\", 108);\n    i0.ɵɵtext(1, \" Date \");\n    i0.ɵɵelementEnd();\n  }\n}\nfunction ImportDataComponent_td_159_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"td\", 109);\n    i0.ɵɵtext(1);\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const row_r99 = ctx.$implicit;\n    const ctx_r45 = i0.ɵɵnextContext();\n    i0.ɵɵproperty(\"ngClass\", i0.ɵɵpureFunction1(2, _c10, ctx_r45.recordAvailableForCategorization(row_r99.transactionDate) === \"NO\"));\n    i0.ɵɵadvance(1);\n    i0.ɵɵtextInterpolate1(\" \", row_r99.transactionDate, \" \");\n  }\n}\nfunction ImportDataComponent_th_161_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r102 = i0.ɵɵgetCurrentView();\n    i0.ɵɵelementStart(0, \"th\", 112);\n    i0.ɵɵelementStart(1, \"div\", 7);\n    i0.ɵɵelementStart(2, \"funnel-filter\", 113, 131);\n    i0.ɵɵlistener(\"multi\", function ImportDataComponent_th_161_Template_funnel_filter_multi_2_listener() {\n      i0.ɵɵrestoreView(_r102);\n      const ctx_r101 = i0.ɵɵnextContext();\n      return ctx_r101.previewAccountFlag = true;\n    });\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const ctx_r46 = i0.ɵɵnextContext();\n    i0.ɵɵadvance(2);\n    i0.ɵɵproperty(\"entityList\", ctx_r46.accountList)(\"selectFC\", ctx_r46.previewAccountFC)(\"active\", ctx_r46.previewAccountFlag)(\"resetFlag\", ctx_r46.previewAccountFlag);\n  }\n}\nfunction ImportDataComponent_td_162_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"td\", 109);\n    i0.ɵɵtext(1);\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const row_r103 = ctx.$implicit;\n    const ctx_r47 = i0.ɵɵnextContext();\n    i0.ɵɵproperty(\"ngClass\", ctx_r47.availableForCategorization == \"NO\" ? \"noFocusCategory\" : \"none\");\n    i0.ɵɵadvance(1);\n    i0.ɵɵtextInterpolate1(\" \", row_r103[\"account\"] ? row_r103[\"account\"] : ctx_r47.COMMON_CONSTANT.HYPHEN, \" \");\n  }\n}\nfunction ImportDataComponent_th_164_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"th\", 115);\n    i0.ɵɵtext(1, \" Supplier \");\n    i0.ɵɵelementEnd();\n  }\n}\nfunction ImportDataComponent_td_165_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"td\", 109);\n    i0.ɵɵtext(1);\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const row_r104 = ctx.$implicit;\n    const ctx_r49 = i0.ɵɵnextContext();\n    i0.ɵɵproperty(\"ngClass\", ctx_r49.availableForCategorization == \"NO\" ? \"noFocusCategory\" : \"none\");\n    i0.ɵɵadvance(1);\n    i0.ɵɵtextInterpolate1(\" \", row_r104[\"supplier\"] ? row_r104[\"supplier\"] : ctx_r49.COMMON_CONSTANT.HYPHEN, \" \");\n  }\n}\nfunction ImportDataComponent_th_167_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"th\", 116);\n    i0.ɵɵtext(1);\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const ctx_r50 = i0.ɵɵnextContext();\n    i0.ɵɵadvance(1);\n    i0.ɵɵtextInterpolate1(\" Amount \", ctx_r50.previewCurrencySymbol ? \"(\" + ctx_r50.previewCurrencySymbol + \")\" : \"\", \" \");\n  }\n}\nfunction ImportDataComponent_td_168_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"td\", 109);\n    i0.ɵɵtext(1);\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const row_r105 = ctx.$implicit;\n    const ctx_r51 = i0.ɵɵnextContext();\n    i0.ɵɵproperty(\"ngClass\", ctx_r51.availableForCategorization == \"NO\" ? \"noFocusCategory\" : \"none\");\n    i0.ɵɵadvance(1);\n    i0.ɵɵtextInterpolate1(\" \", row_r105[\"amount\"] ? row_r105[\"amount\"] : ctx_r51.COMMON_CONSTANT.HYPHEN, \" \");\n  }\n}\nfunction ImportDataComponent_th_170_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"th\", 117);\n    i0.ɵɵtext(1, \" Categorize \");\n    i0.ɵɵelementEnd();\n  }\n}\nfunction ImportDataComponent_td_171_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"td\", 132);\n    i0.ɵɵtext(1);\n    i0.ɵɵpipe(2, \"dotdotdot\");\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const row_r106 = ctx.$implicit;\n    const ctx_r53 = i0.ɵɵnextContext();\n    i0.ɵɵproperty(\"ngClass\", ctx_r53.availableForCategorization == \"NO\" ? \"noFocusCategory\" : \"none\")(\"matTooltip\", (row_r106[\"category\"] == null ? null : row_r106[\"category\"].length) > 25 ? row_r106[\"category\"] : \"\");\n    i0.ɵɵadvance(1);\n    i0.ɵɵtextInterpolate1(\" \", i0.ɵɵpipeBind2(2, 3, row_r106[\"category\"] ? row_r106[\"category\"] : ctx_r53.COMMON_CONSTANT.HYPHEN, 25), \" \");\n  }\n}\nfunction ImportDataComponent_th_173_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"th\", 117);\n    i0.ɵɵtext(1, \" Activity type \");\n    i0.ɵɵelementEnd();\n  }\n}\nfunction ImportDataComponent_td_174_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"td\", 132);\n    i0.ɵɵtext(1);\n    i0.ɵɵpipe(2, \"dotdotdot\");\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const row_r107 = ctx.$implicit;\n    const ctx_r55 = i0.ɵɵnextContext();\n    i0.ɵɵproperty(\"ngClass\", ctx_r55.availableForCategorization == \"NO\" ? \"noFocusCategory\" : \"none\")(\"matTooltip\", (row_r107[\"activityName\"] == null ? null : row_r107[\"activityName\"].length) > 25 ? row_r107[\"activityName\"] : \"\");\n    i0.ɵɵadvance(1);\n    i0.ɵɵtextInterpolate1(\" \", i0.ɵɵpipeBind2(2, 3, row_r107[\"activityName\"] ? row_r107[\"activityName\"] : ctx_r55.COMMON_CONSTANT.HYPHEN, 25), \" \");\n  }\n}\nfunction ImportDataComponent_tr_175_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelement(0, \"tr\", 127);\n  }\n}\nfunction ImportDataComponent_tr_176_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelement(0, \"tr\", 128);\n  }\n}\nfunction ImportDataComponent_tr_177_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"tr\", 129);\n    i0.ɵɵelementStart(1, \"td\", 130);\n    i0.ɵɵtext(2);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const ctx_r58 = i0.ɵɵnextContext();\n    i0.ɵɵadvance(1);\n    i0.ɵɵattribute(\"colspan\", ctx_r58.previewDisplayedColumns.length);\n    i0.ɵɵadvance(1);\n    i0.ɵɵtextInterpolate1(\" \", ctx_r58.TABLE_CONSTANT.TABLE_NO_DATA, \" \");\n  }\n}\nconst _c11 = function (a0) {\n  return {\n    \"noFocus\": a0\n  };\n};\nexport let ImportDataComponent = /*#__PURE__*/(() => {\n  class ImportDataComponent {\n    constructor(router, activatedRoute, dialog, location, configureDataFB, categorizeDataFB, currencyService, emissionCalculationMethodController, spendBasedController, toasterService, storageService, dateService) {\n      this.router = router;\n      this.activatedRoute = activatedRoute;\n      this.dialog = dialog;\n      this.location = location;\n      this.configureDataFB = configureDataFB;\n      this.categorizeDataFB = categorizeDataFB;\n      this.currencyService = currencyService;\n      this.emissionCalculationMethodController = emissionCalculationMethodController;\n      this.spendBasedController = spendBasedController;\n      this.toasterService = toasterService;\n      this.storageService = storageService;\n      this.dateService = dateService;\n      this.MaterialFormFieldAppearance = MaterialFormFieldAppearance;\n      this.MATERIAL_CONSTANT = MATERIAL_CONSTANT;\n      this.TABLE_CONSTANT = TABLE_CONSTANT;\n      this.COMMON_CONSTANT = COMMON_CONSTANT;\n      this.CARBON_CONSTANT = CARBON_CONSTANT;\n      this.hasValue = false;\n      this.isInflation = false;\n      this.inflationPeriods = [];\n      this.today = new Date();\n      this.dataSource = [];\n      this.resultLength = 0;\n      this.displayedColumns = ['includeExcludeRecord', 'recordID', 'transactionDate', 'account', 'supplier', 'amount', 'categorize', 'activity'];\n      this.categoryMappingList = [];\n      this.activityList = [];\n      this.currencySearchUtil = new MatSelectSearchService(['currencyName', 'currencyCode']);\n      this.activitySearchUtil = [];\n      this.categorySearchUtil = [];\n      this.searchFlag = false;\n      this.filterArr = [];\n      this.previewResultLength = 0;\n      this.previewDisplayedColumns = ['recordID', 'transactionDate', 'account', 'supplier', 'amount', 'categorize', 'activity'];\n      this.previewSearchFlag = false;\n      this.accountList = [];\n      this.accountFlag = false;\n      this.accountFC = new FormControl([]);\n      this.accountFilterApplied = false;\n      this.previewAccountFlag = false;\n      this.previewAccountFC = new FormControl([]);\n      this.accountFilterAppliedForPreview = false;\n      this.isConfigureBack = false;\n      this.showMessage = 'NO';\n      this.range = [];\n      this.errorHandling = (control, error) => {\n        return this.configureDataFG.get(control).hasError(error);\n      };\n      this.errorHandlingArray = (index, control, error) => {\n        return this.inflation.controls[index]['controls'][control].hasError(error);\n      };\n    }\n    ngOnInit() {\n      this.currentOrgID = this.storageService.getStorage('currentOrgID');\n      this.sampleFileSrc = \"assets/files/scope3-spend-based.xlsx\";\n      this.configureInit();\n      this.getCurrency();\n      this.categorizeInit();\n      this.activatedRoute.queryParams.subscribe(queryParam => {\n        console.log(queryParam);\n        if (queryParam.methodID) {\n          this.methodID = parseInt(queryParam.methodID);\n          this.getEmissionCalculationMethods(this.methodID);\n        }\n        if (queryParam.configID) {\n          this.configuredID = parseInt(queryParam.configID);\n        }\n        if (queryParam.configMethodID) {\n          this.configMethodID = parseInt(queryParam.configMethodID);\n          this.getEmissionCalculationMethods(this.configMethodID);\n        }\n        if (queryParam.isConfigEdit) {\n          this.isConfigEdit = queryParam.isConfigEdit;\n          this.getConfiguredData(this.configuredID);\n        }\n        if (queryParam.isCategorizeEdit) {\n          this.isCategorizeEdit = queryParam.isCategorizeEdit;\n        }\n      });\n    }\n    getEmissionCalculationMethods(methodID) {\n      this.emissionCalculationMethodController.getEmissionCalculationMethod(this.currentOrgID).subscribe(getCalculationMethodRes => {\n        this.calculationEmissionMethod = getCalculationMethodRes;\n        const selectedMethod = this.calculationEmissionMethod.find(method => method.methodID == methodID);\n        this.methodName = selectedMethod.methodName;\n      }, error => {\n        console.log('error in getEmissionCalculationMethods() -', error);\n        this.toasterService.openToast(ToastrTitle.ERROR, 'Error in getting calculation methods', ToastrColor.ERROR);\n      });\n    }\n    getConfiguredData(configuredID) {\n      this.configureDataFG.valueChanges.subscribe(() => {\n        this.isEqualConfigure = isEqual(this.initialConfigureObject, this.configureDataFG.getRawValue());\n      });\n      this.spendBasedController.getImportRecordConfiguredData(this.currentOrgID, configuredID).subscribe(configuredRes => {\n        this.configuredData = configuredRes;\n        if (this.configuredData['uploadedFileName'] != null) {\n          this.fileName = this.configuredData['uploadedFileName'];\n        }\n        if (this.configuredData['configuredData'] != null) {\n          this.inflationRate = this.configuredData['configuredData']['inflation'];\n          this.configuredData['configuredData']['inflation'].forEach(item => {\n            this.inflation.push(this.configureDataFB.group({\n              [item.year]: [item.rate, Validators.required]\n            }));\n            this.isInflation = true;\n          });\n        }\n        this.configureDataFG.patchValue(this.configuredData['configuredData']);\n        this.initialConfigureObject = this.configureDataFG.value;\n        this.isEqualConfigure = true;\n      }, error => {\n        console.log('Error in getConfigureData() -', error);\n        this.toasterService.openToast(ToastrTitle.ERROR, 'Error in getting data', ToastrColor.ERROR);\n      });\n    }\n    configureInit() {\n      this.configureDataFG = this.configureDataFB.group({\n        importName: [, Validators.required],\n        currencyUnitID: [, Validators.required],\n        startDate: [, Validators.required],\n        endDate: [, Validators.required],\n        inflation: this.configureDataFB.array([]) // FormArray for inflation rates\n      });\n    }\n\n    categorizeInit() {\n      this.categorizeDataFG = this.categorizeDataFB.group({\n        categoryValues: this.categorizeDataFB.array([]),\n        status: []\n      });\n    }\n    get inflation() {\n      return this.configureDataFG.get('inflation');\n    }\n    get startDateValue() {\n      return this.configureDataFG.get('startDate').value;\n    }\n    get categoryValues() {\n      return this.categorizeDataFG.get('categoryValues');\n    }\n    onFileChange(event) {\n      if (event.target.files.length > 0) {\n        const file = event.target.files[0];\n        if (!this.isFileAllowed(file.name)) {\n          this.resetFileInput();\n          this.toasterService.openToast(ToastrTitle.ERROR, NocFileUploadEnum.INVALID_FILE_TYPE_ERROR, ToastrColor.ERROR);\n          return;\n        } else if (file.size > NocFileUploadEnum.MAX_FILE_SIZE) {\n          this.resetFileInput();\n          this.toasterService.openToast(ToastrTitle.ERROR, NocFileUploadEnum.INVAID_FILE_SIZE_ERROR, ToastrColor.ERROR);\n          return;\n        }\n        const reader = new FileReader();\n        reader.readAsDataURL(file);\n        reader.addEventListener('load', () => {\n          this.isFileUpload = file;\n          this.fileName = file.name;\n        });\n        reader.addEventListener('loadend', () => this.progress = false);\n        reader.addEventListener('abort', () => {\n          this.resetFileInput();\n          this.toasterService.openToast(ToastrTitle.ERROR, 'Something went wrong!', ToastrColor.ERROR);\n        });\n        reader.addEventListener('error', () => {\n          this.resetFileInput();\n          this.toasterService.openToast(ToastrTitle.ERROR, 'Error while uploading file!', ToastrColor.ERROR);\n        });\n      }\n    }\n    resetFileInput() {\n      this.fileName = null;\n      this.isFileUpload = null;\n      this.fileUpload.nativeElement.value = null;\n    }\n    isFileAllowed(fileName) {\n      let isFileAllowed = false;\n      const allowedFiles = ['.xlsx', '.xls'];\n      const regex = /(?:\\.([^.]+))?$/;\n      const extension = regex.exec(fileName);\n      if (undefined !== extension && null !== extension) {\n        allowedFiles.forEach(extnsn => {\n          if (extnsn === extension[0]) {\n            isFileAllowed = true;\n          }\n        });\n      }\n      return isFileAllowed;\n    }\n    isFileUploadBtn(controlName) {\n      document.getElementById(controlName).click();\n    }\n    getCurrency() {\n      return __awaiter(this, void 0, void 0, function* () {\n        this.currencySearchUtil.entityArr = yield this.currencyService.getCurrency();\n        this.currencySearchUtil.createSubscription();\n      });\n    }\n    getInflationRate() {\n      let methodID;\n      if (this.methodID) {\n        methodID = this.methodID;\n      } else if (this.configMethodID) {\n        methodID = this.configMethodID;\n      }\n      this.spendBasedController.getInflationRate(this.currentOrgID, methodID, this.configureDataFG.get('startDate').value, this.configureDataFG.get('endDate').value, this.configureDataFG.get('currencyUnitID').value).subscribe(inflationRes => {\n        this.isInflation = true;\n        this.inflationRate = inflationRes['response'];\n        this.inflation.clear();\n        this.inflationRate.forEach(item => {\n          this.inflation.push(this.configureDataFB.group({\n            [item.year]: [item.rate, Validators.required]\n          }));\n        });\n      }, error => {\n        console.log(\"error in getting inflation rate -\", error);\n        this.toasterService.openToast(ToastrTitle.ERROR, 'Error in getting inflation rate', ToastrColor.ERROR);\n      });\n    }\n    toFormData() {\n      const formData = new FormData();\n      if (this.isConfigureBack) {\n        formData.append('file', undefined);\n      } else {\n        formData.append('file', this.isFileUpload);\n      }\n      formData.append('payload', JSON.stringify(this.configureDataFG.value));\n      if (this.methodID) {\n        formData.append('methodID', this.methodID);\n      }\n      if (this.configMethodID) {\n        formData.append('methodID', this.configMethodID);\n      }\n      return formData;\n    }\n    saveConfigureData() {\n      if (this.isFileUpload == null) {\n        if (this.configureDataFG.invalid) {\n          this.configureDataFG.markAllAsTouched();\n          this.toasterService.openToast(ToastrTitle.ERROR, 'Please upload a file and fix the form errors!', ToastrColor.ERROR);\n        } else {\n          this.toasterService.openToast(ToastrTitle.ERROR, NocFileUploadEnum.NO_FILE, ToastrColor.ERROR);\n        }\n        return;\n      }\n      if (this.configureDataFG.invalid) {\n        this.configureDataFG.markAllAsTouched();\n        this.toasterService.openToast(ToastrTitle.ERROR, InvalidForm.INVALID_FORM_MESSAGE, ToastrColor.ERROR);\n        return;\n      }\n      if (this.inflationRate.length > 0 || this.inflationRate.length == 0) {\n        this.spendBasedController.saveConfigureData(this.currentOrgID, this.toFormData()).subscribe(configureRes => {\n          if (configureRes['result'] == 'success') {\n            this.stepper.next();\n            this.configID = configureRes['response']['id'];\n            this.getCategoryRecords(this.configID);\n            this.toasterService.openToast(ToastrTitle.SUCCESS, configureRes['message'], ToastrColor.SUCCESS);\n          }\n        }, error => {\n          console.log(\"error in saveConfigureData() -\", error);\n          this.toasterService.openToast(ToastrTitle.ERROR, error.error['message'], ToastrColor.ERROR);\n        });\n      }\n    }\n    gotoBackPage() {\n      this.stepper.previous();\n      this.isConfigureBack = true;\n      this.configureDataFG.valueChanges.subscribe(() => {\n        this.isEqualBackConfigure = isEqual(this.initialConfigureBackObject, this.configureDataFG.getRawValue());\n      });\n      this.initialConfigureBackObject = this.configureDataFG.value;\n      this.isEqualBackConfigure = true;\n    }\n    updateConfiguredData() {\n      const configID = this.isConfigEdit || this.isCategorizeEdit ? this.configuredID : this.configID;\n      if (this.isFileUpload == null && this.configureDataFG.invalid && !this.configuredData) {\n        this.configureDataFG.markAllAsTouched();\n        this.toasterService.openToast(ToastrTitle.ERROR, 'Please upload a file and fix the form errors!', ToastrColor.ERROR);\n      } else if (this.isFileUpload == null && !this.configuredData) {\n        this.toasterService.openToast(ToastrTitle.ERROR, 'Please upload a file!', ToastrColor.ERROR);\n        return;\n      }\n      if (this.configureDataFG.invalid) {\n        this.configureDataFG.markAllAsTouched();\n        this.toasterService.openToast(ToastrTitle.ERROR, InvalidForm.INVALID_FORM_MESSAGE, ToastrColor.ERROR);\n        return;\n      }\n      if (this.isConfigEdit == CARBON_CONSTANT.NO && this.configuredData['configuredData'] || this.isEqualConfigure || this.isEqualBackConfigure) {\n        this.stepper.next();\n        this.getCategoryRecords(configID);\n      } else {\n        this.spendBasedController.updateConfiguredData(this.currentOrgID, configID, this.toFormData()).subscribe(getCategorizedRes => {\n          this.stepper.next();\n          this.getCategoryRecords(configID);\n          this.toasterService.openToast(ToastrTitle.SUCCESS, getCategorizedRes['message'], ToastrColor.SUCCESS);\n        }, error => {\n          console.log('Error in saveConfiguredData() -', error);\n          this.toasterService.openToast(ToastrTitle.ERROR, error.error['message'], ToastrColor.ERROR);\n        });\n      }\n    }\n    formatDate(date, control) {\n      let formattedDate = moment(date).format(\"YYYY-MM-DD\");\n      this.configureDataFG.get(control).patchValue(formattedDate);\n    }\n    getConfigAccountList(configID) {\n      this.spendBasedController.getConfigAccount(this.currentOrgID, configID).subscribe(accountRes => {\n        this.accountList = accountRes;\n        this.all_accounts = this.accountList;\n        this.totalAccounts = this.accountList.length;\n        this.all_account_ID = this.accountList.map(accountList => accountList['name']);\n        this.all_account_ID.unshift('all');\n        // Select all accounts initially\n        this.selected_accounts = this.accountList.map(accountList => accountList);\n        this.accountFC.patchValue(this.all_account_ID);\n        //For preview\n        this.all_accountsForPreview = this.accountList;\n        this.totalAccountsForPreview = this.accountList.length;\n        this.all_account_IDForPreview = this.accountList.map(accountList => accountList['name']);\n        this.all_account_IDForPreview.unshift('all');\n        this.selected_accountsForPreview = this.accountList.map(accountList => accountList);\n        this.previewAccountFC.patchValue(this.all_account_IDForPreview);\n      }, error => {\n        console.log('error in getConfigAccountList() -', error);\n        this.toasterService.openToast(ToastrTitle.ERROR, 'Error while fetching account', ToastrColor.ERROR);\n      });\n    }\n    selectAllAccount() {\n      if (!this.accountFC.value.includes('all') && this.accountFC.value.length > 0) {\n        this.accountFC.reset([]);\n        this.selected_accounts = [];\n      } else {\n        this.accountList = this.all_accounts;\n        this.totalAccounts = this.all_accounts.length;\n        this.selected_accounts = this.accountList.map(accountList => accountList); // Copy all accounts to selected_accounts\n        this.accountFC.patchValue(this.all_account_ID); // Select all account IDs\n      }\n    }\n\n    selectAccount(account) {\n      const index = this.selected_accounts.indexOf(account);\n      if (index >= 0) {\n        this.selected_accounts.splice(index, 1);\n      } else {\n        this.selected_accounts.push(account);\n      }\n      const k = this.accountFC.value.indexOf('all');\n      if (k > -1) {\n        if (this.selected_accounts.length < this.totalAccounts) {\n          this.accountFC.patchValue(this.selected_accounts.map(account => account['name']));\n        } else {\n          this.accountFC.patchValue([]);\n        }\n      } else {\n        if (this.selected_accounts.length === this.totalAccounts) {\n          this.accountFC.patchValue(this.all_account_ID);\n        }\n      }\n    }\n    categorizeSearchFn($event) {\n      this.searchValue = $event;\n      if (this.searchValue.length > 0) {\n        this.searchFlag = true;\n        this.accountFC.reset(['all']);\n        this.selectAllAccount();\n        this.paginator.pageIndex = 0;\n      } else {\n        this.searchFlag = false;\n      }\n      this.previewRefreshBtn.nativeElement.click();\n    }\n    resetOnNoChange(event) {\n      if (event) {\n        this.prevAccount = this.accountFC.value;\n        this.accountFilterApplied = false;\n      } else {\n        if (this.prevAccount != this.accountFC.value && !this.accountFilterApplied) {\n          this.accountFC.patchValue(this.prevAccount, {\n            onlySelf: true\n          });\n        }\n      }\n    }\n    getCategoryRecords(configID) {\n      this.categoryValues.clear();\n      this.categoryValues.valueChanges.subscribe(() => this.isEqual = isEqual(this.initialObject, this.categoryValues.value));\n      this.getConfigAccountList(configID);\n      this.sort.sortChange.subscribe(() => this.paginator.pageIndex = 0);\n      fromEvent(this.refreshBtn.nativeElement, \"click\").subscribe(() => this.previewPaginator.pageIndex = 0);\n      this.getCategoryMapping();\n      const methodID = this.isConfigEdit || this.isCategorizeEdit ? this.configMethodID : this.methodID;\n      this.getActivities(methodID);\n      merge(this.paginator.page, this.sort.sortChange, this.accountSelect.multi, fromEvent(this.refreshBtn.nativeElement, \"click\")).pipe(startWith({}), switchMap(() => {\n        if (this.accountFlag) {\n          if (this.accountFC.value.length == 0) {\n            this.toasterService.openToast(ToastrTitle.ERROR, 'Invalid filter for accounts', ToastrColor.ERROR);\n            return [];\n          }\n        }\n        this.filterArr = [];\n        if (this.searchFlag) {\n          this.filterArr.push(\"search:\" + this.searchValue);\n        }\n        if (this.accountFlag) {\n          let selected_accounts = this.accountFC.value.length - 1;\n          if (selected_accounts == this.totalAccounts) {\n            this.accountFlag = false;\n          } else {\n            this.filterArr.push('account:' + this.accountFC.value);\n          }\n        }\n        return this.spendBasedController.getCategoryRecords(this.paginator.pageIndex, this.paginator.pageSize, this.sort.active, this.sort.direction, this.filterArr, this.currentOrgID, configID).pipe(catchError(() => observableOf(null)));\n      }), map(dataSource => {\n        if (dataSource === null) {\n          this.resultLength = 0;\n          return [];\n        }\n        this.totalCategorizedRecord = dataSource[\"totalCategorizedRecord\"];\n        this.startRecordDate = dataSource[\"startDate\"];\n        this.endRecordDate = dataSource[\"endDate\"];\n        this.resultLength = dataSource[\"totalCount\"];\n        this.categoryCurrencySymbol = dataSource['currencySymbol'];\n        return dataSource[\"record\"];\n      })).subscribe(dataSource => {\n        this.dataSource = dataSource;\n        // if (this.categoryMappingList.length == 0) {\n        //     this.getCategoryMapping();\n        //     const methodID = (this.isConfigEdit || this.isCategorizeEdit) ? this.configMethodID : this.methodID;\n        //     this.getActivities(methodID);\n        // }\n        if (this.categoryMappingList.length != 0) {\n          this.createCategorySearchList();\n          this.createActivitySearchList();\n        }\n        for (const record of dataSource) {\n          const transactionDate = record[\"transactionDate\"];\n          if (transactionDate >= this.startRecordDate && transactionDate <= this.endRecordDate) {\n            this.showMessage = \"NO\";\n          } else {\n            this.showMessage = \"YES\";\n            break;\n          }\n        }\n        this.range = [];\n        for (let i = this.paginator.pageIndex * this.paginator.pageSize; i < this.paginator.pageSize * (this.paginator.pageIndex + 1); i++) {\n          this.range.push(i);\n        }\n        dataSource.forEach((record, index) => {\n          var _a, _b;\n          const pageIndex = this.paginator.pageIndex;\n          const pageSize = this.paginator.pageSize;\n          record['index'] = this.range[index];\n          let matchId = false;\n          (_b = (_a = this.categoryValues) === null || _a === void 0 ? void 0 : _a.getRawValue()) === null || _b === void 0 ? void 0 : _b.forEach(item => {\n            if (item.recordID == record.recordID) matchId = true;\n          });\n          if (!matchId) this.categoryValuesArray(record);\n        });\n        //Update the initialObject to match the current state of the categoryValues FormArray.\n        this.initialObject = this.categoryValues.value;\n        this.isEqual = true;\n      });\n    }\n    getenableRecordFormControl(recordID) {\n      const index = this.categoryValues.controls.findIndex(control => control.get('recordID').value === recordID);\n      return this.categoryValues.controls[index].get('enableRecord');\n    }\n    categoryValuesArray(record) {\n      this.categoryValues.push(this.categorizeDataFB.group({\n        id: [record.id],\n        recordID: [record.recordID],\n        categoryStdID: [record.categoryStdID],\n        activityStdID: [record.activityStdID],\n        recordKey: [],\n        rememberPreference: [],\n        enableRecord: [record.enableRecord]\n      }, {\n        validator: this.dependentCategoryValues\n      }));\n    }\n    recordAvailableForCategorization(transactionDate) {\n      if (transactionDate >= this.startRecordDate && transactionDate <= this.endRecordDate) {\n        this.availableForCategorization = CARBON_CONSTANT.YES;\n      } else {\n        this.availableForCategorization = CARBON_CONSTANT.NO;\n      }\n      return this.availableForCategorization;\n    }\n    applyAccountFilter() {\n      if (this.accountFC.value.length == 0) {\n        return;\n      }\n      this.accountFilterApplied = true;\n      if (this.accountFC.value.includes('all')) {\n        this.accountFlag = false;\n        return;\n      }\n    }\n    getCategoryMapping() {\n      this.spendBasedController.getCategoryMapping(this.currentOrgID).subscribe(categoryMappingRes => {\n        this.categoryMappingList = categoryMappingRes.map(item => {\n          const name = `${item.databaseName} > ${item.categoryName}`;\n          return {\n            id: item.id,\n            name: name\n          };\n        });\n        // Create an instance of NgxMatSelectSearchUtility for each row\n        // if (this.categoryMappingList.length != 0) {\n        //     for (let i = 0; i < this.resultLength; i++) {\n        //         let searchUtil: MatSelectSearchService = new MatSelectSearchService(['name']);\n        //         searchUtil.entityArr = this.categoryMappingList;\n        //         searchUtil.createSubscription();\n        //         this.categorySearchUtil.push(searchUtil);\n        //     }\n        // }\n      }, error => {\n        console.log('error in getCategoryMapping() -', error);\n        this.toasterService.openToast(ToastrTitle.ERROR, 'Error in getting category mapping list', ToastrColor.ERROR);\n      });\n    }\n    createCategorySearchList() {\n      if (this.categoryMappingList.length != 0) {\n        for (let i = 0; i < this.resultLength; i++) {\n          let searchUtil = new MatSelectSearchService(['name']);\n          searchUtil.entityArr = this.categoryMappingList;\n          searchUtil.createSubscription();\n          this.categorySearchUtil.push(searchUtil);\n        }\n      }\n    }\n    createActivitySearchList() {\n      for (let i = 0; i < this.resultLength; i++) {\n        let searchUtil = new MatSelectSearchService(['name']);\n        searchUtil.entityArr = this.activityList;\n        searchUtil.createSubscription();\n        this.activitySearchUtil.push(searchUtil);\n      }\n    }\n    getActivities(methodID) {\n      this.spendBasedController.getActivities(this.currentOrgID, methodID).subscribe(activityRes => {\n        this.activityList = activityRes;\n        // for (let i = 0; i < this.resultLength; i++) {\n        //     let searchUtil: MatSelectSearchService = new MatSelectSearchService(['name']);\n        //     searchUtil.entityArr = this.activityList;\n        //     searchUtil.createSubscription();\n        //     this.activitySearchUtil.push(searchUtil);\n        // }\n      }, error => {\n        console.log('error in getActivities() -', error);\n        this.toasterService.openToast(ToastrTitle.ERROR, 'Error in getting activity list', ToastrColor.ERROR);\n      });\n    }\n    preferneceModel(recordID, categoryStdID, activityStdID, index) {\n      if (categoryStdID && activityStdID) {\n        const dialogRef = this.dialog.open(CategorizeRecordDialogComponent, {\n          data: {\n            orgID: this.currentOrgID,\n            recordID: recordID,\n            categoryStdID: categoryStdID,\n            activityStdID: activityStdID\n          },\n          minWidth: '500px',\n          maxWidth: '600px'\n        });\n        dialogRef.afterClosed().subscribe(closeRes => {\n          if (closeRes['result'] == 'userPreferenceCategorySaved') {\n            this.categoryValues.controls[index].get('recordKey').setValue(closeRes['preferenceCategory']);\n            this.categoryValues.controls[index].get('rememberPreference').setValue(closeRes['rememberChoice']);\n            this.updateRecordsAsPreferenceSelected(closeRes['preferenceCategory'], recordID, categoryStdID, activityStdID);\n          }\n        });\n      }\n    }\n    updateRecordsAsPreferenceSelected(preference, recordID, category, activity) {\n      let record = this.dataSource.find(item => item.recordID === recordID);\n      let recordList = [];\n      if (preference == 'account') {\n        let accountName = record.account;\n        recordList = this.dataSource.filter(items => items.account == accountName);\n      } else {\n        let supplierName = record.supplier;\n        recordList = this.dataSource.filter(items => items.supplier == supplierName);\n      }\n      for (let i = 0; i < recordList.length; i++) {\n        let updateRecord = this.recordAvailableForCategorization(recordList[i].transactionDate);\n        if (updateRecord == \"YES\") {\n          this.categoryValues.controls.find(control => {\n            return control.value.recordID === recordList[i].recordID;\n          }).patchValue({\n            categoryStdID: category,\n            activityStdID: activity\n          });\n        }\n      }\n    }\n    dependentCategoryValues(group) {\n      let categoryID = group.get('categoryStdID');\n      let activityID = group.get('activityStdID');\n      if (categoryID.value && activityID.value || !categoryID.value && !activityID.value) {\n        categoryID.setErrors(null);\n        activityID.setErrors(null);\n        return null;\n      } else {\n        if (!categoryID.value) categoryID.setErrors({\n          required: true\n        });\n        if (!activityID.value) activityID.setErrors({\n          required: true\n        });\n        return {\n          required: true\n        };\n      }\n    }\n    saveCategoryRecordsData(action) {\n      if (this.isCategorizeEdit == CARBON_CONSTANT.NO) {\n        this.stepper.next();\n        this.getImportRecordsPreview(this.configuredID);\n      }\n      this.categorizeDataFG.patchValue({\n        status: action\n      });\n      let hasValue = false;\n      for (const control of this.categoryValues.controls) {\n        const categoryStdID = control.get('categoryStdID').value;\n        const activityStdID = control.get('activityStdID').value;\n        if (categoryStdID && activityStdID) {\n          hasValue = true;\n          break;\n        } else {\n          hasValue = false;\n        }\n      }\n      if (this.isEqual && action == 'DRAFT' && hasValue && this.categoryValues.valid) {\n        this.router.navigate(['/activity-data/spend-based-method/import-history']);\n      }\n      if (hasValue && this.categoryValues.valid) {\n        if (this.isEqual && action == 'DRAFT') {\n          this.router.navigate(['/activity-data/spend-based-method/import-history']);\n        } else {\n          const configID = this.isConfigEdit || this.isCategorizeEdit ? this.configuredID : this.configID;\n          this.spendBasedController.saveCategoryRecordsData(this.currentOrgID, configID, this.categorizeDataFG.value).subscribe(categoryRes => {\n            if (categoryRes['result'] == 'success') {\n              if (action == 'DONE') {\n                this.stepper.next();\n              } else if (action == 'DRAFT') {\n                this.router.navigate(['/activity-data/spend-based-method/import-history']);\n              }\n              this.getImportRecordsPreview(configID);\n              this.toasterService.openToast(ToastrTitle.SUCCESS, categoryRes['message'], ToastrColor.SUCCESS);\n            }\n          }, error => {\n            console.log(\"error in saveCategoryRecordsData() -\", error);\n            this.toasterService.openToast(ToastrTitle.ERROR, 'Error in saving category records data', ToastrColor.ERROR);\n          });\n        }\n      } else {\n        this.toasterService.openToast(ToastrTitle.ERROR, InvalidForm.INVALID_FORM_MESSAGE, ToastrColor.ERROR);\n      }\n    }\n    previewSearchFn($event) {\n      this.previewSearchValue = $event;\n      if (this.previewSearchValue.length > 0) {\n        this.previewSearchFlag = true;\n        this.previewPaginator.pageIndex = 0;\n      } else {\n        this.previewSearchFlag = false;\n      }\n      this.previewRefreshBtn.nativeElement.click();\n    }\n    resetOnNoChangeForPreview(event) {\n      if (event) {\n        this.prevAccountForPreview = this.previewAccountFC.value;\n        this.accountFilterAppliedForPreview = false;\n      } else {\n        if (this.prevAccountForPreview != this.previewAccountFC.value && !this.accountFilterAppliedForPreview) {\n          this.previewAccountFC.patchValue(this.prevAccountForPreview, {\n            onlySelf: true\n          });\n        }\n      }\n    }\n    selectAllAccountForPreview() {\n      if (!this.previewAccountFC.value.includes('all') && this.previewAccountFC.value.length > 0) {\n        this.previewAccountFC.reset([]);\n        this.selected_accountsForPreview = [];\n      } else {\n        this.accountList = this.all_accountsForPreview;\n        this.totalAccountsForPreview = this.all_accountsForPreview.length;\n        this.selected_accountsForPreview = this.accountList.map(accountList => accountList); // Copy all accounts to selected_accounts\n        this.previewAccountFC.patchValue(this.all_account_IDForPreview); // Select all account IDs\n      }\n    }\n\n    selectAccountForPreview(account) {\n      const index = this.selected_accountsForPreview.indexOf(account);\n      if (index >= 0) {\n        this.selected_accountsForPreview.splice(index, 1);\n      } else {\n        this.selected_accountsForPreview.push(account);\n      }\n      const k = this.previewAccountFC.value.indexOf('all');\n      if (k > -1) {\n        if (this.selected_accountsForPreview.length < this.totalAccountsForPreview) {\n          this.previewAccountFC.patchValue(this.selected_accountsForPreview.map(account => account['name']));\n        } else {\n          this.previewAccountFC.patchValue([]);\n        }\n      } else {\n        if (this.selected_accountsForPreview.length === this.totalAccountsForPreview) {\n          this.previewAccountFC.patchValue(this.all_account_IDForPreview);\n        }\n      }\n    }\n    applyAccountFilterForPreview() {\n      if (this.previewAccountFC.value.length == 0) {\n        return;\n      }\n      this.accountFilterAppliedForPreview = true;\n      if (this.previewAccountFC.value.includes('all')) {\n        this.previewAccountFlag = false;\n        return;\n      }\n    }\n    getImportRecordsPreview(configID) {\n      this.previewSort.sortChange.subscribe(() => this.previewPaginator.pageIndex = 0);\n      fromEvent(this.previewRefreshBtn.nativeElement, \"click\").subscribe(() => this.previewPaginator.pageIndex = 0);\n      merge(this.previewPaginator.page, this.previewSort.sortChange, this.previewAccountSelect.multi, fromEvent(this.previewRefreshBtn.nativeElement, \"click\")).pipe(startWith({}), switchMap(() => {\n        if (this.previewAccountFlag) {\n          if (this.previewAccountFC.value.length == 0) {\n            this.toasterService.openToast(ToastrTitle.ERROR, 'Invalid filter for accounts', ToastrColor.ERROR);\n            return [];\n          }\n        }\n        this.filterArr = [];\n        if (this.previewSearchFlag) {\n          this.filterArr.push(\"search:\" + this.previewSearchValue);\n        }\n        if (this.previewAccountFlag) {\n          let selected_accountsForPreview = this.previewAccountFC.value.length - 1;\n          if (selected_accountsForPreview == this.totalAccountsForPreview) {\n            this.previewAccountFlag = false;\n          } else {\n            this.filterArr.push('account:' + this.previewAccountFC.value);\n          }\n        }\n        return this.spendBasedController.getImportRecordsPreview(this.previewPaginator.pageIndex, this.previewPaginator.pageSize, this.previewSort.active, this.previewSort.direction, this.filterArr, this.currentOrgID, configID).pipe(catchError(() => observableOf(null)));\n      }), map(previewDataSource => {\n        if (previewDataSource === null) {\n          this.previewResultLength = 0;\n          return [];\n        }\n        this.previewResultLength = previewDataSource[\"totalCount\"];\n        this.previewCurrencySymbol = previewDataSource[\"currencySymbol\"];\n        return previewDataSource[\"configRecord\"];\n      })).subscribe(previewDataSource => {\n        this.previewDataSource = previewDataSource;\n      });\n    }\n    submitPreviewData(status) {\n      const configID = this.isConfigEdit || this.isCategorizeEdit ? this.configuredID : this.configID;\n      this.spendBasedController.submitPreviewData(this.currentOrgID, configID, status).subscribe(previewRes => {\n        this.toasterService.openToast(ToastrTitle.SUCCESS, previewRes['message'], ToastrColor.SUCCESS);\n      }, error => {\n        console.log(\"error in submitPreviewData() -\", error);\n        this.toasterService.openToast(ToastrTitle.ERROR, error.error['message'], ToastrColor.ERROR);\n      });\n    }\n    cancelButtonAction() {\n      this.location.back();\n    }\n  }\n  ImportDataComponent.ɵfac = function ImportDataComponent_Factory(t) {\n    return new (t || ImportDataComponent)(i0.ɵɵdirectiveInject(i1.Router), i0.ɵɵdirectiveInject(i1.ActivatedRoute), i0.ɵɵdirectiveInject(i2.MatDialog), i0.ɵɵdirectiveInject(i3.Location), i0.ɵɵdirectiveInject(i4.FormBuilder), i0.ɵɵdirectiveInject(i4.FormBuilder), i0.ɵɵdirectiveInject(i5.CurrencyService), i0.ɵɵdirectiveInject(i6.EmissionCalculationMethodController), i0.ɵɵdirectiveInject(i7.SpendBasedController), i0.ɵɵdirectiveInject(i8.ToastrService), i0.ɵɵdirectiveInject(i9.StorageService), i0.ɵɵdirectiveInject(i10.DateService));\n  };\n  ImportDataComponent.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n    type: ImportDataComponent,\n    selectors: [[\"app-import-data\"]],\n    viewQuery: function ImportDataComponent_Query(rf, ctx) {\n      if (rf & 1) {\n        i0.ɵɵviewQuery(MatStepper, 5);\n        i0.ɵɵviewQuery(_c0, 7);\n        i0.ɵɵviewQuery(_c1, 5);\n        i0.ɵɵviewQuery(_c2, 5);\n        i0.ɵɵviewQuery(_c3, 5);\n        i0.ɵɵviewQuery(_c4, 5, MatPaginator);\n        i0.ɵɵviewQuery(_c5, 5, MatSort);\n        i0.ɵɵviewQuery(_c6, 5, MatPaginator);\n        i0.ɵɵviewQuery(_c7, 5, MatSort);\n        i0.ɵɵviewQuery(_c8, 5);\n        i0.ɵɵviewQuery(_c9, 5);\n      }\n      if (rf & 2) {\n        let _t;\n        i0.ɵɵqueryRefresh(_t = i0.ɵɵloadQuery()) && (ctx.stepper = _t.first);\n        i0.ɵɵqueryRefresh(_t = i0.ɵɵloadQuery()) && (ctx.searchBtn = _t.first);\n        i0.ɵɵqueryRefresh(_t = i0.ɵɵloadQuery()) && (ctx.fileUpload = _t.first);\n        i0.ɵɵqueryRefresh(_t = i0.ɵɵloadQuery()) && (ctx.refreshBtn = _t.first);\n        i0.ɵɵqueryRefresh(_t = i0.ɵɵloadQuery()) && (ctx.previewRefreshBtn = _t.first);\n        i0.ɵɵqueryRefresh(_t = i0.ɵɵloadQuery()) && (ctx.paginator = _t.first);\n        i0.ɵɵqueryRefresh(_t = i0.ɵɵloadQuery()) && (ctx.sort = _t.first);\n        i0.ɵɵqueryRefresh(_t = i0.ɵɵloadQuery()) && (ctx.previewPaginator = _t.first);\n        i0.ɵɵqueryRefresh(_t = i0.ɵɵloadQuery()) && (ctx.previewSort = _t.first);\n        i0.ɵɵqueryRefresh(_t = i0.ɵɵloadQuery()) && (ctx.accountSelect = _t.first);\n        i0.ɵɵqueryRefresh(_t = i0.ɵɵloadQuery()) && (ctx.previewAccountSelect = _t.first);\n      }\n    },\n    features: [i0.ɵɵProvidersFeature([{\n      provide: STEPPER_GLOBAL_OPTIONS,\n      useValue: {\n        displayDefaultIndicatorType: false\n      }\n    }])],\n    decls: 186,\n    vars: 57,\n    consts: [[\"xmlns\", \"http://www.w3.org/2000/svg\", 1, \"d-none\"], [\"id\", \"exclamation-triangle-fill\", \"fill\", \"currentColor\", \"viewBox\", \"0 0 16 16\"], [\"d\", \"M8.982 1.566a1.13 1.13 0 0 0-1.96 0L.165 13.233c-.457.778.091 1.767.98 1.767h13.713c.889 0 1.438-.99.98-1.767L8.982 1.566zM8 5c.535 0 .954.462.9.995l-.35 3.507a.552.552 0 0 1-1.1 0L7.1 5.995A.905.905 0 0 1 8 5zm.002 6a1 1 0 1 1 0 2 1 1 0 0 1 0-2z\"], [1, \"card\", \"main-card\", \"cardOverwrite\", \"h100\"], [1, \"cardHeaderBlock\", \"d-flex\", \"align-items-center\"], [1, \"col-sm-6\", \"pageTitle\"], [1, \"card-body\"], [1, \"row\"], [1, \"col-sm-12\"], [\"labelPosition\", \"bottom\", \"linear\", \"\"], [\"stepper\", \"\"], [\"label\", \"Configure\"], [3, \"formGroup\"], [1, \"cardTitle\", \"fw-bold\", \"pb-3\"], [\"class\", \"row mb-2\", 4, \"ngIf\"], [1, \"col-sm-2\", \"justify-content-start\", \"centerAlign\"], [1, \"fw-bold\"], [1, \"col-sm-4\"], [1, \"text-center\"], [1, \"matFieldWidth100\", \"cursorPointer\", \"mt-2\", 3, \"ngClass\", \"appearance\"], [1, \"formLabel\"], [\"matInput\", \"\", \"type\", \"text\", \"placeholder\", \"Example:August 2023 transactions\", \"formControlName\", \"importName\"], [4, \"ngIf\"], [1, \"row\", \"mb-2\"], [\"class\", \"fw-bold\", 4, \"ngIf\"], [\"class\", \"text-center d-flex justify-content-start centerAlignVertical\", 4, \"ngIf\"], [\"formControlName\", \"currencyUnitID\", 3, \"selectionChange\"], [\"placeholderLabel\", \"Search by currency name\", \"noEntriesFoundLabel\", \"No matching currency found.\", 3, \"formControl\"], [3, \"value\", 4, \"ngFor\", \"ngForOf\"], [1, \"col-sm-2\", \"mb-2\", \"justify-content-start\", \"centerAlign\"], [1, \"col-sm-2\"], [\"id\", \"startDateFF\", 1, \"matFieldWidth100\", \"cursorPointer\", \"cursorPointer\", 3, \"ngClass\", \"appearance\", \"click\", \"keydown.enter\", \"keydown.arrowdown\"], [\"matInput\", \"\", \"formControlName\", \"startDate\", \"readonly\", \"\", 1, \"noFocus\", 3, \"matDatepicker\", \"max\", \"dateInput\"], [\"matSuffix\", \"\", 3, \"for\"], [3, \"disabled\", \"closed\"], [\"startDate\", \"\"], [\"id\", \"endDateFF\", 1, \"matFieldWidth100\", \"cursorPointer\", \"cursorPointer\", 3, \"ngClass\", \"appearance\", \"click\", \"keydown.enter\", \"keydown.arrowdown\"], [\"matInput\", \"\", \"formControlName\", \"endDate\", \"readonly\", \"\", 1, \"noFocus\", 3, \"matDatepicker\", \"min\", \"max\", \"dateInput\"], [\"endDate\", \"\"], [\"class\", \"row\", \"formArrayName\", \"inflation\", 4, \"ngIf\"], [1, \"justify-content-end\", \"centerAlignVertical\"], [\"type\", \"button\", 1, \"btn\", \"btn-sm\", \"btn-secondary\", \"me-2\", 3, \"click\"], [\"type\", \"button\", 1, \"btn\", \"btn-sm\", \"btn-success\", \"text-white\", \"me-2\", 3, \"click\"], [\"label\", \"Categorize\"], [\"type\", \"button\", 1, \"d-none\"], [\"refreshBtn\", \"\"], [1, \"fs-4\"], [1, \"fs-5\"], [1, \"float-end\"], [1, \"me-3\", 3, \"searchBy\", \"emitSearch\"], [\"searchBar\", \"\"], [\"class\", \"alert alert-warning roundedBorder\", 4, \"ngIf\"], [1, \"overflowX\", \"customScrollBar\", \"w-100\"], [\"mat-table\", \"\", \"matSort\", \"\", \"matSortActive\", \"recordID\", \"matSortDirection\", \"desc\", \"matSortDisableClear\", \"\", 1, \"w-100\", 3, \"ngClass\", \"dataSource\"], [\"sort\", \"\"], [\"matColumnDef\", \"includeExcludeRecord\"], [\"class\", \"ps-3 date\", \"mat-header-cell\", \"\", 4, \"matHeaderCellDef\"], [\"class\", \"ps-3\", \"mat-cell\", \"\", 3, \"ngClass\", 4, \"matCellDef\"], [\"matColumnDef\", \"recordID\"], [\"class\", \"ps-3 date\", \"mat-header-cell\", \"\", \"mat-sort-header\", \"\", 4, \"matHeaderCellDef\"], [\"matColumnDef\", \"transactionDate\"], [\"matColumnDef\", \"account\"], [\"class\", \"ps-3 account\", \"mat-header-cell\", \"\", 4, \"matHeaderCellDef\"], [\"matColumnDef\", \"supplier\"], [\"class\", \"ps-3 supplier\", \"mat-header-cell\", \"\", 4, \"matHeaderCellDef\"], [\"matColumnDef\", \"amount\"], [\"class\", \"ps-3 amount\", \"mat-header-cell\", \"\", 4, \"matHeaderCellDef\"], [\"formArrayName\", \"categoryValues\"], [\"matColumnDef\", \"categorize\"], [\"class\", \"ps-3 categorize\", \"mat-header-cell\", \"\", 4, \"matHeaderCellDef\"], [\"class\", \"ps-3\", \"mat-cell\", \"\", 3, \"formGroupName\", \"ngClass\", 4, \"matCellDef\"], [\"matColumnDef\", \"activity\"], [\"mat-header-row\", \"\", 4, \"matHeaderRowDef\"], [\"mat-row\", \"\", 4, \"matRowDef\", \"matRowDefColumns\"], [\"class\", \"mat-row\", 4, \"matNoDataRow\"], [\"showFirstLastButtons\", \"\", 1, \"roundedBorder\", 3, \"length\", \"pageSize\", \"pageSizeOptions\"], [\"paginator\", \"\"], [1, \"card-body\", \"pt-2\", \"pb-1\"], [\"type\", \"button\", \"matTooltip\", \"All Categorized records will destroy if you go back.\", \"matTooltipPosition\", \"above\", \"matTooltipClass\", \"infoTooltip\", 1, \"btn\", \"btn-sm\", \"btn-secondary\", \"me-2\", 3, \"click\"], [\"type\", \"button\", \"routerLink\", \"/activity-data/spend-based-method/import-history\", 1, \"btn\", \"btn-sm\", \"btn-warning\", \"me-2\", \"text-white\", 3, \"click\"], [\"type\", \"button\", 1, \"btn\", \"btn-sm\", \"btn-success\", \"me-2\", 3, \"click\"], [\"label\", \"Preview\"], [\"previewRefreshBtn\", \"\"], [1, \"card-body\", \"pt-0\", \"pb-1\"], [1, \"col-sm-12\", \"pt-1\", \"pb-2\"], [\"mat-table\", \"\", \"matSort\", \"\", \"matSortActive\", \"recordID\", \"matSortDirection\", \"desc\", \"matSortDisableClear\", \"\", 1, \"w-100\", 3, \"dataSource\"], [\"previewSort\", \"\"], [\"class\", \"ps-3\", \"mat-cell\", \"\", \"matTooltipPosition\", \"above\", \"matTooltipClass\", \"nameTooltip\", 3, \"ngClass\", \"matTooltip\", 4, \"matCellDef\"], [\"previewPaginator\", \"\"], [\"type\", \"button\", \"matStepperPrevious\", \"\", 1, \"btn\", \"btn-sm\", \"btn-secondary\", \"me-2\"], [\"type\", \"button\", \"routerLink\", \"/activity-data/spend-based-method/import-history\", 1, \"btn\", \"btn-sm\", \"btn-success\", \"text-white\", \"me-2\", 3, \"click\"], [1, \"justify-content-start\", \"centerAlign\", \"fs-5\"], [\"download\", \"\", 3, \"href\"], [1, \"text-center\", \"d-flex\", \"justify-content-start\", \"centerAlignVertical\"], [\"id\", \"fileUpload\", \"type\", \"file\", \"accept\", \".xlsx, .xls\", 1, \"d-none\", 3, \"change\"], [\"fileUpload\", \"\"], [\"type\", \"button\", 1, \"btn\", \"btn-sm\", \"btn-primary\", \"me-2\", 3, \"click\"], [3, \"value\"], [1, \"d-flex\", \"justify-content-between\"], [\"formArrayName\", \"inflation\", 1, \"row\"], [\"class\", \"col-sm-2\", 4, \"ngFor\", \"ngForOf\"], [\"href\", \"https://www.officialdata.org/countries\", \"target\", \"_blank\"], [1, \"text-center\", 3, \"formGroupName\"], [\"matInput\", \"\", \"type\", \"number\", \"placeholder\", \"0.00\", \"min\", \"0\", 3, \"formControlName\"], [1, \"alert\", \"alert-warning\", \"roundedBorder\"], [1, \"bi\", \"flex-shrink-0\", \"me-2\", \"extraInfoCardHeaderIcon\"], [0, \"xlink\", \"href\", \"#exclamation-triangle-fill\"], [2, \"color\", \"#3f6ad8\", \"cursor\", \"pointer\", 3, \"click\"], [\"mat-header-cell\", \"\", 1, \"ps-3\", \"date\"], [\"mat-cell\", \"\", 1, \"ps-3\", 3, \"ngClass\"], [1, \"slideToggleBtn\", 3, \"formControl\"], [\"mat-header-cell\", \"\", \"mat-sort-header\", \"\", 1, \"ps-3\", \"date\"], [\"mat-header-cell\", \"\", 1, \"ps-3\", \"account\"], [\"header\", \"Account\", \"type\", \"multi\", \"value\", \"name\", \"view\", \"name\", \"selectAllLabel\", \"All account\", 3, \"entityList\", \"selectFC\", \"active\", \"resetFlag\", \"multi\"], [\"accountSelect\", \"\"], [\"mat-header-cell\", \"\", 1, \"ps-3\", \"supplier\"], [\"mat-header-cell\", \"\", 1, \"ps-3\", \"amount\"], [\"mat-header-cell\", \"\", 1, \"ps-3\", \"categorize\"], [\"mat-cell\", \"\", 1, \"ps-3\", 3, \"formGroupName\", \"ngClass\"], [1, \"matFieldWidth100\", \"cursorPointer\", \"mt-3\", 3, \"appearance\"], [\"formControlName\", \"categoryStdID\"], [\"placeholderLabel\", \"Search by name\", \"noEntriesFoundLabel\", \"No matching name found.\", 3, \"formControl\"], [\"matTooltipPosition\", \"above\", \"matTooltipClass\", \"nameTooltip\", 3, \"value\", \"matTooltip\", \"click\", 4, \"ngFor\", \"ngForOf\"], [\"matTooltipPosition\", \"above\", \"matTooltipClass\", \"nameTooltip\", 3, \"value\", \"matTooltip\", \"click\"], [\"formControlName\", \"activityStdID\"], [3, \"value\", \"click\", 4, \"ngFor\", \"ngForOf\"], [3, \"value\", \"click\"], [\"mat-header-row\", \"\"], [\"mat-row\", \"\"], [1, \"mat-row\"], [1, \"mat-cell\", \"text-center\"], [\"previewAccountSelect\", \"\"], [\"mat-cell\", \"\", \"matTooltipPosition\", \"above\", \"matTooltipClass\", \"nameTooltip\", 1, \"ps-3\", 3, \"ngClass\", \"matTooltip\"]],\n    template: function ImportDataComponent_Template(rf, ctx) {\n      if (rf & 1) {\n        const _r109 = i0.ɵɵgetCurrentView();\n        i0.ɵɵnamespaceSVG();\n        i0.ɵɵelementStart(0, \"svg\", 0);\n        i0.ɵɵelementStart(1, \"symbol\", 1);\n        i0.ɵɵelement(2, \"path\", 2);\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementEnd();\n        i0.ɵɵnamespaceHTML();\n        i0.ɵɵelementStart(3, \"div\", 3);\n        i0.ɵɵelementStart(4, \"div\", 4);\n        i0.ɵɵelementStart(5, \"div\", 5);\n        i0.ɵɵtext(6, \" Import Records \");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(7, \"div\", 6);\n        i0.ɵɵelementStart(8, \"div\", 7);\n        i0.ɵɵelementStart(9, \"div\", 8);\n        i0.ɵɵelementStart(10, \"mat-stepper\", 9, 10);\n        i0.ɵɵelementStart(12, \"mat-step\", 11);\n        i0.ɵɵelementStart(13, \"form\", 12);\n        i0.ɵɵelementStart(14, \"div\", 13);\n        i0.ɵɵtext(15);\n        i0.ɵɵelementEnd();\n        i0.ɵɵtemplate(16, ImportDataComponent_div_16_Template, 7, 1, \"div\", 14);\n        i0.ɵɵelementStart(17, \"div\", 7);\n        i0.ɵɵelementStart(18, \"div\", 15);\n        i0.ɵɵelementStart(19, \"span\", 16);\n        i0.ɵɵtext(20, \" Import name \");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(21, \"div\", 17);\n        i0.ɵɵelementStart(22, \"div\", 18);\n        i0.ɵɵelementStart(23, \"mat-form-field\", 19);\n        i0.ɵɵelementStart(24, \"mat-label\", 20);\n        i0.ɵɵtext(25, \" Import Name \");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelement(26, \"input\", 21);\n        i0.ɵɵtemplate(27, ImportDataComponent_mat_error_27_Template, 2, 0, \"mat-error\", 22);\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(28, \"div\", 23);\n        i0.ɵɵelementStart(29, \"div\", 15);\n        i0.ɵɵtemplate(30, ImportDataComponent_span_30_Template, 2, 0, \"span\", 24);\n        i0.ɵɵtemplate(31, ImportDataComponent_span_31_Template, 2, 0, \"span\", 24);\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(32, \"div\", 17);\n        i0.ɵɵtemplate(33, ImportDataComponent_div_33_Template, 6, 1, \"div\", 25);\n        i0.ɵɵtemplate(34, ImportDataComponent_div_34_Template, 3, 1, \"div\", 25);\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(35, \"div\", 7);\n        i0.ɵɵelementStart(36, \"div\", 15);\n        i0.ɵɵelementStart(37, \"span\", 16);\n        i0.ɵɵtext(38, \" Currency \");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(39, \"div\", 17);\n        i0.ɵɵelementStart(40, \"div\", 18);\n        i0.ɵɵelementStart(41, \"mat-form-field\", 19);\n        i0.ɵɵelementStart(42, \"mat-label\", 20);\n        i0.ɵɵtext(43, \" Select Currency\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(44, \"mat-select\", 26);\n        i0.ɵɵlistener(\"selectionChange\", function ImportDataComponent_Template_mat_select_selectionChange_44_listener() {\n          return ctx.configureDataFG.controls.startDate.value && ctx.configureDataFG.controls.endDate.value ? ctx.getInflationRate() : \"\";\n        });\n        i0.ɵɵelementStart(45, \"mat-option\");\n        i0.ɵɵelement(46, \"ngx-mat-select-search\", 27);\n        i0.ɵɵelementEnd();\n        i0.ɵɵtemplate(47, ImportDataComponent_mat_option_47_Template, 5, 3, \"mat-option\", 28);\n        i0.ɵɵpipe(48, \"async\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(49, \"mat-error\");\n        i0.ɵɵtext(50, \" Select a currency \");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(51, \"div\", 7);\n        i0.ɵɵelementStart(52, \"div\", 29);\n        i0.ɵɵelementStart(53, \"span\", 16);\n        i0.ɵɵtext(54, \" Accounting period \");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(55, \"div\", 30);\n        i0.ɵɵelementStart(56, \"div\", 18);\n        i0.ɵɵelementStart(57, \"mat-form-field\", 31);\n        i0.ɵɵlistener(\"click\", function ImportDataComponent_Template_mat_form_field_click_57_listener() {\n          i0.ɵɵrestoreView(_r109);\n          const _r8 = i0.ɵɵreference(63);\n          return ctx.dateService.openDatepickerOnClick(_r8);\n        })(\"keydown.enter\", function ImportDataComponent_Template_mat_form_field_keydown_enter_57_listener() {\n          i0.ɵɵrestoreView(_r109);\n          const _r8 = i0.ɵɵreference(63);\n          return ctx.dateService.openDatepickerOnClick(_r8);\n        })(\"keydown.arrowdown\", function ImportDataComponent_Template_mat_form_field_keydown_arrowdown_57_listener() {\n          i0.ɵɵrestoreView(_r109);\n          const _r8 = i0.ɵɵreference(63);\n          return ctx.dateService.openDatepickerOnClick(_r8);\n        });\n        i0.ɵɵelementStart(58, \"mat-label\", 20);\n        i0.ɵɵtext(59, \"Start date\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(60, \"input\", 32);\n        i0.ɵɵlistener(\"dateInput\", function ImportDataComponent_Template_input_dateInput_60_listener($event) {\n          return ctx.formatDate($event.value, \"startDate\");\n        });\n        i0.ɵɵelementEnd();\n        i0.ɵɵelement(61, \"mat-datepicker-toggle\", 33);\n        i0.ɵɵelementStart(62, \"mat-datepicker\", 34, 35);\n        i0.ɵɵlistener(\"closed\", function ImportDataComponent_Template_mat_datepicker_closed_62_listener() {\n          ctx.dateService.takeFocusAway(\"startDateFF\");\n          return ctx.configureDataFG.controls.endDate.value && ctx.configureDataFG.controls.currencyUnitID.value ? ctx.getInflationRate() : \"\";\n        });\n        i0.ɵɵelementEnd();\n        i0.ɵɵtemplate(64, ImportDataComponent_mat_error_64_Template, 2, 0, \"mat-error\", 22);\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(65, \"div\", 30);\n        i0.ɵɵelementStart(66, \"div\", 18);\n        i0.ɵɵelementStart(67, \"mat-form-field\", 36);\n        i0.ɵɵlistener(\"click\", function ImportDataComponent_Template_mat_form_field_click_67_listener() {\n          i0.ɵɵrestoreView(_r109);\n          const _r10 = i0.ɵɵreference(73);\n          return ctx.dateService.openDatepickerOnClick(_r10);\n        })(\"keydown.enter\", function ImportDataComponent_Template_mat_form_field_keydown_enter_67_listener() {\n          i0.ɵɵrestoreView(_r109);\n          const _r10 = i0.ɵɵreference(73);\n          return ctx.dateService.openDatepickerOnClick(_r10);\n        })(\"keydown.arrowdown\", function ImportDataComponent_Template_mat_form_field_keydown_arrowdown_67_listener() {\n          i0.ɵɵrestoreView(_r109);\n          const _r10 = i0.ɵɵreference(73);\n          return ctx.dateService.openDatepickerOnClick(_r10);\n        });\n        i0.ɵɵelementStart(68, \"mat-label\", 20);\n        i0.ɵɵtext(69, \"End date\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(70, \"input\", 37);\n        i0.ɵɵlistener(\"dateInput\", function ImportDataComponent_Template_input_dateInput_70_listener($event) {\n          return ctx.formatDate($event.value, \"endDate\");\n        });\n        i0.ɵɵelementEnd();\n        i0.ɵɵelement(71, \"mat-datepicker-toggle\", 33);\n        i0.ɵɵelementStart(72, \"mat-datepicker\", 34, 38);\n        i0.ɵɵlistener(\"closed\", function ImportDataComponent_Template_mat_datepicker_closed_72_listener() {\n          ctx.dateService.takeFocusAway(\"endDateFF\");\n          return ctx.configureDataFG.controls.startDate.value && ctx.configureDataFG.controls.currencyUnitID.value ? ctx.getInflationRate() : \"\";\n        });\n        i0.ɵɵelementEnd();\n        i0.ɵɵtemplate(74, ImportDataComponent_mat_error_74_Template, 2, 0, \"mat-error\", 22);\n        i0.ɵɵtemplate(75, ImportDataComponent_mat_error_75_Template, 2, 0, \"mat-error\", 22);\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementEnd();\n        i0.ɵɵtemplate(76, ImportDataComponent_div_76_Template, 10, 1, \"div\", 39);\n        i0.ɵɵelementStart(77, \"div\", 7);\n        i0.ɵɵelementStart(78, \"div\", 40);\n        i0.ɵɵelementStart(79, \"button\", 41);\n        i0.ɵɵlistener(\"click\", function ImportDataComponent_Template_button_click_79_listener() {\n          return ctx.cancelButtonAction();\n        });\n        i0.ɵɵtext(80, \" Cancel \");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(81, \"button\", 42);\n        i0.ɵɵlistener(\"click\", function ImportDataComponent_Template_button_click_81_listener() {\n          return ctx.isConfigEdit || ctx.isConfigureBack ? ctx.updateConfiguredData() : ctx.saveConfigureData();\n        });\n        i0.ɵɵtext(82, \" Next \");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(83, \"mat-step\", 43);\n        i0.ɵɵelementStart(84, \"button\", 44, 45);\n        i0.ɵɵtext(86, \"refresh\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(87, \"form\", 12);\n        i0.ɵɵelementStart(88, \"div\", 13);\n        i0.ɵɵelementStart(89, \"span\", 46);\n        i0.ɵɵtext(90);\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(91, \"span\", 47);\n        i0.ɵɵtext(92);\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(93, \"div\", 48);\n        i0.ɵɵelementStart(94, \"lib-search-bar-one\", 49, 50);\n        i0.ɵɵlistener(\"emitSearch\", function ImportDataComponent_Template_lib_search_bar_one_emitSearch_94_listener($event) {\n          return ctx.categorizeSearchFn($event);\n        });\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementEnd();\n        i0.ɵɵtemplate(96, ImportDataComponent_div_96_Template, 7, 0, \"div\", 51);\n        i0.ɵɵelementStart(97, \"div\", 52);\n        i0.ɵɵelementStart(98, \"table\", 53, 54);\n        i0.ɵɵelementContainerStart(100, 55);\n        i0.ɵɵtemplate(101, ImportDataComponent_th_101_Template, 2, 0, \"th\", 56);\n        i0.ɵɵtemplate(102, ImportDataComponent_td_102_Template, 2, 4, \"td\", 57);\n        i0.ɵɵelementContainerEnd();\n        i0.ɵɵelementContainerStart(103, 58);\n        i0.ɵɵtemplate(104, ImportDataComponent_th_104_Template, 2, 0, \"th\", 59);\n        i0.ɵɵtemplate(105, ImportDataComponent_td_105_Template, 2, 4, \"td\", 57);\n        i0.ɵɵelementContainerEnd();\n        i0.ɵɵelementContainerStart(106, 60);\n        i0.ɵɵtemplate(107, ImportDataComponent_th_107_Template, 2, 0, \"th\", 56);\n        i0.ɵɵtemplate(108, ImportDataComponent_td_108_Template, 2, 4, \"td\", 57);\n        i0.ɵɵelementContainerEnd();\n        i0.ɵɵelementContainerStart(109, 61);\n        i0.ɵɵtemplate(110, ImportDataComponent_th_110_Template, 4, 4, \"th\", 62);\n        i0.ɵɵtemplate(111, ImportDataComponent_td_111_Template, 2, 2, \"td\", 57);\n        i0.ɵɵelementContainerEnd();\n        i0.ɵɵelementContainerStart(112, 63);\n        i0.ɵɵtemplate(113, ImportDataComponent_th_113_Template, 2, 0, \"th\", 64);\n        i0.ɵɵtemplate(114, ImportDataComponent_td_114_Template, 2, 2, \"td\", 57);\n        i0.ɵɵelementContainerEnd();\n        i0.ɵɵelementContainerStart(115, 65);\n        i0.ɵɵtemplate(116, ImportDataComponent_th_116_Template, 2, 1, \"th\", 66);\n        i0.ɵɵtemplate(117, ImportDataComponent_td_117_Template, 2, 2, \"td\", 57);\n        i0.ɵɵelementContainerEnd();\n        i0.ɵɵelementContainerStart(118, 67);\n        i0.ɵɵelementContainerStart(119, 68);\n        i0.ɵɵtemplate(120, ImportDataComponent_th_120_Template, 2, 0, \"th\", 69);\n        i0.ɵɵtemplate(121, ImportDataComponent_td_121_Template, 11, 7, \"td\", 70);\n        i0.ɵɵelementContainerEnd();\n        i0.ɵɵelementContainerStart(122, 71);\n        i0.ɵɵtemplate(123, ImportDataComponent_th_123_Template, 2, 0, \"th\", 69);\n        i0.ɵɵtemplate(124, ImportDataComponent_td_124_Template, 11, 7, \"td\", 70);\n        i0.ɵɵelementContainerEnd();\n        i0.ɵɵelementContainerEnd();\n        i0.ɵɵtemplate(125, ImportDataComponent_tr_125_Template, 1, 0, \"tr\", 72);\n        i0.ɵɵtemplate(126, ImportDataComponent_tr_126_Template, 1, 0, \"tr\", 73);\n        i0.ɵɵtemplate(127, ImportDataComponent_tr_127_Template, 3, 2, \"tr\", 74);\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementEnd();\n        i0.ɵɵelement(128, \"mat-paginator\", 75, 76);\n        i0.ɵɵelementStart(130, \"div\", 77);\n        i0.ɵɵelementStart(131, \"div\", 7);\n        i0.ɵɵelementStart(132, \"div\", 40);\n        i0.ɵɵelementStart(133, \"button\", 41);\n        i0.ɵɵlistener(\"click\", function ImportDataComponent_Template_button_click_133_listener() {\n          return ctx.cancelButtonAction();\n        });\n        i0.ɵɵtext(134, \" Cancel \");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(135, \"button\", 78);\n        i0.ɵɵlistener(\"click\", function ImportDataComponent_Template_button_click_135_listener() {\n          return ctx.gotoBackPage();\n        });\n        i0.ɵɵtext(136, \" Back \");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(137, \"button\", 79);\n        i0.ɵɵlistener(\"click\", function ImportDataComponent_Template_button_click_137_listener() {\n          return ctx.saveCategoryRecordsData(\"DRAFT\");\n        });\n        i0.ɵɵtext(138, \" Save as draft \");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(139, \"button\", 80);\n        i0.ɵɵlistener(\"click\", function ImportDataComponent_Template_button_click_139_listener() {\n          return ctx.saveCategoryRecordsData(\"DONE\");\n        });\n        i0.ɵɵtext(140, \" Save and next \");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(141, \"mat-step\", 81);\n        i0.ɵɵelementStart(142, \"button\", 44, 82);\n        i0.ɵɵtext(144, \"refresh\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(145, \"div\", 83);\n        i0.ɵɵelementStart(146, \"div\", 84);\n        i0.ɵɵelementStart(147, \"div\", 48);\n        i0.ɵɵelementStart(148, \"lib-search-bar-one\", 49, 50);\n        i0.ɵɵlistener(\"emitSearch\", function ImportDataComponent_Template_lib_search_bar_one_emitSearch_148_listener($event) {\n          return ctx.previewSearchFn($event);\n        });\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementEnd();\n        i0.ɵɵtemplate(150, ImportDataComponent_div_150_Template, 7, 0, \"div\", 51);\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(151, \"div\", 52);\n        i0.ɵɵelementStart(152, \"table\", 85, 86);\n        i0.ɵɵelementContainerStart(154, 58);\n        i0.ɵɵtemplate(155, ImportDataComponent_th_155_Template, 2, 0, \"th\", 59);\n        i0.ɵɵtemplate(156, ImportDataComponent_td_156_Template, 2, 4, \"td\", 57);\n        i0.ɵɵelementContainerEnd();\n        i0.ɵɵelementContainerStart(157, 60);\n        i0.ɵɵtemplate(158, ImportDataComponent_th_158_Template, 2, 0, \"th\", 56);\n        i0.ɵɵtemplate(159, ImportDataComponent_td_159_Template, 2, 4, \"td\", 57);\n        i0.ɵɵelementContainerEnd();\n        i0.ɵɵelementContainerStart(160, 61);\n        i0.ɵɵtemplate(161, ImportDataComponent_th_161_Template, 4, 4, \"th\", 62);\n        i0.ɵɵtemplate(162, ImportDataComponent_td_162_Template, 2, 2, \"td\", 57);\n        i0.ɵɵelementContainerEnd();\n        i0.ɵɵelementContainerStart(163, 63);\n        i0.ɵɵtemplate(164, ImportDataComponent_th_164_Template, 2, 0, \"th\", 64);\n        i0.ɵɵtemplate(165, ImportDataComponent_td_165_Template, 2, 2, \"td\", 57);\n        i0.ɵɵelementContainerEnd();\n        i0.ɵɵelementContainerStart(166, 65);\n        i0.ɵɵtemplate(167, ImportDataComponent_th_167_Template, 2, 1, \"th\", 66);\n        i0.ɵɵtemplate(168, ImportDataComponent_td_168_Template, 2, 2, \"td\", 57);\n        i0.ɵɵelementContainerEnd();\n        i0.ɵɵelementContainerStart(169, 68);\n        i0.ɵɵtemplate(170, ImportDataComponent_th_170_Template, 2, 0, \"th\", 69);\n        i0.ɵɵtemplate(171, ImportDataComponent_td_171_Template, 3, 6, \"td\", 87);\n        i0.ɵɵelementContainerEnd();\n        i0.ɵɵelementContainerStart(172, 71);\n        i0.ɵɵtemplate(173, ImportDataComponent_th_173_Template, 2, 0, \"th\", 69);\n        i0.ɵɵtemplate(174, ImportDataComponent_td_174_Template, 3, 6, \"td\", 87);\n        i0.ɵɵelementContainerEnd();\n        i0.ɵɵtemplate(175, ImportDataComponent_tr_175_Template, 1, 0, \"tr\", 72);\n        i0.ɵɵtemplate(176, ImportDataComponent_tr_176_Template, 1, 0, \"tr\", 73);\n        i0.ɵɵtemplate(177, ImportDataComponent_tr_177_Template, 3, 2, \"tr\", 74);\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementEnd();\n        i0.ɵɵelement(178, \"mat-paginator\", 75, 88);\n        i0.ɵɵelementStart(180, \"div\", 7);\n        i0.ɵɵelementStart(181, \"div\", 40);\n        i0.ɵɵelementStart(182, \"button\", 89);\n        i0.ɵɵtext(183, \" Back \");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(184, \"button\", 90);\n        i0.ɵɵlistener(\"click\", function ImportDataComponent_Template_button_click_184_listener() {\n          return ctx.submitPreviewData(\"DONE\");\n        });\n        i0.ɵɵtext(185, \" Submit \");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementEnd();\n      }\n      if (rf & 2) {\n        const _r8 = i0.ɵɵreference(63);\n        const _r10 = i0.ɵɵreference(73);\n        i0.ɵɵadvance(13);\n        i0.ɵɵproperty(\"formGroup\", ctx.configureDataFG);\n        i0.ɵɵadvance(2);\n        i0.ɵɵtextInterpolate1(\" \", ctx.methodName, \" \");\n        i0.ɵɵadvance(1);\n        i0.ɵɵproperty(\"ngIf\", ctx.isConfigEdit != ctx.CARBON_CONSTANT.YES && ctx.isConfigEdit != ctx.CARBON_CONSTANT.NO || ctx.isConfigEdit == ctx.CARBON_CONSTANT.YES && !(ctx.configuredData == null ? null : ctx.configuredData.configuredData));\n        i0.ɵɵadvance(7);\n        i0.ɵɵproperty(\"ngClass\", ctx.isConfigEdit == ctx.CARBON_CONSTANT.NO ? \"noFocus\" : \"none\")(\"appearance\", ctx.MaterialFormFieldAppearance.FORM_FIELD_APPEARANCE);\n        i0.ɵɵadvance(4);\n        i0.ɵɵproperty(\"ngIf\", ctx.configureDataFG.controls[\"importName\"].invalid);\n        i0.ɵɵadvance(3);\n        i0.ɵɵproperty(\"ngIf\", ctx.isConfigEdit != ctx.CARBON_CONSTANT.YES && ctx.isConfigEdit != ctx.CARBON_CONSTANT.NO && !ctx.isConfigureBack || ctx.isConfigEdit == ctx.CARBON_CONSTANT.YES && !(ctx.configuredData == null ? null : ctx.configuredData.configuredData) && !ctx.isConfigureBack);\n        i0.ɵɵadvance(1);\n        i0.ɵɵproperty(\"ngIf\", ctx.isConfigEdit == ctx.CARBON_CONSTANT.NO || ctx.isConfigEdit === ctx.CARBON_CONSTANT.YES && (ctx.configuredData == null ? null : ctx.configuredData.configuredData) || ctx.isConfigureBack);\n        i0.ɵɵadvance(2);\n        i0.ɵɵproperty(\"ngIf\", ctx.isConfigEdit != ctx.CARBON_CONSTANT.YES && ctx.isConfigEdit != ctx.CARBON_CONSTANT.NO && !ctx.isConfigureBack || ctx.isConfigEdit == ctx.CARBON_CONSTANT.YES && !(ctx.configuredData == null ? null : ctx.configuredData.configuredData) && !ctx.isConfigureBack);\n        i0.ɵɵadvance(1);\n        i0.ɵɵproperty(\"ngIf\", ctx.isConfigEdit === ctx.CARBON_CONSTANT.NO || ctx.isConfigEdit === ctx.CARBON_CONSTANT.YES && (ctx.configuredData == null ? null : ctx.configuredData.configuredData) || ctx.isConfigureBack);\n        i0.ɵɵadvance(7);\n        i0.ɵɵproperty(\"ngClass\", i0.ɵɵpureFunction1(55, _c11, ctx.isConfigEdit && !(ctx.isConfigEdit == ctx.CARBON_CONSTANT.YES && (ctx.configuredData == null ? null : ctx.configuredData.configuredData) == null) || ctx.isConfigEdit == ctx.CARBON_CONSTANT.NO || ctx.isConfigureBack))(\"appearance\", ctx.MaterialFormFieldAppearance.FORM_FIELD_APPEARANCE);\n        i0.ɵɵadvance(5);\n        i0.ɵɵproperty(\"formControl\", ctx.currencySearchUtil.filterFC);\n        i0.ɵɵadvance(1);\n        i0.ɵɵproperty(\"ngForOf\", i0.ɵɵpipeBind1(48, 53, ctx.currencySearchUtil.filteredEntities));\n        i0.ɵɵadvance(10);\n        i0.ɵɵproperty(\"ngClass\", ctx.isConfigEdit == ctx.CARBON_CONSTANT.NO ? \"noFocus\" : \"none\")(\"appearance\", ctx.MaterialFormFieldAppearance.FORM_FIELD_APPEARANCE);\n        i0.ɵɵadvance(3);\n        i0.ɵɵproperty(\"matDatepicker\", _r8)(\"max\", ctx.today);\n        i0.ɵɵadvance(1);\n        i0.ɵɵproperty(\"for\", _r8);\n        i0.ɵɵadvance(1);\n        i0.ɵɵproperty(\"disabled\", false);\n        i0.ɵɵadvance(2);\n        i0.ɵɵproperty(\"ngIf\", ctx.errorHandling(\"startDate\", \"required\"));\n        i0.ɵɵadvance(3);\n        i0.ɵɵproperty(\"ngClass\", ctx.isConfigEdit == ctx.CARBON_CONSTANT.NO ? \"noFocus\" : \"none\")(\"appearance\", ctx.MaterialFormFieldAppearance.FORM_FIELD_APPEARANCE);\n        i0.ɵɵadvance(3);\n        i0.ɵɵproperty(\"matDatepicker\", _r10)(\"min\", ctx.startDateValue)(\"max\", ctx.today);\n        i0.ɵɵadvance(1);\n        i0.ɵɵproperty(\"for\", _r10);\n        i0.ɵɵadvance(1);\n        i0.ɵɵproperty(\"disabled\", false);\n        i0.ɵɵadvance(2);\n        i0.ɵɵproperty(\"ngIf\", ctx.errorHandling(\"endDate\", \"required\"));\n        i0.ɵɵadvance(1);\n        i0.ɵɵproperty(\"ngIf\", ctx.errorHandling(\"endDate\", \"matDatepickerMin\"));\n        i0.ɵɵadvance(1);\n        i0.ɵɵproperty(\"ngIf\", ctx.isInflation && ctx.inflationRate.length > 0);\n        i0.ɵɵadvance(11);\n        i0.ɵɵproperty(\"formGroup\", ctx.categorizeDataFG);\n        i0.ɵɵadvance(3);\n        i0.ɵɵtextInterpolate2(\" \", ctx.totalCategorizedRecord, \"/\", ctx.resultLength, \" \");\n        i0.ɵɵadvance(2);\n        i0.ɵɵtextInterpolate2(\" records categorised from \", ctx.startRecordDate, \" to \", ctx.endRecordDate, \" \");\n        i0.ɵɵadvance(2);\n        i0.ɵɵproperty(\"searchBy\", \"supplier\");\n        i0.ɵɵadvance(2);\n        i0.ɵɵproperty(\"ngIf\", ctx.showMessage === \"YES\");\n        i0.ɵɵadvance(2);\n        i0.ɵɵproperty(\"ngClass\", ctx.isCategorizeEdit == ctx.CARBON_CONSTANT.NO ? \"noFocus\" : \"none\")(\"dataSource\", ctx.dataSource);\n        i0.ɵɵadvance(27);\n        i0.ɵɵproperty(\"matHeaderRowDef\", ctx.displayedColumns);\n        i0.ɵɵadvance(1);\n        i0.ɵɵproperty(\"matRowDefColumns\", ctx.displayedColumns);\n        i0.ɵɵadvance(2);\n        i0.ɵɵproperty(\"length\", ctx.resultLength)(\"pageSize\", ctx.TABLE_CONSTANT.DEFAULT_PAGE_SIZE)(\"pageSizeOptions\", ctx.TABLE_CONSTANT.PAGE_SIZE_OPTION);\n        i0.ɵɵadvance(20);\n        i0.ɵɵproperty(\"searchBy\", \"supplier\");\n        i0.ɵɵadvance(2);\n        i0.ɵɵproperty(\"ngIf\", ctx.showMessage === \"YES\");\n        i0.ɵɵadvance(2);\n        i0.ɵɵproperty(\"dataSource\", ctx.previewDataSource);\n        i0.ɵɵadvance(23);\n        i0.ɵɵproperty(\"matHeaderRowDef\", ctx.previewDisplayedColumns);\n        i0.ɵɵadvance(1);\n        i0.ɵɵproperty(\"matRowDefColumns\", ctx.previewDisplayedColumns);\n        i0.ɵɵadvance(2);\n        i0.ɵɵproperty(\"length\", ctx.previewResultLength)(\"pageSize\", ctx.TABLE_CONSTANT.DEFAULT_PAGE_SIZE)(\"pageSizeOptions\", ctx.TABLE_CONSTANT.PAGE_SIZE_OPTION);\n      }\n    },\n    directives: [i11.MatStepper, i11.MatStep, i4.ɵNgNoValidate, i4.NgControlStatusGroup, i4.FormGroupDirective, i3.NgIf, i12.MatFormField, i3.NgClass, i12.MatLabel, i13.MatInput, i4.DefaultValueAccessor, i4.NgControlStatus, i4.FormControlName, i14.MatSelect, i15.MatOption, i16.MatSelectSearchComponent, i4.FormControlDirective, i3.NgForOf, i12.MatError, i17.MatDatepickerInput, i17.MatDatepickerToggle, i12.MatSuffix, i17.MatDatepicker, i18.SearchBarOneComponent, i19.MatTable, i20.MatSort, i19.MatColumnDef, i19.MatHeaderCellDef, i19.MatCellDef, i4.FormArrayName, i19.MatHeaderRowDef, i19.MatRowDef, i19.MatNoDataRow, i21.MatPaginator, i22.MatTooltip, i1.RouterLink, i11.MatStepperPrevious, i4.FormGroupName, i4.MinValidator, i4.NumberValueAccessor, i19.MatHeaderCell, i19.MatCell, i23.MatSlideToggle, i20.MatSortHeader, i18.FunnelFilterComponent, i19.MatHeaderRow, i19.MatRow],\n    pipes: [i3.AsyncPipe, i18.EllipsisPipeService],\n    styles: [\".mat-horizontal-stepper-header{pointer-events:none!important}  .mat-stepper-horizontal{display:flex;justify-content:center}  .mat-step-header{width:100%!important}  .mat-stepper-horizontal .mat-horizontal-stepper-header-container{display:flex;justify-content:space-between;align-items:center}  .mat-step-header{background-color:transparent!important}.date[_ngcontent-%COMP%]{min-width:120px}.account[_ngcontent-%COMP%]{min-width:150px}.supplier[_ngcontent-%COMP%]{min-width:150px}.amount[_ngcontent-%COMP%]{min-width:150px}.categorize[_ngcontent-%COMP%]{min-width:150px}.funnelFilterDD[_ngcontent-%COMP%]{width:0;height:0;overflow:hidden}.applyBtn[_ngcontent-%COMP%]{height:25px;width:100px;padding:0 10px;position:sticky;right:7px;bottom:10px}.noFocusCategory[_ngcontent-%COMP%]{pointer-events:none;color:gray!important}\"]\n  });\n  return ImportDataComponent;\n})();","map":null,"metadata":{},"sourceType":"module"}