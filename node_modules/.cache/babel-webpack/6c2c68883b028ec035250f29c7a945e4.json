{"ast":null,"code":"import { RouterOutlet } from '@angular/router';\nimport { InvalidForm } from '@library/tsc-common';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/router\";\nimport * as i2 from \"@library/storage-service\";\nimport * as i3 from \"@library/toastr-service\";\nimport * as i4 from \"@carbon/controller/custom-factor.controller\";\nimport * as i5 from \"@carbon/controller/custom-factor-version.controller\";\nimport * as i6 from \"@angular/material/card\";\nimport * as i7 from \"./detail/detail.component\";\nimport * as i8 from \"./source/source.component\";\nconst _c0 = [\"detail\"];\nconst _c1 = [\"source\"];\nconst _c2 = [\"valueOutlet\"];\nconst _c3 = [\"referenceOutlet\"];\nexport let FactorComponent = /*#__PURE__*/(() => {\n  class FactorComponent {\n    constructor(router, storageService, activatedRoute, toastrService, customFactorController, customFactorVersionController) {\n      this.router = router;\n      this.activatedRoute = activatedRoute;\n      this.toastrService = toastrService;\n      this.customFactorController = customFactorController;\n      this.customFactorVersionController = customFactorVersionController;\n      this.title = 'Create custom emission factor';\n      this.isFactor = true;\n      this.isUpdate = false;\n      this.customFactorType = 'emission';\n      this.factorDatabaseType = 'custom-emission-factor';\n      this.cef_emission_Json = {};\n      this.currentOrgID = storageService.getStorage(['currentOrgID']);\n    }\n    ngOnInit() {\n      this.activatedRoute.params.subscribe(params => {\n        this.factorDatabaseType = params['factorDatabaseType'];\n        if (this.factorDatabaseType == 'custom-estimation-factor') {\n          this.customFactorType = 'estimation';\n        }\n        this.title = `Create custom ${this.customFactorType} factor`;\n        this.redirectUrl = `/carbon-setting/factor-database/${this.factorDatabaseType}/custom/${this.customFactorType}/database/${params['cefDB']}/${params['cefDBID']}/factor`;\n        if (params['factorID']) {\n          this.isFactor = false;\n          this.factorID = params['factorID'];\n          let factorName = decodeURIComponent(params['factorName']);\n          this.title = `Create custom ${this.customFactorType} factor version`;\n          this.redirectUrl += `/${factorName}/${this.factorID}/version`;\n          this.getFactorByID(this.factorID);\n          if (params['versionID']) {\n            this.isUpdate = true;\n            this.versionID = params['versionID'];\n            this.getVersionByID(this.versionID);\n            this.title = `Update custom ${this.customFactorType} factor version`;\n          }\n        }\n      });\n    }\n    setValue(value) {\n      this.value = value;\n    }\n    setReference(referenceData) {\n      this.referenceData = referenceData;\n    }\n    getFactorByID(factorID) {\n      this.customFactorController.getFactorByID(this.currentOrgID, factorID).subscribe(cefRes => {\n        this.detail.patchFactorDetails(cefRes['details']);\n        this.referenceData.patchReference(cefRes['referenceData']);\n      }, error => {\n        console.log('error in getFactorByID() -', error);\n      });\n    }\n    getVersionByID(versionID) {\n      this.customFactorVersionController.getVersionByID(this.currentOrgID, versionID).subscribe(response => {\n        this.patchVersion(response);\n      }, error => {\n        console.log('error in getVersionByID -', error);\n      });\n    }\n    patchVersion(version) {\n      let _factor_value_key = this.customFactorType == 'estimation' ? 'estimationValues' : 'values';\n      this.detail.patchDetails(version['details']);\n      this.value.patchValue(version[_factor_value_key]);\n      this.source.patchSource(version['source']);\n    }\n    isCEFValid() {\n      var _a, _b, _c, _d;\n      (_a = this.value) === null || _a === void 0 ? void 0 : _a.isValidForm();\n      (_b = this.detail) === null || _b === void 0 ? void 0 : _b.isValidForm();\n      (_c = this.source) === null || _c === void 0 ? void 0 : _c.isValidForm();\n      (_d = this.referenceData) === null || _d === void 0 ? void 0 : _d.isValidForm();\n      if (!(this.detail.isValidForm() && this.referenceData.isValidForm() && this.source.isValidForm() && this.value.isValidForm())) {\n        this.toastrService.error(InvalidForm.INVALID_FORM_MESSAGE);\n        return;\n      }\n      if (this.isFactor) {\n        this.createCEFFactor();\n      } else {\n        if (this.isUpdate) this.updateCEFVersion();else this.createCEFVersion();\n      }\n    }\n    getFormData() {\n      this.formData = new FormData();\n      let _factor_value_key = this.customFactorType == 'estimation' ? 'estimationValues' : 'values';\n      this.cef_emission_Json['details'] = this.detail.detailFG.value;\n      this.cef_emission_Json['source'] = this.source.sourceFG.value;\n      this.cef_emission_Json[_factor_value_key] = this.value.getValuesJson();\n      this.cef_emission_Json['referenceData'] = this.referenceData.referenceDataFG.value;\n      this.formData.append('emission', JSON.stringify(this.cef_emission_Json));\n      this.formData.append('sourceFile', this.source.file);\n      return this.formData;\n    }\n    createCEFFactor() {\n      this.customFactorController.createFactor(this.currentOrgID, this.getFormData()).subscribe(res => {\n        /* TODO_PN add this error case when name already exists */\n        // if (res['result'] == globalConstant['HTTP_ERROR']) {\n        //     this.detail.detailFG.get('name').setErrors({ alreadyExists: true });\n        // this.toastrService.openToast(res['title'], res['message'], res['result']);\n        //     return;\n        // } else \n        this.router.navigate([this.redirectUrl]);\n      }, error => {\n        console.log('error in createCEFFactor() -', error);\n      });\n    }\n    createCEFVersion() {\n      this.customFactorVersionController.createVersion(this.currentOrgID, this.factorID, this.getFormData()).subscribe(res => {\n        /* TODO_PN add this error case when name already exists */\n        // if (res['result'] == globalConstant['HTTP_ERROR']) {\n        //     this.detail.detailFG.get('versionName').setErrors({ nameAlreadyExists: true });\n        //     return;\n        // } else \n        this.router.navigate([this.redirectUrl]);\n      }, error => {\n        console.log('error in createCEFVersion() -', error);\n      });\n    }\n    updateCEFVersion() {\n      this.customFactorVersionController.updateVersion(this.currentOrgID, this.factorID, this.versionID, this.getFormData()).subscribe(res => {\n        /* TODO_PN add this error case when name already exists */\n        // if (res['result'] == globalConstant['HTTP_ERROR']) {\n        //     this.detail.detailFG.get('versionName').setErrors({ nameAlreadyExists: true });\n        // this.toastrService.openToast(res['title'], res['message'], res['result']);\n        //     return;\n        // } else \n        this.router.navigate([this.redirectUrl]);\n      }, error => {\n        console.log('error in createCEFVersion() -', error);\n      });\n    }\n  }\n  FactorComponent.ɵfac = function FactorComponent_Factory(t) {\n    return new (t || FactorComponent)(i0.ɵɵdirectiveInject(i1.Router), i0.ɵɵdirectiveInject(i2.StorageService), i0.ɵɵdirectiveInject(i1.ActivatedRoute), i0.ɵɵdirectiveInject(i3.ToastrService), i0.ɵɵdirectiveInject(i4.CustomFactorController), i0.ɵɵdirectiveInject(i5.CustomFactorVersionController));\n  };\n  FactorComponent.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n    type: FactorComponent,\n    selectors: [[\"app-factor\"]],\n    viewQuery: function FactorComponent_Query(rf, ctx) {\n      if (rf & 1) {\n        i0.ɵɵviewQuery(_c0, 5);\n        i0.ɵɵviewQuery(_c1, 5);\n        i0.ɵɵviewQuery(_c2, 5, RouterOutlet);\n        i0.ɵɵviewQuery(_c3, 5, RouterOutlet);\n      }\n      if (rf & 2) {\n        let _t;\n        i0.ɵɵqueryRefresh(_t = i0.ɵɵloadQuery()) && (ctx.detail = _t.first);\n        i0.ɵɵqueryRefresh(_t = i0.ɵɵloadQuery()) && (ctx.source = _t.first);\n        i0.ɵɵqueryRefresh(_t = i0.ɵɵloadQuery()) && (ctx.valueRO = _t.first);\n        i0.ɵɵqueryRefresh(_t = i0.ɵɵloadQuery()) && (ctx.referenceRO = _t.first);\n      }\n    },\n    decls: 24,\n    vars: 3,\n    consts: [[1, \"cardOverwrite\", \"h100\"], [1, \"col-sm-10\", \"card-title\", \"mb-3\", \"ms-1\"], [1, \"pageTitle\"], [1, \"row\", \"mb-3\"], [1, \"col-sm-6\"], [\"detail\", \"\"], [1, \"row\"], [1, \"col-sm-12\"], [\"name\", \"value\", 3, \"activate\"], [\"valueOutlet\", \"\"], [1, \"col-sm-12\", \"mt-3\"], [\"source\", \"\"], [\"name\", \"reference\", 3, \"activate\"], [\"referenceOutlet\", \"\"], [\"align\", \"end\", 1, \"mt-3\"], [1, \"button\", \"btn\", \"btn-secondary\", \"me-2\", 3, \"routerLink\"], [1, \"button\", \"btn\", \"btn-primary\", 3, \"click\"]],\n    template: function FactorComponent_Template(rf, ctx) {\n      if (rf & 1) {\n        i0.ɵɵelementStart(0, \"mat-card\", 0);\n        i0.ɵɵelementStart(1, \"div\", 1);\n        i0.ɵɵelementStart(2, \"div\", 2);\n        i0.ɵɵtext(3);\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(4, \"div\", 3);\n        i0.ɵɵelementStart(5, \"div\", 4);\n        i0.ɵɵelement(6, \"factor-detail\", null, 5);\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(8, \"div\", 4);\n        i0.ɵɵelementStart(9, \"div\", 6);\n        i0.ɵɵelementStart(10, \"div\", 7);\n        i0.ɵɵelementStart(11, \"router-outlet\", 8, 9);\n        i0.ɵɵlistener(\"activate\", function FactorComponent_Template_router_outlet_activate_11_listener($event) {\n          return ctx.setValue($event);\n        });\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(13, \"div\", 10);\n        i0.ɵɵelement(14, \"factor-source\", null, 11);\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(16, \"div\", 6);\n        i0.ɵɵelementStart(17, \"router-outlet\", 12, 13);\n        i0.ɵɵlistener(\"activate\", function FactorComponent_Template_router_outlet_activate_17_listener($event) {\n          return ctx.setReference($event);\n        });\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(19, \"div\", 14);\n        i0.ɵɵelementStart(20, \"button\", 15);\n        i0.ɵɵtext(21, \" Cancel \");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(22, \"button\", 16);\n        i0.ɵɵlistener(\"click\", function FactorComponent_Template_button_click_22_listener() {\n          return ctx.isCEFValid();\n        });\n        i0.ɵɵtext(23);\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementEnd();\n      }\n      if (rf & 2) {\n        i0.ɵɵadvance(3);\n        i0.ɵɵtextInterpolate1(\" \", ctx.title, \" \");\n        i0.ɵɵadvance(17);\n        i0.ɵɵproperty(\"routerLink\", ctx.redirectUrl);\n        i0.ɵɵadvance(3);\n        i0.ɵɵtextInterpolate1(\" \", ctx.isUpdate ? \"Update\" : \"Create\", \" \");\n      }\n    },\n    directives: [i6.MatCard, i7.DetailComponent, i1.RouterOutlet, i8.SourceComponent, i1.RouterLink],\n    encapsulation: 2\n  });\n  return FactorComponent;\n})();","map":null,"metadata":{},"sourceType":"module"}