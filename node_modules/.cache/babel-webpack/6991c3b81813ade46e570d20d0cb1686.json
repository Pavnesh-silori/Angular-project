{"ast":null,"code":"import { __awaiter } from \"tslib\";\nimport { Validators } from '@angular/forms';\nimport { MAT_DIALOG_DATA } from '@angular/material/dialog';\nimport * as moment from 'moment';\nimport { isEqual } from 'lodash';\nimport { GhgAuditDetailsM } from '@carbon/model/ghg-audit.model';\n// tsc-library\nimport { ButtonLabelEnum, DialogEnum, InvalidForm, MaterialFormFieldAppearance } from '@library/tsc-common';\nimport { ToastrColor } from '@library/toastr-service';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/forms\";\nimport * as i2 from \"@angular/material/dialog\";\nimport * as i3 from \"@carbon/controller/ghg-audit.controller\";\nimport * as i4 from \"@carbon/service/ghg-audit.service\";\nimport * as i5 from \"@library/toastr-service\";\nimport * as i6 from \"@angular/material/button\";\nimport * as i7 from \"@angular/material/form-field\";\nimport * as i8 from \"@library/date\";\nimport * as i9 from \"@angular/material/input\";\nimport * as i10 from \"@angular/material/datepicker\";\nimport * as i11 from \"@angular/common\";\nfunction GhgAuditDialog_mat_error_15_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"mat-error\");\n    i0.ɵɵtext(1, \" Date is required \");\n    i0.ɵɵelementEnd();\n  }\n}\nfunction GhgAuditDialog_mat_error_20_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"mat-error\");\n    i0.ɵɵtext(1, \" Name is required \");\n    i0.ɵɵelementEnd();\n  }\n}\nfunction GhgAuditDialog_mat_error_25_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"mat-error\");\n    i0.ɵɵtext(1, \" Email is required \");\n    i0.ɵɵelementEnd();\n  }\n}\nfunction GhgAuditDialog_mat_error_26_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"mat-error\");\n    i0.ɵɵtext(1, \" Enter a valid email. \");\n    i0.ɵɵelementEnd();\n  }\n}\nfunction GhgAuditDialog_mat_error_31_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"mat-error\");\n    i0.ɵɵtext(1, \" Phone number must be 10 digits. \");\n    i0.ɵɵelementEnd();\n  }\n}\nfunction GhgAuditDialog_mat_error_32_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"mat-error\");\n    i0.ɵɵtext(1, \" Phone is required \");\n    i0.ɵɵelementEnd();\n  }\n}\nfunction GhgAuditDialog_mat_error_37_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"mat-error\");\n    i0.ɵɵtext(1, \" Address is required \");\n    i0.ɵɵelementEnd();\n  }\n}\nfunction GhgAuditDialog_button_40_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r11 = i0.ɵɵgetCurrentView();\n    i0.ɵɵelementStart(0, \"button\", 22);\n    i0.ɵɵlistener(\"click\", function GhgAuditDialog_button_40_Template_button_click_0_listener() {\n      i0.ɵɵrestoreView(_r11);\n      const ctx_r10 = i0.ɵɵnextContext();\n      return ctx_r10.saveAuditDetails();\n    });\n    i0.ɵɵtext(1);\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const ctx_r8 = i0.ɵɵnextContext();\n    i0.ɵɵadvance(1);\n    i0.ɵɵtextInterpolate1(\" \", ctx_r8.ButtonLabelEnum.CREATE_BTN_LABEL, \" \");\n  }\n}\nconst _c0 = function (a0) {\n  return {\n    \"disabled\": a0\n  };\n};\nfunction GhgAuditDialog_button_41_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r13 = i0.ɵɵgetCurrentView();\n    i0.ɵɵelementStart(0, \"button\", 23);\n    i0.ɵɵlistener(\"click\", function GhgAuditDialog_button_41_Template_button_click_0_listener() {\n      i0.ɵɵrestoreView(_r13);\n      const ctx_r12 = i0.ɵɵnextContext();\n      return ctx_r12.updateAuditDetails();\n    });\n    i0.ɵɵtext(1);\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const ctx_r9 = i0.ɵɵnextContext();\n    i0.ɵɵproperty(\"ngClass\", i0.ɵɵpureFunction1(2, _c0, ctx_r9.isEqual));\n    i0.ɵɵadvance(1);\n    i0.ɵɵtextInterpolate1(\" \", ctx_r9.ButtonLabelEnum.SAVE_BTN_LABEL, \" \");\n  }\n}\n// / tsc-library\nexport let GhgAuditDialog = /*#__PURE__*/(() => {\n  class GhgAuditDialog {\n    constructor(formBuilder, dialogRef, data, ghgAuditController, ghgAuditService, toasterService) {\n      this.formBuilder = formBuilder;\n      this.dialogRef = dialogRef;\n      this.data = data;\n      this.ghgAuditController = ghgAuditController;\n      this.ghgAuditService = ghgAuditService;\n      this.toasterService = toasterService;\n      this.MaterialFormFieldAppearance = MaterialFormFieldAppearance;\n      this.ButtonLabelEnum = ButtonLabelEnum;\n      this.isAudited = false;\n      this.ghgAuditDetailM = new GhgAuditDetailsM();\n      this.errorHandling = (control, error) => {\n        return this.auditFG.get(control).hasError(error);\n      };\n      this.currentOrgID = this.data['currentOrgID'];\n      this.auditYear = this.data['auditYear'];\n    }\n    ngOnInit() {\n      return __awaiter(this, void 0, void 0, function* () {\n        this.auditGFInit();\n        yield this.getAuditDetailsByYear();\n      });\n    }\n    auditGFInit() {\n      this.auditFG = this.formBuilder.group({\n        year: [this.auditYear],\n        date: [, Validators.required],\n        name: [, Validators.required],\n        email: [, [Validators.required, Validators.email]],\n        phone: [, [Validators.required, Validators.pattern('^[0-9]{10}$'), Validators.maxLength(10)]],\n        address: [, Validators.required]\n      });\n    }\n    formatDate(control) {\n      let date = moment(this.auditFG.controls[control].value).format(\"YYYY-MM-DD\");\n      this.auditFG.controls[control].patchValue(date);\n    }\n    patchAuditRecord(ghgAuditDetailM) {\n      this.auditFG.patchValue({\n        year: ghgAuditDetailM['year'],\n        date: ghgAuditDetailM['date'],\n        name: ghgAuditDetailM['name'],\n        email: ghgAuditDetailM['email'],\n        phone: ghgAuditDetailM['phone'],\n        address: ghgAuditDetailM['address']\n      });\n      this.initialObject = this.auditFG.value;\n      this.isEqual = true;\n    }\n    saveAuditDetails() {\n      if (!this.isFormValid()) {\n        return;\n      }\n      this.ghgAuditController.createGhgAuditDetails(this.currentOrgID, this.auditFG.value).subscribe(createRes => {\n        this.dialogRef.close(DialogEnum.SUCCESS_DR);\n      }, error => {\n        console.log('error in saveAuditDetails -', error);\n      });\n    }\n    updateAuditDetails() {\n      if (!this.isFormValid()) {\n        return;\n      }\n      this.ghgAuditController.patchGhgAuditDetails(this.currentOrgID, this.ghgAuditDetailM['id'], this.auditFG.value).subscribe(createRes => {\n        this.dialogRef.close(DialogEnum.SUCCESS_DR);\n      }, error => {\n        console.log('error in updateAuditDetails -', error);\n      });\n    }\n    isFormValid() {\n      if (this.auditFG.invalid) {\n        this.auditFG.markAllAsTouched();\n        console.log('invalid form -', this.auditFG.value);\n        this.toasterService.openToast(InvalidForm.INVALID_FORM_TITLE, InvalidForm.INVALID_FORM_MESSAGE, ToastrColor.ERROR);\n        return false;\n      }\n      return true;\n    }\n    getAuditDetailsByYear() {\n      return __awaiter(this, void 0, void 0, function* () {\n        this.ghgAuditDetailM = yield this.ghgAuditService.getGhgAuditDetailsByYear(this.currentOrgID, this.auditYear);\n        if (this.ghgAuditDetailM['id'] != null) {\n          this.isAudited = true;\n          this.patchAuditRecord(this.ghgAuditDetailM);\n        } else {\n          this.isAudited = false;\n        }\n      });\n    }\n    ngAfterViewInit() {\n      this.auditFG.valueChanges.subscribe(() => this.isEqual = isEqual(this.initialObject, this.auditFG.value));\n    }\n    // Datepicker calender open/close\n    openDatepicker(datepicker) {\n      if (!datepicker.opened) {\n        datepicker.open();\n      }\n    }\n  }\n  GhgAuditDialog.ɵfac = function GhgAuditDialog_Factory(t) {\n    return new (t || GhgAuditDialog)(i0.ɵɵdirectiveInject(i1.FormBuilder), i0.ɵɵdirectiveInject(i2.MatDialogRef), i0.ɵɵdirectiveInject(MAT_DIALOG_DATA), i0.ɵɵdirectiveInject(i3.GhgAuditController), i0.ɵɵdirectiveInject(i4.GhgAuditService), i0.ɵɵdirectiveInject(i5.ToastrService));\n  };\n  GhgAuditDialog.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n    type: GhgAuditDialog,\n    selectors: [[\"app-ghg-audit\"]],\n    decls: 42,\n    vars: 18,\n    consts: [[\"mat-dialog-title\", \"\"], [1, \"dialogTitle\"], [\"mat-icon-button\", \"\", \"mat-dialog-close\", \"\", \"cdkFocusInitial\", \"\", \"matTooltip\", \"Close\", \"matTooltipPosition\", \"before\", 1, \"float-end\", \"matDialogClose\"], [1, \"material-symbols-outlined\"], [\"mat-dialog-content\", \"\", 1, \"matDialogContent\"], [3, \"formGroup\"], [\"appDateMonthYearFormat\", \"\", 1, \"matFieldWidth100\", \"cursorPointer\", 3, \"appearance\", \"click\", \"keydown.enter\", \"keydown.arrowdown\"], [1, \"formLabel\"], [\"matInput\", \"\", \"formControlName\", \"date\", \"required\", \"\", 1, \"noFocus\", 3, \"matDatepicker\", \"readonly\", \"dateInput\"], [\"matSuffix\", \"\", 3, \"for\"], [\"disabled\", \"false\"], [\"date\", \"\"], [4, \"ngIf\"], [1, \"matFieldWidth100\", 3, \"appearance\"], [\"matInput\", \"\", \"formControlName\", \"name\", \"required\", \"\", 1, \"formPlaceholder\"], [\"matInput\", \"\", \"formControlName\", \"email\", \"required\", \"\", 1, \"formPlaceholder\"], [\"matInput\", \"\", \"type\", \"number\", \"formControlName\", \"phone\", \"required\", \"\", 1, \"formPlaceholder\"], [\"matInput\", \"\", \"formControlName\", \"address\", \"required\", \"\", 1, \"formPlaceholder\"], [\"mat-dialog-footer\", \"\", \"align\", \"end\"], [1, \"d-inline\"], [\"type\", \"submit\", \"class\", \"button btn btn-success\", 3, \"click\", 4, \"ngIf\"], [\"type\", \"submit\", \"class\", \"button btn btn-success\", 3, \"ngClass\", \"click\", 4, \"ngIf\"], [\"type\", \"submit\", 1, \"button\", \"btn\", \"btn-success\", 3, \"click\"], [\"type\", \"submit\", 1, \"button\", \"btn\", \"btn-success\", 3, \"ngClass\", \"click\"]],\n    template: function GhgAuditDialog_Template(rf, ctx) {\n      if (rf & 1) {\n        const _r14 = i0.ɵɵgetCurrentView();\n        i0.ɵɵelementStart(0, \"div\", 0);\n        i0.ɵɵelementStart(1, \"strong\", 1);\n        i0.ɵɵtext(2, \" Fill audit details \");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(3, \"button\", 2);\n        i0.ɵɵelementStart(4, \"span\", 3);\n        i0.ɵɵtext(5, \"close\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(6, \"div\", 4);\n        i0.ɵɵelementStart(7, \"form\", 5);\n        i0.ɵɵelementStart(8, \"mat-form-field\", 6);\n        i0.ɵɵlistener(\"click\", function GhgAuditDialog_Template_mat_form_field_click_8_listener() {\n          i0.ɵɵrestoreView(_r14);\n          const _r0 = i0.ɵɵreference(14);\n          return ctx.openDatepicker(_r0);\n        })(\"keydown.enter\", function GhgAuditDialog_Template_mat_form_field_keydown_enter_8_listener() {\n          i0.ɵɵrestoreView(_r14);\n          const _r0 = i0.ɵɵreference(14);\n          return ctx.openDatepicker(_r0);\n        })(\"keydown.arrowdown\", function GhgAuditDialog_Template_mat_form_field_keydown_arrowdown_8_listener() {\n          i0.ɵɵrestoreView(_r14);\n          const _r0 = i0.ɵɵreference(14);\n          return ctx.openDatepicker(_r0);\n        });\n        i0.ɵɵelementStart(9, \"mat-label\", 7);\n        i0.ɵɵtext(10, \" Date of verification\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(11, \"input\", 8);\n        i0.ɵɵlistener(\"dateInput\", function GhgAuditDialog_Template_input_dateInput_11_listener() {\n          return ctx.formatDate(\"date\");\n        });\n        i0.ɵɵelementEnd();\n        i0.ɵɵelement(12, \"mat-datepicker-toggle\", 9);\n        i0.ɵɵelement(13, \"mat-datepicker\", 10, 11);\n        i0.ɵɵtemplate(15, GhgAuditDialog_mat_error_15_Template, 2, 0, \"mat-error\", 12);\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(16, \"mat-form-field\", 13);\n        i0.ɵɵelementStart(17, \"mat-label\", 7);\n        i0.ɵɵtext(18, \" Verifier name \");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelement(19, \"input\", 14);\n        i0.ɵɵtemplate(20, GhgAuditDialog_mat_error_20_Template, 2, 0, \"mat-error\", 12);\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(21, \"mat-form-field\", 13);\n        i0.ɵɵelementStart(22, \"mat-label\", 7);\n        i0.ɵɵtext(23, \" Email \");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelement(24, \"input\", 15);\n        i0.ɵɵtemplate(25, GhgAuditDialog_mat_error_25_Template, 2, 0, \"mat-error\", 12);\n        i0.ɵɵtemplate(26, GhgAuditDialog_mat_error_26_Template, 2, 0, \"mat-error\", 12);\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(27, \"mat-form-field\", 13);\n        i0.ɵɵelementStart(28, \"mat-label\", 7);\n        i0.ɵɵtext(29, \" Phone \");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelement(30, \"input\", 16);\n        i0.ɵɵtemplate(31, GhgAuditDialog_mat_error_31_Template, 2, 0, \"mat-error\", 12);\n        i0.ɵɵtemplate(32, GhgAuditDialog_mat_error_32_Template, 2, 0, \"mat-error\", 12);\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(33, \"mat-form-field\", 13);\n        i0.ɵɵelementStart(34, \"mat-label\", 7);\n        i0.ɵɵtext(35, \" Address \");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelement(36, \"input\", 17);\n        i0.ɵɵtemplate(37, GhgAuditDialog_mat_error_37_Template, 2, 0, \"mat-error\", 12);\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(38, \"div\", 18);\n        i0.ɵɵelementStart(39, \"div\", 19);\n        i0.ɵɵtemplate(40, GhgAuditDialog_button_40_Template, 2, 1, \"button\", 20);\n        i0.ɵɵtemplate(41, GhgAuditDialog_button_41_Template, 2, 4, \"button\", 21);\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementEnd();\n      }\n      if (rf & 2) {\n        const _r0 = i0.ɵɵreference(14);\n        i0.ɵɵadvance(7);\n        i0.ɵɵproperty(\"formGroup\", ctx.auditFG);\n        i0.ɵɵadvance(1);\n        i0.ɵɵproperty(\"appearance\", ctx.MaterialFormFieldAppearance.FORM_FIELD_APPEARANCE);\n        i0.ɵɵadvance(3);\n        i0.ɵɵproperty(\"matDatepicker\", _r0)(\"readonly\", true);\n        i0.ɵɵadvance(1);\n        i0.ɵɵproperty(\"for\", _r0);\n        i0.ɵɵadvance(3);\n        i0.ɵɵproperty(\"ngIf\", ctx.errorHandling(\"date\", \"required\"));\n        i0.ɵɵadvance(1);\n        i0.ɵɵproperty(\"appearance\", ctx.MaterialFormFieldAppearance.FORM_FIELD_APPEARANCE);\n        i0.ɵɵadvance(4);\n        i0.ɵɵproperty(\"ngIf\", ctx.errorHandling(\"name\", \"required\"));\n        i0.ɵɵadvance(1);\n        i0.ɵɵproperty(\"appearance\", ctx.MaterialFormFieldAppearance.FORM_FIELD_APPEARANCE);\n        i0.ɵɵadvance(4);\n        i0.ɵɵproperty(\"ngIf\", ctx.errorHandling(\"email\", \"required\"));\n        i0.ɵɵadvance(1);\n        i0.ɵɵproperty(\"ngIf\", ctx.auditFG.get(\"email\").hasError(\"email\") && ctx.auditFG.get(\"email\").touched);\n        i0.ɵɵadvance(1);\n        i0.ɵɵproperty(\"appearance\", ctx.MaterialFormFieldAppearance.FORM_FIELD_APPEARANCE);\n        i0.ɵɵadvance(4);\n        i0.ɵɵproperty(\"ngIf\", ctx.auditFG.get(\"phone\").hasError(\"pattern\") && ctx.auditFG.get(\"phone\").touched);\n        i0.ɵɵadvance(1);\n        i0.ɵɵproperty(\"ngIf\", ctx.errorHandling(\"phone\", \"required\"));\n        i0.ɵɵadvance(1);\n        i0.ɵɵproperty(\"appearance\", ctx.MaterialFormFieldAppearance.FORM_FIELD_APPEARANCE);\n        i0.ɵɵadvance(4);\n        i0.ɵɵproperty(\"ngIf\", ctx.errorHandling(\"address\", \"required\"));\n        i0.ɵɵadvance(3);\n        i0.ɵɵproperty(\"ngIf\", !ctx.isAudited);\n        i0.ɵɵadvance(1);\n        i0.ɵɵproperty(\"ngIf\", ctx.isAudited);\n      }\n    },\n    directives: [i2.MatDialogTitle, i6.MatButton, i2.MatDialogClose, i2.MatDialogContent, i1.ɵNgNoValidate, i1.NgControlStatusGroup, i1.FormGroupDirective, i7.MatFormField, i8.DateMonthYearFormatDirective, i7.MatLabel, i9.MatInput, i1.DefaultValueAccessor, i10.MatDatepickerInput, i1.NgControlStatus, i1.FormControlName, i1.RequiredValidator, i10.MatDatepickerToggle, i7.MatSuffix, i10.MatDatepicker, i11.NgIf, i1.NumberValueAccessor, i7.MatError, i11.NgClass],\n    encapsulation: 2\n  });\n  return GhgAuditDialog;\n})();","map":null,"metadata":{},"sourceType":"module"}