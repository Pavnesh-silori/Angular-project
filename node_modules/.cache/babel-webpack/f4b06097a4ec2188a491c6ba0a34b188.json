{"ast":null,"code":"import { MAT_DIALOG_DATA } from '@angular/material/dialog';\nimport { CommonModule } from '@angular/common';\nimport { MatDialogModule } from '@angular/material/dialog';\nimport { MatProgressBarModule } from '@angular/material/progress-bar';\nimport { SourceTypeKeyIDEnum } from '@netzero/enum/source.enum';\n// tsc-library\nimport { BulkUploadEnum } from '@library/tsc-common';\nimport { ToastrTitle, ToastrColor } from '@library/toastr-service';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/material/dialog\";\nimport * as i2 from \"@netzero/controller/asset.controller\";\nimport * as i3 from \"@netzero/controller/supplier.controller\";\nimport * as i4 from \"@netzero/controller/employee.controller\";\nimport * as i5 from \"@library/storage-service\";\nimport * as i6 from \"@library/toastr-service\";\nimport * as i7 from \"@angular/common\";\nimport * as i8 from \"@angular/material/progress-bar\";\nconst _c0 = [\"bulkUploadFile\"];\nfunction BulkUploadDialog_p_20_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"p\", 17);\n    i0.ɵɵtext(1);\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const ctx_r1 = i0.ɵɵnextContext();\n    i0.ɵɵadvance(1);\n    i0.ɵɵtextInterpolate(ctx_r1.fileName);\n  }\n}\nfunction BulkUploadDialog_div_21_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\", 21);\n    i0.ɵɵelementStart(1, \"div\", 22);\n    i0.ɵɵelementStart(2, \"div\", 23);\n    i0.ɵɵelement(3, \"mat-progress-bar\", 24);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(4, \"div\", 25);\n    i0.ɵɵtext(5);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const ctx_r2 = i0.ɵɵnextContext();\n    i0.ɵɵadvance(3);\n    i0.ɵɵproperty(\"value\", ctx_r2.loaded);\n    i0.ɵɵadvance(2);\n    i0.ɵɵtextInterpolate1(\" \", ctx_r2.loaded, \" % \");\n  }\n}\nfunction BulkUploadDialog_li_32_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"li\");\n    i0.ɵɵtext(1);\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const ctx_r3 = i0.ɵɵnextContext();\n    i0.ɵɵadvance(1);\n    i0.ɵɵtextInterpolate1(\" S.No. \", ctx_r3.duplicateData, \" has duplicate Asset ID. Please check your file and upload again. \");\n  }\n}\nfunction BulkUploadDialog_li_33_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"li\");\n    i0.ɵɵtext(1);\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const ctx_r4 = i0.ɵɵnextContext();\n    i0.ɵɵadvance(1);\n    i0.ɵɵtextInterpolate1(\" S.No. \", ctx_r4.duplicateData, \" has duplicate Email ID. Please check your file and upload again. \");\n  }\n}\nfunction BulkUploadDialog_li_34_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"li\");\n    i0.ɵɵtext(1);\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const ctx_r5 = i0.ɵɵnextContext();\n    i0.ɵɵadvance(1);\n    i0.ɵɵtextInterpolate1(\" S.No. \", ctx_r5.duplicateData, \" has duplicate Borewell ID. Please check your file and upload again. \");\n  }\n}\nfunction BulkUploadDialog_li_35_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"li\");\n    i0.ɵɵtext(1);\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const ctx_r6 = i0.ɵɵnextContext();\n    i0.ɵɵadvance(1);\n    i0.ɵɵtextInterpolate1(\" S.No. \", ctx_r6.duplicateData, \" has duplicate Employee ID. Please check your file and upload again. \");\n  }\n}\nfunction BulkUploadDialog_li_36_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"li\");\n    i0.ɵɵtext(1);\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const ctx_r7 = i0.ɵɵnextContext();\n    i0.ɵɵadvance(1);\n    i0.ɵɵtextInterpolate1(\" S.No. \", ctx_r7.mandatoryData, \" is mandatory field. Please enter valid data and upload file again. \");\n  }\n}\nconst _c1 = function (a0) {\n  return {\n    \"d-none\": a0\n  };\n};\n// /tsc-library/\nexport let BulkUploadDialog = /*#__PURE__*/(() => {\n  class BulkUploadDialog {\n    constructor(dialogRef, data, assetController, supplierController, employeeController, storageService, toastrService) {\n      this.dialogRef = dialogRef;\n      this.data = data;\n      this.assetController = assetController;\n      this.supplierController = supplierController;\n      this.employeeController = employeeController;\n      this.storageService = storageService;\n      this.toastrService = toastrService;\n      this.error = false;\n      this.duplicateData = null;\n      this.mandatoryData = null;\n      this.loaded = 0;\n      this.dialogRef.disableClose = true;\n    }\n    ngOnInit() {\n      this.currentOrgID = this.storageService.getStorage('currentOrgID');\n      this.source = this.data['source'];\n      if (this.source == SourceTypeKeyIDEnum.SUPPLIER) {\n        this.templateFileSrc = \"assets/files/supplier-upload.xlsx\";\n      } else if (this.source == SourceTypeKeyIDEnum.ASSET) {\n        this.templateFileSrc = \"assets/files/asset-upload.xlsx\";\n      } else if (this.source == SourceTypeKeyIDEnum.VEHICLE) {\n        this.templateFileSrc = \"assets/files/vehicle-upload.xlsx\";\n      } else if (this.source == SourceTypeKeyIDEnum.EMPLOYEE) {\n        this.templateFileSrc = \"assets/files/employee-upload.xlsx\";\n      } else {\n        this.dialogRef.close();\n      }\n    }\n    onFileChange(event) {\n      if (event.target.files.length > 0) {\n        const file = event.target.files[0];\n        if (!this.isFileAllowed(file.name)) {\n          this.resetFileInput();\n          this.toastrService.openToast(ToastrTitle.ERROR, BulkUploadEnum.INVALID_FILE_TYPE_ERROR, ToastrColor.ERROR);\n          return;\n        } else if (file.size > BulkUploadEnum.MAX_FILE_SIZE) {\n          this.resetFileInput();\n          this.toastrService.openToast(ToastrTitle.ERROR, BulkUploadEnum.INVAID_FILE_SIZE_ERROR, ToastrColor.ERROR);\n          return;\n        }\n        const reader = new FileReader();\n        reader.readAsDataURL(file);\n        reader.addEventListener('loadstart', () => {\n          this.loaded = 0;\n          this.progress = true;\n        });\n        reader.addEventListener('progress', event => this.loaded = event.loaded / event.total * 100);\n        reader.addEventListener('load', () => {\n          this.bulkUpload = file;\n          this.fileName = file.name;\n        });\n        reader.addEventListener('loadend', () => this.progress = false);\n        reader.addEventListener('abort', () => {\n          this.resetFileInput();\n          this.toastrService.openToast(ToastrTitle.ERROR, BulkUploadEnum.INVALID, ToastrColor.ERROR);\n        });\n        reader.addEventListener('error', () => {\n          this.resetFileInput();\n          this.toastrService.openToast(ToastrTitle.ERROR, BulkUploadEnum.UPLOAD_FILE_ERROR, ToastrColor.ERROR);\n        });\n      }\n    }\n    resetFileInput() {\n      this.fileName = null;\n      this.bulkUpload = null;\n      this.bulkUploadFile.nativeElement.value = null;\n    }\n    isFileAllowed(fileName) {\n      let isFileAllowed = false;\n      const allowedFiles = ['.xlsx', '.xls'];\n      const regex = /(?:\\.([^.]+))?$/;\n      const extension = regex.exec(fileName);\n      if (undefined !== extension && null !== extension) {\n        allowedFiles.forEach(extnsn => {\n          if (extnsn === extension[0]) {\n            isFileAllowed = true;\n          }\n        });\n      }\n      return isFileAllowed;\n    }\n    bulkUploadBtn(controlName) {\n      document.getElementById(controlName).click();\n    }\n    toFormData() {\n      const formData = new FormData();\n      formData.append('file', this.bulkUpload);\n      return formData;\n    }\n    bulkUploadFun() {\n      if (this.bulkUpload == null) {\n        console.log('invalid form -', this.bulkUpload);\n        this.toastrService.openToast(ToastrTitle.ERROR, BulkUploadEnum.NO_FILE, ToastrColor.ERROR);\n        return;\n      }\n      if (this.source == SourceTypeKeyIDEnum.SUPPLIER) {\n        this.uploadSupplier();\n      } else if (this.source == SourceTypeKeyIDEnum.ASSET) {\n        this.uploadAsset();\n      } else if (this.source == SourceTypeKeyIDEnum.EMPLOYEE) {\n        this.bulkUploadEmployee();\n      }\n    }\n    uploadSupplier() {\n      this.supplierController.bulkUpload(this.currentOrgID, this.toFormData()).subscribe(bulkUploadRes => {\n        if (bulkUploadRes['title'] == 'Success') {\n          this.dialogRef.close('blukUploadSuccessfully');\n        } else if (bulkUploadRes['title'] == 'Error') {\n          if (bulkUploadRes['response'] == null) {} else {\n            this.error = true;\n            this.message = bulkUploadRes['message'];\n            this.response = bulkUploadRes['response'];\n            this.getErrorData();\n          }\n        }\n      }, error => {\n        console.log(\"error in Bulk Upload -\", error);\n        this.toastrService.openToast(ToastrTitle.ERROR, 'Error in Bulk Upload', ToastrColor.ERROR);\n      });\n    }\n    uploadAsset() {\n      this.assetController.bulkUpload(this.currentOrgID, this.toFormData()).subscribe(bulkUploadRes => {\n        if (bulkUploadRes['title'] == 'Success') {\n          this.dialogRef.close('blukUploadSuccessfully');\n        } else if (bulkUploadRes['title'] == 'Error') {\n          if (bulkUploadRes['response'] == null) {} else {\n            this.error = true;\n            this.message = bulkUploadRes['message'];\n            this.response = bulkUploadRes['response'];\n            this.getErrorData();\n          }\n        }\n      }, error => {\n        console.log(\"error in Bulk Upload -\", error);\n        this.toastrService.openToast(ToastrTitle.ERROR, 'Error in Bulk Upload', ToastrColor.ERROR);\n      });\n    }\n    bulkUploadEmployee() {\n      this.employeeController.bulkUploadEmployee(this.currentOrgID, this.toFormData()).subscribe(bulkUploadRes => {\n        if (bulkUploadRes['title'] == 'Success') {\n          this.dialogRef.close('blukUploadSuccessfully');\n        } else if (bulkUploadRes['title'] == 'Error') {\n          if (bulkUploadRes['response'] == null) {} else {\n            this.error = true;\n            this.message = bulkUploadRes['message'];\n            this.response = bulkUploadRes['response'];\n            this.getErrorData();\n          }\n        }\n      });\n    }\n    getErrorData() {\n      if (this.response['duplicateDataInRows'].length != 0) {\n        let dupDataInRows = this.response['duplicateDataInRows'];\n        this.duplicateData = [dupDataInRows.slice(0, -1).join(', '), dupDataInRows.slice(-1)[0]].join(dupDataInRows.length < 2 ? '' : ' and ');\n      }\n      if (this.response['mandatoryDataMissingInRows'].length != 0) {\n        let manDataMissingInRows = this.response['mandatoryDataMissingInRows'];\n        this.mandatoryData = [manDataMissingInRows.slice(0, -1).join(', '), manDataMissingInRows.slice(-1)[0]].join(manDataMissingInRows.length < 2 ? '' : ' and ');\n      }\n    }\n    tryAgain() {\n      this.error = !this.error;\n      this.resetFileInput();\n    }\n  }\n  BulkUploadDialog.ɵfac = function BulkUploadDialog_Factory(t) {\n    return new (t || BulkUploadDialog)(i0.ɵɵdirectiveInject(i1.MatDialogRef), i0.ɵɵdirectiveInject(MAT_DIALOG_DATA), i0.ɵɵdirectiveInject(i2.AssetController), i0.ɵɵdirectiveInject(i3.SupplierController), i0.ɵɵdirectiveInject(i4.EmployeeController), i0.ɵɵdirectiveInject(i5.StorageService), i0.ɵɵdirectiveInject(i6.ToastrService));\n  };\n  BulkUploadDialog.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n    type: BulkUploadDialog,\n    selectors: [[\"app-bulk-upload-dialog\"]],\n    viewQuery: function BulkUploadDialog_Query(rf, ctx) {\n      if (rf & 1) {\n        i0.ɵɵviewQuery(_c0, 5);\n      }\n      if (rf & 2) {\n        let _t;\n        i0.ɵɵqueryRefresh(_t = i0.ɵɵloadQuery()) && (ctx.bulkUploadFile = _t.first);\n      }\n    },\n    decls: 42,\n    vars: 21,\n    consts: [[\"mat-dialog-title\", \"\"], [1, \"dialogTitle\", 3, \"ngClass\"], [\"xmlns\", \"http://www.w3.org/2000/svg\", \"fill\", \"currentColor\", \"viewBox\", \"0 0 16 16\", \"role\", \"img\", \"aria-label\", \"Warning:\", 1, \"bi\", \"bi-exclamation-triangle-fill\", \"flex-shrink-0\", \"me-2\", \"mb-2\", \"dialogHeaderIcon\", \"errorIconColor\"], [\"d\", \"M8.982 1.566a1.13 1.13 0 0 0-1.96 0L.165 13.233c-.457.778.091 1.767.98 1.767h13.713c.889 0 1.438-.99.98-1.767L8.982 1.566zM8 5c.535 0 .954.462.9.995l-.35 3.507a.552.552 0 0 1-1.1 0L7.1 5.995A.905.905 0 0 1 8 5zm.002 6a1 1 0 1 1 0 2 1 1 0 0 1 0-2z\"], [1, \"row\", 3, \"ngClass\"], [1, \"centerAlign\", \"mt-2\"], [1, \"material-symbols-outlined\", \"fs-2\"], [\"download\", \"\", 1, \"ms-2\", 3, \"href\"], [1, \"text-center\"], [\"id\", \"bulkUploadFile\", \"type\", \"file\", \"accept\", \".xlsx, .xls\", 1, \"d-none\", 3, \"change\"], [\"bulkUploadFile\", \"\"], [\"type\", \"button\", 1, \"btn\", \"btn-primary\", \"mt-4\", 3, \"click\"], [\"class\", \"mt-2\", 4, \"ngIf\"], [\"class\", \"mt-1 mb-3\", 4, \"ngIf\"], [\"align\", \"end\"], [\"type\", \"button\", \"mat-dialog-close\", \"\", 1, \"button\", \"btn\", \"btn-secondary\", \"me-2\"], [\"type\", \"submit\", 1, \"button\", \"btn\", \"btn-success\", \"ms-2\", 3, \"click\"], [1, \"mt-2\"], [4, \"ngIf\"], [\"align\", \"end\", 1, \"mt-2\"], [\"type\", \"button\", 1, \"button\", \"btn\", \"btn-success\", \"ms-2\", 3, \"click\"], [1, \"mt-1\", \"mb-3\"], [1, \"row\"], [1, \"col-sm-10\", \"centerAlign\"], [\"mode\", \"determinate\", 1, \"rounded\", \"fileUploadBar\", 3, \"value\"], [1, \"col-sm-2\", \"centerAlign\"]],\n    template: function BulkUploadDialog_Template(rf, ctx) {\n      if (rf & 1) {\n        i0.ɵɵelementStart(0, \"h6\", 0);\n        i0.ɵɵelementStart(1, \"strong\", 1);\n        i0.ɵɵtext(2, \" Import \");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(3, \"strong\", 1);\n        i0.ɵɵnamespaceSVG();\n        i0.ɵɵelementStart(4, \"svg\", 2);\n        i0.ɵɵelement(5, \"path\", 3);\n        i0.ɵɵelementEnd();\n        i0.ɵɵtext(6, \" File upload unsuccessful \");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementEnd();\n        i0.ɵɵnamespaceHTML();\n        i0.ɵɵelement(7, \"hr\");\n        i0.ɵɵelementStart(8, \"div\", 4);\n        i0.ɵɵelementStart(9, \"div\", 5);\n        i0.ɵɵelementStart(10, \"span\", 6);\n        i0.ɵɵtext(11, \" download \");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(12, \"a\", 7);\n        i0.ɵɵtext(13, \"Download template file\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementEnd();\n        i0.ɵɵelement(14, \"br\");\n        i0.ɵɵelementStart(15, \"div\", 8);\n        i0.ɵɵelementStart(16, \"input\", 9, 10);\n        i0.ɵɵlistener(\"change\", function BulkUploadDialog_Template_input_change_16_listener($event) {\n          return ctx.onFileChange($event);\n        });\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(18, \"button\", 11);\n        i0.ɵɵlistener(\"click\", function BulkUploadDialog_Template_button_click_18_listener() {\n          return ctx.bulkUploadBtn(\"bulkUploadFile\");\n        });\n        i0.ɵɵtext(19, \" Upload file \");\n        i0.ɵɵelementEnd();\n        i0.ɵɵtemplate(20, BulkUploadDialog_p_20_Template, 2, 1, \"p\", 12);\n        i0.ɵɵelementEnd();\n        i0.ɵɵtemplate(21, BulkUploadDialog_div_21_Template, 6, 2, \"div\", 13);\n        i0.ɵɵelementStart(22, \"div\", 14);\n        i0.ɵɵelementStart(23, \"button\", 15);\n        i0.ɵɵtext(24, \"Cancel\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(25, \"button\", 16);\n        i0.ɵɵlistener(\"click\", function BulkUploadDialog_Template_button_click_25_listener() {\n          return ctx.bulkUploadFun();\n        });\n        i0.ɵɵtext(26, \" Submit \");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(27, \"div\", 4);\n        i0.ɵɵelementStart(28, \"div\");\n        i0.ɵɵelementStart(29, \"p\", 17);\n        i0.ɵɵtext(30);\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(31, \"ul\");\n        i0.ɵɵtemplate(32, BulkUploadDialog_li_32_Template, 2, 1, \"li\", 18);\n        i0.ɵɵtemplate(33, BulkUploadDialog_li_33_Template, 2, 1, \"li\", 18);\n        i0.ɵɵtemplate(34, BulkUploadDialog_li_34_Template, 2, 1, \"li\", 18);\n        i0.ɵɵtemplate(35, BulkUploadDialog_li_35_Template, 2, 1, \"li\", 18);\n        i0.ɵɵtemplate(36, BulkUploadDialog_li_36_Template, 2, 1, \"li\", 18);\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(37, \"div\", 19);\n        i0.ɵɵelementStart(38, \"button\", 15);\n        i0.ɵɵtext(39, \"Close\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(40, \"button\", 20);\n        i0.ɵɵlistener(\"click\", function BulkUploadDialog_Template_button_click_40_listener() {\n          return ctx.tryAgain();\n        });\n        i0.ɵɵtext(41, \"Try Again\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementEnd();\n      }\n      if (rf & 2) {\n        i0.ɵɵadvance(1);\n        i0.ɵɵproperty(\"ngClass\", i0.ɵɵpureFunction1(13, _c1, ctx.error));\n        i0.ɵɵadvance(2);\n        i0.ɵɵproperty(\"ngClass\", i0.ɵɵpureFunction1(15, _c1, !ctx.error));\n        i0.ɵɵadvance(5);\n        i0.ɵɵproperty(\"ngClass\", i0.ɵɵpureFunction1(17, _c1, ctx.error));\n        i0.ɵɵadvance(4);\n        i0.ɵɵproperty(\"href\", ctx.templateFileSrc, i0.ɵɵsanitizeUrl);\n        i0.ɵɵadvance(8);\n        i0.ɵɵproperty(\"ngIf\", !ctx.progress);\n        i0.ɵɵadvance(1);\n        i0.ɵɵproperty(\"ngIf\", ctx.progress);\n        i0.ɵɵadvance(6);\n        i0.ɵɵproperty(\"ngClass\", i0.ɵɵpureFunction1(19, _c1, !ctx.error));\n        i0.ɵɵadvance(3);\n        i0.ɵɵtextInterpolate1(\" \", ctx.message, \" \");\n        i0.ɵɵadvance(2);\n        i0.ɵɵproperty(\"ngIf\", ctx.duplicateData != null && ctx.source == \"ASSET\");\n        i0.ɵɵadvance(1);\n        i0.ɵɵproperty(\"ngIf\", ctx.duplicateData != null && ctx.source == \"SUPPLIER\");\n        i0.ɵɵadvance(1);\n        i0.ɵɵproperty(\"ngIf\", ctx.duplicateData != null && ctx.source == \"BOREWELL\");\n        i0.ɵɵadvance(1);\n        i0.ɵɵproperty(\"ngIf\", ctx.duplicateData != null && ctx.source == \"EMPLOYEE\");\n        i0.ɵɵadvance(1);\n        i0.ɵɵproperty(\"ngIf\", ctx.mandatoryData != null);\n      }\n    },\n    directives: [i1.MatDialogTitle, i7.NgClass, i7.NgIf, i1.MatDialogClose, i8.MatProgressBar],\n    encapsulation: 2\n  });\n  return BulkUploadDialog;\n})();\nexport let BulkUploadDialogModule = /*#__PURE__*/(() => {\n  class BulkUploadDialogModule {}\n  BulkUploadDialogModule.ɵfac = function BulkUploadDialogModule_Factory(t) {\n    return new (t || BulkUploadDialogModule)();\n  };\n  BulkUploadDialogModule.ɵmod = /*@__PURE__*/i0.ɵɵdefineNgModule({\n    type: BulkUploadDialogModule\n  });\n  BulkUploadDialogModule.ɵinj = /*@__PURE__*/i0.ɵɵdefineInjector({\n    imports: [[CommonModule, MatDialogModule, MatProgressBarModule]]\n  });\n  return BulkUploadDialogModule;\n})();","map":null,"metadata":{},"sourceType":"module"}