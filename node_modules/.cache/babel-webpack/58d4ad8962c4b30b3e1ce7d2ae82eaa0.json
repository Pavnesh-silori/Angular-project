{"ast":null,"code":"import { __awaiter } from \"tslib\";\nimport { EventEmitter } from '@angular/core';\nimport { FormControl } from '@angular/forms';\nimport { MatPaginator } from '@angular/material/paginator';\nimport { MatSort } from '@angular/material/sort';\nimport { faEllipsisV, faPlus } from '@fortawesome/free-solid-svg-icons';\nimport { ActivitySelectionComponent } from '../activity-selection/activity-selection.component';\nimport { merge, fromEvent, of as observableOf } from 'rxjs';\nimport { map, startWith, switchMap, catchError } from \"rxjs/operators\";\nimport { ACTIVITY_CONFIG_VIEW_PAGE_CONSTANT } from '@carbon/constant/activity.constant';\nimport { ActivityConfigEnum } from '@carbon/enum/activity-config.enum';\nimport { ACTIVITY_FORM_TYPE_KEYID_ENUM } from '@carbon/enum/activity-form-enum';\n//tsc-library\nimport { TABLE_CONSTANT, COMMON_CONSTANT, ButtonTooltipEnum, MATERIAL_CONSTANT, VIEW_TYPE_ENUM } from '@library/tsc-common';\nimport { SelectionModel } from '@angular/cdk/collections';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/material/dialog\";\nimport * as i2 from \"@library/storage-service\";\nimport * as i3 from \"@angular/router\";\nimport * as i4 from \"@carbon/service/activity.service\";\nimport * as i5 from \"@carbon/controller/activity-config.controller\";\nimport * as i6 from \"@carbon/controller/activity.controller\";\nimport * as i7 from \"@library/tsc-common\";\nimport * as i8 from \"@angular/material/core\";\nimport * as i9 from \"@angular/material/tooltip\";\nimport * as i10 from \"@fortawesome/angular-fontawesome\";\nimport * as i11 from \"@angular/material/table\";\nimport * as i12 from \"@angular/material/sort\";\nimport * as i13 from \"@angular/material/paginator\";\nimport * as i14 from \"@angular/common\";\nimport * as i15 from \"@ng-bootstrap/ng-bootstrap\";\nconst _c0 = [\"refreshBtn\"];\nconst _c1 = [\"formType\"];\nconst _c2 = [\"statusSelect\"];\nconst _c3 = [\"formBtn\"];\nconst _c4 = [\"activityBtn\"];\nconst _c5 = [\"activitySelect\"];\nconst _c6 = [\"formSelect\"];\nfunction ListComponent_th_26_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"th\", 48);\n    i0.ɵɵtext(1, \" Form ID \");\n    i0.ɵɵelementEnd();\n  }\n}\nfunction ListComponent_td_27_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"td\", 49);\n    i0.ɵɵtext(1);\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const row_r24 = ctx.$implicit;\n    i0.ɵɵadvance(1);\n    i0.ɵɵtextInterpolate1(\"\", row_r24.id, \" \");\n  }\n}\nfunction ListComponent_th_29_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"th\", 48);\n    i0.ɵɵtext(1, \" Form Name \");\n    i0.ɵɵelementEnd();\n  }\n}\nconst _c7 = function (a0) {\n  return {\n    \"cursorPointer\": a0\n  };\n};\nconst _c8 = function (a0) {\n  return {\n    \"text-dark\": a0\n  };\n};\nfunction ListComponent_td_30_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r27 = i0.ɵɵgetCurrentView();\n    i0.ɵɵelementStart(0, \"td\", 50);\n    i0.ɵɵlistener(\"click\", function ListComponent_td_30_Template_td_click_0_listener() {\n      const restoredCtx = i0.ɵɵrestoreView(_r27);\n      const row_r25 = restoredCtx.$implicit;\n      const ctx_r26 = i0.ɵɵnextContext();\n      return ctx_r26.viewActivityConfig(row_r25);\n    });\n    i0.ɵɵelementStart(1, \"a\", 51);\n    i0.ɵɵtext(2);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const row_r25 = ctx.$implicit;\n    const ctx_r5 = i0.ɵɵnextContext();\n    i0.ɵɵproperty(\"ngClass\", i0.ɵɵpureFunction1(4, _c7, ctx_r5.showCursorPointer(row_r25)));\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngClass\", i0.ɵɵpureFunction1(6, _c8, !ctx_r5.showCursorPointer(row_r25)))(\"matTooltip\", row_r25.name.length > 15 ? row_r25.name : \"\");\n    i0.ɵɵadvance(1);\n    i0.ɵɵtextInterpolate(row_r25.name ? row_r25.name.length > 15 ? row_r25.name.substring(0, 15) + \"...\" : row_r25.name : ctx_r5.COMMON_CONSTANT.HYPHEN);\n  }\n}\nfunction ListComponent_th_32_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r30 = i0.ɵɵgetCurrentView();\n    i0.ɵɵelementStart(0, \"th\", 52);\n    i0.ɵɵelementStart(1, \"funnel-filter\", 53, 54);\n    i0.ɵɵlistener(\"multi\", function ListComponent_th_32_Template_funnel_filter_multi_1_listener() {\n      i0.ɵɵrestoreView(_r30);\n      const ctx_r29 = i0.ɵɵnextContext();\n      return ctx_r29.activityFlag = true;\n    });\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const ctx_r6 = i0.ɵɵnextContext();\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"entityList\", ctx_r6.allActivity)(\"selectFC\", ctx_r6.activityFC)(\"active\", ctx_r6.activityFlag)(\"resetFlag\", ctx_r6.resetFlag);\n  }\n}\nfunction ListComponent_td_33_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"td\", 55);\n    i0.ɵɵtext(1);\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const row_r31 = ctx.$implicit;\n    i0.ɵɵproperty(\"matTooltip\", row_r31.activity.name.length > 25 ? row_r31.activity.name : \"\");\n    i0.ɵɵadvance(1);\n    i0.ɵɵtextInterpolate1(\" \", row_r31.activity.name.length > 25 ? row_r31.activity.name.slice(0, 25) + \"...\" : row_r31.activity.name, \" \");\n  }\n}\nfunction ListComponent_th_36_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r34 = i0.ɵɵgetCurrentView();\n    i0.ɵɵelementStart(0, \"th\", 56);\n    i0.ɵɵelementStart(1, \"funnel-filter\", 57, 58);\n    i0.ɵɵlistener(\"multi\", function ListComponent_th_36_Template_funnel_filter_multi_1_listener() {\n      i0.ɵɵrestoreView(_r34);\n      const ctx_r33 = i0.ɵɵnextContext();\n      return ctx_r33.formTypeFlag = true;\n    });\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const ctx_r8 = i0.ɵɵnextContext();\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"entityList\", ctx_r8.allFormType)(\"selectFC\", ctx_r8.formTypeFC)(\"active\", ctx_r8.formTypeFlag)(\"resetFlag\", ctx_r8.resetFlag);\n  }\n}\nconst _c9 = function (a0, a1) {\n  return {\n    \"cbamBadge\": a0,\n    \"ghgBadge\": a1\n  };\n};\nfunction ListComponent_td_37_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"td\", 59);\n    i0.ɵɵelementStart(1, \"span\", 60);\n    i0.ɵɵtext(2);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const row_r35 = ctx.$implicit;\n    const ctx_r9 = i0.ɵɵnextContext();\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngClass\", i0.ɵɵpureFunction2(2, _c9, row_r35.activityType.keyID == ctx_r9.ACTIVITY_FORM_TYPE_KEYID_ENUM.CBAM_FORM, row_r35.activityType.keyID == ctx_r9.ACTIVITY_FORM_TYPE_KEYID_ENUM.GHG_FORM));\n    i0.ɵɵadvance(1);\n    i0.ɵɵtextInterpolate1(\" \", row_r35.activityType.name, \" \");\n  }\n}\nfunction ListComponent_th_39_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r38 = i0.ɵɵgetCurrentView();\n    i0.ɵɵelementStart(0, \"th\", 61);\n    i0.ɵɵelementStart(1, \"span\", 62);\n    i0.ɵɵelementStart(2, \"funnel-filter\", 63, 64);\n    i0.ɵɵlistener(\"mono\", function ListComponent_th_39_Template_funnel_filter_mono_2_listener() {\n      i0.ɵɵrestoreView(_r38);\n      const ctx_r37 = i0.ɵɵnextContext();\n      return ctx_r37.statusFlag = true;\n    });\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const ctx_r10 = i0.ɵɵnextContext();\n    i0.ɵɵproperty(\"hidden\", !(ctx_r10.origin == ctx_r10.ActivityConfigEnum.PFF));\n    i0.ɵɵadvance(2);\n    i0.ɵɵproperty(\"entityList\", ctx_r10.statusList)(\"selectFC\", ctx_r10.statusFC)(\"active\", ctx_r10.statusFlag)(\"resetFlag\", ctx_r10.resetFlag);\n  }\n}\nfunction ListComponent_td_40_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"td\", 65);\n    i0.ɵɵtext(1);\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const row_r39 = ctx.$implicit;\n    const ctx_r11 = i0.ɵɵnextContext();\n    i0.ɵɵproperty(\"hidden\", !(ctx_r11.origin == ctx_r11.ActivityConfigEnum.PFF))(\"ngClass\", ctx_r11.StatusService.getStatusClass(row_r39.status));\n    i0.ɵɵadvance(1);\n    i0.ɵɵtextInterpolate1(\" \", row_r39.status ? ctx_r11.StatusService.getStatusValue(row_r39.status) : ctx_r11.COMMON_CONSTANT.HYPHEN, \" \");\n  }\n}\nfunction ListComponent_th_42_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"th\", 66);\n    i0.ɵɵtext(1, \" Linked records \");\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const ctx_r12 = i0.ɵɵnextContext();\n    i0.ɵɵproperty(\"hidden\", !(ctx_r12.origin == ctx_r12.ActivityConfigEnum.PFF));\n  }\n}\nfunction ListComponent_td_43_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r42 = i0.ɵɵgetCurrentView();\n    i0.ɵɵelementStart(0, \"td\", 67);\n    i0.ɵɵlistener(\"click\", function ListComponent_td_43_Template_td_click_0_listener() {\n      const restoredCtx = i0.ɵɵrestoreView(_r42);\n      const row_r40 = restoredCtx.$implicit;\n      const ctx_r41 = i0.ɵɵnextContext();\n      return ctx_r41.routeActivityDataPage(row_r40);\n    });\n    i0.ɵɵelementStart(1, \"a\", 51);\n    i0.ɵɵtext(2);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const row_r40 = ctx.$implicit;\n    const ctx_r13 = i0.ɵɵnextContext();\n    i0.ɵɵproperty(\"hidden\", !(ctx_r13.origin == ctx_r13.ActivityConfigEnum.PFF))(\"ngClass\", i0.ɵɵpureFunction1(5, _c7, row_r40.linkedRecordsCount > 0));\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngClass\", i0.ɵɵpureFunction1(7, _c8, row_r40.linkedRecordsCount == 0))(\"matTooltip\", row_r40.linkedRecordsCount);\n    i0.ɵɵadvance(1);\n    i0.ɵɵtextInterpolate(row_r40.linkedRecordsCount);\n  }\n}\nfunction ListComponent_th_45_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelement(0, \"th\", 68);\n  }\n  if (rf & 2) {\n    const ctx_r14 = i0.ɵɵnextContext();\n    i0.ɵɵproperty(\"hidden\", !(ctx_r14.origin == ctx_r14.ActivityConfigEnum.PFF));\n  }\n}\nfunction ListComponent_td_46_ng_container_2_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementContainer(0);\n  }\n}\nconst _c10 = function (a0) {\n  return [a0];\n};\nconst _c11 = function (a1, a3, a4) {\n  return {\n    icon: \"edit\",\n    tooltip: a1,\n    iconClass: \"text-primary updateIconHover\",\n    function: a3,\n    functionParameter: a4\n  };\n};\nfunction ListComponent_td_46_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r46 = i0.ɵɵgetCurrentView();\n    i0.ɵɵelementStart(0, \"td\", 69);\n    i0.ɵɵelementStart(1, \"div\", 70);\n    i0.ɵɵtemplate(2, ListComponent_td_46_ng_container_2_Template, 1, 0, \"ng-container\", 71);\n    i0.ɵɵelementStart(3, \"div\", 72);\n    i0.ɵɵelementStart(4, \"button\", 73);\n    i0.ɵɵelement(5, \"fa-icon\", 74);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(6, \"div\", 75);\n    i0.ɵɵelementStart(7, \"button\", 76);\n    i0.ɵɵlistener(\"click\", function ListComponent_td_46_Template_button_click_7_listener() {\n      const restoredCtx = i0.ɵɵrestoreView(_r46);\n      const row_r43 = restoredCtx.$implicit;\n      const ctx_r45 = i0.ɵɵnextContext();\n      return ctx_r45.routeToPFF(row_r43);\n    });\n    i0.ɵɵtext(8, \" Add record \");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const row_r43 = ctx.$implicit;\n    const ctx_r15 = i0.ɵɵnextContext();\n    const _r22 = i0.ɵɵreference(56);\n    i0.ɵɵproperty(\"hidden\", !(ctx_r15.origin == ctx_r15.ActivityConfigEnum.PFF));\n    i0.ɵɵadvance(2);\n    i0.ɵɵproperty(\"ngTemplateOutlet\", _r22)(\"ngTemplateOutletContext\", i0.ɵɵpureFunction3(8, _c11, ctx_r15.ButtonTooltipEnum.UPDATE, ctx_r15.updateActivityConfig, i0.ɵɵpureFunction1(6, _c10, row_r43)));\n    i0.ɵɵadvance(2);\n    i0.ɵɵproperty(\"matTooltip\", ctx_r15.ButtonTooltipEnum.MORE)(\"matRippleCentered\", ctx_r15.MATERIAL_CONSTANT.MAT_RIPPLE_CENTER);\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"icon\", ctx_r15.faEllipsisV);\n  }\n}\nfunction ListComponent_th_48_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelement(0, \"th\", 77);\n  }\n  if (rf & 2) {\n    const ctx_r16 = i0.ɵɵnextContext();\n    i0.ɵɵproperty(\"hidden\", ctx_r16.origin == ctx_r16.ActivityConfigEnum.PFF);\n  }\n}\nfunction ListComponent_td_49_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r50 = i0.ɵɵgetCurrentView();\n    i0.ɵɵelementStart(0, \"td\", 78);\n    i0.ɵɵelementStart(1, \"a\", 79);\n    i0.ɵɵlistener(\"click\", function ListComponent_td_49_Template_a_click_1_listener() {\n      const restoredCtx = i0.ɵɵrestoreView(_r50);\n      const row_r47 = restoredCtx.$implicit;\n      const ctx_r49 = i0.ɵɵnextContext();\n      return ctx_r49.closeDialog(row_r47);\n    });\n    i0.ɵɵelement(2, \"fa-icon\", 14);\n    i0.ɵɵtext(3, \"Record\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const ctx_r17 = i0.ɵɵnextContext();\n    i0.ɵɵproperty(\"hidden\", ctx_r17.origin == ctx_r17.ActivityConfigEnum.PFF);\n    i0.ɵɵadvance(2);\n    i0.ɵɵproperty(\"icon\", ctx_r17.faPlus);\n  }\n}\nfunction ListComponent_tr_50_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelement(0, \"tr\", 80);\n  }\n}\nfunction ListComponent_tr_51_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelement(0, \"tr\", 81);\n  }\n}\nfunction ListComponent_tr_52_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"tr\", 82);\n    i0.ɵɵelementStart(1, \"td\", 83);\n    i0.ɵɵtext(2);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const ctx_r20 = i0.ɵɵnextContext();\n    i0.ɵɵadvance(1);\n    i0.ɵɵattribute(\"colspan\", ctx_r20.displayedColumns.length);\n    i0.ɵɵadvance(1);\n    i0.ɵɵtextInterpolate1(\" \", ctx_r20.TABLE_CONSTANT.TABLE_NO_DATA, \" \");\n  }\n}\nfunction ListComponent_ng_template_55_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r58 = i0.ɵɵgetCurrentView();\n    i0.ɵɵelementStart(0, \"button\", 84);\n    i0.ɵɵlistener(\"click\", function ListComponent_ng_template_55_Template_button_click_0_listener() {\n      const restoredCtx = i0.ɵɵrestoreView(_r58);\n      const function_r55 = restoredCtx.function;\n      const functionParameter_r56 = restoredCtx.functionParameter;\n      const ctx_r57 = i0.ɵɵnextContext();\n      return ctx_r57.handleClick(function_r55, functionParameter_r56);\n    });\n    i0.ɵɵelementStart(1, \"span\", 85);\n    i0.ɵɵtext(2);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const icon_r52 = ctx.icon;\n    const tooltip_r53 = ctx.tooltip;\n    const iconClass_r54 = ctx.iconClass;\n    const ctx_r23 = i0.ɵɵnextContext();\n    i0.ɵɵclassMap(iconClass_r54);\n    i0.ɵɵproperty(\"matTooltip\", tooltip_r53)(\"matRippleCentered\", ctx_r23.MATERIAL_CONSTANT.MAT_RIPPLE_CENTER);\n    i0.ɵɵadvance(2);\n    i0.ɵɵtextInterpolate1(\" \", icon_r52, \" \");\n  }\n}\n// /tsc-library/\nexport let ListComponent = /*#__PURE__*/(() => {\n  class ListComponent {\n    //\n    constructor(dialog, storageService, activatedRoute, router, activityService, activityConfigController, activityController, StatusService) {\n      this.dialog = dialog;\n      this.storageService = storageService;\n      this.router = router;\n      this.activityService = activityService;\n      this.activityConfigController = activityConfigController;\n      this.activityController = activityController;\n      this.StatusService = StatusService;\n      this.closeDialogEvent = new EventEmitter();\n      this.MATERIAL_CONSTANT = MATERIAL_CONSTANT;\n      this.ButtonTooltipEnum = ButtonTooltipEnum;\n      this.ActivityConfigEnum = ActivityConfigEnum;\n      this.COMMON_CONSTANT = COMMON_CONSTANT;\n      this.TABLE_CONSTANT = TABLE_CONSTANT;\n      this.faEllipsisV = faEllipsisV;\n      this.faPlus = faPlus;\n      this.ACTIVITY_FORM_TYPE_KEYID_ENUM = ACTIVITY_FORM_TYPE_KEYID_ENUM;\n      this.resultLength = 0;\n      this.checkAll = new FormControl(false);\n      this.bulkActionArr = [];\n      this.selection = new SelectionModel(true, []);\n      this.displayedColumns = ['id', 'name', 'activityType', 'formType', 'status', 'linkedRecords', 'options', 'useActivityConfig'];\n      this.statusFlag = false;\n      this.statusFC = new FormControl('ALL');\n      this.searchFC = new FormControl('');\n      this.searchBy = '';\n      this.searchFlag = false;\n      this.resetFlag = false;\n      this.activityFlag = false;\n      this.activityFC = new FormControl(['all']);\n      this.formTypeFlag = false;\n      this.formTypeFC = new FormControl(['all']);\n      this.filterArr = [];\n      this.categoryFC = new FormControl([]);\n      this.searchValue = '';\n      this.statusList = [{\n        \"id\": 1,\n        \"keyID\": 'ALL',\n        \"name\": 'All status'\n      }, {\n        \"id\": 2,\n        \"keyID\": 'active',\n        \"name\": 'Active'\n      }, {\n        \"id\": 3,\n        \"keyID\": 'inactive',\n        \"name\": 'Inactive'\n      }];\n      this.isQueryParamFilters = false;\n      this.updateActivityConfig = row => {\n        console.log(this.router.navigate([`/carbon-setting/activity-config/${row.id}activity/${row.activity.keyID}/update`\n        // { outlets: { activityConfig: ['update'] } }\n        ], {\n          queryParams: {\n            activityID: row.activity.id,\n            origin: ActivityConfigEnum.PFF,\n            action: 'update',\n            tabView: 'YES'\n          }\n        }));\n        this.router.navigate([`/carbon-setting/activity-config/${row.id}activity/${row.activity.keyID}/update`\n        // { outlets: { activityConfig: ['update'] } }\n        ], {\n          queryParams: {\n            activityID: row.activity.id,\n            origin: ActivityConfigEnum.PFF,\n            action: 'update',\n            tabView: 'YES'\n          }\n        });\n      };\n      this.viewActivityConfig = row => {\n        if (this.viewType != VIEW_TYPE_ENUM.PAGE) {\n          this.closeDialogEvent.emit();\n        }\n        if (ACTIVITY_CONFIG_VIEW_PAGE_CONSTANT.includes(row.activity.keyID)) {\n          this.router.navigate(['/carbon-setting/activity-config', row.id, 'activity', row.activity.keyID, {\n            outlets: {\n              activityConfig: ['view']\n            }\n          }], {\n            queryParams: {\n              origin: ActivityConfigEnum.PFF,\n              activityKeyID: row.activity.keyID\n            }\n          });\n        } else {\n          return;\n        }\n      };\n      activatedRoute.queryParams.subscribe(params => {\n        this.origin = params.origin;\n      });\n      this.viewType = activatedRoute.snapshot.data.viewType;\n      let q_params = activatedRoute.snapshot.queryParams;\n      this.retainedFilters = q_params;\n      this.isQueryParamFilters = Boolean(q_params['haveFilters']);\n    }\n    ngOnInit() {\n      this.currentOrgID = this.storageService.getStorage('currentOrgID');\n      this.getAllActivity();\n      this.getAllFormType();\n    }\n    getAllActivity() {\n      return __awaiter(this, void 0, void 0, function* () {\n        this.allActivity = yield this.activityService.getAllActivity();\n        this.totalActivities = this.allActivity.length;\n      });\n    }\n    getAllFormType() {\n      this.activityController.getAllFormsType().subscribe(res => {\n        this.allFormType = res;\n        this.totalFormType = res.length;\n      }, error => {\n        console.log('error in getAllFormType -', error);\n      });\n    }\n    searchFn($event) {\n      this.searchValue = $event;\n      if (this.searchValue.length > 0) {\n        this.searchFlag = true;\n      } else {\n        this.searchFlag = false;\n      }\n      this.refreshBtn.nativeElement.click();\n    }\n    ngAfterViewInit() {\n      // getting retained filters\n      // this.getRetainedFilters();\n      this.getActivityFormList();\n    }\n    getActivityFormList() {\n      this.sort.sortChange.subscribe(() => this.paginator.pageIndex = 0);\n      fromEvent(this.refreshBtn.nativeElement, 'click').subscribe(() => this.paginator.pageIndex = 0);\n      merge(this.paginator.page, this.sort.sortChange, this.statusSelect.mono, this.formSelect.multi, this.activitySelect.multi, fromEvent(this.refreshBtn.nativeElement, 'click')).pipe(startWith({}), switchMap(() => {\n        // initially push dummy filter to handle one multi-select filter in backend (spring-boot issue)\n        this.filterArr = ['dummy:dummyfilter'];\n        if (this.searchFlag) {\n          var searchBy = 'name:' + this.searchValue;\n        }\n        if (this.statusFlag) {\n          if (this.statusFC.value == 'ALL') {\n            this.statusFlag = false;\n          } else {\n            this.filterArr.push('status:' + this.statusFC.value);\n          }\n        }\n        if (this.formTypeFlag) {\n          let selected_forms = this.formTypeFC.value.length - 1;\n          if (selected_forms == this.totalFormType) {\n            this.formTypeFlag = false;\n          } else this.filterArr.push('activityTypes:' + this.formTypeFC.value);\n        }\n        if (this.activityFlag) {\n          let selected_activities = this.activityFC.value.length - 1;\n          if (selected_activities == this.totalActivities) {\n            this.activityFlag = false;\n          } else this.filterArr.push('activities:' + this.activityFC.value);\n        }\n        // retaining and saving filters to local storage\n        // this.saveFilters();\n        return this.activityConfigController.getActivityConfigByPage(this.paginator.pageIndex, this.paginator.pageSize, this.sort.active, this.sort.direction, this.currentOrgID, this.filterArr, searchBy, this.searchFlag).pipe(catchError(() => observableOf(null)));\n      }), map(dataSource => {\n        if (dataSource == null) {\n          return [];\n        }\n        this.resultLength = dataSource[\"totalCount\"];\n        return dataSource.records;\n      })).subscribe(dataSource => {\n        this.dataSource = dataSource;\n      });\n    }\n    manualSelect(id, status, datasource) {\n      if (status) {\n        this.bulkActionArr.push({\n          \"id\": id\n        });\n      } else {\n        for (let i = this.bulkActionArr.length - 1; i >= 0; i--) {\n          if (this.bulkActionArr[i].id == id) {\n            this.bulkActionArr.splice(i, 1);\n          }\n        }\n      }\n      if (this.bulkActionArr.length === datasource.length) {\n        this.checkAll.setValue(true);\n      } else {\n        this.checkAll.setValue(false);\n      }\n    }\n    selectAll() {\n      this.bulkActionArr = [];\n      if (this.isAllSelected()) {\n        this.selection.clear();\n        return;\n      }\n      this.selection.select(...this.bulkActionArr);\n      this.dataSource.forEach(element => {\n        this.selection.select(element.id);\n        this.bulkActionArr.push({\n          \"id\": element.id,\n          \"status\": element.runStatus\n        });\n      });\n    }\n    isAllSelected() {\n      const selected = this.selection.selected.length;\n      const numRows = this.dataSource.length;\n      return selected === numRows;\n    }\n    refreshFilter() {\n      this.activityFlag = false;\n      this.formTypeFlag = false;\n      this.statusFlag = false;\n      // reset retaining filters\n      // this.saveFilters();\n      this.refreshBtn.nativeElement.click();\n    }\n    closeDialog(activityConfig) {\n      this.routeToPFF(activityConfig);\n      this.closeDialogEvent.emit();\n    }\n    routeToPFF(activityConfigData) {\n      let activityConfig = activityConfigData.activity;\n      let activityConfigID = activityConfigData.id;\n      // this.router.navigate(['/redirect']).then(() => {\n      this.router.navigate([`/activity-data/activity/${activityConfig['keyID']}`, {\n        outlets: {\n          activityData: ['create'],\n          activityConfig: ['update']\n        }\n      }], {\n        queryParams: {\n          activityID: activityConfig['id'],\n          origin: ActivityConfigEnum.AD_HOC,\n          action: 'create',\n          tabView: 'YES',\n          usePFF: 'YES',\n          activityConfigID: activityConfigID\n        }\n      });\n      // });\n    }\n\n    selectActivityForm() {\n      let dialogRef;\n      dialogRef = this.dialog.open(ActivitySelectionComponent, {\n        height: '100vh',\n        width: '800px',\n        position: {\n          right: '-2px',\n          top: '0px'\n        },\n        data: {\n          origin: this.origin,\n          action: 'create'\n        }\n      });\n      dialogRef.afterClosed().subscribe(result => {\n        if (result === 'opSuccess') {}\n      });\n    }\n    handleClick(func, params) {\n      func(...params);\n    }\n    showCursorPointer(row) {\n      let isCursorPointer = false;\n      if (ACTIVITY_CONFIG_VIEW_PAGE_CONSTANT.includes(row.activity.keyID)) {\n        isCursorPointer = true;\n      } else {\n        isCursorPointer = false;\n      }\n      return isCursorPointer;\n    }\n    routeActivityDataPage(row) {\n      if (row.linkedRecordsCount != 0) {\n        if (row.activityType.keyID == ACTIVITY_FORM_TYPE_KEYID_ENUM.GHG_FORM) {\n          this.router.navigate([`/activity-data/${row.activity.keyID}/page`], {\n            queryParams: {\n              activityConfigID: row.id,\n              dateFlag: false\n            }\n          });\n        } else {\n          this.router.navigate([`/cbam/activity-data/activity/${row.activity.keyID}/page`], {\n            queryParams: {\n              activityConfigID: row.id,\n              dateFlag: false\n            }\n          });\n        }\n      }\n    }\n    getRetainedFilters() {\n      let fiterJson = JSON.parse(this.storageService.getStorage('filters'));\n      let isFiltersApplied = fiterJson != null;\n      if (isFiltersApplied) {\n        let retainedStorageFilters = fiterJson['activity_config'];\n        if (!this.isQueryParamFilters && retainedStorageFilters != null) {\n          this.retainedFilters = retainedStorageFilters;\n        }\n      }\n      for (let key in this.retainedFilters) {\n        let value = this.retainedFilters[key];\n        if (key != 'haveFilters' && key != 'origin') {\n          if (key == 'activities' || key == 'activityTypes') {\n            value = this.getRetainedValueMulti(key, value);\n          }\n          this.setRetainedFilters(key, value);\n        }\n      }\n    }\n    getRetainedValueMulti(key, value) {\n      if (this.retainedFilters[key] instanceof Array) {\n        value = this.retainedFilters[key];\n      } else {\n        value = [this.retainedFilters[key]];\n      }\n      return value;\n    }\n    setRetainedFilters(filter, value) {\n      switch (filter) {\n        case 'search':\n          this.searchFlag = true;\n          this.searchValue = value;\n          this.filterArr.push(`${filter}:${value}`);\n          break;\n        case 'status':\n          this.statusFlag = true;\n          this.statusFC.patchValue(value);\n          this.filterArr.push(`${filter}:${value}`);\n          break;\n        case 'activityTypes':\n          this.formTypeFlag = true;\n          this.formTypeFC.patchValue(value);\n          this.filterArr.push(`${filter}:${value}`);\n          break;\n        case 'activities':\n          this.activityFlag = true;\n          this.activityFC.patchValue(value);\n          this.filterArr.push(`${filter}:${value}`);\n          break;\n        case 'sortBy':\n          this.sort.active = value;\n          break;\n        case 'sort':\n          this.sort.direction = value;\n          break;\n        case 'pageIndex':\n          this.paginator.pageIndex = Number(value);\n          break;\n        case 'pageSize':\n          this.paginator.pageSize = Number(value);\n          break;\n        default:\n          console.log('unidentified filter encountered - ', filter);\n      }\n    }\n    saveFilters() {\n      let filters = {\n        haveFilters: true,\n        pageSize: this.paginator.pageSize,\n        pageIndex: this.paginator.pageIndex,\n        sortBy: this.sort.active,\n        sort: this.sort.direction,\n        origin: 'pff'\n      };\n      // status filter\n      if (this.statusFlag && this.statusFC.value != 'ALL') {\n        filters['status'] = this.statusFC.value;\n      }\n      // activityTypes filter (form type)\n      if (this.formTypeFlag && this.formTypeFC.value != 'all') {\n        filters['activityTypes'] = this.formTypeFC.value;\n      }\n      // activities filter  \n      if (this.activityFlag && this.activityFC.value != 'all') {\n        filters['activities'] = this.activityFC.value;\n      }\n      //search\n      if (this.searchFlag) {\n        filters['search'] = this.searchValue;\n      }\n      //saving to local storage\n      this.setToStorage('activity_config', filters);\n    }\n    setToStorage(key, filters) {\n      let json = {};\n      json[key] = filters;\n      this.storageService.setStorage('filters', JSON.stringify(json));\n      this.router.navigate([location.pathname], {\n        queryParams: filters\n      });\n    }\n  }\n  ListComponent.ɵfac = function ListComponent_Factory(t) {\n    return new (t || ListComponent)(i0.ɵɵdirectiveInject(i1.MatDialog), i0.ɵɵdirectiveInject(i2.StorageService), i0.ɵɵdirectiveInject(i3.ActivatedRoute), i0.ɵɵdirectiveInject(i3.Router), i0.ɵɵdirectiveInject(i4.ActivityService), i0.ɵɵdirectiveInject(i5.ActivityConfigController), i0.ɵɵdirectiveInject(i6.ActivityController), i0.ɵɵdirectiveInject(i7.StatusService));\n  };\n  ListComponent.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n    type: ListComponent,\n    selectors: [[\"app-list\"]],\n    viewQuery: function ListComponent_Query(rf, ctx) {\n      if (rf & 1) {\n        i0.ɵɵviewQuery(_c0, 7);\n        i0.ɵɵviewQuery(MatPaginator, 7);\n        i0.ɵɵviewQuery(MatSort, 7);\n        i0.ɵɵviewQuery(_c1, 5);\n        i0.ɵɵviewQuery(_c2, 5);\n        i0.ɵɵviewQuery(_c3, 5);\n        i0.ɵɵviewQuery(_c4, 5);\n        i0.ɵɵviewQuery(_c5, 5);\n        i0.ɵɵviewQuery(_c6, 5);\n      }\n      if (rf & 2) {\n        let _t;\n        i0.ɵɵqueryRefresh(_t = i0.ɵɵloadQuery()) && (ctx.refreshBtn = _t.first);\n        i0.ɵɵqueryRefresh(_t = i0.ɵɵloadQuery()) && (ctx.paginator = _t.first);\n        i0.ɵɵqueryRefresh(_t = i0.ɵɵloadQuery()) && (ctx.sort = _t.first);\n        i0.ɵɵqueryRefresh(_t = i0.ɵɵloadQuery()) && (ctx.formType = _t.first);\n        i0.ɵɵqueryRefresh(_t = i0.ɵɵloadQuery()) && (ctx.statusSelect = _t.first);\n        i0.ɵɵqueryRefresh(_t = i0.ɵɵloadQuery()) && (ctx.formBtn = _t.first);\n        i0.ɵɵqueryRefresh(_t = i0.ɵɵloadQuery()) && (ctx.activityBtn = _t.first);\n        i0.ɵɵqueryRefresh(_t = i0.ɵɵloadQuery()) && (ctx.activitySelect = _t.first);\n        i0.ɵɵqueryRefresh(_t = i0.ɵɵloadQuery()) && (ctx.formSelect = _t.first);\n      }\n    },\n    outputs: {\n      closeDialogEvent: \"closeDialogEvent\"\n    },\n    decls: 57,\n    vars: 16,\n    consts: [[1, \"card\", \"cardOverwrite\", \"h100\"], [1, \"headerContainer\"], [1, \"headerLeftContainer\"], [1, \"pageTitle\"], [1, \"pageSubtitle\", 3, \"hidden\"], [1, \"headerRightContainer\"], [1, \"headerRightContainerInner\"], [\"searchBy\", \"form name\", 1, \"me-3\", 3, \"emitSearch\"], [\"searchBar\", \"\"], [\"matRipple\", \"\", \"matTooltipPosition\", \"below\", 1, \"btn\", \"btn-sm\", \"btn-light\", \"refreshBtn\", \"centerAlign\", \"me-3\", \"py-1\", 3, \"matRippleCentered\", \"matTooltip\"], [\"refreshBtn\", \"\"], [1, \"material-symbols-outlined\", \"text-secondary\"], [3, \"hidden\"], [\"type\", \"button\", \"matRipple\", \"\", \"matTooltipPosition\", \"below\", 1, \"btn\", \"btn-sm\", \"btn-success\", 3, \"matRippleCentered\", \"matTooltip\", \"click\"], [1, \"me-1\", 3, \"icon\"], [1, \"ms-3\", \"mb-4\", \"me-3\"], [\"matRipple\", \"\", 1, \"btn\", \"btn-link\", \"float-end\", 3, \"matRippleCentered\", \"disabled\", \"hidden\", \"click\"], [1, \"material-symbols-outlined\", \"fs-6\"], [\"mat-table\", \"\", \"matSort\", \"\", \"matSortActive\", \"id\", \"matSortDisableClear\", \"\", \"matSortDirection\", \"desc\", 1, \"sticky-header\", 3, \"dataSource\"], [\"matColumnDef\", \"id\"], [\"class\", \"columnWidth\", \"mat-header-cell\", \"\", \"mat-sort-header\", \"\", \"disableClear\", \"\", 4, \"matHeaderCellDef\"], [\"mat-cell\", \"\", 4, \"matCellDef\"], [\"matColumnDef\", \"name\"], [\"mat-cell\", \"\", 3, \"ngClass\", \"click\", 4, \"matCellDef\"], [\"matColumnDef\", \"activityType\"], [\"class\", \"col-sm-1 activityType\", \"mat-header-cell\", \"\", 4, \"matHeaderCellDef\"], [\"mat-cell\", \"\", 3, \"matTooltip\", 4, \"matCellDef\"], [\"matColumnDef\", \"formType\"], [\"class\", \"col-sm-1 ps-3\", \"mat-header-cell\", \"\", 4, \"matHeaderCellDef\"], [\"class\", \"ps-3\", \"mat-cell\", \"\", 4, \"matCellDef\"], [\"matColumnDef\", \"status\"], [\"mat-header-cell\", \"\", \"class\", \"col-sm-1 ps-5\", \"disableClear\", \"\", 3, \"hidden\", 4, \"matHeaderCellDef\"], [\"mat-cell\", \"\", \"class\", \"ps-5\", 3, \"hidden\", \"ngClass\", 4, \"matCellDef\"], [\"matColumnDef\", \"linkedRecords\"], [\"mat-header-cell\", \"\", \"class\", \"ps-5 linkedRecords\", 3, \"hidden\", 4, \"matHeaderCellDef\"], [\"mat-cell\", \"\", \"class\", \"text-start ps-5\", 3, \"hidden\", \"ngClass\", \"click\", 4, \"matCellDef\"], [\"matColumnDef\", \"options\"], [\"mat-header-cell\", \"\", \"class\", \"options\", 3, \"hidden\", 4, \"matHeaderCellDef\"], [\"mat-cell\", \"\", \"class\", \"options\", 3, \"hidden\", 4, \"matCellDef\"], [\"matColumnDef\", \"useActivityConfig\"], [\"mat-header-cell\", \"\", \"class\", \"isChecked\", 3, \"hidden\", 4, \"matHeaderCellDef\"], [\"class\", \"px-3 text-end\", \"mat-cell\", \"\", 3, \"hidden\", 4, \"matCellDef\"], [\"mat-header-row\", \"\", 4, \"matHeaderRowDef\"], [\"mat-row\", \"\", \"class\", \"dataRow\", 4, \"matRowDef\", \"matRowDefColumns\"], [\"class\", \"mat-row\", 4, \"matNoDataRow\"], [\"showFirstLastButtons\", \"\", 1, \"roundedBorder\", 3, \"length\", \"pageSizeOptions\", \"pageSize\"], [\"paginator\", \"\"], [\"icon\", \"\"], [\"mat-header-cell\", \"\", \"mat-sort-header\", \"\", \"disableClear\", \"\", 1, \"columnWidth\"], [\"mat-cell\", \"\"], [\"mat-cell\", \"\", 3, \"ngClass\", \"click\"], [3, \"ngClass\", \"matTooltip\"], [\"mat-header-cell\", \"\", 1, \"col-sm-1\", \"activityType\"], [\"header\", \"Activity type\", \"type\", \"multi\", \"value\", \"keyID\", \"view\", \"name\", \"selectAllLabel\", \"Select all activity\", 3, \"entityList\", \"selectFC\", \"active\", \"resetFlag\", \"multi\"], [\"activitySelect\", \"\"], [\"mat-cell\", \"\", 3, \"matTooltip\"], [\"mat-header-cell\", \"\", 1, \"col-sm-1\", \"ps-3\"], [\"header\", \"Form type\", \"type\", \"multi\", \"value\", \"keyID\", \"view\", \"name\", \"selectAllLabel\", \"All form type\", 3, \"entityList\", \"selectFC\", \"active\", \"resetFlag\", \"multi\"], [\"formSelect\", \"\"], [\"mat-cell\", \"\", 1, \"ps-3\"], [1, \"badge\", \"rounded-pill\", 3, \"ngClass\"], [\"mat-header-cell\", \"\", \"disableClear\", \"\", 1, \"col-sm-1\", \"ps-5\", 3, \"hidden\"], [1, \"filter3\"], [\"header\", \"Status\", \"type\", \"mono\", 3, \"entityList\", \"selectFC\", \"active\", \"resetFlag\", \"mono\"], [\"statusSelect\", \"\"], [\"mat-cell\", \"\", 1, \"ps-5\", 3, \"hidden\", \"ngClass\"], [\"mat-header-cell\", \"\", 1, \"ps-5\", \"linkedRecords\", 3, \"hidden\"], [\"mat-cell\", \"\", 1, \"text-start\", \"ps-5\", 3, \"hidden\", \"ngClass\", \"click\"], [\"mat-header-cell\", \"\", 1, \"options\", 3, \"hidden\"], [\"mat-cell\", \"\", 1, \"options\", 3, \"hidden\"], [1, \"centerAlignVertical\"], [4, \"ngTemplateOutlet\", \"ngTemplateOutletContext\"], [\"ngbDropdown\", \"\", \"placement\", \"left-top\", 1, \"btn-group\"], [\"type\", \"button\", \"ngbDropdownToggle\", \"\", \"matTooltipPosition\", \"below\", \"matRipple\", \"\", 1, \"dropdown-after\", \"dropdownAfter\", \"btn\", \"iconBtn\", \"text-secondary\", 3, \"matTooltip\", \"matRippleCentered\"], [3, \"icon\"], [\"ngbDropdownMenu\", \"\"], [1, \"dropdown-item\", 3, \"click\"], [\"mat-header-cell\", \"\", 1, \"isChecked\", 3, \"hidden\"], [\"mat-cell\", \"\", 1, \"px-3\", \"text-end\", 3, \"hidden\"], [1, \"btn\", \"btn-sm\", \"btn-success\", 3, \"click\"], [\"mat-header-row\", \"\"], [\"mat-row\", \"\", 1, \"dataRow\"], [1, \"mat-row\"], [1, \"mat-cell\", \"text-center\"], [\"matTooltipPosition\", \"below\", \"matRipple\", \"\", 1, \"iconBtn\", \"centerAlign\", 3, \"matTooltip\", \"matRippleCentered\", \"click\"], [1, \"material-symbols-outlined\", \"icon\"]],\n    template: function ListComponent_Template(rf, ctx) {\n      if (rf & 1) {\n        i0.ɵɵelementStart(0, \"div\", 0);\n        i0.ɵɵelementStart(1, \"div\", 1);\n        i0.ɵɵelementStart(2, \"div\", 2);\n        i0.ɵɵelementStart(3, \"div\", 3);\n        i0.ɵɵtext(4, \"Activity Forms\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(5, \"div\", 4);\n        i0.ɵɵtext(6, \"Activity forms are templates with specific details and settings that are used to collect data within your organization for any activity type.\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(7, \"div\", 5);\n        i0.ɵɵelementStart(8, \"div\", 6);\n        i0.ɵɵelementStart(9, \"lib-search-bar-one\", 7, 8);\n        i0.ɵɵlistener(\"emitSearch\", function ListComponent_Template_lib_search_bar_one_emitSearch_9_listener($event) {\n          return ctx.searchFn($event);\n        });\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(11, \"button\", 9, 10);\n        i0.ɵɵelementStart(13, \"span\", 11);\n        i0.ɵɵtext(14, \" refresh \");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(15, \"div\", 12);\n        i0.ɵɵelementStart(16, \"button\", 13);\n        i0.ɵɵlistener(\"click\", function ListComponent_Template_button_click_16_listener() {\n          return ctx.selectActivityForm();\n        });\n        i0.ɵɵelement(17, \"fa-icon\", 14);\n        i0.ɵɵtext(18, \"Activity Form \");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(19, \"div\", 15);\n        i0.ɵɵelementStart(20, \"button\", 16);\n        i0.ɵɵlistener(\"click\", function ListComponent_Template_button_click_20_listener() {\n          ctx.refreshFilter();\n          return ctx.resetFlag = !ctx.resetFlag;\n        });\n        i0.ɵɵelementStart(21, \"span\", 17);\n        i0.ɵɵtext(22, \" filter_list_off \");\n        i0.ɵɵelementEnd();\n        i0.ɵɵtext(23, \" Reset Filters \");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(24, \"table\", 18);\n        i0.ɵɵelementContainerStart(25, 19);\n        i0.ɵɵtemplate(26, ListComponent_th_26_Template, 2, 0, \"th\", 20);\n        i0.ɵɵtemplate(27, ListComponent_td_27_Template, 2, 1, \"td\", 21);\n        i0.ɵɵelementContainerEnd();\n        i0.ɵɵelementContainerStart(28, 22);\n        i0.ɵɵtemplate(29, ListComponent_th_29_Template, 2, 0, \"th\", 20);\n        i0.ɵɵtemplate(30, ListComponent_td_30_Template, 3, 8, \"td\", 23);\n        i0.ɵɵelementContainerEnd();\n        i0.ɵɵelementContainerStart(31, 24);\n        i0.ɵɵtemplate(32, ListComponent_th_32_Template, 3, 4, \"th\", 25);\n        i0.ɵɵtemplate(33, ListComponent_td_33_Template, 2, 2, \"td\", 26);\n        i0.ɵɵelementContainerEnd();\n        i0.ɵɵelementContainerStart(34);\n        i0.ɵɵelementContainerStart(35, 27);\n        i0.ɵɵtemplate(36, ListComponent_th_36_Template, 3, 4, \"th\", 28);\n        i0.ɵɵtemplate(37, ListComponent_td_37_Template, 3, 5, \"td\", 29);\n        i0.ɵɵelementContainerEnd();\n        i0.ɵɵelementContainerEnd();\n        i0.ɵɵelementContainerStart(38, 30);\n        i0.ɵɵtemplate(39, ListComponent_th_39_Template, 4, 5, \"th\", 31);\n        i0.ɵɵtemplate(40, ListComponent_td_40_Template, 2, 3, \"td\", 32);\n        i0.ɵɵelementContainerEnd();\n        i0.ɵɵelementContainerStart(41, 33);\n        i0.ɵɵtemplate(42, ListComponent_th_42_Template, 2, 1, \"th\", 34);\n        i0.ɵɵtemplate(43, ListComponent_td_43_Template, 3, 9, \"td\", 35);\n        i0.ɵɵelementContainerEnd();\n        i0.ɵɵelementContainerStart(44, 36);\n        i0.ɵɵtemplate(45, ListComponent_th_45_Template, 1, 1, \"th\", 37);\n        i0.ɵɵtemplate(46, ListComponent_td_46_Template, 9, 12, \"td\", 38);\n        i0.ɵɵelementContainerEnd();\n        i0.ɵɵelementContainerStart(47, 39);\n        i0.ɵɵtemplate(48, ListComponent_th_48_Template, 1, 1, \"th\", 40);\n        i0.ɵɵtemplate(49, ListComponent_td_49_Template, 4, 2, \"td\", 41);\n        i0.ɵɵelementContainerEnd();\n        i0.ɵɵtemplate(50, ListComponent_tr_50_Template, 1, 0, \"tr\", 42);\n        i0.ɵɵtemplate(51, ListComponent_tr_51_Template, 1, 0, \"tr\", 43);\n        i0.ɵɵtemplate(52, ListComponent_tr_52_Template, 3, 2, \"tr\", 44);\n        i0.ɵɵelementEnd();\n        i0.ɵɵelement(53, \"mat-paginator\", 45, 46);\n        i0.ɵɵelementEnd();\n        i0.ɵɵtemplate(55, ListComponent_ng_template_55_Template, 3, 5, \"ng-template\", null, 47, i0.ɵɵtemplateRefExtractor);\n      }\n      if (rf & 2) {\n        i0.ɵɵadvance(5);\n        i0.ɵɵproperty(\"hidden\", !(ctx.origin == ctx.ActivityConfigEnum.PFF));\n        i0.ɵɵadvance(6);\n        i0.ɵɵproperty(\"matRippleCentered\", ctx.MATERIAL_CONSTANT.MAT_RIPPLE_CENTER)(\"matTooltip\", ctx.ButtonTooltipEnum.REFRESH);\n        i0.ɵɵadvance(4);\n        i0.ɵɵproperty(\"hidden\", !(ctx.origin == ctx.ActivityConfigEnum.PFF));\n        i0.ɵɵadvance(1);\n        i0.ɵɵproperty(\"matRippleCentered\", ctx.MATERIAL_CONSTANT.MAT_RIPPLE_CENTER)(\"matTooltip\", ctx.ButtonTooltipEnum.CREATE);\n        i0.ɵɵadvance(1);\n        i0.ɵɵproperty(\"icon\", ctx.faPlus);\n        i0.ɵɵadvance(3);\n        i0.ɵɵproperty(\"matRippleCentered\", true)(\"disabled\", ctx.activityFlag == false && ctx.formTypeFlag == false && ctx.statusFlag == false)(\"hidden\", !(ctx.origin == ctx.ActivityConfigEnum.PFF));\n        i0.ɵɵadvance(4);\n        i0.ɵɵproperty(\"dataSource\", ctx.dataSource);\n        i0.ɵɵadvance(26);\n        i0.ɵɵproperty(\"matHeaderRowDef\", ctx.displayedColumns);\n        i0.ɵɵadvance(1);\n        i0.ɵɵproperty(\"matRowDefColumns\", ctx.displayedColumns);\n        i0.ɵɵadvance(2);\n        i0.ɵɵproperty(\"length\", ctx.resultLength)(\"pageSizeOptions\", ctx.TABLE_CONSTANT.PAGE_SIZE_OPTION)(\"pageSize\", ctx.TABLE_CONSTANT.DEFAULT_PAGE_SIZE);\n      }\n    },\n    directives: [i7.SearchBarOneComponent, i8.MatRipple, i9.MatTooltip, i10.FaIconComponent, i11.MatTable, i12.MatSort, i11.MatColumnDef, i11.MatHeaderCellDef, i11.MatCellDef, i11.MatHeaderRowDef, i11.MatRowDef, i11.MatNoDataRow, i13.MatPaginator, i11.MatHeaderCell, i12.MatSortHeader, i11.MatCell, i14.NgClass, i7.FunnelFilterComponent, i14.NgTemplateOutlet, i15.NgbDropdown, i15.NgbDropdownToggle, i15.NgbDropdownMenu, i11.MatHeaderRow, i11.MatRow],\n    styles: [\".isChecked[_ngcontent-%COMP%]{width:5%;align-items:center}.columnWidth[_ngcontent-%COMP%]{width:7%}.reportingPeriod[_ngcontent-%COMP%]{width:15%}.filter2[_ngcontent-%COMP%]{padding-left:20px;width:100px}.linkedRecords[_ngcontent-%COMP%]{width:10%}.options[_ngcontent-%COMP%]{width:5%}.btn-secondary-overwrite[_ngcontent-%COMP%]{color:#f2f5f7;background-color:#777;border-color:#6c757d;cursor:not-allowed}.cursor-not-allowed[_ngcontent-%COMP%]{cursor:not-allowed}.activityType[_ngcontent-%COMP%]{max-width:140px}.categoryStyle[_ngcontent-%COMP%]{width:0;height:0;overflow:hidden}.funnelStyle[_ngcontent-%COMP%]{width:0;height:0;overflow:hidden}.headerWidth[_ngcontent-%COMP%]{width:100px}.useActivityConfig[_ngcontent-%COMP%]{width:50px}.editDrop[_ngcontent-%COMP%]{padding:0}.sticky-header[_ngcontent-%COMP%]{overflow:hidden}.activityType[_ngcontent-%COMP%]{max-width:215vw}\"]\n  });\n  return ListComponent;\n})();","map":null,"metadata":{},"sourceType":"module"}