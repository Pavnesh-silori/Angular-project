{"ast":null,"code":"import { __awaiter } from \"tslib\";\nimport { EventEmitter } from '@angular/core';\nimport { Validators } from '@angular/forms';\nimport { isEqual } from 'lodash';\nimport { MobileCombustionDataInputTypeEnum, DataInputMethodKeyIDEnum } from '@carbon/enum/data-input-method.enum';\nimport { CARBON_CONSTANT } from '@carbon/constant/carbon.constant';\nimport { UnitTypeKeyID } from '@library/unit-service';\nimport { CreateUpdateComponent as VechileCreate } from \"@library/netzero\";\nimport { MatSelectSearchService, MaterialFormFieldAppearance, FormAction, VIEW_TYPE_ENUM, DialogEnum, FormErrorEnum } from '@library/tsc-common';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/forms\";\nimport * as i2 from \"@library/storage-service\";\nimport * as i3 from \"@angular/router\";\nimport * as i4 from \"library/netzero\";\nimport * as i5 from \"@library/unit-service\";\nimport * as i6 from \"@angular/material/dialog\";\nimport * as i7 from \"@carbon/service/data-input-method.service\";\nimport * as i8 from \"@angular/material/card\";\nimport * as i9 from \"@angular/common\";\nimport * as i10 from \"@angular/material/radio\";\nimport * as i11 from \"@angular/material/form-field\";\nimport * as i12 from \"@angular/material/select\";\nimport * as i13 from \"@angular/material/core\";\nimport * as i14 from \"ngx-mat-select-search\";\nimport * as i15 from \"@angular/material/input\";\nfunction ConfigCreateComponent_div_6_mat_error_5_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"mat-error\");\n    i0.ɵɵtext(1);\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const ctx_r13 = i0.ɵɵnextContext(2);\n    i0.ɵɵadvance(1);\n    i0.ɵɵtextInterpolate1(\" \", ctx_r13.FormErrorEnum.REQUIRED, \" \");\n  }\n}\nfunction ConfigCreateComponent_div_6_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\", 27);\n    i0.ɵɵelementStart(1, \"mat-form-field\", 15);\n    i0.ɵɵelementStart(2, \"mat-label\");\n    i0.ɵɵtext(3, \"Activity Form Name\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelement(4, \"input\", 28);\n    i0.ɵɵtemplate(5, ConfigCreateComponent_div_6_mat_error_5_Template, 2, 1, \"mat-error\", 20);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const ctx_r0 = i0.ɵɵnextContext();\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"appearance\", ctx_r0.MaterialFormFieldAppearance.FORM_FIELD_APPEARANCE);\n    i0.ɵɵadvance(4);\n    i0.ɵɵproperty(\"ngIf\", ctx_r0.errorHandling(\"activityConfig.configName\", \"required\"));\n  }\n}\nfunction ConfigCreateComponent_div_14_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r16 = i0.ɵɵgetCurrentView();\n    i0.ɵɵelementStart(0, \"div\", 29);\n    i0.ɵɵelementStart(1, \"mat-radio-button\", 30);\n    i0.ɵɵlistener(\"change\", function ConfigCreateComponent_div_14_Template_mat_radio_button_change_1_listener() {\n      const restoredCtx = i0.ɵɵrestoreView(_r16);\n      const type_r14 = restoredCtx.$implicit;\n      const ctx_r15 = i0.ɵɵnextContext();\n      return ctx_r15.chooseVehicleType(type_r14.keyID);\n    });\n    i0.ɵɵtext(2);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const type_r14 = ctx.$implicit;\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"value\", type_r14.id);\n    i0.ɵɵadvance(1);\n    i0.ɵɵtextInterpolate1(\" \", type_r14.name, \" \");\n  }\n}\nfunction ConfigCreateComponent_mat_error_15_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"mat-error\", 31);\n    i0.ɵɵtext(1);\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const ctx_r2 = i0.ɵɵnextContext();\n    i0.ɵɵadvance(1);\n    i0.ɵɵtextInterpolate1(\" \", ctx_r2.FormErrorEnum.REQUIRED, \" \");\n  }\n}\nfunction ConfigCreateComponent_mat_option_25_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r19 = i0.ɵɵgetCurrentView();\n    i0.ɵɵelementStart(0, \"mat-option\", 32);\n    i0.ɵɵlistener(\"click\", function ConfigCreateComponent_mat_option_25_Template_mat_option_click_0_listener() {\n      const restoredCtx = i0.ɵɵrestoreView(_r19);\n      const vehicle_r17 = restoredCtx.$implicit;\n      const ctx_r18 = i0.ɵɵnextContext();\n      return ctx_r18.setSourceTypeID(vehicle_r17);\n    });\n    i0.ɵɵtext(1);\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const vehicle_r17 = ctx.$implicit;\n    i0.ɵɵproperty(\"value\", vehicle_r17.id);\n    i0.ɵɵadvance(1);\n    i0.ɵɵtextInterpolate1(\" \", vehicle_r17.vehicleName, \" \");\n  }\n}\nfunction ConfigCreateComponent_mat_error_27_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"mat-error\");\n    i0.ɵɵtext(1, \" Select a vehicle type to select vehicle \");\n    i0.ɵɵelementEnd();\n  }\n}\nfunction ConfigCreateComponent_mat_error_28_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"mat-error\");\n    i0.ɵɵtext(1);\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const ctx_r5 = i0.ɵɵnextContext();\n    i0.ɵɵadvance(1);\n    i0.ɵɵtextInterpolate1(\" \", ctx_r5.FormErrorEnum.REQUIRED, \" \");\n  }\n}\nfunction ConfigCreateComponent_mat_hint_29_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"mat-hint\");\n    i0.ɵɵtext(1, \"Select a vehicle type to select vehicle\");\n    i0.ɵɵelementEnd();\n  }\n}\nfunction ConfigCreateComponent_span_31_ng_container_1_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementContainerStart(0);\n    i0.ɵɵtext(1, \" No vehicle found of selected type. \");\n    i0.ɵɵelementContainerEnd();\n  }\n}\nfunction ConfigCreateComponent_span_31_ng_container_3_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementContainerStart(0);\n    i0.ɵɵtext(1, \" new \");\n    i0.ɵɵelementContainerEnd();\n  }\n}\nfunction ConfigCreateComponent_span_31_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r23 = i0.ɵɵgetCurrentView();\n    i0.ɵɵelementStart(0, \"span\", 33);\n    i0.ɵɵlistener(\"click\", function ConfigCreateComponent_span_31_Template_span_click_0_listener() {\n      i0.ɵɵrestoreView(_r23);\n      const ctx_r22 = i0.ɵɵnextContext();\n      return ctx_r22.createVehicle(ctx_r22.FormAction.CREATE);\n    });\n    i0.ɵɵtemplate(1, ConfigCreateComponent_span_31_ng_container_1_Template, 2, 0, \"ng-container\", 20);\n    i0.ɵɵtext(2, \" Click here to create \");\n    i0.ɵɵtemplate(3, ConfigCreateComponent_span_31_ng_container_3_Template, 2, 0, \"ng-container\", 20);\n    i0.ɵɵtext(4, \" vehicle \");\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const ctx_r7 = i0.ɵɵnextContext();\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngIf\", ctx_r7.vechileTypeFlag);\n    i0.ɵɵadvance(2);\n    i0.ɵɵproperty(\"ngIf\", !ctx_r7.vechileTypeFlag);\n  }\n}\nfunction ConfigCreateComponent_div_39_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\", 29);\n    i0.ɵɵelementStart(1, \"div\", 34);\n    i0.ɵɵelementStart(2, \"mat-radio-button\", 35);\n    i0.ɵɵtext(3);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const input_r24 = ctx.$implicit;\n    i0.ɵɵadvance(2);\n    i0.ɵɵproperty(\"value\", input_r24.id);\n    i0.ɵɵadvance(1);\n    i0.ɵɵtextInterpolate1(\" \", input_r24.name, \" \");\n  }\n}\nfunction ConfigCreateComponent_mat_error_40_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"mat-error\", 31);\n    i0.ɵɵtext(1);\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const ctx_r9 = i0.ɵɵnextContext();\n    i0.ɵɵadvance(1);\n    i0.ɵɵtextInterpolate1(\" \", ctx_r9.FormErrorEnum.REQUIRED, \" \");\n  }\n}\nfunction ConfigCreateComponent_div_47_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r27 = i0.ɵɵgetCurrentView();\n    i0.ɵɵelementStart(0, \"div\", 29);\n    i0.ɵɵelementStart(1, \"div\", 34);\n    i0.ɵɵelementStart(2, \"mat-radio-button\", 30);\n    i0.ɵɵlistener(\"change\", function ConfigCreateComponent_div_47_Template_mat_radio_button_change_2_listener() {\n      const restoredCtx = i0.ɵɵrestoreView(_r27);\n      const input_r25 = restoredCtx.$implicit;\n      const ctx_r26 = i0.ɵɵnextContext();\n      return ctx_r26.getDistance(input_r25.keyID);\n    });\n    i0.ɵɵtext(3);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const input_r25 = ctx.$implicit;\n    i0.ɵɵadvance(2);\n    i0.ɵɵproperty(\"value\", input_r25.id);\n    i0.ɵɵadvance(1);\n    i0.ɵɵtextInterpolate1(\" \", input_r25.name, \" \");\n  }\n}\nfunction ConfigCreateComponent_mat_error_48_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"mat-error\", 31);\n    i0.ɵɵtext(1);\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const ctx_r11 = i0.ɵɵnextContext();\n    i0.ɵɵadvance(1);\n    i0.ɵɵtextInterpolate1(\" \", ctx_r11.FormErrorEnum.REQUIRED, \" \");\n  }\n}\nfunction ConfigCreateComponent_div_49_mat_error_7_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"mat-error\");\n    i0.ɵɵtext(1, \" odometer reading can't be negative. \");\n    i0.ɵɵelementEnd();\n  }\n}\nfunction ConfigCreateComponent_div_49_mat_error_8_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"mat-error\");\n    i0.ɵɵtext(1);\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const ctx_r29 = i0.ɵɵnextContext(2);\n    i0.ɵɵadvance(1);\n    i0.ɵɵtextInterpolate1(\" \", ctx_r29.FormErrorEnum.REQUIRED, \" \");\n  }\n}\nfunction ConfigCreateComponent_div_49_mat_option_14_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"mat-option\", 42);\n    i0.ɵɵtext(1);\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const unit_r32 = ctx.$implicit;\n    i0.ɵɵproperty(\"value\", unit_r32.id);\n    i0.ɵɵadvance(1);\n    i0.ɵɵtextInterpolate1(\" \", unit_r32.name, \" \");\n  }\n}\nfunction ConfigCreateComponent_div_49_mat_error_15_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"mat-error\");\n    i0.ɵɵtext(1);\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const ctx_r31 = i0.ɵɵnextContext(2);\n    i0.ɵɵadvance(1);\n    i0.ɵɵtextInterpolate1(\" \", ctx_r31.FormErrorEnum.REQUIRED, \" \");\n  }\n}\nfunction ConfigCreateComponent_div_49_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\", 36);\n    i0.ɵɵelementStart(1, \"div\", 3);\n    i0.ɵɵelementStart(2, \"div\", 4);\n    i0.ɵɵelementStart(3, \"div\", 3);\n    i0.ɵɵelementStart(4, \"div\", 4);\n    i0.ɵɵelementStart(5, \"mat-form-field\", 37);\n    i0.ɵɵelement(6, \"input\", 38);\n    i0.ɵɵtemplate(7, ConfigCreateComponent_div_49_mat_error_7_Template, 2, 0, \"mat-error\", 20);\n    i0.ɵɵtemplate(8, ConfigCreateComponent_div_49_mat_error_8_Template, 2, 1, \"mat-error\", 20);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(9, \"div\", 4);\n    i0.ɵɵelementStart(10, \"mat-form-field\", 39);\n    i0.ɵɵelementStart(11, \"mat-label\", 16);\n    i0.ɵɵtext(12, \"Select Unit\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(13, \"mat-select\", 40);\n    i0.ɵɵtemplate(14, ConfigCreateComponent_div_49_mat_option_14_Template, 2, 2, \"mat-option\", 41);\n    i0.ɵɵelementEnd();\n    i0.ɵɵtemplate(15, ConfigCreateComponent_div_49_mat_error_15_Template, 2, 1, \"mat-error\", 20);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const ctx_r12 = i0.ɵɵnextContext();\n    i0.ɵɵadvance(5);\n    i0.ɵɵproperty(\"appearance\", ctx_r12.MaterialFormFieldAppearance.FORM_FIELD_APPEARANCE);\n    i0.ɵɵadvance(2);\n    i0.ɵɵproperty(\"ngIf\", ctx_r12.activityConfigFG.get(\"activityConfigData.meterRollOver\").hasError(\"min\"));\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngIf\", ctx_r12.errorHandling(\"activityConfigData.meterRollOver\", \"required\"));\n    i0.ɵɵadvance(2);\n    i0.ɵɵproperty(\"appearance\", ctx_r12.MaterialFormFieldAppearance.FORM_FIELD_APPEARANCE);\n    i0.ɵɵadvance(4);\n    i0.ɵɵproperty(\"ngForOf\", ctx_r12.distanceUnit);\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngIf\", ctx_r12.errorHandling(\"activityConfigData.meterUnitID\", ctx_r12.required));\n  }\n}\n// /tsc-library/\nexport let ConfigCreateComponent = /*#__PURE__*/(() => {\n  class ConfigCreateComponent {\n    constructor(formBuilder, storageService, activatedRoute, vehicleService, unitService, dialog, dataInputMethodService, router) {\n      this.formBuilder = formBuilder;\n      this.storageService = storageService;\n      this.activatedRoute = activatedRoute;\n      this.vehicleService = vehicleService;\n      this.unitService = unitService;\n      this.dialog = dialog;\n      this.dataInputMethodService = dataInputMethodService;\n      this.router = router;\n      this.FormAction = FormAction;\n      this.FormErrorEnum = FormErrorEnum;\n      this.MaterialFormFieldAppearance = MaterialFormFieldAppearance;\n      this.MobileCombustionDataInputTypeEnum = MobileCombustionDataInputTypeEnum;\n      this.DataInputMethodKeyIDEnum = DataInputMethodKeyIDEnum;\n      this.vehicles = [];\n      this.onRoad = [];\n      this.nonRoad = [];\n      this.distanceUnit = [];\n      this.dataInputMethodList = [];\n      this.fuelInputList = [];\n      this.distanceInputList = [];\n      this.vechileTypeFlag = false;\n      this.sourceSearchUtil = new MatSelectSearchService(['vehicleName']);\n      this.formDataEvent = new EventEmitter();\n      this.isEqual = new EventEmitter();\n      this.validity = new EventEmitter();\n      this.errorHandling = (control, error) => {\n        return this.activityConfigFG.get(control).hasError(error);\n      };\n      this.isValid = () => {\n        return !this.activityConfigFG.invalid;\n      };\n    }\n    ngOnInit() {\n      this.currentOrgID = this.storageService.getStorage('currentOrgID');\n      this.activatedRoute.data.subscribe(routeData => {\n        console.log(routeData);\n        this.action = routeData['action'];\n        if (routeData['activityID']) {\n          this.activityID = routeData['activityID'];\n        }\n        if (routeData['origin']) {\n          this.origin = routeData['origin'];\n        }\n      });\n      this.activityKeyID = this.activatedRoute.snapshot.data['activityKeyID'];\n      this.getVehicleType();\n      this.getAllVehicle();\n      this.getUnit();\n      this.getAllDataInputMethodList();\n      this.activityConfigInit();\n    }\n    activityConfigInit() {\n      this.activityConfigFG = this.formBuilder.group({\n        activityConfig: this.formBuilder.group({\n          activityID: [this.activityID],\n          activityKeyID: [this.activityKeyID],\n          configName: [, Validators.required]\n        }),\n        activityConfigData: this.formBuilder.group({\n          vehicleTypeID: [, Validators.required],\n          fuelDataInputMethodID: [, Validators.required],\n          distanceDataInputMethodID: [, Validators.required],\n          meterRollOver: [],\n          meterUnitID: []\n        }),\n        activityConfigSource: this.formBuilder.group({\n          sourceID: [, Validators.required],\n          sourceTypeID: []\n        })\n      });\n      if (this.origin == 'ad-hoc') {\n        this.configNameAC.disable();\n      }\n    }\n    setSourceTypeID(data) {\n      this.activityConfigFG.get('activityConfigSource').get('sourceTypeID').patchValue(data.sourceTypeID, {\n        emitEvent: false\n      });\n    }\n    readOnlyForm() {\n      this.activityConfigFG.disable();\n    }\n    patchConfiguration(configuration) {\n      this.activityConfigFG.valueChanges.subscribe(() => {\n        this.isEqual.next(isEqual(this.initialObject, this.activityConfigFG.getRawValue()));\n      });\n      let activityConfig = configuration.activityConfig != null ? configuration.activityConfig : null;\n      let activityConfigData = configuration.activityConfigData;\n      let activityConfigSource = configuration.activityConfigSource;\n      if (activityConfig != null) {\n        this.activityConfigAC.patchValue({\n          configName: activityConfig.configName\n        });\n      }\n      //  else {\n      //     this.readOnlyForm();\n      // }\n      if (activityConfigData.vehicleTypeID) {\n        let type = this.vehicleType.find(res => res.id == activityConfigData.vehicleTypeID).keyID;\n        this.chooseVehicleType(type);\n      }\n      let distanceInputMethod = this.distanceInputList.find(res => res.id == activityConfigData.distanceDataInputMethodID);\n      this.getDistance(distanceInputMethod.keyID);\n      this.activityConfigDataAC.patchValue({\n        vehicleTypeID: activityConfigData.vehicleTypeID,\n        fuelDataInputMethodID: activityConfigData.fuelDataInputMethodID,\n        distanceDataInputMethodID: activityConfigData.distanceDataInputMethodID,\n        meterRollOver: activityConfigData.meterRollOver,\n        meterUnitID: activityConfigData.meterUnitID\n      });\n      this.activityConfigSourceAC.patchValue({\n        sourceID: activityConfigSource.sourceID,\n        sourceName: activityConfigSource.sourceName,\n        sourceTypeID: activityConfigSource.sourceTypeID\n      });\n      this.isEqual.next(true);\n      this.initialObject = this.activityConfigFG.value;\n    }\n    getVehicleType() {\n      return __awaiter(this, void 0, void 0, function* () {\n        this.vehicleType = yield this.vehicleService.getVehicleType();\n        this.vehicleType.forEach(res => {\n          if (res.keyID == CARBON_CONSTANT.VEHICLE_TYPE_ON_ROAD) {\n            this.onRoadID = res.id;\n          } else if (res.keyID == CARBON_CONSTANT.VEHICLE_TYPE_NON_ROAD) {\n            this.nonRoadID = res.id;\n          }\n        });\n      });\n    }\n    getAllVehicle() {\n      return __awaiter(this, void 0, void 0, function* () {\n        this.vehicles = yield this.vehicleService.getAllVehicle(this.currentOrgID);\n        console.log(this.vehicles);\n        this.vehicles.forEach(vehicle => {\n          if (vehicle.vehicleTypeID == this.onRoadID) {\n            this.onRoad.push(vehicle);\n          } else if (vehicle.vehicleTypeID == this.nonRoadID) {\n            this.nonRoad.push(vehicle);\n          }\n        });\n      });\n    }\n    chooseVehicleType(value) {\n      const inputFieldControl = this.activityConfigFG.get('activityConfigSource.sourceID');\n      inputFieldControl.reset('');\n      this.sourceSearchUtil.entityArr = [];\n      if (value == CARBON_CONSTANT.VEHICLE_TYPE_ON_ROAD && this.onRoad.length > 0) {\n        this.sourceSearchUtil.entityArr = this.onRoad;\n        this.sourceSearchUtil.createSubscription();\n        this.vechileTypeFlag = false;\n      } else if (value == CARBON_CONSTANT.VEHICLE_TYPE_NON_ROAD && this.nonRoad.length > 0) {\n        this.sourceSearchUtil.entityArr = this.nonRoad;\n        this.sourceSearchUtil.createSubscription();\n        this.vechileTypeFlag = false;\n      } else {\n        console.log('no vehicle found');\n        this.vechileTypeFlag = true;\n      }\n    }\n    getDistance(value) {\n      this.distanceID = value;\n      const activityConfigDataGroup = this.activityConfigFG.get('activityConfigData');\n      if (value == DataInputMethodKeyIDEnum.ODOMETER_READING) {\n        activityConfigDataGroup.get('meterRollOver').setValidators([Validators.required, Validators.min(0)]);\n        activityConfigDataGroup.get('meterUnitID').setValidators(Validators.required);\n      } else {\n        activityConfigDataGroup.get('meterRollOver').clearValidators();\n        activityConfigDataGroup.get('meterUnitID').clearValidators();\n      }\n      activityConfigDataGroup.get('meterRollOver').updateValueAndValidity();\n      activityConfigDataGroup.get('meterUnitID').updateValueAndValidity();\n      return this.distanceID;\n    }\n    emitFormData() {\n      if (this.formGroup.valid) {\n        this.formDataEvent.emit(this.formGroup.value);\n      } else {\n        this.formGroup.markAllAsTouched();\n      }\n    }\n    getAllDataInputMethodList() {\n      return __awaiter(this, void 0, void 0, function* () {\n        this.dataInputMethodList = yield this.dataInputMethodService.getAllDataInputMethodList();\n        this.dataInputMethodList.forEach(res => {\n          if (res.activityID == this.activityID && res.type == MobileCombustionDataInputTypeEnum.FUEL) {\n            this.fuelInputList.push(res);\n          } else if (res.activityID == this.activityID && res.type == MobileCombustionDataInputTypeEnum.DISTANCE) {\n            this.distanceInputList.push(res);\n          }\n        });\n      });\n    }\n    get getConfigJson() {\n      this.configuration = {};\n      this.configuration = JSON.parse(JSON.stringify(this.activityConfigFG.value));\n      this.configuration.activityConfigSource.sourceID = this.configuration.activityConfigSource.sourceID;\n      return this.configuration;\n    }\n    isValidForm() {\n      if (this.activityConfigFG.invalid) {\n        this.activityConfigFG.markAllAsTouched();\n        return false;\n      }\n      this.configuration = {};\n      this.configuration = JSON.parse(JSON.stringify(this.activityConfigFG.getRawValue()));\n      this.configuration.activityConfigSource.sourceID = this.configuration.activityConfigSource.sourceID;\n      return true;\n    }\n    activityConfigValidity() {\n      this.activityConfigFG.valueChanges.subscribe(() => this.validity.emit(!this.activityConfigFG.invalid));\n    }\n    getUnit() {\n      return __awaiter(this, void 0, void 0, function* () {\n        this.distanceUnit = yield this.unitService.getUnitUsingPublicUrl([`type:${UnitTypeKeyID.LENGTH}`]);\n      });\n    }\n    get activityConfigAC() {\n      return this.activityConfigFG.get('activityConfig');\n    }\n    get activityConfigSourceAC() {\n      return this.activityConfigFG.get('activityConfigSource');\n    }\n    get configNameAC() {\n      return this.activityConfigAC.get('configName');\n    }\n    get activityConfigDataAC() {\n      return this.activityConfigFG.get('activityConfigData');\n    }\n    createVehicle(operation) {\n      let action = operation;\n      let dialogRef;\n      let data;\n      if (action == FormAction.CREATE) {\n        data = {\n          action: FormAction.CREATE,\n          source: VIEW_TYPE_ENUM.DIALOG\n        };\n      }\n      dialogRef = this.dialog.open(VechileCreate, {\n        data: data,\n        minWidth: '600px',\n        maxWidth: '600px',\n        height: '100%',\n        position: {\n          right: '-2px',\n          top: '0px'\n        },\n        panelClass: 'matDialogContainerOverride'\n      });\n      dialogRef.afterClosed().subscribe(result => {\n        if (result.status == DialogEnum.SUCCESS_DR) {\n          this.getAllVehicle();\n        }\n      });\n    }\n  }\n  ConfigCreateComponent.ɵfac = function ConfigCreateComponent_Factory(t) {\n    return new (t || ConfigCreateComponent)(i0.ɵɵdirectiveInject(i1.FormBuilder), i0.ɵɵdirectiveInject(i2.StorageService), i0.ɵɵdirectiveInject(i3.ActivatedRoute), i0.ɵɵdirectiveInject(i4.VehicleService), i0.ɵɵdirectiveInject(i5.UnitService), i0.ɵɵdirectiveInject(i6.MatDialog), i0.ɵɵdirectiveInject(i7.DataInputMethodService), i0.ɵɵdirectiveInject(i3.Router));\n  };\n  ConfigCreateComponent.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n    type: ConfigCreateComponent,\n    selectors: [[\"app-config-create\"]],\n    outputs: {\n      formDataEvent: \"formDataEvent\"\n    },\n    decls: 50,\n    vars: 18,\n    consts: [[1, \"cardOverwrite\", \"border\"], [1, \"cardTitle\", \"pb-2\"], [3, \"formGroup\"], [1, \"row\"], [1, \"col-sm-6\"], [\"formGroupName\", \"activityConfig\", 4, \"ngIf\"], [1, \"col-sm-8\"], [1, \"sectionSubHeader\"], [\"formGroupName\", \"activityConfigData\"], [\"formControlName\", \"vehicleTypeID\"], [1, \"row\", \"my-1\"], [\"class\", \"col-sm-4 columnRadioBtn\", 4, \"ngFor\", \"ngForOf\"], [\"class\", \"pt-1\", 4, \"ngIf\"], [1, \"row\", \"pt-2\"], [\"formGroupName\", \"activityConfigSource\"], [1, \"matFieldWidth100\", 3, \"appearance\"], [1, \"formLabel\"], [\"formControlName\", \"sourceID\", \"multiple\", \"\"], [\"placeholderLabel\", \"Search by vehicle name\", \"noEntriesFoundLabel\", \"No matching name found.\", 3, \"formControl\"], [3, \"value\", \"click\", 4, \"ngFor\", \"ngForOf\"], [4, \"ngIf\"], [1, \"col-sm-3\", \"pt-3\"], [\"class\", \"btn-link cursorPointer\", 3, \"click\", 4, \"ngIf\"], [1, \"row\", \"pt-3\"], [\"formControlName\", \"fuelDataInputMethodID\"], [\"formControlName\", \"distanceDataInputMethodID\"], [\"class\", \"form-fields-container\", 4, \"ngIf\"], [\"formGroupName\", \"activityConfig\"], [\"matInput\", \"\", \"placeholder\", \"Activity Form Name\", \"formControlName\", \"configName\"], [1, \"col-sm-4\", \"columnRadioBtn\"], [1, \"radioBtnLabel\", 3, \"value\", \"change\"], [1, \"pt-1\"], [3, \"value\", \"click\"], [1, \"btn-link\", \"cursorPointer\", 3, \"click\"], [1, \"flex\"], [1, \"radioBtnLabel\", 3, \"value\"], [1, \"form-fields-container\"], [1, \"matFieldWidth100\", \"col-sm-3\", 3, \"appearance\"], [\"matInput\", \"\", \"min\", \"0\", \"type\", \"number\", \"matInput\", \"\", \"placeholder\", \"Meter rollover value\", \"type\", \"number\", \"formControlName\", \"meterRollOver\", 1, \"formPlaceholder\"], [1, \"matFieldWidth100\", \"col-sm-2\", 3, \"appearance\"], [\"formControlName\", \"meterUnitID\"], [3, \"value\", 4, \"ngFor\", \"ngForOf\"], [3, \"value\"]],\n    template: function ConfigCreateComponent_Template(rf, ctx) {\n      if (rf & 1) {\n        i0.ɵɵelementStart(0, \"mat-card\", 0);\n        i0.ɵɵelementStart(1, \"div\", 1);\n        i0.ɵɵtext(2, \" Details \");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(3, \"form\", 2);\n        i0.ɵɵelementStart(4, \"div\", 3);\n        i0.ɵɵelementStart(5, \"div\", 4);\n        i0.ɵɵtemplate(6, ConfigCreateComponent_div_6_Template, 6, 2, \"div\", 5);\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(7, \"div\", 3);\n        i0.ɵɵelementStart(8, \"div\", 6);\n        i0.ɵɵelementStart(9, \"span\", 7);\n        i0.ɵɵtext(10, \" Select a vehicles type for this configuration \");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(11, \"div\", 8);\n        i0.ɵɵelementStart(12, \"mat-radio-group\", 9);\n        i0.ɵɵelementStart(13, \"div\", 10);\n        i0.ɵɵtemplate(14, ConfigCreateComponent_div_14_Template, 3, 2, \"div\", 11);\n        i0.ɵɵelementEnd();\n        i0.ɵɵtemplate(15, ConfigCreateComponent_mat_error_15_Template, 2, 1, \"mat-error\", 12);\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(16, \"div\", 13);\n        i0.ɵɵelementStart(17, \"div\", 4);\n        i0.ɵɵelementStart(18, \"div\", 14);\n        i0.ɵɵelementStart(19, \"mat-form-field\", 15);\n        i0.ɵɵelementStart(20, \"mat-label\", 16);\n        i0.ɵɵtext(21, \" Select Vehicle\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(22, \"mat-select\", 17);\n        i0.ɵɵelementStart(23, \"mat-option\");\n        i0.ɵɵelement(24, \"ngx-mat-select-search\", 18);\n        i0.ɵɵelementEnd();\n        i0.ɵɵtemplate(25, ConfigCreateComponent_mat_option_25_Template, 2, 2, \"mat-option\", 19);\n        i0.ɵɵpipe(26, \"async\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵtemplate(27, ConfigCreateComponent_mat_error_27_Template, 2, 0, \"mat-error\", 20);\n        i0.ɵɵtemplate(28, ConfigCreateComponent_mat_error_28_Template, 2, 1, \"mat-error\", 20);\n        i0.ɵɵtemplate(29, ConfigCreateComponent_mat_hint_29_Template, 2, 0, \"mat-hint\", 20);\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(30, \"div\", 21);\n        i0.ɵɵtemplate(31, ConfigCreateComponent_span_31_Template, 5, 2, \"span\", 22);\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(32, \"div\", 8);\n        i0.ɵɵelementStart(33, \"div\", 23);\n        i0.ɵɵelementStart(34, \"div\", 6);\n        i0.ɵɵelementStart(35, \"span\", 7);\n        i0.ɵɵtext(36, \" Enter Fuel Using \");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(37, \"mat-radio-group\", 24);\n        i0.ɵɵelementStart(38, \"div\", 10);\n        i0.ɵɵtemplate(39, ConfigCreateComponent_div_39_Template, 4, 2, \"div\", 11);\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementEnd();\n        i0.ɵɵtemplate(40, ConfigCreateComponent_mat_error_40_Template, 2, 1, \"mat-error\", 12);\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(41, \"div\", 23);\n        i0.ɵɵelementStart(42, \"div\", 6);\n        i0.ɵɵelementStart(43, \"span\", 7);\n        i0.ɵɵtext(44, \" Enter Distance Using \");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(45, \"mat-radio-group\", 25);\n        i0.ɵɵelementStart(46, \"div\", 10);\n        i0.ɵɵtemplate(47, ConfigCreateComponent_div_47_Template, 4, 2, \"div\", 11);\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementEnd();\n        i0.ɵɵtemplate(48, ConfigCreateComponent_mat_error_48_Template, 2, 1, \"mat-error\", 12);\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementEnd();\n        i0.ɵɵtemplate(49, ConfigCreateComponent_div_49_Template, 16, 6, \"div\", 26);\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementEnd();\n      }\n      if (rf & 2) {\n        i0.ɵɵadvance(3);\n        i0.ɵɵproperty(\"formGroup\", ctx.activityConfigFG);\n        i0.ɵɵadvance(3);\n        i0.ɵɵproperty(\"ngIf\", ctx.origin == \"pff\");\n        i0.ɵɵadvance(8);\n        i0.ɵɵproperty(\"ngForOf\", ctx.vehicleType);\n        i0.ɵɵadvance(1);\n        i0.ɵɵproperty(\"ngIf\", ctx.errorHandling(\"activityConfigData.vehicleTypeID\", \"required\") && ctx.activityConfigFG.get(\"activityConfigData.vehicleTypeID\").touched);\n        i0.ɵɵadvance(4);\n        i0.ɵɵproperty(\"appearance\", ctx.MaterialFormFieldAppearance.FORM_FIELD_APPEARANCE);\n        i0.ɵɵadvance(5);\n        i0.ɵɵproperty(\"formControl\", ctx.sourceSearchUtil.filterFC);\n        i0.ɵɵadvance(1);\n        i0.ɵɵproperty(\"ngForOf\", i0.ɵɵpipeBind1(26, 16, ctx.sourceSearchUtil.filteredEntities));\n        i0.ɵɵadvance(2);\n        i0.ɵɵproperty(\"ngIf\", !ctx.activityConfigFG.get(\"activityConfigData.vehicleTypeID\").value);\n        i0.ɵɵadvance(1);\n        i0.ɵɵproperty(\"ngIf\", ctx.activityConfigFG.get(\"activityConfigData.vehicleTypeID\").value && ctx.errorHandling(\"activityConfigSource.sourceID\", \"required\"));\n        i0.ɵɵadvance(1);\n        i0.ɵɵproperty(\"ngIf\", !ctx.activityConfigFG.get(\"activityConfigData.vehicleTypeID\").value);\n        i0.ɵɵadvance(2);\n        i0.ɵɵproperty(\"ngIf\", ctx.action == \"create\");\n        i0.ɵɵadvance(8);\n        i0.ɵɵproperty(\"ngForOf\", ctx.fuelInputList);\n        i0.ɵɵadvance(1);\n        i0.ɵɵproperty(\"ngIf\", ctx.errorHandling(\"activityConfigData.fuelDataInputMethodID\", \"required\") && ctx.activityConfigFG.get(\"activityConfigData.fuelDataInputMethodID\").touched);\n        i0.ɵɵadvance(7);\n        i0.ɵɵproperty(\"ngForOf\", ctx.distanceInputList);\n        i0.ɵɵadvance(1);\n        i0.ɵɵproperty(\"ngIf\", ctx.errorHandling(\"activityConfigData.distanceDataInputMethodID\", \"required\") && ctx.activityConfigFG.get(\"activityConfigData.distanceDataInputMethodID\").touched);\n        i0.ɵɵadvance(1);\n        i0.ɵɵproperty(\"ngIf\", ctx.distanceID == ctx.DataInputMethodKeyIDEnum.ODOMETER_READING);\n      }\n    },\n    directives: [i8.MatCard, i1.ɵNgNoValidate, i1.NgControlStatusGroup, i1.FormGroupDirective, i9.NgIf, i1.FormGroupName, i10.MatRadioGroup, i1.NgControlStatus, i1.FormControlName, i9.NgForOf, i11.MatFormField, i11.MatLabel, i12.MatSelect, i13.MatOption, i14.MatSelectSearchComponent, i1.FormControlDirective, i15.MatInput, i1.DefaultValueAccessor, i11.MatError, i10.MatRadioButton, i11.MatHint, i1.MinValidator, i1.NumberValueAccessor],\n    pipes: [i9.AsyncPipe],\n    styles: [\"\"]\n  });\n  return ConfigCreateComponent;\n})();","map":null,"metadata":{},"sourceType":"module"}