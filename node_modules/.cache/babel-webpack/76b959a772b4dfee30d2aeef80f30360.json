{"ast":null,"code":"import { Validators } from '@angular/forms';\nimport { MAT_DIALOG_DATA } from '@angular/material/dialog';\nimport { CommonModule } from '@angular/common';\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\nimport { MatDialogModule } from '@angular/material/dialog';\nimport { MatInputModule } from '@angular/material/input';\nimport { MatSelectModule } from '@angular/material/select';\nimport { MatFormFieldModule } from '@angular/material/form-field';\nimport { NgxMatSelectSearchModule } from 'ngx-mat-select-search';\n// tsc-library\nimport { ButtonLabelEnum, InvalidForm, MatSelectSearchService, MaterialFormFieldAppearance } from '@library/tsc-common';\nimport { ToastrColor } from '@library/toastr-service';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/material/dialog\";\nimport * as i2 from \"@angular/forms\";\nimport * as i3 from \"@library/toastr-service\";\nimport * as i4 from \"@angular/material/form-field\";\nimport * as i5 from \"@angular/material/input\";\nimport * as i6 from \"@angular/common\";\nimport * as i7 from \"@angular/material/select\";\nimport * as i8 from \"@angular/material/core\";\nimport * as i9 from \"ngx-mat-select-search\";\nfunction HhvCreateUpdateDialog_mat_error_9_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"mat-error\");\n    i0.ɵɵtext(1, \" Value is required \");\n    i0.ɵɵelementEnd();\n  }\n}\nfunction HhvCreateUpdateDialog_mat_error_10_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"mat-error\");\n    i0.ɵɵtext(1, \" Value cannot be negative! \");\n    i0.ɵɵelementEnd();\n  }\n}\nfunction HhvCreateUpdateDialog_mat_option_17_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"mat-option\", 15);\n    i0.ɵɵtext(1);\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const unit_r6 = ctx.$implicit;\n    i0.ɵɵproperty(\"value\", unit_r6.id);\n    i0.ɵɵadvance(1);\n    i0.ɵɵtextInterpolate1(\" \", unit_r6.name, \" \");\n  }\n}\nfunction HhvCreateUpdateDialog_mat_error_19_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"mat-error\");\n    i0.ɵɵtext(1, \" HHV numerator is required \");\n    i0.ɵɵelementEnd();\n  }\n}\nfunction HhvCreateUpdateDialog_mat_option_26_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"mat-option\", 15);\n    i0.ɵɵtext(1);\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const unit_r7 = ctx.$implicit;\n    i0.ɵɵproperty(\"value\", unit_r7.id);\n    i0.ɵɵadvance(1);\n    i0.ɵɵtextInterpolate1(\" \", unit_r7.name, \" \");\n  }\n}\nfunction HhvCreateUpdateDialog_mat_error_28_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"mat-error\");\n    i0.ɵɵtext(1, \" HHV denominator is required \");\n    i0.ɵɵelementEnd();\n  }\n}\n// / tsc-library\nexport let HhvCreateUpdateDialog = /*#__PURE__*/(() => {\n  class HhvCreateUpdateDialog {\n    constructor(dialogRef, formBuilder, toastrService, data) {\n      this.dialogRef = dialogRef;\n      this.formBuilder = formBuilder;\n      this.toastrService = toastrService;\n      this.data = data;\n      this.MaterialFormFieldAppearance = MaterialFormFieldAppearance;\n      this.ButtonLabelEnum = ButtonLabelEnum;\n      this.NUMERATOR = 'numerator';\n      this.DENOMINATOR = 'denominator';\n      this.numeratorSearchUtility = new MatSelectSearchService(['name']);\n      this.denominatorSearchUtility = new MatSelectSearchService(['name']);\n      this.dialogRef.disableClose = true;\n      this.hhv = data['hhv'];\n      this.numeratorSearchUtility.entityArr = data['energyUnits'];\n      this.numeratorSearchUtility.createSubscription();\n      this.denominatorSearchUtility.entityArr = data['massVolumeUnits'];\n      this.denominatorSearchUtility.createSubscription();\n    }\n    ngOnInit() {\n      this.hhvFGInit();\n    }\n    hhvFGInit() {\n      var _a, _b, _c, _d, _e;\n      this.hhvFG = this.formBuilder.group({\n        hhv: [(_a = this.hhv) === null || _a === void 0 ? void 0 : _a.hhv, [Validators.required, Validators.min(0)]],\n        hhvNumeratorUnitID: [(_b = this.hhv) === null || _b === void 0 ? void 0 : _b.hhvNumeratorUnitID, Validators.required],\n        hhvNumeratorUomCode: [(_c = this.hhv) === null || _c === void 0 ? void 0 : _c.hhvNumeratorUomCode],\n        hhvDenominatorUnitID: [(_d = this.hhv) === null || _d === void 0 ? void 0 : _d.hhvDenominatorUnitID, Validators.required],\n        hhvDenominatorUomCode: [(_e = this.hhv) === null || _e === void 0 ? void 0 : _e.hhvDenominatorUomCode]\n      });\n    }\n    set hhvNumeratorUomCode(code) {\n      this.hhvFG.get('hhvNumeratorUomCode').patchValue(code);\n    }\n    set hhvDenominatorUomCode(code) {\n      this.hhvFG.get('hhvDenominatorUomCode').patchValue(code);\n    }\n    setHhvValue() {\n      if (this.hhvFG.invalid) {\n        console.log('invalid form - ', this.hhvFG);\n        this.toastrService.openToast(InvalidForm.INVALID_FORM_TITLE, InvalidForm.INVALID_FORM_MESSAGE, ToastrColor.ERROR);\n        return;\n      }\n      this.dialogRef.close({\n        hhv: this.hhvFG.value\n      });\n    }\n    unitSelected(unitID, type) {\n      switch (type) {\n        case this.NUMERATOR:\n          this.hhvNumeratorUomCode = this.numeratorSearchUtility.entityArr.find(unit => unit['id'] == unitID)['uomCode'];\n          break;\n        case this.DENOMINATOR:\n          this.hhvDenominatorUomCode = this.denominatorSearchUtility.entityArr.find(unit => unit['id'] == unitID)['uomCode'];\n          break;\n        default:\n          console.log('undefined case encountered - ', type);\n      }\n    }\n    errorHandling(control, error) {\n      return this.hhvFG.get(control).hasError(error);\n    }\n  }\n  HhvCreateUpdateDialog.ɵfac = function HhvCreateUpdateDialog_Factory(t) {\n    return new (t || HhvCreateUpdateDialog)(i0.ɵɵdirectiveInject(i1.MatDialogRef), i0.ɵɵdirectiveInject(i2.FormBuilder), i0.ɵɵdirectiveInject(i3.ToastrService), i0.ɵɵdirectiveInject(MAT_DIALOG_DATA));\n  };\n  HhvCreateUpdateDialog.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n    type: HhvCreateUpdateDialog,\n    selectors: [[\"app-create-update-hhv\"]],\n    decls: 34,\n    vars: 17,\n    consts: [[\"mat-dialog-title\", \"\"], [1, \"dialogHeader\"], [\"mat-dialog-content\", \"\"], [3, \"formGroup\"], [1, \"matFieldWidth100\", 3, \"appearance\"], [1, \"formLabel\"], [\"matInput\", \"\", \"type\", \"number\", \"min\", \"0\", \"placeholder\", \"HHV value\", \"formControlName\", \"hhv\", \"required\", \"\", 1, \"formPlaceholder\"], [4, \"ngIf\"], [\"formControlName\", \"hhvNumeratorUnitID\", 3, \"selectionChange\"], [\"placeholderLabel\", \"Search by unit name\", \"noEntriesFoundLabel\", \"No matching unit found.\", 3, \"formControl\"], [3, \"value\", 4, \"ngFor\", \"ngForOf\"], [\"formControlName\", \"hhvDenominatorUnitID\", 3, \"selectionChange\"], [\"mat-dialog-footer\", \"\", \"align\", \"end\"], [\"type\", \"button\", \"mat-dialog-close\", \"\", 1, \"button\", \"btn\", \"btn-secondary\", \"me-2\"], [\"type\", \"submit\", 1, \"button\", \"btn\", \"btn-primary\", 3, \"click\"], [3, \"value\"]],\n    template: function HhvCreateUpdateDialog_Template(rf, ctx) {\n      if (rf & 1) {\n        i0.ɵɵelementStart(0, \"div\", 0);\n        i0.ɵɵelementStart(1, \"strong\", 1);\n        i0.ɵɵtext(2, \" Update HHV \");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(3, \"div\", 2);\n        i0.ɵɵelementStart(4, \"form\", 3);\n        i0.ɵɵelementStart(5, \"mat-form-field\", 4);\n        i0.ɵɵelementStart(6, \"mat-label\", 5);\n        i0.ɵɵtext(7, \" HHV value \");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelement(8, \"input\", 6);\n        i0.ɵɵtemplate(9, HhvCreateUpdateDialog_mat_error_9_Template, 2, 0, \"mat-error\", 7);\n        i0.ɵɵtemplate(10, HhvCreateUpdateDialog_mat_error_10_Template, 2, 0, \"mat-error\", 7);\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(11, \"mat-form-field\", 4);\n        i0.ɵɵelementStart(12, \"mat-label\");\n        i0.ɵɵtext(13, \"Select HHV numerator\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(14, \"mat-select\", 8);\n        i0.ɵɵlistener(\"selectionChange\", function HhvCreateUpdateDialog_Template_mat_select_selectionChange_14_listener($event) {\n          return ctx.unitSelected($event.value, ctx.NUMERATOR);\n        });\n        i0.ɵɵelementStart(15, \"mat-option\");\n        i0.ɵɵelement(16, \"ngx-mat-select-search\", 9);\n        i0.ɵɵelementEnd();\n        i0.ɵɵtemplate(17, HhvCreateUpdateDialog_mat_option_17_Template, 2, 2, \"mat-option\", 10);\n        i0.ɵɵpipe(18, \"async\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵtemplate(19, HhvCreateUpdateDialog_mat_error_19_Template, 2, 0, \"mat-error\", 7);\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(20, \"mat-form-field\", 4);\n        i0.ɵɵelementStart(21, \"mat-label\");\n        i0.ɵɵtext(22, \"Select HHV denominator\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(23, \"mat-select\", 11);\n        i0.ɵɵlistener(\"selectionChange\", function HhvCreateUpdateDialog_Template_mat_select_selectionChange_23_listener($event) {\n          return ctx.unitSelected($event.value, ctx.DENOMINATOR);\n        });\n        i0.ɵɵelementStart(24, \"mat-option\");\n        i0.ɵɵelement(25, \"ngx-mat-select-search\", 9);\n        i0.ɵɵelementEnd();\n        i0.ɵɵtemplate(26, HhvCreateUpdateDialog_mat_option_26_Template, 2, 2, \"mat-option\", 10);\n        i0.ɵɵpipe(27, \"async\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵtemplate(28, HhvCreateUpdateDialog_mat_error_28_Template, 2, 0, \"mat-error\", 7);\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(29, \"div\", 12);\n        i0.ɵɵelementStart(30, \"button\", 13);\n        i0.ɵɵtext(31, \" Cancel \");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(32, \"button\", 14);\n        i0.ɵɵlistener(\"click\", function HhvCreateUpdateDialog_Template_button_click_32_listener() {\n          return ctx.setHhvValue();\n        });\n        i0.ɵɵtext(33);\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementEnd();\n      }\n      if (rf & 2) {\n        i0.ɵɵadvance(4);\n        i0.ɵɵproperty(\"formGroup\", ctx.hhvFG);\n        i0.ɵɵadvance(1);\n        i0.ɵɵproperty(\"appearance\", ctx.MaterialFormFieldAppearance.FORM_FIELD_APPEARANCE);\n        i0.ɵɵadvance(4);\n        i0.ɵɵproperty(\"ngIf\", ctx.errorHandling(\"hhv\", \"required\"));\n        i0.ɵɵadvance(1);\n        i0.ɵɵproperty(\"ngIf\", ctx.errorHandling(\"hhv\", \"min\"));\n        i0.ɵɵadvance(1);\n        i0.ɵɵproperty(\"appearance\", ctx.MaterialFormFieldAppearance.FORM_FIELD_APPEARANCE);\n        i0.ɵɵadvance(5);\n        i0.ɵɵproperty(\"formControl\", ctx.numeratorSearchUtility.filterFC);\n        i0.ɵɵadvance(1);\n        i0.ɵɵproperty(\"ngForOf\", i0.ɵɵpipeBind1(18, 13, ctx.numeratorSearchUtility.filteredEntities));\n        i0.ɵɵadvance(2);\n        i0.ɵɵproperty(\"ngIf\", ctx.errorHandling(\"hhvNumeratorUnitID\", \"required\"));\n        i0.ɵɵadvance(1);\n        i0.ɵɵproperty(\"appearance\", ctx.MaterialFormFieldAppearance.FORM_FIELD_APPEARANCE);\n        i0.ɵɵadvance(5);\n        i0.ɵɵproperty(\"formControl\", ctx.denominatorSearchUtility.filterFC);\n        i0.ɵɵadvance(1);\n        i0.ɵɵproperty(\"ngForOf\", i0.ɵɵpipeBind1(27, 15, ctx.denominatorSearchUtility.filteredEntities));\n        i0.ɵɵadvance(2);\n        i0.ɵɵproperty(\"ngIf\", ctx.errorHandling(\"hhvDenominatorUnitID\", \"required\"));\n        i0.ɵɵadvance(5);\n        i0.ɵɵtextInterpolate1(\" \", ctx.ButtonLabelEnum.SAVE_BTN_LABEL, \" \");\n      }\n    },\n    directives: [i1.MatDialogTitle, i1.MatDialogContent, i2.ɵNgNoValidate, i2.NgControlStatusGroup, i2.FormGroupDirective, i4.MatFormField, i4.MatLabel, i5.MatInput, i2.MinValidator, i2.NumberValueAccessor, i2.DefaultValueAccessor, i2.NgControlStatus, i2.FormControlName, i2.RequiredValidator, i6.NgIf, i7.MatSelect, i8.MatOption, i9.MatSelectSearchComponent, i2.FormControlDirective, i6.NgForOf, i1.MatDialogClose, i4.MatError],\n    pipes: [i6.AsyncPipe],\n    encapsulation: 2\n  });\n  return HhvCreateUpdateDialog;\n})();\nexport let HhvCreateUpdateDialogModule = /*#__PURE__*/(() => {\n  class HhvCreateUpdateDialogModule {}\n  HhvCreateUpdateDialogModule.ɵfac = function HhvCreateUpdateDialogModule_Factory(t) {\n    return new (t || HhvCreateUpdateDialogModule)();\n  };\n  HhvCreateUpdateDialogModule.ɵmod = /*@__PURE__*/i0.ɵɵdefineNgModule({\n    type: HhvCreateUpdateDialogModule\n  });\n  HhvCreateUpdateDialogModule.ɵinj = /*@__PURE__*/i0.ɵɵdefineInjector({\n    imports: [[CommonModule, FormsModule, ReactiveFormsModule, MatInputModule, MatDialogModule, MatSelectModule, MatFormFieldModule, NgxMatSelectSearchModule]]\n  });\n  return HhvCreateUpdateDialogModule;\n})();","map":null,"metadata":{},"sourceType":"module"}