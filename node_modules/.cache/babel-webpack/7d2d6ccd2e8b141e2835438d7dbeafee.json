{"ast":null,"code":"import { MAT_DIALOG_DATA } from '@angular/material/dialog';\nimport { MatPaginator } from '@angular/material/paginator';\nimport { startWith } from 'rxjs/operators';\nimport { ActivityChangeDialog } from '../../changes/activity-change/activity-change.component';\nimport { GroupLevelChangeComponent } from '../../changes/group-level/group-level.component';\nimport { CARBON_CONSTANT } from '@carbon/constant/carbon.constant';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/material/dialog\";\nimport * as i2 from \"@library/storage-service\";\nimport * as i3 from \"@carbon/controller/timeline.controller\";\nimport * as i4 from \"@angular/material/button\";\nimport * as i5 from \"../../timeline/timeline.component\";\nimport * as i6 from \"@angular/material/paginator\";\nconst _c0 = function () {\n  return [100, 500, 1000, 2500];\n};\nexport let TimelineComponent = /*#__PURE__*/(() => {\n  class TimelineComponent {\n    constructor(dialog, storageService, timelineController, data) {\n      this.dialog = dialog;\n      this.storageService = storageService;\n      this.timelineController = timelineController;\n      this.data = data;\n      this.timeline = [];\n      this.totalCount = 0;\n      this.icon = action => {\n        switch (action) {\n          case CARBON_CONSTANT.ACTIVITY_DATA_UPDATE:\n            return 'edit';\n          case 'DELETE':\n            return 'delete';\n          case CARBON_CONSTANT.ACTIVITY_DATA_CREATE:\n            return 'add';\n          case CARBON_CONSTANT.SETTING_CHANGE:\n            return 'tune';\n          default:\n            return 'display_settings';\n        }\n      };\n      this.action = action => {\n        switch (action) {\n          case CARBON_CONSTANT.ACTIVITY_DATA_UPDATE:\n            return 'edited';\n          case 'DELETE':\n            return 'deleted';\n          case CARBON_CONSTANT.ACTIVITY_DATA_CREATE:\n            return 'created';\n          case CARBON_CONSTANT.SETTING_CHANGE:\n            return 'edited';\n          default:\n            return action;\n        }\n      };\n      this.entity = timeline => {\n        let activityName = timeline['activityStdName'];\n        activityName = activityName.toLowerCase();\n        let _case = timeline['trigger'] + '&' + timeline['dataType'];\n        switch (_case) {\n          case 'SETTING_CHANGE&ACTIVITY_DATA':\n            return `calculation preferences`;\n          case 'ACTIVITY_DATA_UPDATE&ACTIVITY_DATA':\n            return `a ${activityName} record`;\n          case 'ACTIVITY_DATA_CREATE&ACTIVITY_DATA':\n            return `a new ${activityName} record`;\n          default:\n            return timeline;\n        }\n      };\n      this.baseYearKeyID = data['baseYearKeyID'];\n      this.recalculatedOn = data['recalculatedOn'];\n      this.recalculationID = data['recalculationID'];\n      this.recalculationTime = data['recalculationTime'];\n    }\n    ngOnInit() {\n      this.rootOrgID = this.storageService.getStorage('rootOrgID');\n    }\n    ngAfterViewInit() {\n      this.paginator.page.pipe(startWith({})).subscribe(() => {\n        this.getRecalculationHistory(this.paginator.pageIndex + 1, this.paginator.pageSize);\n      });\n    }\n    getRecalculationHistory(pageNo, pageSize) {\n      this.timelineController.getRecalculationHistoryTimeline(this.rootOrgID, this.baseYearKeyID, pageNo, pageSize, this.recalculationID).subscribe(history => {\n        this.timeline = history['records'];\n        this.totalCount = history['totalCount'];\n      });\n    }\n    viewActivityChange(entity, isUpdate) {\n      let config = CARBON_CONSTANT['RIGHT_DIALOG_CONFIG'];\n      config['minWidth'] = isUpdate ? '60vw' : '40vw';\n      config['data'] = {\n        isUpdate: isUpdate,\n        rootOrgID: this.rootOrgID,\n        activityDataID: entity['dataID'],\n        activityKeyID: entity['activityStdKeyID'],\n        baseYearKeyID: this.baseYearKeyID,\n        showRedirectToView: false\n      };\n      this.dialog.open(ActivityChangeDialog, config);\n    }\n    viewGroupLevelChange(entity, isUpdate) {\n      let config = CARBON_CONSTANT['RIGHT_DIALOG_CONFIG'];\n      config['minWidth'] = isUpdate ? '60vw' : '40vw';\n      config['data'] = {\n        rootOrgID: this.rootOrgID,\n        baseYearKeyID: this.baseYearKeyID,\n        recalculationID: this.recalculationID,\n        recalculationTrigger: entity['trigger'],\n        recalculationRequestID: entity['recalculationRequestID']\n      };\n      this.dialog.open(GroupLevelChangeComponent, config);\n    }\n    viewChange(entity) {\n      switch (entity['trigger']) {\n        case CARBON_CONSTANT['ACTIVITY_DATA_CREATE']:\n          this.viewActivityChange(entity, false);\n          break;\n        case CARBON_CONSTANT['ACTIVITY_DATA_UPDATE']:\n          this.viewActivityChange(entity, true);\n          break;\n        case CARBON_CONSTANT['SETTING_CHANGE']:\n          this.viewGroupLevelChange(entity, true);\n          break;\n        case CARBON_CONSTANT['CUSTOM_EMISSION_FACTOR_CHANGE']:\n          this.viewGroupLevelChange(entity, true);\n          break;\n        case CARBON_CONSTANT['CUSTOM_ESTIMATION_FACTOR_CHANGE']:\n          this.viewGroupLevelChange(entity, true);\n          break;\n        default:\n          console.log('view change default');\n      }\n    }\n  }\n  TimelineComponent.ɵfac = function TimelineComponent_Factory(t) {\n    return new (t || TimelineComponent)(i0.ɵɵdirectiveInject(i1.MatDialog), i0.ɵɵdirectiveInject(i2.StorageService), i0.ɵɵdirectiveInject(i3.TimelineController), i0.ɵɵdirectiveInject(MAT_DIALOG_DATA));\n  };\n  TimelineComponent.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n    type: TimelineComponent,\n    selectors: [[\"dialog-timeline\"]],\n    viewQuery: function TimelineComponent_Query(rf, ctx) {\n      if (rf & 1) {\n        i0.ɵɵviewQuery(MatPaginator, 5);\n      }\n      if (rf & 2) {\n        let _t;\n        i0.ɵɵqueryRefresh(_t = i0.ɵɵloadQuery()) && (ctx.paginator = _t.first);\n      }\n    },\n    decls: 11,\n    vars: 9,\n    consts: [[\"mat-dialog-title\", \"\"], [1, \"dialogTitle\"], [\"mat-icon-button\", \"\", \"mat-dialog-close\", \"\", \"cdkFocusInitial\", \"\", \"matTooltip\", \"Close\", \"matTooltipPosition\", \"before\", 1, \"float-end\", \"matDialogClose\"], [1, \"material-symbols-outlined\"], [\"mat-dialog-content\", \"\", 1, \"matDialogContent\"], [3, \"timeline\", \"recalculationID\", \"baseYearKeyID\", \"rootOrgID\"], [\"mat-dialog-footer\", \"\", 1, \"\"], [\"align\", \"end\", 1, \"w-100\", \"maxFooterHeight\"], [\"showFirstLastButtons\", \"\", 3, \"length\", \"pageSize\", \"pageSizeOptions\"]],\n    template: function TimelineComponent_Template(rf, ctx) {\n      if (rf & 1) {\n        i0.ɵɵelementStart(0, \"div\", 0);\n        i0.ɵɵelementStart(1, \"strong\", 1);\n        i0.ɵɵtext(2);\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(3, \"button\", 2);\n        i0.ɵɵelementStart(4, \"span\", 3);\n        i0.ɵɵtext(5, \"close\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(6, \"div\", 4);\n        i0.ɵɵelement(7, \"app-timeline\", 5);\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(8, \"div\", 6);\n        i0.ɵɵelementStart(9, \"div\", 7);\n        i0.ɵɵelement(10, \"mat-paginator\", 8);\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementEnd();\n      }\n      if (rf & 2) {\n        i0.ɵɵadvance(2);\n        i0.ɵɵtextInterpolate1(\" Recalculation \", ctx.recalculatedOn, \" timeline \");\n        i0.ɵɵadvance(5);\n        i0.ɵɵproperty(\"timeline\", ctx.timeline)(\"recalculationID\", ctx.recalculationID)(\"baseYearKeyID\", ctx.baseYearKeyID)(\"rootOrgID\", ctx.rootOrgID);\n        i0.ɵɵadvance(3);\n        i0.ɵɵproperty(\"length\", ctx.totalCount)(\"pageSize\", 50)(\"pageSizeOptions\", i0.ɵɵpureFunction0(8, _c0));\n      }\n    },\n    directives: [i1.MatDialogTitle, i4.MatButton, i1.MatDialogClose, i1.MatDialogContent, i5.TimelineComponent, i6.MatPaginator],\n    styles: [\"@import\\\"https://fonts.googleapis.com/css2?family=Outfit:wght@100;200;300;400;500;600;700;800;900&display=swap\\\";*[_ngcontent-%COMP%], *[_ngcontent-%COMP%]:before, *[_ngcontent-%COMP%]:after{box-sizing:border-box}[_ngcontent-%COMP%]:root{--c-grey-100: #f4f6f8;--c-grey-200: #e3e3e3;--c-grey-300: #b2b2b2;--c-grey-400: #7b7b7b;--c-grey-500: #3d3d3d;--c-blue-500: #688afd}body[_ngcontent-%COMP%]{line-height:1.5;min-height:100vh;font-family:\\\"Outfit\\\",sans-serif;padding-top:20vh;padding-bottom:20vh}input[_ngcontent-%COMP%], select[_ngcontent-%COMP%], textarea[_ngcontent-%COMP%]{font:inherit}img[_ngcontent-%COMP%]{display:block;max-width:100%}.timeline[_ngcontent-%COMP%]{width:100%;max-width:max-content;margin-left:50px;margin-right:auto;display:flex;flex-direction:column;padding:32px 0 32px 32px;border-left:2px solid #e3e3e3;font-size:1.05rem;font-family:Roboto,\\\"Helvetica Neue\\\",sans-serif}.timeline-item[_ngcontent-%COMP%]{display:flex;grid-gap:24px;gap:24px}.timeline-item[_ngcontent-%COMP%] + *[_ngcontent-%COMP%]{margin-top:24px}.timeline-item[_ngcontent-%COMP%] + .extra-space[_ngcontent-%COMP%]{margin-top:48px}.timeline-item-description[_ngcontent-%COMP%]{display:flex;grid-gap:8px;gap:8px;color:#7b7b7b}.timeline-item-description[_ngcontent-%COMP%]   img[_ngcontent-%COMP%]{flex-shrink:0}.timeline-item-description[_ngcontent-%COMP%]   a[_ngcontent-%COMP%]{color:#3d3d3d;font-weight:500;text-decoration:none}.timeline-item-description[_ngcontent-%COMP%]   a[_ngcontent-%COMP%]:hover, .timeline-item-description[_ngcontent-%COMP%]   a[_ngcontent-%COMP%]:focus{outline:0!important;color:var(--c-blue-500)}.avatar[_ngcontent-%COMP%]{display:flex;align-items:center;justify-content:center;border-radius:50%;overflow:hidden;aspect-ratio:1/1;flex-shrink:0;width:40px;height:40px}.avatar.small[_ngcontent-%COMP%]{width:28px;height:28px}.avatar[_ngcontent-%COMP%]   img[_ngcontent-%COMP%]{object-fit:cover}.timeline-item-icon[_ngcontent-%COMP%]{display:flex;align-items:center;justify-content:center;width:40px;height:40px;border-radius:50%;margin-left:-52px;flex-shrink:0;overflow:hidden;box-shadow:0 0 0 6px #fff}.timeline-item-icon[_ngcontent-%COMP%]   svg[_ngcontent-%COMP%]{width:20px;height:20px}.timeline-item-icon.recalculate-icon[_ngcontent-%COMP%]{background-color:#f3ca20;color:#000000d9}.timeline-item-icon.faded-icon[_ngcontent-%COMP%]{background-color:#e3e3e3;color:#7b7b7b}.lowFocus[_ngcontent-%COMP%]{opacity:.7}.focus[_ngcontent-%COMP%]{color:#3d3d3d;font-family:sans-serif}.recalculate[_ngcontent-%COMP%]{background-image:linear-gradient(to right,green,yellow,red)}.noBaseYear[_ngcontent-%COMP%]{width:30vw}.viewBtn[_ngcontent-%COMP%]{margin:auto 0 auto auto;height:30px}.maxFooterHeight[_ngcontent-%COMP%]{max-height:10px!important}\"]\n  });\n  return TimelineComponent;\n})();","map":null,"metadata":{},"sourceType":"module"}