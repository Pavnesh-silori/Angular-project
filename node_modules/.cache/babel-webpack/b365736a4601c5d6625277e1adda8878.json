{"ast":null,"code":"import { HttpParams } from '@angular/common/http';\nimport { environment } from 'src/environments/environment';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/common/http\";\nexport let ProductionRouteController = /*#__PURE__*/(() => {\n  class ProductionRouteController {\n    constructor(http) {\n      this.http = http;\n    }\n    getProductionRoutePage(orgID, pageNo, pageSize, sortBy, orderBy, searchValue) {\n      let params = new HttpParams();\n      params = params.append('pageNo', pageNo);\n      params = params.append('pageSize', pageSize);\n      params = params.append('sortBy', sortBy);\n      params = params.append('orderBy', orderBy);\n      if (searchValue != null) {\n        params = params.append('searchBy', searchValue);\n      }\n      return this.http.get(`${environment.CARBON_ACCOUNTING_API_URL}organizations/${orgID}/production-route/page`, {\n        params: params\n      });\n    }\n    createProductionRoute(orgID, productionRoute) {\n      return this.http.post(`${environment.CARBON_ACCOUNTING_API_URL}organizations/${orgID}/production-route`, productionRoute);\n    }\n    getProductionRouteByID(orgID, productionRouteID) {\n      return this.http.get(`${environment.CARBON_ACCOUNTING_API_URL}organizations/${orgID}/production-route/${productionRouteID}`);\n    }\n    updateProductionRoute(orgID, productionRouteID, productionRoute) {\n      return this.http.patch(`${environment.CARBON_ACCOUNTING_API_URL}organizations/${orgID}/production-route/${productionRouteID}`, productionRoute);\n    }\n  }\n  ProductionRouteController.ɵfac = function ProductionRouteController_Factory(t) {\n    return new (t || ProductionRouteController)(i0.ɵɵinject(i1.HttpClient));\n  };\n  ProductionRouteController.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n    token: ProductionRouteController,\n    factory: ProductionRouteController.ɵfac,\n    providedIn: 'root'\n  });\n  return ProductionRouteController;\n})();","map":null,"metadata":{},"sourceType":"module"}