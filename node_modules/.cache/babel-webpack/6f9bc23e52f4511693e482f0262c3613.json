{"ast":null,"code":"import { __awaiter } from \"tslib\";\nimport { EventEmitter } from '@angular/core';\nimport { EnergyConsumedComponent } from './_templates/energy-consumed/energy-consumed.component';\nimport { MeterReadingComponent } from './_templates/meter-reading/meter-reading.component';\nimport { HhvEnergyConsumedComponent } from './_templates/hhv-energy-consumed/hhv-energy-consumed.component';\nimport { HhvMeterReadingComponent } from './_templates/hhv-meter-reading/hhv-meter-reading.component';\nimport { DataInputMethodKeyIDEnum } from '@carbon/enum/data-input-method.enum';\nimport { ActivityKeyIDEnum } from '@carbon/enum/activity.enum';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/router\";\nimport * as i2 from \"@library/storage-service\";\nimport * as i3 from \"@carbon/service/data-input-method.service\";\nimport * as i4 from \"@carbon/service/asset.service\";\nimport * as i5 from \"@carbon/service/activity.service\";\nimport * as i6 from \"@angular/common\";\nimport * as i7 from \"./_templates/energy-consumed/energy-consumed.component\";\nimport * as i8 from \"./_templates/meter-reading/meter-reading.component\";\nimport * as i9 from \"./_templates/hhv-energy-consumed/hhv-energy-consumed.component\";\nimport * as i10 from \"./_templates/hhv-meter-reading/hhv-meter-reading.component\";\nfunction CreateComponent_stationary_combustion_energy_consumed_0_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r5 = i0.ɵɵgetCurrentView();\n    i0.ɵɵelementStart(0, \"stationary-combustion-energy-consumed\", 2);\n    i0.ɵɵlistener(\"formGroupChange\", function CreateComponent_stationary_combustion_energy_consumed_0_Template_stationary_combustion_energy_consumed_formGroupChange_0_listener($event) {\n      i0.ɵɵrestoreView(_r5);\n      const ctx_r4 = i0.ɵɵnextContext();\n      return ctx_r4.onChildFormGroupChange($event);\n    });\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const ctx_r0 = i0.ɵɵnextContext();\n    i0.ɵɵproperty(\"activityConfig\", ctx_r0.activityConfig)(\"getAllSource\", ctx_r0.getAllSource)(\"activityID\", ctx_r0.activityID)(\"docFileList\", ctx_r0.docFileList);\n  }\n}\nfunction CreateComponent_stationary_combustion_meter_reading_1_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r7 = i0.ɵɵgetCurrentView();\n    i0.ɵɵelementStart(0, \"stationary-combustion-meter-reading\", 2);\n    i0.ɵɵlistener(\"formGroupChange\", function CreateComponent_stationary_combustion_meter_reading_1_Template_stationary_combustion_meter_reading_formGroupChange_0_listener($event) {\n      i0.ɵɵrestoreView(_r7);\n      const ctx_r6 = i0.ɵɵnextContext();\n      return ctx_r6.onChildFormGroupChange($event);\n    });\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const ctx_r1 = i0.ɵɵnextContext();\n    i0.ɵɵproperty(\"activityConfig\", ctx_r1.activityConfig)(\"getAllSource\", ctx_r1.getAllSource)(\"activityID\", ctx_r1.activityID)(\"docFileList\", ctx_r1.docFileList);\n  }\n}\nfunction CreateComponent_stationary_combustion_hhv_energy_consumed_2_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r9 = i0.ɵɵgetCurrentView();\n    i0.ɵɵelementStart(0, \"stationary-combustion-hhv-energy-consumed\", 2);\n    i0.ɵɵlistener(\"formGroupChange\", function CreateComponent_stationary_combustion_hhv_energy_consumed_2_Template_stationary_combustion_hhv_energy_consumed_formGroupChange_0_listener($event) {\n      i0.ɵɵrestoreView(_r9);\n      const ctx_r8 = i0.ɵɵnextContext();\n      return ctx_r8.onChildFormGroupChange($event);\n    });\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const ctx_r2 = i0.ɵɵnextContext();\n    i0.ɵɵproperty(\"activityConfig\", ctx_r2.activityConfig)(\"getAllSource\", ctx_r2.getAllSource)(\"activityID\", ctx_r2.activityID)(\"docFileList\", ctx_r2.docFileList);\n  }\n}\nfunction CreateComponent_stationary_combustion_hhv_meter_reading_3_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r11 = i0.ɵɵgetCurrentView();\n    i0.ɵɵelementStart(0, \"stationary-combustion-hhv-meter-reading\", 3);\n    i0.ɵɵlistener(\"formGroupChange\", function CreateComponent_stationary_combustion_hhv_meter_reading_3_Template_stationary_combustion_hhv_meter_reading_formGroupChange_0_listener($event) {\n      i0.ɵɵrestoreView(_r11);\n      const ctx_r10 = i0.ɵɵnextContext();\n      return ctx_r10.onChildFormGroupChange($event);\n    })(\"formGroupChange\", function CreateComponent_stationary_combustion_hhv_meter_reading_3_Template_stationary_combustion_hhv_meter_reading_formGroupChange_0_listener($event) {\n      i0.ɵɵrestoreView(_r11);\n      const ctx_r12 = i0.ɵɵnextContext();\n      return ctx_r12.onChildFormGroupChange($event);\n    })(\"docUploadChange\", function CreateComponent_stationary_combustion_hhv_meter_reading_3_Template_stationary_combustion_hhv_meter_reading_docUploadChange_0_listener($event) {\n      i0.ɵɵrestoreView(_r11);\n      const ctx_r13 = i0.ɵɵnextContext();\n      return ctx_r13.onChildDocChange($event);\n    });\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const ctx_r3 = i0.ɵɵnextContext();\n    i0.ɵɵproperty(\"activityConfig\", ctx_r3.activityConfig)(\"getAllSource\", ctx_r3.getAllSource)(\"activityID\", ctx_r3.activityID)(\"docFileList\", ctx_r3.docFileList);\n  }\n}\n/// library\nexport let CreateComponent = /*#__PURE__*/(() => {\n  class CreateComponent {\n    constructor(activatedRoute, storageService, dataInputMethodService, assetService, activityService) {\n      this.activatedRoute = activatedRoute;\n      this.storageService = storageService;\n      this.dataInputMethodService = dataInputMethodService;\n      this.assetService = assetService;\n      this.activityService = activityService;\n      this.DataInputMethodKeyIDEnum = DataInputMethodKeyIDEnum;\n      this.dataInputMethodList = [];\n      this.updateFlag = false;\n      this.docFileList = [];\n      this.getAllSource = [];\n      this.isUpdate = false;\n      this.validity = new EventEmitter();\n    }\n    ngOnInit() {\n      this.currentOrgID = parseInt(this.storageService.getStorage(['currentOrgID']));\n      this.activatedRoute.queryParams.subscribe(queryParam => {\n        this.action = queryParam['action'];\n        if (this.action == 'create') {\n          this.getAllDataInputMethodList();\n          this.getAllAsset();\n          this.isUpdate = this.action == 'update';\n        }\n      });\n    }\n    getAllActivitiesAndFindActivityByKeyID() {\n      return __awaiter(this, void 0, void 0, function* () {\n        this.allActivities = yield this.activityService.getAllActivityNew();\n        this.activity = this.activityService.getActivityByKeyIDFromActivityList(ActivityKeyIDEnum.STATIONARY_COMBUSTION, this.allActivities);\n        this.activityID = this.activity.id;\n      });\n    }\n    getAllAsset() {\n      return __awaiter(this, void 0, void 0, function* () {\n        this.getAllSource = yield this.assetService.getAllAsset(this.currentOrgID);\n      });\n    }\n    onChildFormGroupChange(formGroup) {\n      // Use the child component's FormGroup here\n      this.activityDataFG = formGroup;\n    }\n    getActivityData() {\n      return {\n        'activityData': this.activityData,\n        'activityDataFile': this.docFileList\n      };\n    }\n    updateActivityData() {\n      return this.activityData[0];\n    }\n    activityDataValidity() {\n      this.activityDataFG.valueChanges.subscribe(() => this.validity.emit(!this.activityDataFG.invalid));\n    }\n    getConfiguration(configuration) {\n      return __awaiter(this, void 0, void 0, function* () {\n        if (this.dataInputMethodList.length == 0) {\n          yield this.getAllDataInputMethodList();\n        }\n        this.activityConfig = configuration;\n        if (configuration != null && configuration['activityConfigData']['dataInputMethodID'] != null && configuration['activityConfigData']['fuelMonitorDataInputMethodID']) {\n          const dataInputMethod = this.dataInputMethodList.find(item => item.id === configuration['activityConfigData']['dataInputMethodID']);\n          const fuelEnergyMonitor = this.dataInputMethodList.find(item => item.id === configuration['activityConfigData']['fuelMonitorDataInputMethodID']);\n          if (dataInputMethod) {\n            this.dataInputMethodKeyID = dataInputMethod['keyID'];\n          }\n          if (fuelEnergyMonitor) {\n            this.fuelMonitorDataInputMethodKeyID = fuelEnergyMonitor['keyID'];\n          } else {\n            console.log('dataInputMethodID not found');\n          }\n          if (this.isUpdate) {\n            this.docFileList = new Array(1).fill(null);\n          } else {\n            let activityConfigSource = configuration.activityConfigSource;\n            if (activityConfigSource.sourceID == null) {\n              this.docFileList = new Array(1).fill(null);\n            } else {\n              this.docFileList = new Array(activityConfigSource.sourceID.length).fill(null);\n            }\n          }\n        }\n      });\n    }\n    getAllDataInputMethodList() {\n      return __awaiter(this, void 0, void 0, function* () {\n        this.dataInputMethodList = yield this.dataInputMethodService.getAllDataInputMethodList();\n      });\n    }\n    isValidForm() {\n      if (this.dataInputMethodKeyID == DataInputMethodKeyIDEnum.TOTAL_AMOUNT && this.fuelMonitorDataInputMethodKeyID == DataInputMethodKeyIDEnum.ENERGY_GENERATED) {\n        if (this.energyConsumedComponent.isValidForm()) {\n          this.activityData = {};\n          this.activityData = this.energyConsumedComponent.activityData;\n          // this.docFileList = this.energyConsumedComponent.docList;\n          return true;\n        }\n      } else if (this.dataInputMethodKeyID == DataInputMethodKeyIDEnum.METER_READING && this.fuelMonitorDataInputMethodKeyID == DataInputMethodKeyIDEnum.ENERGY_GENERATED) {\n        if (this.meterReadingComponent.isValidForm()) {\n          this.activityData = {};\n          this.activityData = this.meterReadingComponent.activityData;\n          // this.docFileList = this.meterReadingComponent.docList;\n          return true;\n        }\n      } else if (this.dataInputMethodKeyID == DataInputMethodKeyIDEnum.TOTAL_AMOUNT && this.fuelMonitorDataInputMethodKeyID == DataInputMethodKeyIDEnum.FUEL_CONSUMPTION) {\n        if (this.hhvEnergyConsumedComponent.isValidForm()) {\n          this.activityData = {};\n          this.activityData = this.hhvEnergyConsumedComponent.activityData;\n          // this.docFileList = this.hhvEnergyConsumedComponent.docList;\n          return true;\n        }\n      } else if (this.dataInputMethodKeyID == DataInputMethodKeyIDEnum.METER_READING && this.fuelMonitorDataInputMethodKeyID == DataInputMethodKeyIDEnum.FUEL_CONSUMPTION) {\n        if (this.hhvMeterReadingComponent.isValidForm()) {\n          this.activityData = {};\n          this.activityData = this.hhvMeterReadingComponent.activityData;\n          // this.docFileList = this.hhvMeterReadingComponent.docList;\n          return true;\n        }\n      } else {\n        return false;\n      }\n    }\n  }\n  CreateComponent.ɵfac = function CreateComponent_Factory(t) {\n    return new (t || CreateComponent)(i0.ɵɵdirectiveInject(i1.ActivatedRoute), i0.ɵɵdirectiveInject(i2.StorageService), i0.ɵɵdirectiveInject(i3.DataInputMethodService), i0.ɵɵdirectiveInject(i4.AssetService), i0.ɵɵdirectiveInject(i5.ActivityService));\n  };\n  CreateComponent.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n    type: CreateComponent,\n    selectors: [[\"app-create\"]],\n    viewQuery: function CreateComponent_Query(rf, ctx) {\n      if (rf & 1) {\n        i0.ɵɵviewQuery(EnergyConsumedComponent, 5);\n        i0.ɵɵviewQuery(MeterReadingComponent, 5);\n        i0.ɵɵviewQuery(HhvEnergyConsumedComponent, 5);\n        i0.ɵɵviewQuery(HhvMeterReadingComponent, 5);\n      }\n      if (rf & 2) {\n        let _t;\n        i0.ɵɵqueryRefresh(_t = i0.ɵɵloadQuery()) && (ctx.energyConsumedComponent = _t.first);\n        i0.ɵɵqueryRefresh(_t = i0.ɵɵloadQuery()) && (ctx.meterReadingComponent = _t.first);\n        i0.ɵɵqueryRefresh(_t = i0.ɵɵloadQuery()) && (ctx.hhvEnergyConsumedComponent = _t.first);\n        i0.ɵɵqueryRefresh(_t = i0.ɵɵloadQuery()) && (ctx.hhvMeterReadingComponent = _t.first);\n      }\n    },\n    decls: 4,\n    vars: 4,\n    consts: [[3, \"activityConfig\", \"getAllSource\", \"activityID\", \"docFileList\", \"formGroupChange\", 4, \"ngIf\"], [3, \"activityConfig\", \"getAllSource\", \"activityID\", \"docFileList\", \"formGroupChange\", \"docUploadChange\", 4, \"ngIf\"], [3, \"activityConfig\", \"getAllSource\", \"activityID\", \"docFileList\", \"formGroupChange\"], [3, \"activityConfig\", \"getAllSource\", \"activityID\", \"docFileList\", \"formGroupChange\", \"docUploadChange\"]],\n    template: function CreateComponent_Template(rf, ctx) {\n      if (rf & 1) {\n        i0.ɵɵtemplate(0, CreateComponent_stationary_combustion_energy_consumed_0_Template, 1, 4, \"stationary-combustion-energy-consumed\", 0);\n        i0.ɵɵtemplate(1, CreateComponent_stationary_combustion_meter_reading_1_Template, 1, 4, \"stationary-combustion-meter-reading\", 0);\n        i0.ɵɵtemplate(2, CreateComponent_stationary_combustion_hhv_energy_consumed_2_Template, 1, 4, \"stationary-combustion-hhv-energy-consumed\", 0);\n        i0.ɵɵtemplate(3, CreateComponent_stationary_combustion_hhv_meter_reading_3_Template, 1, 4, \"stationary-combustion-hhv-meter-reading\", 1);\n      }\n      if (rf & 2) {\n        i0.ɵɵproperty(\"ngIf\", ctx.dataInputMethodKeyID == ctx.DataInputMethodKeyIDEnum.TOTAL_AMOUNT && ctx.fuelMonitorDataInputMethodKeyID == ctx.DataInputMethodKeyIDEnum.ENERGY_GENERATED);\n        i0.ɵɵadvance(1);\n        i0.ɵɵproperty(\"ngIf\", ctx.dataInputMethodKeyID == ctx.DataInputMethodKeyIDEnum.METER_READING && ctx.fuelMonitorDataInputMethodKeyID == ctx.DataInputMethodKeyIDEnum.ENERGY_GENERATED);\n        i0.ɵɵadvance(1);\n        i0.ɵɵproperty(\"ngIf\", ctx.dataInputMethodKeyID == ctx.DataInputMethodKeyIDEnum.TOTAL_AMOUNT && ctx.fuelMonitorDataInputMethodKeyID == ctx.DataInputMethodKeyIDEnum.FUEL_CONSUMPTION);\n        i0.ɵɵadvance(1);\n        i0.ɵɵproperty(\"ngIf\", ctx.dataInputMethodKeyID == ctx.DataInputMethodKeyIDEnum.METER_READING && ctx.fuelMonitorDataInputMethodKeyID == ctx.DataInputMethodKeyIDEnum.FUEL_CONSUMPTION);\n      }\n    },\n    directives: [i6.NgIf, i7.EnergyConsumedComponent, i8.MeterReadingComponent, i9.HhvEnergyConsumedComponent, i10.HhvMeterReadingComponent],\n    encapsulation: 2\n  });\n  return CreateComponent;\n})();","map":null,"metadata":{},"sourceType":"module"}