{"ast":null,"code":"import * as i0 from '@angular/core';\nimport { Injectable, Component, NgModule, Inject } from '@angular/core';\nimport * as i1 from '@library/storage-service';\nclass AuthenticationServiceService {\n  constructor() {}\n}\nAuthenticationServiceService.ɵfac = function AuthenticationServiceService_Factory(t) {\n  return new (t || AuthenticationServiceService)();\n};\nAuthenticationServiceService.ɵprov = /* @__PURE__ */i0.ɵɵdefineInjectable({\n  token: AuthenticationServiceService,\n  factory: AuthenticationServiceService.ɵfac,\n  providedIn: 'root'\n});\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(AuthenticationServiceService, [{\n    type: Injectable,\n    args: [{\n      providedIn: 'root'\n    }]\n  }], function () {\n    return [];\n  }, null);\n})();\nclass AuthenticationServiceComponent {\n  constructor() {}\n  ngOnInit() {}\n}\nAuthenticationServiceComponent.ɵfac = function AuthenticationServiceComponent_Factory(t) {\n  return new (t || AuthenticationServiceComponent)();\n};\nAuthenticationServiceComponent.ɵcmp = /* @__PURE__ */i0.ɵɵdefineComponent({\n  type: AuthenticationServiceComponent,\n  selectors: [[\"lib-authentication-service\"]],\n  decls: 2,\n  vars: 0,\n  template: function AuthenticationServiceComponent_Template(rf, ctx) {\n    if (rf & 1) {\n      i0.ɵɵelementStart(0, \"p\");\n      i0.ɵɵtext(1, \" authentication-service works! \");\n      i0.ɵɵelementEnd();\n    }\n  },\n  encapsulation: 2\n});\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(AuthenticationServiceComponent, [{\n    type: Component,\n    args: [{\n      selector: 'lib-authentication-service',\n      template: `\n    <p>\n      authentication-service works!\n    </p>\n  `,\n      styles: []\n    }]\n  }], function () {\n    return [];\n  }, null);\n})();\nclass AuthenticationServiceModule {\n  static forRoot(environment) {\n    return {\n      ngModule: AuthenticationServiceModule,\n      providers: [{\n        provide: 'environment',\n        useValue: environment\n      }]\n    };\n  }\n}\nAuthenticationServiceModule.ɵfac = function AuthenticationServiceModule_Factory(t) {\n  return new (t || AuthenticationServiceModule)();\n};\nAuthenticationServiceModule.ɵmod = /* @__PURE__ */i0.ɵɵdefineNgModule({\n  type: AuthenticationServiceModule\n});\nAuthenticationServiceModule.ɵinj = /* @__PURE__ */i0.ɵɵdefineInjector({\n  imports: [[]]\n});\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(AuthenticationServiceModule, [{\n    type: NgModule,\n    args: [{\n      declarations: [AuthenticationServiceComponent],\n      imports: [],\n      exports: [AuthenticationServiceComponent]\n    }]\n  }], null, null);\n})();\nclass AuthenticationService {\n  constructor(environment, storageService) {\n    this.environment = environment;\n    this.storageService = storageService;\n    this.ACCOUNT_KEY_ID = \"ACCOUNT\";\n  }\n  isLoggedIn() {\n    // return this.getStorage('token');\n    let userID = '';\n    // let netZeroA: string = '';\n    // let primaryOrgID: string = '';\n    // let defaultApp: string = '';\n    // let currentApp: string = '';\n    // let currentOrgID: string = '';\n    let token = '';\n    // let resourcePermissions: string = '';\n    // let currentOrgType: string = '';\n    userID = this.storageService.getStorage('userID');\n    // netZeroA = this.getStorage('netZeroA');\n    // primaryOrgID = this.getStorage('primaryOrgID');\n    // defaultApp = this.getStorage('defaultApp');\n    // currentApp = this.getStorage('currentApp');\n    // currentOrgID = this.getStorage('currentOrgID');\n    token = this.storageService.getStorage('token');\n    // resourcePermissions = this.getStorage('resourcePermissions');\n    // currentOrgType = this.getStorage('currentOrgType');\n    // console.log('userID', userID);\n    // console.log('netZeroA', netZeroA);\n    // console.log('primaryOrgID', primaryOrgID);\n    // console.log('defaultApp', defaultApp);\n    // console.log('currentApp', currentApp);\n    // console.log('currentOrgID', currentOrgID);\n    // console.log('token', token);\n    // console.log('resourcePermissions', resourcePermissions);\n    // console.log('currentOrgType', currentOrgType);\n    // let userIDLength = userID.length;\n    // let netZeroALength = netZeroA.length;\n    // let primaryOrgIDLength = primaryOrgID.length;\n    // let defaultAppLength = defaultApp.length;\n    // let currentAppLength = currentApp.length;\n    // let currentOrgIDLength = currentOrgID.length;\n    // let tokenLength = token.length;\n    // let permissionsLength = resourcePermissions.length;\n    // let currentOrgTypeLength = currentOrgType.length;\n    if (userID == 'undefined' ||\n    // netZeroA == 'undefined' ||\n    // primaryOrgID == 'undefined' ||\n    // defaultApp == 'undefined' ||\n    // currentApp == 'undefined' ||\n    // currentOrgID == 'undefined' ||\n    token == 'undefined' ||\n    // resourcePermissions == 'undefined' ||\n    // currentOrgType == 'undefined' ||\n    userID == 'null' ||\n    // netZeroA == 'null' ||\n    // primaryOrgID == 'null' ||\n    // defaultApp == 'null' ||\n    // currentApp == 'null' ||\n    // currentOrgID == 'null' ||\n    token == 'null' ||\n    // resourcePermissions == 'null' ||\n    // currentOrgType == 'null' ||\n    userID == null ||\n    // netZeroA == null ||\n    // primaryOrgID == null ||\n    // defaultApp == null ||\n    // currentApp == null ||\n    // currentOrgID == null ||\n    token == null ||\n    // resourcePermissions == null ||\n    // currentOrgType == null ||\n    userID == '' ||\n    // netZeroA == '' ||\n    // primaryOrgID == '' ||\n    // defaultApp == '' ||\n    // currentApp == '' ||\n    // currentOrgID == '' ||\n    token == ''\n    // resourcePermissions == '' ||\n    // currentOrgType == ''\n    // userIDLength == 0 ||\n    // netZeroALength == 0 ||\n    // primaryOrgIDLength == 0 ||\n    // defaultAppLength == 0 ||\n    // currentAppLength == 0 ||\n    // currentOrgIDLength == 0 ||\n    // tokenLength == 0 ||\n    // permissionsLength == 0 ||\n    // currentOrgTypeLength == 0 \n    ) {\n      return false;\n    } else {\n      return true;\n    }\n  }\n  logout(redirectUrl, pageUrl, action, applicationKeyID = '') {\n    localStorage.clear();\n    sessionStorage.clear();\n    if (applicationKeyID != this.ACCOUNT_KEY_ID && action == 'interceptor') {\n      window.location.href = `${this.environment.ACCOUNT_URL}login?redirectUrl=${redirectUrl}&pageUrl=${pageUrl}`;\n    } else {\n      window.location.href = `${this.environment.ACCOUNT_URL}login?redirectUrl=${redirectUrl}&pageUrl=${pageUrl}&action=${action}`;\n    }\n  }\n}\nAuthenticationService.ɵfac = function AuthenticationService_Factory(t) {\n  return new (t || AuthenticationService)(i0.ɵɵinject('environment'), i0.ɵɵinject(i1.StorageService));\n};\nAuthenticationService.ɵprov = /* @__PURE__ */i0.ɵɵdefineInjectable({\n  token: AuthenticationService,\n  factory: AuthenticationService.ɵfac,\n  providedIn: 'root'\n});\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(AuthenticationService, [{\n    type: Injectable,\n    args: [{\n      providedIn: 'root'\n    }]\n  }], function () {\n    return [{\n      type: undefined,\n      decorators: [{\n        type: Inject,\n        args: ['environment']\n      }]\n    }, {\n      type: i1.StorageService\n    }];\n  }, null);\n})();\nclass AuthGuard {\n  constructor(authenticationService) {\n    this.authenticationService = authenticationService;\n  }\n  canActivate(route, state) {\n    if (this.authenticationService.isLoggedIn()) {\n      return true;\n    } else {\n      let appURL;\n      // this.activatedRoute.data.subscribe(data => {\n      //     console.log('data -', data);\n      //     appURL = data.appURL;\n      // });\n      appURL = route.data.appURL;\n      this.authenticationService.logout(appURL + 'login', state.url, '');\n      return false;\n    }\n  }\n}\nAuthGuard.ɵfac = function AuthGuard_Factory(t) {\n  return new (t || AuthGuard)(i0.ɵɵinject(AuthenticationService));\n};\nAuthGuard.ɵprov = /* @__PURE__ */i0.ɵɵdefineInjectable({\n  token: AuthGuard,\n  factory: AuthGuard.ɵfac,\n  providedIn: 'root'\n});\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(AuthGuard, [{\n    type: Injectable,\n    args: [{\n      providedIn: 'root'\n    }]\n  }], function () {\n    return [{\n      type: AuthenticationService\n    }];\n  }, null);\n})();\n\n/*\n * Public API Surface of authentication-service\n */\n\n/**\n * Generated bundle index. Do not edit.\n */\n\nexport { AuthGuard, AuthenticationService, AuthenticationServiceComponent, AuthenticationServiceModule, AuthenticationServiceService };","map":{"version":3,"names":["i0","Injectable","Component","NgModule","Inject","i1","AuthenticationServiceService","constructor","ɵfac","AuthenticationServiceService_Factory","t","ɵprov","ɵɵdefineInjectable","token","factory","providedIn","ngDevMode","ɵsetClassMetadata","type","args","AuthenticationServiceComponent","ngOnInit","AuthenticationServiceComponent_Factory","ɵcmp","ɵɵdefineComponent","selectors","decls","vars","template","AuthenticationServiceComponent_Template","rf","ctx","ɵɵelementStart","ɵɵtext","ɵɵelementEnd","encapsulation","selector","styles","AuthenticationServiceModule","forRoot","environment","ngModule","providers","provide","useValue","AuthenticationServiceModule_Factory","ɵmod","ɵɵdefineNgModule","ɵinj","ɵɵdefineInjector","imports","declarations","exports","AuthenticationService","storageService","ACCOUNT_KEY_ID","isLoggedIn","userID","getStorage","logout","redirectUrl","pageUrl","action","applicationKeyID","localStorage","clear","sessionStorage","window","location","href","ACCOUNT_URL","AuthenticationService_Factory","ɵɵinject","StorageService","undefined","decorators","AuthGuard","authenticationService","canActivate","route","state","appURL","data","url","AuthGuard_Factory"],"sources":["/home/silori/projects/gitClones/account-ui/library/authentication-service/fesm2015/library-authentication-service.js"],"sourcesContent":["import * as i0 from '@angular/core';\nimport { Injectable, Component, NgModule, Inject } from '@angular/core';\nimport * as i1 from '@library/storage-service';\n\nclass AuthenticationServiceService {\n    constructor() { }\n}\nAuthenticationServiceService.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"12.2.17\", ngImport: i0, type: AuthenticationServiceService, deps: [], target: i0.ɵɵFactoryTarget.Injectable });\nAuthenticationServiceService.ɵprov = i0.ɵɵngDeclareInjectable({ minVersion: \"12.0.0\", version: \"12.2.17\", ngImport: i0, type: AuthenticationServiceService, providedIn: 'root' });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"12.2.17\", ngImport: i0, type: AuthenticationServiceService, decorators: [{\n            type: Injectable,\n            args: [{\n                    providedIn: 'root'\n                }]\n        }], ctorParameters: function () { return []; } });\n\nclass AuthenticationServiceComponent {\n    constructor() { }\n    ngOnInit() {\n    }\n}\nAuthenticationServiceComponent.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"12.2.17\", ngImport: i0, type: AuthenticationServiceComponent, deps: [], target: i0.ɵɵFactoryTarget.Component });\nAuthenticationServiceComponent.ɵcmp = i0.ɵɵngDeclareComponent({ minVersion: \"12.0.0\", version: \"12.2.17\", type: AuthenticationServiceComponent, selector: \"lib-authentication-service\", ngImport: i0, template: `\n    <p>\n      authentication-service works!\n    </p>\n  `, isInline: true });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"12.2.17\", ngImport: i0, type: AuthenticationServiceComponent, decorators: [{\n            type: Component,\n            args: [{\n                    selector: 'lib-authentication-service',\n                    template: `\n    <p>\n      authentication-service works!\n    </p>\n  `,\n                    styles: []\n                }]\n        }], ctorParameters: function () { return []; } });\n\nclass AuthenticationServiceModule {\n    static forRoot(environment) {\n        return {\n            ngModule: AuthenticationServiceModule,\n            providers: [\n                { provide: 'environment', useValue: environment }\n            ]\n        };\n    }\n}\nAuthenticationServiceModule.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"12.2.17\", ngImport: i0, type: AuthenticationServiceModule, deps: [], target: i0.ɵɵFactoryTarget.NgModule });\nAuthenticationServiceModule.ɵmod = i0.ɵɵngDeclareNgModule({ minVersion: \"12.0.0\", version: \"12.2.17\", ngImport: i0, type: AuthenticationServiceModule, declarations: [AuthenticationServiceComponent], exports: [AuthenticationServiceComponent] });\nAuthenticationServiceModule.ɵinj = i0.ɵɵngDeclareInjector({ minVersion: \"12.0.0\", version: \"12.2.17\", ngImport: i0, type: AuthenticationServiceModule, imports: [[]] });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"12.2.17\", ngImport: i0, type: AuthenticationServiceModule, decorators: [{\n            type: NgModule,\n            args: [{\n                    declarations: [\n                        AuthenticationServiceComponent\n                    ],\n                    imports: [],\n                    exports: [\n                        AuthenticationServiceComponent\n                    ]\n                }]\n        }] });\n\nclass AuthenticationService {\n    constructor(environment, storageService) {\n        this.environment = environment;\n        this.storageService = storageService;\n        this.ACCOUNT_KEY_ID = \"ACCOUNT\";\n    }\n    isLoggedIn() {\n        // return this.getStorage('token');\n        let userID = '';\n        // let netZeroA: string = '';\n        // let primaryOrgID: string = '';\n        // let defaultApp: string = '';\n        // let currentApp: string = '';\n        // let currentOrgID: string = '';\n        let token = '';\n        // let resourcePermissions: string = '';\n        // let currentOrgType: string = '';\n        userID = this.storageService.getStorage('userID');\n        // netZeroA = this.getStorage('netZeroA');\n        // primaryOrgID = this.getStorage('primaryOrgID');\n        // defaultApp = this.getStorage('defaultApp');\n        // currentApp = this.getStorage('currentApp');\n        // currentOrgID = this.getStorage('currentOrgID');\n        token = this.storageService.getStorage('token');\n        // resourcePermissions = this.getStorage('resourcePermissions');\n        // currentOrgType = this.getStorage('currentOrgType');\n        // console.log('userID', userID);\n        // console.log('netZeroA', netZeroA);\n        // console.log('primaryOrgID', primaryOrgID);\n        // console.log('defaultApp', defaultApp);\n        // console.log('currentApp', currentApp);\n        // console.log('currentOrgID', currentOrgID);\n        // console.log('token', token);\n        // console.log('resourcePermissions', resourcePermissions);\n        // console.log('currentOrgType', currentOrgType);\n        // let userIDLength = userID.length;\n        // let netZeroALength = netZeroA.length;\n        // let primaryOrgIDLength = primaryOrgID.length;\n        // let defaultAppLength = defaultApp.length;\n        // let currentAppLength = currentApp.length;\n        // let currentOrgIDLength = currentOrgID.length;\n        // let tokenLength = token.length;\n        // let permissionsLength = resourcePermissions.length;\n        // let currentOrgTypeLength = currentOrgType.length;\n        if (userID == 'undefined' ||\n            // netZeroA == 'undefined' ||\n            // primaryOrgID == 'undefined' ||\n            // defaultApp == 'undefined' ||\n            // currentApp == 'undefined' ||\n            // currentOrgID == 'undefined' ||\n            token == 'undefined' ||\n            // resourcePermissions == 'undefined' ||\n            // currentOrgType == 'undefined' ||\n            userID == 'null' ||\n            // netZeroA == 'null' ||\n            // primaryOrgID == 'null' ||\n            // defaultApp == 'null' ||\n            // currentApp == 'null' ||\n            // currentOrgID == 'null' ||\n            token == 'null' ||\n            // resourcePermissions == 'null' ||\n            // currentOrgType == 'null' ||\n            userID == null ||\n            // netZeroA == null ||\n            // primaryOrgID == null ||\n            // defaultApp == null ||\n            // currentApp == null ||\n            // currentOrgID == null ||\n            token == null ||\n            // resourcePermissions == null ||\n            // currentOrgType == null ||\n            userID == '' ||\n            // netZeroA == '' ||\n            // primaryOrgID == '' ||\n            // defaultApp == '' ||\n            // currentApp == '' ||\n            // currentOrgID == '' ||\n            token == ''\n        // resourcePermissions == '' ||\n        // currentOrgType == ''\n        // userIDLength == 0 ||\n        // netZeroALength == 0 ||\n        // primaryOrgIDLength == 0 ||\n        // defaultAppLength == 0 ||\n        // currentAppLength == 0 ||\n        // currentOrgIDLength == 0 ||\n        // tokenLength == 0 ||\n        // permissionsLength == 0 ||\n        // currentOrgTypeLength == 0 \n        ) {\n            return false;\n        }\n        else {\n            return true;\n        }\n    }\n    logout(redirectUrl, pageUrl, action, applicationKeyID = '') {\n        localStorage.clear();\n        sessionStorage.clear();\n        if (applicationKeyID != this.ACCOUNT_KEY_ID && action == 'interceptor') {\n            window.location.href = `${this.environment.ACCOUNT_URL}login?redirectUrl=${redirectUrl}&pageUrl=${pageUrl}`;\n        }\n        else {\n            window.location.href = `${this.environment.ACCOUNT_URL}login?redirectUrl=${redirectUrl}&pageUrl=${pageUrl}&action=${action}`;\n        }\n    }\n}\nAuthenticationService.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"12.2.17\", ngImport: i0, type: AuthenticationService, deps: [{ token: 'environment' }, { token: i1.StorageService }], target: i0.ɵɵFactoryTarget.Injectable });\nAuthenticationService.ɵprov = i0.ɵɵngDeclareInjectable({ minVersion: \"12.0.0\", version: \"12.2.17\", ngImport: i0, type: AuthenticationService, providedIn: 'root' });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"12.2.17\", ngImport: i0, type: AuthenticationService, decorators: [{\n            type: Injectable,\n            args: [{\n                    providedIn: 'root'\n                }]\n        }], ctorParameters: function () { return [{ type: undefined, decorators: [{\n                    type: Inject,\n                    args: ['environment']\n                }] }, { type: i1.StorageService }]; } });\n\nclass AuthGuard {\n    constructor(authenticationService) {\n        this.authenticationService = authenticationService;\n    }\n    canActivate(route, state) {\n        if (this.authenticationService.isLoggedIn()) {\n            return true;\n        }\n        else {\n            let appURL;\n            // this.activatedRoute.data.subscribe(data => {\n            //     console.log('data -', data);\n            //     appURL = data.appURL;\n            // });\n            appURL = route.data.appURL;\n            this.authenticationService.logout(appURL + 'login', state.url, '');\n            return false;\n        }\n    }\n}\nAuthGuard.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"12.2.17\", ngImport: i0, type: AuthGuard, deps: [{ token: AuthenticationService }], target: i0.ɵɵFactoryTarget.Injectable });\nAuthGuard.ɵprov = i0.ɵɵngDeclareInjectable({ minVersion: \"12.0.0\", version: \"12.2.17\", ngImport: i0, type: AuthGuard, providedIn: 'root' });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"12.2.17\", ngImport: i0, type: AuthGuard, decorators: [{\n            type: Injectable,\n            args: [{\n                    providedIn: 'root'\n                }]\n        }], ctorParameters: function () { return [{ type: AuthenticationService }]; } });\n\n/*\n * Public API Surface of authentication-service\n */\n\n/**\n * Generated bundle index. Do not edit.\n */\n\nexport { AuthGuard, AuthenticationService, AuthenticationServiceComponent, AuthenticationServiceModule, AuthenticationServiceService };\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}