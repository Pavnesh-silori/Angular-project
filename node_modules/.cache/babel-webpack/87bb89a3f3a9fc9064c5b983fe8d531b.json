{"ast":null,"code":"import { __awaiter } from \"tslib\";\nimport { EventEmitter } from '@angular/core';\nimport { Validators } from '@angular/forms';\nimport { isEqual } from \"lodash\";\nimport * as moment from 'moment';\nimport { forkJoin } from 'rxjs';\nimport { CARBON_CONSTANT } from '@carbon/constant/carbon.constant';\nimport { ActivityKeyIDEnum } from '@carbon/enum/activity.enum';\n/* tsc-library */\nimport { DateFormatEnum, DateInputComponent, DateInputTypeEnum } from '@library/date';\nimport { FormErrorEnum, MatSelectSearchService, MaterialFormFieldAppearance, NocFileUploadEnum, TypeConfirmationDialog } from '@library/tsc-common';\nimport { UnitTypeKeyID } from '@library/unit-service';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/material/dialog\";\nimport * as i2 from \"@angular/forms\";\nimport * as i3 from \"@carbon/service/fuel.service\";\nimport * as i4 from \"@netzero/service/custom-fuel.service\";\nimport * as i5 from \"@netzero/controller/cutom-fuel.controller\";\nimport * as i6 from \"@carbon/controller/document.controller\";\nimport * as i7 from \"@library/unit-service\";\nimport * as i8 from \"@library/date\";\nimport * as i9 from \"@library/toastr-service\";\nimport * as i10 from \"@library/storage-service\";\nimport * as i11 from \"@angular/router\";\nimport * as i12 from \"@angular/common\";\nimport * as i13 from \"@angular/material/card\";\nimport * as i14 from \"@angular/material/menu\";\nimport * as i15 from \"@angular/material/form-field\";\nimport * as i16 from \"@angular/material/select\";\nimport * as i17 from \"@angular/material/core\";\nimport * as i18 from \"ngx-mat-select-search\";\nimport * as i19 from \"@angular/material/input\";\nimport * as i20 from \"@angular/material/tooltip\";\nimport * as i21 from \"@angular/material/button\";\nconst _c0 = [\"fileInput\"];\nfunction TotalAmountComponent_ng_container_2_mat_error_19_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"mat-error\", 40);\n    i0.ɵɵtext(1);\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const ctx_r6 = i0.ɵɵnextContext(2);\n    i0.ɵɵadvance(1);\n    i0.ɵɵtextInterpolate1(\" \", ctx_r6.FormErrorEnum.REQUIRED, \" \");\n  }\n}\nfunction TotalAmountComponent_ng_container_2_mat_option_36_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"mat-option\", 41);\n    i0.ɵɵtext(1);\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const type_r30 = ctx.$implicit;\n    i0.ɵɵproperty(\"value\", type_r30.id)(\"matTooltip\", type_r30 == null ? null : type_r30.description);\n    i0.ɵɵadvance(1);\n    i0.ɵɵtextInterpolate1(\" \", type_r30.name, \" \");\n  }\n}\nfunction TotalAmountComponent_ng_container_2_mat_option_46_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"mat-option\", 41);\n    i0.ɵɵtext(1);\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const type_r31 = ctx.$implicit;\n    i0.ɵɵproperty(\"value\", type_r31.id)(\"matTooltip\", type_r31 == null ? null : type_r31.description);\n    i0.ɵɵadvance(1);\n    i0.ɵɵtextInterpolate1(\" \", type_r31.name, \" \");\n  }\n}\nfunction TotalAmountComponent_ng_container_2_mat_error_53_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"mat-error\");\n    i0.ɵɵtext(1);\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const ctx_r13 = i0.ɵɵnextContext(2);\n    i0.ɵɵadvance(1);\n    i0.ɵɵtextInterpolate1(\" \", ctx_r13.FormErrorEnum.NEGATIVE, \" \");\n  }\n}\nfunction TotalAmountComponent_ng_container_2_mat_error_54_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"mat-error\");\n    i0.ɵɵtext(1);\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const ctx_r14 = i0.ɵɵnextContext(2);\n    i0.ɵɵadvance(1);\n    i0.ɵɵtextInterpolate1(\" \", ctx_r14.FormErrorEnum.REQUIRED, \" \");\n  }\n}\nfunction TotalAmountComponent_ng_container_2_mat_option_62_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"mat-option\", 42);\n    i0.ɵɵtext(1);\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const unit_r32 = ctx.$implicit;\n    i0.ɵɵproperty(\"value\", unit_r32.id);\n    i0.ɵɵadvance(1);\n    i0.ɵɵtextInterpolate2(\" \", unit_r32.name, \" - \", unit_r32.uomCode, \" \");\n  }\n}\nfunction TotalAmountComponent_ng_container_2_mat_error_72_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"mat-error\");\n    i0.ɵɵtext(1);\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const ctx_r16 = i0.ɵɵnextContext(2);\n    i0.ɵɵadvance(1);\n    i0.ɵɵtextInterpolate1(\" \", ctx_r16.FormErrorEnum.NEGATIVE, \" \");\n  }\n}\nfunction TotalAmountComponent_ng_container_2_mat_error_73_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"mat-error\");\n    i0.ɵɵtext(1);\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const ctx_r17 = i0.ɵɵnextContext(2);\n    i0.ɵɵadvance(1);\n    i0.ɵɵtextInterpolate1(\" \", ctx_r17.FormErrorEnum.REQUIRED, \" \");\n  }\n}\nfunction TotalAmountComponent_ng_container_2_mat_option_81_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"mat-option\", 42);\n    i0.ɵɵtext(1);\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const unit_r33 = ctx.$implicit;\n    i0.ɵɵproperty(\"value\", unit_r33.id);\n    i0.ɵɵadvance(1);\n    i0.ɵɵtextInterpolate2(\" \", unit_r33.name, \" - \", unit_r33.uomCode, \" \");\n  }\n}\nfunction TotalAmountComponent_ng_container_2_mat_error_83_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"mat-error\");\n    i0.ɵɵtext(1);\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const ctx_r19 = i0.ɵɵnextContext(2);\n    i0.ɵɵadvance(1);\n    i0.ɵɵtextInterpolate1(\" \", ctx_r19.FormErrorEnum.REQUIRED, \" \");\n  }\n}\nfunction TotalAmountComponent_ng_container_2_mat_option_91_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"mat-option\", 42);\n    i0.ɵɵtext(1);\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const unit_r34 = ctx.$implicit;\n    i0.ɵɵproperty(\"value\", unit_r34.id);\n    i0.ɵɵadvance(1);\n    i0.ɵɵtextInterpolate2(\" \", unit_r34.name, \" - \", unit_r34.uomCode, \" \");\n  }\n}\nfunction TotalAmountComponent_ng_container_2_mat_error_93_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"mat-error\");\n    i0.ɵɵtext(1);\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const ctx_r21 = i0.ɵɵnextContext(2);\n    i0.ɵɵadvance(1);\n    i0.ɵɵtextInterpolate1(\" \", ctx_r21.FormErrorEnum.REQUIRED, \" \");\n  }\n}\nfunction TotalAmountComponent_ng_container_2_mat_error_100_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"mat-error\");\n    i0.ɵɵtext(1);\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const ctx_r22 = i0.ɵɵnextContext(2);\n    i0.ɵɵadvance(1);\n    i0.ɵɵtextInterpolate1(\" \", ctx_r22.FormErrorEnum.REQUIRED, \" \");\n  }\n}\nfunction TotalAmountComponent_ng_container_2_mat_error_101_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"mat-error\");\n    i0.ɵɵtext(1);\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const ctx_r23 = i0.ɵɵnextContext(2);\n    i0.ɵɵadvance(1);\n    i0.ɵɵtextInterpolate1(\" \", ctx_r23.FormErrorEnum.NEGATIVE, \" \");\n  }\n}\nfunction TotalAmountComponent_ng_container_2_mat_error_102_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"mat-error\");\n    i0.ɵɵtext(1, \" Value can not be more than 1 \");\n    i0.ɵɵelementEnd();\n  }\n}\nfunction TotalAmountComponent_ng_container_2_mat_error_110_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"mat-error\");\n    i0.ɵɵtext(1);\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const ctx_r25 = i0.ɵɵnextContext(2);\n    i0.ɵɵadvance(1);\n    i0.ɵɵtextInterpolate1(\" \", ctx_r25.FormErrorEnum.NEGATIVE, \" \");\n  }\n}\nfunction TotalAmountComponent_ng_container_2_mat_error_111_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"mat-error\");\n    i0.ɵɵtext(1, \" Value can not be more than 100 \");\n    i0.ɵɵelementEnd();\n  }\n}\nfunction TotalAmountComponent_ng_container_2_mat_error_112_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"mat-error\");\n    i0.ɵɵtext(1);\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const ctx_r27 = i0.ɵɵnextContext(2);\n    i0.ɵɵadvance(1);\n    i0.ɵɵtextInterpolate1(\" \", ctx_r27.FormErrorEnum.REQUIRED, \" \");\n  }\n}\nfunction TotalAmountComponent_ng_container_2_ng_container_113_ng_container_9_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementContainer(0);\n  }\n}\nconst _c1 = function (a0) {\n  return {\n    \"d-none\": a0\n  };\n};\nfunction TotalAmountComponent_ng_container_2_ng_container_113_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r39 = i0.ɵɵgetCurrentView();\n    i0.ɵɵelementContainerStart(0);\n    i0.ɵɵelementStart(1, \"div\", 6);\n    i0.ɵɵelementStart(2, \"div\", 43);\n    i0.ɵɵelementStart(3, \"input\", 44, 45);\n    i0.ɵɵlistener(\"change\", function TotalAmountComponent_ng_container_2_ng_container_113_Template_input_change_3_listener($event) {\n      i0.ɵɵrestoreView(_r39);\n      const ctx_r38 = i0.ɵɵnextContext();\n      const formGroup_r3 = ctx_r38.$implicit;\n      const i_r4 = ctx_r38.index;\n      const ctx_r37 = i0.ɵɵnextContext();\n      return ctx_r37.fileUpload($event, formGroup_r3, i_r4);\n    });\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(5, \"div\", 46);\n    i0.ɵɵelementStart(6, \"div\", 9);\n    i0.ɵɵelementStart(7, \"div\", 47);\n    i0.ɵɵelementStart(8, \"div\", 48);\n    i0.ɵɵtemplate(9, TotalAmountComponent_ng_container_2_ng_container_113_ng_container_9_Template, 1, 0, \"ng-container\", 49);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(10, \"div\", 48);\n    i0.ɵɵelementStart(11, \"div\", 50);\n    i0.ɵɵtext(12);\n    i0.ɵɵelement(13, \"br\");\n    i0.ɵɵtext(14);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(15, \"div\", 51);\n    i0.ɵɵelementStart(16, \"button\", 52);\n    i0.ɵɵlistener(\"click\", function TotalAmountComponent_ng_container_2_ng_container_113_Template_button_click_16_listener() {\n      i0.ɵɵrestoreView(_r39);\n      const ctx_r41 = i0.ɵɵnextContext();\n      const formGroup_r3 = ctx_r41.$implicit;\n      const i_r4 = ctx_r41.index;\n      const ctx_r40 = i0.ɵɵnextContext();\n      return ctx_r40.removeFile(formGroup_r3, i_r4);\n    });\n    i0.ɵɵelementStart(17, \"span\", 53);\n    i0.ɵɵtext(18, \" delete \");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementContainerEnd();\n  }\n  if (rf & 2) {\n    const ctx_r42 = i0.ɵɵnextContext();\n    const i_r4 = ctx_r42.index;\n    const formGroup_r3 = ctx_r42.$implicit;\n    const ctx_r28 = i0.ɵɵnextContext();\n    const _r1 = i0.ɵɵreference(4);\n    i0.ɵɵadvance(7);\n    i0.ɵɵproperty(\"ngClass\", i0.ɵɵpureFunction1(4, _c1, ctx_r28.docFileList[i_r4] == null));\n    i0.ɵɵadvance(2);\n    i0.ɵɵproperty(\"ngTemplateOutlet\", _r1);\n    i0.ɵɵadvance(3);\n    i0.ɵɵtextInterpolate1(\" \", formGroup_r3.get(\"docName\").value, \" \");\n    i0.ɵɵadvance(2);\n    i0.ɵɵtextInterpolate1(\" \", formGroup_r3.get(\"docSize\").value, \" \");\n  }\n}\nfunction TotalAmountComponent_ng_container_2_ng_container_114_ng_container_4_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementContainer(0);\n  }\n}\nfunction TotalAmountComponent_ng_container_2_ng_container_114_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r46 = i0.ɵɵgetCurrentView();\n    i0.ɵɵelementContainerStart(0);\n    i0.ɵɵelementStart(1, \"div\", 46);\n    i0.ɵɵelementStart(2, \"div\", 9);\n    i0.ɵɵelementStart(3, \"div\", 54);\n    i0.ɵɵtemplate(4, TotalAmountComponent_ng_container_2_ng_container_114_ng_container_4_Template, 1, 0, \"ng-container\", 49);\n    i0.ɵɵelementStart(5, \"div\", 48);\n    i0.ɵɵelementStart(6, \"div\", 55);\n    i0.ɵɵelementStart(7, \"a\", 56);\n    i0.ɵɵtext(8);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(9, \"div\", 51);\n    i0.ɵɵelementStart(10, \"button\", 57);\n    i0.ɵɵlistener(\"click\", function TotalAmountComponent_ng_container_2_ng_container_114_Template_button_click_10_listener() {\n      i0.ɵɵrestoreView(_r46);\n      const _r44 = i0.ɵɵreference(14);\n      return _r44.click();\n    });\n    i0.ɵɵelementStart(11, \"span\", 58);\n    i0.ɵɵtext(12, \" edit \");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(13, \"input\", 59, 45);\n    i0.ɵɵlistener(\"change\", function TotalAmountComponent_ng_container_2_ng_container_114_Template_input_change_13_listener($event) {\n      i0.ɵɵrestoreView(_r46);\n      const ctx_r48 = i0.ɵɵnextContext();\n      const formGroup_r3 = ctx_r48.$implicit;\n      const i_r4 = ctx_r48.index;\n      const ctx_r47 = i0.ɵɵnextContext();\n      return ctx_r47.fileUpload($event, formGroup_r3, i_r4);\n    });\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(15, \"button\", 60);\n    i0.ɵɵlistener(\"click\", function TotalAmountComponent_ng_container_2_ng_container_114_Template_button_click_15_listener() {\n      i0.ɵɵrestoreView(_r46);\n      const ctx_r50 = i0.ɵɵnextContext();\n      const formGroup_r3 = ctx_r50.$implicit;\n      const i_r4 = ctx_r50.index;\n      const ctx_r49 = i0.ɵɵnextContext();\n      return ctx_r49.deleteConfirmation(formGroup_r3, i_r4);\n    });\n    i0.ɵɵelementStart(16, \"span\", 53);\n    i0.ɵɵtext(17, \" delete \");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementContainerEnd();\n  }\n  if (rf & 2) {\n    const formGroup_r3 = i0.ɵɵnextContext().$implicit;\n    i0.ɵɵnextContext();\n    const _r1 = i0.ɵɵreference(4);\n    i0.ɵɵadvance(4);\n    i0.ɵɵproperty(\"ngTemplateOutlet\", _r1);\n    i0.ɵɵadvance(3);\n    i0.ɵɵpropertyInterpolate(\"href\", formGroup_r3.get(\"docPath\").value, i0.ɵɵsanitizeUrl);\n    i0.ɵɵproperty(\"ngClass\", i0.ɵɵpureFunction1(4, _c1, !formGroup_r3.get(\"docPath\").value));\n    i0.ɵɵadvance(1);\n    i0.ɵɵtextInterpolate1(\" \", formGroup_r3.get(\"docName\").value, \" \");\n  }\n}\nconst _c2 = function (a0) {\n  return {\n    \"fuelSelectErrorFormField\": a0\n  };\n};\nconst _c3 = function (a0, a1) {\n  return {\n    \"text-danger\": a0,\n    \"fuelSelectedLabel\": a1\n  };\n};\nfunction TotalAmountComponent_ng_container_2_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r53 = i0.ɵɵgetCurrentView();\n    i0.ɵɵelementContainerStart(0);\n    i0.ɵɵelementStart(1, \"mat-card\", 4);\n    i0.ɵɵelementContainerStart(2, 5);\n    i0.ɵɵelementStart(3, \"div\", 6);\n    i0.ɵɵelementStart(4, \"div\", 7);\n    i0.ɵɵtext(5, \" Combustion equipment: \");\n    i0.ɵɵelementStart(6, \"span\", 8);\n    i0.ɵɵtext(7);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(8, \"div\", 6);\n    i0.ɵɵelementStart(9, \"div\", 9);\n    i0.ɵɵelementStart(10, \"lib-date-input\", 10, 11);\n    i0.ɵɵlistener(\"emitFilter\", function TotalAmountComponent_ng_container_2_Template_lib_date_input_emitFilter_10_listener() {\n      const restoredCtx = i0.ɵɵrestoreView(_r53);\n      const formGroup_r3 = restoredCtx.$implicit;\n      const i_r4 = restoredCtx.index;\n      const ctx_r52 = i0.ɵɵnextContext();\n      return ctx_r52.dateInpChange(formGroup_r3, i_r4);\n    });\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(12, \"div\", 6);\n    i0.ɵɵelementStart(13, \"div\", 9);\n    i0.ɵɵelementStart(14, \"div\", 6);\n    i0.ɵɵelementStart(15, \"div\", 12);\n    i0.ɵɵelementStart(16, \"button\", 13);\n    i0.ɵɵlistener(\"click\", function TotalAmountComponent_ng_container_2_Template_button_click_16_listener() {\n      const restoredCtx = i0.ɵɵrestoreView(_r53);\n      const formGroup_r3 = restoredCtx.$implicit;\n      return formGroup_r3.get(\"customFuelID\").markAsTouched();\n    });\n    i0.ɵɵelementStart(17, \"span\");\n    i0.ɵɵtext(18);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementEnd();\n    i0.ɵɵtemplate(19, TotalAmountComponent_ng_container_2_mat_error_19_Template, 2, 1, \"mat-error\", 14);\n    i0.ɵɵelementStart(20, \"mat-menu\", null, 15);\n    i0.ɵɵelementStart(22, \"button\", 16);\n    i0.ɵɵlistener(\"click\", function TotalAmountComponent_ng_container_2_Template_button_click_22_listener() {\n      i0.ɵɵrestoreView(_r53);\n      const _r9 = i0.ɵɵreference(33);\n      return _r9.open();\n    });\n    i0.ɵɵtext(23, \" Custom fuels \");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(24, \"button\", 16);\n    i0.ɵɵlistener(\"click\", function TotalAmountComponent_ng_container_2_Template_button_click_24_listener() {\n      i0.ɵɵrestoreView(_r53);\n      const _r11 = i0.ɵɵreference(43);\n      return _r11.open();\n    });\n    i0.ɵɵtext(25, \" Standard fuels \");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementEnd();\n    i0.ɵɵelement(26, \"mat-menu\", null, 17);\n    i0.ɵɵelementStart(28, \"div\", 18);\n    i0.ɵɵelementStart(29, \"mat-form-field\", 19);\n    i0.ɵɵelementStart(30, \"mat-label\", 20);\n    i0.ɵɵtext(31, \" Select type of custom fuel consumed \");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(32, \"mat-select\", 21, 22);\n    i0.ɵɵlistener(\"selectionChange\", function TotalAmountComponent_ng_container_2_Template_mat_select_selectionChange_32_listener($event) {\n      const restoredCtx = i0.ɵɵrestoreView(_r53);\n      const formGroup_r3 = restoredCtx.$implicit;\n      const ctx_r57 = i0.ɵɵnextContext();\n      return ctx_r57.fuelSelected(\"CUSTOM\", $event.value, formGroup_r3);\n    });\n    i0.ɵɵelementStart(34, \"mat-option\");\n    i0.ɵɵelement(35, \"ngx-mat-select-search\", 23);\n    i0.ɵɵelementEnd();\n    i0.ɵɵtemplate(36, TotalAmountComponent_ng_container_2_mat_option_36_Template, 2, 3, \"mat-option\", 24);\n    i0.ɵɵpipe(37, \"async\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(38, \"div\", 18);\n    i0.ɵɵelementStart(39, \"mat-form-field\", 19);\n    i0.ɵɵelementStart(40, \"mat-label\", 20);\n    i0.ɵɵtext(41, \" Select type of standard fuel consumed \");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(42, \"mat-select\", 25, 26);\n    i0.ɵɵlistener(\"selectionChange\", function TotalAmountComponent_ng_container_2_Template_mat_select_selectionChange_42_listener($event) {\n      const restoredCtx = i0.ɵɵrestoreView(_r53);\n      const formGroup_r3 = restoredCtx.$implicit;\n      const ctx_r58 = i0.ɵɵnextContext();\n      return ctx_r58.fuelSelected(\"STANDARD\", $event.value, formGroup_r3);\n    });\n    i0.ɵɵelementStart(44, \"mat-option\");\n    i0.ɵɵelement(45, \"ngx-mat-select-search\", 27);\n    i0.ɵɵelementEnd();\n    i0.ɵɵtemplate(46, TotalAmountComponent_ng_container_2_mat_option_46_Template, 2, 3, \"mat-option\", 24);\n    i0.ɵɵpipe(47, \"async\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(48, \"div\", 12);\n    i0.ɵɵelementStart(49, \"mat-form-field\", 28);\n    i0.ɵɵelementStart(50, \"mat-label\", 20);\n    i0.ɵɵtext(51, \"Quantity of Fuel Consumed\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelement(52, \"input\", 29);\n    i0.ɵɵtemplate(53, TotalAmountComponent_ng_container_2_mat_error_53_Template, 2, 1, \"mat-error\", 30);\n    i0.ɵɵtemplate(54, TotalAmountComponent_ng_container_2_mat_error_54_Template, 2, 1, \"mat-error\", 30);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(55, \"div\", 12);\n    i0.ɵɵelementStart(56, \"mat-form-field\", 28);\n    i0.ɵɵelementStart(57, \"mat-label\", 20);\n    i0.ɵɵtext(58, \"Select unit\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(59, \"mat-select\", 31);\n    i0.ɵɵelementStart(60, \"mat-option\");\n    i0.ɵɵelement(61, \"ngx-mat-select-search\", 32);\n    i0.ɵɵelementEnd();\n    i0.ɵɵtemplate(62, TotalAmountComponent_ng_container_2_mat_option_62_Template, 2, 3, \"mat-option\", 33);\n    i0.ɵɵpipe(63, \"async\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(64, \"mat-error\");\n    i0.ɵɵtext(65);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(66, \"div\", 6);\n    i0.ɵɵelementStart(67, \"div\", 12);\n    i0.ɵɵelementStart(68, \"mat-form-field\", 28);\n    i0.ɵɵelementStart(69, \"mat-label\", 20);\n    i0.ɵɵtext(70, \"Net calorific value(NCV)\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelement(71, \"input\", 34);\n    i0.ɵɵtemplate(72, TotalAmountComponent_ng_container_2_mat_error_72_Template, 2, 1, \"mat-error\", 30);\n    i0.ɵɵtemplate(73, TotalAmountComponent_ng_container_2_mat_error_73_Template, 2, 1, \"mat-error\", 30);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(74, \"div\", 12);\n    i0.ɵɵelementStart(75, \"mat-form-field\", 28);\n    i0.ɵɵelementStart(76, \"mat-label\", 20);\n    i0.ɵɵtext(77, \"Select Numerator\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(78, \"mat-select\", 35);\n    i0.ɵɵelementStart(79, \"mat-option\");\n    i0.ɵɵelement(80, \"ngx-mat-select-search\", 32);\n    i0.ɵɵelementEnd();\n    i0.ɵɵtemplate(81, TotalAmountComponent_ng_container_2_mat_option_81_Template, 2, 3, \"mat-option\", 33);\n    i0.ɵɵpipe(82, \"async\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵtemplate(83, TotalAmountComponent_ng_container_2_mat_error_83_Template, 2, 1, \"mat-error\", 30);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(84, \"div\", 12);\n    i0.ɵɵelementStart(85, \"mat-form-field\", 28);\n    i0.ɵɵelementStart(86, \"mat-label\", 20);\n    i0.ɵɵtext(87, \"Select Denominator\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(88, \"mat-select\", 36);\n    i0.ɵɵelementStart(89, \"mat-option\");\n    i0.ɵɵelement(90, \"ngx-mat-select-search\", 32);\n    i0.ɵɵelementEnd();\n    i0.ɵɵtemplate(91, TotalAmountComponent_ng_container_2_mat_option_91_Template, 2, 3, \"mat-option\", 33);\n    i0.ɵɵpipe(92, \"async\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵtemplate(93, TotalAmountComponent_ng_container_2_mat_error_93_Template, 2, 1, \"mat-error\", 30);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(94, \"div\", 6);\n    i0.ɵɵelementStart(95, \"div\", 12);\n    i0.ɵɵelementStart(96, \"mat-form-field\", 28);\n    i0.ɵɵelementStart(97, \"mat-label\", 20);\n    i0.ɵɵtext(98, \"Oxidation factor \");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelement(99, \"input\", 37);\n    i0.ɵɵtemplate(100, TotalAmountComponent_ng_container_2_mat_error_100_Template, 2, 1, \"mat-error\", 30);\n    i0.ɵɵtemplate(101, TotalAmountComponent_ng_container_2_mat_error_101_Template, 2, 1, \"mat-error\", 30);\n    i0.ɵɵtemplate(102, TotalAmountComponent_ng_container_2_mat_error_102_Template, 2, 0, \"mat-error\", 30);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(103, \"div\", 12);\n    i0.ɵɵelementStart(104, \"mat-form-field\", 28);\n    i0.ɵɵelementStart(105, \"mat-label\", 20);\n    i0.ɵɵtext(106, \"Biomass Used\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelement(107, \"input\", 38);\n    i0.ɵɵelementStart(108, \"span\", 39);\n    i0.ɵɵtext(109, \"%\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵtemplate(110, TotalAmountComponent_ng_container_2_mat_error_110_Template, 2, 1, \"mat-error\", 30);\n    i0.ɵɵtemplate(111, TotalAmountComponent_ng_container_2_mat_error_111_Template, 2, 0, \"mat-error\", 30);\n    i0.ɵɵtemplate(112, TotalAmountComponent_ng_container_2_mat_error_112_Template, 2, 1, \"mat-error\", 30);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementEnd();\n    i0.ɵɵtemplate(113, TotalAmountComponent_ng_container_2_ng_container_113_Template, 19, 6, \"ng-container\", 30);\n    i0.ɵɵtemplate(114, TotalAmountComponent_ng_container_2_ng_container_114_Template, 18, 6, \"ng-container\", 30);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementContainerEnd();\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementContainerEnd();\n  }\n  if (rf & 2) {\n    const formGroup_r3 = ctx.$implicit;\n    const i_r4 = ctx.index;\n    const _r7 = i0.ɵɵreference(21);\n    const _r8 = i0.ɵɵreference(27);\n    const ctx_r0 = i0.ɵɵnextContext();\n    i0.ɵɵadvance(2);\n    i0.ɵɵproperty(\"formGroupName\", i_r4);\n    i0.ɵɵadvance(5);\n    i0.ɵɵtextInterpolate1(\" \", formGroup_r3.get(\"sourceName\").value, \" \");\n    i0.ɵɵadvance(3);\n    i0.ɵɵproperty(\"materialFieldWidthInp\", true)(\"materialFormFieldAppearanceInp\", ctx_r0.MaterialFormFieldAppearance.FORM_FIELD_APPEARANCE)(\"isMandatoryFieldInp\", ctx_r0.errorHandlingFA(formGroup_r3, \"startDate\", \"required\"))(\"dateInputTypeInp\", ctx_r0.DateInputTypeEnum.CUSTOM_INPUT)(\"cdrFormatInp\", ctx_r0.DateFormatEnum.DD_MMM_YYYY)(\"labelInp\", \"Accounting Period\");\n    i0.ɵɵadvance(6);\n    i0.ɵɵclassMap(i0.ɵɵpureFunction1(61, _c2, ctx_r0.getFuelRequiredError(formGroup_r3)));\n    i0.ɵɵproperty(\"matMenuTriggerFor\", _r7);\n    i0.ɵɵadvance(1);\n    i0.ɵɵclassMap(i0.ɵɵpureFunction2(63, _c3, ctx_r0.getFuelRequiredError(formGroup_r3), formGroup_r3.get(\"fuelName\").value));\n    i0.ɵɵadvance(1);\n    i0.ɵɵtextInterpolate1(\" \", formGroup_r3.get(\"fuelName\").value || \"Select fuel\", \" \");\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngIf\", ctx_r0.getFuelRequiredError(formGroup_r3));\n    i0.ɵɵadvance(3);\n    i0.ɵɵproperty(\"matMenuTriggerFor\", _r8);\n    i0.ɵɵadvance(2);\n    i0.ɵɵproperty(\"matMenuTriggerFor\", _r8);\n    i0.ɵɵadvance(5);\n    i0.ɵɵproperty(\"appearance\", ctx_r0.MaterialFormFieldAppearance.FORM_FIELD_APPEARANCE);\n    i0.ɵɵadvance(6);\n    i0.ɵɵproperty(\"formControl\", ctx_r0.customFuelSearchUtil.filterFC);\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngForOf\", i0.ɵɵpipeBind1(37, 51, ctx_r0.customFuelSearchUtil.filteredEntities));\n    i0.ɵɵadvance(3);\n    i0.ɵɵproperty(\"appearance\", ctx_r0.MaterialFormFieldAppearance.FORM_FIELD_APPEARANCE);\n    i0.ɵɵadvance(6);\n    i0.ɵɵproperty(\"formControl\", ctx_r0.fuelTypeSearchUtil.filterFC);\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngForOf\", i0.ɵɵpipeBind1(47, 53, ctx_r0.fuelTypeSearchUtil.filteredEntities));\n    i0.ɵɵadvance(3);\n    i0.ɵɵproperty(\"appearance\", ctx_r0.MaterialFormFieldAppearance.FORM_FIELD_APPEARANCE);\n    i0.ɵɵadvance(4);\n    i0.ɵɵproperty(\"ngIf\", ctx_r0.errorHandlingFA(formGroup_r3, \"fuelConsumed\", \"min\"));\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngIf\", ctx_r0.errorHandlingFA(formGroup_r3, \"fuelConsumed\", \"required\"));\n    i0.ɵɵadvance(2);\n    i0.ɵɵproperty(\"appearance\", ctx_r0.MaterialFormFieldAppearance.FORM_FIELD_APPEARANCE);\n    i0.ɵɵadvance(5);\n    i0.ɵɵproperty(\"formControl\", ctx_r0.fuelConsumedUnitSearchUtil.filterFC);\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngForOf\", i0.ɵɵpipeBind1(63, 55, ctx_r0.fuelConsumedUnitSearchUtil.filteredEntities));\n    i0.ɵɵadvance(3);\n    i0.ɵɵtextInterpolate1(\" \", ctx_r0.FormErrorEnum.REQUIRED, \" \");\n    i0.ɵɵadvance(3);\n    i0.ɵɵproperty(\"appearance\", ctx_r0.MaterialFormFieldAppearance.FORM_FIELD_APPEARANCE);\n    i0.ɵɵadvance(4);\n    i0.ɵɵproperty(\"ngIf\", ctx_r0.errorHandlingFA(formGroup_r3, \"netCalorificValue\", \"min\"));\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngIf\", ctx_r0.errorHandlingFA(formGroup_r3, \"netCalorificValue\", \"required\"));\n    i0.ɵɵadvance(2);\n    i0.ɵɵproperty(\"appearance\", ctx_r0.MaterialFormFieldAppearance.FORM_FIELD_APPEARANCE);\n    i0.ɵɵadvance(5);\n    i0.ɵɵproperty(\"formControl\", ctx_r0.energyUnitSearchUtil.filterFC);\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngForOf\", i0.ɵɵpipeBind1(82, 57, ctx_r0.energyUnitSearchUtil.filteredEntities));\n    i0.ɵɵadvance(2);\n    i0.ɵɵproperty(\"ngIf\", ctx_r0.errorHandlingFA(formGroup_r3, \"ncvNumeratorUnitID\", \"required\"));\n    i0.ɵɵadvance(2);\n    i0.ɵɵproperty(\"appearance\", ctx_r0.MaterialFormFieldAppearance.FORM_FIELD_APPEARANCE);\n    i0.ɵɵadvance(5);\n    i0.ɵɵproperty(\"formControl\", ctx_r0.ncvDenominatorSearchUtil.filterFC);\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngForOf\", i0.ɵɵpipeBind1(92, 59, ctx_r0.ncvDenominatorSearchUtil.filteredEntities));\n    i0.ɵɵadvance(2);\n    i0.ɵɵproperty(\"ngIf\", ctx_r0.errorHandlingFA(formGroup_r3, \"ncvDenominatorUnitID\", \"required\"));\n    i0.ɵɵadvance(3);\n    i0.ɵɵproperty(\"appearance\", ctx_r0.MaterialFormFieldAppearance.FORM_FIELD_APPEARANCE);\n    i0.ɵɵadvance(4);\n    i0.ɵɵproperty(\"ngIf\", ctx_r0.errorHandlingFA(formGroup_r3, \"oxidationFactor\", \"required\"));\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngIf\", ctx_r0.errorHandlingFA(formGroup_r3, \"oxidationFactor\", \"min\"));\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngIf\", ctx_r0.errorHandlingFA(formGroup_r3, \"oxidationFactor\", \"max\"));\n    i0.ɵɵadvance(2);\n    i0.ɵɵproperty(\"appearance\", ctx_r0.MaterialFormFieldAppearance.FORM_FIELD_APPEARANCE);\n    i0.ɵɵadvance(6);\n    i0.ɵɵproperty(\"ngIf\", ctx_r0.errorHandlingFA(formGroup_r3, \"biomassPct\", \"min\"));\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngIf\", ctx_r0.errorHandlingFA(formGroup_r3, \"biomassPct\", \"max\"));\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngIf\", ctx_r0.errorHandlingFA(formGroup_r3, \"biomassPct\", \"required\"));\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngIf\", formGroup_r3.get(\"docPath\").value == null);\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngIf\", formGroup_r3.get(\"docPath\").value != null);\n  }\n}\nfunction TotalAmountComponent_ng_template_3_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\", 48);\n    i0.ɵɵelementStart(1, \"div\", 61);\n    i0.ɵɵelement(2, \"img\", 62);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const ctx_r2 = i0.ɵɵnextContext();\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"matTooltip\", ctx_r2.billFileName);\n  }\n}\n/* tsc-library */\nexport let TotalAmountComponent = /*#__PURE__*/(() => {\n  class TotalAmountComponent {\n    constructor(dialog, formBuilder, fuelService, customFuelService, customFuelController, carbonDocumentController, unitService, dateService, toastrService, storageService, activatedRoute) {\n      this.dialog = dialog;\n      this.formBuilder = formBuilder;\n      this.fuelService = fuelService;\n      this.customFuelService = customFuelService;\n      this.customFuelController = customFuelController;\n      this.carbonDocumentController = carbonDocumentController;\n      this.unitService = unitService;\n      this.dateService = dateService;\n      this.toastrService = toastrService;\n      this.FormErrorEnum = FormErrorEnum;\n      this.DateFormatEnum = DateFormatEnum;\n      this.DateInputTypeEnum = DateInputTypeEnum;\n      this.MaterialFormFieldAppearance = MaterialFormFieldAppearance;\n      this.isSource = false;\n      this.sourceName = null;\n      this.isUpdate = false;\n      this.haveMultipleSource = false;\n      this.isEqual = true;\n      this.billFile = null;\n      this.fuelTypeSearchUtil = new MatSelectSearchService(['name']);\n      this.customFuelSearchUtil = new MatSelectSearchService(['name']);\n      this.fuelConsumedUnitSearchUtil = new MatSelectSearchService(['name']);\n      this.ncvDenominatorSearchUtil = new MatSelectSearchService(['name']);\n      this.energyUnitSearchUtil = new MatSelectSearchService(['name']);\n      this.fileInputArr = [];\n      this.valid_fields = ['activityID', 'activityKeyID', 'sourceTypeID', 'sourceID', 'sourceName', 'dataCollectionMethodID', 'startDate', 'endDate', 'customFuelID', 'standardFuelID', 'netCalorificValue', 'ncvNumeratorUnitID', 'ncvDenominatorUnitID', 'oxidationFactor', 'biomassPct', 'fuelConsumed', 'fuelConsumedUnitID'];\n      this.excluded_controls = ['sourceID', 'sourceName', 'sourceTypeID', 'activityID', 'activityKeyID', 'fuelName', 'dateRange', 'dataCollectionMethodID', 'meterUnitID'];\n      this._valid_fields = new EventEmitter();\n      this.got_necessary_data = false;\n      this.errorHandling = (control, error) => {\n        return this.activityDataFG.get(control).hasError(error);\n      };\n      this.errorHandlingFA = (formGroup, control, error) => {\n        return formGroup.get(control).hasError(error);\n      };\n      this.currentOrgID = storageService.getStorage('currentOrgID');\n      activatedRoute.queryParams.subscribe(qParams => {\n        this.action = qParams['action'];\n        this.activityID = Number(qParams['activityID']);\n      });\n      this.activityStdKeyID = activatedRoute.snapshot.data.activityKeyID;\n    }\n    ngOnChanges(changes) {\n      if (!this.got_necessary_data) {\n        this.getNecessaryData();\n      }\n      if (changes.activityDataFG.firstChange) {\n        this.initFormValidation();\n      }\n      if (this.action == 'create') {\n        if (changes.activityDataFG.firstChange) {\n          this.formDataInit();\n        }\n        if (changes === null || changes === void 0 ? void 0 : changes.defaultDataCollectionMethodID) {\n          if (this.defaultDataCollectionMethodID != undefined || this.defaultDataCollectionMethodID != null) {\n            this.setDataCollectionMethod();\n          }\n        }\n      }\n      if (changes.activityConfig) {\n        if (this.activityConfig != undefined && this.activityConfig != null) {\n          if (this.action == 'create') {\n            this.addActivityDataFG();\n          }\n        }\n      }\n      this._valid_fields.emit(this.valid_fields);\n    }\n    ngAfterViewInit() {\n      this.fileInputLoadSub = this.fileInput.changes.subscribe(() => this.updateFileInputArray());\n      this.updateFileInputArray();\n      if (this.action == 'update') {\n        this.isUpdate = true;\n        this.activityData = this.activityConfig.activityData;\n        this.patchActivityData();\n        this.dateInputSub = this.customDateInputs.changes.subscribe(list => {\n          if (list.length > 0) {\n            this.patchDate();\n            this.dateInputSub.unsubscribe();\n          }\n        });\n      }\n    }\n    updateFileInputArray() {\n      if (this.fileInput && this.fileInput.length > 0) {\n        this.fileInputArr = this.fileInput.toArray();\n      }\n    }\n    addActivityDataFG() {\n      const activityConfigSource = this.activityConfig.activityConfigSource;\n      if (activityConfigSource !== null && activityConfigSource !== void 0 ? activityConfigSource : false) {\n        if (activityConfigSource.length > 0) {\n          const sources = activityConfigSource[0].source;\n          this.haveMultipleSource = sources.length > 1;\n          sources.forEach(source => {\n            let fg = this.dataFG;\n            fg.get('sourceID').patchValue(source.id);\n            fg.get('sourceName').patchValue(source.name);\n            fg.get('sourceTypeID').patchValue(this.activityConfig.activityConfigSource[0].sourceTypeID);\n            this.activityDataFA.push(fg);\n          });\n        }\n      }\n    }\n    getFuelHhv(fuelID, formGroup) {\n      return __awaiter(this, void 0, void 0, function* () {\n        let ncv = yield this.fuelService.getFuelHhv(this.currentOrgID, fuelID);\n        if (ncv.value != null) {\n          formGroup.patchValue({\n            netCalorificValue: ncv.value,\n            ncvNumeratorUnitID: ncv.numeratorUnit.id,\n            ncvDenominatorUnitID: ncv.denominatorUnit.id,\n            oxidationFactor: CARBON_CONSTANT.DEFAULT_OXIDATION_FACTOR,\n            biomassPct: CARBON_CONSTANT.DEFAULT_BIOMASS_PCT\n          });\n        }\n      });\n    }\n    getCustomFuelByID(fuelID, formGroup) {\n      return __awaiter(this, void 0, void 0, function* () {\n        let fuel = yield this.customFuelService.getCustomFuelByID(this.currentOrgID, fuelID);\n        if (fuel != null) {\n          formGroup.patchValue({\n            netCalorificValue: fuel.netCalorificValue,\n            ncvNumeratorUnitID: fuel.ncvNumeratorUnitID,\n            ncvDenominatorUnitID: fuel.ncvDenominatorUnitID,\n            oxidationFactor: fuel.oxidationFactor,\n            biomassPct: fuel.biomassPct\n          });\n        }\n      });\n    }\n    ngOnInit() {\n      if (!this.got_necessary_data) {\n        this.getNecessaryData();\n      }\n    }\n    formDataInit() {\n      // this.activityDataFA.push(this.dataFG);\n    }\n    get activityDataFA() {\n      return this.activityDataFG.get('activityData');\n    }\n    getFuel(fuelID) {\n      return this.fuelList.find(fuel => fuel.id == fuelID);\n    }\n    get dataFG() {\n      return this.formBuilder.group({\n        activityID: [this.activityID],\n        activityKeyID: [this.activityStdKeyID],\n        activityDataID: [],\n        sourceTypeID: [],\n        sourceID: [],\n        sourceName: [],\n        dataCollectionMethodID: [this.defaultDataCollectionMethodID],\n        dateRange: [],\n        startDate: [, this.haveMultipleSource ? null : [Validators.required]],\n        endDate: [, this.haveMultipleSource ? null : [Validators.required]],\n        customFuelID: [, this.haveMultipleSource ? null : [Validators.required]],\n        standardFuelID: [, this.haveMultipleSource ? null : [Validators.required]],\n        fuelName: [],\n        netCalorificValue: [, this.haveMultipleSource ? [Validators.min(0)] : [Validators.required, Validators.min(0)]],\n        ncvNumeratorUnitID: [, this.haveMultipleSource ? null : [Validators.required]],\n        ncvDenominatorUnitID: [, this.haveMultipleSource ? null : [Validators.required]],\n        oxidationFactor: [CARBON_CONSTANT.DEFAULT_OXIDATION_FACTOR, this.haveMultipleSource ? [Validators.min(0), Validators.max(1)] : [Validators.required, Validators.min(0), Validators.max(1)]],\n        biomassPct: [CARBON_CONSTANT.DEFAULT_BIOMASS_PCT, this.haveMultipleSource ? [Validators.min(0), Validators.max(100)] : [Validators.required, Validators.min(0), Validators.max(100)]],\n        fuelConsumed: [, this.haveMultipleSource ? [Validators.min(0)] : [Validators.required, Validators.min(0)]],\n        fuelConsumedUnitID: [, this.haveMultipleSource ? null : [Validators.required]],\n        docID: [],\n        docType: [],\n        docName: [],\n        docSize: [],\n        docPath: []\n      });\n    }\n    setDataCollectionMethod() {\n      this.activityDataFA.controls.forEach(group => {\n        group.get('dataCollectionMethodID').patchValue(this.defaultDataCollectionMethodID);\n      });\n    }\n    getFuelRequiredError(formGroup) {\n      if (formGroup.get('customFuelID').invalid && formGroup.get('standardFuelID').invalid && formGroup.get('customFuelID').touched) return true;\n      return false;\n    }\n    dateInpChange(formGroup, index) {\n      if (this.customDateInputs) {\n        const customDateInputInstance = this.customDateInputs.toArray()[index];\n        const startDate = customDateInputInstance.startDateFC.value;\n        const endDate = customDateInputInstance.endDateFC.value;\n        if (startDate) {\n          const formatted_startDate = this.dateService.formatDate(startDate, DateFormatEnum.YYYY_MM_DD);\n          formGroup.get('startDate').patchValue(formatted_startDate);\n        }\n        if (endDate) {\n          const formatted_endDate = this.dateService.formatDate(endDate, DateFormatEnum.YYYY_MM_DD);\n          formGroup.get('endDate').patchValue(formatted_endDate);\n        }\n      }\n    }\n    addActivity() {\n      // this.activityDataFA.push(this.dataFG);\n    }\n    patchActivityData() {\n      let formGroup = this.dataFG;\n      this.activityDataFA.push(formGroup);\n      const source = this.activityData.source;\n      const sourceType = this.activityData.sourceType;\n      const ncvNumeratorUnit = this.activityData.ncvNumeratorUnit;\n      const ncvDenominatorUnit = this.activityData.ncvDenominatorUnit;\n      const dataCollectionMethodStd = this.activityData.dataCollectionMethodStd;\n      const fuelConsumedUnit = this.activityData.fuelConsumedUnit;\n      formGroup.patchValue({\n        activityDataID: this.activityData.id,\n        dataCollectionMethodID: dataCollectionMethodStd.id,\n        sourceID: source.id,\n        sourceName: source.name,\n        sourceTypeID: sourceType.id,\n        customFuelID: this.activityData.customFuelID,\n        standardFuelID: this.activityData.standardFuelID,\n        startDate: this.activityData.startDate,\n        endDate: this.activityData.endDate,\n        netCalorificValue: this.activityData.netCalorificValue,\n        ncvNumeratorUnitID: ncvNumeratorUnit.unitID,\n        ncvDenominatorUnitID: ncvDenominatorUnit.unitID,\n        oxidationFactor: this.activityData.oxidationFactor,\n        biomassPct: this.activityData.biomassPct,\n        fuelConsumed: this.activityData.fuelConsumed,\n        fuelConsumedUnitID: fuelConsumedUnit.unitID\n      });\n      if (this.activityData.file != null) {\n        formGroup.patchValue({\n          docID: this.activityData.file.id,\n          docName: this.activityData.file.name,\n          docPath: this.activityData.file.path\n        });\n      }\n      if (this.activityData.sourceName != null) {\n        this.sourceName = this.activityData.sourceName;\n        this.isSource = true;\n      }\n      // this.updateValidators();\n      this.activityDataFA.valueChanges.subscribe(() => this.isEqual = isEqual(this.initialObject, this.activityDataFA.value));\n      this.initialObject = this.activityDataFA.value;\n      this.isEqual = true;\n    }\n    patchDate() {\n      const customDateInputInstance = this.customDateInputs.toArray()[0];\n      if (customDateInputInstance) {\n        customDateInputInstance.daterange.patchValue({\n          startDate: moment(this.activityData['startDate']),\n          endDate: moment(this.activityData['endDate'])\n        });\n      }\n    }\n    patchFuel() {\n      const isStandard = this.activityData.standardFuelID ? true : false;\n      this.fuelSelected(isStandard ? 'STANDARD' : 'CUSTOM', isStandard ? this.activityData.standardFuelID : this.activityData.customFuelID, this.activityDataFA.get('0'), true);\n    }\n    fuelSelected(fuelType, fuelID, formGroup, isPatch = false) {\n      let selected_fuel;\n      let reset_field;\n      if (fuelType == 'STANDARD') {\n        reset_field = 'customFuelID';\n        selected_fuel = this.fuelList.find(fuel => fuel.id == fuelID);\n        if (!isPatch) {\n          this.getFuelHhv(fuelID, formGroup);\n        }\n      } else {\n        reset_field = 'standardFuelID';\n        selected_fuel = this.customFuelList.find(fuel => fuel.id == fuelID);\n        if (!isPatch) {\n          this.getCustomFuelByID(fuelID, formGroup);\n        }\n      }\n      this._valid_fields.emit(this.valid_fields);\n      formGroup.get('fuelName').patchValue(selected_fuel.name);\n      formGroup.get(reset_field).reset(null);\n      formGroup.get(reset_field).removeValidators([Validators.required]);\n      formGroup.get(reset_field).updateValueAndValidity();\n    }\n    getNecessaryData() {\n      return __awaiter(this, void 0, void 0, function* () {\n        this.customFuelList = yield this.customFuelService.getCustomFuelList(this.currentOrgID);\n        this.customFuelSearchUtil.entityArr = this.customFuelList;\n        this.customFuelSearchUtil.createSubscription();\n        this.fuelList = yield this.fuelService.getFuelByActivityKeyID(ActivityKeyIDEnum.STATIONARY_COMBUSTION);\n        this.fuelTypeSearchUtil.entityArr = this.fuelList;\n        this.fuelTypeSearchUtil.createSubscription();\n        forkJoin([\n        // this.fuelService.getFuelByActivityKeyID(ActivityKeyIDEnum.STATIONARY_COMBUSTION),\n        // this.customFuelService.getCustomFuelList(this.currentOrgID),\n        this.unitService.getUnit([])]).subscribe(([/* fuel, */ /* customFuel, */units]) => {\n          // this.fuelList = fuel;\n          // this.customFuelList = <any[]>customFuel;\n          const unitM = units;\n          const energyUnitM = this.unitService.filterUnit(unitM, [UnitTypeKeyID.ENERGY]);\n          const volumeAndMassUnits = this.unitService.filterUnit(unitM, [UnitTypeKeyID.MASS, UnitTypeKeyID.VOLUME]);\n          this.energyUnitSearchUtil.entityArr = energyUnitM;\n          this.energyUnitSearchUtil.createSubscription();\n          this.ncvDenominatorSearchUtil.entityArr = volumeAndMassUnits;\n          this.ncvDenominatorSearchUtil.createSubscription();\n          this.fuelConsumedUnitSearchUtil.entityArr = volumeAndMassUnits;\n          this.fuelConsumedUnitSearchUtil.createSubscription();\n          this.got_necessary_data = true;\n          if (this.isUpdate) {\n            this.patchFuel();\n          }\n        }, error => {\n          console.error('error in formInitialization -', error);\n        });\n      });\n    }\n    fileUpload(event, formGroup, index) {\n      let file = event.target.files[0];\n      if (file) {\n        if (file.type !== 'application/pdf') {\n          this.toastrService.error(NocFileUploadEnum.INVALID_FILE_TYPE_ERROR);\n          return;\n        }\n        if (file.size > NocFileUploadEnum.MAX_FILE_SIZE) {\n          this.toastrService.error(NocFileUploadEnum.INVAID_FILE_SIZE_ERROR);\n          return;\n        }\n        let reader = new FileReader();\n        reader.readAsDataURL(file);\n        reader.onload = e => {};\n        this.billFile = file;\n        this.billFileName = file['name'];\n        formGroup.get('docName').patchValue(file['name']);\n        formGroup.get('docSize').patchValue(this.getFileSizeWithUnit(file['size']));\n        this.docFileList[index] = file;\n        if (this.action == 'update') {\n          this.fileCreateUpdate(formGroup);\n        }\n      } else {\n        this.toastrService.error('Please upload a file!');\n        return;\n      }\n    }\n    getFileSizeWithUnit(billFileSize) {\n      const fileSizeInKB = Math.round(billFileSize / 1024);\n      const fileSizeInMB = Math.round(fileSizeInKB / 1024);\n      const fileSizeInGB = Math.round(fileSizeInMB / 1024);\n      if (fileSizeInGB > 1) {\n        return fileSizeInGB + ' GB';\n      } else if (fileSizeInMB > 1) {\n        return fileSizeInMB + ' MB';\n      } else {\n        return fileSizeInKB + ' KB';\n      }\n    }\n    removeFile(formGroup, index) {\n      if (this.action == 'create') {\n        this.fileInputArr[index].nativeElement.value = null;\n      }\n      this.billFile = null;\n      this.billFileName = '';\n      formGroup.get('docName').reset();\n      formGroup.get('docSize').reset();\n      formGroup.get('docPath').reset(null);\n      formGroup.get('docID').reset();\n      this.docFileList[index] = this.billFile;\n    }\n    toFormData() {\n      const formData = new FormData();\n      formData.append('payload', this.billFile);\n      return formData;\n    }\n    fileCreateUpdate(formGroup) {\n      if (formGroup.get('docID').value == null) {\n        this.carbonDocumentController.createDocument(this.currentOrgID, formGroup.get('activityDataID').value, ActivityKeyIDEnum.PROCESS_FUEL_CONSUMPTION, this.toFormData()).subscribe(response => {\n          this.file = response['response'];\n          this.updateFileFormControl(formGroup);\n        }, error => {\n          console.log(\"error in fileCreate -\", error);\n        });\n      } else {\n        this.carbonDocumentController.updateDocument(this.currentOrgID, formGroup.get('docID').value, this.toFormData()).subscribe(response => {\n          this.file = response['response'];\n          this.updateFileFormControl(formGroup);\n        }, error => {\n          console.log(\"error in fileUpdate -\", error);\n        });\n      }\n    }\n    updateFileFormControl(formGroup) {\n      formGroup.get('docID').patchValue(this.file.id);\n      formGroup.get('docName').patchValue(this.file.name);\n      formGroup.get('docPath').patchValue(this.file.path);\n    }\n    deleteConfirmation(formGroup, index) {\n      const dialogRef = this.dialog.open(TypeConfirmationDialog, {\n        minWidth: '650px',\n        maxWidth: '600px',\n        data: {\n          icon: 'delete',\n          header: 'Are you sure you want to delete ?',\n          body: '<p class = \"ps-1\"><strong class=\"pe-1\"> Note:</strong>This file will be deleted permanently and you won`t be able to track it`s progress.</p><span class=\"fw-bold ps-1\">Are you sure you want to delete?</span>',\n          confirmationInput: 'DELETE',\n          buttonOne: 'Cancel',\n          buttonTwo: 'Delete'\n        }\n      });\n      dialogRef.afterClosed().subscribe(result => {\n        if (result) {\n          this.deleteDocument(formGroup.get('docID').value, formGroup, index);\n        } else {\n          dialogRef.close();\n        }\n      });\n    }\n    deleteDocument(docID, formGroup, index) {\n      this.carbonDocumentController.deleteDocument(this.currentOrgID, docID).subscribe(res => {\n        this.removeFile(formGroup, index);\n      }, error => {\n        console.log(\"error in deleteDocument -\", error);\n      });\n    }\n    uploadDoc(index) {\n      this.fileInputArr[index].nativeElement.click();\n    }\n    haveValue(formGroup) {\n      for (let control in formGroup.controls) {\n        if (!this.excluded_controls.includes(control)) {\n          let value = formGroup.get(control).value;\n          if (control == 'oxidationFactor' || control == 'biomassPct') {\n            if (control == 'oxidationFactor' && value !== CARBON_CONSTANT.DEFAULT_OXIDATION_FACTOR) {\n              return true;\n            }\n            if (control == 'biomassPct' && value !== CARBON_CONSTANT.DEFAULT_BIOMASS_PCT) {\n              return true;\n            }\n          } else if (value !== null && value !== void 0 ? value : false) {\n            return true;\n          }\n        }\n      }\n      return false;\n    }\n    isAnyRowFilled() {\n      for (let i = 0; i < this.activityDataFA.controls.length; ++i) {\n        let formGroup = this.activityDataFA.get(`${i}`);\n        if (this.haveValue(formGroup)) return true;\n      }\n      return false;\n    }\n    initFormValidation() {\n      this.activityDataFA.valueChanges.subscribe(() => {\n        this.activityDataFA.controls.forEach((formGroup, index) => {\n          if (this.haveValue(formGroup)) this.addValidationToGroup(formGroup, index);else if (this.haveMultipleSource) this.removeValidationFromGroup(formGroup, index);\n        });\n      });\n    }\n    addValidationToGroup(formGroup, index) {\n      if (this.customDateInputs && this.activityDataFG.touched) {\n        this.customDateInputs.toArray()[index].daterange.markAsTouched();\n      }\n      let skip_custom = formGroup.get('standardFuelID').value ? true : false;\n      let skip_standard = formGroup.get('customFuelID').value ? true : false;\n      for (let control of this.valid_fields) {\n        if (control == 'standardFuelID' && skip_standard) {\n          continue;\n        } else if (control == 'customFuelID' && skip_custom) {\n          continue;\n        } else {\n          formGroup.get(control).addValidators([Validators.required]);\n          formGroup.get(control).updateValueAndValidity({\n            emitEvent: false\n          });\n        }\n      }\n    }\n    removeValidationFromGroup(formGroup, index) {\n      if (this.customDateInputs) this.customDateInputs.toArray()[index].daterange.markAsUntouched();\n      for (let control in formGroup.controls) {\n        formGroup.get(control).removeValidators([Validators.required]);\n        formGroup.get(control).updateValueAndValidity({\n          emitEvent: false\n        });\n      }\n    }\n  }\n  TotalAmountComponent.ɵfac = function TotalAmountComponent_Factory(t) {\n    return new (t || TotalAmountComponent)(i0.ɵɵdirectiveInject(i1.MatDialog), i0.ɵɵdirectiveInject(i2.FormBuilder), i0.ɵɵdirectiveInject(i3.FuelService), i0.ɵɵdirectiveInject(i4.CustomFuelService), i0.ɵɵdirectiveInject(i5.CustomFuelController), i0.ɵɵdirectiveInject(i6.CarbonDocumentController), i0.ɵɵdirectiveInject(i7.UnitService), i0.ɵɵdirectiveInject(i8.DateService), i0.ɵɵdirectiveInject(i9.ToastrService), i0.ɵɵdirectiveInject(i10.StorageService), i0.ɵɵdirectiveInject(i11.ActivatedRoute));\n  };\n  TotalAmountComponent.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n    type: TotalAmountComponent,\n    selectors: [[\"app-total-amount\"]],\n    viewQuery: function TotalAmountComponent_Query(rf, ctx) {\n      if (rf & 1) {\n        i0.ɵɵviewQuery(_c0, 5);\n        i0.ɵɵviewQuery(DateInputComponent, 5);\n      }\n      if (rf & 2) {\n        let _t;\n        i0.ɵɵqueryRefresh(_t = i0.ɵɵloadQuery()) && (ctx.fileInput = _t);\n        i0.ɵɵqueryRefresh(_t = i0.ɵɵloadQuery()) && (ctx.customDateInputs = _t);\n      }\n    },\n    inputs: {\n      activityConfig: \"activityConfig\",\n      activityDataFG: \"activityDataFG\",\n      docFileList: \"docFileList\",\n      defaultDataCollectionMethodID: \"defaultDataCollectionMethodID\"\n    },\n    outputs: {\n      _valid_fields: \"validFields\"\n    },\n    features: [i0.ɵɵNgOnChangesFeature],\n    decls: 5,\n    vars: 2,\n    consts: [[3, \"formGroup\"], [\"formArrayName\", \"activityData\"], [4, \"ngFor\", \"ngForOf\"], [\"docImg\", \"\"], [1, \"border\", \"cardOverwrite\", \"my-1\"], [3, \"formGroupName\"], [1, \"row\"], [1, \"col-sm-4\", \"mb-3\"], [1, \"cardTitle\", \"pb-2\"], [1, \"col-sm-8\"], [1, \"cursorPointer\", 3, \"materialFieldWidthInp\", \"materialFormFieldAppearanceInp\", \"isMandatoryFieldInp\", \"dateInputTypeInp\", \"cdrFormatInp\", \"labelInp\", \"emitFilter\"], [\"customDateInput\", \"\"], [1, \"col-sm-4\"], [\"type\", \"button\", 1, \"btn\", \"btn-light\", \"w-100\", \"text-start\", \"text-secondary\", \"fs-6\", \"fuelSelect\", 3, \"matMenuTriggerFor\", \"click\"], [\"class\", \"fuelSelectError\", 4, \"ngIf\"], [\"fuels\", \"matMenu\"], [\"mat-menu-item\", \"\", 3, \"matMenuTriggerFor\", \"click\"], [\"triggerMenu\", \"matMenu\"], [1, \"funnelFilterDD\"], [1, \"fuel\", 3, \"appearance\"], [1, \"formLabel\"], [\"formControlName\", \"customFuelID\", 3, \"selectionChange\"], [\"customFuel\", \"\"], [\"placeholderLabel\", \"Search by custom fuel name\", \"noEntriesFoundLabel\", \"No matching fuel found.\", 3, \"formControl\"], [\"matTooltipPosition\", \"above\", \"matTooltipClass\", \"infoTooltip\", 3, \"value\", \"matTooltip\", 4, \"ngFor\", \"ngForOf\"], [\"formControlName\", \"standardFuelID\", 3, \"selectionChange\"], [\"standardFuel\", \"\"], [\"placeholderLabel\", \"Search by standard fuel name\", \"noEntriesFoundLabel\", \"No matching fuel found.\", 3, \"formControl\"], [1, \"matFieldWidth100\", 3, \"appearance\"], [\"matInput\", \"\", \"type\", \"number\", \"formControlName\", \"fuelConsumed\", \"placeholder\", \"0.00\", \"min\", \"0\"], [4, \"ngIf\"], [\"formControlName\", \"fuelConsumedUnitID\"], [\"placeholderLabel\", \"Search by unit name\", \"noEntriesFoundLabel\", \"No matching found.\", 3, \"formControl\"], [3, \"value\", 4, \"ngFor\", \"ngForOf\"], [\"matInput\", \"\", \"min\", \"0\", \"type\", \"number\", \"matInput\", \"\", \"placeholder\", \"\", \"type\", \"number\", \"formControlName\", \"netCalorificValue\", 1, \"formPlaceholder\"], [\"formControlName\", \"ncvNumeratorUnitID\"], [\"formControlName\", \"ncvDenominatorUnitID\"], [\"matInput\", \"\", \"min\", \"0\", \"max\", \"1\", \"type\", \"number\", \"placeholder\", \"0.02\", \"formControlName\", \"oxidationFactor\", 1, \"formPlaceholder\"], [\"matInput\", \"\", \"min\", \"0\", \"max\", \"100\", \"type\", \"number\", \"formControlName\", \"biomassPct\", 1, \"formPlaceholder\"], [\"matSuffix\", \"\", 1, \"matSuffix\", \"ms-2\", \"pb-5\"], [1, \"fuelSelectError\"], [\"matTooltipPosition\", \"above\", \"matTooltipClass\", \"infoTooltip\", 3, \"value\", \"matTooltip\"], [3, \"value\"], [1, \"col-sm-8\", \"fileInput\"], [\"type\", \"file\", \"accept\", \"application/pdf\", 1, \"form-control\", 3, \"change\"], [\"fileInput\", \"\"], [1, \"row\", \"pt-2\"], [1, \"border\", \"rounded\", \"d-flex\", 3, \"ngClass\"], [1, \"p-1\"], [4, \"ngTemplateOutlet\"], [1, \"centerAlignVertical\", \"p-1\"], [1, \"ms-auto\", \"p-1\"], [\"type\", \"button\", \"mat-icon-button\", \"\", 1, \"btn\", \"p-1\", 3, \"click\"], [1, \"material-symbols-outlined\", \"text-danger\"], [1, \"border\", \"rounded\", \"d-flex\"], [1, \"centerAlignVertical\", \"p-3\"], [\"target\", \"_blank\", 3, \"href\", \"ngClass\"], [\"type\", \"button\", \"mat-icon-button\", \"\", \"matTooltip\", \"Edit\", \"matTooltipClass\", \"nameTooltip\", \"matTooltipPosition\", \"below\", 1, \"btn\", \"p-1\", 3, \"click\"], [1, \"material-symbols-outlined\", \"text-primary\", \"updateIconHover\", \"fs-5\"], [\"type\", \"file\", \"accept\", \"application/pdf\", 1, \"form-control\", 2, \"display\", \"none\", 3, \"change\"], [\"type\", \"button\", \"mat-icon-button\", \"\", \"matTooltip\", \"Delete\", \"matTooltipClass\", \"nameTooltip\", \"matTooltipPosition\", \"below\", 1, \"btn\", \"p-1\", 3, \"click\"], [\"matSuffix\", \"\", \"mat-icon-button\", \"\", \"mat-raised-button\", \"\", \"matTooltipPosition\", \"below\", 1, \"docIcon\", \"p-1\", 3, \"matTooltip\"], [\"height\", \"40px\", \"src\", \"assets/images/default-doc.ico\", \"alt\", \"bill document preview\"]],\n    template: function TotalAmountComponent_Template(rf, ctx) {\n      if (rf & 1) {\n        i0.ɵɵelementStart(0, \"form\", 0);\n        i0.ɵɵelementContainerStart(1, 1);\n        i0.ɵɵtemplate(2, TotalAmountComponent_ng_container_2_Template, 115, 66, \"ng-container\", 2);\n        i0.ɵɵelementContainerEnd();\n        i0.ɵɵelementEnd();\n        i0.ɵɵtemplate(3, TotalAmountComponent_ng_template_3_Template, 3, 1, \"ng-template\", null, 3, i0.ɵɵtemplateRefExtractor);\n      }\n      if (rf & 2) {\n        i0.ɵɵproperty(\"formGroup\", ctx.activityDataFG);\n        i0.ɵɵadvance(2);\n        i0.ɵɵproperty(\"ngForOf\", ctx.activityDataFA.controls);\n      }\n    },\n    directives: [i2.ɵNgNoValidate, i2.NgControlStatusGroup, i2.FormGroupDirective, i2.FormArrayName, i12.NgForOf, i13.MatCard, i2.FormGroupName, i8.DateInputComponent, i14.MatMenuTrigger, i12.NgIf, i14.MatMenu, i14.MatMenuItem, i15.MatFormField, i15.MatLabel, i16.MatSelect, i2.NgControlStatus, i2.FormControlName, i17.MatOption, i18.MatSelectSearchComponent, i2.FormControlDirective, i19.MatInput, i2.NumberValueAccessor, i2.MinValidator, i2.DefaultValueAccessor, i15.MatError, i2.MaxValidator, i15.MatSuffix, i20.MatTooltip, i12.NgClass, i12.NgTemplateOutlet, i21.MatButton],\n    pipes: [i12.AsyncPipe],\n    styles: [\".funnelFilterDD[_ngcontent-%COMP%]{width:0;height:0;overflow:hidden}  .fuel{position:absolute;z-index:-999;left:175px}  .mat-menu-panel{min-width:0!important;min-height:0!important}.fuelSelect[_ngcontent-%COMP%]{height:52px;margin-top:3px;background-color:transparent}.fuelSelectedLabel[_ngcontent-%COMP%]{color:#000000de!important}.fuelSelectFormField[_ngcontent-%COMP%]{border:1.5px rgba(26,54,126,.125) solid}.fuelSelectErrorFormField[_ngcontent-%COMP%]{border:2px solid red!important}.fuelSelectError[_ngcontent-%COMP%]{font-size:10.5px;margin-top:4px;padding-left:10px}\"]\n  });\n  return TotalAmountComponent;\n})();","map":null,"metadata":{},"sourceType":"module"}