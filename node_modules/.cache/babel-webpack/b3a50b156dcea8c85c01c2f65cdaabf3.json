{"ast":null,"code":"import * as i0 from '@angular/core';\nimport { Injectable, Component, NgModule, Inject } from '@angular/core';\nimport * as i1 from '@angular/common/http';\nimport { __awaiter } from 'tslib';\nlet FacilityServiceService = /*#__PURE__*/(() => {\n  class FacilityServiceService {\n    constructor() {}\n  }\n  FacilityServiceService.ɵfac = function FacilityServiceService_Factory(t) {\n    return new (t || FacilityServiceService)();\n  };\n  FacilityServiceService.ɵprov = /* @__PURE__ */i0.ɵɵdefineInjectable({\n    token: FacilityServiceService,\n    factory: FacilityServiceService.ɵfac,\n    providedIn: 'root'\n  });\n  return FacilityServiceService;\n})();\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && void 0;\n})();\nlet FacilityServiceComponent = /*#__PURE__*/(() => {\n  class FacilityServiceComponent {\n    constructor() {}\n    ngOnInit() {}\n  }\n  FacilityServiceComponent.ɵfac = function FacilityServiceComponent_Factory(t) {\n    return new (t || FacilityServiceComponent)();\n  };\n  FacilityServiceComponent.ɵcmp = /* @__PURE__ */i0.ɵɵdefineComponent({\n    type: FacilityServiceComponent,\n    selectors: [[\"lib-facility-service\"]],\n    decls: 2,\n    vars: 0,\n    template: function FacilityServiceComponent_Template(rf, ctx) {\n      if (rf & 1) {\n        i0.ɵɵelementStart(0, \"p\");\n        i0.ɵɵtext(1, \" facility-service works! \");\n        i0.ɵɵelementEnd();\n      }\n    },\n    encapsulation: 2\n  });\n  return FacilityServiceComponent;\n})();\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && void 0;\n})();\nlet FacilityServiceModule = /*#__PURE__*/(() => {\n  class FacilityServiceModule {\n    static forRoot(environment) {\n      return {\n        ngModule: FacilityServiceModule,\n        providers: [{\n          provide: 'environment',\n          useValue: environment\n        }]\n      };\n    }\n  }\n  FacilityServiceModule.ɵfac = function FacilityServiceModule_Factory(t) {\n    return new (t || FacilityServiceModule)();\n  };\n  FacilityServiceModule.ɵmod = /* @__PURE__ */i0.ɵɵdefineNgModule({\n    type: FacilityServiceModule\n  });\n  FacilityServiceModule.ɵinj = /* @__PURE__ */i0.ɵɵdefineInjector({\n    imports: [[]]\n  });\n  return FacilityServiceModule;\n})();\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && void 0;\n})();\nclass Facility {}\nlet FacilityController = /*#__PURE__*/(() => {\n  class FacilityController {\n    constructor(http, environment) {\n      this.http = http;\n      this.environment = environment;\n    }\n    getFacilityByID(rootOrgID, facilityID) {\n      return this.http.get(`${this.environment.ORGANIZATION_API_URL}organizations/${rootOrgID}/facility/${facilityID}`);\n    }\n  }\n  FacilityController.ɵfac = function FacilityController_Factory(t) {\n    return new (t || FacilityController)(i0.ɵɵinject(i1.HttpClient), i0.ɵɵinject('environment'));\n  };\n  FacilityController.ɵprov = /* @__PURE__ */i0.ɵɵdefineInjectable({\n    token: FacilityController,\n    factory: FacilityController.ɵfac,\n    providedIn: 'root'\n  });\n  return FacilityController;\n})();\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && void 0;\n})();\nlet FacilityService = /*#__PURE__*/(() => {\n  class FacilityService {\n    constructor(facilityController) {\n      this.facilityController = facilityController;\n    }\n    getFacilityByID(rootOrgID, facilityID) {\n      return __awaiter(this, void 0, void 0, function* () {\n        let facilityM;\n        let facility = new Facility();\n        try {\n          facilityM = yield this.facilityController.getFacilityByID(rootOrgID, facilityID).toPromise();\n          if (facilityM) {\n            return facilityM;\n          } else {\n            return facility;\n          }\n        } catch (error) {\n          console.error('Error -', error);\n          return facility;\n        }\n      });\n    }\n  }\n  FacilityService.ɵfac = function FacilityService_Factory(t) {\n    return new (t || FacilityService)(i0.ɵɵinject(FacilityController));\n  };\n  FacilityService.ɵprov = /* @__PURE__ */i0.ɵɵdefineInjectable({\n    token: FacilityService,\n    factory: FacilityService.ɵfac,\n    providedIn: 'root'\n  });\n  return FacilityService;\n})();\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && void 0;\n})();\n\n/*\n * Public API Surface of facility-service\n */\n\n/**\n * Generated bundle index. Do not edit.\n */\n\nexport { Facility, FacilityController, FacilityService, FacilityServiceComponent, FacilityServiceModule, FacilityServiceService };\n//# sourceMappingURL=library-facility-service.js.map","map":null,"metadata":{},"sourceType":"module"}