{"ast":null,"code":"import { __awaiter } from \"tslib\";\nimport { Product } from \"@netzero/model/product-service.model\";\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@carbon/controller/product.conroller\";\nexport let ProductService = /*#__PURE__*/(() => {\n  class ProductService {\n    constructor(productController) {\n      this.productController = productController;\n    }\n    getProductionRoute(orgID) {\n      return __awaiter(this, void 0, void 0, function* () {\n        let productM;\n        let product = [new Product()];\n        try {\n          productM = yield this.productController.getProductionRoute(orgID).toPromise();\n          if (productM) {\n            return productM;\n          } else {\n            return product;\n          }\n        } catch (error) {\n          console.error('Error -', error);\n          return product;\n        }\n      });\n    }\n  }\n  ProductService.ɵfac = function ProductService_Factory(t) {\n    return new (t || ProductService)(i0.ɵɵinject(i1.ProductController));\n  };\n  ProductService.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n    token: ProductService,\n    factory: ProductService.ɵfac,\n    providedIn: 'root'\n  });\n  return ProductService;\n})();","map":null,"metadata":{},"sourceType":"module"}