{"ast":null,"code":"import { __awaiter } from \"tslib\";\nimport { CalculationApproach } from \"@carbon/model/calculation-approach.model\";\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@carbon/controller/calculation-approach.controller\";\nexport let CalculationApproachService = /*#__PURE__*/(() => {\n  class CalculationApproachService {\n    constructor(calculationApproachController) {\n      this.calculationApproachController = calculationApproachController;\n    }\n    getCalculationApproachScope(scopeKeyID) {\n      return __awaiter(this, void 0, void 0, function* () {\n        let calculationApproachM;\n        try {\n          calculationApproachM = yield this.calculationApproachController.getCalculationApproachByScope(scopeKeyID).toPromise();\n          if (calculationApproachM) {\n            return calculationApproachM;\n          } else {\n            return [new CalculationApproach()];\n          }\n        } catch (error) {\n          console.error('Error -', error);\n          return [new CalculationApproach()];\n        }\n      });\n    }\n  }\n  CalculationApproachService.ɵfac = function CalculationApproachService_Factory(t) {\n    return new (t || CalculationApproachService)(i0.ɵɵinject(i1.CalculationApproachController));\n  };\n  CalculationApproachService.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n    token: CalculationApproachService,\n    factory: CalculationApproachService.ɵfac,\n    providedIn: 'root'\n  });\n  return CalculationApproachService;\n})();","map":null,"metadata":{},"sourceType":"module"}