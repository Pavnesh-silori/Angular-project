{"ast":null,"code":"import { ProcessEmissionActivityTypeKeyIDEnum } from '@carbon/enum/activity.enum';\n// tsc-library\nimport { COMMON_CONSTANT } from '@library/tsc-common';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/common\";\nimport * as i2 from \"@angular/material/card\";\nfunction ProcessEmissionActivityConfigViewComponent_ng_container_0_ng_container_4_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementContainer(0);\n  }\n}\nfunction ProcessEmissionActivityConfigViewComponent_ng_container_0_ng_container_5_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementContainer(0);\n  }\n}\nfunction ProcessEmissionActivityConfigViewComponent_ng_container_0_ng_container_6_ng_container_1_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementContainer(0);\n  }\n}\nfunction ProcessEmissionActivityConfigViewComponent_ng_container_0_ng_container_6_ng_container_2_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementContainer(0);\n  }\n}\nconst _c0 = function (a1) {\n  return {\n    label: \"Parameter\",\n    value: a1,\n    class: \"pt-3\"\n  };\n};\nconst _c1 = function (a1) {\n  return {\n    label: \"Technology\",\n    value: a1,\n    class: \"pt-3\"\n  };\n};\nfunction ProcessEmissionActivityConfigViewComponent_ng_container_0_ng_container_6_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementContainerStart(0);\n    i0.ɵɵtemplate(1, ProcessEmissionActivityConfigViewComponent_ng_container_0_ng_container_6_ng_container_1_Template, 1, 0, \"ng-container\", 4);\n    i0.ɵɵtemplate(2, ProcessEmissionActivityConfigViewComponent_ng_container_0_ng_container_6_ng_container_2_Template, 1, 0, \"ng-container\", 4);\n    i0.ɵɵelementContainerEnd();\n  }\n  if (rf & 2) {\n    const ctx_r5 = i0.ɵɵnextContext(2);\n    const _r1 = i0.ɵɵreference(2);\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngTemplateOutlet\", _r1)(\"ngTemplateOutletContext\", i0.ɵɵpureFunction1(4, _c0, ctx_r5.activityConfig.activityConfigData.parameter));\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngTemplateOutlet\", _r1)(\"ngTemplateOutletContext\", i0.ɵɵpureFunction1(6, _c1, ctx_r5.activityConfig.activityConfigData.technology));\n  }\n}\nconst _c2 = function (a1) {\n  return {\n    label: \"Name\",\n    value: a1,\n    class: \"pt-1\"\n  };\n};\nconst _c3 = function (a1) {\n  return {\n    label: \"Type\",\n    value: a1,\n    class: \"pt-3\"\n  };\n};\nfunction ProcessEmissionActivityConfigViewComponent_ng_container_0_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementContainerStart(0);\n    i0.ɵɵelementStart(1, \"mat-card\", 2);\n    i0.ɵɵelementStart(2, \"div\", 3);\n    i0.ɵɵtext(3, \" Process \");\n    i0.ɵɵelementEnd();\n    i0.ɵɵtemplate(4, ProcessEmissionActivityConfigViewComponent_ng_container_0_ng_container_4_Template, 1, 0, \"ng-container\", 4);\n    i0.ɵɵtemplate(5, ProcessEmissionActivityConfigViewComponent_ng_container_0_ng_container_5_Template, 1, 0, \"ng-container\", 4);\n    i0.ɵɵtemplate(6, ProcessEmissionActivityConfigViewComponent_ng_container_0_ng_container_6_Template, 3, 8, \"ng-container\", 0);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementContainerEnd();\n  }\n  if (rf & 2) {\n    const ctx_r0 = i0.ɵɵnextContext();\n    const _r1 = i0.ɵɵreference(2);\n    i0.ɵɵadvance(4);\n    i0.ɵɵproperty(\"ngTemplateOutlet\", _r1)(\"ngTemplateOutletContext\", i0.ɵɵpureFunction1(5, _c2, ctx_r0.activityConfig.activityConfigData.name));\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngTemplateOutlet\", _r1)(\"ngTemplateOutletContext\", i0.ɵɵpureFunction1(7, _c3, ctx_r0.getProcessTypeName(ctx_r0.activityConfig.activityConfigData.type)));\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngIf\", ctx_r0.activityConfig.activityConfigData.type == ctx_r0.ProcessEmissionActivityTypeKeyIDEnum.STANDARD);\n  }\n}\nfunction ProcessEmissionActivityConfigViewComponent_ng_template_1_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\", 5);\n    i0.ɵɵelementStart(1, \"div\", 6);\n    i0.ɵɵtext(2);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(3, \"div\", 7);\n    i0.ɵɵtext(4);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const label_r8 = ctx.label;\n    const value_r9 = ctx.value;\n    const class_r10 = ctx.class;\n    const valueClass_r11 = ctx.valueClass;\n    const ctx_r2 = i0.ɵɵnextContext();\n    i0.ɵɵclassMap(class_r10);\n    i0.ɵɵadvance(2);\n    i0.ɵɵtextInterpolate1(\" \", label_r8, \" \");\n    i0.ɵɵadvance(1);\n    i0.ɵɵclassMap(valueClass_r11);\n    i0.ɵɵadvance(1);\n    i0.ɵɵtextInterpolate1(\" \", value_r9 ? value_r9 : ctx_r2.COMMON_CONSTANT.HYPHEN, \" \");\n  }\n}\n// /tsc-library/\nexport let ProcessEmissionActivityConfigViewComponent = /*#__PURE__*/(() => {\n  class ProcessEmissionActivityConfigViewComponent {\n    constructor() {\n      this.ProcessEmissionActivityTypeKeyIDEnum = ProcessEmissionActivityTypeKeyIDEnum;\n      // activityConfig2: any = {\n      //     \"activityConfigData\": {\n      //         \"process\": {\n      //             \"type\": \"STANDARD\",\n      //             \"id\": 1,\n      //             \"name\": \"process name\",\n      //             \"ipccProcessParamTechMapID\": 3,\n      //             \"parameter\": {\n      //                 \"id\": 1,\n      //                 \"name\": \"Parameter\"\n      //             },\n      //             \"technology\": {\n      //                 \"id\": 1,\n      //                 \"name\": \"Technology\"\n      //             }\n      //         }\n      //     }\n      // };\n      // tsc-library\n      this.COMMON_CONSTANT = COMMON_CONSTANT;\n    }\n    // /tsc-library/\n    ngOnInit() {}\n    getProcessTypeName(processTypeKeyID) {\n      let name;\n      switch (processTypeKeyID) {\n        case ProcessEmissionActivityTypeKeyIDEnum.STANDARD:\n          name = 'Standard';\n          break;\n        case ProcessEmissionActivityTypeKeyIDEnum.CUSTOM:\n          name = 'Custom';\n          break;\n        default:\n          name = null;\n      }\n      return name;\n    }\n  }\n  ProcessEmissionActivityConfigViewComponent.ɵfac = function ProcessEmissionActivityConfigViewComponent_Factory(t) {\n    return new (t || ProcessEmissionActivityConfigViewComponent)();\n  };\n  ProcessEmissionActivityConfigViewComponent.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n    type: ProcessEmissionActivityConfigViewComponent,\n    selectors: [[\"app-process-emission-activity-config-view\"]],\n    decls: 3,\n    vars: 1,\n    consts: [[4, \"ngIf\"], [\"labelValue\", \"\"], [1, \"border\", \"cardOverwrite\"], [1, \"cardTitle\", \"pb-2\"], [4, \"ngTemplateOutlet\", \"ngTemplateOutletContext\"], [1, \"row\"], [1, \"col-sm-4\"], [1, \"col-sm-8\", \"fw-bold\"]],\n    template: function ProcessEmissionActivityConfigViewComponent_Template(rf, ctx) {\n      if (rf & 1) {\n        i0.ɵɵtemplate(0, ProcessEmissionActivityConfigViewComponent_ng_container_0_Template, 7, 9, \"ng-container\", 0);\n        i0.ɵɵtemplate(1, ProcessEmissionActivityConfigViewComponent_ng_template_1_Template, 5, 6, \"ng-template\", null, 1, i0.ɵɵtemplateRefExtractor);\n      }\n      if (rf & 2) {\n        i0.ɵɵproperty(\"ngIf\", ctx.activityConfig);\n      }\n    },\n    directives: [i1.NgIf, i2.MatCard, i1.NgTemplateOutlet],\n    encapsulation: 2\n  });\n  return ProcessEmissionActivityConfigViewComponent;\n})();","map":null,"metadata":{},"sourceType":"module"}