{"ast":null,"code":"import { HttpParams } from '@angular/common/http';\nimport { environment } from 'src/environments/environment';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/common/http\";\nexport let SbtiController = /*#__PURE__*/(() => {\n  class SbtiController {\n    constructor(http) {\n      this.http = http;\n    }\n    getTargetPageRecords(orgID, pageNo, pazeSize, sortBy, orderBy, search, status) {\n      let params = new HttpParams();\n      params = params.append('pageNo', pageNo);\n      params = params.append('pageSize', pazeSize);\n      params = params.append('sortBy', sortBy);\n      params = params.append('orderBy', orderBy);\n      params = params.append('status', status);\n      search.forEach(search => params = params.append('search', search));\n      return this.http.get(`${environment.CARBON_ACCOUNTING_API_URL}organizations/${orgID}/sbti-targets/page`, {\n        params: params\n      });\n    }\n    deleteTargetPageRecords(orgID, targetID) {\n      return this.http.delete(`${environment.CARBON_ACCOUNTING_API_URL}organizations/${orgID}/sbti-targets/${targetID}`);\n    }\n    updateTargetStatus(orgID, targetID, status) {\n      let params = new HttpParams();\n      params = params.append('status', status);\n      return this.http.patch(`${environment.CARBON_ACCOUNTING_API_URL}organizations/${orgID}/sbti-targets/${targetID}/status`, '', {\n        params: params\n      });\n    }\n    getSBTiTargetCompaniesList(pageNo, pageSize, sortBy, orderBy, search, filter) {\n      let params = new HttpParams();\n      params = params.append('pageNo', pageNo);\n      params = params.append('pageSize', pageSize);\n      params = params.append('sortBy', sortBy);\n      params = params.append('orderBy', orderBy);\n      search.forEach(search => params = params.append('search', search));\n      filter.forEach(filter => params = params.append('filter', filter));\n      return this.http.get(`${environment.CARBON_ACCOUNTING_API_URL}organizations/target/benchmark/page`, {\n        params: params\n      });\n    }\n    getTargetbranchmarkLocationList() {\n      return this.http.get(`${environment.CARBON_ACCOUNTING_API_URL}organizations/location`);\n    }\n    getTargetDashboardDetails(orgID, targetID) {\n      return this.http.get(`${environment.CARBON_ACCOUNTING_API_URL}organizations/${orgID}/target/${targetID}/dashboard`);\n    }\n    getSBTiZeroEmissionYears(orgID) {\n      return this.http.get(`${environment.CARBON_ACCOUNTING_API_URL}organizations/${orgID}/sbti/yearly-emission`);\n    }\n    getAllSbtiSector() {\n      return this.http.get(`${environment.CARBON_ACCOUNTING_API_URL}sbti/sectors`);\n    }\n    createSbtiSetting(orgID, data) {\n      return this.http.post(`${environment.CARBON_ACCOUNTING_API_URL}organizations/${orgID}/sbti/settings`, data);\n    }\n    getSbtiSettingsByOrgID(orgID) {\n      return this.http.get(`${environment.CARBON_ACCOUNTING_API_URL}organizations/${orgID}/sbti/settings`);\n    }\n    updateSbtiSetting(orgID, data, sbtiSettingID) {\n      return this.http.patch(`${environment.CARBON_ACCOUNTING_API_URL}organizations/${orgID}/sbti/settings/${sbtiSettingID}`, data);\n    }\n    isSBTITargetSet(orgID) {\n      return this.http.get(`${environment.CARBON_ACCOUNTING_API_URL}organizations/${orgID}/sbti-targets-info`);\n    }\n    isSBTiEnterpriseTargetSet(orgID) {\n      return this.http.get(`${environment.CARBON_ACCOUNTING_API_URL}organizations/${orgID}/sbti-targets-enterprise-info`);\n    }\n    createTarget(orgID, target) {\n      return this.http.post(`${environment.CARBON_ACCOUNTING_API_URL}organizations/${orgID}/sbti-targets`, target);\n    }\n    getTargetByID(orgID, targetID) {\n      return this.http.get(`${environment.CARBON_ACCOUNTING_API_URL}organizations/${orgID}/sbti-targets/${targetID}`);\n    }\n    updateTarget(orgID, targetID, target) {\n      return this.http.patch(`${environment.CARBON_ACCOUNTING_API_URL}organizations/${orgID}/sbti-targets/${targetID}`, target);\n    }\n    getIfAnyTargetExist(orgID) {\n      return this.http.get(`${environment.CARBON_ACCOUNTING_API_URL}organizations/${orgID}/sbti/targets-exist`);\n    }\n    getSettingEmissionDifference(orgID, formData) {\n      return this.http.post(`${environment.CARBON_ACCOUNTING_API_URL}organizations/${orgID}/sbti/targets`, formData);\n    }\n    getSbtiCriteriaCheckList(orgID) {\n      return this.http.get(`${environment.CARBON_ACCOUNTING_API_URL}organizations/${orgID}/sbti/criteria`);\n    }\n    getTargetCreatedActivityList(orgID, targetType) {\n      let params = new HttpParams();\n      params = params.append('targetType', targetType);\n      return this.http.get(`${environment.CARBON_ACCOUNTING_API_URL}organizations/${orgID}/sbti-targets-activity`, {\n        params: params\n      });\n    }\n  }\n  SbtiController.ɵfac = function SbtiController_Factory(t) {\n    return new (t || SbtiController)(i0.ɵɵinject(i1.HttpClient));\n  };\n  SbtiController.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n    token: SbtiController,\n    factory: SbtiController.ɵfac,\n    providedIn: 'root'\n  });\n  return SbtiController;\n})();","map":null,"metadata":{},"sourceType":"module"}