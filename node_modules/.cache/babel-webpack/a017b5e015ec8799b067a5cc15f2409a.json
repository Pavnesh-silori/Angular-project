{"ast":null,"code":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nvar operators_1 = require(\"rxjs/operators\");\nvar get_in_1 = require(\"../utils/get-in\");\nvar selectors_1 = require(\"./selectors\");\nvar fractal_reducer_map_1 = require(\"./fractal-reducer-map\");\n/** @hidden */\nvar SubStore = /** @class */function () {\n  function SubStore(rootStore, basePath, localReducer) {\n    var _this = this;\n    this.rootStore = rootStore;\n    this.basePath = basePath;\n    this.dispatch = function (action) {\n      return _this.rootStore.dispatch(Object.assign({}, action, {\n        '@angular-redux::fractalkey': JSON.stringify(_this.basePath)\n      }));\n    };\n    this.getState = function () {\n      return get_in_1.getIn(_this.rootStore.getState(), _this.basePath);\n    };\n    this.configureSubStore = function (basePath, localReducer) {\n      return new SubStore(_this.rootStore, _this.basePath.concat(basePath), localReducer);\n    };\n    this.select = function (selector, comparator) {\n      return _this.rootStore.select(_this.basePath).pipe(operators_1.map(selectors_1.resolveToFunctionSelector(selector)), operators_1.distinctUntilChanged(comparator));\n    };\n    this.subscribe = function (listener) {\n      var subscription = _this.select().subscribe(listener);\n      return function () {\n        return subscription.unsubscribe();\n      };\n    };\n    this.replaceReducer = function (nextLocalReducer) {\n      return fractal_reducer_map_1.replaceLocalReducer(_this.basePath, nextLocalReducer);\n    };\n    fractal_reducer_map_1.registerFractalReducer(basePath, localReducer);\n  }\n  return SubStore;\n}();\nexports.SubStore = SubStore;\n//# sourceMappingURL=sub-store.js.map","map":null,"metadata":{},"sourceType":"script"}