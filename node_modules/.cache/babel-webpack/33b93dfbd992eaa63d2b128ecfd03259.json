{"ast":null,"code":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nvar set_in_1 = require(\"../utils/set-in\");\nvar get_in_1 = require(\"../utils/get-in\");\nvar reducerMap = {};\nvar composeReducers = function () {\n  var reducers = [];\n  for (var _i = 0; _i < arguments.length; _i++) {\n    reducers[_i] = arguments[_i];\n  }\n  return function (state, action) {\n    return reducers.reduce(function (subState, reducer) {\n      return reducer(subState, action);\n    }, state);\n  };\n};\nvar ɵ0 = composeReducers;\nexports.ɵ0 = ɵ0;\n/**\n * @param rootReducer Call this on your root reducer to enable SubStore\n * functionality for pre-configured stores (e.g. using NgRedux.provideStore()).\n * NgRedux.configureStore\n * does it for you under the hood.\n */\nfunction enableFractalReducers(rootReducer) {\n  reducerMap = {};\n  return composeReducers(rootFractalReducer, rootReducer);\n}\nexports.enableFractalReducers = enableFractalReducers;\n/** @hidden */\nfunction registerFractalReducer(basePath, localReducer) {\n  var existingFractalReducer = reducerMap[JSON.stringify(basePath)];\n  if (existingFractalReducer && existingFractalReducer !== localReducer) {\n    throw new Error(\"attempt to overwrite fractal reducer for basePath \" + basePath);\n  }\n  reducerMap[JSON.stringify(basePath)] = localReducer;\n}\nexports.registerFractalReducer = registerFractalReducer;\n/** @hidden */\nfunction replaceLocalReducer(basePath, nextLocalReducer) {\n  reducerMap[JSON.stringify(basePath)] = nextLocalReducer;\n}\nexports.replaceLocalReducer = replaceLocalReducer;\nfunction rootFractalReducer(state, action) {\n  if (state === void 0) {\n    state = {};\n  }\n  var fractalKey = action['@angular-redux::fractalkey'];\n  var fractalPath = fractalKey ? JSON.parse(fractalKey) : [];\n  var localReducer = reducerMap[fractalKey || ''];\n  return fractalKey && localReducer ? set_in_1.setIn(state, fractalPath, localReducer(get_in_1.getIn(state, fractalPath), action)) : state;\n}\n//# sourceMappingURL=fractal-reducer-map.js.map","map":null,"metadata":{},"sourceType":"script"}