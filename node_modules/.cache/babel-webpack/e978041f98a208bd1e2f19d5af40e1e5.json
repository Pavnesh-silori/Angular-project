{"ast":null,"code":"import { HttpParams } from '@angular/common/http';\nimport { environment } from 'src/environments/environment';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/common/http\";\nexport let StandardEmissionFactorController = /*#__PURE__*/(() => {\n  class StandardEmissionFactorController {\n    constructor(http) {\n      this.http = http;\n    }\n    getDatabase(pageNo, pageSize, sortBy, orderBy) {\n      let params = new HttpParams();\n      params = params.append('pageNo', pageNo + 1);\n      params = params.append('pageSize', pageSize);\n      params = params.append('sortBy', sortBy);\n      params = params.append('orderBy', orderBy);\n      return this.http.get(`${environment.CARBON_ACCOUNTING_API_URL}emission-factor`, {\n        params: params\n      });\n    }\n    getVersion(orgID, databaseID, pageNo, pageSize, sortBy, orderBy) {\n      let params = new HttpParams();\n      params = params.append('pageNo', pageNo + 1);\n      params = params.append('pageSize', pageSize);\n      params = params.append('sortBy', sortBy);\n      params = params.append('orderBy', orderBy);\n      return this.http.get(`${environment.CARBON_ACCOUNTING_API_URL}organizations/${orgID}/emission-factor/${databaseID}/versions`, {\n        params: params\n      });\n    }\n    getActivity(orgID, databaseID, versionID, pageNo, pageSize, sortBy, orderBy) {\n      let params = new HttpParams();\n      params = params.append('pageNo', pageNo + 1);\n      params = params.append('pageSize', pageSize);\n      params = params.append('sortBy', sortBy);\n      params = params.append('orderBy', orderBy);\n      return this.http.get(`${environment.CARBON_ACCOUNTING_API_URL}organizations/100000415/emission-factor/${databaseID}/versions/${versionID}/activity`, {\n        params: params\n      });\n    }\n    getFactor(orgID, databaseID, versionID, activityKeyID, pageNo, pageSize, sortBy, orderBy, filter) {\n      let params = new HttpParams();\n      params = params.append('pageNo', pageNo + 1);\n      params = params.append('pageSize', pageSize);\n      params = params.append('sortBy', sortBy);\n      params = params.append('orderBy', orderBy);\n      if (filter) {\n        params = params.append('search', filter);\n      }\n      return this.http.get(`${environment.CARBON_ACCOUNTING_API_URL}organizations/${orgID}/emission-factor/${databaseID}/versions/${versionID}/activity/${activityKeyID}/factors`, {\n        params: params\n      });\n    }\n  }\n  StandardEmissionFactorController.ɵfac = function StandardEmissionFactorController_Factory(t) {\n    return new (t || StandardEmissionFactorController)(i0.ɵɵinject(i1.HttpClient));\n  };\n  StandardEmissionFactorController.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n    token: StandardEmissionFactorController,\n    factory: StandardEmissionFactorController.ɵfac,\n    providedIn: 'root'\n  });\n  return StandardEmissionFactorController;\n})();","map":null,"metadata":{},"sourceType":"module"}