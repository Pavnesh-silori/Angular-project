{"ast":null,"code":"import { ActivityKeyIDEnum } from '@carbon/enum/activity.enum';\nimport { CARBON_RECORD_VIEW } from '@carbon/constant/carbon-record-view.constant';\nimport * as i0 from \"@angular/core\";\nexport let ViewUtility = /*#__PURE__*/(() => {\n  class ViewUtility {\n    constructor() {}\n    haveValue(value) {\n      if (value != null && value >= 0) return true;\n      return false;\n    }\n    renderView(activityKeyID) {\n      if (activityKeyID == ActivityKeyIDEnum.PURCHASED_ELECTRICITY || activityKeyID == ActivityKeyIDEnum.PURCHASED_COOLING || activityKeyID == ActivityKeyIDEnum.PURCHASED_HEAT_STEAM) {\n        return CARBON_RECORD_VIEW.SCOPE_2_VIEW;\n      } else if (activityKeyID == CARBON_RECORD_VIEW.US_EEIO_KEY_ID || activityKeyID == ActivityKeyIDEnum.CAPITAL_GOODS || activityKeyID == ActivityKeyIDEnum.BUSINESS_TRAVEL || activityKeyID == ActivityKeyIDEnum.PURCHASED_GOODS_AND_SERVICES || activityKeyID == ActivityKeyIDEnum.UPSTREAM_TRANSPORTATION_AND_DISTRIBUTION || activityKeyID == ActivityKeyIDEnum.DOWNSTREAM_TRANSPORTATION_AND_DISTRIBUTION) {\n        return CARBON_RECORD_VIEW.SCOPE_3_SPEND_BASED_VIEW;\n      } else if (activityKeyID == ActivityKeyIDEnum.STATIONARY_COMBUSTION) {\n        return CARBON_RECORD_VIEW.STATIONARY_COMBUSTION_VIEW;\n      } else if (activityKeyID == ActivityKeyIDEnum.MOBILE_COMBUSTION) {\n        return CARBON_RECORD_VIEW.MOBILE_COMBUSTION_VIEW;\n      } else if (activityKeyID == ActivityKeyIDEnum.WASTE_GENERATED_IN_OPERATIONS) {\n        return CARBON_RECORD_VIEW.WASTE_GENERATED_IN_OPERATIONS_VIEW;\n      } else if (activityKeyID == CARBON_RECORD_VIEW.EMPLOYEE_COMMUTING) {\n        return CARBON_RECORD_VIEW.EMPLOYEE_COMMUTING;\n      } else if (activityKeyID == CARBON_RECORD_VIEW.OTHER_FUGUTIVE) {\n        return CARBON_RECORD_VIEW.OTHER_FUGUTIVE;\n      } else {\n        return null;\n      }\n    }\n  }\n  ViewUtility.ɵfac = function ViewUtility_Factory(t) {\n    return new (t || ViewUtility)();\n  };\n  ViewUtility.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n    token: ViewUtility,\n    factory: ViewUtility.ɵfac,\n    providedIn: 'root'\n  });\n  return ViewUtility;\n})();","map":null,"metadata":{},"sourceType":"module"}