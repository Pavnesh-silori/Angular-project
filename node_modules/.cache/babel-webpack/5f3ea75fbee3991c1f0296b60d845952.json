{"ast":null,"code":"import { __awaiter } from \"tslib\";\nimport { FormControl } from '@angular/forms';\nimport { faEllipsisV, faPlus } from '@fortawesome/free-solid-svg-icons';\nimport { Subject, fromEvent, merge, of as observableOf } from \"rxjs\";\nimport { catchError, map, startWith, switchMap, takeUntil } from \"rxjs/operators\";\nimport { MatSort } from '@angular/material/sort';\nimport { MatPaginator } from '@angular/material/paginator';\nimport * as moment from 'moment';\n// import { UpdateCategorizedRecordsComponent } from '@CarbonNetZero/component/import-records-emissions/update-categorized-records/update-categorized-records.component';\nimport { EmissionDataTypeEnum } from '@carbon/enum/emission-data-type.enum';\nimport { ButtonTooltipEnum, DialogEnum, FormAction, MATERIAL_CONSTANT } from '@library/tsc-common';\n// library //\nimport { DateFormatEnum } from '@library/date';\nimport { ButtonLabelEnum, COMMON_CONSTANT, TABLE_CONSTANT } from '@library/tsc-common';\n// / library //\nimport { ActivityConfigEnum } from '@carbon/enum/activity-config.enum';\nimport { ActivityKeyIDEnum } from '@carbon/enum/activity.enum';\nimport { ScopeKeyIDEnum } from '@carbon/enum/scope.enum';\nimport { ACTIVITY_FORM_TYPE_KEYID_ENUM } from '@carbon/enum/activity-form-enum';\nimport { FugitiveReleasesCreateUpdateDailog } from '@carbon/component/activity-data/ghg/scope-1/fugitive-emission/other-fugitive-sources/_shared/fugitive-release-create-update/fugitive-releases-create-update.component';\nimport { ActivitySelectionComponent } from '@carbon/component/activity-config/activity-selection/activity-selection.component';\n// import { ActivityConfigSelection } from '@carbon/component/activity-config/activity-config-selection/activity-config-selection';\nimport { ActivityConfigSelection } from '@carbon/component/activity-config/activity-config-selection-dialog/activity-config-selection.component';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/router\";\nimport * as i2 from \"@library/storage-service\";\nimport * as i3 from \"@angular/material/dialog\";\nimport * as i4 from \"@carbon/controller/scope.controller\";\nimport * as i5 from \"@carbon/controller/activity.controller\";\nimport * as i6 from \"@carbon/controller/data-collection-method.controller\";\nimport * as i7 from \"@carbon/controller/sustainability-accounting.controller\";\nimport * as i8 from \"@library/date\";\nimport * as i9 from \"@library/toastr-service\";\nimport * as i10 from \"@library/tsc-common\";\nimport * as i11 from \"@angular/material/core\";\nimport * as i12 from \"@angular/material/tooltip\";\nimport * as i13 from \"@ng-bootstrap/ng-bootstrap\";\nimport * as i14 from \"@fortawesome/angular-fontawesome\";\nimport * as i15 from \"../../_shared/filter/filter.component\";\nimport * as i16 from \"@angular/common\";\nimport * as i17 from \"@angular/material/chips\";\nimport * as i18 from \"@angular/material/table\";\nimport * as i19 from \"@angular/material/sort\";\nimport * as i20 from \"@angular/material/paginator\";\nimport * as i21 from \"@angular/material/icon\";\nimport * as i22 from \"@angular/material/button\";\nimport * as i23 from \"@angular/material/form-field\";\nimport * as i24 from \"@angular/material/select\";\nimport * as i25 from \"@angular/forms\";\nconst _c0 = [\"refreshBtn\"];\nconst _c1 = [\"activityBtn\"];\nconst _c2 = [\"recordTypeBtn\"];\nconst _c3 = [\"searchBar\"];\nconst _c4 = [\"activitySelect\"];\nconst _c5 = [\"scopeSelect\"];\nconst _c6 = [\"filterChild\"];\nconst _c7 = [\"carbonFilterChild\"];\nfunction CarbonComponent_mat_chip_35_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r32 = i0.ɵɵgetCurrentView();\n    i0.ɵɵelementStart(0, \"mat-chip\", 59);\n    i0.ɵɵlistener(\"removed\", function CarbonComponent_mat_chip_35_Template_mat_chip_removed_0_listener() {\n      const restoredCtx = i0.ɵɵrestoreView(_r32);\n      const chip_r30 = restoredCtx.$implicit;\n      const ctx_r31 = i0.ɵɵnextContext();\n      return ctx_r31.removeChip(chip_r30);\n    });\n    i0.ɵɵelementStart(1, \"span\", 60);\n    i0.ɵɵtext(2);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(3, \"button\", 61);\n    i0.ɵɵelementStart(4, \"mat-icon\");\n    i0.ɵɵtext(5, \"cancel\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const chip_r30 = ctx.$implicit;\n    i0.ɵɵadvance(2);\n    i0.ɵɵtextInterpolate(chip_r30[\"filter\"]);\n  }\n}\nfunction CarbonComponent_th_44_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"th\", 62);\n    i0.ɵɵtext(1, \" Record ID \");\n    i0.ɵɵelementEnd();\n  }\n}\nfunction CarbonComponent_td_45_ng_template_2_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵtext(0);\n  }\n  if (rf & 2) {\n    const row_r33 = i0.ɵɵnextContext().$implicit;\n    i0.ɵɵtextInterpolate1(\" \", row_r33[\"recordID\"], \" \");\n  }\n}\nfunction CarbonComponent_td_45_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"td\", 63);\n    i0.ɵɵtext(1);\n    i0.ɵɵtemplate(2, CarbonComponent_td_45_ng_template_2_Template, 1, 1, \"ng-template\", null, 64, i0.ɵɵtemplateRefExtractor);\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const row_r33 = ctx.$implicit;\n    const ctx_r8 = i0.ɵɵnextContext();\n    i0.ɵɵproperty(\"routerLink\", ctx_r8.routerLink(row_r33));\n    i0.ɵɵadvance(1);\n    i0.ɵɵtextInterpolate1(\" \", row_r33[\"recordID\"] ? row_r33[\"recordID\"] : ctx_r8.COMMON_CONSTANT.HYPHEN, \" \");\n  }\n}\nfunction CarbonComponent_th_47_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r39 = i0.ɵɵgetCurrentView();\n    i0.ɵɵelementStart(0, \"th\", 65);\n    i0.ɵɵelementStart(1, \"funnel-filter\", 66, 67);\n    i0.ɵɵlistener(\"mono\", function CarbonComponent_th_47_Template_funnel_filter_mono_1_listener() {\n      i0.ɵɵrestoreView(_r39);\n      const ctx_r38 = i0.ɵɵnextContext();\n      ctx_r38.scopeFlag = true;\n      return ctx_r38.scopeChange();\n    })(\"selected\", function CarbonComponent_th_47_Template_funnel_filter_selected_1_listener($event) {\n      i0.ɵɵrestoreView(_r39);\n      const ctx_r40 = i0.ɵɵnextContext();\n      return ctx_r40.toggleScopeChip($event);\n    });\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const ctx_r9 = i0.ɵɵnextContext();\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"entityList\", ctx_r9.scope)(\"selectFC\", ctx_r9.scopeFC)(\"active\", ctx_r9.scopeFlag);\n  }\n}\nfunction CarbonComponent_td_48_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"td\", 68);\n    i0.ɵɵtext(1);\n    i0.ɵɵpipe(2, \"dotdotdot\");\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const row_r41 = ctx.$implicit;\n    const ctx_r10 = i0.ɵɵnextContext();\n    i0.ɵɵproperty(\"routerLink\", ctx_r10.routerLink(row_r41))(\"matTooltip\", (row_r41[\"scopeName\"] == null ? null : row_r41[\"scopeName\"].length) > 13 ? row_r41[\"scopeName\"] : \"\");\n    i0.ɵɵadvance(1);\n    i0.ɵɵtextInterpolate1(\" \", i0.ɵɵpipeBind2(2, 3, row_r41[\"scopeName\"], 13), \" \");\n  }\n}\nfunction CarbonComponent_th_50_mat_option_14_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r47 = i0.ɵɵgetCurrentView();\n    i0.ɵɵelementStart(0, \"mat-option\", 84);\n    i0.ɵɵlistener(\"click\", function CarbonComponent_th_50_mat_option_14_Template_mat_option_click_0_listener() {\n      const restoredCtx = i0.ɵɵrestoreView(_r47);\n      const activities_r45 = restoredCtx.$implicit;\n      const ctx_r46 = i0.ɵɵnextContext(2);\n      return ctx_r46.selectActivity(activities_r45);\n    });\n    i0.ɵɵtext(1);\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const activities_r45 = ctx.$implicit;\n    i0.ɵɵproperty(\"value\", activities_r45[\"keyID\"]);\n    i0.ɵɵadvance(1);\n    i0.ɵɵtextInterpolate1(\" \", activities_r45.name, \" \");\n  }\n}\nconst _c8 = function (a0) {\n  return {\n    \"text-primary\": a0\n  };\n};\nconst _c9 = function (a0) {\n  return {\n    \"disableBtn\": a0\n  };\n};\nfunction CarbonComponent_th_50_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r49 = i0.ɵɵgetCurrentView();\n    i0.ɵɵelementStart(0, \"th\", 69);\n    i0.ɵɵelementStart(1, \"div\", 70);\n    i0.ɵɵelementStart(2, \"div\", 71);\n    i0.ɵɵtext(3, \" Activity type \");\n    i0.ɵɵelementStart(4, \"button\", 72);\n    i0.ɵɵlistener(\"click\", function CarbonComponent_th_50_Template_button_click_4_listener() {\n      i0.ɵɵrestoreView(_r49);\n      const _r42 = i0.ɵɵreference(10);\n      return _r42.open();\n    });\n    i0.ɵɵelementStart(5, \"span\", 73);\n    i0.ɵɵtext(6, \" filter_alt \");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(7, \"div\", 74);\n    i0.ɵɵelementStart(8, \"mat-form-field\");\n    i0.ɵɵelementStart(9, \"mat-select\", 75, 76);\n    i0.ɵɵlistener(\"openedChange\", function CarbonComponent_th_50_Template_mat_select_openedChange_9_listener($event) {\n      i0.ɵɵrestoreView(_r49);\n      const ctx_r50 = i0.ɵɵnextContext();\n      return ctx_r50.resetOnNoChange($event);\n    });\n    i0.ɵɵelement(11, \"mat-select-trigger\", 77);\n    i0.ɵɵelementStart(12, \"mat-option\", 78);\n    i0.ɵɵlistener(\"click\", function CarbonComponent_th_50_Template_mat_option_click_12_listener() {\n      i0.ɵɵrestoreView(_r49);\n      const ctx_r51 = i0.ɵɵnextContext();\n      return ctx_r51.selectAllActivities();\n    });\n    i0.ɵɵtext(13, \" All activity types \");\n    i0.ɵɵelementEnd();\n    i0.ɵɵtemplate(14, CarbonComponent_th_50_mat_option_14_Template, 2, 2, \"mat-option\", 79);\n    i0.ɵɵelementStart(15, \"div\", 80);\n    i0.ɵɵelementStart(16, \"div\", 81);\n    i0.ɵɵelementStart(17, \"button\", 82, 83);\n    i0.ɵɵlistener(\"click\", function CarbonComponent_th_50_Template_button_click_17_listener() {\n      i0.ɵɵrestoreView(_r49);\n      const ctx_r52 = i0.ɵɵnextContext();\n      return ctx_r52.onApplyFilterClick();\n    });\n    i0.ɵɵtext(19, \" Apply \");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const ctx_r11 = i0.ɵɵnextContext();\n    i0.ɵɵadvance(5);\n    i0.ɵɵproperty(\"ngClass\", i0.ɵɵpureFunction1(5, _c8, ctx_r11.activityFlag));\n    i0.ɵɵadvance(4);\n    i0.ɵɵproperty(\"formControl\", ctx_r11.activityFC);\n    i0.ɵɵadvance(5);\n    i0.ɵɵproperty(\"ngForOf\", ctx_r11.activity);\n    i0.ɵɵadvance(3);\n    i0.ɵɵproperty(\"ngClass\", i0.ɵɵpureFunction1(7, _c9, ctx_r11.activityFC.value.length == 0))(\"matRippleCentered\", ctx_r11.MATERIAL_CONSTANT.matRippleCentered);\n  }\n}\nfunction CarbonComponent_td_51_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"td\", 85);\n    i0.ɵɵtext(1);\n    i0.ɵɵpipe(2, \"dotdotdot\");\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const row_r53 = ctx.$implicit;\n    const ctx_r12 = i0.ɵɵnextContext();\n    i0.ɵɵproperty(\"routerLink\", ctx_r12.routerLink(row_r53))(\"matTooltip\", (row_r53[\"activityName\"] == null ? null : row_r53[\"activityName\"].length) > 17 ? row_r53[\"activityName\"] : \"\");\n    i0.ɵɵadvance(1);\n    i0.ɵɵtextInterpolate1(\" \", i0.ɵɵpipeBind2(2, 3, row_r53 == null ? null : row_r53.activityName, 17), \" \");\n  }\n}\nfunction CarbonComponent_th_53_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"th\", 86);\n    i0.ɵɵtext(1, \" Source \");\n    i0.ɵɵelementEnd();\n  }\n}\nfunction CarbonComponent_td_54_span_1_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"span\", 89);\n    i0.ɵɵtext(1);\n    i0.ɵɵpipe(2, \"dotdotdot\");\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const row_r54 = i0.ɵɵnextContext().$implicit;\n    i0.ɵɵproperty(\"matTooltip\", (row_r54[\"sourceName\"] == null ? null : row_r54[\"sourceName\"].length) > 25 ? row_r54[\"sourceName\"] : \"\");\n    i0.ɵɵadvance(1);\n    i0.ɵɵtextInterpolate1(\" \", i0.ɵɵpipeBind2(2, 2, row_r54[\"sourceName\"], 25), \" \");\n  }\n}\nconst _c10 = function (a0) {\n  return {\n    \"ps-5\": a0\n  };\n};\nfunction CarbonComponent_td_54_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"td\", 87);\n    i0.ɵɵtemplate(1, CarbonComponent_td_54_span_1_Template, 3, 5, \"span\", 88);\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const row_r54 = ctx.$implicit;\n    const ctx_r14 = i0.ɵɵnextContext();\n    const _r15 = i0.ɵɵreference(56);\n    i0.ɵɵproperty(\"ngClass\", i0.ɵɵpureFunction1(4, _c10, !(row_r54[\"sourceName\"] == null ? null : row_r54[\"sourceName\"].length)))(\"routerLink\", ctx_r14.routerLink(row_r54));\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngIf\", row_r54[\"sourceName\"] == null ? null : row_r54[\"sourceName\"].length)(\"ngIfElse\", _r15);\n  }\n}\nfunction CarbonComponent_ng_template_55_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵtext(0);\n  }\n  if (rf & 2) {\n    const ctx_r16 = i0.ɵɵnextContext();\n    i0.ɵɵtextInterpolate1(\" \", ctx_r16.COMMON_CONSTANT.HYPHEN, \" \");\n  }\n}\nfunction CarbonComponent_th_58_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"th\", 90);\n    i0.ɵɵtext(1, \" Accounting period\\u00A0 \");\n    i0.ɵɵelementEnd();\n  }\n}\nfunction CarbonComponent_td_59_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"td\", 91);\n    i0.ɵɵtext(1);\n    i0.ɵɵpipe(2, \"date\");\n    i0.ɵɵpipe(3, \"date\");\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const record_r57 = ctx.$implicit;\n    const ctx_r18 = i0.ɵɵnextContext();\n    i0.ɵɵproperty(\"routerLink\", ctx_r18.routerLink(record_r57));\n    i0.ɵɵadvance(1);\n    i0.ɵɵtextInterpolate2(\" \", i0.ɵɵpipeBind2(2, 3, record_r57[\"startDate\"], \"dd-MMM-yyyy\"), \"\", record_r57[\"startDate\"] == record_r57[\"endDate\"] ? \"\" : \" - \" + i0.ɵɵpipeBind2(3, 6, record_r57[\"endDate\"], \"dd-MMM-yyyy\"), \" \");\n  }\n}\nfunction CarbonComponent_th_61_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"th\", 92);\n    i0.ɵɵtext(1, \" Emissions \");\n    i0.ɵɵelementStart(2, \"span\", 93);\n    i0.ɵɵtext(3, \"(tCO\");\n    i0.ɵɵelementStart(4, \"sub\");\n    i0.ɵɵtext(5, \"2\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵtext(6, \"e)\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementEnd();\n  }\n}\nfunction CarbonComponent_td_62_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"td\", 94);\n    i0.ɵɵtext(1);\n    i0.ɵɵpipe(2, \"number\");\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const record_r58 = ctx.$implicit;\n    const ctx_r20 = i0.ɵɵnextContext();\n    i0.ɵɵproperty(\"matTooltip\", record_r58[\"emission\"])(\"routerLink\", ctx_r20.routerLink(record_r58));\n    i0.ɵɵadvance(1);\n    i0.ɵɵtextInterpolate1(\" \", i0.ɵɵpipeBind2(2, 3, record_r58[\"emission\"], \"1.2-2\"), \" \");\n  }\n}\nfunction CarbonComponent_th_64_mat_option_15_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r64 = i0.ɵɵgetCurrentView();\n    i0.ɵɵelementStart(0, \"mat-option\", 84);\n    i0.ɵɵlistener(\"click\", function CarbonComponent_th_64_mat_option_15_Template_mat_option_click_0_listener() {\n      const restoredCtx = i0.ɵɵrestoreView(_r64);\n      const dcms_r62 = restoredCtx.$implicit;\n      const ctx_r63 = i0.ɵɵnextContext(2);\n      return ctx_r63.selectRecordType(dcms_r62);\n    });\n    i0.ɵɵtext(1);\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const dcms_r62 = ctx.$implicit;\n    i0.ɵɵproperty(\"value\", dcms_r62[\"dataCollectionMethodID\"]);\n    i0.ɵɵadvance(1);\n    i0.ɵɵtextInterpolate1(\" \", dcms_r62.dataCollectionMethodName, \" \");\n  }\n}\nfunction CarbonComponent_th_64_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r66 = i0.ɵɵgetCurrentView();\n    i0.ɵɵelementStart(0, \"th\", 95);\n    i0.ɵɵelementStart(1, \"div\", 70);\n    i0.ɵɵelementStart(2, \"div\", 96);\n    i0.ɵɵtext(3, \" Data source \");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(4, \"div\", 97);\n    i0.ɵɵelementStart(5, \"button\", 72);\n    i0.ɵɵlistener(\"click\", function CarbonComponent_th_64_Template_button_click_5_listener() {\n      i0.ɵɵrestoreView(_r66);\n      const _r59 = i0.ɵɵreference(11);\n      return _r59.open();\n    });\n    i0.ɵɵelementStart(6, \"span\", 73);\n    i0.ɵɵtext(7, \" filter_alt \");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(8, \"div\", 74);\n    i0.ɵɵelementStart(9, \"mat-form-field\");\n    i0.ɵɵelementStart(10, \"mat-select\", 75, 98);\n    i0.ɵɵlistener(\"openedChange\", function CarbonComponent_th_64_Template_mat_select_openedChange_10_listener($event) {\n      i0.ɵɵrestoreView(_r66);\n      const ctx_r67 = i0.ɵɵnextContext();\n      return ctx_r67.reset_recordTypeOnNoChange($event);\n    });\n    i0.ɵɵelement(12, \"mat-select-trigger\", 77);\n    i0.ɵɵelementStart(13, \"mat-option\", 78);\n    i0.ɵɵlistener(\"click\", function CarbonComponent_th_64_Template_mat_option_click_13_listener() {\n      i0.ɵɵrestoreView(_r66);\n      const ctx_r68 = i0.ɵɵnextContext();\n      return ctx_r68.selectAllRecordTypes();\n    });\n    i0.ɵɵtext(14, \" All sources \");\n    i0.ɵɵelementEnd();\n    i0.ɵɵtemplate(15, CarbonComponent_th_64_mat_option_15_Template, 2, 2, \"mat-option\", 79);\n    i0.ɵɵelementStart(16, \"button\", 99, 100);\n    i0.ɵɵlistener(\"click\", function CarbonComponent_th_64_Template_button_click_16_listener() {\n      i0.ɵɵrestoreView(_r66);\n      const _r59 = i0.ɵɵreference(11);\n      const ctx_r69 = i0.ɵɵnextContext();\n      ctx_r69.recordTypeFlag = true;\n      ctx_r69.applyRecordTypeFilter();\n      return _r59.close();\n    });\n    i0.ɵɵtext(18, \" Apply \");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const ctx_r21 = i0.ɵɵnextContext();\n    i0.ɵɵadvance(6);\n    i0.ɵɵproperty(\"ngClass\", i0.ɵɵpureFunction1(4, _c8, ctx_r21.recordTypeFlag));\n    i0.ɵɵadvance(4);\n    i0.ɵɵproperty(\"formControl\", ctx_r21.recordTypeFC);\n    i0.ɵɵadvance(5);\n    i0.ɵɵproperty(\"ngForOf\", ctx_r21.dcm);\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"matRippleCentered\", ctx_r21.MATERIAL_CONSTANT.MAT_RIPPLE_CENTER);\n  }\n}\nfunction CarbonComponent_td_65_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"td\", 63);\n    i0.ɵɵtext(1);\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const row_r70 = ctx.$implicit;\n    const ctx_r22 = i0.ɵɵnextContext();\n    i0.ɵɵproperty(\"routerLink\", ctx_r22.routerLink(row_r70));\n    i0.ɵɵadvance(1);\n    i0.ɵɵtextInterpolate1(\" \", row_r70[\"dataCollectionMethodName\"], \" \");\n  }\n}\nfunction CarbonComponent_th_67_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelement(0, \"th\", 69);\n  }\n}\nfunction CarbonComponent_td_68_ng_container_2_ng_container_1_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementContainer(0);\n  }\n}\nconst _c11 = function (a0) {\n  return [a0];\n};\nconst _c12 = function (a1, a3, a4) {\n  return {\n    icon: \"edit\",\n    tooltip: a1,\n    class: \"text-primary updateIconHover\",\n    function: a3,\n    functionParameter: a4\n  };\n};\nfunction CarbonComponent_td_68_ng_container_2_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementContainerStart(0);\n    i0.ɵɵtemplate(1, CarbonComponent_td_68_ng_container_2_ng_container_1_Template, 1, 0, \"ng-container\", 104);\n    i0.ɵɵelementContainerEnd();\n  }\n  if (rf & 2) {\n    const row_r71 = i0.ɵɵnextContext().$implicit;\n    const ctx_r72 = i0.ɵɵnextContext();\n    const _r28 = i0.ɵɵreference(74);\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngTemplateOutlet\", _r28)(\"ngTemplateOutletContext\", i0.ɵɵpureFunction3(4, _c12, ctx_r72.ButtonTooltipEnum.UPDATE, ctx_r72.routeToADUpdate, i0.ɵɵpureFunction1(2, _c11, row_r71)));\n  }\n}\nfunction CarbonComponent_td_68_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"td\", 101);\n    i0.ɵɵelementStart(1, \"div\", 102);\n    i0.ɵɵtemplate(2, CarbonComponent_td_68_ng_container_2_Template, 2, 8, \"ng-container\", 103);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const row_r71 = ctx.$implicit;\n    const ctx_r24 = i0.ɵɵnextContext();\n    i0.ɵɵadvance(2);\n    i0.ɵɵproperty(\"ngIf\", ctx_r24.optionVisibility(row_r71));\n  }\n}\nfunction CarbonComponent_tr_69_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelement(0, \"tr\", 105);\n  }\n}\nfunction CarbonComponent_tr_70_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelement(0, \"tr\", 106);\n  }\n}\nfunction CarbonComponent_tr_71_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"tr\", 107);\n    i0.ɵɵelementStart(1, \"td\", 108);\n    i0.ɵɵtext(2);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const ctx_r27 = i0.ɵɵnextContext();\n    i0.ɵɵadvance(1);\n    i0.ɵɵattribute(\"colspan\", ctx_r27.displayedColumns == null ? null : ctx_r27.displayedColumns.length);\n    i0.ɵɵadvance(1);\n    i0.ɵɵtextInterpolate1(\" \", ctx_r27.TABLE_CONSTANT.TABLE_NO_DATA, \" \");\n  }\n}\nfunction CarbonComponent_ng_template_73_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r82 = i0.ɵɵgetCurrentView();\n    i0.ɵɵelementStart(0, \"button\", 109);\n    i0.ɵɵlistener(\"click\", function CarbonComponent_ng_template_73_Template_button_click_0_listener() {\n      const restoredCtx = i0.ɵɵrestoreView(_r82);\n      const function_r79 = restoredCtx.function;\n      const functionParameter_r80 = restoredCtx.functionParameter;\n      const ctx_r81 = i0.ɵɵnextContext();\n      return ctx_r81.handleClick(function_r79, functionParameter_r80);\n    });\n    i0.ɵɵelementStart(1, \"span\", 110);\n    i0.ɵɵtext(2);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const icon_r76 = ctx.icon;\n    const tooltip_r77 = ctx.tooltip;\n    const class_r78 = ctx.class;\n    const ctx_r29 = i0.ɵɵnextContext();\n    i0.ɵɵclassMap(class_r78);\n    i0.ɵɵproperty(\"matTooltip\", tooltip_r77)(\"matRippleCentered\", ctx_r29.MATERIAL_CONSTANT.MAT_RIPPLE_CENTER);\n    i0.ɵɵadvance(2);\n    i0.ɵɵtextInterpolate1(\" \", icon_r76, \" \");\n  }\n}\nconst _c13 = function () {\n  return [\"/activity-data/spend-based-method/import-create\"];\n};\nconst _c14 = function (a0) {\n  return {\n    \"d-none\": a0\n  };\n};\nexport let CarbonComponent = /*#__PURE__*/(() => {\n  class CarbonComponent {\n    constructor(activatedRoute, storageService, router, dialog, scopeController, activityController, dataCollectionMethodController, sustainabilityAccountingController, dateService, toastrService) {\n      this.storageService = storageService;\n      this.router = router;\n      this.dialog = dialog;\n      this.scopeController = scopeController;\n      this.activityController = activityController;\n      this.dataCollectionMethodController = dataCollectionMethodController;\n      this.sustainabilityAccountingController = sustainabilityAccountingController;\n      this.dateService = dateService;\n      this.toastrService = toastrService;\n      this.TABLE_CONSTANT = TABLE_CONSTANT;\n      this.COMMON_CONSTANT = COMMON_CONSTANT;\n      this.MATERIAL_CONSTANT = MATERIAL_CONSTANT;\n      this.FormAction = FormAction;\n      this.ButtonLabelEnum = ButtonLabelEnum;\n      this.ButtonTooltipEnum = ButtonTooltipEnum;\n      this.faPlus = faPlus;\n      this.faEllipsisV = faEllipsisV;\n      this.title = 'Carbon Ledger';\n      this.taskCount = [];\n      this.dataSource = [];\n      this.resultLength = 0;\n      this.displayedColumns = ['recordID', 'scope', 'activity', 'source', 'startDate', 'emission', 'recordType', 'option'];\n      this.scope = [];\n      this.activity = [];\n      this.all_activity_keyID = [];\n      this.selected_activities = [];\n      this.scope_1_activities = [];\n      this.scope_1_acitivities_keyIDs = ['all'];\n      this.scope_2_activities = [];\n      this.scope_2_acitivities_keyIDs = ['all'];\n      this.scope_3_activities = [];\n      this.scope_3_acitivities_keyIDs = ['all'];\n      this.searchFlag = false;\n      this.searchValue = '';\n      this.filterArr = [];\n      this.durationPeriodFC = new FormControl();\n      this.isChecked = false;\n      this.scopeFlag = false;\n      this.scopeFC = new FormControl('all');\n      this.activityFlag = false;\n      this.activityFC = new FormControl([]);\n      this.dcm = []; /* data_collection_method */\n      this.recordTypeFlag = false;\n      this.totalDcms = this.dcm.length;\n      this.all_dcm_key_ids = [];\n      this.recordTypeFilterApplied = false;\n      this.selected_dcms = [];\n      this.recordTypeFC = new FormControl(['all']);\n      this.chips = [];\n      this.have_saved_filters = false;\n      this.hasDateFilter = false;\n      this.retained_frequency = 'DEFAULT';\n      this.retained_duration = '';\n      this.hasStartDate = false;\n      this.retained_startDate = '';\n      this.retained_endDate = '';\n      this.activityFilterApplied = false;\n      this.have_query_filters = false;\n      this.retained_include_subsidiary = false;\n      this.retained_consolidation_approach = null;\n      this.have_retained_consolidation_approach = false;\n      this.end_subscription = new Subject();\n      this.routeToADUpdate = record => {\n        // if (record.scopeKeyID == ScopeKeyIDEnum.SCOPE_3_KEY_ID && record.activityKeyID != ActivityKeyIDEnum.WASTE_GENERATED_IN_OPERATIONS) {\n        //     let dialogRef;\n        // dialogRef = this.dialog.open(UpdateCategorizedRecordsComponent, {\n        //     data: {\n        //         currentOrgID: this.currentOrgID,\n        //         activityDataID: record['activityDataID']\n        //     },\n        //     minWidth: '600px',\n        //     maxWidth: '600px',\n        //     height: '100%',\n        //     position: { right: '-2px', top: '0px' },\n        // });\n        // dialogRef.afterClosed().subscribe((closeRes) => {\n        //     if (closeRes == 'Success') {\n        //         this.refreshBtn.nativeElement.click();\n        //     }\n        // })\n        // } \n        if (record.activityKeyID == ActivityKeyIDEnum.OTHER_FUGITIVE_EMISSION) {\n          let dialogRef;\n          dialogRef = this.dialog.open(FugitiveReleasesCreateUpdateDailog, {\n            data: {\n              currentOrgID: this.currentOrgID,\n              action: FormAction.UPDATE,\n              activityDataID: record.recordID\n            },\n            minWidth: '600px',\n            maxWidth: '600px',\n            height: '100%',\n            position: {\n              right: '-2px',\n              top: '0px'\n            }\n          });\n          dialogRef.afterClosed().subscribe(closeRes => {\n            if (closeRes == DialogEnum.SUCCESS_DR) {\n              this.refreshBtn.nativeElement.click();\n            }\n          });\n        } else {\n          this.router.navigate([`/activity-data/${record['activityDataID']}/activity/${record['activityKeyID']}`, {\n            outlets: {\n              activityConfig: ['update'],\n              activityData: ['update']\n            }\n          }], {\n            queryParams: {\n              activityID: record['activityID'],\n              activityDataID: record['activityDataID'],\n              activityKeyID: record['activityKeyID'],\n              action: 'update',\n              from: 'record'\n            }\n          });\n        }\n      };\n      this.currentOrgID = storageService.getStorage(['currentOrgID']);\n      let q_params = activatedRoute.snapshot.queryParams;\n      this.have_query_filters = Boolean(q_params['haveFilters']);\n      this.retained_filters = q_params;\n    }\n    ngOnInit() {\n      this.getScopeList();\n      this.getDataCollectionMethodList();\n    }\n    getDataCollectionMethodList() {\n      this.dataCollectionMethodController.getDataCollectionMethodList().subscribe(dcmRes => {\n        this.dcm = dcmRes;\n        this.totalDcms = this.dcm.length;\n        this.all_dcm_key_ids.unshift('all');\n        this.dcm.map(dcm => {\n          this.all_dcm_key_ids.push(dcm['dataCollectionMethodID']);\n        });\n        this.selected_dcms = this.dcm.map(dcm => dcm);\n        if (!this.recordTypeFlag) this.selectAllRecordTypes();else {\n          this.selected_dcms = this.dcm.filter(dcm => dcm.dataCollectionMethodID == this.recordTypeFC.value[0]);\n          this.applyRecordTypeFilter();\n        }\n      }, error => {\n        console.log('error in getDataCollectionMethodList() -', error);\n        this.toastrService.openToast('Error', 'Error while fetching data collection methods', 'error');\n      });\n    }\n    getScopeList() {\n      this.scopeController.getScopeList().subscribe(scopeRes => {\n        this.scope = scopeRes;\n        /* added all-scope object to scope_array */\n        this.scope.unshift({\n          scopeID: 'all',\n          keyID: 'all',\n          name: 'All scope'\n        });\n        let scope1ID = this.scope.find(scope => scope['keyID'] == ScopeKeyIDEnum.SCOPE_1_KEY_ID)['id'];\n        let scope2ID = this.scope.find(scope => scope['keyID'] == ScopeKeyIDEnum.SCOPE_2_KEY_ID)['id'];\n        let scope3ID = this.scope.find(scope => scope['keyID'] == ScopeKeyIDEnum.SCOPE_3_KEY_ID)['id'];\n        this.getActivities(scope1ID, scope2ID, scope3ID);\n      }, error => {\n        console.log('error in getScopeList() -', error);\n        this.toastrService.openToast('Error', 'Error while fetching scopes', 'error');\n      });\n    }\n    getActivities(scope1ID, scope2ID, scope3ID) {\n      return __awaiter(this, void 0, void 0, function* () {\n        this.scope_1_activities = yield this.getActivityListByScopeID(scope1ID);\n        this.scope_1_activities.forEach(activity => this.scope_1_acitivities_keyIDs.push(activity['keyID']));\n        this.scope_2_activities = yield this.getActivityListByScopeID(scope2ID);\n        this.scope_2_activities.forEach(activity => this.scope_2_acitivities_keyIDs.push(activity['keyID']));\n        this.scope_3_activities = yield this.getActivityListByScopeID(scope3ID);\n        this.scope_3_activities.forEach(activity => this.scope_3_acitivities_keyIDs.push(activity['keyID']));\n        /* getting all_activities */\n        this.getAllActivity();\n      });\n    }\n    getAllActivity() {\n      this.activityController.getAllActivity().subscribe(activityRes => {\n        this.activity = activityRes;\n        this.all_activities = this.activity;\n        this.totalActivities = this.activity.length;\n        this.all_activity_keyID = this.activity.map(activity => activity['keyID']);\n        this.all_activity_keyID.unshift('all');\n        /* to use retained filters */\n        if (this.activityFlag) {\n          this.selected_activities = [];\n          this.retained_activities.forEach(activity => {\n            let _activity = this.all_activities.find(activities => activities['keyID'] == activity);\n            this.selectActivity(_activity);\n          });\n          this.applyActivityFilter();\n          this.setActivityAccToScope();\n        } else {\n          this.selected_activities = this.activity.map(activity => activity);\n          this.selectAllActivities();\n        }\n      }, error => {\n        console.log('error in getAllActivity -', error);\n        this.toastrService.openToast('Error', 'Error while fetching activities', 'error');\n      });\n    }\n    getActivityListByScopeID(scopeID) {\n      return __awaiter(this, void 0, void 0, function* () {\n        return new Promise(resolve => {\n          let activityList = [];\n          this.activityController.getActivityListByScopeID(scopeID).subscribe(activityRes => {\n            activityList = activityRes;\n          }, error => {\n            console.log('error in getDataFormListByScope -', error);\n            this.toastrService.openToast('Error', 'Error while fetching activities', 'error');\n          }).add(() => resolve(activityList));\n        });\n      });\n    }\n    formatDate(date, control) {\n      let formatted = moment(date).format(\"YYYY-MM-DD\");\n      control.patchValue(formatted);\n    }\n    resetOnNoChange(event) {\n      if (event) {\n        this.prev = this.activityFC.value;\n        this.activityFilterApplied = false;\n      } else {\n        if (this.prev != this.activityFC.value && !this.activityFilterApplied) {\n          this.activityFC.patchValue(this.prev, {\n            onlySelf: true\n          });\n        }\n      }\n    }\n    ngAfterViewInit() {\n      this.getRetainedFilters();\n      if (this.hasDateFilter) {\n        this.filterChild.frequencyFC.patchValue(this.retained_frequency);\n        this.filterChild.startDateFC.patchValue(this.retained_startDate);\n        this.filterChild.endDateFC.patchValue(this.retained_endDate);\n        this.filterChild.durationFC.patchValue(this.retained_duration);\n        this.filterChild.daterange.patchValue({\n          startDate: moment(this.retained_startDate),\n          endDate: moment(this.retained_endDate)\n        });\n      }\n      if (this.retained_consolidation_approach != null) {\n        this.carbonFilterChild.consolidationApproachFC.patchValue(this.retained_consolidation_approach);\n      }\n      if (this.retained_include_subsidiary) {\n        this.carbonFilterChild.subsidiaryFC.patchValue(this.retained_include_subsidiary, {\n          emitEvent: false\n        });\n      }\n      merge(this.filterChild.emitFilter, this.carbonFilterChild.emitFilter).pipe(takeUntil(this.end_subscription)).subscribe(() => this.checkAllFilters());\n    }\n    getRetainedFilters() {\n      let have_filters = JSON.parse(this.storageService.getStorage('filters')) != null;\n      if (have_filters) {\n        let retained_storage_filters = JSON.parse(this.storageService.getStorage('filters'))['sustainability_accounting'];\n        if (!this.have_query_filters && retained_storage_filters != null) {\n          this.have_saved_filters = true;\n          this.retained_filters = retained_storage_filters;\n        }\n      }\n      if (this.have_query_filters || this.have_saved_filters) {\n        for (let key in this.retained_filters) {\n          let value = this.retained_filters[key];\n          if (key == 'activity') {\n            if (this.retained_filters['activity'] instanceof Array) {\n              value = this.retained_filters['activity'];\n            } else {\n              value = [this.retained_filters['activity']];\n            }\n          }\n          this.setRetainedFilters(key, value);\n        }\n      }\n    }\n    setRetainedFilters(filter, value) {\n      switch (filter) {\n        case 'search':\n          this.searchFlag = true;\n          this.searchValue = value;\n          this.filterArr.push(`${filter}:${value}`);\n          break;\n        case 'scope':\n          this.scopeFlag = true;\n          this.scopeFC.patchValue(value);\n          this.filterArr.push(`${filter}:${value}`);\n          let scope;\n          if (value == ScopeKeyIDEnum.SCOPE_1_KEY_ID) {\n            scope = {\n              name: \"Scope 1\",\n              keyID: 'SCOPE1'\n            };\n          } else if (value == ScopeKeyIDEnum.SCOPE_2_KEY_ID) {\n            scope = {\n              name: \"Scope 2\",\n              keyID: 'SCOPE2'\n            };\n          } else if (value == ScopeKeyIDEnum.SCOPE_3_KEY_ID) {\n            scope = {\n              name: \"Scope 3\",\n              keyID: 'SCOPE3'\n            };\n          } else {\n            scope = {\n              name: \"Scope 3\",\n              keyID: 'SCOPE3'\n            };\n          }\n          this.toggleScopeChip(scope);\n          break;\n        case 'activity':\n          this.activityFlag = true;\n          this.retained_activities = value;\n          this.activityFC.patchValue(this.retained_activities);\n          this.filterArr.push(`${filter}:${value}`);\n          break;\n        case 'frequency':\n          this.hasDateFilter = true;\n          this.retained_frequency = value;\n          break;\n        case 'startDate':\n          this.hasStartDate = true;\n          this.retained_startDate = value;\n          break;\n        case 'endDate':\n          this.retained_endDate = value;\n          break;\n        case 'duration':\n          this.retained_duration = value;\n          break;\n        case 'dataSource':\n          this.record_type = value;\n          this.filterArr.push(`${filter}:${value}`);\n          if (this.record_type != 'all') {\n            this.recordTypeFlag = true;\n            this.recordTypeFC.patchValue([Number(this.record_type)]);\n          }\n          break;\n        case 'includeSubsidiary':\n          this.retained_include_subsidiary = Boolean(value);\n          break;\n        case 'consolidationApproach':\n          this.have_retained_consolidation_approach = true;\n          this.retained_consolidation_approach = value;\n          break;\n        case 'sortBy':\n          this.sort.active = value;\n          break;\n        case 'sort':\n          this.sort.direction = value;\n          break;\n        case 'pageIndex':\n          this.paginator.pageIndex = Number(value);\n          break;\n        case 'pageSize':\n          this.paginator.pageSize = Number(value);\n          break;\n        default:\n          console.log('unidentified filter encountered - ', filter);\n      }\n    }\n    checkAllFilters() {\n      if (this.carbonFilterChild.consolidationApproach != null) {\n        this.getCarbonAccountingData();\n        this.end_subscription.next();\n      }\n    }\n    getCarbonAccountingData() {\n      this.sort.sortChange.subscribe(() => {\n        this.paginator.pageIndex = 0;\n      });\n      fromEvent(this.refreshBtn.nativeElement, \"click\").subscribe(() => {\n        this.paginator.pageIndex = 0;\n      });\n      fromEvent(this.activityBtn.nativeElement, \"click\").subscribe(() => {\n        this.paginator.pageIndex = 0;\n      });\n      merge(this.paginator.page, this.sort.sortChange, this.scopeSelect.mono, this.durationPeriodFC.valueChanges, fromEvent(this.refreshBtn.nativeElement, \"click\"), fromEvent(this.activityBtn.nativeElement, \"click\"), fromEvent(this.recordTypeBtn.nativeElement, \"click\"), merge(this.filterChild.emitFilter, this.carbonFilterChild.emitFilter)).pipe(startWith({}), switchMap(() => {\n        if (this.filterChild.startDateFC.value > this.filterChild.endDateFC.value) {\n          this.toastrService.openToast('Error', 'Invalid date range', 'error');\n          return [];\n        }\n        if (this.recordTypeFC.value.length == 0) {\n          this.toastrService.openToast('Error', 'Invalid filter for record type', 'error');\n          return [];\n        }\n        if (this.activityFlag) {\n          if (this.activityFC.value.length == 0) {\n            this.toastrService.openToast('Error', 'Invalid filter for activities', 'error');\n            return [];\n          }\n        }\n        this.filterArr = [];\n        {\n          let selected_recordTypes = this.recordTypeFC.value.length - 1;\n          if (selected_recordTypes == this.totalDcms) {\n            this.recordTypeFlag = false;\n            this.record_type = ['all'];\n          } else {\n            this.record_type = this.recordTypeFC.value;\n          }\n          this.filterArr.push('dataSource:' + this.record_type);\n        }\n        if (this.searchFlag) {\n          this.filterArr.push(\"search:\" + this.searchValue);\n        }\n        if (this.scopeFlag) {\n          if (this.scopeFC.value == 'all') {\n            this.scopeFlag = false;\n          } else this.filterArr.push('scope:' + this.scopeFC.value);\n        }\n        if (this.activityFlag) {\n          let selected_activities = this.activityFC.value.length - 1;\n          if (selected_activities == this.totalActivities) {\n            this.activityFlag = false;\n          } else this.filterArr.push('activity:' + this.activityFC.value);\n        }\n        this.saveFilters();\n        let startDate = this.dateService.convertUtcToTimeZone(this.filterChild.startDateFC.value, COMMON_CONSTANT.ASIAN_KOLKATA, DateFormatEnum.YYYY_MM_DD);\n        let endDate = this.dateService.convertUtcToTimeZone(this.filterChild.endDateFC.value, COMMON_CONSTANT.ASIAN_KOLKATA, DateFormatEnum.YYYY_MM_DD);\n        return this.sustainabilityAccountingController.getAccountList(this.currentOrgID, this.paginator.pageIndex, this.paginator.pageSize, this.sort.active, this.sort.direction, startDate, endDate, this.carbonFilterChild.subsidiaryFC.value, this.carbonFilterChild.consolidationApproachFC.value, this.filterArr, this.isChecked).pipe(catchError(() => observableOf(null)));\n      }), map(dataSource => {\n        if (dataSource === null) {\n          this.resultLength = 0;\n          return [];\n        }\n        this.taskCount = dataSource['count'];\n        this.resultLength = dataSource[\"totalCount\"];\n        return dataSource[\"record\"];\n      })).subscribe(dataSource => {\n        this.dataSource = dataSource;\n      });\n    }\n    searchFn(value) {\n      if (!this.searchFlag) {\n        this.resetAllFilter();\n        this.searchFlag = true;\n      }\n      this.searchValue = value;\n      if (value.length == 0) {\n        this.resetSearch();\n        this.resetAllFilter();\n      } else {\n        this.scopeFC.reset('all');\n        this.activityFC.reset(['all']);\n        this.selectAllActivities();\n        this.paginator.pageIndex = 0;\n      }\n      this.refreshBtn.nativeElement.click();\n    }\n    resetSearch() {\n      this.searchFlag = false;\n      this.searchBar.searchClear();\n    }\n    resetAllFilter() {\n      this.clearAllChips();\n    }\n    onApplyFilterClick() {\n      if (this.activityFC.value.length != 0) {\n        this.activityFlag = true;\n        this.applyActivityFilter();\n        this.activitySelect.close();\n      }\n    }\n    applyActivityFilter() {\n      if (this.activityFC.value.length == 0) {\n        return;\n      }\n      this.activityFilterApplied = true;\n      this.chips = this.chips.filter(chip => chip['type'] != 'activity');\n      if (this.activityFC.value.includes('all')) {\n        this.activityFlag = false;\n        return;\n      }\n      this.selected_activities.forEach(activity => {\n        let chip = this.chips.find(chip => chip['filter'].includes(`${activity['name']}`));\n        if (chip) {\n          const index = this.chips.indexOf(chip);\n          if (index >= 0) {\n            this.chips.splice(index, 1);\n          }\n        } else {\n          this.chips.push({\n            type: 'activity',\n            key: activity['keyID'],\n            filter: `${activity['name']}`\n          });\n        }\n      });\n    }\n    resetActivityFilter(domainKeyID) {\n      this.activityFlag = false;\n      this.activityFC.reset([]);\n      this.chips = this.chips.filter(chip => chip['type'] != 'activity');\n      if (domainKeyID == 'all') this.activity = this.all_activities;else {\n        let selected_domain = domainKeyID;\n        if (selected_domain == 'scope_1') this.activity = this.scope_1_activities;else if (selected_domain == 'scope_2') this.activity = this.scope_2_activities;else this.activity = this.all_activities;\n      }\n      this.totalActivities = this.activity.length;\n      this.all_activity_keyID = ['all'];\n      this.activity.map(activity => {\n        this.all_activity_keyID.push(activity['keyID']);\n      });\n      this.selectAllActivities();\n      this.selected_activities = this.activity.map(activity => activity);\n    }\n    selectActivity(activity /* activity: json{} */) {\n      const index = this.selected_activities.indexOf(activity);\n      if (index >= 0) {\n        this.selected_activities.splice(index, 1);\n      } else {\n        this.selected_activities.push(activity);\n      }\n      const k = this.activityFC.value.indexOf('all');\n      if (k > -1) {\n        if (this.activityFC.value.length > this.totalActivities) {\n          this.activityFC.patchValue([]);\n        } else if (this.activityFC.value.length == this.totalActivities) {\n          this.activityFC.value.splice(k, 1);\n          this.activityFC.patchValue(this.activityFC.value);\n        } else {\n          this.activityFC.patchValue(this.all_activity_keyID);\n        }\n      } else {\n        if (this.activityFC.value.length == this.totalActivities) {\n          this.activityFC.patchValue(this.all_activity_keyID);\n        }\n      }\n    }\n    selectAllActivities() {\n      if (!this.activityFC.value.includes('all') && this.activityFC.value.length > 0) {\n        this.activityFC.reset([]);\n        this.selected_activities = [];\n        return;\n      }\n      this.patchAccToScope();\n    }\n    reset_recordTypeOnNoChange(event) {\n      if (event) {\n        this.prev_record_type = this.recordTypeFC.value;\n        this.recordTypeFilterApplied = false;\n      } else {\n        if (this.prev != this.recordTypeFC.value && !this.recordTypeFilterApplied) {\n          this.recordTypeFC.patchValue(this.prev_record_type, {\n            onlySelf: true\n          });\n        }\n      }\n    }\n    applyRecordTypeFilter() {\n      if (this.recordTypeFC.value.length == 0) return;\n      this.recordTypeFilterApplied = true;\n      this.chips = this.chips.filter(chip => chip['type'] != 'dcm');\n      if (this.recordTypeFC.value.includes('all')) {\n        this.recordTypeFlag = false;\n        return;\n      }\n      this.selected_dcms.forEach(dcm => {\n        let chip = this.chips.find(chip => chip['filter'].includes(`${dcm['dataCollectionMethodName']}`));\n        if (chip) {\n          const index = this.chips.indexOf(chip);\n          if (index >= 0) {\n            this.chips.splice(index, 1);\n          }\n        } else {\n          this.chips.push({\n            type: 'dcm',\n            key: dcm['dataCollectionMethodID'],\n            filter: `${dcm['dataCollectionMethodName']}`\n          });\n        }\n      });\n    }\n    resetRecordTypeFilter() {\n      this.recordTypeFC.reset([]);\n      this.chips = this.chips.filter(chip => chip['type'] != 'dcm');\n      this.selectAllRecordTypes();\n      this.selected_dcms = this.dcm.map(dcm => dcm);\n    }\n    selectRecordType(dcm /* data_collection_method: json{} */) {\n      const index = this.selected_dcms.indexOf(dcm);\n      if (index >= 0) {\n        this.selected_dcms.splice(index, 1);\n      } else {\n        this.selected_dcms.push(dcm);\n      }\n      const k = this.recordTypeFC.value.indexOf('all');\n      if (k > -1) {\n        if (this.recordTypeFC.value.length > this.totalDcms) {\n          this.recordTypeFC.patchValue([]);\n        } else if (this.recordTypeFC.value.length == this.totalDcms) {\n          this.recordTypeFC.value.splice(k, 1);\n          this.recordTypeFC.patchValue(this.recordTypeFC.value);\n        } else {\n          this.recordTypeFC.patchValue(this.all_dcm_key_ids);\n        }\n      } else {\n        if (this.recordTypeFC.value.length == this.totalDcms) {\n          this.recordTypeFC.patchValue(this.all_dcm_key_ids);\n        }\n      }\n    }\n    selectAllRecordTypes() {\n      if (!this.recordTypeFC.value.includes('all') && this.recordTypeFC.value.length > 0) {\n        this.recordTypeFC.reset([]);\n        this.selected_dcms = [];\n        return;\n      }\n      this.recordTypeFC.patchValue(this.all_dcm_key_ids);\n    }\n    scopeChange() {\n      this.activityFC.reset([]);\n      this.selectAllActivities();\n    }\n    toggleScopeChip(scope) {\n      this.chips = this.chips.filter(chip => chip['type'] == 'dcm');\n      if (scope['keyID'] == 'all') {\n        this.scopeFlag = false;\n        return;\n      }\n      this.chips.push({\n        type: 'scope',\n        key: scope['id'],\n        filter: `${scope['name']}`\n      });\n    }\n    removeChip(chip) {\n      const index = this.chips.indexOf(chip);\n      if (index >= 0) {\n        switch (chip['type']) {\n          case 'activity':\n            const k = this.activityFC.value.indexOf(chip['key']);\n            if (k > -1) {\n              this.activityFC.value.splice(k, 1);\n            }\n            this.activityFC.setValue(this.activityFC.value);\n            let found = this.selected_activities.findIndex(activity => activity['keyID'] == chip['key']);\n            this.selected_activities.splice(found, 1);\n            break;\n          case 'dcm':\n            const d = this.recordTypeFC.value.indexOf(chip['key']);\n            if (d > -1) {\n              this.recordTypeFC.value.splice(d, 1);\n            }\n            this.recordTypeFC.setValue(this.recordTypeFC.value);\n            let dcm_found = this.selected_dcms.findIndex(dcm => dcm['keyID'] == chip['key']);\n            this.selected_dcms.splice(dcm_found, 1);\n            break;\n          case 'scope':\n            this.scopeFlag = false;\n            this.scopeFC.reset('all');\n            this.resetActivityFilter('all');\n            break;\n          default:\n            console.log('undefined case encountered');\n        }\n        this.chips.splice(index, 1);\n        if (this.chips.filter(chip => chip['type'] == 'activity').length == 0) {\n          this.patchAccToScope();\n        }\n        if (this.chips.filter(chip => chip['type'] == 'dcm').length == 0) {\n          this.recordTypeFC.patchValue(this.all_dcm_key_ids);\n          this.selected_dcms = this.dcm.map(dcm => dcm);\n        }\n        this.refreshBtn.nativeElement.click();\n      }\n    }\n    patchAccToScope() {\n      this.setActivityAccToScope();\n      if (this.scopeFC.value == ScopeKeyIDEnum.SCOPE_1_KEY_ID) {\n        this.activityFC.patchValue(this.scope_1_acitivities_keyIDs);\n      } else if (this.scopeFC.value == ScopeKeyIDEnum.SCOPE_2_KEY_ID) {\n        this.activityFC.patchValue(this.scope_2_acitivities_keyIDs);\n      } else if (this.scopeFC.value == ScopeKeyIDEnum.SCOPE_3_KEY_ID) {\n        this.activityFC.patchValue(this.scope_3_acitivities_keyIDs);\n      } else {\n        this.activityFC.patchValue(this.all_activity_keyID);\n      }\n      this.selected_activities = this.activity.map(activity => activity);\n    }\n    setActivityAccToScope() {\n      if (this.scopeFC.value == ScopeKeyIDEnum.SCOPE_1_KEY_ID) {\n        this.activity = this.scope_1_activities;\n        this.totalActivities = this.scope_1_activities.length;\n      } else if (this.scopeFC.value == ScopeKeyIDEnum.SCOPE_2_KEY_ID) {\n        this.activity = this.scope_2_activities;\n        this.totalActivities = this.scope_2_activities.length;\n      } else if (this.scopeFC.value == ScopeKeyIDEnum.SCOPE_3_KEY_ID) {\n        this.activity = this.scope_3_activities;\n        this.totalActivities = this.scope_3_activities.length;\n      } else {\n        this.activity = this.all_activities;\n        this.totalActivities = this.all_activities.length;\n      }\n    }\n    clearAllChips() {\n      this.scopeFlag = false;\n      this.activityFlag = false;\n      this.recordTypeFlag = false;\n      this.chips = [];\n      this.scopeFC.reset('all');\n      this.resetRecordTypeFilter();\n      this.resetActivityFilter('all');\n      this.refreshBtn.nativeElement.click();\n    }\n    getRoute(record) {\n      return '.';\n    }\n    saveFilters() {\n      let startDate = this.dateService.convertUtcToTimeZone(this.filterChild.startDateFC.value, COMMON_CONSTANT.ASIAN_KOLKATA, 'YYYY-MM-DD');\n      let endDate = this.dateService.convertUtcToTimeZone(this.filterChild.endDateFC.value, COMMON_CONSTANT.ASIAN_KOLKATA, 'YYYY-MM-DD');\n      let frequency = this.filterChild.frequencyFC.value;\n      let duration = this.filterChild.durationFC.value;\n      let filters = {\n        haveFilters: true,\n        frequency: frequency,\n        duration: duration,\n        startDate: startDate,\n        endDate: endDate,\n        dataSource: this.record_type,\n        includeSubsidiary: this.carbonFilterChild.subsidiaryFC.value,\n        consolidationApproach: this.carbonFilterChild.consolidationApproachFC.value,\n        pageSize: this.paginator.pageSize,\n        pageIndex: this.paginator.pageIndex,\n        sortBy: this.sort.active,\n        sort: this.sort.direction\n      };\n      if (this.scopeFC.value != 'all') {\n        filters['scope'] = this.scopeFC.value;\n      }\n      const selected_activities = this.activityFC.value;\n      if (selected_activities instanceof Array && !selected_activities.includes('all') && selected_activities.length != 0) {\n        filters['activity'] = selected_activities;\n      }\n      if (this.searchFlag) {\n        filters['search'] = this.searchValue;\n      }\n      this.setToStorage('sustainability_accounting', filters);\n    }\n    setToStorage(key, filters) {\n      let json = {};\n      json[key] = filters;\n      this.storageService.setStorage('filters', JSON.stringify(json));\n      this.router.navigate([location.pathname], {\n        queryParams: filters\n      });\n    }\n    isLink(activityKeyID) {\n      const activityKeyIDArray = [ActivityKeyIDEnum.REFRIGERATION_AC_AND_FIRE_SUPPRESSION];\n      return !activityKeyIDArray.includes(activityKeyID);\n    }\n    optionVisibility(row) {\n      let activityKeyID = row === null || row === void 0 ? void 0 : row.activityKeyID;\n      const activityKeyIDArray = [ActivityKeyIDEnum.REFRIGERATION_AC_AND_FIRE_SUPPRESSION.toString()];\n      if (!activityKeyIDArray.includes(activityKeyID)) {\n        return true;\n      }\n      return false;\n    }\n    handleClick(func, params) {\n      func(...params);\n    }\n    dateToogle() {\n      this.refreshBtn.nativeElement.click();\n    }\n    routerLink(record) {\n      const activityDataKeys = [\"capital-goods\", \"upstream-transportation-and-distribution\", \"downstream-transportation-and-distribution\", \"business-travel\", \"purchased-goods-and-services\", \"mobile-combustion\", \"stationary-combustion\", \"purchased-electricity\", \"purchased-heat-steam\", \"purchased-cooling\", \"waste-generated-in-operations\", \"other-fugitive-emission\"];\n      const activityDataKeysForEmployee = [\"employee-commuting\"];\n      if (record.activityKeyID == ActivityKeyIDEnum.PROCESS_EMISSION) {\n        return null;\n      } else if (activityDataKeys.includes(record['activityKeyID'])) {\n        return `/sustainability-accounting/carbon/view/${record['activityKeyID']}/${record['activityDataID']}/${record['calculatedEmissionDataID']}`;\n      } else if (activityDataKeysForEmployee == record['activityKeyID']) {\n        return `/sustainability-accounting/carbon/view/${record['activityKeyID']}/${record['recordID']}/${record['calculatedEmissionDataID']}`;\n      } else if (record['type'] === EmissionDataTypeEnum.SUBSIDIARY_EMISSION || record['type'] === EmissionDataTypeEnum.MERGER_ACQUISITION || record['type'] === EmissionDataTypeEnum.DIVESTMENT || record['type'] === EmissionDataTypeEnum.OUTSOURCING || record['type'] === EmissionDataTypeEnum.INSOURCING) {\n        return true;\n      } else {\n        return `/sustainability-accounting/carbon/record-details/${record['calculationApproachKeyID']}/${record['calculatedEmissionDataID']}`;\n      }\n    }\n    selectActivityForm() {\n      let dialogRef;\n      dialogRef = this.dialog.open(ActivitySelectionComponent, {\n        height: '100vh',\n        width: '800px',\n        position: {\n          right: '-2px',\n          top: '0px'\n        },\n        data: {\n          origin: ActivityConfigEnum.AD_HOC,\n          action: 'create'\n        }\n      });\n      dialogRef.afterClosed().subscribe(result => {\n        console.log(result);\n        if (result === 'opSuccess') {}\n      });\n    }\n    // showActivityConfigSelection() {\n    //     const dialogRef = this.dialog.open(ActivityConfigSelection, {\n    //         height: \"100%\",\n    //         minWidth: '800px',\n    //         position: { right: \"-2px\", top: \"0px\" },\n    //     });\n    // }\n    showActivityConfigSelection() {\n      const dialogRef = this.dialog.open(ActivityConfigSelection, {\n        height: \"100%\",\n        width: '700px',\n        position: {\n          right: \"-2px\",\n          top: \"0px\"\n        },\n        panelClass: 'matDialogContainerOverride',\n        data: {\n          showActivityType: true,\n          activityTypeKeyID: ACTIVITY_FORM_TYPE_KEYID_ENUM.GHG_FORM\n        }\n      });\n    }\n  }\n  CarbonComponent.ɵfac = function CarbonComponent_Factory(t) {\n    return new (t || CarbonComponent)(i0.ɵɵdirectiveInject(i1.ActivatedRoute), i0.ɵɵdirectiveInject(i2.StorageService), i0.ɵɵdirectiveInject(i1.Router), i0.ɵɵdirectiveInject(i3.MatDialog), i0.ɵɵdirectiveInject(i4.ScopeController), i0.ɵɵdirectiveInject(i5.ActivityController), i0.ɵɵdirectiveInject(i6.DataCollectionMethodController), i0.ɵɵdirectiveInject(i7.SustainabilityAccountingController), i0.ɵɵdirectiveInject(i8.DateService), i0.ɵɵdirectiveInject(i9.ToastrService));\n  };\n  CarbonComponent.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n    type: CarbonComponent,\n    selectors: [[\"app-carbon\"]],\n    viewQuery: function CarbonComponent_Query(rf, ctx) {\n      if (rf & 1) {\n        i0.ɵɵviewQuery(MatSort, 5);\n        i0.ɵɵviewQuery(MatPaginator, 5);\n        i0.ɵɵviewQuery(_c0, 5);\n        i0.ɵɵviewQuery(_c1, 5);\n        i0.ɵɵviewQuery(_c2, 5);\n        i0.ɵɵviewQuery(_c3, 5);\n        i0.ɵɵviewQuery(_c4, 5);\n        i0.ɵɵviewQuery(_c5, 5);\n        i0.ɵɵviewQuery(_c6, 5);\n        i0.ɵɵviewQuery(_c7, 5);\n      }\n      if (rf & 2) {\n        let _t;\n        i0.ɵɵqueryRefresh(_t = i0.ɵɵloadQuery()) && (ctx.sort = _t.first);\n        i0.ɵɵqueryRefresh(_t = i0.ɵɵloadQuery()) && (ctx.paginator = _t.first);\n        i0.ɵɵqueryRefresh(_t = i0.ɵɵloadQuery()) && (ctx.refreshBtn = _t.first);\n        i0.ɵɵqueryRefresh(_t = i0.ɵɵloadQuery()) && (ctx.activityBtn = _t.first);\n        i0.ɵɵqueryRefresh(_t = i0.ɵɵloadQuery()) && (ctx.recordTypeBtn = _t.first);\n        i0.ɵɵqueryRefresh(_t = i0.ɵɵloadQuery()) && (ctx.searchBar = _t.first);\n        i0.ɵɵqueryRefresh(_t = i0.ɵɵloadQuery()) && (ctx.activitySelect = _t.first);\n        i0.ɵɵqueryRefresh(_t = i0.ɵɵloadQuery()) && (ctx.scopeSelect = _t.first);\n        i0.ɵɵqueryRefresh(_t = i0.ɵɵloadQuery()) && (ctx.filterChild = _t.first);\n        i0.ɵɵqueryRefresh(_t = i0.ɵɵloadQuery()) && (ctx.carbonFilterChild = _t.first);\n      }\n    },\n    decls: 75,\n    vars: 23,\n    consts: [[1, \"card\", \"main-card\", \"cardOverwrite\", \"h100\"], [1, \"headerContainer\"], [1, \"headerLeftContainer\"], [1, \"pageTitle\"], [1, \"pageSubtitle\"], [1, \"headerRightContainer\", \"me-2\"], [1, \"headerRightContainerInner\"], [1, \"me-3\", 3, \"emitSearch\"], [\"searchBar\", \"\"], [\"matRipple\", \"\", \"matTooltipPosition\", \"below\", 1, \"btn\", \"btn-sm\", \"btn-light\", \"centerAlign\", \"me-3\", \"py-1\", \"refreshBtn\", 3, \"matRippleCentered\", \"matTooltip\"], [\"refreshBtn\", \"\"], [1, \"material-symbols-outlined\"], [\"ngbDropdown\", \"\", \"placement\", \"bottom-right\", \"matTooltipPosition\", \"below\", 1, \"btn-group\", 3, \"matTooltip\"], [\"type\", \"button\", \"ngbDropdownToggle\", \"\", 1, \"btn\", \"btn-sm\", \"btn-success\"], [3, \"icon\"], [\"ngbDropdownMenu\", \"\"], [\"matRipple\", \"\", 1, \"dropdown-item\", 3, \"matRippleCentered\", \"click\"], [\"matRipple\", \"\", 1, \"dropdown-item\", 3, \"matRippleCentered\", \"routerLink\"], [1, \"ms-3\", \"me-3\"], [\"filterChild\", \"\"], [1, \"float-end\", 3, \"module\", \"have_default_consolidation_approach\"], [\"carbonFilterChild\", \"\"], [1, \"row\", \"mx-2\", \"h-auto\", 3, \"ngClass\"], [1, \"col-sm-10\", \"py-1\", \"chipListContainer\"], [\"chipList\", \"\"], [3, \"removed\", 4, \"ngFor\", \"ngForOf\"], [1, \"col-sm-2\", \"centerAlignVertical\", \"justify-content-end\"], [\"matRipple\", \"\", 1, \"btn\", \"btn-link\", \"float-end\", 3, \"matRippleCentered\", \"click\"], [1, \"material-symbols-outlined\", \"fs-5\"], [\"mat-table\", \"\", \"matSort\", \"\", \"matSortActive\", \"recordID\", \"matSortDirection\", \"desc\", \"matSortDisableClear\", \"\", 1, \"w-100\", 3, \"dataSource\"], [\"sort\", \"\"], [\"matColumnDef\", \"recordID\"], [\"class\", \"px-3 recordID\", \"mat-header-cell\", \"\", \"mat-sort-header\", \"\", 4, \"matHeaderCellDef\"], [\"class\", \"px-3\", \"mat-cell\", \"\", 3, \"routerLink\", 4, \"matCellDef\"], [\"matColumnDef\", \"scope\"], [\"class\", \"px-3 scope\", \"mat-header-cell\", \"\", 4, \"matHeaderCellDef\"], [\"class\", \"px-3\", \"mat-cell\", \"\", \"matTooltipPosition\", \"above\", \"matTooltipClass\", \"nameTooltip\", 3, \"routerLink\", \"matTooltip\", 4, \"matCellDef\"], [\"matColumnDef\", \"activity\"], [\"mat-header-cell\", \"\", 4, \"matHeaderCellDef\"], [\"mat-cell\", \"\", \"matTooltipPosition\", \"above\", \"matTooltipClass\", \"nameTooltip\", 3, \"routerLink\", \"matTooltip\", 4, \"matCellDef\"], [\"matColumnDef\", \"source\"], [\"class\", \"px-3 source\", \"mat-header-cell\", \"\", 4, \"matHeaderCellDef\"], [\"class\", \"px-3\", \"mat-cell\", \"\", 3, \"ngClass\", \"routerLink\", 4, \"matCellDef\"], [\"hyphen\", \"\"], [\"matColumnDef\", \"startDate\"], [\"mat-header-cell\", \"\", \"class\", \"accountingPeriod\", \"mat-sort-header\", \"\", \"disableClear\", \"\", 4, \"matHeaderCellDef\"], [\"class\", \"accountingPeriod\", \"mat-cell\", \"\", 3, \"routerLink\", 4, \"matCellDef\"], [\"matColumnDef\", \"emission\"], [\"mat-header-cell\", \"\", \"mat-sort-header\", \"\", \"class\", \"px-3 matTableSortRightAlign emission\", 4, \"matHeaderCellDef\"], [\"class\", \"text-end emisson\", \"mat-cell\", \"\", \"matTooltipPosition\", \"above\", \"matTooltipClass\", \"nameTooltip\", 3, \"matTooltip\", \"routerLink\", 4, \"matCellDef\"], [\"matColumnDef\", \"recordType\"], [\"class\", \"px-3 recordType\", \"mat-header-cell\", \"\", 4, \"matHeaderCellDef\"], [\"matColumnDef\", \"option\"], [\"mat-cell\", \"\", 4, \"matCellDef\"], [\"mat-header-row\", \"\", 4, \"matHeaderRowDef\"], [\"mat-row\", \"\", \"class\", \"dataRow cursorPointer\", 4, \"matRowDef\", \"matRowDefColumns\"], [\"class\", \"mat-row\", 4, \"matNoDataRow\"], [\"showFirstLastButtons\", \"\", 1, \"roundedBorder\", 3, \"length\", \"pageSizeOptions\", \"pageSize\"], [\"icon\", \"\"], [3, \"removed\"], [1, \"fw-normal\"], [\"matChipRemove\", \"\"], [\"mat-header-cell\", \"\", \"mat-sort-header\", \"\", 1, \"px-3\", \"recordID\"], [\"mat-cell\", \"\", 1, \"px-3\", 3, \"routerLink\"], [\"id\", \"\"], [\"mat-header-cell\", \"\", 1, \"px-3\", \"scope\"], [\"header\", \"Scope\", \"type\", \"mono\", 3, \"entityList\", \"selectFC\", \"active\", \"mono\", \"selected\"], [\"scopeSelect\", \"\"], [\"mat-cell\", \"\", \"matTooltipPosition\", \"above\", \"matTooltipClass\", \"nameTooltip\", 1, \"px-3\", 3, \"routerLink\", \"matTooltip\"], [\"mat-header-cell\", \"\"], [1, \"row\"], [1, \"col-sm-12\", \"centerAlignVertical\", \"justify-content-start\", \"pe-0\"], [\"mat-icon-button\", \"\", 3, \"click\"], [1, \"material-symbols-outlined\", \"fs-4\", \"funnel\", 3, \"ngClass\"], [1, \"funnelFilterDD\"], [\"multiple\", \"\", 3, \"formControl\", \"openedChange\"], [\"activitySelect\", \"\"], [1, \"d-none\"], [\"value\", \"all\", 3, \"click\"], [3, \"value\", \"click\", 4, \"ngFor\", \"ngForOf\"], [1, \"row\", \"m-0\", \"dropdownFooter\"], [1, \"col-sm-12\"], [\"matRipple\", \"\", 1, \"button\", \"btn\", \"btn-primary\", \"float-end\", \"m-1\", 3, \"ngClass\", \"matRippleCentered\", \"click\"], [\"activityBtn\", \"\"], [3, \"value\", \"click\"], [\"mat-cell\", \"\", \"matTooltipPosition\", \"above\", \"matTooltipClass\", \"nameTooltip\", 3, \"routerLink\", \"matTooltip\"], [\"mat-header-cell\", \"\", 1, \"px-3\", \"source\"], [\"mat-cell\", \"\", 1, \"px-3\", 3, \"ngClass\", \"routerLink\"], [\"matTooltipPosition\", \"above\", \"matTooltipClass\", \"nameTooltip\", 3, \"matTooltip\", 4, \"ngIf\", \"ngIfElse\"], [\"matTooltipPosition\", \"above\", \"matTooltipClass\", \"nameTooltip\", 3, \"matTooltip\"], [\"mat-header-cell\", \"\", \"mat-sort-header\", \"\", \"disableClear\", \"\", 1, \"accountingPeriod\"], [\"mat-cell\", \"\", 1, \"accountingPeriod\", 3, \"routerLink\"], [\"mat-header-cell\", \"\", \"mat-sort-header\", \"\", 1, \"px-3\", \"matTableSortRightAlign\", \"emission\"], [1, \"ps-1\"], [\"mat-cell\", \"\", \"matTooltipPosition\", \"above\", \"matTooltipClass\", \"nameTooltip\", 1, \"text-end\", \"emisson\", 3, \"matTooltip\", \"routerLink\"], [\"mat-header-cell\", \"\", 1, \"px-3\", \"recordType\"], [1, \"col-sm-7\", \"centerAlignVertical\", \"justify-content-start\", \"pe-0\"], [1, \"col-sm-2\", \"centerAlign\"], [\"recordTypeSelect\", \"\"], [\"matRipple\", \"\", 1, \"button\", \"btn\", \"btn-primary\", \"applyBtn\", \"float-end\", 3, \"matRippleCentered\", \"click\"], [\"recordTypeBtn\", \"\"], [\"mat-cell\", \"\"], [1, \"centerAlignVertical\"], [4, \"ngIf\"], [4, \"ngTemplateOutlet\", \"ngTemplateOutletContext\"], [\"mat-header-row\", \"\"], [\"mat-row\", \"\", 1, \"dataRow\", \"cursorPointer\"], [1, \"mat-row\"], [1, \"mat-cell\", \"text-center\"], [\"matTooltipPosition\", \"below\", \"matRipple\", \"\", 1, \"iconBtn\", \"centerAlign\", 3, \"matTooltip\", \"matRippleCentered\", \"click\"], [1, \"material-symbols-outlined\", \"icon\"]],\n    template: function CarbonComponent_Template(rf, ctx) {\n      if (rf & 1) {\n        i0.ɵɵelementStart(0, \"div\", 0);\n        i0.ɵɵelementStart(1, \"div\", 1);\n        i0.ɵɵelementStart(2, \"div\", 2);\n        i0.ɵɵelementStart(3, \"div\", 3);\n        i0.ɵɵtext(4);\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(5, \"div\", 4);\n        i0.ɵɵtext(6, \"Data lake for your carbon footprint. View, edit or add new records.\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementEnd();\n        i0.ɵɵelement(7, \"div\", 5);\n        i0.ɵɵelementStart(8, \"div\", 6);\n        i0.ɵɵelementStart(9, \"lib-search-bar-one\", 7, 8);\n        i0.ɵɵlistener(\"emitSearch\", function CarbonComponent_Template_lib_search_bar_one_emitSearch_9_listener($event) {\n          return ctx.searchFn($event);\n        });\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(11, \"button\", 9, 10);\n        i0.ɵɵelementStart(13, \"span\", 11);\n        i0.ɵɵtext(14, \" refresh \");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(15, \"div\", 12);\n        i0.ɵɵelementStart(16, \"button\", 13);\n        i0.ɵɵelement(17, \"fa-icon\", 14);\n        i0.ɵɵtext(18, \"\\u00A0\\u00A0Record \");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(19, \"div\", 15);\n        i0.ɵɵelementStart(20, \"button\", 16);\n        i0.ɵɵlistener(\"click\", function CarbonComponent_Template_button_click_20_listener() {\n          return ctx.selectActivityForm();\n        });\n        i0.ɵɵtext(21, \" Ad-hoc Record \");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(22, \"button\", 16);\n        i0.ɵɵlistener(\"click\", function CarbonComponent_Template_button_click_22_listener() {\n          return ctx.showActivityConfigSelection();\n        });\n        i0.ɵɵtext(23, \" Activity Form Record \");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(24, \"button\", 17);\n        i0.ɵɵtext(25, \" Import Records \");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(26, \"div\", 18);\n        i0.ɵɵelement(27, \"lib-date-filter\", null, 19);\n        i0.ɵɵelement(29, \"app-filter-carbon\", 20, 21);\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(31, \"div\", 22);\n        i0.ɵɵelementStart(32, \"div\", 23);\n        i0.ɵɵelementStart(33, \"mat-chip-list\", null, 24);\n        i0.ɵɵtemplate(35, CarbonComponent_mat_chip_35_Template, 6, 1, \"mat-chip\", 25);\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(36, \"div\", 26);\n        i0.ɵɵelementStart(37, \"button\", 27);\n        i0.ɵɵlistener(\"click\", function CarbonComponent_Template_button_click_37_listener() {\n          return ctx.clearAllChips();\n        });\n        i0.ɵɵelementStart(38, \"span\", 28);\n        i0.ɵɵtext(39, \" filter_list_off \");\n        i0.ɵɵelementEnd();\n        i0.ɵɵtext(40, \" Reset Filters \");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(41, \"table\", 29, 30);\n        i0.ɵɵelementContainerStart(43, 31);\n        i0.ɵɵtemplate(44, CarbonComponent_th_44_Template, 2, 0, \"th\", 32);\n        i0.ɵɵtemplate(45, CarbonComponent_td_45_Template, 4, 2, \"td\", 33);\n        i0.ɵɵelementContainerEnd();\n        i0.ɵɵelementContainerStart(46, 34);\n        i0.ɵɵtemplate(47, CarbonComponent_th_47_Template, 3, 3, \"th\", 35);\n        i0.ɵɵtemplate(48, CarbonComponent_td_48_Template, 3, 6, \"td\", 36);\n        i0.ɵɵelementContainerEnd();\n        i0.ɵɵelementContainerStart(49, 37);\n        i0.ɵɵtemplate(50, CarbonComponent_th_50_Template, 20, 9, \"th\", 38);\n        i0.ɵɵtemplate(51, CarbonComponent_td_51_Template, 3, 6, \"td\", 39);\n        i0.ɵɵelementContainerEnd();\n        i0.ɵɵelementContainerStart(52, 40);\n        i0.ɵɵtemplate(53, CarbonComponent_th_53_Template, 2, 0, \"th\", 41);\n        i0.ɵɵtemplate(54, CarbonComponent_td_54_Template, 2, 6, \"td\", 42);\n        i0.ɵɵtemplate(55, CarbonComponent_ng_template_55_Template, 1, 1, \"ng-template\", null, 43, i0.ɵɵtemplateRefExtractor);\n        i0.ɵɵelementContainerEnd();\n        i0.ɵɵelementContainerStart(57, 44);\n        i0.ɵɵtemplate(58, CarbonComponent_th_58_Template, 2, 0, \"th\", 45);\n        i0.ɵɵtemplate(59, CarbonComponent_td_59_Template, 4, 9, \"td\", 46);\n        i0.ɵɵelementContainerEnd();\n        i0.ɵɵelementContainerStart(60, 47);\n        i0.ɵɵtemplate(61, CarbonComponent_th_61_Template, 7, 0, \"th\", 48);\n        i0.ɵɵtemplate(62, CarbonComponent_td_62_Template, 3, 6, \"td\", 49);\n        i0.ɵɵelementContainerEnd();\n        i0.ɵɵelementContainerStart(63, 50);\n        i0.ɵɵtemplate(64, CarbonComponent_th_64_Template, 19, 6, \"th\", 51);\n        i0.ɵɵtemplate(65, CarbonComponent_td_65_Template, 2, 2, \"td\", 33);\n        i0.ɵɵelementContainerEnd();\n        i0.ɵɵelementContainerStart(66, 52);\n        i0.ɵɵtemplate(67, CarbonComponent_th_67_Template, 1, 0, \"th\", 38);\n        i0.ɵɵtemplate(68, CarbonComponent_td_68_Template, 3, 1, \"td\", 53);\n        i0.ɵɵelementContainerEnd();\n        i0.ɵɵtemplate(69, CarbonComponent_tr_69_Template, 1, 0, \"tr\", 54);\n        i0.ɵɵtemplate(70, CarbonComponent_tr_70_Template, 1, 0, \"tr\", 55);\n        i0.ɵɵtemplate(71, CarbonComponent_tr_71_Template, 3, 2, \"tr\", 56);\n        i0.ɵɵelementEnd();\n        i0.ɵɵelement(72, \"mat-paginator\", 57);\n        i0.ɵɵelementEnd();\n        i0.ɵɵtemplate(73, CarbonComponent_ng_template_73_Template, 3, 5, \"ng-template\", null, 58, i0.ɵɵtemplateRefExtractor);\n      }\n      if (rf & 2) {\n        i0.ɵɵadvance(4);\n        i0.ɵɵtextInterpolate(ctx.title);\n        i0.ɵɵadvance(7);\n        i0.ɵɵproperty(\"matRippleCentered\", ctx.MATERIAL_CONSTANT.MAT_RIPPLE_CENTER)(\"matTooltip\", ctx.ButtonTooltipEnum.REFRESH);\n        i0.ɵɵadvance(4);\n        i0.ɵɵproperty(\"matTooltip\", ctx.ButtonTooltipEnum.MORE);\n        i0.ɵɵadvance(2);\n        i0.ɵɵproperty(\"icon\", ctx.faPlus);\n        i0.ɵɵadvance(3);\n        i0.ɵɵproperty(\"matRippleCentered\", ctx.MATERIAL_CONSTANT.MAT_RIPPLE_CENTER);\n        i0.ɵɵadvance(2);\n        i0.ɵɵproperty(\"matRippleCentered\", ctx.MATERIAL_CONSTANT.MAT_RIPPLE_CENTER);\n        i0.ɵɵadvance(2);\n        i0.ɵɵproperty(\"matRippleCentered\", ctx.MATERIAL_CONSTANT.MAT_RIPPLE_CENTER)(\"routerLink\", i0.ɵɵpureFunction0(20, _c13));\n        i0.ɵɵadvance(5);\n        i0.ɵɵproperty(\"module\", \"sustainabilityAccounting\")(\"have_default_consolidation_approach\", ctx.have_retained_consolidation_approach);\n        i0.ɵɵadvance(2);\n        i0.ɵɵproperty(\"ngClass\", i0.ɵɵpureFunction1(21, _c14, (ctx.chips == null ? null : ctx.chips.length) == 0));\n        i0.ɵɵadvance(4);\n        i0.ɵɵproperty(\"ngForOf\", ctx.chips);\n        i0.ɵɵadvance(2);\n        i0.ɵɵproperty(\"matRippleCentered\", ctx.MATERIAL_CONSTANT.MAT_RIPPLE_CENTER);\n        i0.ɵɵadvance(4);\n        i0.ɵɵproperty(\"dataSource\", ctx.dataSource);\n        i0.ɵɵadvance(28);\n        i0.ɵɵproperty(\"matHeaderRowDef\", ctx.displayedColumns);\n        i0.ɵɵadvance(1);\n        i0.ɵɵproperty(\"matRowDefColumns\", ctx.displayedColumns);\n        i0.ɵɵadvance(2);\n        i0.ɵɵproperty(\"length\", ctx.resultLength)(\"pageSizeOptions\", ctx.TABLE_CONSTANT.PAGE_SIZE_OPTION)(\"pageSize\", ctx.TABLE_CONSTANT.DEFAULT_PAGE_SIZE);\n      }\n    },\n    directives: [i10.SearchBarOneComponent, i11.MatRipple, i12.MatTooltip, i13.NgbDropdown, i13.NgbDropdownToggle, i14.FaIconComponent, i13.NgbDropdownMenu, i1.RouterLink, i8.DateFilterComponent, i15.CarbonFilterComponent, i16.NgClass, i17.MatChipList, i16.NgForOf, i18.MatTable, i19.MatSort, i18.MatColumnDef, i18.MatHeaderCellDef, i18.MatCellDef, i18.MatHeaderRowDef, i18.MatRowDef, i18.MatNoDataRow, i20.MatPaginator, i17.MatChip, i17.MatChipRemove, i21.MatIcon, i18.MatHeaderCell, i19.MatSortHeader, i18.MatCell, i10.FunnelFilterComponent, i22.MatButton, i23.MatFormField, i24.MatSelect, i25.NgControlStatus, i25.FormControlDirective, i24.MatSelectTrigger, i11.MatOption, i16.NgIf, i16.NgTemplateOutlet, i18.MatHeaderRow, i18.MatRow],\n    pipes: [i10.EllipsisPipeService, i16.DatePipe, i16.DecimalPipe],\n    styles: [\".recordID[_ngcontent-%COMP%]{min-width:120px}.scope[_ngcontent-%COMP%]{min-width:180px;padding-right:20px}.source[_ngcontent-%COMP%]{width:200px}.accountingPeriod[_ngcontent-%COMP%]{width:190px;text-align:left}.emisson[_ngcontent-%COMP%]{width:160px}.recordType[_ngcontent-%COMP%]{width:175px;min-width:175px}.activity[_ngcontent-%COMP%]{min-width:190px}.funnelFilterDD[_ngcontent-%COMP%]{width:0;height:0;overflow:hidden}.applyBtn[_ngcontent-%COMP%]{height:25px;width:100px;padding:0 10px;position:sticky;right:7px;bottom:10px}.scope[_ngcontent-%COMP%]{width:125px;min-width:125px}.record-api[_ngcontent-%COMP%]{color:#fff;background-color:#516470}.record-sde[_ngcontent-%COMP%]{color:#fff;background-color:#223347}.record-adhoc[_ngcontent-%COMP%]{color:#fff;background-color:#789}.record-integration[_ngcontent-%COMP%]{color:#fff;background-color:#352b22}.lastUpdatedOn[_ngcontent-%COMP%]{min-width:145px;width:145px}.lastUpdatedBy[_ngcontent-%COMP%]{min-width:155px;width:155px}  .thinnerFF .mat-form-field-wrapper{padding-bottom:10px!important}  .thinnerFF .mat-form-field-appearance-outline .mat-form-field-infix{padding:.2em 0 .6em!important}  .thinnerFF .mat-form-field-appearance-outline .mat-form-field-infix .mat-form-field-label{top:16px!important}  .thinnerFF .mat-form-field-appearance-outline .mat-form-field-infix .mat-form-field-label{font-size:13px!important}  .thinnerFF .mat-form-field-appearance-outline .mat-form-field-subscript-wrapper .mat-error{margin-top:.5em!important}  .thinnerFF .mat-form-field-appearance-outline.mat-form-field-can-float.mat-form-field-should-float .mat-form-field-label{will-change:auto;transition:.25s!important;transform:translateY(-1em) scale(.75)!important}  .alignSuffix .mat-form-field-appearance-outline .mat-form-field-suffix{top:0}  .accountingPeriod .md-drppicker{left:auto!important}.matTableSortRightAlign[_ngcontent-%COMP%]   .mat-sort-header-container[_ngcontent-%COMP%]{justify-content:right!important}.dropdownFooter[_ngcontent-%COMP%]{position:sticky;bottom:0;background-color:#fff;padding:8px;z-index:1000}\"]\n  });\n  return CarbonComponent;\n})();","map":null,"metadata":{},"sourceType":"module"}