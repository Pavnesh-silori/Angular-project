{"ast":null,"code":"import * as i0 from '@angular/core';\nimport { Injectable, Component, NgModule, Inject } from '@angular/core';\nimport * as i1 from '@angular/common/http';\nimport { HttpParams } from '@angular/common/http';\nimport { __awaiter } from 'tslib';\nimport * as i5 from '@library/facility-service';\nimport { Facility } from '@library/facility-service';\nimport * as i1$1 from '@angular/router';\nimport * as i2 from '@library/storage-service';\nimport * as i3 from '@library/application-service';\nclass OrganizationServiceService {\n  constructor() {}\n}\nOrganizationServiceService.ɵfac = function OrganizationServiceService_Factory(t) {\n  return new (t || OrganizationServiceService)();\n};\nOrganizationServiceService.ɵprov = /* @__PURE__ */i0.ɵɵdefineInjectable({\n  token: OrganizationServiceService,\n  factory: OrganizationServiceService.ɵfac,\n  providedIn: 'root'\n});\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(OrganizationServiceService, [{\n    type: Injectable,\n    args: [{\n      providedIn: 'root'\n    }]\n  }], function () {\n    return [];\n  }, null);\n})();\nclass OrganizationServiceComponent {\n  constructor() {}\n  ngOnInit() {}\n}\nOrganizationServiceComponent.ɵfac = function OrganizationServiceComponent_Factory(t) {\n  return new (t || OrganizationServiceComponent)();\n};\nOrganizationServiceComponent.ɵcmp = /* @__PURE__ */i0.ɵɵdefineComponent({\n  type: OrganizationServiceComponent,\n  selectors: [[\"lib-organization-service\"]],\n  decls: 2,\n  vars: 0,\n  template: function OrganizationServiceComponent_Template(rf, ctx) {\n    if (rf & 1) {\n      i0.ɵɵelementStart(0, \"p\");\n      i0.ɵɵtext(1, \" organization-service works! \");\n      i0.ɵɵelementEnd();\n    }\n  },\n  encapsulation: 2\n});\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(OrganizationServiceComponent, [{\n    type: Component,\n    args: [{\n      selector: 'lib-organization-service',\n      template: `\n    <p>\n      organization-service works!\n    </p>\n  `,\n      styles: []\n    }]\n  }], function () {\n    return [];\n  }, null);\n})();\nclass OrganizationServiceModule {\n  static forRoot(environment) {\n    return {\n      ngModule: OrganizationServiceModule,\n      providers: [{\n        provide: 'environment',\n        useValue: environment\n      }]\n    };\n  }\n}\nOrganizationServiceModule.ɵfac = function OrganizationServiceModule_Factory(t) {\n  return new (t || OrganizationServiceModule)();\n};\nOrganizationServiceModule.ɵmod = /* @__PURE__ */i0.ɵɵdefineNgModule({\n  type: OrganizationServiceModule\n});\nOrganizationServiceModule.ɵinj = /* @__PURE__ */i0.ɵɵdefineInjector({\n  imports: [[]]\n});\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(OrganizationServiceModule, [{\n    type: NgModule,\n    args: [{\n      declarations: [OrganizationServiceComponent],\n      imports: [],\n      exports: [OrganizationServiceComponent]\n    }]\n  }], null, null);\n})();\nvar OrgType;\n(function (OrgType) {\n  OrgType[\"SITE\"] = \"SITE\";\n  OrgType[\"ORGANIZATION\"] = \"ORG\";\n  OrgType[\"NETZERO_ADMIN\"] = \"NETZEROADMIN\";\n  OrgType[\"ORGANIZAION_GROUP\"] = \"ORG_GROUP\";\n})(OrgType || (OrgType = {}));\nvar OrgStatus;\n(function (OrgStatus) {\n  OrgStatus[\"ACTIVE_STATUS\"] = \"ACTIVE\";\n  OrgStatus[\"INACTIVE_STATUS\"] = \"INACTIVE\";\n  OrgStatus[\"SETUP_PENDING_STATUS\"] = \"SETUP_PENDING\";\n})(OrgStatus || (OrgStatus = {}));\nvar OrgSiteAccessType;\n(function (OrgSiteAccessType) {\n  OrgSiteAccessType[\"ORG\"] = \"ORG\";\n  OrgSiteAccessType[\"SITE\"] = \"SITE\";\n  OrgSiteAccessType[\"ORG_SITE\"] = \"ORG_SITE\";\n})(OrgSiteAccessType || (OrgSiteAccessType = {}));\nvar OrganizationStatus;\n(function (OrganizationStatus) {\n  OrganizationStatus[\"ACTIVE\"] = \"ACTIVE\";\n  OrganizationStatus[\"INACTIVE\"] = \"INACTIVE\";\n  OrganizationStatus[\"PENDING_SETUP\"] = \"PENDING_SETUP\";\n})(OrganizationStatus || (OrganizationStatus = {}));\nclass Organization {}\nclass OrgAccess {}\nclass OrgSiteAccess {}\nclass OrganizationController {\n  constructor(http, environment) {\n    this.http = http;\n    this.environment = environment;\n  }\n  getOrganizationByID(orgID) {\n    return this.http.get(`${this.environment.ORGANIZATION_API_URL}organizations/${orgID}`);\n  }\n  getOrgByAccess(userID) {\n    return this.http.get(`${this.environment.ORGANIZATION_API_URL}users/${userID}/organizations-sites/access`);\n  }\n  getOrganizations(orgID) {\n    return this.http.get(`${this.environment.ORGANIZATION_API_URL}organizations/${orgID}/org-facility`);\n  }\n  getOrganizationsByType(orgID, type) {\n    let params = new HttpParams();\n    params = params.append('type', type);\n    return this.http.get(`${this.environment.ORGANIZATION_API_URL}organizations/${orgID}/org-facility`, {\n      params: params\n    });\n  }\n  getOrgSiteWithUserAccess(userID) {\n    return this.http.get(`${this.environment.ORGANIZATION_API_URL}users/${userID}/organizations-sites/access-new`);\n  }\n}\nOrganizationController.ɵfac = function OrganizationController_Factory(t) {\n  return new (t || OrganizationController)(i0.ɵɵinject(i1.HttpClient), i0.ɵɵinject('environment'));\n};\nOrganizationController.ɵprov = /* @__PURE__ */i0.ɵɵdefineInjectable({\n  token: OrganizationController,\n  factory: OrganizationController.ɵfac,\n  providedIn: 'root'\n});\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(OrganizationController, [{\n    type: Injectable,\n    args: [{\n      providedIn: 'root'\n    }]\n  }], function () {\n    return [{\n      type: i1.HttpClient\n    }, {\n      type: undefined,\n      decorators: [{\n        type: Inject,\n        args: ['environment']\n      }]\n    }];\n  }, null);\n})();\nclass OrganizationService {\n  constructor(router, storageService, applicationService, organizationController, facilityService) {\n    this.router = router;\n    this.storageService = storageService;\n    this.applicationService = applicationService;\n    this.organizationController = organizationController;\n    this.facilityService = facilityService;\n    this.organizationM = new Organization();\n    this.facilityM = new Facility();\n    this.redirectUrl = '';\n  }\n  orgSwitch(orgID, orgSwitchRedirect) {\n    let applicationKeyID;\n    let token;\n    let userID;\n    let queryParam;\n    let currentUrl = '';\n    applicationKeyID = this.storageService.getStorage('applicationKeyID');\n    token = this.storageService.getStorage('token');\n    userID = this.storageService.getStorage('userID');\n    if (orgSwitchRedirect == 'NO') {\n      currentUrl = '';\n    } else {\n      currentUrl = this.router.url;\n    }\n    queryParam = `login?token=${token}&userID=${userID}&orgID=${orgID}&redirectUrl=${currentUrl}`;\n    window.location.href = this.applicationService.appRedirect(applicationKeyID) + queryParam;\n  }\n  getOrganizationByID(orgID) {\n    return __awaiter(this, void 0, void 0, function* () {\n      let organizationM;\n      let organization = new Organization();\n      try {\n        organizationM = yield this.organizationController.getOrganizationByID(orgID).toPromise();\n        if (organizationM) {\n          return organizationM;\n        } else {\n          return organization;\n        }\n      } catch (error) {\n        console.error('Error -', error);\n        return organization;\n      }\n    });\n  }\n  getOrgByAccess(userID) {\n    return __awaiter(this, void 0, void 0, function* () {\n      let orgAccessM;\n      try {\n        orgAccessM = yield this.organizationController.getOrgByAccess(userID).toPromise();\n        return orgAccessM;\n      } catch (error) {\n        console.error('Error -', error);\n      }\n    });\n  }\n  getOrganizations(orgID) {\n    return __awaiter(this, void 0, void 0, function* () {\n      let orgAccessM;\n      try {\n        orgAccessM = yield this.organizationController.getOrganizations(orgID).toPromise();\n        return orgAccessM;\n      } catch (error) {\n        console.error('Error -', error);\n      }\n    });\n  }\n  getOrganizationsByType(orgID, type) {\n    return __awaiter(this, void 0, void 0, function* () {\n      let orgAccessM;\n      try {\n        orgAccessM = yield this.organizationController.getOrganizationsByType(orgID, type).toPromise();\n        return orgAccessM;\n      } catch (error) {\n        console.error('Error in getOrganizationsByType -', error);\n      }\n    });\n  }\n  getOrgSiteWithUserAccess(userID) {\n    return __awaiter(this, void 0, void 0, function* () {\n      let orgSiteAccessM;\n      try {\n        orgSiteAccessM = yield this.organizationController.getOrgSiteWithUserAccess(userID).toPromise();\n        return orgSiteAccessM;\n      } catch (error) {\n        console.error('Error -', error);\n      }\n    });\n  }\n  getOrgStatus(status) {\n    switch (status) {\n      case OrganizationStatus.ACTIVE:\n        return 'Active';\n      case OrganizationStatus.INACTIVE:\n        return 'Inactive';\n      case OrganizationStatus.PENDING_SETUP:\n        return 'Pending setup';\n      default:\n        console.log('Invalid organization status');\n    }\n  }\n  getOrgTimezone() {\n    return __awaiter(this, void 0, void 0, function* () {\n      this.currentOrgType = this.storageService.getStorage('currentOrgType');\n      this.rootOrgID = this.storageService.getStorage('rootOrgID');\n      this.currentOrgID = this.storageService.getStorage('currentOrgID');\n      let timezone = null;\n      if (this.currentOrgType == OrgType.ORGANIZATION) {\n        this.organizationM = yield this.getOrganizationByID(this.currentOrgID);\n        if (this.organizationM.timeZoneName) {\n          timezone = this.organizationM.timeZoneName;\n        }\n      } else if (this.currentOrgType == OrgType.SITE) {\n        this.facilityM = yield this.facilityService.getFacilityByID(this.rootOrgID, this.currentOrgID);\n        if (this.facilityM.timeZoneName) {\n          timezone = this.facilityM.timeZoneName;\n        } else {\n          this.organizationM = yield this.getOrganizationByID(this.rootOrgID);\n          if (this.organizationM.timeZoneName) {\n            timezone = this.organizationM.timeZoneName;\n          }\n        }\n      }\n      return timezone;\n    });\n  }\n}\nOrganizationService.ɵfac = function OrganizationService_Factory(t) {\n  return new (t || OrganizationService)(i0.ɵɵinject(i1$1.Router), i0.ɵɵinject(i2.StorageService), i0.ɵɵinject(i3.ApplicationService), i0.ɵɵinject(OrganizationController), i0.ɵɵinject(i5.FacilityService));\n};\nOrganizationService.ɵprov = /* @__PURE__ */i0.ɵɵdefineInjectable({\n  token: OrganizationService,\n  factory: OrganizationService.ɵfac,\n  providedIn: 'root'\n});\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(OrganizationService, [{\n    type: Injectable,\n    args: [{\n      providedIn: 'root'\n    }]\n  }], function () {\n    return [{\n      type: i1$1.Router\n    }, {\n      type: i2.StorageService\n    }, {\n      type: i3.ApplicationService\n    }, {\n      type: OrganizationController\n    }, {\n      type: i5.FacilityService\n    }];\n  }, null);\n})();\nclass OrgTypeGuard {\n  constructor(router, storageService) {\n    this.router = router;\n    this.storageService = storageService;\n  }\n  canActivate(route, state) {\n    let currentOrgType;\n    let orgTypeAccess;\n    currentOrgType = this.storageService.getStorage('currentOrgType');\n    orgTypeAccess = route.data.orgTypeAccess;\n    if (currentOrgType == OrgType.SITE && (orgTypeAccess == OrgSiteAccessType.SITE || orgTypeAccess == OrgSiteAccessType.ORG_SITE)) {\n      return true;\n    } else if (currentOrgType == OrgType.ORGANIZATION && (orgTypeAccess == OrgSiteAccessType.ORG || orgTypeAccess == OrgSiteAccessType.ORG_SITE)) {\n      return true;\n    } else {\n      return this.router.navigate(['/']);\n      return false;\n    }\n  }\n}\nOrgTypeGuard.ɵfac = function OrgTypeGuard_Factory(t) {\n  return new (t || OrgTypeGuard)(i0.ɵɵinject(i1$1.Router), i0.ɵɵinject(i2.StorageService));\n};\nOrgTypeGuard.ɵprov = /* @__PURE__ */i0.ɵɵdefineInjectable({\n  token: OrgTypeGuard,\n  factory: OrgTypeGuard.ɵfac,\n  providedIn: 'root'\n});\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(OrgTypeGuard, [{\n    type: Injectable,\n    args: [{\n      providedIn: 'root'\n    }]\n  }], function () {\n    return [{\n      type: i1$1.Router\n    }, {\n      type: i2.StorageService\n    }];\n  }, null);\n})();\n\n/*\n * Public API Surface of organization-service\n */\n\n/**\n * Generated bundle index. Do not edit.\n */\n\nexport { OrgAccess, OrgSiteAccess, OrgSiteAccessType, OrgStatus, OrgType, OrgTypeGuard, Organization, OrganizationController, OrganizationService, OrganizationServiceComponent, OrganizationServiceModule, OrganizationServiceService, OrganizationStatus };","map":{"version":3,"names":["i0","Injectable","Component","NgModule","Inject","i1","HttpParams","__awaiter","i5","Facility","i1$1","i2","i3","OrganizationServiceService","constructor","ɵfac","OrganizationServiceService_Factory","t","ɵprov","ɵɵdefineInjectable","token","factory","providedIn","ngDevMode","ɵsetClassMetadata","type","args","OrganizationServiceComponent","ngOnInit","OrganizationServiceComponent_Factory","ɵcmp","ɵɵdefineComponent","selectors","decls","vars","template","OrganizationServiceComponent_Template","rf","ctx","ɵɵelementStart","ɵɵtext","ɵɵelementEnd","encapsulation","selector","styles","OrganizationServiceModule","forRoot","environment","ngModule","providers","provide","useValue","OrganizationServiceModule_Factory","ɵmod","ɵɵdefineNgModule","ɵinj","ɵɵdefineInjector","imports","declarations","exports","OrgType","OrgStatus","OrgSiteAccessType","OrganizationStatus","Organization","OrgAccess","OrgSiteAccess","OrganizationController","http","getOrganizationByID","orgID","get","ORGANIZATION_API_URL","getOrgByAccess","userID","getOrganizations","getOrganizationsByType","params","append","getOrgSiteWithUserAccess","OrganizationController_Factory","ɵɵinject","HttpClient","undefined","decorators","OrganizationService","router","storageService","applicationService","organizationController","facilityService","organizationM","facilityM","redirectUrl","orgSwitch","orgSwitchRedirect","applicationKeyID","queryParam","currentUrl","getStorage","url","window","location","href","appRedirect","organization","toPromise","error","console","orgAccessM","orgSiteAccessM","getOrgStatus","status","ACTIVE","INACTIVE","PENDING_SETUP","log","getOrgTimezone","currentOrgType","rootOrgID","currentOrgID","timezone","ORGANIZATION","timeZoneName","SITE","getFacilityByID","OrganizationService_Factory","Router","StorageService","ApplicationService","FacilityService","OrgTypeGuard","canActivate","route","state","orgTypeAccess","data","ORG_SITE","ORG","navigate","OrgTypeGuard_Factory"],"sources":["/home/silori/projects/gitClones/netzero-ui/library/organization-service/fesm2015/library-organization-service.js"],"sourcesContent":["import * as i0 from '@angular/core';\nimport { Injectable, Component, NgModule, Inject } from '@angular/core';\nimport * as i1 from '@angular/common/http';\nimport { HttpParams } from '@angular/common/http';\nimport { __awaiter } from 'tslib';\nimport * as i5 from '@library/facility-service';\nimport { Facility } from '@library/facility-service';\nimport * as i1$1 from '@angular/router';\nimport * as i2 from '@library/storage-service';\nimport * as i3 from '@library/application-service';\n\nclass OrganizationServiceService {\n    constructor() { }\n}\nOrganizationServiceService.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"12.2.17\", ngImport: i0, type: OrganizationServiceService, deps: [], target: i0.ɵɵFactoryTarget.Injectable });\nOrganizationServiceService.ɵprov = i0.ɵɵngDeclareInjectable({ minVersion: \"12.0.0\", version: \"12.2.17\", ngImport: i0, type: OrganizationServiceService, providedIn: 'root' });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"12.2.17\", ngImport: i0, type: OrganizationServiceService, decorators: [{\n            type: Injectable,\n            args: [{\n                    providedIn: 'root'\n                }]\n        }], ctorParameters: function () { return []; } });\n\nclass OrganizationServiceComponent {\n    constructor() { }\n    ngOnInit() {\n    }\n}\nOrganizationServiceComponent.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"12.2.17\", ngImport: i0, type: OrganizationServiceComponent, deps: [], target: i0.ɵɵFactoryTarget.Component });\nOrganizationServiceComponent.ɵcmp = i0.ɵɵngDeclareComponent({ minVersion: \"12.0.0\", version: \"12.2.17\", type: OrganizationServiceComponent, selector: \"lib-organization-service\", ngImport: i0, template: `\n    <p>\n      organization-service works!\n    </p>\n  `, isInline: true });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"12.2.17\", ngImport: i0, type: OrganizationServiceComponent, decorators: [{\n            type: Component,\n            args: [{\n                    selector: 'lib-organization-service',\n                    template: `\n    <p>\n      organization-service works!\n    </p>\n  `,\n                    styles: []\n                }]\n        }], ctorParameters: function () { return []; } });\n\nclass OrganizationServiceModule {\n    static forRoot(environment) {\n        return {\n            ngModule: OrganizationServiceModule,\n            providers: [\n                { provide: 'environment', useValue: environment }\n            ]\n        };\n    }\n}\nOrganizationServiceModule.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"12.2.17\", ngImport: i0, type: OrganizationServiceModule, deps: [], target: i0.ɵɵFactoryTarget.NgModule });\nOrganizationServiceModule.ɵmod = i0.ɵɵngDeclareNgModule({ minVersion: \"12.0.0\", version: \"12.2.17\", ngImport: i0, type: OrganizationServiceModule, declarations: [OrganizationServiceComponent], exports: [OrganizationServiceComponent] });\nOrganizationServiceModule.ɵinj = i0.ɵɵngDeclareInjector({ minVersion: \"12.0.0\", version: \"12.2.17\", ngImport: i0, type: OrganizationServiceModule, imports: [[]] });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"12.2.17\", ngImport: i0, type: OrganizationServiceModule, decorators: [{\n            type: NgModule,\n            args: [{\n                    declarations: [\n                        OrganizationServiceComponent\n                    ],\n                    imports: [],\n                    exports: [\n                        OrganizationServiceComponent\n                    ]\n                }]\n        }] });\n\nvar OrgType;\n(function (OrgType) {\n    OrgType[\"SITE\"] = \"SITE\";\n    OrgType[\"ORGANIZATION\"] = \"ORG\";\n    OrgType[\"NETZERO_ADMIN\"] = \"NETZEROADMIN\";\n    OrgType[\"ORGANIZAION_GROUP\"] = \"ORG_GROUP\";\n})(OrgType || (OrgType = {}));\nvar OrgStatus;\n(function (OrgStatus) {\n    OrgStatus[\"ACTIVE_STATUS\"] = \"ACTIVE\";\n    OrgStatus[\"INACTIVE_STATUS\"] = \"INACTIVE\";\n    OrgStatus[\"SETUP_PENDING_STATUS\"] = \"SETUP_PENDING\";\n})(OrgStatus || (OrgStatus = {}));\nvar OrgSiteAccessType;\n(function (OrgSiteAccessType) {\n    OrgSiteAccessType[\"ORG\"] = \"ORG\";\n    OrgSiteAccessType[\"SITE\"] = \"SITE\";\n    OrgSiteAccessType[\"ORG_SITE\"] = \"ORG_SITE\";\n})(OrgSiteAccessType || (OrgSiteAccessType = {}));\nvar OrganizationStatus;\n(function (OrganizationStatus) {\n    OrganizationStatus[\"ACTIVE\"] = \"ACTIVE\";\n    OrganizationStatus[\"INACTIVE\"] = \"INACTIVE\";\n    OrganizationStatus[\"PENDING_SETUP\"] = \"PENDING_SETUP\";\n})(OrganizationStatus || (OrganizationStatus = {}));\n\nclass Organization {\n}\nclass OrgAccess {\n}\nclass OrgSiteAccess {\n}\n\nclass OrganizationController {\n    constructor(http, environment) {\n        this.http = http;\n        this.environment = environment;\n    }\n    getOrganizationByID(orgID) {\n        return this.http.get(`${this.environment.ORGANIZATION_API_URL}organizations/${orgID}`);\n    }\n    getOrgByAccess(userID) {\n        return this.http.get(`${this.environment.ORGANIZATION_API_URL}users/${userID}/organizations-sites/access`);\n    }\n    getOrganizations(orgID) {\n        return this.http.get(`${this.environment.ORGANIZATION_API_URL}organizations/${orgID}/org-facility`);\n    }\n    getOrganizationsByType(orgID, type) {\n        let params = new HttpParams();\n        params = params.append('type', type);\n        return this.http.get(`${this.environment.ORGANIZATION_API_URL}organizations/${orgID}/org-facility`, { params: params });\n    }\n    getOrgSiteWithUserAccess(userID) {\n        return this.http.get(`${this.environment.ORGANIZATION_API_URL}users/${userID}/organizations-sites/access-new`);\n    }\n}\nOrganizationController.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"12.2.17\", ngImport: i0, type: OrganizationController, deps: [{ token: i1.HttpClient }, { token: 'environment' }], target: i0.ɵɵFactoryTarget.Injectable });\nOrganizationController.ɵprov = i0.ɵɵngDeclareInjectable({ minVersion: \"12.0.0\", version: \"12.2.17\", ngImport: i0, type: OrganizationController, providedIn: 'root' });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"12.2.17\", ngImport: i0, type: OrganizationController, decorators: [{\n            type: Injectable,\n            args: [{\n                    providedIn: 'root'\n                }]\n        }], ctorParameters: function () { return [{ type: i1.HttpClient }, { type: undefined, decorators: [{\n                    type: Inject,\n                    args: ['environment']\n                }] }]; } });\n\nclass OrganizationService {\n    constructor(router, storageService, applicationService, organizationController, facilityService) {\n        this.router = router;\n        this.storageService = storageService;\n        this.applicationService = applicationService;\n        this.organizationController = organizationController;\n        this.facilityService = facilityService;\n        this.organizationM = new Organization();\n        this.facilityM = new Facility();\n        this.redirectUrl = '';\n    }\n    orgSwitch(orgID, orgSwitchRedirect) {\n        let applicationKeyID;\n        let token;\n        let userID;\n        let queryParam;\n        let currentUrl = '';\n        applicationKeyID = this.storageService.getStorage('applicationKeyID');\n        token = this.storageService.getStorage('token');\n        userID = this.storageService.getStorage('userID');\n        if (orgSwitchRedirect == 'NO') {\n            currentUrl = '';\n        }\n        else {\n            currentUrl = this.router.url;\n        }\n        queryParam = `login?token=${token}&userID=${userID}&orgID=${orgID}&redirectUrl=${currentUrl}`;\n        window.location.href = this.applicationService.appRedirect(applicationKeyID) + queryParam;\n    }\n    getOrganizationByID(orgID) {\n        return __awaiter(this, void 0, void 0, function* () {\n            let organizationM;\n            let organization = new Organization();\n            try {\n                organizationM = yield this.organizationController.getOrganizationByID(orgID).toPromise();\n                if (organizationM) {\n                    return organizationM;\n                }\n                else {\n                    return organization;\n                }\n            }\n            catch (error) {\n                console.error('Error -', error);\n                return organization;\n            }\n        });\n    }\n    getOrgByAccess(userID) {\n        return __awaiter(this, void 0, void 0, function* () {\n            let orgAccessM;\n            try {\n                orgAccessM = yield this.organizationController.getOrgByAccess(userID).toPromise();\n                return orgAccessM;\n            }\n            catch (error) {\n                console.error('Error -', error);\n            }\n        });\n    }\n    getOrganizations(orgID) {\n        return __awaiter(this, void 0, void 0, function* () {\n            let orgAccessM;\n            try {\n                orgAccessM = yield this.organizationController.getOrganizations(orgID).toPromise();\n                return orgAccessM;\n            }\n            catch (error) {\n                console.error('Error -', error);\n            }\n        });\n    }\n    getOrganizationsByType(orgID, type) {\n        return __awaiter(this, void 0, void 0, function* () {\n            let orgAccessM;\n            try {\n                orgAccessM = yield this.organizationController.getOrganizationsByType(orgID, type).toPromise();\n                return orgAccessM;\n            }\n            catch (error) {\n                console.error('Error in getOrganizationsByType -', error);\n            }\n        });\n    }\n    getOrgSiteWithUserAccess(userID) {\n        return __awaiter(this, void 0, void 0, function* () {\n            let orgSiteAccessM;\n            try {\n                orgSiteAccessM = yield this.organizationController.getOrgSiteWithUserAccess(userID).toPromise();\n                return orgSiteAccessM;\n            }\n            catch (error) {\n                console.error('Error -', error);\n            }\n        });\n    }\n    getOrgStatus(status) {\n        switch (status) {\n            case OrganizationStatus.ACTIVE:\n                return 'Active';\n            case OrganizationStatus.INACTIVE:\n                return 'Inactive';\n            case OrganizationStatus.PENDING_SETUP:\n                return 'Pending setup';\n            default:\n                console.log('Invalid organization status');\n        }\n    }\n    getOrgTimezone() {\n        return __awaiter(this, void 0, void 0, function* () {\n            this.currentOrgType = this.storageService.getStorage('currentOrgType');\n            this.rootOrgID = this.storageService.getStorage('rootOrgID');\n            this.currentOrgID = this.storageService.getStorage('currentOrgID');\n            let timezone = null;\n            if (this.currentOrgType == OrgType.ORGANIZATION) {\n                this.organizationM = (yield this.getOrganizationByID(this.currentOrgID));\n                if (this.organizationM.timeZoneName) {\n                    timezone = this.organizationM.timeZoneName;\n                }\n            }\n            else if (this.currentOrgType == OrgType.SITE) {\n                this.facilityM = (yield this.facilityService.getFacilityByID(this.rootOrgID, this.currentOrgID));\n                if (this.facilityM.timeZoneName) {\n                    timezone = this.facilityM.timeZoneName;\n                }\n                else {\n                    this.organizationM = (yield this.getOrganizationByID(this.rootOrgID));\n                    if (this.organizationM.timeZoneName) {\n                        timezone = this.organizationM.timeZoneName;\n                    }\n                }\n            }\n            return timezone;\n        });\n    }\n}\nOrganizationService.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"12.2.17\", ngImport: i0, type: OrganizationService, deps: [{ token: i1$1.Router }, { token: i2.StorageService }, { token: i3.ApplicationService }, { token: OrganizationController }, { token: i5.FacilityService }], target: i0.ɵɵFactoryTarget.Injectable });\nOrganizationService.ɵprov = i0.ɵɵngDeclareInjectable({ minVersion: \"12.0.0\", version: \"12.2.17\", ngImport: i0, type: OrganizationService, providedIn: 'root' });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"12.2.17\", ngImport: i0, type: OrganizationService, decorators: [{\n            type: Injectable,\n            args: [{\n                    providedIn: 'root'\n                }]\n        }], ctorParameters: function () { return [{ type: i1$1.Router }, { type: i2.StorageService }, { type: i3.ApplicationService }, { type: OrganizationController }, { type: i5.FacilityService }]; } });\n\nclass OrgTypeGuard {\n    constructor(router, storageService) {\n        this.router = router;\n        this.storageService = storageService;\n    }\n    canActivate(route, state) {\n        let currentOrgType;\n        let orgTypeAccess;\n        currentOrgType = this.storageService.getStorage('currentOrgType');\n        orgTypeAccess = route.data.orgTypeAccess;\n        if (currentOrgType == OrgType.SITE && (orgTypeAccess == OrgSiteAccessType.SITE || orgTypeAccess == OrgSiteAccessType.ORG_SITE)) {\n            return true;\n        }\n        else if (currentOrgType == OrgType.ORGANIZATION && (orgTypeAccess == OrgSiteAccessType.ORG || orgTypeAccess == OrgSiteAccessType.ORG_SITE)) {\n            return true;\n        }\n        else {\n            return this.router.navigate(['/']);\n            return false;\n        }\n    }\n}\nOrgTypeGuard.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"12.2.17\", ngImport: i0, type: OrgTypeGuard, deps: [{ token: i1$1.Router }, { token: i2.StorageService }], target: i0.ɵɵFactoryTarget.Injectable });\nOrgTypeGuard.ɵprov = i0.ɵɵngDeclareInjectable({ minVersion: \"12.0.0\", version: \"12.2.17\", ngImport: i0, type: OrgTypeGuard, providedIn: 'root' });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"12.2.17\", ngImport: i0, type: OrgTypeGuard, decorators: [{\n            type: Injectable,\n            args: [{\n                    providedIn: 'root'\n                }]\n        }], ctorParameters: function () { return [{ type: i1$1.Router }, { type: i2.StorageService }]; } });\n\n/*\n * Public API Surface of organization-service\n */\n\n/**\n * Generated bundle index. Do not edit.\n */\n\nexport { OrgAccess, OrgSiteAccess, OrgSiteAccessType, OrgStatus, OrgType, OrgTypeGuard, Organization, OrganizationController, OrganizationService, OrganizationServiceComponent, OrganizationServiceModule, OrganizationServiceService, OrganizationStatus };\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}