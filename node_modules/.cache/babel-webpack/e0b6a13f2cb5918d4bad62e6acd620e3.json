{"ast":null,"code":"import { CommonModule } from '@angular/common';\nimport { MatDialogModule } from '@angular/material/dialog';\nimport { RouterModule } from '@angular/router';\n// tsc-library\nimport { DialogEnum, DialogResponseEnum } from '@library/tsc-common';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/material/dialog\";\n// /tsc-library\nexport let SettingChangeDialog = /*#__PURE__*/(() => {\n  class SettingChangeDialog {\n    constructor() {\n      this.DialogEnum = DialogEnum;\n      this.DialogResponseEnum = DialogResponseEnum;\n    }\n    ngOnInit() {}\n  }\n  SettingChangeDialog.ɵfac = function SettingChangeDialog_Factory(t) {\n    return new (t || SettingChangeDialog)();\n  };\n  SettingChangeDialog.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n    type: SettingChangeDialog,\n    selectors: [[\"app-setting-change-dialog\"]],\n    decls: 15,\n    vars: 7,\n    consts: [[\"mat-dialog-title\", \"\", 1, \"dialogTitle\", \"mb-0\"], [1, \"d-flex\", \"align-items-center\"], [1, \"mat-typography\", \"py-0\"], [1, \"card-body\", \"breakLine\"], [\"align\", \"end\"], [\"type\", \"button\", 1, \"btn\", \"btn-outline-danger\", \"border-0\", \"me-2\", 3, \"mat-dialog-close\"], [\"type\", \"button\", 1, \"btn\", \"btn-secondary\", \"me-2\", 3, \"mat-dialog-close\"]],\n    template: function SettingChangeDialog_Template(rf, ctx) {\n      if (rf & 1) {\n        i0.ɵɵelementStart(0, \"h6\", 0);\n        i0.ɵɵelementStart(1, \"div\", 1);\n        i0.ɵɵelementStart(2, \"strong\");\n        i0.ɵɵtext(3);\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(4, \"mat-dialog-content\", 2);\n        i0.ɵɵelementStart(5, \"div\", 3);\n        i0.ɵɵtext(6);\n        i0.ɵɵelement(7, \"br\");\n        i0.ɵɵelement(8, \"br\");\n        i0.ɵɵtext(9);\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(10, \"mat-dialog-actions\", 4);\n        i0.ɵɵelementStart(11, \"button\", 5);\n        i0.ɵɵtext(12);\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(13, \"button\", 6);\n        i0.ɵɵtext(14);\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementEnd();\n      }\n      if (rf & 2) {\n        i0.ɵɵadvance(3);\n        i0.ɵɵtextInterpolate1(\" \", \"Update organization size from SME to Enterprise?\", \" \");\n        i0.ɵɵadvance(3);\n        i0.ɵɵtextInterpolate1(\" \", \"This action will mark all existing targets as inactive. New targets will have to be created again in alignment with SBTi NetZero standard criteria. All progress against existing targets will be lost permanently. \", \" \");\n        i0.ɵɵadvance(3);\n        i0.ɵɵtextInterpolate1(\" \", \"Are you sure you want to continue?\", \" \");\n        i0.ɵɵadvance(2);\n        i0.ɵɵproperty(\"mat-dialog-close\", ctx.DialogResponseEnum.YES);\n        i0.ɵɵadvance(1);\n        i0.ɵɵtextInterpolate1(\" \", ctx.DialogResponseEnum.YES, \" \");\n        i0.ɵɵadvance(1);\n        i0.ɵɵproperty(\"mat-dialog-close\", ctx.DialogResponseEnum.CANCEL);\n        i0.ɵɵadvance(1);\n        i0.ɵɵtextInterpolate1(\" \", ctx.DialogEnum.CANCEL_DR, \" \");\n      }\n    },\n    directives: [i1.MatDialogTitle, i1.MatDialogContent, i1.MatDialogActions, i1.MatDialogClose],\n    encapsulation: 2\n  });\n  return SettingChangeDialog;\n})();\nexport let SettingChangeDialogModule = /*#__PURE__*/(() => {\n  class SettingChangeDialogModule {}\n  SettingChangeDialogModule.ɵfac = function SettingChangeDialogModule_Factory(t) {\n    return new (t || SettingChangeDialogModule)();\n  };\n  SettingChangeDialogModule.ɵmod = /*@__PURE__*/i0.ɵɵdefineNgModule({\n    type: SettingChangeDialogModule\n  });\n  SettingChangeDialogModule.ɵinj = /*@__PURE__*/i0.ɵɵdefineInjector({\n    imports: [[CommonModule, RouterModule, MatDialogModule]]\n  });\n  return SettingChangeDialogModule;\n})();","map":null,"metadata":{},"sourceType":"module"}