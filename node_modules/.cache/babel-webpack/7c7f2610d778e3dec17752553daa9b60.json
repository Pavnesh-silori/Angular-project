{"ast":null,"code":"import { HttpParams } from '@angular/common/http';\nimport { environment } from 'src/environments/environment';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/common/http\";\nexport let TimelineController = /*#__PURE__*/(() => {\n  class TimelineController {\n    constructor(http) {\n      this.http = http;\n    }\n    getTimeline(orgID, type, pageNo, pageSize) {\n      let params = new HttpParams();\n      params = params.append('pageNo', pageNo);\n      params = params.append('pageSize', pageSize);\n      return this.http.get(`${environment.CARBON_ACCOUNTING_API_URL}organizations/${orgID}/base-year/${type}/timeline`, {\n        params: params\n      });\n    }\n    getActivityDiff(rootOrgID, baseYearType, activityKeyID, activityDataID) {\n      return this.http.get(`${environment.CARBON_ACCOUNTING_API_URL}organizations/${rootOrgID}/base-year/${baseYearType}/activity/${activityKeyID}/${activityDataID}/diff`);\n    }\n    getRecalculationHistory(rootOrgID, baseYearType, pageNo, pageSize) {\n      let params = new HttpParams();\n      params = params.append('pageNo', pageNo);\n      params = params.append('pageSize', pageSize);\n      return this.http.get(`${environment.CARBON_ACCOUNTING_API_URL}organizations/${rootOrgID}/base-year/${baseYearType}/recalculation/history`, {\n        params: params\n      });\n    }\n    getRecalculationHistoryTimeline(rootOrgID, baseYearType, pageNo, pageSize, checkpointID) {\n      let params = new HttpParams();\n      params = params.append('pageNo', pageNo);\n      params = params.append('pageSize', pageSize);\n      params = params.append('checkpointID', checkpointID);\n      return this.http.get(`${environment.CARBON_ACCOUNTING_API_URL}organizations/${rootOrgID}/base-year/${baseYearType}/timeline/history`, {\n        params: params\n      });\n    }\n    getTriggerEmissionDiff(rootOrgID, baseYearType, recalculationTrigger, recalculationTriggerID, checkpointID) {\n      let params = new HttpParams();\n      params = params.append('triggerKey', recalculationTrigger);\n      params = params.append('recalculationTriggerID', recalculationTriggerID);\n      if (checkpointID != null) {\n        params = params.append('checkpointID', checkpointID);\n      }\n      return this.http.get(`${environment.CARBON_ACCOUNTING_API_URL}organizations/${rootOrgID}/base-year/${baseYearType}/timeline/recalculation-diff`, {\n        params: params\n      });\n    }\n  }\n  TimelineController.ɵfac = function TimelineController_Factory(t) {\n    return new (t || TimelineController)(i0.ɵɵinject(i1.HttpClient));\n  };\n  TimelineController.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n    token: TimelineController,\n    factory: TimelineController.ɵfac,\n    providedIn: 'root'\n  });\n  return TimelineController;\n})();","map":null,"metadata":{},"sourceType":"module"}