{"ast":null,"code":"import { __awaiter } from \"tslib\";\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@carbon/controller/base-year.controller\";\nexport let BaseYearService = /*#__PURE__*/(() => {\n  class BaseYearService {\n    constructor(baseYearController) {\n      this.baseYearController = baseYearController;\n    }\n    fourDigitYearValidator() {\n      return control => {\n        const valid = /^\\d{4}$/.test(control.value);\n        return valid ? null : {\n          invalidYear: {\n            value: control.value\n          }\n        };\n      };\n    }\n    getBaseYearEmissions(orgID, type) {\n      return __awaiter(this, void 0, void 0, function* () {\n        let baseYear;\n        try {\n          baseYear = yield this.baseYearController.getBaseYearAndEmission(orgID, type).toPromise();\n          if (baseYear) {\n            return baseYear;\n          } else {\n            return null;\n          }\n        } catch (error) {\n          console.error('Error -', error);\n          return null;\n        }\n      });\n    }\n    getSbtiBaseYearConfirmedEmission(orgID) {\n      return __awaiter(this, void 0, void 0, function* () {\n        let sbtiConfirmedEmission;\n        try {\n          sbtiConfirmedEmission = yield this.baseYearController.getSbtiBaseYearConfirmedEmission(orgID).toPromise();\n          if (sbtiConfirmedEmission) {\n            return sbtiConfirmedEmission;\n          } else {\n            return [];\n          }\n        } catch (error) {\n          console.error('Error -', error);\n          return [];\n        }\n      });\n    }\n  }\n  BaseYearService.ɵfac = function BaseYearService_Factory(t) {\n    return new (t || BaseYearService)(i0.ɵɵinject(i1.BaseYearController));\n  };\n  BaseYearService.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n    token: BaseYearService,\n    factory: BaseYearService.ɵfac,\n    providedIn: 'root'\n  });\n  return BaseYearService;\n})();","map":null,"metadata":{},"sourceType":"module"}