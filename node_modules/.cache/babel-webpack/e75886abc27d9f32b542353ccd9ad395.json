{"ast":null,"code":"import * as i0 from '@angular/core';\nimport { Injectable, Component, NgModule, Inject } from '@angular/core';\nimport * as i1 from '@library/storage-service';\nlet AuthenticationServiceService = /*#__PURE__*/(() => {\n  class AuthenticationServiceService {\n    constructor() {}\n  }\n  AuthenticationServiceService.ɵfac = function AuthenticationServiceService_Factory(t) {\n    return new (t || AuthenticationServiceService)();\n  };\n  AuthenticationServiceService.ɵprov = /* @__PURE__ */i0.ɵɵdefineInjectable({\n    token: AuthenticationServiceService,\n    factory: AuthenticationServiceService.ɵfac,\n    providedIn: 'root'\n  });\n  return AuthenticationServiceService;\n})();\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && void 0;\n})();\nlet AuthenticationServiceComponent = /*#__PURE__*/(() => {\n  class AuthenticationServiceComponent {\n    constructor() {}\n    ngOnInit() {}\n  }\n  AuthenticationServiceComponent.ɵfac = function AuthenticationServiceComponent_Factory(t) {\n    return new (t || AuthenticationServiceComponent)();\n  };\n  AuthenticationServiceComponent.ɵcmp = /* @__PURE__ */i0.ɵɵdefineComponent({\n    type: AuthenticationServiceComponent,\n    selectors: [[\"lib-authentication-service\"]],\n    decls: 2,\n    vars: 0,\n    template: function AuthenticationServiceComponent_Template(rf, ctx) {\n      if (rf & 1) {\n        i0.ɵɵelementStart(0, \"p\");\n        i0.ɵɵtext(1, \" authentication-service works! \");\n        i0.ɵɵelementEnd();\n      }\n    },\n    encapsulation: 2\n  });\n  return AuthenticationServiceComponent;\n})();\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && void 0;\n})();\nlet AuthenticationServiceModule = /*#__PURE__*/(() => {\n  class AuthenticationServiceModule {\n    static forRoot(environment) {\n      return {\n        ngModule: AuthenticationServiceModule,\n        providers: [{\n          provide: 'environment',\n          useValue: environment\n        }]\n      };\n    }\n  }\n  AuthenticationServiceModule.ɵfac = function AuthenticationServiceModule_Factory(t) {\n    return new (t || AuthenticationServiceModule)();\n  };\n  AuthenticationServiceModule.ɵmod = /* @__PURE__ */i0.ɵɵdefineNgModule({\n    type: AuthenticationServiceModule\n  });\n  AuthenticationServiceModule.ɵinj = /* @__PURE__ */i0.ɵɵdefineInjector({\n    imports: [[]]\n  });\n  return AuthenticationServiceModule;\n})();\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && void 0;\n})();\nlet AuthenticationService = /*#__PURE__*/(() => {\n  class AuthenticationService {\n    constructor(environment, storageService) {\n      this.environment = environment;\n      this.storageService = storageService;\n      this.ACCOUNT_KEY_ID = \"ACCOUNT\";\n    }\n    isLoggedIn() {\n      // return this.getStorage('token');\n      let userID = '';\n      // let netZeroA: string = '';\n      // let primaryOrgID: string = '';\n      // let defaultApp: string = '';\n      // let currentApp: string = '';\n      // let currentOrgID: string = '';\n      let token = '';\n      // let resourcePermissions: string = '';\n      // let currentOrgType: string = '';\n      userID = this.storageService.getStorage('userID');\n      // netZeroA = this.getStorage('netZeroA');\n      // primaryOrgID = this.getStorage('primaryOrgID');\n      // defaultApp = this.getStorage('defaultApp');\n      // currentApp = this.getStorage('currentApp');\n      // currentOrgID = this.getStorage('currentOrgID');\n      token = this.storageService.getStorage('token');\n      // resourcePermissions = this.getStorage('resourcePermissions');\n      // currentOrgType = this.getStorage('currentOrgType');\n      // console.log('userID', userID);\n      // console.log('netZeroA', netZeroA);\n      // console.log('primaryOrgID', primaryOrgID);\n      // console.log('defaultApp', defaultApp);\n      // console.log('currentApp', currentApp);\n      // console.log('currentOrgID', currentOrgID);\n      // console.log('token', token);\n      // console.log('resourcePermissions', resourcePermissions);\n      // console.log('currentOrgType', currentOrgType);\n      // let userIDLength = userID.length;\n      // let netZeroALength = netZeroA.length;\n      // let primaryOrgIDLength = primaryOrgID.length;\n      // let defaultAppLength = defaultApp.length;\n      // let currentAppLength = currentApp.length;\n      // let currentOrgIDLength = currentOrgID.length;\n      // let tokenLength = token.length;\n      // let permissionsLength = resourcePermissions.length;\n      // let currentOrgTypeLength = currentOrgType.length;\n      if (userID == 'undefined' ||\n      // netZeroA == 'undefined' ||\n      // primaryOrgID == 'undefined' ||\n      // defaultApp == 'undefined' ||\n      // currentApp == 'undefined' ||\n      // currentOrgID == 'undefined' ||\n      token == 'undefined' ||\n      // resourcePermissions == 'undefined' ||\n      // currentOrgType == 'undefined' ||\n      userID == 'null' ||\n      // netZeroA == 'null' ||\n      // primaryOrgID == 'null' ||\n      // defaultApp == 'null' ||\n      // currentApp == 'null' ||\n      // currentOrgID == 'null' ||\n      token == 'null' ||\n      // resourcePermissions == 'null' ||\n      // currentOrgType == 'null' ||\n      userID == null ||\n      // netZeroA == null ||\n      // primaryOrgID == null ||\n      // defaultApp == null ||\n      // currentApp == null ||\n      // currentOrgID == null ||\n      token == null ||\n      // resourcePermissions == null ||\n      // currentOrgType == null ||\n      userID == '' ||\n      // netZeroA == '' ||\n      // primaryOrgID == '' ||\n      // defaultApp == '' ||\n      // currentApp == '' ||\n      // currentOrgID == '' ||\n      token == ''\n      // resourcePermissions == '' ||\n      // currentOrgType == ''\n      // userIDLength == 0 ||\n      // netZeroALength == 0 ||\n      // primaryOrgIDLength == 0 ||\n      // defaultAppLength == 0 ||\n      // currentAppLength == 0 ||\n      // currentOrgIDLength == 0 ||\n      // tokenLength == 0 ||\n      // permissionsLength == 0 ||\n      // currentOrgTypeLength == 0 \n      ) {\n        return false;\n      } else {\n        return true;\n      }\n    }\n    logout(redirectUrl, pageUrl, action, applicationKeyID = '') {\n      localStorage.clear();\n      sessionStorage.clear();\n      if (applicationKeyID != this.ACCOUNT_KEY_ID && action == 'interceptor') {\n        window.location.href = `${this.environment.ACCOUNT_URL}login?redirectUrl=${redirectUrl}&pageUrl=${pageUrl}`;\n      } else {\n        window.location.href = `${this.environment.ACCOUNT_URL}login?redirectUrl=${redirectUrl}&pageUrl=${pageUrl}&action=${action}`;\n      }\n    }\n  }\n  AuthenticationService.ɵfac = function AuthenticationService_Factory(t) {\n    return new (t || AuthenticationService)(i0.ɵɵinject('environment'), i0.ɵɵinject(i1.StorageService));\n  };\n  AuthenticationService.ɵprov = /* @__PURE__ */i0.ɵɵdefineInjectable({\n    token: AuthenticationService,\n    factory: AuthenticationService.ɵfac,\n    providedIn: 'root'\n  });\n  return AuthenticationService;\n})();\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && void 0;\n})();\nlet AuthGuard = /*#__PURE__*/(() => {\n  class AuthGuard {\n    constructor(authenticationService) {\n      this.authenticationService = authenticationService;\n    }\n    canActivate(route, state) {\n      if (this.authenticationService.isLoggedIn()) {\n        return true;\n      } else {\n        let appURL;\n        // this.activatedRoute.data.subscribe(data => {\n        //     console.log('data -', data);\n        //     appURL = data.appURL;\n        // });\n        appURL = route.data.appURL;\n        this.authenticationService.logout(appURL + 'login', state.url, '');\n        return false;\n      }\n    }\n  }\n  AuthGuard.ɵfac = function AuthGuard_Factory(t) {\n    return new (t || AuthGuard)(i0.ɵɵinject(AuthenticationService));\n  };\n  AuthGuard.ɵprov = /* @__PURE__ */i0.ɵɵdefineInjectable({\n    token: AuthGuard,\n    factory: AuthGuard.ɵfac,\n    providedIn: 'root'\n  });\n  return AuthGuard;\n})();\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && void 0;\n})();\n\n/*\n * Public API Surface of authentication-service\n */\n\n/**\n * Generated bundle index. Do not edit.\n */\n\nexport { AuthGuard, AuthenticationService, AuthenticationServiceComponent, AuthenticationServiceModule, AuthenticationServiceService };\n//# sourceMappingURL=library-authentication-service.js.map","map":null,"metadata":{},"sourceType":"module"}