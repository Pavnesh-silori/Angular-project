{"ast":null,"code":"import { Validators } from '@angular/forms';\nimport { MAT_DIALOG_DATA } from '@angular/material/dialog';\nimport { CalculationMethodEnum, NearTermEnum, OrgSizeEnum, SBTiTargetEnum, StatusEnum, StatusList } from '@carbon/enum/sbti.enum';\nimport { PercentageEnum } from '@carbon/enum/percentage.enum';\nimport { BaseYearEnum } from '@carbon/enum/base-year.enum';\n// tsc-library\nimport { ToastrColor } from '@library/toastr-service';\nimport { ButtonLabelEnum, COMMON_CONSTANT, DialogEnum, InvalidForm, MaterialFormFieldAppearance } from '@library/tsc-common';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/forms\";\nimport * as i2 from \"../../../../target.utility\";\nimport * as i3 from \"@library/storage-service\";\nimport * as i4 from \"@angular/material/dialog\";\nimport * as i5 from \"../../../target.service\";\nimport * as i6 from \"@carbon/controller/sbti.controller\";\nimport * as i7 from \"@carbon/controller/base-year.controller\";\nimport * as i8 from \"@library/toastr-service\";\nimport * as i9 from \"@angular/material/button\";\nimport * as i10 from \"@angular/material/tooltip\";\nimport * as i11 from \"@angular/material/card\";\nimport * as i12 from \"@angular/material/form-field\";\nimport * as i13 from \"@angular/material/input\";\nimport * as i14 from \"@angular/common\";\nimport * as i15 from \"@angular/material/select\";\nimport * as i16 from \"@angular/material/core\";\nfunction MaintenanceComponent_mat_error_25_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"mat-error\");\n    i0.ɵɵtext(1, \" Field is mandatory. \");\n    i0.ɵɵelementEnd();\n  }\n}\nfunction MaintenanceComponent_ng_container_26_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementContainer(0);\n  }\n}\nfunction MaintenanceComponent_ng_container_27_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementContainer(0);\n  }\n}\nfunction MaintenanceComponent_ng_container_28_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementContainer(0);\n  }\n}\nfunction MaintenanceComponent_mat_option_34_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"mat-option\", 30);\n    i0.ɵɵtext(1);\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const zeroEmissionYears_r16 = ctx.$implicit;\n    i0.ɵɵproperty(\"value\", zeroEmissionYears_r16[\"year\"]);\n    i0.ɵɵadvance(1);\n    i0.ɵɵtextInterpolate1(\" \", zeroEmissionYears_r16[\"year\"], \" \");\n  }\n}\nfunction MaintenanceComponent_ng_container_35_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementContainer(0);\n  }\n}\nfunction MaintenanceComponent_mat_error_41_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"mat-error\");\n    i0.ɵɵtext(1, \" Field is mandatory. \");\n    i0.ɵɵelementEnd();\n  }\n}\nfunction MaintenanceComponent_mat_error_42_ng_container_1_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementContainerStart(0);\n    i0.ɵɵtext(1, \" Total reduction can not be negative \");\n    i0.ɵɵelementContainerEnd();\n  }\n}\nfunction MaintenanceComponent_mat_error_42_ng_template_2_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵtext(0, \" Total reduction can not be less than 42% \");\n  }\n}\nfunction MaintenanceComponent_mat_error_42_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"mat-error\");\n    i0.ɵɵtemplate(1, MaintenanceComponent_mat_error_42_ng_container_1_Template, 2, 0, \"ng-container\", 31);\n    i0.ɵɵtemplate(2, MaintenanceComponent_mat_error_42_ng_template_2_Template, 1, 0, \"ng-template\", null, 32, i0.ɵɵtemplateRefExtractor);\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const _r18 = i0.ɵɵreference(3);\n    const ctx_r7 = i0.ɵɵnextContext();\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngIf\", ctx_r7.netzero)(\"ngIfElse\", _r18);\n  }\n}\nfunction MaintenanceComponent_mat_error_43_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"mat-error\");\n    i0.ɵɵtext(1, \" Total reduction can not exceed 100% \");\n    i0.ɵɵelementEnd();\n  }\n}\nfunction MaintenanceComponent_ng_container_44_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementContainer(0);\n  }\n}\nfunction MaintenanceComponent_ng_container_45_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementContainer(0);\n  }\n}\nfunction MaintenanceComponent_mat_option_52_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"mat-option\", 30);\n    i0.ɵɵtext(1);\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const status_r20 = ctx.$implicit;\n    i0.ɵɵproperty(\"value\", status_r20.value);\n    i0.ɵɵadvance(1);\n    i0.ɵɵtextInterpolate1(\" \", status_r20.view, \" \");\n  }\n}\nfunction MaintenanceComponent_ng_template_56_span_4_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"span\");\n    i0.ɵɵtext(1);\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const value_r22 = i0.ɵɵnextContext().value;\n    i0.ɵɵadvance(1);\n    i0.ɵɵtextInterpolate1(\" \", value_r22, \" \");\n  }\n}\nfunction MaintenanceComponent_ng_template_56_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\", 33);\n    i0.ɵɵelementStart(1, \"div\", 34);\n    i0.ɵɵtext(2);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(3, \"div\", 35);\n    i0.ɵɵtemplate(4, MaintenanceComponent_ng_template_56_span_4_Template, 2, 1, \"span\", 31);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const title_r21 = ctx.title;\n    const value_r22 = ctx.value;\n    i0.ɵɵnextContext();\n    const _r14 = i0.ɵɵreference(59);\n    i0.ɵɵadvance(2);\n    i0.ɵɵtextInterpolate1(\" \", title_r21, \" \");\n    i0.ɵɵadvance(2);\n    i0.ɵɵproperty(\"ngIf\", value_r22)(\"ngIfElse\", _r14);\n  }\n}\nfunction MaintenanceComponent_ng_template_58_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"span\", 36);\n    i0.ɵɵtext(1);\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const ctx_r15 = i0.ɵɵnextContext();\n    i0.ɵɵadvance(1);\n    i0.ɵɵtextInterpolate1(\" \", ctx_r15.COMMON_CONSTANT.HYPHEN, \" \");\n  }\n}\nconst _c0 = function () {\n  return {\n    title: \"Target type\",\n    value: \"Science based target\"\n  };\n};\nconst _c1 = function () {\n  return {\n    title: \"Target option\",\n    value: \"Near term maintenance target\"\n  };\n};\nconst _c2 = function () {\n  return {\n    title: \"Scope coverage\",\n    value: \"Scope 1 & 2\"\n  };\n};\nconst _c3 = function (a1) {\n  return {\n    title: \"Target year\",\n    value: a1\n  };\n};\nconst _c4 = function (a0, a1) {\n  return {\n    title: a0,\n    value: a1\n  };\n};\nconst _c5 = function (a1) {\n  return {\n    title: \"Exclude emissions(%)\",\n    value: a1\n  };\n};\n// /tsc-library\nexport let MaintenanceComponent = /*#__PURE__*/(() => {\n  class MaintenanceComponent {\n    constructor(formBuilder, targetUtility, storageUtility, dialogRef, data, targetService, sbtiController, baseYearController, toasterService) {\n      this.formBuilder = formBuilder;\n      this.targetUtility = targetUtility;\n      this.storageUtility = storageUtility;\n      this.dialogRef = dialogRef;\n      this.data = data;\n      this.targetService = targetService;\n      this.sbtiController = sbtiController;\n      this.baseYearController = baseYearController;\n      this.toasterService = toasterService;\n      this.MaterialFormFieldAppearance = MaterialFormFieldAppearance;\n      this.ButtonLabelEnum = ButtonLabelEnum;\n      this.COMMON_CONSTANT = COMMON_CONSTANT;\n      this.NearTerm = NearTermEnum;\n      this.statusList = StatusList;\n      this.SBTiTarget = SBTiTargetEnum;\n      this.baseYear = null;\n      this.netzero = false;\n      this.manitenanceLabel = '';\n      this.isUpdate = false;\n      this.checkcontiguous = () => {\n        let contiguous = false;\n        let firstYear = this.zeroEmissionYear[0];\n        this.zeroEmissionYear.forEach((year, index) => contiguous = year - firstYear == index);\n        return contiguous;\n      };\n      this.isNetZero = baseYear => {\n        this.netzero = false;\n        let maintenanceBase = this.zeroEmissionYear.find(zem => zem['year'] == baseYear);\n        this.totalReductionPctAC.setValidators(Validators.min(NearTermEnum.MIN_TOTAL_REDUCTION_PERCENTAGE));\n        if (maintenanceBase['scope1Emission'] != 0) {\n          this.manitenanceLabel = 'Scope 1 ';\n        } else if (maintenanceBase['scope2Emission'] != 0) {\n          this.manitenanceLabel = 'Scope 2 ';\n        } else {\n          this.netzero = true;\n          this.manitenanceLabel = '';\n          this.totalReductionPctAC.setValidators(Validators.min(0));\n        }\n        return this.netzero;\n      };\n      this.errorHandling = (control, error) => {\n        return this.targetFG.get(control).hasError(error);\n      };\n    }\n    ngOnInit() {\n      this.currentOrgID = this.storageUtility.getStorage('currentOrgID');\n      this.targetFGInit();\n      this.getSBTiSettings();\n      this.getSBTiZeroEmissionYears();\n    }\n    ngAfterViewInit() {\n      var _a;\n      if ((_a = this.data) === null || _a === void 0 ? void 0 : _a['targetID']) {\n        this.isUpdate = true;\n        this.targetID = this.data['targetID'];\n        this.getTargetByID(this.targetID);\n      }\n    }\n    targetFGInit() {\n      this.targetFG = this.formBuilder.group({\n        name: [NearTermEnum.DEFAULT_MAINTENANCE_TARGET_NAME, [Validators.required]],\n        baseYear: [, [Validators.required]],\n        targetType: [NearTermEnum.NEAR_TERM_MAINTENANCE],\n        targetYear: [NearTermEnum.MAX_TARGET_YEAR, [Validators.required, Validators.max(NearTermEnum.MAX_TARGET_YEAR)]],\n        totalReductionPct: [, [Validators.required, Validators.min(NearTermEnum.MIN_TOTAL_REDUCTION_PERCENTAGE), Validators.max(PercentageEnum.MAX_PERCENTAGE)]],\n        excludedEmissionS1S2Pct: [SBTiTargetEnum.DEFAULT_EXCLUDED_EMISSION_PCT],\n        excludedEmissionS3Pct: [SBTiTargetEnum.DEFAULT_EXCLUDED_EMISSION_PCT],\n        status: [StatusEnum.PENDING, [Validators.required]],\n        orgSize: [OrgSizeEnum.SME],\n        calculationMethod: [CalculationMethodEnum.CROSS_SECTOR_ABSOLUTE_REDUCTION],\n        scope: [[1, 2], Validators.required]\n      });\n      this.baseYearAC.valueChanges.subscribe(baseYear => {\n        if (!this.baseYearAC.invalid) this.totalReductionFn(baseYear);\n      });\n      this.totalReductionPctAC.valueChanges.subscribe(totalReduction => {\n        if (!this.totalReductionPctAC.invalid) this.annualReduction = parseFloat((totalReduction / this.targetPeriod).toFixed(2));\n      });\n    }\n    get baseYearAC() {\n      return this.targetFG.get('baseYear');\n    }\n    get targetYearAC() {\n      return this.targetFG.get('targetYear');\n    }\n    get totalReductionPctAC() {\n      return this.targetFG.get('totalReductionPct');\n    }\n    getTargetByID(targetID) {\n      this.sbtiController.getTargetByID(this.currentOrgID, targetID).subscribe(target => {\n        this.target = target;\n        this.targetService.patchData(this.targetFG, this.target);\n        this.targetFG.get('scope').patchValue(this.target.scope.map(scope => scope.id));\n      });\n    }\n    totalReductionFn(baseYear) {\n      if (this.isNetZero(baseYear)) {\n        this.totalReductionPctAC.patchValue(0);\n        this.annualReduction = 0;\n        return;\n      }\n      this.targetPeriod = NearTermEnum.MAX_TARGET_YEAR - baseYear;\n      let calculatedTotalReduction = NearTermEnum.TOTAL_REDUCTION_MULTIPLIER_CONST * this.targetPeriod > NearTermEnum.MIN_TOTAL_REDUCTION_PERCENTAGE ? NearTermEnum.TOTAL_REDUCTION_MULTIPLIER_CONST * this.targetPeriod : NearTermEnum.MIN_TOTAL_REDUCTION_PERCENTAGE;\n      this.totalReductionPctAC.patchValue(calculatedTotalReduction);\n      this.annualReduction = parseFloat((calculatedTotalReduction / this.targetPeriod).toFixed(2));\n    }\n    getSBTiSettings() {\n      this.sbtiController.getSbtiSettingsByOrgID(this.currentOrgID).subscribe(settings => {\n        this.sbtiSettings = settings;\n        let type = this.sbtiSettings.isBaseYearSameAsGHG ? BaseYearEnum.GHG_BASE_YEAR : BaseYearEnum.SBTI_BASE_YEAR;\n        this.getBaseYearByType(type);\n        this.targetYearAC.addValidators(Validators.min(this.sbtiSettings['sbtiBaseYear'] + 1));\n        this.totalReductionFn(NearTermEnum.MAX_TARGET_YEAR);\n      });\n    }\n    getBaseYearByType(type) {\n      this.baseYearController.getBaseYearByType(this.currentOrgID, type).subscribe(bySetup => {\n        this.baseYear = bySetup['baseYear'];\n        this.targetYearAC.addValidators(Validators.min(this.sbtiSettings['sbtiBaseYear'] + 1));\n        this.totalReductionFn(NearTermEnum.MAX_TARGET_YEAR);\n      });\n    }\n    getSBTiZeroEmissionYears() {\n      this.sbtiController.getSBTiZeroEmissionYears(this.currentOrgID).subscribe(response => {\n        this.zeroEmissionYear = response;\n        let baseYear = '';\n        if (this.checkcontiguous()) baseYear = this.zeroEmissionYear[0]['year'];else baseYear = this.zeroEmissionYear[this.zeroEmissionYear.length - 1]['year'];\n        this.baseYearAC.patchValue(baseYear);\n        this.isNetZero(baseYear);\n      });\n    }\n    isValidForm() {\n      if (this.targetFG.invalid) {\n        console.log('invalid form - ', this.targetFG);\n        this.toasterService.openToast(InvalidForm.INVALID_FORM_TITLE, InvalidForm.INVALID_FORM_MESSAGE, ToastrColor.ERROR);\n        return;\n      }\n      if (this.isUpdate) this.updateTarget();else this.createTarget();\n    }\n    createTarget() {\n      this.sbtiController.createTarget(this.currentOrgID, this.targetFG.value).subscribe(res => {\n        this.targetUtility.created();\n        this.dialogRef.close(DialogEnum.SUCCESS_DR);\n      });\n    }\n    updateTarget() {\n      this.sbtiController.updateTarget(this.currentOrgID, this.targetID, this.targetFG.value).subscribe(res => {\n        this.targetUtility.updated();\n        this.dialogRef.close(DialogEnum.SUCCESS_DR);\n      });\n    }\n  }\n  MaintenanceComponent.ɵfac = function MaintenanceComponent_Factory(t) {\n    return new (t || MaintenanceComponent)(i0.ɵɵdirectiveInject(i1.FormBuilder), i0.ɵɵdirectiveInject(i2.TargetUtility), i0.ɵɵdirectiveInject(i3.StorageService), i0.ɵɵdirectiveInject(i4.MatDialogRef), i0.ɵɵdirectiveInject(MAT_DIALOG_DATA), i0.ɵɵdirectiveInject(i5.TargetService), i0.ɵɵdirectiveInject(i6.SbtiController), i0.ɵɵdirectiveInject(i7.BaseYearController), i0.ɵɵdirectiveInject(i8.ToastrService));\n  };\n  MaintenanceComponent.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n    type: MaintenanceComponent,\n    selectors: [[\"app-maintenance\"]],\n    decls: 60,\n    vars: 37,\n    consts: [[\"xmlns\", \"http://www.w3.org/2000/svg\", 1, \"d-none\"], [\"id\", \"info-fill\", \"fill\", \"currentColor\", \"viewBox\", \"0 0 16 16\"], [\"d\", \"M8 16A8 8 0 1 0 8 0a8 8 0 0 0 0 16zm.93-9.412-1 4.705c-.07.34.029.533.304.533.194 0 .487-.07.686-.246l-.088.416c-.287.346-.92.598-1.465.598-.703 0-1.002-.422-.808-1.319l.738-3.468c.064-.293.006-.399-.287-.47l-.451-.081.082-.381 2.29-.287zM8 5.5a1 1 0 1 1 0-2 1 1 0 0 1 0 2z\"], [1, \"card\", \"main-card\", \"cardOverwrite\"], [1, \"headerContainer\", \"p-0\"], [1, \"col-sm-11\"], [1, \"pageTitle\"], [1, \"col-sm-1\", \"mb-auto\"], [\"mat-icon-button\", \"\", \"mat-dialog-close\", \"\", \"cdkFocusInitial\", \"\", \"matTooltip\", \"Close\", \"matTooltipPosition\", \"before\", 1, \"float-end\", \"matDialogClose\"], [1, \"material-symbols-outlined\"], [1, \"container\", \"mt-4\"], [1, \"cardOverwrite\", \"p-0\"], [3, \"formGroup\", \"ngSubmit\"], [1, \"row\"], [1, \"col-sm-12\"], [1, \"col-sm-10\"], [1, \"matFieldWidth100\", 3, \"appearance\"], [1, \"formLabel\"], [\"matInput\", \"\", \"type\", \"text\", \"formControlName\", \"name\"], [4, \"ngIf\"], [4, \"ngTemplateOutlet\", \"ngTemplateOutletContext\"], [1, \"col-sm-10\", \"pt-3\"], [\"formControlName\", \"baseYear\"], [3, \"value\", 4, \"ngFor\", \"ngForOf\"], [\"matInput\", \"\", \"type\", \"number\", \"formControlName\", \"totalReductionPct\", 3, \"min\"], [\"formControlName\", \"status\"], [\"align\", \"end\"], [1, \"btn\", \"btn-success\", \"ms-2\"], [\"value\", \"\"], [\"hyphen\", \"\"], [3, \"value\"], [4, \"ngIf\", \"ngIfElse\"], [\"maintenance\", \"\"], [1, \"row\", \"pb-3\"], [1, \"col-sm-6\", \"ps-3\"], [1, \"col-sm-6\", \"fw-bold\"], [1, \"fw-bold\"]],\n    template: function MaintenanceComponent_Template(rf, ctx) {\n      if (rf & 1) {\n        i0.ɵɵnamespaceSVG();\n        i0.ɵɵelementStart(0, \"svg\", 0);\n        i0.ɵɵelementStart(1, \"symbol\", 1);\n        i0.ɵɵelement(2, \"path\", 2);\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementEnd();\n        i0.ɵɵnamespaceHTML();\n        i0.ɵɵelementStart(3, \"div\", 3);\n        i0.ɵɵelementStart(4, \"div\", 4);\n        i0.ɵɵelementStart(5, \"div\", 5);\n        i0.ɵɵelementStart(6, \"div\", 5);\n        i0.ɵɵelementStart(7, \"div\", 6);\n        i0.ɵɵtext(8);\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(9, \"div\");\n        i0.ɵɵtext(10, \"Set a target to keep your scope 1 and scope 2 emissions near zero.\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(11, \"div\", 7);\n        i0.ɵɵelementStart(12, \"button\", 8);\n        i0.ɵɵelementStart(13, \"span\", 9);\n        i0.ɵɵtext(14, \" close \");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(15, \"div\", 10);\n        i0.ɵɵelementStart(16, \"mat-card\", 11);\n        i0.ɵɵelementStart(17, \"form\", 12);\n        i0.ɵɵlistener(\"ngSubmit\", function MaintenanceComponent_Template_form_ngSubmit_17_listener() {\n          return ctx.isValidForm();\n        });\n        i0.ɵɵelementStart(18, \"div\", 13);\n        i0.ɵɵelementStart(19, \"div\", 14);\n        i0.ɵɵelementStart(20, \"div\", 15);\n        i0.ɵɵelementStart(21, \"mat-form-field\", 16);\n        i0.ɵɵelementStart(22, \"mat-label\", 17);\n        i0.ɵɵtext(23, \"Target name\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelement(24, \"input\", 18);\n        i0.ɵɵtemplate(25, MaintenanceComponent_mat_error_25_Template, 2, 0, \"mat-error\", 19);\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementEnd();\n        i0.ɵɵtemplate(26, MaintenanceComponent_ng_container_26_Template, 1, 0, \"ng-container\", 20);\n        i0.ɵɵtemplate(27, MaintenanceComponent_ng_container_27_Template, 1, 0, \"ng-container\", 20);\n        i0.ɵɵtemplate(28, MaintenanceComponent_ng_container_28_Template, 1, 0, \"ng-container\", 20);\n        i0.ɵɵelementStart(29, \"div\", 21);\n        i0.ɵɵelementStart(30, \"mat-form-field\", 16);\n        i0.ɵɵelementStart(31, \"mat-label\", 17);\n        i0.ɵɵtext(32, \" SBTi base year \");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(33, \"mat-select\", 22);\n        i0.ɵɵtemplate(34, MaintenanceComponent_mat_option_34_Template, 2, 2, \"mat-option\", 23);\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementEnd();\n        i0.ɵɵtemplate(35, MaintenanceComponent_ng_container_35_Template, 1, 0, \"ng-container\", 20);\n        i0.ɵɵelementStart(36, \"div\", 21);\n        i0.ɵɵelementStart(37, \"mat-form-field\", 16);\n        i0.ɵɵelementStart(38, \"mat-label\", 17);\n        i0.ɵɵtext(39);\n        i0.ɵɵelementEnd();\n        i0.ɵɵelement(40, \"input\", 24);\n        i0.ɵɵtemplate(41, MaintenanceComponent_mat_error_41_Template, 2, 0, \"mat-error\", 19);\n        i0.ɵɵtemplate(42, MaintenanceComponent_mat_error_42_Template, 4, 2, \"mat-error\", 19);\n        i0.ɵɵtemplate(43, MaintenanceComponent_mat_error_43_Template, 2, 0, \"mat-error\", 19);\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementEnd();\n        i0.ɵɵtemplate(44, MaintenanceComponent_ng_container_44_Template, 1, 0, \"ng-container\", 20);\n        i0.ɵɵtemplate(45, MaintenanceComponent_ng_container_45_Template, 1, 0, \"ng-container\", 20);\n        i0.ɵɵelementStart(46, \"div\", 13);\n        i0.ɵɵelementStart(47, \"div\", 15);\n        i0.ɵɵelementStart(48, \"mat-form-field\", 16);\n        i0.ɵɵelementStart(49, \"mat-label\", 17);\n        i0.ɵɵtext(50, \"Status\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(51, \"mat-select\", 25);\n        i0.ɵɵtemplate(52, MaintenanceComponent_mat_option_52_Template, 2, 2, \"mat-option\", 23);\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(53, \"div\", 26);\n        i0.ɵɵelementStart(54, \"button\", 27);\n        i0.ɵɵtext(55);\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementEnd();\n        i0.ɵɵtemplate(56, MaintenanceComponent_ng_template_56_Template, 5, 3, \"ng-template\", null, 28, i0.ɵɵtemplateRefExtractor);\n        i0.ɵɵtemplate(58, MaintenanceComponent_ng_template_58_Template, 2, 1, \"ng-template\", null, 29, i0.ɵɵtemplateRefExtractor);\n      }\n      if (rf & 2) {\n        const _r12 = i0.ɵɵreference(57);\n        i0.ɵɵadvance(8);\n        i0.ɵɵtextInterpolate1(\" \", ctx.isUpdate ? \"Update\" : \"New\", \" near term maintenance target \");\n        i0.ɵɵadvance(9);\n        i0.ɵɵproperty(\"formGroup\", ctx.targetFG);\n        i0.ɵɵadvance(4);\n        i0.ɵɵproperty(\"appearance\", ctx.MaterialFormFieldAppearance.FORM_FIELD_APPEARANCE);\n        i0.ɵɵadvance(4);\n        i0.ɵɵproperty(\"ngIf\", ctx.errorHandling(\"name\", \"required\"));\n        i0.ɵɵadvance(1);\n        i0.ɵɵproperty(\"ngTemplateOutlet\", _r12)(\"ngTemplateOutletContext\", i0.ɵɵpureFunction0(27, _c0));\n        i0.ɵɵadvance(1);\n        i0.ɵɵproperty(\"ngTemplateOutlet\", _r12)(\"ngTemplateOutletContext\", i0.ɵɵpureFunction0(28, _c1));\n        i0.ɵɵadvance(1);\n        i0.ɵɵproperty(\"ngTemplateOutlet\", _r12)(\"ngTemplateOutletContext\", i0.ɵɵpureFunction0(29, _c2));\n        i0.ɵɵadvance(2);\n        i0.ɵɵproperty(\"appearance\", ctx.MaterialFormFieldAppearance.FORM_FIELD_APPEARANCE);\n        i0.ɵɵadvance(4);\n        i0.ɵɵproperty(\"ngForOf\", ctx.zeroEmissionYear);\n        i0.ɵɵadvance(1);\n        i0.ɵɵproperty(\"ngTemplateOutlet\", _r12)(\"ngTemplateOutletContext\", i0.ɵɵpureFunction1(30, _c3, ctx.NearTerm[\"MAX_TARGET_YEAR\"]));\n        i0.ɵɵadvance(2);\n        i0.ɵɵproperty(\"appearance\", ctx.MaterialFormFieldAppearance.FORM_FIELD_APPEARANCE);\n        i0.ɵɵadvance(2);\n        i0.ɵɵtextInterpolate1(\"Total \", ctx.manitenanceLabel, \" reduction (%)\");\n        i0.ɵɵadvance(1);\n        i0.ɵɵproperty(\"min\", ctx.NearTerm.MIN_TOTAL_REDUCTION_PERCENTAGE);\n        i0.ɵɵadvance(1);\n        i0.ɵɵproperty(\"ngIf\", ctx.errorHandling(\"totalReductionPct\", \"required\"));\n        i0.ɵɵadvance(1);\n        i0.ɵɵproperty(\"ngIf\", ctx.errorHandling(\"totalReductionPct\", \"min\"));\n        i0.ɵɵadvance(1);\n        i0.ɵɵproperty(\"ngIf\", ctx.errorHandling(\"totalReductionPct\", \"max\"));\n        i0.ɵɵadvance(1);\n        i0.ɵɵproperty(\"ngTemplateOutlet\", _r12)(\"ngTemplateOutletContext\", i0.ɵɵpureFunction2(32, _c4, \"Annual \" + ctx.manitenanceLabel + \"reduction (%)\", ctx.annualReduction + \"%\"));\n        i0.ɵɵadvance(1);\n        i0.ɵɵproperty(\"ngTemplateOutlet\", _r12)(\"ngTemplateOutletContext\", i0.ɵɵpureFunction1(35, _c5, ctx.SBTiTarget[\"DEFAULT_EXCLUDED_EMISSION_PCT\"] + \"%\"));\n        i0.ɵɵadvance(3);\n        i0.ɵɵproperty(\"appearance\", ctx.MaterialFormFieldAppearance.FORM_FIELD_APPEARANCE);\n        i0.ɵɵadvance(4);\n        i0.ɵɵproperty(\"ngForOf\", ctx.statusList);\n        i0.ɵɵadvance(3);\n        i0.ɵɵtextInterpolate1(\" \", ctx.isUpdate ? ctx.ButtonLabelEnum.UPDATE_BTN_LABEL : ctx.ButtonLabelEnum.SAVE_BTN_LABEL, \" \");\n      }\n    },\n    directives: [i9.MatButton, i4.MatDialogClose, i10.MatTooltip, i11.MatCard, i1.ɵNgNoValidate, i1.NgControlStatusGroup, i1.FormGroupDirective, i12.MatFormField, i12.MatLabel, i13.MatInput, i1.DefaultValueAccessor, i1.NgControlStatus, i1.FormControlName, i14.NgIf, i14.NgTemplateOutlet, i15.MatSelect, i14.NgForOf, i1.NumberValueAccessor, i1.MinValidator, i12.MatError, i16.MatOption],\n    styles: [\"\"]\n  });\n  return MaintenanceComponent;\n})();","map":null,"metadata":{},"sourceType":"module"}