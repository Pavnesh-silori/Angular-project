{"ast":null,"code":"import { __awaiter } from \"tslib\";\nimport { ActivityKeyIDEnum } from '@carbon/enum/activity.enum';\nimport { PROCESS_INPUT_ENUM } from '@netzero/enum/process.enum';\nimport { DataInputMethodKeyIDEnum } from '@carbon/enum/data-input-method.enum';\n//tsc-library\nimport { COMMON_CONSTANT } from '@library/tsc-common';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@library/storage-service\";\nimport * as i2 from \"@angular/router\";\nimport * as i3 from \"@carbon/service/process.service\";\nimport * as i4 from \"@angular/common\";\nimport * as i5 from \"@angular/material/card\";\nfunction ViewComponent_ng_container_0_ng_container_5_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementContainer(0);\n  }\n}\nfunction ViewComponent_ng_container_0_ng_container_7_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementContainer(0);\n  }\n}\nfunction ViewComponent_ng_container_0_ng_container_8_ng_container_3_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementContainer(0);\n  }\n}\nfunction ViewComponent_ng_container_0_ng_container_8_ng_container_4_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementContainer(0);\n  }\n}\nconst _c0 = function (a1) {\n  return {\n    label: \"Rollover Value\",\n    value: a1,\n    class: \"pt-1\"\n  };\n};\nconst _c1 = function (a1) {\n  return {\n    label: \"Unit\",\n    value: a1,\n    class: \"pt-1\"\n  };\n};\nfunction ViewComponent_ng_container_0_ng_container_8_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementContainerStart(0);\n    i0.ɵɵelementStart(1, \"div\", 8);\n    i0.ɵɵtext(2, \" Meter \");\n    i0.ɵɵelementEnd();\n    i0.ɵɵtemplate(3, ViewComponent_ng_container_0_ng_container_8_ng_container_3_Template, 1, 0, \"ng-container\", 6);\n    i0.ɵɵtemplate(4, ViewComponent_ng_container_0_ng_container_8_ng_container_4_Template, 1, 0, \"ng-container\", 6);\n    i0.ɵɵelementContainerEnd();\n  }\n  if (rf & 2) {\n    const ctx_r5 = i0.ɵɵnextContext(2);\n    const _r1 = i0.ɵɵreference(2);\n    i0.ɵɵadvance(3);\n    i0.ɵɵproperty(\"ngTemplateOutlet\", _r1)(\"ngTemplateOutletContext\", i0.ɵɵpureFunction1(4, _c0, ctx_r5.activityConfigData.meterRollover.value));\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngTemplateOutlet\", _r1)(\"ngTemplateOutletContext\", i0.ɵɵpureFunction1(6, _c1, ctx_r5.activityConfigData.meterRollover.unit.uomName));\n  }\n}\nconst _c2 = function (a1) {\n  return {\n    label: \"Process name\",\n    value: a1,\n    class: \"pt-1\"\n  };\n};\nconst _c3 = function (a1) {\n  return {\n    label: \"Data Input Method\",\n    value: a1,\n    class: \"pt-1\"\n  };\n};\nfunction ViewComponent_ng_container_0_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementContainerStart(0);\n    i0.ɵɵelementStart(1, \"div\", 2);\n    i0.ɵɵelementStart(2, \"div\", 3);\n    i0.ɵɵelementStart(3, \"div\", 4);\n    i0.ɵɵelementStart(4, \"mat-card\", 5);\n    i0.ɵɵtemplate(5, ViewComponent_ng_container_0_ng_container_5_Template, 1, 0, \"ng-container\", 6);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(6, \"mat-card\", 7);\n    i0.ɵɵtemplate(7, ViewComponent_ng_container_0_ng_container_7_Template, 1, 0, \"ng-container\", 6);\n    i0.ɵɵtemplate(8, ViewComponent_ng_container_0_ng_container_8_Template, 5, 8, \"ng-container\", 0);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementContainerEnd();\n  }\n  if (rf & 2) {\n    const ctx_r0 = i0.ɵɵnextContext();\n    const _r1 = i0.ɵɵreference(2);\n    i0.ɵɵadvance(5);\n    i0.ɵɵproperty(\"ngTemplateOutlet\", _r1)(\"ngTemplateOutletContext\", i0.ɵɵpureFunction1(5, _c2, ctx_r0.activityConfigData == null ? null : ctx_r0.activityConfigData.process.name));\n    i0.ɵɵadvance(2);\n    i0.ɵɵproperty(\"ngTemplateOutlet\", _r1)(\"ngTemplateOutletContext\", i0.ɵɵpureFunction1(7, _c3, ctx_r0.activityConfigData == null ? null : ctx_r0.activityConfigData.dataInputMethod.name));\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngIf\", ctx_r0.activityConfigData.dataInputMethod.keyID == ctx_r0.DataInputMethodKeyIDEnum.METER_READING);\n  }\n}\nfunction ViewComponent_ng_template_1_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\", 3);\n    i0.ɵɵelementStart(1, \"div\", 9);\n    i0.ɵɵtext(2);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(3, \"div\", 10);\n    i0.ɵɵtext(4);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const label_r8 = ctx.label;\n    const value_r9 = ctx.value;\n    const class_r10 = ctx.class;\n    const valueClass_r11 = ctx.valueClass;\n    const ctx_r2 = i0.ɵɵnextContext();\n    i0.ɵɵclassMap(class_r10);\n    i0.ɵɵadvance(2);\n    i0.ɵɵtextInterpolate1(\" \", label_r8, \": \");\n    i0.ɵɵadvance(1);\n    i0.ɵɵclassMap(valueClass_r11);\n    i0.ɵɵadvance(1);\n    i0.ɵɵtextInterpolate1(\" \", value_r9 ? value_r9 : ctx_r2.COMMON_CONSTANT.HYPHEN, \" \");\n  }\n}\n// /tsc-library\nexport let ViewComponent = /*#__PURE__*/(() => {\n  class ViewComponent {\n    constructor(storageService, activatedRoute, processService) {\n      this.processService = processService;\n      this.DataInputMethodKeyIDEnum = DataInputMethodKeyIDEnum;\n      this.COMMON_CONSTANT = COMMON_CONSTANT;\n      this.entity = [];\n      this.getProcessByIDCall = true;\n      this.currentOrgID = storageService.getStorage(['currentOrgID']);\n      this.activityKeyID = activatedRoute.snapshot.data.activityKeyID;\n    }\n    ngOnInit() {}\n    ngAfterContentChecked() {\n      if (this.activityConfig) {\n        this.activityConfigData = this.activityConfig.activityConfigData;\n        if (this.getProcessByIDCall && !this.process && this.activityConfigData) {\n          this.getProcessByIDCall = false;\n          this.getProcessByID(this.currentOrgID, this.activityConfigData.process.id, false);\n        }\n      }\n    }\n    getProcessByID(orgID, processID, isLatest) {\n      return __awaiter(this, void 0, void 0, function* () {\n        this.process = yield this.processService.getProcessByID(orgID, processID, isLatest);\n        this.createEntitySource(this.process);\n      });\n    }\n    createEntitySource(process) {\n      var _a;\n      let inputOutput;\n      switch (this.activityKeyID) {\n        case ActivityKeyIDEnum.PROCESS_FUEL_CONSUMPTION:\n          {\n            inputOutput = (_a = process.input.find(output => output.type.keyID == PROCESS_INPUT_ENUM.FUEL)) === null || _a === void 0 ? void 0 : _a.entities;\n            break;\n          }\n      }\n      if (inputOutput) {\n        this.entity = inputOutput;\n      } else {\n        this.entity = [];\n      }\n    }\n  }\n  ViewComponent.ɵfac = function ViewComponent_Factory(t) {\n    return new (t || ViewComponent)(i0.ɵɵdirectiveInject(i1.StorageService), i0.ɵɵdirectiveInject(i2.ActivatedRoute), i0.ɵɵdirectiveInject(i3.ProcessService));\n  };\n  ViewComponent.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n    type: ViewComponent,\n    selectors: [[\"app-view\"]],\n    decls: 3,\n    vars: 1,\n    consts: [[4, \"ngIf\"], [\"labelValue\", \"\"], [1, \"card\", \"cardOverwrite\"], [1, \"row\"], [1, \"col-sm-12\"], [1, \"border\", \"cardOverwrite\"], [4, \"ngTemplateOutlet\", \"ngTemplateOutletContext\"], [1, \"border\", \"cardOverwrite\", \"mt-3\"], [1, \"cardTitle\", \"pb-1\", \"mt-3\"], [1, \"col-sm-4\"], [1, \"col-sm-8\", \"fw-bold\"]],\n    template: function ViewComponent_Template(rf, ctx) {\n      if (rf & 1) {\n        i0.ɵɵtemplate(0, ViewComponent_ng_container_0_Template, 9, 9, \"ng-container\", 0);\n        i0.ɵɵtemplate(1, ViewComponent_ng_template_1_Template, 5, 6, \"ng-template\", null, 1, i0.ɵɵtemplateRefExtractor);\n      }\n      if (rf & 2) {\n        i0.ɵɵproperty(\"ngIf\", ctx.activityConfig);\n      }\n    },\n    directives: [i4.NgIf, i5.MatCard, i4.NgTemplateOutlet],\n    encapsulation: 2\n  });\n  return ViewComponent;\n})();","map":null,"metadata":{},"sourceType":"module"}