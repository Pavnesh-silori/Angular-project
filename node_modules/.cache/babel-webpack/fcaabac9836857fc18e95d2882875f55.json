{"ast":null,"code":"import { __awaiter, __rest } from \"tslib\";\nimport { EventEmitter } from '@angular/core';\nimport { DataInputMethodKeyIDEnum } from '@carbon/enum/data-input-method.enum';\nimport { DataCollectionMethodKeyIDEnum } from '@carbon/enum/data-collection-method.enum';\nimport { ActivityKeyIDEnum } from '@carbon/enum/activity.enum';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/forms\";\nimport * as i2 from \"@library/tsc-common\";\nimport * as i3 from \"@carbon/service/data-collection-method.service\";\nimport * as i4 from \"@angular/router\";\nimport * as i5 from \"@angular/common\";\nimport * as i6 from \"./total-amount/total-amount.component\";\nimport * as i7 from \"./meter-reading/meter-reading.component\";\nfunction ElectricityConsumptionActivityDataCreateComponent_app_electricity_consumption_total_amount_0_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelement(0, \"app-electricity-consumption-total-amount\", 1);\n  }\n  if (rf & 2) {\n    const ctx_r0 = i0.ɵɵnextContext();\n    i0.ɵɵproperty(\"activityConfig\", ctx_r0.activityConfig)(\"activityDataFG\", ctx_r0.activityDataFG)(\"docFileList\", ctx_r0.docFileList)(\"defaultDataCollectionMethodID\", ctx_r0.defaultDataCollectionMethodID);\n  }\n}\nfunction ElectricityConsumptionActivityDataCreateComponent_electricity_consumption_meter_reading_1_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelement(0, \"electricity-consumption-meter-reading\", 1);\n  }\n  if (rf & 2) {\n    const ctx_r1 = i0.ɵɵnextContext();\n    i0.ɵɵproperty(\"activityConfig\", ctx_r1.activityConfig)(\"activityDataFG\", ctx_r1.activityDataFG)(\"docFileList\", ctx_r1.docFileList)(\"defaultDataCollectionMethodID\", ctx_r1.defaultDataCollectionMethodID);\n  }\n}\nexport let ElectricityConsumptionActivityDataCreateComponent = /*#__PURE__*/(() => {\n  class ElectricityConsumptionActivityDataCreateComponent {\n    constructor(formBuilder, tscCommonService, dataCollectionMethodService, activatedRoute) {\n      this.formBuilder = formBuilder;\n      this.tscCommonService = tscCommonService;\n      this.dataCollectionMethodService = dataCollectionMethodService;\n      this.DataInputMethodKeyIDEnum = DataInputMethodKeyIDEnum;\n      this.dataInputMethoutKeyID = null;\n      this.validity = new EventEmitter();\n      this.docFileList = null;\n      this.activityKeyID = activatedRoute.snapshot.data.activityKeyID;\n    }\n    ngOnInit() {\n      this.activityDataFG = this.formBuilder.group({\n        activityData: this.formBuilder.array([])\n      });\n      this.getDataCollectionMethod();\n    }\n    getDataCollectionMethod() {\n      return __awaiter(this, void 0, void 0, function* () {\n        let dataCollectionMethods = yield this.dataCollectionMethodService.getDataCollectionMethod();\n        let manual_entry = this.tscCommonService.getUniqueObject(dataCollectionMethods, 'keyID', DataCollectionMethodKeyIDEnum.MANUAL_ENTRY);\n        this.defaultDataCollectionMethodID = manual_entry.dataCollectionMethodID;\n      });\n    }\n    isValidForm() {\n      if (this.activityDataFG.invalid) {\n        this.activityDataFG.markAllAsTouched();\n        return false;\n      }\n      this.activityData = {};\n      this.activityData = JSON.parse(JSON.stringify(this.activityDataFG.value));\n      return true;\n    }\n    activityDataValidity() {\n      this.activityDataFG.valueChanges.subscribe(() => this.validity.emit(!this.activityDataFG.invalid));\n    }\n    getActivityData() {\n      return {\n        'activityData': this.mapDataAccordingToActivity(),\n        'activityDataFile': this.docFileList\n      };\n    }\n    updateActivityData() {\n      return this.mapDataAccordingToActivity()[0];\n    }\n    mapDataAccordingToActivity() {\n      let dataArr = [];\n      let activityData = this.activityDataFG.getRawValue().activityData;\n      activityData.forEach(data => {\n        dataArr.push(this.mapData(data, this.activityKeyID));\n      });\n      return dataArr;\n    }\n    mapData(oldData, activityKeyID) {\n      const {\n          energyConsumed,\n          energyConsumedUnitID\n        } = oldData,\n        rest = __rest(oldData, [\"energyConsumed\", \"energyConsumedUnitID\"]); // Destructure the properties that need to be renamed\n      if (activityKeyID == ActivityKeyIDEnum.PROCESS_ELECTRICITY_CONSUMPTION) {\n        return Object.assign({\n          electricityConsumed: energyConsumed,\n          electricityConsumedUnitID: energyConsumedUnitID\n        }, rest);\n      } else {\n        return Object.assign({\n          heatConsumed: energyConsumed,\n          heatConsumedUnitID: energyConsumedUnitID\n        }, rest);\n      }\n    }\n    getConfiguration(configuration) {\n      return __awaiter(this, void 0, void 0, function* () {\n        this.activityConfig = configuration;\n        if (configuration != null) {\n          let activityConfigData = configuration.activityConfigData;\n          this.dataInputMethoutKeyID = activityConfigData.dataInputMethod.keyID;\n          this.docFileList = new Array(1).fill(null);\n        }\n      });\n    }\n  }\n  ElectricityConsumptionActivityDataCreateComponent.ɵfac = function ElectricityConsumptionActivityDataCreateComponent_Factory(t) {\n    return new (t || ElectricityConsumptionActivityDataCreateComponent)(i0.ɵɵdirectiveInject(i1.FormBuilder), i0.ɵɵdirectiveInject(i2.TSCCommonService), i0.ɵɵdirectiveInject(i3.DataCollectionMethodService), i0.ɵɵdirectiveInject(i4.ActivatedRoute));\n  };\n  ElectricityConsumptionActivityDataCreateComponent.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n    type: ElectricityConsumptionActivityDataCreateComponent,\n    selectors: [[\"app-electricity-consumption-activity-data-create\"]],\n    decls: 2,\n    vars: 2,\n    consts: [[3, \"activityConfig\", \"activityDataFG\", \"docFileList\", \"defaultDataCollectionMethodID\", 4, \"ngIf\"], [3, \"activityConfig\", \"activityDataFG\", \"docFileList\", \"defaultDataCollectionMethodID\"]],\n    template: function ElectricityConsumptionActivityDataCreateComponent_Template(rf, ctx) {\n      if (rf & 1) {\n        i0.ɵɵtemplate(0, ElectricityConsumptionActivityDataCreateComponent_app_electricity_consumption_total_amount_0_Template, 1, 4, \"app-electricity-consumption-total-amount\", 0);\n        i0.ɵɵtemplate(1, ElectricityConsumptionActivityDataCreateComponent_electricity_consumption_meter_reading_1_Template, 1, 4, \"electricity-consumption-meter-reading\", 0);\n      }\n      if (rf & 2) {\n        i0.ɵɵproperty(\"ngIf\", ctx.dataInputMethoutKeyID == ctx.DataInputMethodKeyIDEnum.TOTAL_AMOUNT);\n        i0.ɵɵadvance(1);\n        i0.ɵɵproperty(\"ngIf\", ctx.dataInputMethoutKeyID == ctx.DataInputMethodKeyIDEnum.METER_READING);\n      }\n    },\n    directives: [i5.NgIf, i6.ElectricityConsumptionTotalAmountComponent, i7.ElectricityConsumptionMeterReadingComponent],\n    encapsulation: 2\n  });\n  return ElectricityConsumptionActivityDataCreateComponent;\n})();","map":null,"metadata":{},"sourceType":"module"}