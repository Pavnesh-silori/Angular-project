{"ast":null,"code":"import { EventEmitter } from '@angular/core';\nimport { CBAM_RUN_CALCULATION_STATUS_KEYID_ENUM, RunStatusKeyIDEnum } from '@carbon/enum/cbam.enum';\nimport { RESPONSE_STATUS_KEYID_ENUM } from '@library/tsc-common';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/router\";\nimport * as i2 from \"@carbon/service/cbam-run.service\";\nimport * as i3 from \"@library/storage-service\";\nimport * as i4 from \"@angular/material/card\";\nimport * as i5 from \"@angular/common\";\nimport * as i6 from \"@angular/material/progress-bar\";\nfunction ShowResultComponent_ng_container_1_ng_container_1_div_6_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\");\n    i0.ɵɵelementStart(1, \"div\", 9);\n    i0.ɵɵelementStart(2, \"div\", 10);\n    i0.ɵɵtext(3, \" Records processed \");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(4, \"div\", 11);\n    i0.ɵɵtext(5);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(6, \"div\", 12);\n    i0.ɵɵelementStart(7, \"div\", 10);\n    i0.ɵɵtext(8, \" Errors found \");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(9, \"div\", 11);\n    i0.ɵɵtext(10);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const ctx_r6 = i0.ɵɵnextContext(3);\n    i0.ɵɵadvance(5);\n    i0.ɵɵtextInterpolate2(\" \", ctx_r6.runRequest.calculatedRecords, \" / \", ctx_r6.runRequest.totalRecords, \" \");\n    i0.ɵɵadvance(5);\n    i0.ɵɵtextInterpolate1(\" \", ctx_r6.runRequest.errorCount, \" \");\n  }\n}\nfunction ShowResultComponent_ng_container_1_ng_container_1_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r8 = i0.ɵɵgetCurrentView();\n    i0.ɵɵelementContainerStart(0);\n    i0.ɵɵelementStart(1, \"div\", 3);\n    i0.ɵɵtext(2);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(3, \"div\", 4);\n    i0.ɵɵelementStart(4, \"div\", 5);\n    i0.ɵɵelement(5, \"mat-progress-bar\", 6);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementEnd();\n    i0.ɵɵtemplate(6, ShowResultComponent_ng_container_1_ng_container_1_div_6_Template, 11, 3, \"div\", 1);\n    i0.ɵɵelementStart(7, \"div\", 7);\n    i0.ɵɵelementStart(8, \"button\", 8);\n    i0.ɵɵlistener(\"click\", function ShowResultComponent_ng_container_1_ng_container_1_Template_button_click_8_listener() {\n      i0.ɵɵrestoreView(_r8);\n      const ctx_r7 = i0.ɵɵnextContext(2);\n      ctx_r7.updateCbamRunStatus(ctx_r7.currentOrgID, ctx_r7.runID, ctx_r7.RunStatusKeyIDEnum.ALLOCATE_REVIEW);\n      return ctx_r7.clearInterval();\n    });\n    i0.ɵɵtext(9, \"Abort calculation and edit\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementContainerEnd();\n  }\n  if (rf & 2) {\n    const ctx_r3 = i0.ɵɵnextContext(2);\n    i0.ɵɵadvance(2);\n    i0.ɵɵtextInterpolate1(\" \", ctx_r3.cardTitle, \"\");\n    i0.ɵɵadvance(3);\n    i0.ɵɵproperty(\"color\", ctx_r3.color)(\"mode\", ctx_r3.mode)(\"value\", ctx_r3.value)(\"bufferValue\", ctx_r3.bufferValue);\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngIf\", ctx_r3.runRequest);\n  }\n}\nfunction ShowResultComponent_ng_container_1_ng_container_2_ng_container_1_span_5_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"span\", 17);\n    i0.ɵɵtext(1);\n    i0.ɵɵpipe(2, \"number\");\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const ctx_r11 = i0.ɵɵnextContext(4);\n    i0.ɵɵadvance(1);\n    i0.ɵɵtextInterpolate3(\"\", i0.ɵɵpipeBind2(2, 3, ctx_r11.run.embeddedEmission.totalSee, \"1.2-2\"), \" \", ctx_r11.run.embeddedEmission.numeratorUnit.uomCode, \" / \", ctx_r11.run.embeddedEmission.denominatorUnit.uomCode, \"\");\n  }\n}\nfunction ShowResultComponent_ng_container_1_ng_container_2_ng_container_1_span_6_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"span\");\n    i0.ɵɵtext(1, \"0.\");\n    i0.ɵɵelementEnd();\n  }\n}\nfunction ShowResultComponent_ng_container_1_ng_container_2_ng_container_1_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementContainerStart(0);\n    i0.ɵɵelementStart(1, \"div\", 14);\n    i0.ɵɵtext(2, \"CBAM run was successful \\uD83C\\uDF89\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(3, \"p\", 15);\n    i0.ɵɵtext(4, \" Specific Embedded Emission (SEE) for this run is \");\n    i0.ɵɵtemplate(5, ShowResultComponent_ng_container_1_ng_container_2_ng_container_1_span_5_Template, 3, 6, \"span\", 16);\n    i0.ɵɵtemplate(6, ShowResultComponent_ng_container_1_ng_container_2_ng_container_1_span_6_Template, 2, 0, \"span\", 1);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementContainerEnd();\n  }\n  if (rf & 2) {\n    const ctx_r9 = i0.ɵɵnextContext(3);\n    i0.ɵɵadvance(5);\n    i0.ɵɵproperty(\"ngIf\", ctx_r9.run.embeddedEmission);\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngIf\", !ctx_r9.run.embeddedEmission);\n  }\n}\nfunction ShowResultComponent_ng_container_1_ng_container_2_ng_container_2_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementContainer(0);\n  }\n}\nfunction ShowResultComponent_ng_container_1_ng_container_2_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementContainerStart(0);\n    i0.ɵɵtemplate(1, ShowResultComponent_ng_container_1_ng_container_2_ng_container_1_Template, 7, 2, \"ng-container\", 1);\n    i0.ɵɵtemplate(2, ShowResultComponent_ng_container_1_ng_container_2_ng_container_2_Template, 1, 0, \"ng-container\", 13);\n    i0.ɵɵelementContainerEnd();\n  }\n  if (rf & 2) {\n    const ctx_r4 = i0.ɵɵnextContext(2);\n    const _r1 = i0.ɵɵreference(3);\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngIf\", ctx_r4.run);\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngTemplateOutlet\", _r1);\n  }\n}\nfunction ShowResultComponent_ng_container_1_ng_container_3_ng_container_5_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementContainer(0);\n  }\n}\nfunction ShowResultComponent_ng_container_1_ng_container_3_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementContainerStart(0);\n    i0.ɵɵelementStart(1, \"div\", 18);\n    i0.ɵɵtext(2, \"CBAM run was unsuccessful! \\uD83D\\uDE14\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(3, \"p\", 15);\n    i0.ɵɵtext(4, \" An error has occurred during this CBAM run calculation. \");\n    i0.ɵɵelementEnd();\n    i0.ɵɵtemplate(5, ShowResultComponent_ng_container_1_ng_container_3_ng_container_5_Template, 1, 0, \"ng-container\", 13);\n    i0.ɵɵelementContainerEnd();\n  }\n  if (rf & 2) {\n    i0.ɵɵnextContext(2);\n    const _r1 = i0.ɵɵreference(3);\n    i0.ɵɵadvance(5);\n    i0.ɵɵproperty(\"ngTemplateOutlet\", _r1);\n  }\n}\nfunction ShowResultComponent_ng_container_1_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementContainerStart(0);\n    i0.ɵɵtemplate(1, ShowResultComponent_ng_container_1_ng_container_1_Template, 10, 6, \"ng-container\", 1);\n    i0.ɵɵtemplate(2, ShowResultComponent_ng_container_1_ng_container_2_Template, 3, 2, \"ng-container\", 1);\n    i0.ɵɵtemplate(3, ShowResultComponent_ng_container_1_ng_container_3_Template, 6, 1, \"ng-container\", 1);\n    i0.ɵɵelementContainerEnd();\n  }\n  if (rf & 2) {\n    const ctx_r0 = i0.ɵɵnextContext();\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngIf\", !ctx_r0.runRequest.calculationStatus);\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngIf\", ctx_r0.runRequest.calculationStatus == ctx_r0.CBAM_RUN_CALCULATION_STATUS_KEYID_ENUM.CALCULATION_SUCCESS);\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngIf\", ctx_r0.runRequest.calculationStatus == ctx_r0.CBAM_RUN_CALCULATION_STATUS_KEYID_ENUM.CALCULATION_FAILED);\n  }\n}\nfunction ShowResultComponent_ng_template_2_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r15 = i0.ɵɵgetCurrentView();\n    i0.ɵɵelementStart(0, \"div\", 7);\n    i0.ɵɵelementStart(1, \"button\", 19);\n    i0.ɵɵlistener(\"click\", function ShowResultComponent_ng_template_2_Template_button_click_1_listener() {\n      i0.ɵɵrestoreView(_r15);\n      const ctx_r14 = i0.ɵɵnextContext();\n      ctx_r14.updateCbamRunStatus(ctx_r14.currentOrgID, ctx_r14.runID, ctx_r14.RunStatusKeyIDEnum.ALLOCATE_REVIEW);\n      return ctx_r14.clearInterval();\n    });\n    i0.ɵɵtext(2, \"Edit and re-run CBAM tool\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementEnd();\n  }\n}\nexport let ShowResultComponent = /*#__PURE__*/(() => {\n  class ShowResultComponent {\n    constructor(activatedRoute, cbamRunService, storageService) {\n      this.cbamRunService = cbamRunService;\n      this.runStatusChange = new EventEmitter();\n      this.RunStatusKeyIDEnum = RunStatusKeyIDEnum;\n      this.CBAM_RUN_CALCULATION_STATUS_KEYID_ENUM = CBAM_RUN_CALCULATION_STATUS_KEYID_ENUM;\n      this.isCbamRunRequest = true;\n      this.cardTitle = 'Sit back and relax while we work our magic!';\n      this.color = 'primary';\n      this.mode = 'buffer';\n      this.value = 0;\n      this.bufferValue = 75;\n      this.currentOrgID = storageService.getStorage('currentOrgID');\n      activatedRoute.queryParams.subscribe(queryParam => {\n        this.runID = queryParam.runID;\n      });\n    }\n    ngOnInit() {}\n    ngOnChanges(changes) {\n      if (changes.runStatusInp && this.runStatusInp) {\n        this.runStatus = this.runStatusInp;\n        if ([RunStatusKeyIDEnum.CALCULATION_PENDING, RunStatusKeyIDEnum.DONE, RunStatusKeyIDEnum.RUN_ERROR].includes(this.runStatus) && this.isCbamRunRequest) {\n          this.getCbamRunRequest(this.currentOrgID, this.runID);\n          this.isCbamRunRequest = false;\n          this.startInterval();\n        }\n      }\n    }\n    ngOnDestroy() {\n      this.clearInterval();\n    }\n    startInterval() {\n      this.intervalId = setInterval(() => {\n        this.getCbamRunRequest(this.currentOrgID, this.runID);\n      }, 10000); // 120000 milliseconds = 2 minutes\n    }\n\n    clearInterval() {\n      if (this.intervalId) {\n        clearInterval(this.intervalId);\n      }\n    }\n    getCbamRunRequest(orgID, runID) {\n      this.cbamRunService.getCbamRunRequestByID(orgID, runID).then(data => {\n        this.runRequest = data;\n        this.value = this.runRequest.calculatedRecords / this.runRequest.totalRecords * 100;\n        if (this.runRequest.calculationStatus) {\n          this.clearInterval();\n          this.postCalculationHandler(this.runRequest);\n        }\n      }).catch(error => {\n        console.log('error in getCbamRunRequest() -', error);\n      });\n    }\n    postCalculationHandler(runRequest) {\n      if (runRequest.calculationStatus == CBAM_RUN_CALCULATION_STATUS_KEYID_ENUM.CALCULATION_SUCCESS) {\n        this.updateCbamRunStatus(this.currentOrgID, this.runID, RunStatusKeyIDEnum.DONE);\n        this.getCbamRunByID(this.currentOrgID, this.runID);\n      } else if (CBAM_RUN_CALCULATION_STATUS_KEYID_ENUM.CALCULATION_FAILED) {\n        this.updateCbamRunStatus(this.currentOrgID, this.runID, RunStatusKeyIDEnum.RUN_ERROR);\n      }\n    }\n    updateCbamRunStatus(orgID, runID, status) {\n      let data = {};\n      data.status = status;\n      this.cbamRunService.updateCbamRunStatus(orgID, runID, data).then(data => {\n        if (data.status == RESPONSE_STATUS_KEYID_ENUM.SUCCESS) {\n          this.runStatusChange.emit(status);\n        }\n      }).catch(error => {\n        console.log('error in updateCbamRunStatus() -', error);\n      });\n    }\n    getCbamRunByID(orgID, runID) {\n      this.cbamRunService.getCbamRunByID(orgID, runID).then(data => {\n        this.run = data;\n        console.log('this.run', this.run);\n      }).catch(error => {\n        console.log('error in getCbamRunByID() -', error);\n      });\n    }\n  }\n  ShowResultComponent.ɵfac = function ShowResultComponent_Factory(t) {\n    return new (t || ShowResultComponent)(i0.ɵɵdirectiveInject(i1.ActivatedRoute), i0.ɵɵdirectiveInject(i2.CbamRunService), i0.ɵɵdirectiveInject(i3.StorageService));\n  };\n  ShowResultComponent.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n    type: ShowResultComponent,\n    selectors: [[\"app-show-result\"]],\n    inputs: {\n      runStatusInp: \"runStatusInp\"\n    },\n    outputs: {\n      runStatusChange: \"runStatusChange\"\n    },\n    features: [i0.ɵɵNgOnChangesFeature],\n    decls: 4,\n    vars: 1,\n    consts: [[1, \"border\", \"cardOverwrite\"], [4, \"ngIf\"], [\"editAndReRunBtn\", \"\"], [1, \"fs-4\", \"text-primary\", \"fw-bold\", \"cbamRunResultTitle\"], [1, \"mt-3\"], [1, \"cbamRunProgressBar\"], [3, \"color\", \"mode\", \"value\", \"bufferValue\"], [1, \"text-end\"], [1, \"btn\", \"btn-sm\", \"btn-danger\", 3, \"click\"], [1, \"row\", \"mt-3\"], [1, \"col-sm-3\"], [1, \"col-sm-4\", \"fw-bold\"], [1, \"row\", \"mt-2\"], [4, \"ngTemplateOutlet\"], [1, \"fs-4\", \"text-success\", \"fw-bold\"], [1, \"mt-3\", \"text-secondary\"], [\"class\", \"fw-bold\", 4, \"ngIf\"], [1, \"fw-bold\"], [1, \"fs-4\", \"fw-bold\", \"text-danger\"], [1, \"btn\", \"btn-sm\", \"btn-primary\", 3, \"click\"]],\n    template: function ShowResultComponent_Template(rf, ctx) {\n      if (rf & 1) {\n        i0.ɵɵelementStart(0, \"mat-card\", 0);\n        i0.ɵɵtemplate(1, ShowResultComponent_ng_container_1_Template, 4, 3, \"ng-container\", 1);\n        i0.ɵɵelementEnd();\n        i0.ɵɵtemplate(2, ShowResultComponent_ng_template_2_Template, 3, 0, \"ng-template\", null, 2, i0.ɵɵtemplateRefExtractor);\n      }\n      if (rf & 2) {\n        i0.ɵɵadvance(1);\n        i0.ɵɵproperty(\"ngIf\", ctx.runRequest);\n      }\n    },\n    directives: [i4.MatCard, i5.NgIf, i6.MatProgressBar, i5.NgTemplateOutlet],\n    pipes: [i5.DecimalPipe],\n    styles: [\".cbamRunResultTitle[_ngcontent-%COMP%]{color:#043484!important}.cbamRunProgressBar[_ngcontent-%COMP%]   .mat-progress-bar[_ngcontent-%COMP%]{height:16px!important}\"]\n  });\n  return ShowResultComponent;\n})();","map":null,"metadata":{},"sourceType":"module"}