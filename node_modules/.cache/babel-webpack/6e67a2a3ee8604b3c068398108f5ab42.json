{"ast":null,"code":"import { HttpParams } from \"@angular/common/http\";\nimport { environment } from 'src/environments/environment';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/common/http\";\nexport let FugitiveMyselfManufacturerController = /*#__PURE__*/(() => {\n  class FugitiveMyselfManufacturerController {\n    constructor(http) {\n      this.http = http;\n    }\n    getEquipmentGasQuantityRecord(pageNo, pazeSize, sortBy, orderBy, filterArr, currentOrgID, activityType, startDate, endDate, calculationApproachKeyID) {\n      let params = new HttpParams();\n      params = params.append('pageNo', pageNo + 1);\n      params = params.append('pageSize', pazeSize);\n      params = params.append('sortBy', sortBy);\n      params = params.append('orderBy', orderBy);\n      params = params.append('activityType', activityType);\n      params = params.append('startDate', startDate);\n      params = params.append('endDate', endDate);\n      params = params.append('calculationApproachKeyID', calculationApproachKeyID);\n      filterArr.forEach(filter => {\n        params = params.append('filter', filter);\n      });\n      return this.http.get(`${environment.CARBON_ACCOUNTING_API_URL}organizations/${currentOrgID}/${calculationApproachKeyID}/page`, {\n        params: params\n      });\n    }\n    createEquipmentGasQuantityRecord(currentOrgID, formData, calculationApproachKeyID) {\n      return this.http.post(`${environment.CARBON_ACCOUNTING_API_URL}organizations/${currentOrgID}/${calculationApproachKeyID}`, formData);\n    }\n    updateEquipmentGasQuantityRecord(currentOrgID, recordID, data, calculationApproachKeyID) {\n      return this.http.patch(`${environment.CARBON_ACCOUNTING_API_URL}organizations/${currentOrgID}/${calculationApproachKeyID}/${recordID}`, data);\n    }\n    getEquipmentGasQuantityRecordByID(currentOrgID, recordID, calculationApproachKeyID) {\n      return this.http.get(`${environment.CARBON_ACCOUNTING_API_URL}organizations/${currentOrgID}/${calculationApproachKeyID}/${recordID}`);\n      ;\n    }\n    deleteEquipmentGasQuantityRecord(currentOrgID, recordID, calculationApproachKeyID) {\n      return this.http.delete(`${environment.CARBON_ACCOUNTING_API_URL}organizations/${currentOrgID}/${calculationApproachKeyID}/${recordID}`);\n    }\n  }\n  FugitiveMyselfManufacturerController.ɵfac = function FugitiveMyselfManufacturerController_Factory(t) {\n    return new (t || FugitiveMyselfManufacturerController)(i0.ɵɵinject(i1.HttpClient));\n  };\n  FugitiveMyselfManufacturerController.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n    token: FugitiveMyselfManufacturerController,\n    factory: FugitiveMyselfManufacturerController.ɵfac,\n    providedIn: 'root'\n  });\n  return FugitiveMyselfManufacturerController;\n})();","map":null,"metadata":{},"sourceType":"module"}