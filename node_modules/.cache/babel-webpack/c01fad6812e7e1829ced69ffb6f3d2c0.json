{"ast":null,"code":"import { Validators } from '@angular/forms';\nimport { MAT_DIALOG_DATA } from '@angular/material/dialog';\nimport { isEqual } from 'lodash';\nimport { ToastrColor, ToastrTitle } from '@library/toastr-service';\nimport { InvalidForm, MaterialFormFieldAppearance, MatSelectSearchService, ButtonLabelEnum } from '@library/tsc-common';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/forms\";\nimport * as i2 from \"@angular/material/dialog\";\nimport * as i3 from \"@carbon/controller/activity-data.controller\";\nimport * as i4 from \"@carbon/controller/emission-calculation-method.controller\";\nimport * as i5 from \"@carbon/controller/spend-based.controller\";\nimport * as i6 from \"@library/toastr-service\";\nimport * as i7 from \"@angular/material/button\";\nimport * as i8 from \"@angular/material/tooltip\";\nimport * as i9 from \"@angular/material/form-field\";\nimport * as i10 from \"@angular/material/input\";\nimport * as i11 from \"@angular/material/select\";\nimport * as i12 from \"@angular/material/core\";\nimport * as i13 from \"ngx-mat-select-search\";\nimport * as i14 from \"@angular/common\";\nfunction UpdateCategorizedRecordsComponent_mat_option_46_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"mat-option\", 22);\n    i0.ɵɵtext(1);\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const category_r2 = ctx.$implicit;\n    i0.ɵɵproperty(\"value\", category_r2[\"id\"]);\n    i0.ɵɵadvance(1);\n    i0.ɵɵtextInterpolate1(\" \", category_r2[\"name\"], \" \");\n  }\n}\nfunction UpdateCategorizedRecordsComponent_mat_option_58_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"mat-option\", 22);\n    i0.ɵɵtext(1);\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const activity_r3 = ctx.$implicit;\n    i0.ɵɵproperty(\"value\", activity_r3[\"id\"]);\n    i0.ɵɵadvance(1);\n    i0.ɵɵtextInterpolate1(\" \", activity_r3[\"name\"], \" \");\n  }\n}\nconst _c0 = function (a0) {\n  return {\n    \"disabled\": a0\n  };\n};\nexport let UpdateCategorizedRecordsComponent = /*#__PURE__*/(() => {\n  class UpdateCategorizedRecordsComponent {\n    constructor(updateCategoryFB, dialogRef, data, activityDataController, emissionCalculationMethodController, spendBasedController, toasterService) {\n      this.updateCategoryFB = updateCategoryFB;\n      this.dialogRef = dialogRef;\n      this.data = data;\n      this.activityDataController = activityDataController;\n      this.emissionCalculationMethodController = emissionCalculationMethodController;\n      this.spendBasedController = spendBasedController;\n      this.toasterService = toasterService;\n      this.MaterialFormFieldAppearance = MaterialFormFieldAppearance;\n      this.ButtonLabelEnum = ButtonLabelEnum;\n      this.categorySearchUtil = new MatSelectSearchService(['name']);\n      this.activitySearchUtil = new MatSelectSearchService(['name']);\n      this.isEqual = false;\n      this.currentOrgID = data['currentOrgID'];\n      this.activityDataID = data['activityDataID'];\n      this.dialogRef.disableClose = false;\n    }\n    ngOnInit() {\n      this.getRecordByID();\n      this.updateCategoryInit();\n      this.getCategoryMapping();\n      this.getEmissionCalculationMethods();\n      this.updateCategoryFG.valueChanges.subscribe(() => {\n        this.isEqual = isEqual(this.initialObject, this.updateCategoryFG.getRawValue());\n      });\n    }\n    getRecordByID() {\n      this.activityDataController.getScope3ActivityDataByID(this.currentOrgID, this.activityDataID).subscribe(recordRes => {\n        this.recordData = recordRes['activityData'];\n        this.patchCategoryDetails(this.recordData);\n      }, error => {\n        console.log('error in getRecordByID() -', error);\n      });\n    }\n    updateCategoryInit() {\n      this.updateCategoryFG = this.updateCategoryFB.group({\n        recordID: [],\n        transactionDate: [{\n          value: null,\n          disabled: true\n        }],\n        accountName: [{\n          value: null,\n          disabled: true\n        }],\n        supplierName: [{\n          value: null,\n          disabled: true\n        }],\n        amount: [{\n          value: null,\n          disabled: true\n        }],\n        categoryID: [, Validators.required],\n        activityID: [, Validators.required]\n      });\n    }\n    getCategoryMapping() {\n      this.spendBasedController.getCategoryMapping(this.currentOrgID).subscribe(categoryMappingRes => {\n        // Transforming the categoryMappingRes array\n        this.categoryMappingList = categoryMappingRes.map(item => {\n          const name = `${item.databaseName} > ${item.categoryName}`;\n          return {\n            id: item.id,\n            name: name\n          };\n        });\n        this.categorySearchUtil.entityArr = this.categoryMappingList;\n        this.categorySearchUtil.createSubscription();\n      }, error => {\n        console.log(\"error in getCategoryMapping() -\", error);\n      });\n    }\n    getEmissionCalculationMethods() {\n      this.emissionCalculationMethodController.getEmissionCalculationMethod(this.currentOrgID).subscribe(getCalculationMethodRes => {\n        this.calculationEmissionMethod = getCalculationMethodRes;\n        // Apply condition to set method definition\n        this.calculationEmissionMethod.forEach(method => {\n          if (method.methodID === 11) {\n            this.getActivities(method.methodID);\n          }\n        });\n      }, error => {\n        console.log('error in getEmissionCalculationMethods() -', error);\n      });\n    }\n    getActivities(methodID) {\n      this.spendBasedController.getActivities(this.currentOrgID, methodID).subscribe(activityRes => {\n        this.activityList = activityRes;\n        this.activitySearchUtil.entityArr = this.activityList;\n        this.activitySearchUtil.createSubscription();\n      }, error => {\n        console.log('error in getActivities() -', error);\n      });\n    }\n    patchCategoryDetails(recordData) {\n      this.updateCategoryFG.patchValue({\n        recordID: recordData.recordID,\n        transactionDate: recordData.transactionDate,\n        accountName: recordData.accountName,\n        supplierName: recordData.supplierName,\n        amount: recordData.amount,\n        categoryID: recordData.categoryID,\n        activityID: recordData.activityID\n      });\n      this.isEqual = true;\n    }\n    updateCategorizedRecords() {\n      if (this.updateCategoryFG.invalid) {\n        this.updateCategoryFG.markAllAsTouched();\n        this.toasterService.openToast(ToastrTitle.ERROR, InvalidForm.INVALID_FORM_MESSAGE, ToastrColor.ERROR);\n        return;\n      }\n      this.spendBasedController.updateCategorizedRecords(this.currentOrgID, this.activityDataID, this.updateCategoryFG.value).subscribe(categorizeRes => {\n        this.toasterService.openToast(ToastrTitle.SUCCESS, categorizeRes['message'], ToastrColor.SUCCESS);\n        this.dialogRef.close('Success');\n      }, error => {\n        console.log('Error in updateCategorizedRecords -', error);\n        this.toasterService.openToast(ToastrTitle.ERROR, \"Error in updating record\", ToastrColor.ERROR);\n      });\n    }\n  }\n  UpdateCategorizedRecordsComponent.ɵfac = function UpdateCategorizedRecordsComponent_Factory(t) {\n    return new (t || UpdateCategorizedRecordsComponent)(i0.ɵɵdirectiveInject(i1.FormBuilder), i0.ɵɵdirectiveInject(i2.MatDialogRef), i0.ɵɵdirectiveInject(MAT_DIALOG_DATA), i0.ɵɵdirectiveInject(i3.ActivityDataController), i0.ɵɵdirectiveInject(i4.EmissionCalculationMethodController), i0.ɵɵdirectiveInject(i5.SpendBasedController), i0.ɵɵdirectiveInject(i6.ToastrService));\n  };\n  UpdateCategorizedRecordsComponent.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n    type: UpdateCategorizedRecordsComponent,\n    selectors: [[\"app-update-categorized-records\"]],\n    decls: 66,\n    vars: 20,\n    consts: [[\"mat-dialog-title\", \"\"], [1, \"dialogHeader\"], [\"mat-icon-button\", \"\", \"mat-dialog-close\", \"\", \"cdkFocusInitial\", \"\", \"matTooltip\", \"Close\", \"matTooltipPosition\", \"before\", 1, \"float-end\", \"matDialogClose\"], [1, \"material-symbols-outlined\"], [\"mat-dialog-content\", \"\", 1, \"matDialogContent\"], [3, \"formGroup\"], [1, \"row\"], [1, \"col-sm-12\"], [1, \"matFieldWidth100\", \"cursorPointer\", 3, \"appearance\"], [1, \"formLabel\"], [\"matInput\", \"\", \"type\", \"text\", \"formControlName\", \"recordID\", \"readonly\", \"\"], [\"matInput\", \"\", \"type\", \"text\", \"formControlName\", \"transactionDate\"], [\"matInput\", \"\", \"type\", \"text\", \"formControlName\", \"accountName\"], [\"matInput\", \"\", \"type\", \"text\", \"formControlName\", \"supplierName\"], [\"matInput\", \"\", \"type\", \"text\", \"formControlName\", \"amount\"], [\"formControlName\", \"categoryID\"], [\"placeholderLabel\", \"Search by name\", \"noEntriesFoundLabel\", \"No matching name found.\", 3, \"formControl\"], [3, \"value\", 4, \"ngFor\", \"ngForOf\"], [\"formControlName\", \"activityID\"], [\"mat-dialog-footer\", \"\", \"align\", \"end\"], [1, \"justify-content-end\", \"centerAlignVertical\"], [\"type\", \"button\", 1, \"btn\", \"btn-sm\", \"btn-success\", \"me-2\", 3, \"ngClass\", \"click\"], [3, \"value\"]],\n    template: function UpdateCategorizedRecordsComponent_Template(rf, ctx) {\n      if (rf & 1) {\n        i0.ɵɵelementStart(0, \"div\", 0);\n        i0.ɵɵelementStart(1, \"strong\", 1);\n        i0.ɵɵtext(2, \" Edit record \");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(3, \"button\", 2);\n        i0.ɵɵelementStart(4, \"span\", 3);\n        i0.ɵɵtext(5, \"close\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(6, \"div\", 4);\n        i0.ɵɵelementStart(7, \"form\", 5);\n        i0.ɵɵelementStart(8, \"div\", 6);\n        i0.ɵɵelementStart(9, \"div\", 7);\n        i0.ɵɵelementStart(10, \"mat-form-field\", 8);\n        i0.ɵɵelementStart(11, \"mat-label\", 9);\n        i0.ɵɵtext(12, \" Record ID \");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelement(13, \"input\", 10);\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(14, \"div\", 6);\n        i0.ɵɵelementStart(15, \"div\", 7);\n        i0.ɵɵelementStart(16, \"mat-form-field\", 8);\n        i0.ɵɵelementStart(17, \"mat-label\", 9);\n        i0.ɵɵtext(18, \" Date \");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelement(19, \"input\", 11);\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(20, \"div\", 6);\n        i0.ɵɵelementStart(21, \"div\", 7);\n        i0.ɵɵelementStart(22, \"mat-form-field\", 8);\n        i0.ɵɵelementStart(23, \"mat-label\", 9);\n        i0.ɵɵtext(24, \" Account \");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelement(25, \"input\", 12);\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(26, \"div\", 6);\n        i0.ɵɵelementStart(27, \"div\", 7);\n        i0.ɵɵelementStart(28, \"mat-form-field\", 8);\n        i0.ɵɵelementStart(29, \"mat-label\", 9);\n        i0.ɵɵtext(30, \" Supplier \");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelement(31, \"input\", 13);\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(32, \"div\", 6);\n        i0.ɵɵelementStart(33, \"div\", 7);\n        i0.ɵɵelementStart(34, \"mat-form-field\", 8);\n        i0.ɵɵelementStart(35, \"mat-label\", 9);\n        i0.ɵɵtext(36, \" Amount \");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelement(37, \"input\", 14);\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(38, \"div\", 6);\n        i0.ɵɵelementStart(39, \"div\", 7);\n        i0.ɵɵelementStart(40, \"mat-form-field\", 8);\n        i0.ɵɵelementStart(41, \"mat-label\", 9);\n        i0.ɵɵtext(42, \" Select Category \");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(43, \"mat-select\", 15);\n        i0.ɵɵelementStart(44, \"mat-option\");\n        i0.ɵɵelement(45, \"ngx-mat-select-search\", 16);\n        i0.ɵɵelementEnd();\n        i0.ɵɵtemplate(46, UpdateCategorizedRecordsComponent_mat_option_46_Template, 2, 2, \"mat-option\", 17);\n        i0.ɵɵpipe(47, \"async\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(48, \"mat-error\");\n        i0.ɵɵtext(49, \" Select category \");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(50, \"div\", 6);\n        i0.ɵɵelementStart(51, \"div\", 7);\n        i0.ɵɵelementStart(52, \"mat-form-field\", 8);\n        i0.ɵɵelementStart(53, \"mat-label\", 9);\n        i0.ɵɵtext(54, \" Select Activity \");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(55, \"mat-select\", 18);\n        i0.ɵɵelementStart(56, \"mat-option\");\n        i0.ɵɵelement(57, \"ngx-mat-select-search\", 16);\n        i0.ɵɵelementEnd();\n        i0.ɵɵtemplate(58, UpdateCategorizedRecordsComponent_mat_option_58_Template, 2, 2, \"mat-option\", 17);\n        i0.ɵɵpipe(59, \"async\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(60, \"mat-error\");\n        i0.ɵɵtext(61, \" Select activity \");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(62, \"div\", 19);\n        i0.ɵɵelementStart(63, \"div\", 20);\n        i0.ɵɵelementStart(64, \"button\", 21);\n        i0.ɵɵlistener(\"click\", function UpdateCategorizedRecordsComponent_Template_button_click_64_listener() {\n          return ctx.updateCategorizedRecords();\n        });\n        i0.ɵɵtext(65);\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementEnd();\n      }\n      if (rf & 2) {\n        i0.ɵɵadvance(7);\n        i0.ɵɵproperty(\"formGroup\", ctx.updateCategoryFG);\n        i0.ɵɵadvance(3);\n        i0.ɵɵproperty(\"appearance\", ctx.MaterialFormFieldAppearance.FORM_FIELD_APPEARANCE);\n        i0.ɵɵadvance(6);\n        i0.ɵɵproperty(\"appearance\", ctx.MaterialFormFieldAppearance.FORM_FIELD_APPEARANCE);\n        i0.ɵɵadvance(6);\n        i0.ɵɵproperty(\"appearance\", ctx.MaterialFormFieldAppearance.FORM_FIELD_APPEARANCE);\n        i0.ɵɵadvance(6);\n        i0.ɵɵproperty(\"appearance\", ctx.MaterialFormFieldAppearance.FORM_FIELD_APPEARANCE);\n        i0.ɵɵadvance(6);\n        i0.ɵɵproperty(\"appearance\", ctx.MaterialFormFieldAppearance.FORM_FIELD_APPEARANCE);\n        i0.ɵɵadvance(6);\n        i0.ɵɵproperty(\"appearance\", ctx.MaterialFormFieldAppearance.FORM_FIELD_APPEARANCE);\n        i0.ɵɵadvance(5);\n        i0.ɵɵproperty(\"formControl\", ctx.categorySearchUtil.filterFC);\n        i0.ɵɵadvance(1);\n        i0.ɵɵproperty(\"ngForOf\", i0.ɵɵpipeBind1(47, 14, ctx.categorySearchUtil.filteredEntities));\n        i0.ɵɵadvance(6);\n        i0.ɵɵproperty(\"appearance\", ctx.MaterialFormFieldAppearance.FORM_FIELD_APPEARANCE);\n        i0.ɵɵadvance(5);\n        i0.ɵɵproperty(\"formControl\", ctx.activitySearchUtil.filterFC);\n        i0.ɵɵadvance(1);\n        i0.ɵɵproperty(\"ngForOf\", i0.ɵɵpipeBind1(59, 16, ctx.activitySearchUtil.filteredEntities));\n        i0.ɵɵadvance(6);\n        i0.ɵɵproperty(\"ngClass\", i0.ɵɵpureFunction1(18, _c0, ctx.isEqual));\n        i0.ɵɵadvance(1);\n        i0.ɵɵtextInterpolate1(\" \", ctx.ButtonLabelEnum.SAVE_BTN_LABEL, \" \");\n      }\n    },\n    directives: [i2.MatDialogTitle, i7.MatButton, i2.MatDialogClose, i8.MatTooltip, i2.MatDialogContent, i1.ɵNgNoValidate, i1.NgControlStatusGroup, i1.FormGroupDirective, i9.MatFormField, i9.MatLabel, i10.MatInput, i1.DefaultValueAccessor, i1.NgControlStatus, i1.FormControlName, i11.MatSelect, i12.MatOption, i13.MatSelectSearchComponent, i1.FormControlDirective, i14.NgForOf, i9.MatError, i14.NgClass],\n    pipes: [i14.AsyncPipe],\n    encapsulation: 2\n  });\n  return UpdateCategorizedRecordsComponent;\n})();","map":null,"metadata":{},"sourceType":"module"}