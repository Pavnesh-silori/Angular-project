{"ast":null,"code":"import { MAT_DIALOG_DATA } from '@angular/material/dialog';\n// tsc-library\nimport { ToastrColor, ToastrTitle } from '@library/toastr-service';\nimport { BulkUploadEnum, ButtonLabelEnum, DialogEnum } from '@library/tsc-common';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@carbon/controller/document.controller\";\nimport * as i2 from \"@angular/material/dialog\";\nimport * as i3 from \"@library/toastr-service\";\nimport * as i4 from \"@angular/common\";\nimport * as i5 from \"@angular/material/button\";\nconst _c0 = [\"docUpload\"];\nconst _c1 = function (a0) {\n  return {\n    \"d-none\": a0\n  };\n};\n// / tsc-library\nexport let UploadDocumentDialog = /*#__PURE__*/(() => {\n  class UploadDocumentDialog {\n    constructor(carbonDocumentcontroller, dialogRef, toastrService, data) {\n      this.carbonDocumentcontroller = carbonDocumentcontroller;\n      this.dialogRef = dialogRef;\n      this.toastrService = toastrService;\n      this.data = data;\n      this.ButtonLabelEnum = ButtonLabelEnum;\n      this.uploadedFile = null;\n      this.noFileSelected = true;\n    }\n    ngOnInit() {\n      this.currentOrgID = this.data['currentOrgID'];\n      this.typeID = this.data['typeID'];\n      this.action = this.data['action'];\n      this.type = this.data['type'];\n    }\n    documentUploadBtn() {\n      this.docUpload.nativeElement.click();\n    }\n    fileUpload(event) {\n      let file = event.target.files[0];\n      if (file) {\n        if (file.type !== 'application/pdf') {\n          this.toastrService.openToast(ToastrTitle.ERROR, BulkUploadEnum.INVALID_FILE_TYPE_ERROR, ToastrColor.ERROR);\n          return;\n        }\n        if (file.size > BulkUploadEnum.MAX_FILE_SIZE) {\n          this.toastrService.openToast(ToastrTitle.ERROR, BulkUploadEnum.INVAID_FILE_SIZE_ERROR, ToastrColor.ERROR);\n          return;\n        }\n        let reader = new FileReader();\n        reader.readAsDataURL(file);\n        reader.onload = e => {};\n        this.uploadedFile = file;\n        this.noFileSelected = false;\n        this.uploadedFileName = file['name'];\n      }\n    }\n    removeFile() {\n      this.uploadedFile = null;\n      this.uploadedFileName = '';\n      this.noFileSelected = true;\n      this.docUpload.nativeElement.value = null;\n    }\n    toFormData() {\n      const formData = new FormData();\n      formData.append('filePayload', this.uploadedFile);\n      return formData;\n    }\n    documentUpload() {\n      if (this.uploadedFile == null) {\n        this.toastrService.openToast(ToastrTitle.ERROR, 'Please upload a file!', ToastrColor.ERROR);\n        return;\n      }\n      this.carbonDocumentcontroller.postDoc(this.typeID, this.type, this.toFormData()).subscribe(response => {\n        this.dialogRef.close(DialogEnum.SUCCESS_DR);\n      }, error => {\n        console.log(\"error in documentUpload -\", error);\n      });\n    }\n  }\n  UploadDocumentDialog.ɵfac = function UploadDocumentDialog_Factory(t) {\n    return new (t || UploadDocumentDialog)(i0.ɵɵdirectiveInject(i1.CarbonDocumentController), i0.ɵɵdirectiveInject(i2.MatDialogRef), i0.ɵɵdirectiveInject(i3.ToastrService), i0.ɵɵdirectiveInject(MAT_DIALOG_DATA));\n  };\n  UploadDocumentDialog.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n    type: UploadDocumentDialog,\n    selectors: [[\"app-upload-document-dialog\"]],\n    viewQuery: function UploadDocumentDialog_Query(rf, ctx) {\n      if (rf & 1) {\n        i0.ɵɵviewQuery(_c0, 5);\n      }\n      if (rf & 2) {\n        let _t;\n        i0.ɵɵqueryRefresh(_t = i0.ɵɵloadQuery()) && (ctx.docUpload = _t.first);\n      }\n    },\n    decls: 24,\n    vars: 9,\n    consts: [[\"mat-dialog-title\", \"\"], [1, \"dialogTitle\"], [1, \"row\"], [1, \"text-center\", 3, \"ngClass\"], [\"id\", \"docUpload\", \"type\", \"file\", \"accept\", \".pdf\", 1, \"d-none\", 3, \"change\"], [\"docUpload\", \"\"], [\"type\", \"button\", 1, \"btn\", \"btn-primary\", \"mt-4\", 3, \"click\"], [1, \"row\", \"border\", \"nocUpload\", 3, \"ngClass\"], [1, \"col-sm-3\", \"docIcon\"], [\"height\", \"80px\", \"src\", \"assets/images/default-doc.ico\", \"alt\", \"noc document preview\"], [1, \"col-sm-7\", \"centerAlignVertical\", \"fileFont\"], [1, \"col-sm-2\", \"centerAlign\"], [\"type\", \"button\", \"mat-icon-button\", \"\", 1, \"btn\", 3, \"click\"], [1, \"material-symbols-outlined\", \"text-danger\"], [\"align\", \"end\", 1, \"pt-2\"], [\"type\", \"button\", \"mat-dialog-close\", \"\", 1, \"button\", \"btn\", \"btn-secondary\", \"me-2\"], [\"type\", \"submit\", 1, \"button\", \"btn\", \"btn-success\", \"ms-2\", 3, \"click\"]],\n    template: function UploadDocumentDialog_Template(rf, ctx) {\n      if (rf & 1) {\n        i0.ɵɵelementStart(0, \"h6\", 0);\n        i0.ɵɵelementStart(1, \"strong\", 1);\n        i0.ɵɵtext(2, \" Document Upload \");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementEnd();\n        i0.ɵɵelement(3, \"hr\");\n        i0.ɵɵelementStart(4, \"div\", 2);\n        i0.ɵɵelementStart(5, \"div\", 3);\n        i0.ɵɵelementStart(6, \"input\", 4, 5);\n        i0.ɵɵlistener(\"change\", function UploadDocumentDialog_Template_input_change_6_listener($event) {\n          return ctx.fileUpload($event);\n        });\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(8, \"button\", 6);\n        i0.ɵɵlistener(\"click\", function UploadDocumentDialog_Template_button_click_8_listener() {\n          return ctx.documentUploadBtn();\n        });\n        i0.ɵɵtext(9, \" Upload file \");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(10, \"div\", 7);\n        i0.ɵɵelementStart(11, \"div\", 8);\n        i0.ɵɵelement(12, \"img\", 9);\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(13, \"div\", 10);\n        i0.ɵɵtext(14);\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(15, \"div\", 11);\n        i0.ɵɵelementStart(16, \"button\", 12);\n        i0.ɵɵlistener(\"click\", function UploadDocumentDialog_Template_button_click_16_listener() {\n          return ctx.removeFile();\n        });\n        i0.ɵɵelementStart(17, \"span\", 13);\n        i0.ɵɵtext(18, \" delete \");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(19, \"div\", 14);\n        i0.ɵɵelementStart(20, \"button\", 15);\n        i0.ɵɵtext(21);\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(22, \"button\", 16);\n        i0.ɵɵlistener(\"click\", function UploadDocumentDialog_Template_button_click_22_listener() {\n          return ctx.documentUpload();\n        });\n        i0.ɵɵtext(23);\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementEnd();\n      }\n      if (rf & 2) {\n        i0.ɵɵadvance(5);\n        i0.ɵɵproperty(\"ngClass\", i0.ɵɵpureFunction1(5, _c1, !ctx.noFileSelected));\n        i0.ɵɵadvance(5);\n        i0.ɵɵproperty(\"ngClass\", i0.ɵɵpureFunction1(7, _c1, ctx.noFileSelected));\n        i0.ɵɵadvance(4);\n        i0.ɵɵtextInterpolate1(\" \", ctx.uploadedFileName, \" \");\n        i0.ɵɵadvance(7);\n        i0.ɵɵtextInterpolate1(\" \", ctx.ButtonLabelEnum.CANCEL_BTN_LABEL, \"\");\n        i0.ɵɵadvance(2);\n        i0.ɵɵtextInterpolate1(\" \", ctx.ButtonLabelEnum.SUBMIT_BTN_LABEL, \" \");\n      }\n    },\n    directives: [i2.MatDialogTitle, i4.NgClass, i5.MatButton, i2.MatDialogClose],\n    styles: [\"\"]\n  });\n  return UploadDocumentDialog;\n})();","map":null,"metadata":{},"sourceType":"module"}