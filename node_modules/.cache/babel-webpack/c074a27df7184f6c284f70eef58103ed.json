{"ast":null,"code":"import { Validators } from '@angular/forms';\n// import { Utility } from '@rootNetZero/common/function/net-zero.function';\n// import { CreateUtility } from '../../../../../../utility/create.utility';\n// import { NgxMatSelectSearchUtility } from '@EnterpriseNetZero/utility/ngx-mat-select-search.utility';\n// import { GlobalVariable } from '@rootNetZero/common/global/variable';\n// import { GLOBAL_CONSTANT } from '@rootNetZero/constant/global.constant';\nimport * as moment from 'moment';\nimport { combineLatest } from 'rxjs';\nimport { ScopeKeyIDEnum } from '@carbon/enum/scope.enum';\nimport { ActivityKeyIDEnum } from '@carbon/enum/activity.enum';\nimport { MatSelectSearchService, MaterialFormFieldAppearance } from '@library/tsc-common';\nimport { DATE_CONSTANT } from '@library/date';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/router\";\nimport * as i2 from \"@library/storage-service\";\nimport * as i3 from \"@angular/forms\";\nimport * as i4 from \"@library/date\";\nimport * as i5 from \"@library/toastr-service\";\nimport * as i6 from \"@carbon/controller/scope.controller\";\nimport * as i7 from \"@carbon/controller/activity.controller\";\nimport * as i8 from \"@angular/material/card\";\nimport * as i9 from \"@angular/common\";\nimport * as i10 from \"@angular/material/form-field\";\nimport * as i11 from \"@angular/material/input\";\nimport * as i12 from \"@angular/material/select\";\nimport * as i13 from \"@angular/material/core\";\nimport * as i14 from \"ngx-mat-select-search\";\nimport * as i15 from \"@angular/material/datepicker\";\nimport * as i16 from \"@angular/material/tooltip\";\nimport * as i17 from \"@library/tsc-common\";\nfunction DetailComponent_ng_container_5_div_2_mat_error_5_ng_container_1_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementContainerStart(0);\n    i0.ɵɵtext(1);\n    i0.ɵɵelementContainerEnd();\n  }\n  if (rf & 2) {\n    const validators_r7 = i0.ɵɵnextContext().$implicit;\n    i0.ɵɵadvance(1);\n    i0.ɵɵtextInterpolate1(\" \", validators_r7[\"error\"], \" \");\n  }\n}\nfunction DetailComponent_ng_container_5_div_2_mat_error_5_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"mat-error\");\n    i0.ɵɵtemplate(1, DetailComponent_ng_container_5_div_2_mat_error_5_ng_container_1_Template, 2, 1, \"ng-container\", 11);\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const validators_r7 = ctx.$implicit;\n    const field_r1 = i0.ɵɵnextContext(2).$implicit;\n    const ctx_r6 = i0.ɵɵnextContext();\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngIf\", ctx_r6.errorHandling(field_r1[\"control\"], validators_r7[\"validator\"]));\n  }\n}\nfunction DetailComponent_ng_container_5_div_2_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\");\n    i0.ɵɵelementStart(1, \"mat-form-field\", 8);\n    i0.ɵɵelementStart(2, \"mat-label\", 9);\n    i0.ɵɵtext(3);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelement(4, \"input\", 10);\n    i0.ɵɵtemplate(5, DetailComponent_ng_container_5_div_2_mat_error_5_Template, 2, 1, \"mat-error\", 4);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const field_r1 = i0.ɵɵnextContext().$implicit;\n    const ctx_r2 = i0.ɵɵnextContext();\n    i0.ɵɵclassMap(field_r1[\"width\"]);\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"appearance\", ctx_r2.MaterialFormFieldAppearance.FORM_FIELD_APPEARANCE);\n    i0.ɵɵadvance(2);\n    i0.ɵɵtextInterpolate(field_r1[\"label\"]);\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"type\", field_r1[\"type\"])(\"formControlName\", field_r1[\"control\"])(\"placeholder\", field_r1[\"placeholder\"]);\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngForOf\", field_r1[\"validators\"]);\n  }\n}\nfunction DetailComponent_ng_container_5_div_3_mat_option_5_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"mat-option\");\n    i0.ɵɵelement(1, \"ngx-mat-select-search\", 14);\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const field_r1 = i0.ɵɵnextContext(2).$implicit;\n    const ctx_r12 = i0.ɵɵnextContext();\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"formControl\", ctx_r12.getSearchUtil(field_r1[\"searchUtil\"][\"name\"])[\"filterFC\"])(\"placeholderLabel\", field_r1[\"searchUtil\"][\"placeholderLabel\"])(\"noEntriesFoundLabel\", field_r1[\"searchUtil\"][\"noEntriesFoundLabel\"]);\n  }\n}\nfunction DetailComponent_ng_container_5_div_3_mat_option_6_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"mat-option\", 15);\n    i0.ɵɵtext(1);\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const entity_r16 = ctx.$implicit;\n    i0.ɵɵproperty(\"value\", entity_r16[\"id\"]);\n    i0.ɵɵadvance(1);\n    i0.ɵɵtextInterpolate1(\" \", entity_r16[\"name\"], \" \");\n  }\n}\nfunction DetailComponent_ng_container_5_div_3_mat_error_8_ng_container_1_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementContainerStart(0);\n    i0.ɵɵtext(1);\n    i0.ɵɵelementContainerEnd();\n  }\n  if (rf & 2) {\n    const validators_r17 = i0.ɵɵnextContext().$implicit;\n    i0.ɵɵadvance(1);\n    i0.ɵɵtextInterpolate1(\" \", validators_r17[\"error\"], \" \");\n  }\n}\nfunction DetailComponent_ng_container_5_div_3_mat_error_8_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"mat-error\");\n    i0.ɵɵtemplate(1, DetailComponent_ng_container_5_div_3_mat_error_8_ng_container_1_Template, 2, 1, \"ng-container\", 11);\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const validators_r17 = ctx.$implicit;\n    const field_r1 = i0.ɵɵnextContext(2).$implicit;\n    const ctx_r14 = i0.ɵɵnextContext();\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngIf\", ctx_r14.errorHandling(field_r1[\"control\"], validators_r17[\"validator\"]));\n  }\n}\nfunction DetailComponent_ng_container_5_div_3_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r23 = i0.ɵɵgetCurrentView();\n    i0.ɵɵelementStart(0, \"div\");\n    i0.ɵɵelementStart(1, \"mat-form-field\", 8);\n    i0.ɵɵelementStart(2, \"mat-label\", 9);\n    i0.ɵɵtext(3);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(4, \"mat-select\", 12);\n    i0.ɵɵlistener(\"selectionChange\", function DetailComponent_ng_container_5_div_3_Template_mat_select_selectionChange_4_listener($event) {\n      i0.ɵɵrestoreView(_r23);\n      const field_r1 = i0.ɵɵnextContext().$implicit;\n      const ctx_r21 = i0.ɵɵnextContext();\n      return ctx_r21.selectionChange(field_r1[\"key\"], $event.value);\n    });\n    i0.ɵɵtemplate(5, DetailComponent_ng_container_5_div_3_mat_option_5_Template, 2, 3, \"mat-option\", 11);\n    i0.ɵɵtemplate(6, DetailComponent_ng_container_5_div_3_mat_option_6_Template, 2, 2, \"mat-option\", 13);\n    i0.ɵɵpipe(7, \"async\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵtemplate(8, DetailComponent_ng_container_5_div_3_mat_error_8_Template, 2, 1, \"mat-error\", 4);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const field_r1 = i0.ɵɵnextContext().$implicit;\n    const ctx_r3 = i0.ɵɵnextContext();\n    i0.ɵɵclassMap(field_r1[\"width\"]);\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"appearance\", ctx_r3.MaterialFormFieldAppearance.FORM_FIELD_APPEARANCE);\n    i0.ɵɵadvance(2);\n    i0.ɵɵtextInterpolate(field_r1[\"label\"]);\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"formControlName\", field_r1[\"control\"])(\"mulitple\", field_r1[\"multiple\"]);\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngIf\", field_r1[\"search\"]);\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngForOf\", field_r1[\"search\"] ? i0.ɵɵpipeBind1(7, 9, ctx_r3.getSearchUtil(field_r1[\"searchUtil\"][\"name\"])[\"filteredEntities\"]) : field_r1[\"entityList\"]);\n    i0.ɵɵadvance(2);\n    i0.ɵɵproperty(\"ngForOf\", field_r1[\"validators\"]);\n  }\n}\nfunction DetailComponent_ng_container_5_div_4_mat_error_8_ng_container_1_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementContainerStart(0);\n    i0.ɵɵtext(1);\n    i0.ɵɵelementContainerEnd();\n  }\n  if (rf & 2) {\n    const validators_r27 = i0.ɵɵnextContext().$implicit;\n    i0.ɵɵadvance(1);\n    i0.ɵɵtextInterpolate1(\" \", validators_r27[\"error\"], \" \");\n  }\n}\nfunction DetailComponent_ng_container_5_div_4_mat_error_8_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"mat-error\");\n    i0.ɵɵtemplate(1, DetailComponent_ng_container_5_div_4_mat_error_8_ng_container_1_Template, 2, 1, \"ng-container\", 11);\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const validators_r27 = ctx.$implicit;\n    const field_r1 = i0.ɵɵnextContext(2).$implicit;\n    const ctx_r26 = i0.ɵɵnextContext();\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngIf\", ctx_r26.errorHandling(field_r1[\"control\"], validators_r27[\"validator\"]));\n  }\n}\nfunction DetailComponent_ng_container_5_div_4_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r32 = i0.ɵɵgetCurrentView();\n    i0.ɵɵelementStart(0, \"div\");\n    i0.ɵɵelementStart(1, \"mat-form-field\", 16);\n    i0.ɵɵlistener(\"click\", function DetailComponent_ng_container_5_div_4_Template_mat_form_field_click_1_listener() {\n      i0.ɵɵrestoreView(_r32);\n      const _r25 = i0.ɵɵreference(7);\n      const ctx_r31 = i0.ɵɵnextContext(2);\n      return ctx_r31.dateService.openDatepickerOnClick(_r25);\n    })(\"keydown.enter\", function DetailComponent_ng_container_5_div_4_Template_mat_form_field_keydown_enter_1_listener() {\n      i0.ɵɵrestoreView(_r32);\n      const _r25 = i0.ɵɵreference(7);\n      const ctx_r33 = i0.ɵɵnextContext(2);\n      return ctx_r33.dateService.openDatepickerOnClick(_r25);\n    })(\"keydown.arrowdown\", function DetailComponent_ng_container_5_div_4_Template_mat_form_field_keydown_arrowdown_1_listener() {\n      i0.ɵɵrestoreView(_r32);\n      const _r25 = i0.ɵɵreference(7);\n      const ctx_r34 = i0.ɵɵnextContext(2);\n      return ctx_r34.dateService.openDatepickerOnClick(_r25);\n    });\n    i0.ɵɵelementStart(2, \"mat-label\", 9);\n    i0.ɵɵtext(3);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(4, \"input\", 17);\n    i0.ɵɵlistener(\"dateInput\", function DetailComponent_ng_container_5_div_4_Template_input_dateInput_4_listener($event) {\n      i0.ɵɵrestoreView(_r32);\n      const field_r1 = i0.ɵɵnextContext().$implicit;\n      const ctx_r35 = i0.ɵɵnextContext();\n      return ctx_r35.formatDate($event.value, field_r1[\"control\"]);\n    });\n    i0.ɵɵelementEnd();\n    i0.ɵɵelement(5, \"mat-datepicker-toggle\", 18);\n    i0.ɵɵelementStart(6, \"mat-datepicker\", 19, 20);\n    i0.ɵɵlistener(\"closed\", function DetailComponent_ng_container_5_div_4_Template_mat_datepicker_closed_6_listener() {\n      i0.ɵɵrestoreView(_r32);\n      const field_r1 = i0.ɵɵnextContext().$implicit;\n      const ctx_r37 = i0.ɵɵnextContext();\n      return ctx_r37.dateService.takeFocusAway(field_r1[\"id\"]);\n    });\n    i0.ɵɵelementEnd();\n    i0.ɵɵtemplate(8, DetailComponent_ng_container_5_div_4_mat_error_8_Template, 2, 1, \"mat-error\", 4);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const _r25 = i0.ɵɵreference(7);\n    const field_r1 = i0.ɵɵnextContext().$implicit;\n    const ctx_r4 = i0.ɵɵnextContext();\n    i0.ɵɵclassMap(field_r1[\"width\"]);\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"id\", field_r1[\"id\"])(\"appearance\", ctx_r4.MaterialFormFieldAppearance.FORM_FIELD_APPEARANCE);\n    i0.ɵɵadvance(2);\n    i0.ɵɵtextInterpolate1(\" \", field_r1[\"label\"], \"\");\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"matDatepicker\", _r25)(\"formControlName\", field_r1[\"control\"])(\"min\", field_r1[\"min\"])(\"max\", field_r1[\"max\"])(\"disabled\", ctx_r4.disabled);\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"for\", _r25);\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"disabled\", ctx_r4.disabled);\n    i0.ɵɵadvance(2);\n    i0.ɵɵproperty(\"ngForOf\", field_r1[\"validators\"]);\n  }\n}\nfunction DetailComponent_ng_container_5_div_5_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\");\n    i0.ɵɵelementStart(1, \"div\", 21);\n    i0.ɵɵelementStart(2, \"div\", 22);\n    i0.ɵɵelementStart(3, \"div\", 23);\n    i0.ɵɵtext(4);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(5, \"div\", 22);\n    i0.ɵɵelementStart(6, \"div\", 24);\n    i0.ɵɵelementStart(7, \"span\", 25);\n    i0.ɵɵtext(8);\n    i0.ɵɵpipe(9, \"dotdotdot\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const field_r1 = i0.ɵɵnextContext().$implicit;\n    const ctx_r5 = i0.ɵɵnextContext();\n    i0.ɵɵclassMap(field_r1[\"width\"]);\n    i0.ɵɵadvance(4);\n    i0.ɵɵtextInterpolate1(\" \", field_r1[\"title\"], \" \");\n    i0.ɵɵadvance(3);\n    i0.ɵɵproperty(\"matTooltip\", (field_r1[\"value\"] == null ? null : field_r1[\"value\"].length) > ctx_r5.wordLength ? field_r1[\"value\"] : \"\");\n    i0.ɵɵadvance(1);\n    i0.ɵɵtextInterpolate1(\" \", i0.ɵɵpipeBind2(9, 5, field_r1[\"value\"], ctx_r5.wordLength), \" \");\n  }\n}\nfunction DetailComponent_ng_container_5_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementContainerStart(0);\n    i0.ɵɵelementContainerStart(1, 5);\n    i0.ɵɵtemplate(2, DetailComponent_ng_container_5_div_2_Template, 6, 8, \"div\", 6);\n    i0.ɵɵtemplate(3, DetailComponent_ng_container_5_div_3_Template, 9, 11, \"div\", 6);\n    i0.ɵɵtemplate(4, DetailComponent_ng_container_5_div_4_Template, 9, 13, \"div\", 6);\n    i0.ɵɵtemplate(5, DetailComponent_ng_container_5_div_5_Template, 10, 8, \"div\", 7);\n    i0.ɵɵelementContainerEnd();\n    i0.ɵɵelementContainerEnd();\n  }\n  if (rf & 2) {\n    const field_r1 = ctx.$implicit;\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngSwitch\", field_r1[\"input\"]);\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngSwitchCase\", \"input\");\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngSwitchCase\", \"select\");\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngSwitchCase\", \"date\");\n  }\n}\n// import { ScopeService } from '@CarbonNetZero/service/scope.service';\n// import { ActivityService } from '@CarbonNetZero/service/activity.service';\n// import { AuthService } from '@accountNetzero/common/service/auth.service';\nexport let DetailComponent = /*#__PURE__*/(() => {\n  class DetailComponent {\n    constructor(router, storageService, activatedRoute, formBuilder, dateService, toastrService, scopeController, activityController) {\n      this.router = router;\n      this.activatedRoute = activatedRoute;\n      this.formBuilder = formBuilder;\n      this.dateService = dateService;\n      this.toastrService = toastrService;\n      this.scopeController = scopeController;\n      this.activityController = activityController;\n      this.MaterialFormFieldAppearance = MaterialFormFieldAppearance;\n      this.formFields = [];\n      this.factor = [{\n        view: true,\n        width: 'col-sm-12',\n        key: 'other',\n        title: 'Database',\n        value: 'database name'\n      }, {\n        view: true,\n        width: 'col-sm-12',\n        key: 'name',\n        label: 'Name',\n        control: 'name',\n        value: null,\n        placeholder: 'Example Boiler 31 custom factor',\n        input: 'input',\n        type: 'text',\n        validators: [{\n          validator: 'required',\n          error: 'Factor name is mandatory'\n        }, {\n          validator: 'alreadyExists',\n          error: 'Factor name already exists!'\n        }]\n      }, {\n        view: true,\n        width: 'col-sm-6',\n        key: 'activity',\n        label: 'Select activity',\n        control: 'activityID',\n        value: null,\n        input: 'select',\n        type: 'select',\n        multiple: true,\n        search: true,\n        searchUtil: {\n          name: 'activitySearchUtil',\n          placeholderLabel: 'Search by activity name',\n          noEntriesFoundLabel: 'No matching activity found',\n          searchBy: 'name'\n        },\n        entityList: [],\n        validators: [{\n          validator: 'required',\n          error: 'Select an activity'\n        }]\n      }, {\n        view: true,\n        width: 'col-sm-6 centerAlignVertical',\n        key: 'other',\n        title: 'Scope',\n        value: '--'\n      }, {\n        view: false,\n        key: 'gwpDataset',\n        label: 'Gwp dataset',\n        control: 'gwpDatasetID',\n        value: null,\n        placeholder: 'Gwp dataset',\n        input: 'input',\n        type: 'number',\n        validators: []\n      }, {\n        view: true,\n        width: 'col-sm-12',\n        key: 'verison',\n        label: 'Version',\n        control: 'versionName',\n        value: null,\n        placeholder: 'Version name',\n        input: 'input',\n        type: 'text',\n        validators: [{\n          validator: 'required',\n          error: 'Version name is mandatory'\n        }]\n      }, {\n        view: true,\n        width: 'col-sm-6',\n        key: 'validFrom',\n        id: 'validFrom',\n        label: 'Valid from',\n        control: 'validFrom',\n        value: DATE_CONSTANT.TODAY_YYYY_MM_DD,\n        placeholder: 'Valid from',\n        min: null,\n        max: null,\n        input: 'date',\n        type: 'date',\n        validators: [{\n          validator: 'required',\n          error: 'Date is mandatory'\n        }]\n      }, {\n        view: true,\n        width: 'col-sm-6',\n        key: 'validTill',\n        id: 'validTill',\n        label: 'Valid till',\n        control: 'validTill',\n        value: null,\n        placeholder: 'Valid till',\n        min: DATE_CONSTANT.TODAY_YYYY_MM_DD,\n        max: null,\n        input: 'date',\n        type: 'date',\n        validators: [{\n          validator: 'required',\n          error: 'Date is mandatory'\n        }]\n      }, {\n        view: false,\n        key: 'database',\n        label: 'Database',\n        control: 'databaseID',\n        value: null,\n        placeholder: 'Database',\n        input: 'input',\n        type: 'number',\n        validators: [{\n          validator: 'required',\n          error: 'Database is mandatory'\n        }]\n      }];\n      this.version = [{\n        view: true,\n        width: 'col-sm-12',\n        key: 'other',\n        control: 'databaseName',\n        title: 'Database',\n        value: 'database name'\n      }, {\n        view: true,\n        width: 'col-sm-12',\n        key: 'other',\n        control: 'name',\n        title: 'Factor name',\n        value: 'Factor name'\n      }, {\n        view: true,\n        width: 'col-sm-12',\n        key: 'other',\n        control: 'activityName',\n        title: 'Activity name',\n        value: 'Activity name'\n      }, {\n        view: true,\n        width: 'col-sm-12',\n        key: 'other',\n        control: 'scopeName',\n        title: 'Scope',\n        value: 'Not yet selected'\n      }, {\n        view: false,\n        key: 'gwpDataset',\n        label: 'Gwp dataset',\n        control: 'gwpDatasetID',\n        value: null,\n        placeholder: 'Gwp dataset',\n        input: 'input',\n        type: 'number',\n        validators: [{\n          validator: 'required',\n          error: ''\n        }]\n      }, {\n        view: true,\n        width: 'col-sm-12',\n        key: 'verison',\n        label: 'Version',\n        control: 'versionName',\n        value: null,\n        placeholder: 'Version name',\n        input: 'input',\n        type: 'text',\n        validators: [{\n          validator: 'required',\n          error: 'Version name is mandatory'\n        }, {\n          validator: 'nameAlreadyExists',\n          error: 'Version name already exists!'\n        }]\n      }, {\n        view: true,\n        width: 'col-sm-6',\n        key: 'validFrom',\n        id: 'validFrom',\n        label: 'Valid from',\n        control: 'validFrom',\n        value: DATE_CONSTANT.TODAY_YYYY_MM_DD,\n        placeholder: 'Valid from',\n        min: null,\n        max: null,\n        input: 'date',\n        type: 'date',\n        validators: [{\n          validator: 'required',\n          error: 'Date is mandatory'\n        }]\n      }, {\n        view: true,\n        width: 'col-sm-6',\n        key: 'validTill',\n        id: 'validTill',\n        label: 'Valid till',\n        control: 'validTill',\n        value: DATE_CONSTANT.TODAY_YYYY_MM_DD,\n        placeholder: 'Valid till',\n        min: null,\n        max: null,\n        input: 'date',\n        type: 'date',\n        validators: [{\n          validator: 'required',\n          error: 'Date is mandatory'\n        }]\n      }, {\n        view: false,\n        key: 'database',\n        label: 'Database',\n        control: 'databaseID',\n        value: null,\n        placeholder: 'Database',\n        input: 'input',\n        type: 'number',\n        validators: [{\n          validator: 'required',\n          error: 'Database is mandatory'\n        }]\n      }, {\n        view: false,\n        key: 'recordID',\n        control: 'recordID',\n        value: null,\n        validators: []\n      }];\n      this.searchUtility = {};\n      this.scope = [];\n      this.activity = [];\n      this.wordLength = window.innerWidth > 1300 ? 35 : 25;\n      this.customFactorType = 'emission';\n      this.factorDatabaseType = 'custom-emission-factor';\n      this.init = true;\n      this.errorHandling = (control, error) => {\n        return this.detailFG.get(control).hasError(error);\n      };\n      this.currentOrgID = storageService.getStorage(['currentOrgID']);\n    }\n    ngOnInit() {\n      combineLatest([this.activatedRoute.params, this.activatedRoute.queryParams]).subscribe(([params, qParams]) => {\n        this.databaseID = params['cefDBID'];\n        this.databaseName = params['cefDB'];\n        this.factorDatabaseType = params['factorDatabaseType'];\n        if (this.factorDatabaseType == 'custom-estimation-factor') {\n          this.customFactorType = 'estimation';\n        }\n        /* TODO_PN dynamic create url */\n        if (params['factorName']) {\n          this.type = 'version';\n          this.formFields = this.version;\n          this.createUrl = `/carbon-setting/factor-database/${this.factorDatabaseType}/custom/${this.customFactorType}/database/${params['cefDB']}/${params['cefDBID']}/factor/${params['factorName']}/${params['factorID']}/version/create`;\n        } else if (params['cefDB']) {\n          this.type = 'factor';\n          this.formFields = this.factor;\n          this.createSearchUtilities();\n          this.createUrl = `/carbon-setting/factor-database/${this.factorDatabaseType}/custom/${this.customFactorType}/database/${params['cefDB']}/${params['cefDBID']}/factor/create`;\n          this.getScopeList();\n          this.getAllActivity();\n        }\n        this.formFields.find(ff => ff['key'] == 'other' && ff['title'] == 'Database')['value'] = decodeURI(decodeURI(params['cefDB']));\n        this.formFields.find(ff => ff['key'] == 'database' && ff['control'] == 'databaseID')['value'] = Number(decodeURI(decodeURI(params['cefDBID'])));\n        if (this.init) this.initFormGroup();\n        if (qParams['activityID']) {\n          this._selectedActivityID = parseInt(qParams['activityID']);\n          this.detailFG.get('activityID').patchValue(this._selectedActivityID);\n        }\n        if (qParams['gwpDatasetID']) {\n          this.gwpDatabaseIDAC.patchValue(Number(qParams.gwpDatasetID));\n        }\n      });\n    }\n    createSearchUtilities() {\n      this.formFields.forEach(ff => {\n        if (ff['input'] == 'select' && ff['search']) {\n          let searchUtil = ff['searchUtil'];\n          let name = searchUtil['name'];\n          this.searchUtility[name] = new MatSelectSearchService([searchUtil['searchBy']]);\n        }\n      });\n    }\n    getSearchUtil(util) {\n      return this.searchUtility[util];\n    }\n    set scopeName(name) {\n      this.formFields.find(ff => ff['key'] == 'other' && ff['title'] == 'Scope')['value'] = name;\n    }\n    setEntityList(key, list) {\n      this.formFields.find(f => (f === null || f === void 0 ? void 0 : f.key) == key)['entityList'] = list;\n    }\n    initFormGroup() {\n      this.init = false;\n      this.detailFG = this.formBuilder.group(this.createFormGroup());\n    }\n    createFormGroup() {\n      let formGroup = {};\n      let formFields = this.formFields.filter(ff => ff['key'] != 'other');\n      formFields.forEach(ff => {\n        formGroup[ff['control']] = this.formBuilder.control(ff['value'], Validators.compose(ff['validators'].map(v => Validators[v['validator']])));\n      });\n      return formGroup;\n    }\n    get gwpDatabaseIDAC() {\n      return this.detailFG.get('gwpDatasetID');\n    }\n    get viewFormFields() {\n      return this.formFields.filter(ff => ff['view']);\n    }\n    getAllActivity() {\n      this.activityController.getAllActivity().subscribe(activityRes => {\n        if (this.customFactorType == 'estimation') {\n          this.activity = activityRes.filter(activity => activity['scopeKeyID'] == ScopeKeyIDEnum.SCOPE_2_KEY_ID);\n        } else {\n          let filteredActivities = activityRes.filter(activity => activity['scopeKeyID'] !== ScopeKeyIDEnum.SCOPE_3_KEY_ID);\n          this.activity = filteredActivities.filter(a => a['keyID'] != ActivityKeyIDEnum.REFRIGERATION_AC_AND_FIRE_SUPPRESSION && a['keyID'] != ActivityKeyIDEnum.OTHER_FUGITIVE_EMISSION);\n        }\n        this.searchUtility['activitySearchUtil'].entityArr = this.activity;\n        this.searchUtility['activitySearchUtil'].createSubscription();\n        if (this._selectedActivityID) {\n          this.selectionChange('activity', this._selectedActivityID);\n        }\n      }, error => {\n        console.log('error in getAllActivity() -', error);\n        this.toastrService.openToast('Error', 'Error while fetching activities', 'error');\n      });\n    }\n    getScopeList() {\n      this.scopeController.getScopeList().subscribe(scopeRes => {\n        this.scope = scopeRes;\n      }, error => {\n        console.log('error in getScopeList() -', error);\n        this.toastrService.openToast('Error', 'Error while fetching scopes', 'error');\n      });\n    }\n    selectionChange(key, entityID) {\n      if (key == 'activity') {\n        let selectedActivity = this.activity.find(activity => activity['id'] == entityID);\n        this.scopeName = this.scope.find(scope => scope['id'] == selectedActivity['scopeID'])['name'];\n        this.router.navigate([this.createUrl, {\n          outlets: {\n            reference: [selectedActivity['keyID']],\n            value: this.customFactorType == 'emission' ? [this.customFactorType, 'factor-value'] : [this.customFactorType, selectedActivity['keyID']]\n          }\n        }], {\n          queryParams: {\n            activityID: selectedActivity['id']\n          }\n        });\n      }\n    }\n    patchFactorDetails(detail) {\n      this.formFields.forEach(ff => {\n        if (ff['key'] == 'other') {\n          ff['value'] = detail[ff['control']];\n        }\n      });\n    }\n    set min(min) {\n      this.formFields.find(f => (f === null || f === void 0 ? void 0 : f.key) == 'validTill')['min'] = min;\n    }\n    set max(max) {\n      this.formFields.find(f => (f === null || f === void 0 ? void 0 : f.key) == 'validFrom')['max'] = max;\n    }\n    formatDate(date, control) {\n      let formatted = moment(date).format(\"YYYY-MM-DD\");\n      this.detailFG.get(control).patchValue(formatted);\n      control == 'validFrom' ? this.min = formatted : this.max = formatted;\n    }\n    patchDetails(detail) {\n      this.detailFG.patchValue(detail);\n    }\n    isValidForm() {\n      if (this.detailFG.invalid) {\n        this.detailFG.markAllAsTouched();\n        console.log('invalid form -', this.detailFG);\n        return false;\n      }\n      return true;\n    }\n  }\n  DetailComponent.ɵfac = function DetailComponent_Factory(t) {\n    return new (t || DetailComponent)(i0.ɵɵdirectiveInject(i1.Router), i0.ɵɵdirectiveInject(i2.StorageService), i0.ɵɵdirectiveInject(i1.ActivatedRoute), i0.ɵɵdirectiveInject(i3.FormBuilder), i0.ɵɵdirectiveInject(i4.DateService), i0.ɵɵdirectiveInject(i5.ToastrService), i0.ɵɵdirectiveInject(i6.ScopeController), i0.ɵɵdirectiveInject(i7.ActivityController));\n  };\n  DetailComponent.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n    type: DetailComponent,\n    selectors: [[\"factor-detail\"]],\n    decls: 6,\n    vars: 2,\n    consts: [[1, \"border\", \"cardOverwrite\"], [1, \"cardTitle\", \"pb-2\"], [3, \"formGroup\"], [1, \"row\"], [4, \"ngFor\", \"ngForOf\"], [3, \"ngSwitch\"], [3, \"class\", 4, \"ngSwitchCase\"], [3, \"class\", 4, \"ngSwitchDefault\"], [1, \"matFieldWidth100\", 3, \"appearance\"], [1, \"formLabel\"], [\"matInput\", \"\", 1, \"formPlaceholder\", 3, \"type\", \"formControlName\", \"placeholder\"], [4, \"ngIf\"], [3, \"formControlName\", \"mulitple\", \"selectionChange\"], [3, \"value\", 4, \"ngFor\", \"ngForOf\"], [3, \"formControl\", \"placeholderLabel\", \"noEntriesFoundLabel\"], [3, \"value\"], [1, \"matFieldWidth100\", \"cursorPointer\", 3, \"id\", \"appearance\", \"click\", \"keydown.enter\", \"keydown.arrowdown\"], [\"matInput\", \"\", \"readonly\", \"\", 1, \"noFocus\", 3, \"matDatepicker\", \"formControlName\", \"min\", \"max\", \"disabled\", \"dateInput\"], [\"matSuffix\", \"\", 3, \"for\"], [3, \"disabled\", \"closed\"], [\"date\", \"\"], [1, \"row\", \"pb-3\", \"w-100\"], [1, \"col-sm-6\", \"centerAlignVertical\"], [1, \"col-form-label\", \"ms-1\"], [1, \"form-control-plaintext\", \"fw-bold\"], [\"matTooltipPosition\", \"above\", \"matTooltipClass\", \"nameTooltip\", 3, \"matTooltip\"]],\n    template: function DetailComponent_Template(rf, ctx) {\n      if (rf & 1) {\n        i0.ɵɵelementStart(0, \"mat-card\", 0);\n        i0.ɵɵelementStart(1, \"div\", 1);\n        i0.ɵɵtext(2, \" Details \");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(3, \"form\", 2);\n        i0.ɵɵelementStart(4, \"div\", 3);\n        i0.ɵɵtemplate(5, DetailComponent_ng_container_5_Template, 6, 4, \"ng-container\", 4);\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementEnd();\n      }\n      if (rf & 2) {\n        i0.ɵɵadvance(3);\n        i0.ɵɵproperty(\"formGroup\", ctx.detailFG);\n        i0.ɵɵadvance(2);\n        i0.ɵɵproperty(\"ngForOf\", ctx.viewFormFields);\n      }\n    },\n    directives: [i8.MatCard, i3.ɵNgNoValidate, i3.NgControlStatusGroup, i3.FormGroupDirective, i9.NgForOf, i9.NgSwitch, i9.NgSwitchCase, i9.NgSwitchDefault, i10.MatFormField, i10.MatLabel, i11.MatInput, i3.DefaultValueAccessor, i3.NgControlStatus, i3.FormControlName, i10.MatError, i9.NgIf, i12.MatSelect, i13.MatOption, i14.MatSelectSearchComponent, i3.FormControlDirective, i15.MatDatepickerInput, i15.MatDatepickerToggle, i10.MatSuffix, i15.MatDatepicker, i16.MatTooltip],\n    pipes: [i9.AsyncPipe, i17.EllipsisPipeService],\n    encapsulation: 2\n  });\n  return DetailComponent;\n})();","map":null,"metadata":{},"sourceType":"module"}