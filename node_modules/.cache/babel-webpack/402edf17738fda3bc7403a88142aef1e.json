{"ast":null,"code":"import { __awaiter } from \"tslib\";\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@carbon/controller/emission.controller\";\nexport let EmissionService = /*#__PURE__*/(() => {\n  class EmissionService {\n    constructor(emissionController) {\n      this.emissionController = emissionController;\n    }\n    getScopeActivityWiseYearlyEmission(orgID, startDate, endDate) {\n      return __awaiter(this, void 0, void 0, function* () {\n        let ghgBaseYearM;\n        try {\n          ghgBaseYearM = yield this.emissionController.getScopeActivityWiseYearlyEmission(orgID, startDate, endDate).toPromise();\n          if (ghgBaseYearM) {\n            return ghgBaseYearM;\n          } else {\n            return [];\n          }\n        } catch (error) {\n          console.error('Error -', error);\n          return [];\n        }\n      });\n    }\n    getConsolidationApproachBasedScopeActivityEmissionByOrgID(orgID, startDate, endDate) {\n      return __awaiter(this, void 0, void 0, function* () {\n        let yearlyEmission;\n        try {\n          yearlyEmission = yield this.emissionController.getConsolidationApproachBasedScopeActivityEmissionByOrgID(orgID, startDate, endDate).toPromise();\n          if (yearlyEmission) return yearlyEmission;else return [];\n        } catch (error) {\n          console.error('Error -', error);\n          return [];\n        }\n      });\n    }\n  }\n  EmissionService.ɵfac = function EmissionService_Factory(t) {\n    return new (t || EmissionService)(i0.ɵɵinject(i1.EmissionController));\n  };\n  EmissionService.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n    token: EmissionService,\n    factory: EmissionService.ɵfac,\n    providedIn: 'root'\n  });\n  return EmissionService;\n})();","map":null,"metadata":{},"sourceType":"module"}