{"ast":null,"code":"import { __awaiter } from \"tslib\";\nimport { FormGroup, Validators } from '@angular/forms';\nimport { MAT_DIALOG_DATA } from '@angular/material/dialog';\nimport { cloneDeep } from 'lodash-es';\nimport { forkJoin } from 'rxjs';\nimport { ConsolidationApproachKeyIDEnum } from '@carbon/enum/consolidation-approach.enum';\n// tsc-library\nimport { ToastrColor } from '@library/toastr-service';\nimport { ButtonLabelEnum, InvalidForm, MaterialFormFieldAppearance } from '@library/tsc-common';\nimport { UnitTypeKeyID, UomCode } from '@library/unit-service';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/forms\";\nimport * as i2 from \"@library/storage-service\";\nimport * as i3 from \"@carbon/service/consolidation-approach.service\";\nimport * as i4 from \"@library/unit-service\";\nimport * as i5 from \"@angular/material/dialog\";\nimport * as i6 from \"@library/toastr-service\";\nimport * as i7 from \"@angular/material/button\";\nimport * as i8 from \"@angular/material/tooltip\";\nimport * as i9 from \"@angular/common\";\nimport * as i10 from \"@angular/material/form-field\";\nimport * as i11 from \"@angular/material/input\";\nfunction InOutsourcingBaseYearEmissionDialogComponent_td_16_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"td\", 16);\n    i0.ɵɵtext(1, \" Operational control approach \");\n    i0.ɵɵelementStart(2, \"span\", 17);\n    i0.ɵɵtext(3, \"(tCO\");\n    i0.ɵɵelementStart(4, \"sub\");\n    i0.ɵɵtext(5, \"2\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵtext(6, \"e)\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementEnd();\n  }\n}\nfunction InOutsourcingBaseYearEmissionDialogComponent_td_17_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"td\", 16);\n    i0.ɵɵtext(1, \" Financial control approach \");\n    i0.ɵɵelementStart(2, \"span\", 17);\n    i0.ɵɵtext(3, \"(tCO\");\n    i0.ɵɵelementStart(4, \"sub\");\n    i0.ɵɵtext(5, \"2\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵtext(6, \"e)\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementEnd();\n  }\n}\nfunction InOutsourcingBaseYearEmissionDialogComponent_td_18_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"td\", 16);\n    i0.ɵɵtext(1, \" Equity control approach \");\n    i0.ɵɵelementStart(2, \"span\", 17);\n    i0.ɵɵtext(3, \"(tCO\");\n    i0.ɵɵelementStart(4, \"sub\");\n    i0.ɵɵtext(5, \"2\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵtext(6, \"e)\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementEnd();\n  }\n}\nfunction InOutsourcingBaseYearEmissionDialogComponent_tr_20_ng_container_6_mat_error_10_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"mat-error\");\n    i0.ɵɵtext(1, \"This field cannot be negative\");\n    i0.ɵɵelementEnd();\n  }\n}\nfunction InOutsourcingBaseYearEmissionDialogComponent_tr_20_ng_container_6_mat_error_11_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"mat-error\");\n    i0.ɵɵtext(1, \"Enter emission\");\n    i0.ɵɵelementEnd();\n  }\n}\nfunction InOutsourcingBaseYearEmissionDialogComponent_tr_20_ng_container_6_mat_error_23_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"mat-error\");\n    i0.ɵɵtext(1, \"This field cannot be negative\");\n    i0.ɵɵelementEnd();\n  }\n}\nfunction InOutsourcingBaseYearEmissionDialogComponent_tr_20_ng_container_6_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementContainerStart(0);\n    i0.ɵɵelementContainerStart(1, 22);\n    i0.ɵɵelementStart(2, \"td\", 20);\n    i0.ɵɵelementStart(3, \"div\", 23);\n    i0.ɵɵelementStart(4, \"div\", 24);\n    i0.ɵɵelementStart(5, \"mat-form-field\", 25);\n    i0.ɵɵelementStart(6, \"mat-label\", 26);\n    i0.ɵɵtext(7, \" Enter emission\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelement(8, \"input\", 27, 28);\n    i0.ɵɵtemplate(10, InOutsourcingBaseYearEmissionDialogComponent_tr_20_ng_container_6_mat_error_10_Template, 2, 0, \"mat-error\", 21);\n    i0.ɵɵtemplate(11, InOutsourcingBaseYearEmissionDialogComponent_tr_20_ng_container_6_mat_error_11_Template, 2, 0, \"mat-error\", 21);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(12, \"div\", 29);\n    i0.ɵɵelementStart(13, \"mat-form-field\", 25);\n    i0.ɵɵelementStart(14, \"mat-label\", 26);\n    i0.ɵɵtext(15, \" Enter biogenic emission \");\n    i0.ɵɵelementStart(16, \"span\");\n    i0.ɵɵtext(17, \"(tCO\");\n    i0.ɵɵelementStart(18, \"sub\");\n    i0.ɵɵtext(19, \"2\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵtext(20, \"e)\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementEnd();\n    i0.ɵɵelement(21, \"input\", 27, 28);\n    i0.ɵɵtemplate(23, InOutsourcingBaseYearEmissionDialogComponent_tr_20_ng_container_6_mat_error_23_Template, 2, 0, \"mat-error\", 21);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementContainerEnd();\n    i0.ɵɵelementContainerEnd();\n  }\n  if (rf & 2) {\n    const emissionGroup_r4 = i0.ɵɵnextContext().$implicit;\n    const ctx_r6 = i0.ɵɵnextContext();\n    i0.ɵɵadvance(5);\n    i0.ɵɵproperty(\"appearance\", ctx_r6.MaterialFormFieldAppearance.FORM_FIELD_APPEARANCE);\n    i0.ɵɵadvance(3);\n    i0.ɵɵproperty(\"min\", 0)(\"formControl\", emissionGroup_r4.get(\"operationalControlApproach\").get(\"emission\"));\n    i0.ɵɵadvance(2);\n    i0.ɵɵproperty(\"ngIf\", emissionGroup_r4.get(\"operationalControlApproach\").get(\"emission\").hasError(\"min\"));\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngIf\", emissionGroup_r4.get(\"operationalControlApproach\").get(\"emission\").hasError(\"required\"));\n    i0.ɵɵadvance(2);\n    i0.ɵɵproperty(\"appearance\", ctx_r6.MaterialFormFieldAppearance.FORM_FIELD_APPEARANCE);\n    i0.ɵɵadvance(8);\n    i0.ɵɵproperty(\"min\", 0)(\"formControl\", emissionGroup_r4.get(\"operationalControlApproach\").get(\"biogenicEmission\"));\n    i0.ɵɵadvance(2);\n    i0.ɵɵproperty(\"ngIf\", emissionGroup_r4.get(\"operationalControlApproach\").get(\"biogenicEmission\").hasError(\"min\"));\n  }\n}\nfunction InOutsourcingBaseYearEmissionDialogComponent_tr_20_ng_container_7_mat_error_10_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"mat-error\");\n    i0.ɵɵtext(1, \"This field cannot be negative\");\n    i0.ɵɵelementEnd();\n  }\n}\nfunction InOutsourcingBaseYearEmissionDialogComponent_tr_20_ng_container_7_mat_error_11_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"mat-error\");\n    i0.ɵɵtext(1, \"Enter emission\");\n    i0.ɵɵelementEnd();\n  }\n}\nfunction InOutsourcingBaseYearEmissionDialogComponent_tr_20_ng_container_7_mat_error_23_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"mat-error\");\n    i0.ɵɵtext(1, \"This field cannot be negative\");\n    i0.ɵɵelementEnd();\n  }\n}\nfunction InOutsourcingBaseYearEmissionDialogComponent_tr_20_ng_container_7_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementContainerStart(0);\n    i0.ɵɵelementContainerStart(1, 30);\n    i0.ɵɵelementStart(2, \"td\", 20);\n    i0.ɵɵelementStart(3, \"div\", 23);\n    i0.ɵɵelementStart(4, \"div\", 24);\n    i0.ɵɵelementStart(5, \"mat-form-field\", 25);\n    i0.ɵɵelementStart(6, \"mat-label\", 26);\n    i0.ɵɵtext(7, \" Enter emission\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelement(8, \"input\", 27, 28);\n    i0.ɵɵtemplate(10, InOutsourcingBaseYearEmissionDialogComponent_tr_20_ng_container_7_mat_error_10_Template, 2, 0, \"mat-error\", 21);\n    i0.ɵɵtemplate(11, InOutsourcingBaseYearEmissionDialogComponent_tr_20_ng_container_7_mat_error_11_Template, 2, 0, \"mat-error\", 21);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(12, \"div\", 29);\n    i0.ɵɵelementStart(13, \"mat-form-field\", 25);\n    i0.ɵɵelementStart(14, \"mat-label\", 26);\n    i0.ɵɵtext(15, \" Enter biogenic emission \");\n    i0.ɵɵelementStart(16, \"span\");\n    i0.ɵɵtext(17, \"(tCO\");\n    i0.ɵɵelementStart(18, \"sub\");\n    i0.ɵɵtext(19, \"2\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵtext(20, \"e)\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementEnd();\n    i0.ɵɵelement(21, \"input\", 27, 28);\n    i0.ɵɵtemplate(23, InOutsourcingBaseYearEmissionDialogComponent_tr_20_ng_container_7_mat_error_23_Template, 2, 0, \"mat-error\", 21);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementContainerEnd();\n    i0.ɵɵelementContainerEnd();\n  }\n  if (rf & 2) {\n    const emissionGroup_r4 = i0.ɵɵnextContext().$implicit;\n    const ctx_r7 = i0.ɵɵnextContext();\n    i0.ɵɵadvance(5);\n    i0.ɵɵproperty(\"appearance\", ctx_r7.MaterialFormFieldAppearance.FORM_FIELD_APPEARANCE);\n    i0.ɵɵadvance(3);\n    i0.ɵɵproperty(\"min\", 0)(\"formControl\", emissionGroup_r4.get(\"financialControlApproach\").get(\"emission\"));\n    i0.ɵɵadvance(2);\n    i0.ɵɵproperty(\"ngIf\", emissionGroup_r4.get(\"financialControlApproach\").get(\"emission\").hasError(\"min\"));\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngIf\", emissionGroup_r4.get(\"financialControlApproach\").get(\"emission\").hasError(\"required\"));\n    i0.ɵɵadvance(2);\n    i0.ɵɵproperty(\"appearance\", ctx_r7.MaterialFormFieldAppearance.FORM_FIELD_APPEARANCE);\n    i0.ɵɵadvance(8);\n    i0.ɵɵproperty(\"min\", 0)(\"formControl\", emissionGroup_r4.get(\"financialControlApproach\").get(\"biogenicEmission\"));\n    i0.ɵɵadvance(2);\n    i0.ɵɵproperty(\"ngIf\", emissionGroup_r4.get(\"financialControlApproach\").get(\"biogenicEmission\").hasError(\"min\"));\n  }\n}\nfunction InOutsourcingBaseYearEmissionDialogComponent_tr_20_ng_container_8_mat_error_10_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"mat-error\");\n    i0.ɵɵtext(1, \"This field cannot be negative\");\n    i0.ɵɵelementEnd();\n  }\n}\nfunction InOutsourcingBaseYearEmissionDialogComponent_tr_20_ng_container_8_mat_error_11_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"mat-error\");\n    i0.ɵɵtext(1, \"Enter emission\");\n    i0.ɵɵelementEnd();\n  }\n}\nfunction InOutsourcingBaseYearEmissionDialogComponent_tr_20_ng_container_8_mat_error_23_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"mat-error\");\n    i0.ɵɵtext(1, \"This field cannot be negative\");\n    i0.ɵɵelementEnd();\n  }\n}\nfunction InOutsourcingBaseYearEmissionDialogComponent_tr_20_ng_container_8_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementContainerStart(0);\n    i0.ɵɵelementContainerStart(1, 31);\n    i0.ɵɵelementStart(2, \"td\", 20);\n    i0.ɵɵelementStart(3, \"div\", 23);\n    i0.ɵɵelementStart(4, \"div\", 24);\n    i0.ɵɵelementStart(5, \"mat-form-field\", 25);\n    i0.ɵɵelementStart(6, \"mat-label\", 26);\n    i0.ɵɵtext(7, \" Enter emission\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelement(8, \"input\", 27, 28);\n    i0.ɵɵtemplate(10, InOutsourcingBaseYearEmissionDialogComponent_tr_20_ng_container_8_mat_error_10_Template, 2, 0, \"mat-error\", 21);\n    i0.ɵɵtemplate(11, InOutsourcingBaseYearEmissionDialogComponent_tr_20_ng_container_8_mat_error_11_Template, 2, 0, \"mat-error\", 21);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(12, \"div\", 29);\n    i0.ɵɵelementStart(13, \"mat-form-field\", 25);\n    i0.ɵɵelementStart(14, \"mat-label\", 26);\n    i0.ɵɵtext(15, \" Enter biogenic emission \");\n    i0.ɵɵelementStart(16, \"span\");\n    i0.ɵɵtext(17, \"(tCO\");\n    i0.ɵɵelementStart(18, \"sub\");\n    i0.ɵɵtext(19, \"2\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵtext(20, \"e)\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementEnd();\n    i0.ɵɵelement(21, \"input\", 27, 28);\n    i0.ɵɵtemplate(23, InOutsourcingBaseYearEmissionDialogComponent_tr_20_ng_container_8_mat_error_23_Template, 2, 0, \"mat-error\", 21);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementContainerEnd();\n    i0.ɵɵelementContainerEnd();\n  }\n  if (rf & 2) {\n    const emissionGroup_r4 = i0.ɵɵnextContext().$implicit;\n    const ctx_r8 = i0.ɵɵnextContext();\n    i0.ɵɵadvance(5);\n    i0.ɵɵproperty(\"appearance\", ctx_r8.MaterialFormFieldAppearance.FORM_FIELD_APPEARANCE);\n    i0.ɵɵadvance(3);\n    i0.ɵɵproperty(\"min\", 0)(\"formControl\", emissionGroup_r4.get(\"equityShareApproach\").get(\"emission\"));\n    i0.ɵɵadvance(2);\n    i0.ɵɵproperty(\"ngIf\", emissionGroup_r4.get(\"equityShareApproach\").get(\"emission\").hasError(\"min\"));\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngIf\", emissionGroup_r4.get(\"equityShareApproach\").get(\"emission\").hasError(\"required\"));\n    i0.ɵɵadvance(2);\n    i0.ɵɵproperty(\"appearance\", ctx_r8.MaterialFormFieldAppearance.FORM_FIELD_APPEARANCE);\n    i0.ɵɵadvance(8);\n    i0.ɵɵproperty(\"min\", 0)(\"formControl\", emissionGroup_r4.get(\"equityShareApproach\").get(\"biogenicEmission\"));\n    i0.ɵɵadvance(2);\n    i0.ɵɵproperty(\"ngIf\", emissionGroup_r4.get(\"equityShareApproach\").get(\"biogenicEmission\").hasError(\"min\"));\n  }\n}\nfunction InOutsourcingBaseYearEmissionDialogComponent_tr_20_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"tr\");\n    i0.ɵɵelementContainerStart(1, 18);\n    i0.ɵɵelementStart(2, \"td\", 19);\n    i0.ɵɵtext(3);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(4, \"td\", 20);\n    i0.ɵɵtext(5);\n    i0.ɵɵelementEnd();\n    i0.ɵɵtemplate(6, InOutsourcingBaseYearEmissionDialogComponent_tr_20_ng_container_6_Template, 24, 9, \"ng-container\", 21);\n    i0.ɵɵtemplate(7, InOutsourcingBaseYearEmissionDialogComponent_tr_20_ng_container_7_Template, 24, 9, \"ng-container\", 21);\n    i0.ɵɵtemplate(8, InOutsourcingBaseYearEmissionDialogComponent_tr_20_ng_container_8_Template, 24, 9, \"ng-container\", 21);\n    i0.ɵɵelementContainerEnd();\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const emissionGroup_r4 = ctx.$implicit;\n    const i_r5 = ctx.index;\n    const ctx_r3 = i0.ɵɵnextContext();\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"formGroupName\", i_r5);\n    i0.ɵɵadvance(2);\n    i0.ɵɵtextInterpolate(emissionGroup_r4.get(\"scope\").value);\n    i0.ɵɵadvance(2);\n    i0.ɵɵtextInterpolate(emissionGroup_r4.get(\"activityName\").value);\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngIf\", ctx_r3.operationalControlApproachDisplay);\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngIf\", ctx_r3.financialControlApproachDisplay);\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngIf\", ctx_r3.equityShareApproachDisplay);\n  }\n}\n// /tsc-library\nexport let InOutsourcingBaseYearEmissionDialogComponent = /*#__PURE__*/(() => {\n  class InOutsourcingBaseYearEmissionDialogComponent {\n    constructor(scopeActivityEmissionDataFB, storageService, consolidationApproachService, unitService, dialogRef, toastrService, data) {\n      this.scopeActivityEmissionDataFB = scopeActivityEmissionDataFB;\n      this.storageService = storageService;\n      this.consolidationApproachService = consolidationApproachService;\n      this.unitService = unitService;\n      this.dialogRef = dialogRef;\n      this.toastrService = toastrService;\n      this.data = data;\n      this.MaterialFormFieldAppearance = MaterialFormFieldAppearance;\n      this.ButtonLabelEnum = ButtonLabelEnum;\n      this.consolidationApproachList = [];\n      this.ConsolidationApproachKeyID = ConsolidationApproachKeyIDEnum;\n      this.operationalControlApproachDisplay = false;\n      this.financialControlApproachDisplay = false;\n      this.equityShareApproachDisplay = false;\n      this.unitM = [];\n      this.dialogRef.disableClose = true;\n      this.year = data['year'];\n      this.scopeID = data['scopeID'];\n      this.scopeName = data['scopeName'];\n      this.activityList = data['selectedScopeActivity'];\n      this.updatedActivityList = cloneDeep(data['selectedScopeActivity']);\n      this.yearlyEmissionData = data['yearlyEmissionData'];\n    }\n    ngOnInit() {\n      this.rootOrgID = this.storageService.getStorage('rootOrgID');\n      console.log('oninit');\n      this.scopeActivityEmissionDataFGInit();\n      this.getConsolidationApproachList();\n      this.formInitialization();\n    }\n    scopeActivityEmissionDataFGInit() {\n      this.scopeActivityEmissionDataFG = this.scopeActivityEmissionDataFB.group({\n        year: [this.year],\n        emissionRecords: this.scopeActivityEmissionDataFB.array([])\n      });\n    }\n    formInitialization() {\n      forkJoin([this.unitService.getUnit([`type:` + UnitTypeKeyID.EQUIVALENT_EMISSION])]).subscribe(([unitM]) => {\n        this.unitM = unitM;\n        this.tCo2EUnitM = this.unitM.find(unit => unit.uomCode == UomCode.TCO2E);\n        if (this.yearlyEmissionData) {\n          this.patchScopeActivityToFormGroup(this.yearlyEmissionData);\n        } else {\n          this.addScopeActivityToFormGroup();\n        }\n      }, error => {\n        console.error('error in formInitialization -', error);\n      });\n    }\n    getConsolidationApproachList() {\n      return __awaiter(this, void 0, void 0, function* () {\n        this.consolidationApproachList = yield this.consolidationApproachService.getAllConsolidationApproachByOrgID(this.rootOrgID);\n        for (const approach of this.consolidationApproachList) {\n          if (approach.keyID == 'operational-control') {\n            this.operationalControlApproachDisplay = true;\n          } else if (approach.keyID == 'financial-control') {\n            this.financialControlApproachDisplay = true;\n          } else if (approach.keyID == 'equity-control') {\n            this.equityShareApproachDisplay = true;\n          }\n        }\n        this.updateActivityValidators();\n      });\n    }\n    addValidators(formGroup) {\n      for (let approach of this.consolidationApproachList) {\n        switch (approach.keyID) {\n          case ConsolidationApproachKeyIDEnum.OPERATIONAL_CONTROL_APPROACH:\n            formGroup.get('operationalControlApproach.emission').addValidators([Validators.required, Validators.min(0)]);\n            break;\n          case ConsolidationApproachKeyIDEnum.FINANCIAL_CONTROL_APPROACH:\n            formGroup.get('financialControlApproach.emission').addValidators([Validators.required, Validators.min(0)]);\n            break;\n          case ConsolidationApproachKeyIDEnum.EQUITY_CONTROL_APPROACH:\n            formGroup.get('equityShareApproach.emission').addValidators([Validators.required, Validators.min(0)]);\n            break;\n        }\n        this.updateValueAndValidity(formGroup);\n      }\n    }\n    removeValidators(formGroup) {\n      formGroup.get('operationalControlApproach.emission').clearValidators();\n      formGroup.get('financialControlApproach.emission').clearValidators();\n      formGroup.get('equityShareApproach.emission').clearValidators();\n      this.updateValueAndValidity(formGroup);\n    }\n    updateValueAndValidity(formGroup) {\n      formGroup.get('operationalControlApproach.emission').updateValueAndValidity({\n        emitEvent: false\n      });\n      formGroup.get('financialControlApproach.emission').updateValueAndValidity({\n        emitEvent: false\n      });\n      formGroup.get('equityShareApproach.emission').updateValueAndValidity({\n        emitEvent: false\n      });\n    }\n    updateActivityValidators() {\n      this.currentFormArr = this.scopeActivityEmissionDataFG.get('emissionRecords');\n      for (let i = 0; i < this.currentFormArr.controls.length; ++i) {\n        let item = this.currentFormArr.controls[i];\n        this.removeValidators(item);\n        this.addValidators(item);\n      }\n    }\n    addScopeActivityToFormGroup() {\n      const formArray = this.scopeActivityEmissionDataFG.get('emissionRecords');\n      for (const activity of this.activityList) {\n        let activityGroup = new FormGroup({});\n        activityGroup = this.addScopeActivityToFormGroupFormControl(activityGroup, activity);\n        formArray.push(activityGroup);\n      }\n    }\n    addScopeActivityToFormGroupFormControl(activityGroup, activity) {\n      activityGroup = this.scopeActivityEmissionDataFB.group({\n        scope: this.scopeName,\n        activityID: activity.id,\n        activityKeyID: activity.keyID,\n        activityName: activity.name,\n        operationalControlApproach: this.scopeActivityEmissionDataFB.group({\n          emission: [null, [Validators.required, Validators.min(0)]],\n          emissionUnitID: [this.tCo2EUnitM.id],\n          biogenicEmission: [null, Validators.min(0)],\n          biogenicEmissionUnitID: [this.tCo2EUnitM.id],\n          consolidationApproachKeyID: ConsolidationApproachKeyIDEnum.OPERATIONAL_CONTROL_APPROACH\n        }),\n        financialControlApproach: this.scopeActivityEmissionDataFB.group({\n          emission: [null, [Validators.required, Validators.min(0)]],\n          emissionUnitID: [this.tCo2EUnitM.id],\n          biogenicEmission: [null, Validators.min(0)],\n          biogenicEmissionUnitID: [this.tCo2EUnitM.id],\n          consolidationApproachKeyID: ConsolidationApproachKeyIDEnum.FINANCIAL_CONTROL_APPROACH\n        }),\n        equityShareApproach: this.scopeActivityEmissionDataFB.group({\n          emission: [null, [Validators.required, Validators.min(0)]],\n          emissionUnitID: [this.tCo2EUnitM.id],\n          biogenicEmission: [null, Validators.min(0)],\n          biogenicEmissionUnitID: [this.tCo2EUnitM.id],\n          consolidationApproachKeyID: ConsolidationApproachKeyIDEnum.EQUITY_CONTROL_APPROACH\n        })\n      });\n      return activityGroup;\n    }\n    getEmissionRecord(group) {\n      return this[group].get('emissionRecords');\n    }\n    patchScopeActivityToFormGroup(yearlyEmissionData) {\n      const emissionRecords = yearlyEmissionData.emissionRecords;\n      this.scopeActivityEmissionDataFG.patchValue({\n        year: yearlyEmissionData.year\n      });\n      let formArray;\n      formArray = this.scopeActivityEmissionDataFG.get('emissionRecords');\n      while (formArray.length) {\n        formArray.removeAt(0);\n      }\n      emissionRecords.forEach(record => {\n        var _a, _b, _c, _d, _e, _f;\n        for (const activity of this.activityList) {\n          if (activity.keyID == record.activityKeyID) {\n            formArray.push(this.scopeActivityEmissionDataFB.group({\n              scope: record.scope,\n              activityID: record.activityID,\n              activityKeyID: record.activityKeyID,\n              activityName: record.activityName,\n              operationalControlApproach: this.scopeActivityEmissionDataFB.group({\n                emission: [(_a = record.operationalControlApproach) === null || _a === void 0 ? void 0 : _a.emission, [Validators.required, Validators.min(0)]],\n                emissionUnitID: [26],\n                biogenicEmission: [(_b = record.operationalControlApproach) === null || _b === void 0 ? void 0 : _b.biogenicEmission, Validators.min(0)],\n                biogenicEmissionUnitID: [26],\n                consolidationApproachKeyID: ConsolidationApproachKeyIDEnum.OPERATIONAL_CONTROL_APPROACH\n              }),\n              financialControlApproach: this.scopeActivityEmissionDataFB.group({\n                emission: [(_c = record.financialControlApproach) === null || _c === void 0 ? void 0 : _c.emission, [Validators.required, Validators.min(0)]],\n                emissionUnitID: [26],\n                biogenicEmission: [(_d = record.financialControlApproach) === null || _d === void 0 ? void 0 : _d.biogenicEmission, Validators.min(0)],\n                biogenicEmissionUnitID: [26],\n                consolidationApproachKeyID: ConsolidationApproachKeyIDEnum.FINANCIAL_CONTROL_APPROACH\n              }),\n              equityShareApproach: this.scopeActivityEmissionDataFB.group({\n                emission: [(_e = record.equityShareApproach) === null || _e === void 0 ? void 0 : _e.emission, [Validators.required, Validators.min(0)]],\n                emissionUnitID: [this.tCo2EUnitM.id],\n                biogenicEmission: [(_f = record.equityShareApproach) === null || _f === void 0 ? void 0 : _f.biogenicEmission, Validators.min(0)],\n                biogenicEmissionUnitID: [this.tCo2EUnitM.id],\n                consolidationApproachKeyID: ConsolidationApproachKeyIDEnum.EQUITY_CONTROL_APPROACH\n              })\n            }));\n            this.updatedActivityList.forEach(data => {\n              if (record.activityKeyID == data.keyID) {\n                let index = this.updatedActivityList.indexOf(data);\n                this.updatedActivityList.splice(index, 1);\n              }\n            });\n          }\n        }\n      });\n      this.updatedActivityList.forEach(activity => {\n        let activityGroup = new FormGroup({});\n        activityGroup = this.addScopeActivityToFormGroupFormControl(activityGroup, activity);\n        formArray.push(activityGroup);\n      });\n    }\n    saveEmission() {\n      if (this.scopeActivityEmissionDataFG.invalid) {\n        this.scopeActivityEmissionDataFG.markAllAsTouched();\n        this.toastrService.openToast(InvalidForm.INVALID_FORM_TITLE, InvalidForm.INVALID_FORM_MESSAGE, ToastrColor.ERROR);\n        return;\n      }\n      this.dialogRef.close(this.scopeActivityEmissionDataFG.value);\n    }\n  }\n  InOutsourcingBaseYearEmissionDialogComponent.ɵfac = function InOutsourcingBaseYearEmissionDialogComponent_Factory(t) {\n    return new (t || InOutsourcingBaseYearEmissionDialogComponent)(i0.ɵɵdirectiveInject(i1.FormBuilder), i0.ɵɵdirectiveInject(i2.StorageService), i0.ɵɵdirectiveInject(i3.ConsolidationApproachService), i0.ɵɵdirectiveInject(i4.UnitService), i0.ɵɵdirectiveInject(i5.MatDialogRef), i0.ɵɵdirectiveInject(i6.ToastrService), i0.ɵɵdirectiveInject(MAT_DIALOG_DATA));\n  };\n  InOutsourcingBaseYearEmissionDialogComponent.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n    type: InOutsourcingBaseYearEmissionDialogComponent,\n    selectors: [[\"app-in-outsourcing-base-year-emission-dialog\"]],\n    decls: 24,\n    vars: 7,\n    consts: [[\"mat-dialog-title\", \"\"], [1, \"dialogTitle\"], [\"mat-icon-button\", \"\", \"cdkFocusInitial\", \"\", \"matTooltip\", \"Close\", \"matTooltipPosition\", \"before\", 1, \"float-end\"], [\"mat-dialog-close\", \"\", 1, \"material-symbols-outlined\"], [\"mat-dialog-content\", \"\", 1, \"matDialogContent\"], [1, \"row\", \"mt-2\"], [3, \"formGroup\"], [1, \"table\", \"reportTable\"], [1, \"tableRowBgColor\"], [1, \"fw-bold\", \"columnWidth1\"], [1, \"fw-bold\", \"columnWidth3\"], [\"class\", \"fw-bold\", 4, \"ngIf\"], [\"formArrayName\", \"emissionRecords\"], [4, \"ngFor\", \"ngForOf\"], [\"mat-dialog-footer\", \"\", \"align\", \"end\"], [\"type\", \"button\", 1, \"btn\", \"btn-sm\", \"btn-success\", \"mt-2\", 3, \"click\"], [1, \"fw-bold\"], [1, \"ps-1\"], [3, \"formGroupName\"], [1, \"columnWidth1\"], [1, \"columnWidth3\"], [4, \"ngIf\"], [\"formGroupName\", \"operationalControlApproach\"], [1, \"d-flex\", \"align-items-center\"], [1, \"col-sm-4\"], [1, \"matFieldWidth100\", 3, \"appearance\"], [1, \"formLabel\"], [\"matInput\", \"\", \"type\", \"number\", 3, \"min\", \"formControl\"], [\"input\", \"\"], [1, \"ms-2\", \"col-sm-4\"], [\"formGroupName\", \"financialControlApproach\"], [\"formGroupName\", \"equityShareApproach\"]],\n    template: function InOutsourcingBaseYearEmissionDialogComponent_Template(rf, ctx) {\n      if (rf & 1) {\n        i0.ɵɵelementStart(0, \"div\", 0);\n        i0.ɵɵelementStart(1, \"strong\", 1);\n        i0.ɵɵtext(2);\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(3, \"button\", 2);\n        i0.ɵɵelementStart(4, \"span\", 3);\n        i0.ɵɵtext(5, \" close \");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(6, \"div\", 4);\n        i0.ɵɵelementStart(7, \"div\", 5);\n        i0.ɵɵelementStart(8, \"form\", 6);\n        i0.ɵɵelementStart(9, \"table\", 7);\n        i0.ɵɵelementStart(10, \"thead\", 8);\n        i0.ɵɵelementStart(11, \"tr\");\n        i0.ɵɵelementStart(12, \"td\", 9);\n        i0.ɵɵtext(13, \"Scope\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(14, \"td\", 10);\n        i0.ɵɵtext(15, \"Activity type\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵtemplate(16, InOutsourcingBaseYearEmissionDialogComponent_td_16_Template, 7, 0, \"td\", 11);\n        i0.ɵɵtemplate(17, InOutsourcingBaseYearEmissionDialogComponent_td_17_Template, 7, 0, \"td\", 11);\n        i0.ɵɵtemplate(18, InOutsourcingBaseYearEmissionDialogComponent_td_18_Template, 7, 0, \"td\", 11);\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(19, \"tbody\", 12);\n        i0.ɵɵtemplate(20, InOutsourcingBaseYearEmissionDialogComponent_tr_20_Template, 9, 6, \"tr\", 13);\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(21, \"div\", 14);\n        i0.ɵɵelementStart(22, \"button\", 15);\n        i0.ɵɵlistener(\"click\", function InOutsourcingBaseYearEmissionDialogComponent_Template_button_click_22_listener() {\n          return ctx.saveEmission();\n        });\n        i0.ɵɵtext(23);\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementEnd();\n      }\n      if (rf & 2) {\n        i0.ɵɵadvance(2);\n        i0.ɵɵtextInterpolate1(\" GHG base year emission confirmation - \", ctx.year, \" \");\n        i0.ɵɵadvance(6);\n        i0.ɵɵproperty(\"formGroup\", ctx.scopeActivityEmissionDataFG);\n        i0.ɵɵadvance(8);\n        i0.ɵɵproperty(\"ngIf\", ctx.operationalControlApproachDisplay);\n        i0.ɵɵadvance(1);\n        i0.ɵɵproperty(\"ngIf\", ctx.financialControlApproachDisplay);\n        i0.ɵɵadvance(1);\n        i0.ɵɵproperty(\"ngIf\", ctx.equityShareApproachDisplay);\n        i0.ɵɵadvance(2);\n        i0.ɵɵproperty(\"ngForOf\", ctx.getEmissionRecord(\"scopeActivityEmissionDataFG\").controls);\n        i0.ɵɵadvance(3);\n        i0.ɵɵtextInterpolate1(\" \", ctx.ButtonLabelEnum.SAVE_BTN_LABEL, \" \");\n      }\n    },\n    directives: [i5.MatDialogTitle, i7.MatButton, i8.MatTooltip, i5.MatDialogClose, i5.MatDialogContent, i1.ɵNgNoValidate, i1.NgControlStatusGroup, i1.FormGroupDirective, i9.NgIf, i1.FormArrayName, i9.NgForOf, i1.FormGroupName, i10.MatFormField, i10.MatLabel, i11.MatInput, i1.MinValidator, i1.NumberValueAccessor, i1.DefaultValueAccessor, i1.NgControlStatus, i1.FormControlDirective, i10.MatError],\n    styles: [\".mat-cell[_ngcontent-%COMP%], .mat-header-cell[_ngcontent-%COMP%]{border:none!important}td.mat-cell[_ngcontent-%COMP%], td.mat-footer-cell[_ngcontent-%COMP%]{padding:0;border-bottom-style:none}table[_ngcontent-%COMP%] > [_ngcontent-%COMP%]:not(caption) > *[_ngcontent-%COMP%] > *[_ngcontent-%COMP%]{padding:1.6rem .5rem}.columnWidth1[_ngcontent-%COMP%]{min-width:120px}.columnWidth2[_ngcontent-%COMP%]{min-width:140px}.tableRowBgColor[_ngcontent-%COMP%]{background-color:#f0f8ff}\"]\n  });\n  return InOutsourcingBaseYearEmissionDialogComponent;\n})();","map":null,"metadata":{},"sourceType":"module"}