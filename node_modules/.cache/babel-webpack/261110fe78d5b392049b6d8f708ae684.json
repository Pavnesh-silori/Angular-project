{"ast":null,"code":"import { MAT_DIALOG_DATA } from '@angular/material/dialog';\nimport { merge, fromEvent, of as observableOf } from 'rxjs';\nimport { map, startWith, switchMap, catchError } from \"rxjs/operators\";\nimport { faPlus } from '@fortawesome/free-solid-svg-icons';\nimport { ButtonTooltipEnum, MATERIAL_CONSTANT, TABLE_CONSTANT } from '@library/tsc-common';\nimport { ACTIVITY_CONFIG_VIEW_PAGE_CONSTANT } from '@carbon/constant/activity.constant';\nimport { ActivityConfigEnum } from '@carbon/enum/activity-config.enum';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/material/dialog\";\nimport * as i2 from \"@angular/router\";\nimport * as i3 from \"@carbon/controller/activity-config.controller\";\nimport * as i4 from \"@library/storage-service\";\nimport * as i5 from \"@library/tsc-common\";\nimport * as i6 from \"@angular/material/core\";\nimport * as i7 from \"@angular/material/tooltip\";\nimport * as i8 from \"@angular/material/table\";\nimport * as i9 from \"@angular/material/sort\";\nimport * as i10 from \"@angular/material/paginator\";\nimport * as i11 from \"@angular/common\";\nimport * as i12 from \"@fortawesome/angular-fontawesome\";\nconst _c0 = [\"header\"];\nconst _c1 = [\"footer\"];\nconst _c2 = [\"body\"];\nconst _c3 = [\"sort\"];\nconst _c4 = [\"paginator\"];\nconst _c5 = [\"refreshBtn\"];\nfunction ActivityConfigSelection_th_23_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"th\", 34);\n    i0.ɵɵtext(1, \"Form ID\");\n    i0.ɵɵelementEnd();\n  }\n}\nfunction ActivityConfigSelection_td_24_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"td\", 35);\n    i0.ɵɵtext(1);\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const row_r18 = ctx.$implicit;\n    const ctx_r6 = i0.ɵɵnextContext();\n    i0.ɵɵadvance(1);\n    i0.ɵɵtextInterpolate(row_r18.id ? row_r18.id : ctx_r6.COMMON_CONSTANT.HYPHEN);\n  }\n}\nfunction ActivityConfigSelection_th_26_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"th\", 34);\n    i0.ɵɵtext(1, \"Form Name\");\n    i0.ɵɵelementEnd();\n  }\n}\nconst _c6 = function (a0) {\n  return {\n    \"cursorPointer\": a0\n  };\n};\nconst _c7 = function (a0) {\n  return {\n    \"text-dark\": a0\n  };\n};\nfunction ActivityConfigSelection_td_27_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r21 = i0.ɵɵgetCurrentView();\n    i0.ɵɵelementStart(0, \"td\", 36);\n    i0.ɵɵlistener(\"click\", function ActivityConfigSelection_td_27_Template_td_click_0_listener() {\n      const restoredCtx = i0.ɵɵrestoreView(_r21);\n      const row_r19 = restoredCtx.$implicit;\n      const ctx_r20 = i0.ɵɵnextContext();\n      ctx_r20.viewActivityConfig(row_r19);\n      return ctx_r20.closeDialog();\n    });\n    i0.ɵɵelementStart(1, \"a\", 37);\n    i0.ɵɵtext(2);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const row_r19 = ctx.$implicit;\n    const ctx_r8 = i0.ɵɵnextContext();\n    i0.ɵɵproperty(\"ngClass\", i0.ɵɵpureFunction1(4, _c6, ctx_r8.showCursorPointer(row_r19)));\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngClass\", i0.ɵɵpureFunction1(6, _c7, !ctx_r8.showCursorPointer(row_r19)))(\"matTooltip\", row_r19.name.length > 15 ? row_r19.name : \"\");\n    i0.ɵɵadvance(1);\n    i0.ɵɵtextInterpolate(row_r19.name ? row_r19.name.length > 15 ? row_r19.name.substring(0, 15) + \"...\" : row_r19.name : ctx_r8.COMMON_CONSTANT.HYPHEN);\n  }\n}\nfunction ActivityConfigSelection_th_29_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"th\", 38);\n    i0.ɵɵtext(1, \"Activity Type\");\n    i0.ɵɵelementEnd();\n  }\n}\nfunction ActivityConfigSelection_td_30_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"td\", 35);\n    i0.ɵɵtext(1);\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const row_r22 = ctx.$implicit;\n    const ctx_r10 = i0.ɵɵnextContext();\n    i0.ɵɵadvance(1);\n    i0.ɵɵtextInterpolate(row_r22.activity ? row_r22.activity.name : ctx_r10.COMMON_CONSTANT.HYPHEN);\n  }\n}\nfunction ActivityConfigSelection_th_32_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelement(0, \"th\", 38);\n  }\n}\nfunction ActivityConfigSelection_td_33_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r25 = i0.ɵɵgetCurrentView();\n    i0.ɵɵelementStart(0, \"td\", 39);\n    i0.ɵɵelementStart(1, \"a\", 40);\n    i0.ɵɵlistener(\"click\", function ActivityConfigSelection_td_33_Template_a_click_1_listener() {\n      const restoredCtx = i0.ɵɵrestoreView(_r25);\n      const row_r23 = restoredCtx.$implicit;\n      const ctx_r24 = i0.ɵɵnextContext();\n      ctx_r24.routeToPFF(row_r23);\n      return ctx_r24.closeDialog();\n    });\n    i0.ɵɵelement(2, \"fa-icon\", 41);\n    i0.ɵɵtext(3, \"Record\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const ctx_r12 = i0.ɵɵnextContext();\n    i0.ɵɵadvance(2);\n    i0.ɵɵproperty(\"icon\", ctx_r12.faPlus);\n  }\n}\nfunction ActivityConfigSelection_tr_34_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelement(0, \"tr\", 42);\n  }\n}\nfunction ActivityConfigSelection_tr_35_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelement(0, \"tr\", 43);\n  }\n}\nfunction ActivityConfigSelection_tr_36_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"tr\", 44);\n    i0.ɵɵelementStart(1, \"td\", 45);\n    i0.ɵɵtext(2);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const ctx_r15 = i0.ɵɵnextContext();\n    i0.ɵɵadvance(1);\n    i0.ɵɵattribute(\"colspan\", ctx_r15.displayedColumn.length);\n    i0.ɵɵadvance(1);\n    i0.ɵɵtextInterpolate1(\" \", ctx_r15.TABLE_CONSTANT.TABLE_NO_DATA, \" \");\n  }\n}\nexport let ActivityConfigSelection = /*#__PURE__*/(() => {\n  class ActivityConfigSelection {\n    constructor(data, dialogRef, router, renderer, activityConfigController, storageService) {\n      this.data = data;\n      this.dialogRef = dialogRef;\n      this.router = router;\n      this.renderer = renderer;\n      this.activityConfigController = activityConfigController;\n      this.faPlus = faPlus;\n      this.MATERIAL_CONSTANT = MATERIAL_CONSTANT;\n      this.TABLE_CONSTANT = TABLE_CONSTANT;\n      this.ButtonTooltipEnum = ButtonTooltipEnum;\n      this.showActivityType = false;\n      this.pageTitle = 'Select an activity form';\n      this.pageSubtitle = '';\n      this.dataSource = [];\n      this.dataSourceLength = 0;\n      this.displayedColumn = ['id', 'name', 'useActivityConfig'];\n      this.searchByPlaceHolder = 'form name';\n      this.searchFlag = false;\n      this.searchValue = '';\n      this.filterArr = [];\n      this.viewActivityConfig = row => {\n        if (ACTIVITY_CONFIG_VIEW_PAGE_CONSTANT.includes(row.activity.keyID)) {\n          this.router.navigate(['/carbon-setting/activity-config', row.id, 'activity', row.activity.keyID, {\n            outlets: {\n              activityConfig: ['view']\n            }\n          }], {\n            queryParams: {\n              origin: ActivityConfigEnum.PFF,\n              activityKeyID: row.activity.keyID\n            }\n          });\n        } else {\n          return;\n        }\n      };\n      this.currentOrgID = storageService.getStorage('currentOrgID');\n      this.activityKeyID = data.activityKeyID;\n      this.activityTypeKeyID = data.activityTypeKeyID;\n      this.showActivityType = data.showActivityType;\n    }\n    ngOnInit() {\n      this.showColumn();\n    }\n    showColumn() {\n      if (this.showActivityType) {\n        this.displayedColumn = ['id', 'name', 'activityType', 'useActivityConfig'];\n      } else {\n        this.displayedColumn = ['id', 'name', 'useActivityConfig'];\n      }\n    }\n    ngAfterViewInit() {\n      this.heightHandler();\n      this.getActivityConfigByPage();\n    }\n    getActivityConfigByPage() {\n      this.sort.sortChange.subscribe(() => this.paginator.pageIndex = 0);\n      fromEvent(this.refreshBtn.nativeElement, 'click').subscribe(() => this.paginator.pageIndex = 0);\n      merge(this.paginator.page, this.sort.sortChange, fromEvent(this.refreshBtn.nativeElement, 'click')).pipe(startWith({}), switchMap(() => {\n        // initially push dummy filter to handle one multi-select filter in backend (spring-boot issue)\n        this.filterArr = ['dummy:dummyfilter'];\n        if (this.activityTypeKeyID) {\n          this.filterArr.push('activityTypes:' + this.activityTypeKeyID);\n        }\n        if (this.activityKeyID) {\n          this.filterArr.push('activities:' + this.activityKeyID);\n        }\n        if (this.searchFlag) {\n          var searchBy = 'name:' + this.searchValue;\n        }\n        return this.activityConfigController.getActivityConfigByPage(this.paginator.pageIndex, this.paginator.pageSize, this.sort.active, this.sort.direction, this.currentOrgID, this.filterArr, searchBy, this.searchFlag).pipe(catchError(() => observableOf(null)));\n      }), map(response => {\n        if (response == null) {\n          this.dataSourceLength = 0;\n          return [];\n        }\n        this.dataSourceLength = response.totalCount;\n        return response.records;\n      })).subscribe(dataSource => {\n        this.dataSource = dataSource;\n      });\n    }\n    searchFn($event) {\n      this.searchValue = $event;\n      if (this.searchValue.length > 0) {\n        this.searchFlag = true;\n      } else {\n        this.searchFlag = false;\n      }\n      this.refreshBtn.nativeElement.click();\n    }\n    heightHandler() {\n      const headerHeight = this.header.nativeElement.offsetHeight;\n      const footerHeight = this.footer.nativeElement.offsetHeight;\n      const offsetHeight = 'calc(100vh - ' + (headerHeight + footerHeight + 24) + 'px)';\n      this.renderer.setStyle(this.body.nativeElement, 'height', offsetHeight);\n      this.renderer.setStyle(this.body.nativeElement, 'max-height', offsetHeight);\n    }\n    showCursorPointer(row) {\n      let isCursorPointer = false;\n      if (ACTIVITY_CONFIG_VIEW_PAGE_CONSTANT.includes(row.activity.keyID)) {\n        isCursorPointer = true;\n      } else {\n        isCursorPointer = false;\n      }\n      return isCursorPointer;\n    }\n    closeDialog() {\n      this.dialogRef.close();\n    }\n    routeToPFF(activityConfigData) {\n      let activityConfig = activityConfigData.activity;\n      let activityConfigID = activityConfigData.id;\n      // this.router.navigate(['/redirect']).then(() => {\n      this.router.navigate([`/activity-data/activity/${activityConfig['keyID']}`, {\n        outlets: {\n          activityData: ['create'],\n          activityConfig: ['update']\n        }\n      }], {\n        queryParams: {\n          activityID: activityConfig['id'],\n          origin: ActivityConfigEnum.AD_HOC,\n          action: 'create',\n          tabView: 'YES',\n          usePFF: 'YES',\n          activityConfigID: activityConfigID\n        }\n      });\n      // });\n    }\n  }\n\n  ActivityConfigSelection.ɵfac = function ActivityConfigSelection_Factory(t) {\n    return new (t || ActivityConfigSelection)(i0.ɵɵdirectiveInject(MAT_DIALOG_DATA), i0.ɵɵdirectiveInject(i1.MatDialogRef), i0.ɵɵdirectiveInject(i2.Router), i0.ɵɵdirectiveInject(i0.Renderer2), i0.ɵɵdirectiveInject(i3.ActivityConfigController), i0.ɵɵdirectiveInject(i4.StorageService));\n  };\n  ActivityConfigSelection.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n    type: ActivityConfigSelection,\n    selectors: [[\"app-activity-config-selection\"]],\n    viewQuery: function ActivityConfigSelection_Query(rf, ctx) {\n      if (rf & 1) {\n        i0.ɵɵviewQuery(_c0, 5);\n        i0.ɵɵviewQuery(_c1, 5);\n        i0.ɵɵviewQuery(_c2, 5);\n        i0.ɵɵviewQuery(_c3, 5);\n        i0.ɵɵviewQuery(_c4, 5);\n        i0.ɵɵviewQuery(_c5, 5);\n      }\n      if (rf & 2) {\n        let _t;\n        i0.ɵɵqueryRefresh(_t = i0.ɵɵloadQuery()) && (ctx.header = _t.first);\n        i0.ɵɵqueryRefresh(_t = i0.ɵɵloadQuery()) && (ctx.footer = _t.first);\n        i0.ɵɵqueryRefresh(_t = i0.ɵɵloadQuery()) && (ctx.body = _t.first);\n        i0.ɵɵqueryRefresh(_t = i0.ɵɵloadQuery()) && (ctx.sort = _t.first);\n        i0.ɵɵqueryRefresh(_t = i0.ɵɵloadQuery()) && (ctx.paginator = _t.first);\n        i0.ɵɵqueryRefresh(_t = i0.ɵɵloadQuery()) && (ctx.refreshBtn = _t.first);\n      }\n    },\n    decls: 41,\n    vars: 13,\n    consts: [[1, \"headerContainer\", \"p-0\"], [\"header\", \"\"], [1, \"headerLeftContainer\"], [1, \"pageTitle\"], [1, \"pageSubtitle\"], [1, \"headerRightContainer\"], [1, \"headerRightContainerInner\"], [1, \"me-3\", 3, \"searchBy\", \"emitSearch\"], [\"searchBar\", \"\"], [\"matRipple\", \"\", \"matTooltipPosition\", \"below\", 1, \"btn\", \"btn-sm\", \"btn-light\", \"refreshBtn\", \"centerAlign\", \"me-3\", \"py-1\", 3, \"matRippleCentered\", \"matTooltip\"], [\"refreshBtn\", \"\"], [1, \"material-symbols-outlined\", \"text-secondary\"], [\"matRipple\", \"\", \"matTooltipPosition\", \"below\", \"mat-dialog-close\", \"\", 1, \"btn\", \"btn-sm\", \"centerAlign\", \"py-1\", \"iconBtn\", 3, \"matRippleCentered\", \"matTooltip\"], [1, \"material-symbols-outlined\"], [1, \"mat-typography\", \"customScrollBar\", \"pt-2\"], [\"body\", \"\"], [\"mat-table\", \"\", \"matSort\", \"\", \"matSortActive\", \"id\", \"matSortDirection\", \"desc\", \"matSortDisableClear\", \"\", 1, \"w-100\", 3, \"dataSource\"], [\"sort\", \"matSort\"], [\"matColumnDef\", \"id\"], [\"mat-header-cell\", \"\", \"mat-sort-header\", \"\", \"disableClear\", \"\", 4, \"matHeaderCellDef\"], [\"mat-cell\", \"\", 4, \"matCellDef\"], [\"matColumnDef\", \"name\"], [\"mat-cell\", \"\", 3, \"ngClass\", \"click\", 4, \"matCellDef\"], [\"matColumnDef\", \"activityType\"], [\"mat-header-cell\", \"\", 4, \"matHeaderCellDef\"], [\"matColumnDef\", \"useActivityConfig\"], [\"mat-cell\", \"\", \"class\", \"text-end\", 4, \"matCellDef\"], [\"mat-header-row\", \"\", 4, \"matHeaderRowDef\"], [\"mat-row\", \"\", \"class\", \"dataRow\", 4, \"matRowDef\", \"matRowDefColumns\"], [\"class\", \"mat-row\", 4, \"matNoDataRow\"], [1, \"tscDialogFooter\"], [\"footer\", \"\"], [\"showFirstLastButtons\", \"\", 1, \"roundedBorder\", 3, \"length\", \"pageSize\", \"pageSizeOptions\"], [\"paginator\", \"\"], [\"mat-header-cell\", \"\", \"mat-sort-header\", \"\", \"disableClear\", \"\"], [\"mat-cell\", \"\"], [\"mat-cell\", \"\", 3, \"ngClass\", \"click\"], [3, \"ngClass\", \"matTooltip\"], [\"mat-header-cell\", \"\"], [\"mat-cell\", \"\", 1, \"text-end\"], [1, \"btn\", \"btn-sm\", \"btn-success\", 3, \"click\"], [1, \"me-1\", 3, \"icon\"], [\"mat-header-row\", \"\"], [\"mat-row\", \"\", 1, \"dataRow\"], [1, \"mat-row\"], [1, \"mat-cell\", \"text-center\"]],\n    template: function ActivityConfigSelection_Template(rf, ctx) {\n      if (rf & 1) {\n        i0.ɵɵelementStart(0, \"div\", 0, 1);\n        i0.ɵɵelementStart(2, \"div\", 2);\n        i0.ɵɵelementStart(3, \"div\", 3);\n        i0.ɵɵtext(4);\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(5, \"div\", 4);\n        i0.ɵɵtext(6);\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(7, \"div\", 5);\n        i0.ɵɵelementStart(8, \"div\", 6);\n        i0.ɵɵelementStart(9, \"lib-search-bar-one\", 7, 8);\n        i0.ɵɵlistener(\"emitSearch\", function ActivityConfigSelection_Template_lib_search_bar_one_emitSearch_9_listener($event) {\n          return ctx.searchFn($event);\n        });\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(11, \"button\", 9, 10);\n        i0.ɵɵelementStart(13, \"span\", 11);\n        i0.ɵɵtext(14, \" refresh \");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(15, \"button\", 12);\n        i0.ɵɵelementStart(16, \"span\", 13);\n        i0.ɵɵtext(17, \" close \");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(18, \"mat-dialog-content\", 14, 15);\n        i0.ɵɵelementStart(20, \"table\", 16, 17);\n        i0.ɵɵelementContainerStart(22, 18);\n        i0.ɵɵtemplate(23, ActivityConfigSelection_th_23_Template, 2, 0, \"th\", 19);\n        i0.ɵɵtemplate(24, ActivityConfigSelection_td_24_Template, 2, 1, \"td\", 20);\n        i0.ɵɵelementContainerEnd();\n        i0.ɵɵelementContainerStart(25, 21);\n        i0.ɵɵtemplate(26, ActivityConfigSelection_th_26_Template, 2, 0, \"th\", 19);\n        i0.ɵɵtemplate(27, ActivityConfigSelection_td_27_Template, 3, 8, \"td\", 22);\n        i0.ɵɵelementContainerEnd();\n        i0.ɵɵelementContainerStart(28, 23);\n        i0.ɵɵtemplate(29, ActivityConfigSelection_th_29_Template, 2, 0, \"th\", 24);\n        i0.ɵɵtemplate(30, ActivityConfigSelection_td_30_Template, 2, 1, \"td\", 20);\n        i0.ɵɵelementContainerEnd();\n        i0.ɵɵelementContainerStart(31, 25);\n        i0.ɵɵtemplate(32, ActivityConfigSelection_th_32_Template, 1, 0, \"th\", 24);\n        i0.ɵɵtemplate(33, ActivityConfigSelection_td_33_Template, 4, 1, \"td\", 26);\n        i0.ɵɵelementContainerEnd();\n        i0.ɵɵtemplate(34, ActivityConfigSelection_tr_34_Template, 1, 0, \"tr\", 27);\n        i0.ɵɵtemplate(35, ActivityConfigSelection_tr_35_Template, 1, 0, \"tr\", 28);\n        i0.ɵɵtemplate(36, ActivityConfigSelection_tr_36_Template, 3, 2, \"tr\", 29);\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(37, \"div\", 30, 31);\n        i0.ɵɵelement(39, \"mat-paginator\", 32, 33);\n        i0.ɵɵelementEnd();\n      }\n      if (rf & 2) {\n        i0.ɵɵadvance(4);\n        i0.ɵɵtextInterpolate(ctx.pageTitle);\n        i0.ɵɵadvance(2);\n        i0.ɵɵtextInterpolate(ctx.pageSubtitle);\n        i0.ɵɵadvance(3);\n        i0.ɵɵproperty(\"searchBy\", ctx.searchByPlaceHolder);\n        i0.ɵɵadvance(2);\n        i0.ɵɵproperty(\"matRippleCentered\", ctx.MATERIAL_CONSTANT.MAT_RIPPLE_CENTER)(\"matTooltip\", ctx.ButtonTooltipEnum.REFRESH);\n        i0.ɵɵadvance(4);\n        i0.ɵɵproperty(\"matRippleCentered\", ctx.MATERIAL_CONSTANT.MAT_RIPPLE_CENTER)(\"matTooltip\", ctx.ButtonTooltipEnum.CLOSE);\n        i0.ɵɵadvance(5);\n        i0.ɵɵproperty(\"dataSource\", ctx.dataSource);\n        i0.ɵɵadvance(14);\n        i0.ɵɵproperty(\"matHeaderRowDef\", ctx.displayedColumn);\n        i0.ɵɵadvance(1);\n        i0.ɵɵproperty(\"matRowDefColumns\", ctx.displayedColumn);\n        i0.ɵɵadvance(4);\n        i0.ɵɵproperty(\"length\", ctx.dataSourceLength)(\"pageSize\", ctx.TABLE_CONSTANT.DEFAULT_PAGE_SIZE)(\"pageSizeOptions\", ctx.TABLE_CONSTANT.PAGE_SIZE_OPTION);\n      }\n    },\n    directives: [i5.SearchBarOneComponent, i6.MatRipple, i7.MatTooltip, i1.MatDialogClose, i1.MatDialogContent, i8.MatTable, i9.MatSort, i8.MatColumnDef, i8.MatHeaderCellDef, i8.MatCellDef, i8.MatHeaderRowDef, i8.MatRowDef, i8.MatNoDataRow, i10.MatPaginator, i8.MatHeaderCell, i9.MatSortHeader, i8.MatCell, i11.NgClass, i12.FaIconComponent, i8.MatHeaderRow, i8.MatRow],\n    encapsulation: 2\n  });\n  return ActivityConfigSelection;\n})();","map":null,"metadata":{},"sourceType":"module"}