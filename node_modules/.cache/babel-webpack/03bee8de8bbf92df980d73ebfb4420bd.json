{"ast":null,"code":"import { HttpParams } from \"@angular/common/http\";\nimport { environment } from 'src/environments/environment';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/common/http\";\n// import { ActivityConfigPageM } from '@CarbonNetZero/model/activity-config.model';\nexport let ActivityConfigController = /*#__PURE__*/(() => {\n  class ActivityConfigController {\n    constructor(http) {\n      this.http = http;\n    }\n    createActivityConfig(orgID, activityKeyID, activityConfig) {\n      return this.http.post(`${environment.CARBON_ACCOUNTING_API_URL}organizations/${orgID}/activity/${activityKeyID}/activity-configs`, activityConfig);\n    }\n    getActivityConfigByPage(pageNo, pageSize, sortBy, orderBy, orgID, filterArr, searchValue, searchFlag) {\n      let params = new HttpParams();\n      params = params.append('pageNo', pageNo);\n      params = params.append('pageSize', pageSize);\n      params = params.append('sortBy', sortBy);\n      params = params.append('orderBy', orderBy);\n      if (searchFlag == true) {\n        params = params.append('searchBy', searchValue);\n      }\n      filterArr.forEach(filter => {\n        params = params.append('filter', filter);\n      });\n      // return this.http.get<ActivityConfigPageM>(`${environment.CARBON_ACCOUNTING_API_URL}organizations/${orgID}/activity-configs/page`, { params: params });\n      return this.http.get(`${environment.CARBON_ACCOUNTING_API_URL}organizations/${orgID}/activity-configs/page`, {\n        params: params\n      });\n    }\n    getActivityConfig(activityKeyID, processID, orgID) {\n      let params = new HttpParams();\n      params = params.append('activityKeyID', activityKeyID);\n      params = params.append('processID', processID);\n      return this.http.get(`${environment.CARBON_ACCOUNTING_API_URL}organizations/${orgID}/activity-configs`, {\n        params: params\n      });\n    }\n    getActivityConfigByID(orgID, activityKeyID, activityConfigID) {\n      return this.http.get(`${environment.CARBON_ACCOUNTING_API_URL}organizations/${orgID}/activity/${activityKeyID}/activity-configs/${activityConfigID}`);\n    }\n    updateActivityConfig(orgID, activityKeyID, activityConfigID, activityConfig) {\n      return this.http.patch(`${environment.CARBON_ACCOUNTING_API_URL}organizations/${orgID}/activity/${activityKeyID}/activity-configs/${activityConfigID}`, activityConfig);\n    }\n    createConfigurationWithActivityData(orgID, activityKeyID, formData) {\n      return this.http.post(`${environment.CARBON_ACCOUNTING_API_URL}organizations/${orgID}/${activityKeyID}/ad-hoc/prefilled`, formData);\n    }\n  }\n  ActivityConfigController.ɵfac = function ActivityConfigController_Factory(t) {\n    return new (t || ActivityConfigController)(i0.ɵɵinject(i1.HttpClient));\n  };\n  ActivityConfigController.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n    token: ActivityConfigController,\n    factory: ActivityConfigController.ɵfac,\n    providedIn: 'root'\n  });\n  return ActivityConfigController;\n})();","map":null,"metadata":{},"sourceType":"module"}