{"ast":null,"code":"import * as i0 from '@angular/core';\nimport { Injectable, Component, NgModule, Inject } from '@angular/core';\nimport * as i1 from '@angular/common/http';\nimport { __awaiter } from 'tslib';\nclass LayoutServiceService {\n  constructor() {}\n}\nLayoutServiceService.ɵfac = function LayoutServiceService_Factory(t) {\n  return new (t || LayoutServiceService)();\n};\nLayoutServiceService.ɵprov = /* @__PURE__ */i0.ɵɵdefineInjectable({\n  token: LayoutServiceService,\n  factory: LayoutServiceService.ɵfac,\n  providedIn: 'root'\n});\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(LayoutServiceService, [{\n    type: Injectable,\n    args: [{\n      providedIn: 'root'\n    }]\n  }], function () {\n    return [];\n  }, null);\n})();\nclass LayoutServiceComponent {\n  constructor() {}\n  ngOnInit() {}\n}\nLayoutServiceComponent.ɵfac = function LayoutServiceComponent_Factory(t) {\n  return new (t || LayoutServiceComponent)();\n};\nLayoutServiceComponent.ɵcmp = /* @__PURE__ */i0.ɵɵdefineComponent({\n  type: LayoutServiceComponent,\n  selectors: [[\"lib-layout-service\"]],\n  decls: 2,\n  vars: 0,\n  template: function LayoutServiceComponent_Template(rf, ctx) {\n    if (rf & 1) {\n      i0.ɵɵelementStart(0, \"p\");\n      i0.ɵɵtext(1, \" layout-service works! \");\n      i0.ɵɵelementEnd();\n    }\n  },\n  encapsulation: 2\n});\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(LayoutServiceComponent, [{\n    type: Component,\n    args: [{\n      selector: 'lib-layout-service',\n      template: `\n    <p>\n      layout-service works!\n    </p>\n  `,\n      styles: []\n    }]\n  }], function () {\n    return [];\n  }, null);\n})();\nclass LayoutServiceModule {\n  static forRoot(environment) {\n    return {\n      ngModule: LayoutServiceModule,\n      providers: [{\n        provide: 'environment',\n        useValue: environment\n      }]\n    };\n  }\n}\nLayoutServiceModule.ɵfac = function LayoutServiceModule_Factory(t) {\n  return new (t || LayoutServiceModule)();\n};\nLayoutServiceModule.ɵmod = /* @__PURE__ */i0.ɵɵdefineNgModule({\n  type: LayoutServiceModule\n});\nLayoutServiceModule.ɵinj = /* @__PURE__ */i0.ɵɵdefineInjector({\n  imports: [[]]\n});\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(LayoutServiceModule, [{\n    type: NgModule,\n    args: [{\n      declarations: [LayoutServiceComponent],\n      imports: [],\n      exports: [LayoutServiceComponent]\n    }]\n  }], null, null);\n})();\nclass Layout {}\nclass LayoutController {\n  constructor(http, environment) {\n    this.http = http;\n    this.environment = environment;\n  }\n  getLayoutByOrgID(orgID) {\n    return this.http.get(`${this.environment.TSC_COMMON_API_URL}organizations/${orgID}/layouts`);\n  }\n}\nLayoutController.ɵfac = function LayoutController_Factory(t) {\n  return new (t || LayoutController)(i0.ɵɵinject(i1.HttpClient), i0.ɵɵinject('environment'));\n};\nLayoutController.ɵprov = /* @__PURE__ */i0.ɵɵdefineInjectable({\n  token: LayoutController,\n  factory: LayoutController.ɵfac,\n  providedIn: 'root'\n});\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(LayoutController, [{\n    type: Injectable,\n    args: [{\n      providedIn: 'root'\n    }]\n  }], function () {\n    return [{\n      type: i1.HttpClient\n    }, {\n      type: undefined,\n      decorators: [{\n        type: Inject,\n        args: ['environment']\n      }]\n    }];\n  }, null);\n})();\nclass LayoutService {\n  constructor(layoutController) {\n    this.layoutController = layoutController;\n  }\n  getLayoutByOrgID(orgID) {\n    return __awaiter(this, void 0, void 0, function* () {\n      let layoutM;\n      try {\n        layoutM = yield this.layoutController.getLayoutByOrgID(orgID).toPromise();\n        if (layoutM) {\n          return layoutM;\n        } else {\n          return [new Layout()];\n        }\n      } catch (error) {\n        console.error('Error -', error);\n        return [new Layout()];\n      }\n    });\n  }\n}\nLayoutService.ɵfac = function LayoutService_Factory(t) {\n  return new (t || LayoutService)(i0.ɵɵinject(LayoutController));\n};\nLayoutService.ɵprov = /* @__PURE__ */i0.ɵɵdefineInjectable({\n  token: LayoutService,\n  factory: LayoutService.ɵfac,\n  providedIn: 'root'\n});\n(function () {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(LayoutService, [{\n    type: Injectable,\n    args: [{\n      providedIn: 'root'\n    }]\n  }], function () {\n    return [{\n      type: LayoutController\n    }];\n  }, null);\n})();\n\n/*\n * Public API Surface of layout-service\n */\n\n/**\n * Generated bundle index. Do not edit.\n */\n\nexport { Layout, LayoutController, LayoutService, LayoutServiceComponent, LayoutServiceModule, LayoutServiceService };","map":{"version":3,"names":["i0","Injectable","Component","NgModule","Inject","i1","__awaiter","LayoutServiceService","constructor","ɵfac","LayoutServiceService_Factory","t","ɵprov","ɵɵdefineInjectable","token","factory","providedIn","ngDevMode","ɵsetClassMetadata","type","args","LayoutServiceComponent","ngOnInit","LayoutServiceComponent_Factory","ɵcmp","ɵɵdefineComponent","selectors","decls","vars","template","LayoutServiceComponent_Template","rf","ctx","ɵɵelementStart","ɵɵtext","ɵɵelementEnd","encapsulation","selector","styles","LayoutServiceModule","forRoot","environment","ngModule","providers","provide","useValue","LayoutServiceModule_Factory","ɵmod","ɵɵdefineNgModule","ɵinj","ɵɵdefineInjector","imports","declarations","exports","Layout","LayoutController","http","getLayoutByOrgID","orgID","get","TSC_COMMON_API_URL","LayoutController_Factory","ɵɵinject","HttpClient","undefined","decorators","LayoutService","layoutController","layoutM","toPromise","error","console","LayoutService_Factory"],"sources":["/home/silori/projects/gitClones/account-ui/library/layout-service/fesm2015/library-layout-service.js"],"sourcesContent":["import * as i0 from '@angular/core';\nimport { Injectable, Component, NgModule, Inject } from '@angular/core';\nimport * as i1 from '@angular/common/http';\nimport { __awaiter } from 'tslib';\n\nclass LayoutServiceService {\n    constructor() { }\n}\nLayoutServiceService.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"12.2.17\", ngImport: i0, type: LayoutServiceService, deps: [], target: i0.ɵɵFactoryTarget.Injectable });\nLayoutServiceService.ɵprov = i0.ɵɵngDeclareInjectable({ minVersion: \"12.0.0\", version: \"12.2.17\", ngImport: i0, type: LayoutServiceService, providedIn: 'root' });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"12.2.17\", ngImport: i0, type: LayoutServiceService, decorators: [{\n            type: Injectable,\n            args: [{\n                    providedIn: 'root'\n                }]\n        }], ctorParameters: function () { return []; } });\n\nclass LayoutServiceComponent {\n    constructor() { }\n    ngOnInit() {\n    }\n}\nLayoutServiceComponent.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"12.2.17\", ngImport: i0, type: LayoutServiceComponent, deps: [], target: i0.ɵɵFactoryTarget.Component });\nLayoutServiceComponent.ɵcmp = i0.ɵɵngDeclareComponent({ minVersion: \"12.0.0\", version: \"12.2.17\", type: LayoutServiceComponent, selector: \"lib-layout-service\", ngImport: i0, template: `\n    <p>\n      layout-service works!\n    </p>\n  `, isInline: true });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"12.2.17\", ngImport: i0, type: LayoutServiceComponent, decorators: [{\n            type: Component,\n            args: [{\n                    selector: 'lib-layout-service',\n                    template: `\n    <p>\n      layout-service works!\n    </p>\n  `,\n                    styles: []\n                }]\n        }], ctorParameters: function () { return []; } });\n\nclass LayoutServiceModule {\n    static forRoot(environment) {\n        return {\n            ngModule: LayoutServiceModule,\n            providers: [\n                { provide: 'environment', useValue: environment }\n            ]\n        };\n    }\n}\nLayoutServiceModule.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"12.2.17\", ngImport: i0, type: LayoutServiceModule, deps: [], target: i0.ɵɵFactoryTarget.NgModule });\nLayoutServiceModule.ɵmod = i0.ɵɵngDeclareNgModule({ minVersion: \"12.0.0\", version: \"12.2.17\", ngImport: i0, type: LayoutServiceModule, declarations: [LayoutServiceComponent], exports: [LayoutServiceComponent] });\nLayoutServiceModule.ɵinj = i0.ɵɵngDeclareInjector({ minVersion: \"12.0.0\", version: \"12.2.17\", ngImport: i0, type: LayoutServiceModule, imports: [[]] });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"12.2.17\", ngImport: i0, type: LayoutServiceModule, decorators: [{\n            type: NgModule,\n            args: [{\n                    declarations: [\n                        LayoutServiceComponent\n                    ],\n                    imports: [],\n                    exports: [\n                        LayoutServiceComponent\n                    ]\n                }]\n        }] });\n\nclass Layout {\n}\n\nclass LayoutController {\n    constructor(http, environment) {\n        this.http = http;\n        this.environment = environment;\n    }\n    getLayoutByOrgID(orgID) {\n        return this.http.get(`${this.environment.TSC_COMMON_API_URL}organizations/${orgID}/layouts`);\n    }\n}\nLayoutController.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"12.2.17\", ngImport: i0, type: LayoutController, deps: [{ token: i1.HttpClient }, { token: 'environment' }], target: i0.ɵɵFactoryTarget.Injectable });\nLayoutController.ɵprov = i0.ɵɵngDeclareInjectable({ minVersion: \"12.0.0\", version: \"12.2.17\", ngImport: i0, type: LayoutController, providedIn: 'root' });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"12.2.17\", ngImport: i0, type: LayoutController, decorators: [{\n            type: Injectable,\n            args: [{\n                    providedIn: 'root'\n                }]\n        }], ctorParameters: function () { return [{ type: i1.HttpClient }, { type: undefined, decorators: [{\n                    type: Inject,\n                    args: ['environment']\n                }] }]; } });\n\nclass LayoutService {\n    constructor(layoutController) {\n        this.layoutController = layoutController;\n    }\n    getLayoutByOrgID(orgID) {\n        return __awaiter(this, void 0, void 0, function* () {\n            let layoutM;\n            try {\n                layoutM = yield this.layoutController.getLayoutByOrgID(orgID).toPromise();\n                if (layoutM) {\n                    return layoutM;\n                }\n                else {\n                    return [new Layout()];\n                }\n            }\n            catch (error) {\n                console.error('Error -', error);\n                return [new Layout()];\n            }\n        });\n    }\n}\nLayoutService.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"12.2.17\", ngImport: i0, type: LayoutService, deps: [{ token: LayoutController }], target: i0.ɵɵFactoryTarget.Injectable });\nLayoutService.ɵprov = i0.ɵɵngDeclareInjectable({ minVersion: \"12.0.0\", version: \"12.2.17\", ngImport: i0, type: LayoutService, providedIn: 'root' });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"12.2.17\", ngImport: i0, type: LayoutService, decorators: [{\n            type: Injectable,\n            args: [{\n                    providedIn: 'root'\n                }]\n        }], ctorParameters: function () { return [{ type: LayoutController }]; } });\n\n/*\n * Public API Surface of layout-service\n */\n\n/**\n * Generated bundle index. Do not edit.\n */\n\nexport { Layout, LayoutController, LayoutService, LayoutServiceComponent, LayoutServiceModule, LayoutServiceService };\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}