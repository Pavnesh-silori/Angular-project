{"ast":null,"code":"import { __awaiter } from \"tslib\";\nimport { MAT_DIALOG_DATA } from '@angular/material/dialog';\nimport { ActivityConfigEnum } from '@carbon/enum/activity-config.enum';\nimport { ACTIVITY_FORM_TYPE_KEYID_ENUM } from '@carbon/enum/activity-form-enum';\nimport { ActivityKeyIDEnum as ActivityKeyID } from '@carbon/enum/activity.enum';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@carbon/service/activity.service\";\nimport * as i2 from \"@angular/router\";\nimport * as i3 from \"@angular/material/dialog\";\nimport * as i4 from \"@carbon/controller/activity.controller\";\nimport * as i5 from \"@angular/common\";\nimport * as i6 from \"@library/tsc-common\";\nconst _c0 = [\"header\"];\nconst _c1 = [\"footer\"];\nconst _c2 = [\"body\"];\nconst _c3 = function (a0, a1) {\n  return {\n    \"btn-primary\": a0,\n    \"btn-secondary\": a1\n  };\n};\nfunction ActivitySelectionComponent_button_14_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r9 = i0.ɵɵgetCurrentView();\n    i0.ɵɵelementStart(0, \"button\", 19);\n    i0.ɵɵlistener(\"click\", function ActivitySelectionComponent_button_14_Template_button_click_0_listener() {\n      const restoredCtx = i0.ɵɵrestoreView(_r9);\n      const button_r6 = restoredCtx.$implicit;\n      const ctx_r8 = i0.ɵɵnextContext();\n      return ctx_r8.onClickFunction(button_r6.keyID);\n    });\n    i0.ɵɵtext(1);\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const button_r6 = ctx.$implicit;\n    const ctx_r1 = i0.ɵɵnextContext();\n    i0.ɵɵproperty(\"ngClass\", i0.ɵɵpureFunction2(2, _c3, ctx_r1.selectedButtonIndex === button_r6.keyID, ctx_r1.selectedButtonIndex !== button_r6.keyID));\n    i0.ɵɵadvance(1);\n    i0.ɵɵtextInterpolate1(\" \", button_r6.name, \" \");\n  }\n}\nconst _c4 = function (a0, a1) {\n  return {\n    \"cbamBadge\": a0,\n    \"ghgBadge\": a1\n  };\n};\nfunction ActivitySelectionComponent_div_21_span_5_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"span\");\n    i0.ɵɵelementStart(1, \"span\", 30);\n    i0.ɵɵtext(2);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const formType_r14 = ctx.$implicit;\n    const ctx_r11 = i0.ɵɵnextContext(2);\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngClass\", i0.ɵɵpureFunction2(2, _c4, formType_r14.keyID.includes(ctx_r11.ACTIVITY_FORM_TYPE_KEYID_ENUM.CBAM_FORM), formType_r14.keyID.includes(ctx_r11.ACTIVITY_FORM_TYPE_KEYID_ENUM.GHG_FORM)));\n    i0.ɵɵadvance(1);\n    i0.ɵɵtextInterpolate1(\" \", formType_r14.name, \" \");\n  }\n}\nfunction ActivitySelectionComponent_div_21_div_6_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\", 31);\n    i0.ɵɵtext(1);\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const item_r10 = i0.ɵɵnextContext().$implicit;\n    i0.ɵɵadvance(1);\n    i0.ɵɵtextInterpolate1(\" \", item_r10.scope.name, \" \");\n  }\n}\nfunction ActivitySelectionComponent_div_21_div_7_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\", 32);\n    i0.ɵɵtext(1);\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const item_r10 = i0.ɵɵnextContext().$implicit;\n    i0.ɵɵadvance(1);\n    i0.ɵɵtextInterpolate1(\" \", item_r10.description, \" \");\n  }\n}\nfunction ActivitySelectionComponent_div_21_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r18 = i0.ɵɵgetCurrentView();\n    i0.ɵɵelementStart(0, \"div\", 20);\n    i0.ɵɵelementStart(1, \"div\", 21);\n    i0.ɵɵelementStart(2, \"div\", 22);\n    i0.ɵɵelementStart(3, \"span\", 23);\n    i0.ɵɵtext(4);\n    i0.ɵɵelementEnd();\n    i0.ɵɵtemplate(5, ActivitySelectionComponent_div_21_span_5_Template, 3, 5, \"span\", 24);\n    i0.ɵɵtemplate(6, ActivitySelectionComponent_div_21_div_6_Template, 2, 1, \"div\", 25);\n    i0.ɵɵtemplate(7, ActivitySelectionComponent_div_21_div_7_Template, 2, 1, \"div\", 26);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(8, \"div\", 27);\n    i0.ɵɵelementStart(9, \"div\", 28);\n    i0.ɵɵelementStart(10, \"button\", 29);\n    i0.ɵɵlistener(\"click\", function ActivitySelectionComponent_div_21_Template_button_click_10_listener() {\n      const restoredCtx = i0.ɵɵrestoreView(_r18);\n      const item_r10 = restoredCtx.$implicit;\n      const ctx_r17 = i0.ɵɵnextContext();\n      return ctx_r17.selectActivity(item_r10);\n    });\n    i0.ɵɵtext(11, \"Select Activity Form\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const item_r10 = ctx.$implicit;\n    i0.ɵɵadvance(4);\n    i0.ɵɵtextInterpolate(item_r10.name);\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngForOf\", item_r10.types);\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngIf\", item_r10.scope);\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngIf\", item_r10.description);\n  }\n}\nconst _c5 = function (a0) {\n  return {\n    \"d-none\": a0\n  };\n};\nexport let ActivitySelectionComponent = /*#__PURE__*/(() => {\n  class ActivitySelectionComponent {\n    constructor(data, renderer, activityService, router, dialogRef, activityController) {\n      this.data = data;\n      this.renderer = renderer;\n      this.activityService = activityService;\n      this.router = router;\n      this.dialogRef = dialogRef;\n      this.activityController = activityController;\n      this.ACTIVITY_FORM_TYPE_KEYID_ENUM = ACTIVITY_FORM_TYPE_KEYID_ENUM;\n      this.emitValueOnChange = true;\n      this.isSelectActivity = false;\n      this.ghgActivity = [];\n      this.cbamActivity = [];\n      this.heightHandler = () => {\n        const headerHeight = this.header.nativeElement.offsetHeight;\n        const footerHeight = this.footer.nativeElement.offsetHeight;\n        const offsetHeight = 'calc(100vh - ' + (headerHeight + footerHeight + 48) + 'px)';\n        this.renderer.setStyle(this.body.nativeElement, 'height', offsetHeight);\n        this.renderer.setStyle(this.body.nativeElement, 'max-height', offsetHeight);\n      };\n      this.dialogRef.disableClose = true;\n      this.origin = data.origin;\n      this.action = data.action;\n    }\n    ngOnInit() {\n      this.getAllActivity();\n      this.getAllFormData();\n      if (this.origin == 'ad-hoc') {\n        this.isSelectActivity = true;\n      }\n    }\n    ngAfterViewInit() {\n      this.heightHandler();\n    }\n    getAllActivity() {\n      return __awaiter(this, void 0, void 0, function* () {\n        this.allActivity = yield this.activityService.getAllActivityNew();\n        const activityPffNotAvailable = [ActivityKeyID.REFRIGERATION_AC_AND_FIRE_SUPPRESSION, ActivityKeyID.OTHER_FUGITIVE_EMISSION, ActivityKeyID.PURCHASED_GOODS_AND_SERVICES, ActivityKeyID.CAPITAL_GOODS, ActivityKeyID.UPSTREAM_TRANSPORTATION_AND_DISTRIBUTION, ActivityKeyID.DOWNSTREAM_TRANSPORTATION_AND_DISTRIBUTION, ActivityKeyID.BUSINESS_TRAVEL, ActivityKeyID.EMPLOYEE_COMMUTING];\n        this.allActivity = this.allActivity.filter(activity => !activityPffNotAvailable.includes(activity.keyID));\n        this.allActivityClone = this.allActivity;\n        this.allActivity.forEach(res => {\n          if (res.types[0].keyID == ACTIVITY_FORM_TYPE_KEYID_ENUM.GHG_FORM) {\n            this.ghgActivity.push(res);\n          } else {\n            this.cbamActivity.push(res);\n          }\n        });\n        if (this.isSelectActivity) {\n          this.allActivity = this.ghgActivity;\n        }\n      });\n    }\n    getAllFormData() {\n      this.activityController.getAllFormsType().subscribe(res => {\n        // Create a new object for the additional form type to show both all actity form\n        const allFormType = {\n          id: 0,\n          keyID: \"all-form\",\n          name: \"All forms\"\n        };\n        this.allForms = [allFormType, ...res];\n        this.selectedButtonIndex = \"all-form\";\n      });\n    }\n    onClickFunction(keyID) {\n      this.selectedButtonIndex = keyID;\n      if (keyID === 'all-form') {\n        this.allActivity = this.allActivityClone;\n      } else {\n        let allActivity1 = [];\n        this.allActivityClone.forEach(activity => {\n          activity.types.forEach(formType => {\n            if (formType.keyID == keyID) {\n              allActivity1.push(activity);\n            }\n          });\n        });\n        this.allActivity = allActivity1;\n      }\n    }\n    selectActivity(value) {\n      let activity = value;\n      try {\n        if (this.origin == ActivityConfigEnum.PFF && this.action == 'create') {\n          this.router.navigate([`/carbon-setting/activity-config/activity/${activity['keyID']}/create`\n          // { outlets: { activityConfig: ['create'] } }\n          ], {\n            queryParams: {\n              activityID: activity['id'],\n              origin: this.origin,\n              action: this.action,\n              tabView: 'YES'\n            }\n          });\n        } else if (this.origin == ActivityConfigEnum.AD_HOC && this.action == 'create') {\n          // this.router.navigate(['/redirect']).then(() => {\n          this.router.navigate([`/activity-data/activity/${activity['keyID']}`, {\n            outlets: {\n              activityConfig: ['create'],\n              activityData: ['create']\n            }\n          }], {\n            queryParams: {\n              activityID: activity['id'],\n              origin: this.origin,\n              action: this.action,\n              tabView: 'YES'\n            }\n          });\n          // });\n        }\n\n        this.dialogRef.close();\n      } catch (error) {\n        console.log(error);\n      }\n    }\n    searchFn(event) {\n      const searchTerm = (event || '').trim().toLowerCase();\n      if (this.isSelectActivity || this.selectedButtonIndex == ACTIVITY_FORM_TYPE_KEYID_ENUM.GHG_FORM) {\n        if (!searchTerm) {\n          this.allActivity = this.ghgActivity;\n        } else {\n          this.allActivity = this.ghgActivity.filter(activity => activity.name.toLowerCase().includes(searchTerm));\n        }\n      } else if (this.selectedButtonIndex == ACTIVITY_FORM_TYPE_KEYID_ENUM.CBAM_FORM) {\n        if (!searchTerm) {\n          this.allActivity = this.cbamActivity;\n        } else {\n          this.allActivity = this.cbamActivity.filter(activity => activity.name.toLowerCase().includes(searchTerm));\n        }\n      } else {\n        if (!searchTerm) {\n          this.allActivity = this.allActivityClone;\n        } else {\n          this.allActivity = this.allActivityClone.filter(activity => activity.name.toLowerCase().includes(searchTerm));\n        }\n      }\n    }\n  }\n  ActivitySelectionComponent.ɵfac = function ActivitySelectionComponent_Factory(t) {\n    return new (t || ActivitySelectionComponent)(i0.ɵɵdirectiveInject(MAT_DIALOG_DATA), i0.ɵɵdirectiveInject(i0.Renderer2), i0.ɵɵdirectiveInject(i1.ActivityService), i0.ɵɵdirectiveInject(i2.Router), i0.ɵɵdirectiveInject(i3.MatDialogRef), i0.ɵɵdirectiveInject(i4.ActivityController));\n  };\n  ActivitySelectionComponent.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n    type: ActivitySelectionComponent,\n    selectors: [[\"app-activity-selection\"]],\n    viewQuery: function ActivitySelectionComponent_Query(rf, ctx) {\n      if (rf & 1) {\n        i0.ɵɵviewQuery(_c0, 5);\n        i0.ɵɵviewQuery(_c1, 5);\n        i0.ɵɵviewQuery(_c2, 5);\n      }\n      if (rf & 2) {\n        let _t;\n        i0.ɵɵqueryRefresh(_t = i0.ɵɵloadQuery()) && (ctx.header = _t.first);\n        i0.ɵɵqueryRefresh(_t = i0.ɵɵloadQuery()) && (ctx.footer = _t.first);\n        i0.ɵɵqueryRefresh(_t = i0.ɵɵloadQuery()) && (ctx.body = _t.first);\n      }\n    },\n    decls: 24,\n    vars: 7,\n    consts: [[\"header\", \"\"], [1, \"headerContainer\", \"p-0\"], [1, \"headerLeftContainer\"], [1, \"pageTitle\"], [1, \"pageSubtitle\"], [1, \"headerRightContainer\"], [1, \"headerRightContainerInner\"], [\"mat-dialog-close\", \"\", 1, \"btn\", \"btn-sm\", \"centerAlign\", \"py-1\", \"iconBtn\"], [1, \"material-symbols-outlined\"], [1, \"headerContainer\", \"p-0\", \"mt-3\"], [1, \"headerLeftContainer\", 3, \"ngClass\"], [\"type\", \"button\", \"class\", \"btn me-3 btn-secondary btn-sm\", 3, \"ngClass\", \"click\", 4, \"ngFor\", \"ngForOf\"], [1, \"float-end\", 3, \"searchBy\", \"emitValueOnChange\", \"emitSearch\"], [\"searchBar\", \"\"], [1, \"mat-typography\", \"customScrollBar\", \"pt-2\"], [\"body\", \"\"], [\"class\", \"activity-container\", 4, \"ngFor\", \"ngForOf\"], [1, \"tscDialogFooter\"], [\"footer\", \"\"], [\"type\", \"button\", 1, \"btn\", \"me-3\", \"btn-secondary\", \"btn-sm\", 3, \"ngClass\", \"click\"], [1, \"activity-container\"], [1, \"row\", \"activity-row\", \"pt-3\"], [1, \"col-sm-8\", \"ps-0\"], [1, \"activityTitle\"], [4, \"ngFor\", \"ngForOf\"], [\"class\", \"text-secondary  mt-2\", 4, \"ngIf\"], [\"class\", \"activitySubtitle mt-2\", 4, \"ngIf\"], [1, \"col-sm-4\", \"pe-0\"], [1, \"float-end\"], [1, \"btn\", \"btn-light\", 3, \"click\"], [1, \"badge\", \"rounded-pill\", \"ms-2\", 3, \"ngClass\"], [1, \"text-secondary\", \"mt-2\"], [1, \"activitySubtitle\", \"mt-2\"]],\n    template: function ActivitySelectionComponent_Template(rf, ctx) {\n      if (rf & 1) {\n        i0.ɵɵelementStart(0, \"div\", null, 0);\n        i0.ɵɵelementStart(2, \"div\", 1);\n        i0.ɵɵelementStart(3, \"div\", 2);\n        i0.ɵɵelementStart(4, \"div\", 3);\n        i0.ɵɵtext(5, \"Select an activity type\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelement(6, \"div\", 4);\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(7, \"div\", 5);\n        i0.ɵɵelementStart(8, \"div\", 6);\n        i0.ɵɵelementStart(9, \"button\", 7);\n        i0.ɵɵelementStart(10, \"span\", 8);\n        i0.ɵɵtext(11, \" close \");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(12, \"div\", 9);\n        i0.ɵɵelementStart(13, \"div\", 10);\n        i0.ɵɵtemplate(14, ActivitySelectionComponent_button_14_Template, 2, 5, \"button\", 11);\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(15, \"div\", 5);\n        i0.ɵɵelementStart(16, \"div\", 6);\n        i0.ɵɵelementStart(17, \"lib-search-bar-one\", 12, 13);\n        i0.ɵɵlistener(\"emitSearch\", function ActivitySelectionComponent_Template_lib_search_bar_one_emitSearch_17_listener($event) {\n          return ctx.searchFn($event);\n        });\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(19, \"mat-dialog-content\", 14, 15);\n        i0.ɵɵtemplate(21, ActivitySelectionComponent_div_21_Template, 12, 4, \"div\", 16);\n        i0.ɵɵelementEnd();\n        i0.ɵɵelement(22, \"div\", 17, 18);\n      }\n      if (rf & 2) {\n        i0.ɵɵadvance(13);\n        i0.ɵɵproperty(\"ngClass\", i0.ɵɵpureFunction1(5, _c5, ctx.isSelectActivity));\n        i0.ɵɵadvance(1);\n        i0.ɵɵproperty(\"ngForOf\", ctx.allForms);\n        i0.ɵɵadvance(3);\n        i0.ɵɵproperty(\"searchBy\", \"activity name\")(\"emitValueOnChange\", ctx.emitValueOnChange);\n        i0.ɵɵadvance(4);\n        i0.ɵɵproperty(\"ngForOf\", ctx.allActivity);\n      }\n    },\n    directives: [i3.MatDialogClose, i5.NgClass, i5.NgForOf, i6.SearchBarOneComponent, i3.MatDialogContent, i5.NgIf],\n    styles: [\".activity-container[_ngcontent-%COMP%]{padding:10px;margin-bottom:10px}.activity-row[_ngcontent-%COMP%]{align-items:center}.activity-details[_ngcontent-%COMP%]{display:flex;align-items:center}.scope-name[_ngcontent-%COMP%]{font-weight:bold}.description[_ngcontent-%COMP%]{max-width:375px}.selected[_ngcontent-%COMP%]{font-weight:bold}.activityTitle[_ngcontent-%COMP%]{color:#86878a;text-transform:capitalize;font-size:16px;font-weight:700}.activitySubtitle[_ngcontent-%COMP%]{color:gray;font-size:12px;font-weight:200;text-transform:none}\"]\n  });\n  return ActivitySelectionComponent;\n})();","map":null,"metadata":{},"sourceType":"module"}