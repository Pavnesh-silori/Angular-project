{"ast":null,"code":"import { __awaiter } from \"tslib\";\nimport { EventEmitter } from '@angular/core';\nimport * as moment from 'moment-timezone';\nimport { DataCollectionMethodKeyIDEnum } from '@carbon/enum/data-collection-method.enum';\n// tsc-library\nimport { COMMON_CONSTANT, FormAction, FormErrorEnum, MatSelectSearchService, MaterialFormFieldAppearance, NocFileUploadEnum, TypeConfirmationDialog } from \"@library/tsc-common\";\nimport { DateFormatEnum, DateInputTypeEnum } from '@library/date';\nimport { UnitTypeKeyID } from '@library/unit-service';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/router\";\nimport * as i2 from \"@angular/material/dialog\";\nimport * as i3 from \"@angular/forms\";\nimport * as i4 from \"@carbon/controller/document.controller\";\nimport * as i5 from \"@carbon/service/data-collection-method.service\";\nimport * as i6 from \"@carbon/service/activity.service\";\nimport * as i7 from \"@library/tsc-common\";\nimport * as i8 from \"@library/date\";\nimport * as i9 from \"@library/unit-service\";\nimport * as i10 from \"@library/toastr-service\";\nimport * as i11 from \"@library/storage-service\";\nimport * as i12 from \"@angular/material/card\";\nimport * as i13 from \"@angular/material/form-field\";\nimport * as i14 from \"@angular/material/input\";\nimport * as i15 from \"@angular/common\";\nimport * as i16 from \"@angular/material/select\";\nimport * as i17 from \"@angular/material/core\";\nimport * as i18 from \"ngx-mat-select-search\";\nconst _c0 = [\"customDateInput\"];\nconst _c1 = [\"fileInput\"];\nfunction ProcessEmissionActivityDataCreateComponent_mat_error_14_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"mat-error\");\n    i0.ɵɵtext(1);\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const ctx_r1 = i0.ɵɵnextContext();\n    i0.ɵɵadvance(1);\n    i0.ɵɵtextInterpolate1(\" \", ctx_r1.FormErrorEnum.NEGATIVE, \" \");\n  }\n}\nfunction ProcessEmissionActivityDataCreateComponent_mat_error_15_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"mat-error\");\n    i0.ɵɵtext(1);\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const ctx_r2 = i0.ɵɵnextContext();\n    i0.ɵɵadvance(1);\n    i0.ɵɵtextInterpolate1(\" \", ctx_r2.FormErrorEnum.REQUIRED, \" \");\n  }\n}\nfunction ProcessEmissionActivityDataCreateComponent_mat_option_23_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"mat-option\", 16);\n    i0.ɵɵtext(1);\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const unit_r9 = ctx.$implicit;\n    i0.ɵɵproperty(\"value\", unit_r9.id);\n    i0.ɵɵadvance(1);\n    i0.ɵɵtextInterpolate1(\" \", unit_r9.name, \" \");\n  }\n}\nfunction ProcessEmissionActivityDataCreateComponent_mat_error_25_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"mat-error\");\n    i0.ɵɵtext(1);\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const ctx_r4 = i0.ɵɵnextContext();\n    i0.ɵɵadvance(1);\n    i0.ɵɵtextInterpolate1(\" \", ctx_r4.FormErrorEnum.REQUIRED, \" \");\n  }\n}\nfunction ProcessEmissionActivityDataCreateComponent_ng_container_26_ng_container_9_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementContainer(0);\n  }\n}\nconst _c2 = function (a0) {\n  return {\n    \"d-none\": a0\n  };\n};\nfunction ProcessEmissionActivityDataCreateComponent_ng_container_26_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r13 = i0.ɵɵgetCurrentView();\n    i0.ɵɵelementContainerStart(0);\n    i0.ɵɵelementStart(1, \"div\", 3);\n    i0.ɵɵelementStart(2, \"div\", 17);\n    i0.ɵɵelementStart(3, \"input\", 18, 19);\n    i0.ɵɵlistener(\"change\", function ProcessEmissionActivityDataCreateComponent_ng_container_26_Template_input_change_3_listener($event) {\n      i0.ɵɵrestoreView(_r13);\n      const ctx_r12 = i0.ɵɵnextContext();\n      return ctx_r12.fileUpload($event, ctx_r12.activityDataFG, 0);\n    });\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(5, \"div\", 20);\n    i0.ɵɵelementStart(6, \"div\", 21);\n    i0.ɵɵelementStart(7, \"div\", 22);\n    i0.ɵɵelementStart(8, \"div\", 23);\n    i0.ɵɵtemplate(9, ProcessEmissionActivityDataCreateComponent_ng_container_26_ng_container_9_Template, 1, 0, \"ng-container\", 24);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(10, \"div\", 23);\n    i0.ɵɵelementStart(11, \"div\", 25);\n    i0.ɵɵtext(12);\n    i0.ɵɵelement(13, \"br\");\n    i0.ɵɵtext(14);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(15, \"div\", 26);\n    i0.ɵɵelementStart(16, \"button\", 27);\n    i0.ɵɵlistener(\"click\", function ProcessEmissionActivityDataCreateComponent_ng_container_26_Template_button_click_16_listener() {\n      i0.ɵɵrestoreView(_r13);\n      const ctx_r14 = i0.ɵɵnextContext();\n      return ctx_r14.removeFile(ctx_r14.activityDataFG, 0);\n    });\n    i0.ɵɵelementStart(17, \"span\", 28);\n    i0.ɵɵtext(18, \" delete \");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementContainerEnd();\n  }\n  if (rf & 2) {\n    const ctx_r5 = i0.ɵɵnextContext();\n    const _r7 = i0.ɵɵreference(29);\n    i0.ɵɵadvance(7);\n    i0.ɵɵproperty(\"ngClass\", i0.ɵɵpureFunction1(4, _c2, ctx_r5.docFileList[0] == null));\n    i0.ɵɵadvance(2);\n    i0.ɵɵproperty(\"ngTemplateOutlet\", _r7);\n    i0.ɵɵadvance(3);\n    i0.ɵɵtextInterpolate1(\" \", ctx_r5.activityDataFG.get(\"docName\").value, \" \");\n    i0.ɵɵadvance(2);\n    i0.ɵɵtextInterpolate1(\" \", ctx_r5.activityDataFG.get(\"docSize\").value, \" \");\n  }\n}\nfunction ProcessEmissionActivityDataCreateComponent_ng_container_27_ng_container_4_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementContainer(0);\n  }\n}\nfunction ProcessEmissionActivityDataCreateComponent_ng_container_27_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r18 = i0.ɵɵgetCurrentView();\n    i0.ɵɵelementContainerStart(0);\n    i0.ɵɵelementStart(1, \"div\", 20);\n    i0.ɵɵelementStart(2, \"div\", 21);\n    i0.ɵɵelementStart(3, \"div\", 29);\n    i0.ɵɵtemplate(4, ProcessEmissionActivityDataCreateComponent_ng_container_27_ng_container_4_Template, 1, 0, \"ng-container\", 24);\n    i0.ɵɵelementStart(5, \"div\", 23);\n    i0.ɵɵelementStart(6, \"div\", 30);\n    i0.ɵɵelementStart(7, \"a\", 31);\n    i0.ɵɵtext(8);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(9, \"div\", 32);\n    i0.ɵɵelementStart(10, \"button\", 33);\n    i0.ɵɵlistener(\"click\", function ProcessEmissionActivityDataCreateComponent_ng_container_27_Template_button_click_10_listener() {\n      i0.ɵɵrestoreView(_r18);\n      const _r16 = i0.ɵɵreference(14);\n      return _r16.click();\n    });\n    i0.ɵɵelementStart(11, \"span\", 34);\n    i0.ɵɵtext(12, \" edit \");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(13, \"input\", 35, 19);\n    i0.ɵɵlistener(\"change\", function ProcessEmissionActivityDataCreateComponent_ng_container_27_Template_input_change_13_listener($event) {\n      i0.ɵɵrestoreView(_r18);\n      const ctx_r19 = i0.ɵɵnextContext();\n      return ctx_r19.fileUpload($event, ctx_r19.activityDataFG, 0);\n    });\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(15, \"button\", 36);\n    i0.ɵɵlistener(\"click\", function ProcessEmissionActivityDataCreateComponent_ng_container_27_Template_button_click_15_listener() {\n      i0.ɵɵrestoreView(_r18);\n      const ctx_r20 = i0.ɵɵnextContext();\n      return ctx_r20.deleteConfirmation(ctx_r20.activityDataFG, 0);\n    });\n    i0.ɵɵelementStart(16, \"span\", 28);\n    i0.ɵɵtext(17, \" delete \");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementContainerEnd();\n  }\n  if (rf & 2) {\n    const ctx_r6 = i0.ɵɵnextContext();\n    const _r7 = i0.ɵɵreference(29);\n    i0.ɵɵadvance(4);\n    i0.ɵɵproperty(\"ngTemplateOutlet\", _r7);\n    i0.ɵɵadvance(3);\n    i0.ɵɵpropertyInterpolate(\"href\", ctx_r6.activityDataFG.get(\"docPath\").value, i0.ɵɵsanitizeUrl);\n    i0.ɵɵproperty(\"ngClass\", i0.ɵɵpureFunction1(4, _c2, !ctx_r6.activityDataFG.get(\"docPath\").value));\n    i0.ɵɵadvance(1);\n    i0.ɵɵtextInterpolate1(\" \", ctx_r6.activityDataFG.get(\"docName\").value, \" \");\n  }\n}\nfunction ProcessEmissionActivityDataCreateComponent_ng_template_28_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\", 23);\n    i0.ɵɵelementStart(1, \"div\", 37);\n    i0.ɵɵelement(2, \"img\", 38);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const ctx_r8 = i0.ɵɵnextContext();\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"matTooltip\", ctx_r8.billFileName);\n  }\n}\n// /tsc-library\nexport let ProcessEmissionActivityDataCreateComponent = /*#__PURE__*/(() => {\n  class ProcessEmissionActivityDataCreateComponent {\n    constructor(activatedRoute, dialog, formBuilder, carbonDocumentController, dataCollectionMethodService, activityService, tSCCommonService, dateService, unitService, toastrService, storageService) {\n      this.dialog = dialog;\n      this.formBuilder = formBuilder;\n      this.carbonDocumentController = carbonDocumentController;\n      this.dataCollectionMethodService = dataCollectionMethodService;\n      this.activityService = activityService;\n      this.tSCCommonService = tSCCommonService;\n      this.dateService = dateService;\n      this.unitService = unitService;\n      this.toastrService = toastrService;\n      this.COMMON_CONSTANT = COMMON_CONSTANT;\n      this.MaterialFormFieldAppearance = MaterialFormFieldAppearance;\n      this.FormErrorEnum = FormErrorEnum;\n      this.DateInputTypeEnum = DateInputTypeEnum;\n      this.DateFormatEnum = DateFormatEnum;\n      this.inputFieldlabel = 'Amount';\n      this.FormAction = FormAction;\n      this.docFileList = new Array(1).fill(null);\n      this.docFile = null;\n      this.noDocFileAvailable = true;\n      this.isEqual = new EventEmitter();\n      this.validity = new EventEmitter();\n      this.unitSelectSearch = new MatSelectSearchService(['name']);\n      this.errorHandling = (formGroup, controlPath, error) => {\n        return formGroup.get(controlPath).hasError(error);\n      };\n      this.currentOrgID = storageService.getStorage('currentOrgID');\n      activatedRoute.queryParams.subscribe(qParams => {\n        this.activityID = Number(qParams['activityID']);\n      });\n      activatedRoute.params.subscribe(params => {\n        this.activityDataID = Number(params['id']);\n      });\n      this.activityKeyID = activatedRoute.snapshot.data.activityKeyID;\n      this.action = activatedRoute.snapshot.data.action;\n    }\n    ngOnInit() {\n      this.formDataInit();\n      this.getUnit([`type:${UnitTypeKeyID.MASS}`]);\n      this.formActionHandler();\n    }\n    getConfiguration(configuration) {\n      return __awaiter(this, void 0, void 0, function* () {\n        let activityConfigData;\n        let activityData;\n        if (configuration != null) {\n          activityConfigData = configuration.activityConfigData;\n          activityData = configuration.activityData;\n          this.inputFieldlabel = activityConfigData.dataInputField;\n          this.patchActivityData(configuration);\n        }\n      });\n    }\n    patchActivityData(configuration) {\n      let activityConfigData;\n      let activityData;\n      if (configuration != null) {\n        activityConfigData = configuration.activityConfigData;\n        activityData = configuration.activityData;\n        this.activityDataFG.patchValue({\n          activityDataID: activityData.id,\n          amount: activityData.amount,\n          amountUnitID: activityData.amountUnit.unitID,\n          docID: activityData.file ? activityData.file.id : null,\n          docName: activityData.file ? activityData.file.name : null,\n          docPath: activityData.file ? activityData.file.path : null\n        });\n        this.customDateInputs.daterange.patchValue({\n          startDate: moment(activityData.startDate),\n          endDate: moment(activityData.endDate)\n        });\n      }\n    }\n    formActionHandler() {\n      // if (this.action == FormAction.CREATE) {\n      //     this.getAllDataCollectionMethod();\n      //     this.getAllActivity();\n      // } else if (this.action == FormAction.UPDATE) {\n      // }\n      this.getAllDataCollectionMethod();\n      this.getAllActivity();\n    }\n    formDataInit() {\n      this.activityDataFG = this.formBuilder.group({\n        activityID: [this.activityID],\n        activityDataID: [],\n        startDate: [],\n        endDate: [],\n        dataCollectionMethodID: [this.manualDataCollectionMethodID],\n        amount: [],\n        amountUnitID: [],\n        docID: [],\n        docType: [],\n        docName: [],\n        docPath: [],\n        docSize: []\n      });\n    }\n    getUnit(filter) {\n      return __awaiter(this, void 0, void 0, function* () {\n        this.unit = yield this.unitService.getUnit(filter);\n        this.unitSelectSearch.entityArr = this.unit;\n        this.unitSelectSearch.createSubscription();\n      });\n    }\n    dateInpChange(formGroup) {\n      if (this.customDateInputs) {\n        let startDate;\n        let endDate;\n        startDate = this.customDateInputs.startDateFC.value;\n        endDate = this.customDateInputs.endDateFC.value;\n        if (startDate) {\n          const formatted_startDate = this.dateService.formatDate(startDate, DateFormatEnum.YYYY_MM_DD);\n          formGroup.get('startDate').patchValue(formatted_startDate);\n        }\n        if (endDate) {\n          const formatted_endDate = this.dateService.formatDate(endDate, DateFormatEnum.YYYY_MM_DD);\n          formGroup.get('endDate').patchValue(formatted_endDate);\n        }\n      }\n    }\n    getAllActivity() {\n      let allActivity = [];\n      this.activityService.getAllActivityNew().then(res => {\n        allActivity = res;\n        this.setActivityID(allActivity);\n      }).catch(error => {\n        console.error('error in getAllActivity -', error);\n      });\n    }\n    getAllDataCollectionMethod() {\n      return __awaiter(this, void 0, void 0, function* () {\n        let allDataCollectionMethod = [];\n        allDataCollectionMethod = yield this.dataCollectionMethodService.getDataCollectionMethod();\n        this.setManualDataCollectionMethodID(allDataCollectionMethod);\n      });\n    }\n    setActivityID(allActivity) {\n      let activtiy;\n      let activityID;\n      activtiy = this.tSCCommonService.getUniqueObject(allActivity, 'keyID', this.activityKeyID);\n      activityID = activtiy.id;\n      this.patchControl(this.activityDataFG, 'activityID', activityID);\n    }\n    setManualDataCollectionMethodID(allDataCollectionMethod) {\n      let manualEntry;\n      manualEntry = this.tSCCommonService.getUniqueObject(allDataCollectionMethod, 'keyID', DataCollectionMethodKeyIDEnum.MANUAL_ENTRY);\n      this.manualDataCollectionMethodID = manualEntry.dataCollectionMethodID;\n      this.patchControl(this.activityDataFG, 'dataCollectionMethodID', this.manualDataCollectionMethodID);\n    }\n    patchControl(formGroup, controlPath, value) {\n      formGroup.get(controlPath).patchValue(value);\n    }\n    isValidForm() {\n      if (this.activityDataFG.invalid) {\n        console.error('invalid form -', this.activityDataFG);\n        this.activityDataFG.markAllAsTouched();\n        return false;\n      }\n      this.activityData = {};\n      this.activityData = JSON.parse(JSON.stringify(this.activityDataFG.value));\n      return true;\n    }\n    activityDataValidity() {\n      this.activityDataFG.valueChanges.subscribe(() => this.validity.emit(!this.activityDataFG.invalid));\n    }\n    getActivityData() {\n      return {\n        'activityData': this.activityData,\n        'activityDataFile': this.docFileList\n      };\n    }\n    fileUpload(event, formGroup, index) {\n      let file = event.target.files[0];\n      if (file) {\n        if (file.type !== 'application/pdf') {\n          this.toastrService.error(NocFileUploadEnum.INVALID_FILE_TYPE_ERROR);\n          return;\n        }\n        if (file.size > NocFileUploadEnum.MAX_FILE_SIZE) {\n          this.toastrService.error(NocFileUploadEnum.INVAID_FILE_SIZE_ERROR);\n          return;\n        }\n        let reader = new FileReader();\n        reader.readAsDataURL(file);\n        reader.onload = e => {};\n        this.docFile = file;\n        this.docFileName = file['name'];\n        formGroup.get('docName').patchValue(file['name']);\n        formGroup.get('docSize').patchValue(this.getFileSizeWithUnit(file['size']));\n        this.docFileList[index] = this.docFile;\n        if (this.action == FormAction.UPDATE) {\n          this.fileCreateUpdate(formGroup);\n        }\n      } else {\n        this.toastrService.error('Please upload a file!');\n        return;\n      }\n    }\n    getFileSizeWithUnit(billFileSize) {\n      const fileSizeInKB = Math.round(billFileSize / 1024);\n      const fileSizeInMB = Math.round(fileSizeInKB / 1024);\n      const fileSizeInGB = Math.round(fileSizeInMB / 1024);\n      if (fileSizeInGB > 1) {\n        return fileSizeInGB + ' GB';\n      } else if (fileSizeInMB > 1) {\n        return fileSizeInMB + ' MB';\n      } else {\n        return fileSizeInKB + ' KB';\n      }\n    }\n    removeFile(formGroup, index) {\n      if (this.action == FormAction.CREATE) {\n        this.fileInput.nativeElement.value = null;\n      }\n      this.docFile = null;\n      this.docFileName = '';\n      formGroup.get('docName').reset();\n      formGroup.get('docSize').reset();\n      formGroup.get('docPath').reset(null);\n      formGroup.get('docID').reset();\n      this.docFileList[index] = this.docFile;\n    }\n    toFormData() {\n      const formData = new FormData();\n      formData.append('payload', this.docFile);\n      return formData;\n    }\n    fileCreateUpdate(formGroup) {\n      if (formGroup.get('docID').value == null) {\n        this.carbonDocumentController.createDocument(this.currentOrgID, formGroup.get('activityDataID').value, this.activityKeyID, this.toFormData()).subscribe(response => {\n          this.file = response['response'];\n          this.updateFileFormControl(formGroup);\n        }, error => {\n          console.log(\"error in fileCreate -\", error);\n        });\n      } else {\n        this.carbonDocumentController.updateDocument(this.currentOrgID, formGroup.get('docID').value, this.toFormData()).subscribe(response => {\n          this.file = response['response'];\n          this.updateFileFormControl(formGroup);\n        }, error => {\n          console.log(\"error in fileUpdate -\", error);\n        });\n      }\n    }\n    updateFileFormControl(formGroup) {\n      formGroup.get('docID').patchValue(this.file.id);\n      formGroup.get('docName').patchValue(this.file.name);\n      formGroup.get('docPath').patchValue(this.file.path);\n    }\n    deleteConfirmation(formGroup, index) {\n      const dialogRef = this.dialog.open(TypeConfirmationDialog, {\n        minWidth: '650px',\n        maxWidth: '600px',\n        data: {\n          icon: 'delete',\n          header: 'Are you sure you want to delete ?',\n          body: '<p class = \"ps-1\"><strong class=\"pe-1\"> Note:</strong>This file will be deleted permanently and you won`t be able to track it`s progress.</p><span class=\"fw-bold ps-1\">Are you sure you want to delete?</span>',\n          confirmationInput: 'DELETE',\n          buttonOne: 'Cancel',\n          buttonTwo: 'Delete'\n        }\n      });\n      dialogRef.afterClosed().subscribe(result => {\n        if (result) {\n          this.deleteDocument(formGroup.get('docID').value, formGroup, index);\n        } else {\n          dialogRef.close();\n        }\n      });\n    }\n    deleteDocument(docID, formGroup, index) {\n      this.carbonDocumentController.deleteDocument(this.currentOrgID, docID).subscribe(res => {\n        this.removeFile(formGroup, index);\n      }, error => {\n        console.log(\"error in deleteDocument -\", error);\n      });\n    }\n    updateActivityData() {\n      return this.activityData;\n    }\n  }\n  ProcessEmissionActivityDataCreateComponent.ɵfac = function ProcessEmissionActivityDataCreateComponent_Factory(t) {\n    return new (t || ProcessEmissionActivityDataCreateComponent)(i0.ɵɵdirectiveInject(i1.ActivatedRoute), i0.ɵɵdirectiveInject(i2.MatDialog), i0.ɵɵdirectiveInject(i3.FormBuilder), i0.ɵɵdirectiveInject(i4.CarbonDocumentController), i0.ɵɵdirectiveInject(i5.DataCollectionMethodService), i0.ɵɵdirectiveInject(i6.ActivityService), i0.ɵɵdirectiveInject(i7.TSCCommonService), i0.ɵɵdirectiveInject(i8.DateService), i0.ɵɵdirectiveInject(i9.UnitService), i0.ɵɵdirectiveInject(i10.ToastrService), i0.ɵɵdirectiveInject(i11.StorageService));\n  };\n  ProcessEmissionActivityDataCreateComponent.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n    type: ProcessEmissionActivityDataCreateComponent,\n    selectors: [[\"app-process-emission-activity-data-create\"]],\n    viewQuery: function ProcessEmissionActivityDataCreateComponent_Query(rf, ctx) {\n      if (rf & 1) {\n        i0.ɵɵviewQuery(_c0, 5);\n        i0.ɵɵviewQuery(_c1, 5);\n      }\n      if (rf & 2) {\n        let _t;\n        i0.ɵɵqueryRefresh(_t = i0.ɵɵloadQuery()) && (ctx.customDateInputs = _t.first);\n        i0.ɵɵqueryRefresh(_t = i0.ɵɵloadQuery()) && (ctx.fileInput = _t.first);\n      }\n    },\n    decls: 30,\n    vars: 21,\n    consts: [[1, \"cardOverwrite\", \"border\"], [1, \"cardTitle\", \"pb-2\"], [3, \"formGroup\"], [1, \"row\"], [1, \"col-sm-6\"], [1, \"cursorPointer\", 3, \"materialFieldWidthInp\", \"materialFormFieldAppearanceInp\", \"isMandatoryFieldInp\", \"dateInputTypeInp\", \"labelInp\", \"cdrFormatInp\", \"emitFilter\"], [\"customDateInput\", \"\"], [1, \"col-sm-3\"], [1, \"matFieldWidth100\", 3, \"appearance\"], [1, \"formLabel\"], [\"type\", \"number\", \"matInput\", \"\", \"formControlName\", \"amount\", \"min\", \"0\", \"required\", \"\", 1, \"formPlaceholder\", 3, \"placeholder\"], [4, \"ngIf\"], [\"formControlName\", \"amountUnitID\", \"required\", \"\"], [\"placeholderLabel\", \"Search by unit name\", 3, \"formControl\", \"noEntriesFoundLabel\"], [3, \"value\", 4, \"ngFor\", \"ngForOf\"], [\"docImg\", \"\"], [3, \"value\"], [1, \"col-sm-8\", \"fileInput\"], [\"type\", \"file\", \"accept\", \"application/pdf\", 1, \"form-control\", 3, \"change\"], [\"fileInput\", \"\"], [1, \"row\", \"pt-2\"], [1, \"col-sm-8\"], [1, \"border\", \"rounded\", \"d-flex\", 3, \"ngClass\"], [1, \"p-1\"], [4, \"ngTemplateOutlet\"], [1, \"centerAlignVertical\", \"p-1\"], [1, \"ms-auto\", \"p-1\"], [\"type\", \"button\", \"mat-icon-button\", \"\", 1, \"btn\", \"p-1\", 3, \"click\"], [1, \"material-symbols-outlined\", \"text-danger\"], [1, \"border\", \"rounded\", \"d-flex\"], [1, \"centerAlignVertical\", \"p-3\"], [\"target\", \"_blank\", 3, \"href\", \"ngClass\"], [1, \"ms-auto\", \"centerAlignVertical\", \"p-2\"], [\"type\", \"button\", \"mat-icon-button\", \"\", \"matTooltip\", \"Edit\", \"matTooltipClass\", \"nameTooltip\", \"matTooltipPosition\", \"below\", 1, \"btn\", \"p-1\", 3, \"click\"], [1, \"material-symbols-outlined\", \"text-primary\", \"updateIconHover\", \"fs-5\"], [\"type\", \"file\", \"accept\", \"application/pdf\", 1, \"form-control\", 2, \"display\", \"none\", 3, \"change\"], [\"type\", \"button\", \"mat-icon-button\", \"\", \"matTooltip\", \"Delete\", \"matTooltipClass\", \"nameTooltip\", \"matTooltipPosition\", \"below\", 1, \"btn\", \"p-1\", 3, \"click\"], [\"matSuffix\", \"\", \"mat-icon-button\", \"\", \"mat-raised-button\", \"\", \"matTooltipPosition\", \"below\", 1, \"docIcon\", \"p-1\", 3, \"matTooltip\"], [\"height\", \"40px\", \"src\", \"assets/images/default-doc.ico\", \"alt\", \"bill document preview\"]],\n    template: function ProcessEmissionActivityDataCreateComponent_Template(rf, ctx) {\n      if (rf & 1) {\n        i0.ɵɵelementStart(0, \"mat-card\", 0);\n        i0.ɵɵelementStart(1, \"div\", 1);\n        i0.ɵɵtext(2, \" Activity Data \");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(3, \"form\", 2);\n        i0.ɵɵelementStart(4, \"div\", 3);\n        i0.ɵɵelementStart(5, \"div\", 4);\n        i0.ɵɵelementStart(6, \"lib-date-input\", 5, 6);\n        i0.ɵɵlistener(\"emitFilter\", function ProcessEmissionActivityDataCreateComponent_Template_lib_date_input_emitFilter_6_listener() {\n          return ctx.dateInpChange(ctx.activityDataFG);\n        });\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(8, \"div\", 3);\n        i0.ɵɵelementStart(9, \"div\", 7);\n        i0.ɵɵelementStart(10, \"mat-form-field\", 8);\n        i0.ɵɵelementStart(11, \"mat-label\", 9);\n        i0.ɵɵtext(12);\n        i0.ɵɵelementEnd();\n        i0.ɵɵelement(13, \"input\", 10);\n        i0.ɵɵtemplate(14, ProcessEmissionActivityDataCreateComponent_mat_error_14_Template, 2, 1, \"mat-error\", 11);\n        i0.ɵɵtemplate(15, ProcessEmissionActivityDataCreateComponent_mat_error_15_Template, 2, 1, \"mat-error\", 11);\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(16, \"div\", 7);\n        i0.ɵɵelementStart(17, \"mat-form-field\", 8);\n        i0.ɵɵelementStart(18, \"mat-label\", 9);\n        i0.ɵɵtext(19, \"Select Unit\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(20, \"mat-select\", 12);\n        i0.ɵɵelementStart(21, \"mat-option\");\n        i0.ɵɵelement(22, \"ngx-mat-select-search\", 13);\n        i0.ɵɵelementEnd();\n        i0.ɵɵtemplate(23, ProcessEmissionActivityDataCreateComponent_mat_option_23_Template, 2, 2, \"mat-option\", 14);\n        i0.ɵɵpipe(24, \"async\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵtemplate(25, ProcessEmissionActivityDataCreateComponent_mat_error_25_Template, 2, 1, \"mat-error\", 11);\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementEnd();\n        i0.ɵɵtemplate(26, ProcessEmissionActivityDataCreateComponent_ng_container_26_Template, 19, 6, \"ng-container\", 11);\n        i0.ɵɵtemplate(27, ProcessEmissionActivityDataCreateComponent_ng_container_27_Template, 18, 6, \"ng-container\", 11);\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementEnd();\n        i0.ɵɵtemplate(28, ProcessEmissionActivityDataCreateComponent_ng_template_28_Template, 3, 1, \"ng-template\", null, 15, i0.ɵɵtemplateRefExtractor);\n      }\n      if (rf & 2) {\n        i0.ɵɵadvance(3);\n        i0.ɵɵproperty(\"formGroup\", ctx.activityDataFG);\n        i0.ɵɵadvance(3);\n        i0.ɵɵproperty(\"materialFieldWidthInp\", true)(\"materialFormFieldAppearanceInp\", ctx.MaterialFormFieldAppearance.FORM_FIELD_APPEARANCE)(\"isMandatoryFieldInp\", true)(\"dateInputTypeInp\", ctx.DateInputTypeEnum.CUSTOM_INPUT)(\"labelInp\", \"Accounting Period\")(\"cdrFormatInp\", ctx.DateFormatEnum.DD_MMM_YYYY);\n        i0.ɵɵadvance(4);\n        i0.ɵɵproperty(\"appearance\", ctx.MaterialFormFieldAppearance.FORM_FIELD_APPEARANCE);\n        i0.ɵɵadvance(2);\n        i0.ɵɵtextInterpolate(ctx.inputFieldlabel);\n        i0.ɵɵadvance(1);\n        i0.ɵɵproperty(\"placeholder\", ctx.inputFieldlabel);\n        i0.ɵɵadvance(1);\n        i0.ɵɵproperty(\"ngIf\", ctx.errorHandling(ctx.activityDataFG, \"amount\", \"min\"));\n        i0.ɵɵadvance(1);\n        i0.ɵɵproperty(\"ngIf\", ctx.errorHandling(ctx.activityDataFG, \"amount\", \"required\"));\n        i0.ɵɵadvance(2);\n        i0.ɵɵproperty(\"appearance\", ctx.MaterialFormFieldAppearance.FORM_FIELD_APPEARANCE);\n        i0.ɵɵadvance(5);\n        i0.ɵɵproperty(\"formControl\", ctx.unitSelectSearch.filterFC)(\"noEntriesFoundLabel\", ctx.COMMON_CONSTANT.NO_MATCH_FOUND);\n        i0.ɵɵadvance(1);\n        i0.ɵɵproperty(\"ngForOf\", i0.ɵɵpipeBind1(24, 19, ctx.unitSelectSearch.filteredEntities));\n        i0.ɵɵadvance(2);\n        i0.ɵɵproperty(\"ngIf\", ctx.errorHandling(ctx.activityDataFG, \"amountUnitID\", \"required\"));\n        i0.ɵɵadvance(1);\n        i0.ɵɵproperty(\"ngIf\", ctx.activityDataFG.get(\"docPath\").value == null);\n        i0.ɵɵadvance(1);\n        i0.ɵɵproperty(\"ngIf\", ctx.activityDataFG.get(\"docPath\").value != null);\n      }\n    },\n    directives: [i12.MatCard, i3.ɵNgNoValidate, i3.NgControlStatusGroup, i3.FormGroupDirective, i8.DateInputComponent, i13.MatFormField, i13.MatLabel, i3.NumberValueAccessor, i3.MinValidator, i14.MatInput, i3.DefaultValueAccessor, i3.NgControlStatus, i3.FormControlName, i3.RequiredValidator, i15.NgIf, i16.MatSelect, i17.MatOption, i18.MatSelectSearchComponent, i3.FormControlDirective, i15.NgForOf, i13.MatError, i15.NgClass, i15.NgTemplateOutlet, i13.MatSuffix],\n    pipes: [i15.AsyncPipe],\n    encapsulation: 2\n  });\n  return ProcessEmissionActivityDataCreateComponent;\n})();","map":null,"metadata":{},"sourceType":"module"}