{"ast":null,"code":"import { __awaiter } from \"tslib\";\nimport { FormArray, Validators } from '@angular/forms';\nimport { forkJoin } from 'rxjs';\nimport { cloneDeep } from 'lodash-es';\nimport { PROCESS_INPUT_ENUM, PROCESS_OUTPUT_ENUM } from '@netzero/enum/process.enum';\nimport { ToastrColor } from '@library/toastr-service';\nimport { InvalidForm } from '@library/tsc-common';\nimport { SharedComponent } from '../_shared/shared.component';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@library/storage-service\";\nimport * as i2 from \"@angular/router\";\nimport * as i3 from \"@angular/forms\";\nimport * as i4 from \"@netzero/service/product-and-service.service\";\nimport * as i5 from \"@library/toastr-service\";\nimport * as i6 from \"../create-update-form.service\";\nimport * as i7 from \"@carbon/controller/fuel.controller\";\nimport * as i8 from \"@carbon/controller/process.controller\";\nimport * as i9 from \"@netzero/controller/cutom-fuel.controller\";\nimport * as i10 from \"@angular/common\";\nimport * as i11 from \"../_shared/shared.component\";\nfunction CreateComponent_ng_container_8_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r4 = i0.ɵɵgetCurrentView();\n    i0.ɵɵelementContainerStart(0);\n    i0.ɵɵelementStart(1, \"app-process\", 10);\n    i0.ɵɵlistener(\"remove\", function CreateComponent_ng_container_8_Template_app_process_remove_1_listener() {\n      const restoredCtx = i0.ɵɵrestoreView(_r4);\n      const i_r2 = restoredCtx.index;\n      const ctx_r3 = i0.ɵɵnextContext();\n      return ctx_r3.removeProcess(i_r2);\n    })(\"entitiyCreated\", function CreateComponent_ng_container_8_Template_app_process_entitiyCreated_1_listener() {\n      i0.ɵɵrestoreView(_r4);\n      const ctx_r5 = i0.ɵɵnextContext();\n      return ctx_r5.getProducts();\n    });\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementContainerEnd();\n  }\n  if (rf & 2) {\n    const processFG_r1 = ctx.$implicit;\n    const i_r2 = ctx.index;\n    const ctx_r0 = i0.ɵɵnextContext();\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"id\", i_r2)(\"processFG\", processFG_r1)(\"isSubmitClicked\", ctx_r0.isSubmitClicked)(\"products\", ctx_r0.products)(\"processes\", ctx_r0.processes)(\"input\", ctx_r0.input)(\"output\", ctx_r0.output)(\"fuel\", ctx_r0.fuel)(\"standardFuel\", ctx_r0.standardFuel);\n  }\n}\nexport let CreateComponent = /*#__PURE__*/(() => {\n  class CreateComponent {\n    constructor(storageService, router, formBuilder, productService, toastrService, processFormService, fuelController, processController, customFuelController) {\n      this.router = router;\n      this.formBuilder = formBuilder;\n      this.productService = productService;\n      this.toastrService = toastrService;\n      this.processFormService = processFormService;\n      this.fuelController = fuelController;\n      this.processController = processController;\n      this.customFuelController = customFuelController;\n      this.PROCESS_INPUT_ENUM = PROCESS_INPUT_ENUM;\n      this.PROCESS_OUTPUT_ENUM = PROCESS_OUTPUT_ENUM;\n      this.isSubmitClicked = false;\n      this.processFA = new FormArray([]);\n      this.dataInputFieldDefault = 'N/A';\n      this.currentOrgID = storageService.getStorage(['currentOrgID']);\n    }\n    ngOnInit() {\n      this.processFA.push(this.processFG);\n      this.getAllNecessaryValues();\n    }\n    getAllNecessaryValues() {\n      forkJoin([this.productService.getProductList(this.currentOrgID), this.processController.getProcessInputs(), this.processController.getProcessOutputs(), this.customFuelController.getCustomFuels(this.currentOrgID), this.processController.getProcessList(this.currentOrgID), this.fuelController.getFuelStationaryCombustion()]).subscribe(res => {\n        this.products = res[0];\n        this.input = res[1];\n        this.output = res[2];\n        this.fuel = res[3];\n        this.processes = res[4];\n        this.standardFuel = res[5];\n      });\n    }\n    getProducts() {\n      return __awaiter(this, void 0, void 0, function* () {\n        this.products = yield this.productService.getProductList(this.currentOrgID);\n      });\n    }\n    get processFG() {\n      let processFG = this.formBuilder.group({\n        name: [, [Validators.required]],\n        description: [],\n        dataInputField: [this.dataInputFieldDefault /* TODO */, [Validators.required]],\n        isCBAMProcess: [false, Validators.required],\n        input: this.formBuilder.array([]),\n        output: this.formBuilder.array([])\n      });\n      processFG.get('input').disable();\n      processFG.get('output').disable();\n      return processFG;\n    }\n    createProcess() {\n      this.processFA.push(this.processFG);\n    }\n    removeProcess(index) {\n      this.processFA.removeAt(index);\n    }\n    haveIO(fg) {\n      let input = fg.get('input');\n      let output = fg.get('output');\n      return input.controls.length > 0 && output.controls.length > 0;\n    }\n    scrollToView(index) {\n      setTimeout(() => document.getElementById(index).scrollIntoView({\n        behavior: \"smooth\",\n        block: \"center\"\n      }));\n    }\n    saveProcesses() {\n      if (this.processFA.controls.length == 0) {\n        let toast = this.toastrService.getToastStatus('error');\n        this.toastrService.openToast(toast.title, 'Create atleast one process.', toast.color);\n        return;\n      }\n      this.isSubmitClicked = true;\n      if (this.processFA.invalid) {\n        console.log('invalid form - ', this.processFA);\n        this.processFA.markAllAsTouched();\n        this.toastrService.openToast(InvalidForm.INVALID_FORM_TITLE, InvalidForm.INVALID_FORM_MESSAGE, ToastrColor.ERROR);\n        return;\n      }\n      let first_invalid_io_process = 0;\n      if (!this.processFA.controls.every((fg, index) => {\n        if (fg.get('isCBAMProcess').value) {\n          if (!this.haveIO(fg)) {\n            first_invalid_io_process = index;\n            return false;\n          }\n        }\n        return true;\n      })) {\n        this.scrollToView(first_invalid_io_process);\n        this.toastrService.openToast(InvalidForm.INVALID_FORM_TITLE, 'Some CBAM process lack proper input/output mapping', ToastrColor.ERROR);\n        return;\n      }\n      let processes = cloneDeep(this.processFA.value);\n      processes.forEach((process, i) => {\n        this.processFormService.createValueJson(process, this.processList.toArray()[i]);\n      });\n      this.processController.createProcess(this.currentOrgID, processes).subscribe(res => {\n        this.router.navigate(['/source/process/page']);\n      });\n    }\n  }\n  CreateComponent.ɵfac = function CreateComponent_Factory(t) {\n    return new (t || CreateComponent)(i0.ɵɵdirectiveInject(i1.StorageService), i0.ɵɵdirectiveInject(i2.Router), i0.ɵɵdirectiveInject(i3.FormBuilder), i0.ɵɵdirectiveInject(i4.ProductAndServiceService), i0.ɵɵdirectiveInject(i5.ToastrService), i0.ɵɵdirectiveInject(i6.FormService), i0.ɵɵdirectiveInject(i7.FuelController), i0.ɵɵdirectiveInject(i8.ProcessController), i0.ɵɵdirectiveInject(i9.CustomFuelController));\n  };\n  CreateComponent.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n    type: CreateComponent,\n    selectors: [[\"app-create\"]],\n    viewQuery: function CreateComponent_Query(rf, ctx) {\n      if (rf & 1) {\n        i0.ɵɵviewQuery(SharedComponent, 5);\n      }\n      if (rf & 2) {\n        let _t;\n        i0.ɵɵqueryRefresh(_t = i0.ɵɵloadQuery()) && (ctx.processList = _t);\n      }\n    },\n    decls: 14,\n    vars: 1,\n    consts: [[1, \"card\", \"main-card\", \"cardOverwrite\", \"h100\"], [1, \"headerContainer\"], [1, \"headerLeftContainer\"], [1, \"headerRightContainerInner\"], [1, \"pageTitle\"], [1, \"subTitle\"], [4, \"ngFor\", \"ngForOf\"], [1, \"centerAlign\", \"justify-content-end\", \"m-3\"], [\"type\", \"button\", 1, \"btn\", \"btn-link\", 3, \"click\"], [\"type\", \"button\", 1, \"btn\", \"btn-success\", \"ms-2\", 3, \"click\"], [3, \"id\", \"processFG\", \"isSubmitClicked\", \"products\", \"processes\", \"input\", \"output\", \"fuel\", \"standardFuel\", \"remove\", \"entitiyCreated\"]],\n    template: function CreateComponent_Template(rf, ctx) {\n      if (rf & 1) {\n        i0.ɵɵelementStart(0, \"div\", 0);\n        i0.ɵɵelementStart(1, \"div\", 1);\n        i0.ɵɵelementStart(2, \"div\", 2);\n        i0.ɵɵelementStart(3, \"div\", 3);\n        i0.ɵɵelementStart(4, \"div\", 4);\n        i0.ɵɵtext(5, \" Create processes \");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(6, \"div\", 5);\n        i0.ɵɵtext(7, \" Create multiple processes by mapping physical or chemical processes that are carried out to make this product. \");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementEnd();\n        i0.ɵɵtemplate(8, CreateComponent_ng_container_8_Template, 2, 9, \"ng-container\", 6);\n        i0.ɵɵelementStart(9, \"div\", 7);\n        i0.ɵɵelementStart(10, \"button\", 8);\n        i0.ɵɵlistener(\"click\", function CreateComponent_Template_button_click_10_listener() {\n          return ctx.createProcess();\n        });\n        i0.ɵɵtext(11, \" Add another Process \");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(12, \"button\", 9);\n        i0.ɵɵlistener(\"click\", function CreateComponent_Template_button_click_12_listener() {\n          return ctx.saveProcesses();\n        });\n        i0.ɵɵtext(13, \" Create \");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementEnd();\n      }\n      if (rf & 2) {\n        i0.ɵɵadvance(8);\n        i0.ɵɵproperty(\"ngForOf\", ctx.processFA.controls);\n      }\n    },\n    directives: [i10.NgForOf, i11.SharedComponent],\n    styles: [\".funnelFilterDD[_ngcontent-%COMP%]{width:0;height:0;overflow:hidden}  .fuel{position:absolute;z-index:-999;left:175px}  .mat-menu-panel{min-width:0!important;min-height:0!important}.fuelSelect[_ngcontent-%COMP%]{height:55px;background-color:transparent}.fuelSelectLabel[_ngcontent-%COMP%]{color:#000000de!important}.fuelSelectFormField[_ngcontent-%COMP%]{border:1.5px rgba(26,54,126,.125) solid}.fuelSelectErrorFormField[_ngcontent-%COMP%]{border:2px solid red!important}.fuelSelectError[_ngcontent-%COMP%]{font-size:10.5px;margin-top:3px;padding-left:3px}\"]\n  });\n  return CreateComponent;\n})();","map":null,"metadata":{},"sourceType":"module"}