{"ast":null,"code":"\"use strict\";\n\nvar __extends = this && this.__extends || function () {\n  var extendStatics = Object.setPrototypeOf || {\n    __proto__: []\n  } instanceof Array && function (d, b) {\n    d.__proto__ = b;\n  } || function (d, b) {\n    for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\n  };\n  return function (d, b) {\n    extendStatics(d, b);\n    function __() {\n      this.constructor = d;\n    }\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n  };\n}();\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nvar redux_1 = require(\"redux\");\nvar core_1 = require(\"@angular/core\");\nvar rxjs_1 = require(\"rxjs\");\nvar operators_1 = require(\"rxjs/operators\");\nvar ng_redux_1 = require(\"./ng-redux\");\nvar selectors_1 = require(\"./selectors\");\nvar assert_1 = require(\"../utils/assert\");\nvar sub_store_1 = require(\"./sub-store\");\nvar fractal_reducer_map_1 = require(\"./fractal-reducer-map\");\n/** @hidden */\nvar RootStore = /** @class */function (_super) {\n  __extends(RootStore, _super);\n  function RootStore(ngZone) {\n    var _this = _super.call(this) || this;\n    _this.ngZone = ngZone;\n    _this._store = undefined;\n    _this.configureStore = function (rootReducer, initState, middleware, enhancers) {\n      if (middleware === void 0) {\n        middleware = [];\n      }\n      if (enhancers === void 0) {\n        enhancers = [];\n      }\n      assert_1.assert(!_this._store, 'Store already configured!');\n      // Variable-arity compose in typescript FTW.\n      _this.setStore(redux_1.compose.apply(null, [redux_1.applyMiddleware.apply(void 0, middleware)].concat(enhancers))(redux_1.createStore)(fractal_reducer_map_1.enableFractalReducers(rootReducer), initState));\n    };\n    _this.provideStore = function (store) {\n      assert_1.assert(!_this._store, 'Store already configured!');\n      _this.setStore(store);\n    };\n    _this.getState = function () {\n      return _this._store.getState();\n    };\n    _this.subscribe = function (listener) {\n      return _this._store.subscribe(listener);\n    };\n    _this.replaceReducer = function (nextReducer) {\n      _this._store.replaceReducer(nextReducer);\n    };\n    _this.dispatch = function (action) {\n      assert_1.assert(!!_this._store, 'Dispatch failed: did you forget to configure your store? ' + 'https://github.com/angular-redux/@angular-redux/core/blob/master/' + 'README.md#quick-start');\n      if (!core_1.NgZone.isInAngularZone()) {\n        return _this.ngZone.run(function () {\n          return _this._store.dispatch(action);\n        });\n      } else {\n        return _this._store.dispatch(action);\n      }\n    };\n    _this.select = function (selector, comparator) {\n      return _this._store$.pipe(operators_1.distinctUntilChanged(), operators_1.map(selectors_1.resolveToFunctionSelector(selector)), operators_1.distinctUntilChanged(comparator));\n    };\n    _this.configureSubStore = function (basePath, localReducer) {\n      return new sub_store_1.SubStore(_this, basePath, localReducer);\n    };\n    _this.storeToObservable = function (store) {\n      return new rxjs_1.Observable(function (observer) {\n        observer.next(store.getState());\n        var unsubscribeFromRedux = store.subscribe(function () {\n          return observer.next(store.getState());\n        });\n        return function () {\n          unsubscribeFromRedux();\n          observer.complete();\n        };\n      });\n    };\n    ng_redux_1.NgRedux.instance = _this;\n    _this._store$ = new rxjs_1.BehaviorSubject(undefined).pipe(operators_1.filter(function (n) {\n      return n !== undefined;\n    }), operators_1.switchMap(function (observableStore) {\n      return observableStore;\n    })\n    // TODO: fix this? needing to explicitly cast this is wrong\n    );\n\n    return _this;\n  }\n  RootStore.prototype.setStore = function (store) {\n    this._store = store;\n    var storeServable = this.storeToObservable(store);\n    this._store$.next(storeServable);\n  };\n  return RootStore;\n}(ng_redux_1.NgRedux);\nexports.RootStore = RootStore;\n//# sourceMappingURL=root-store.js.map","map":null,"metadata":{},"sourceType":"script"}