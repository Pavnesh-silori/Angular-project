{"ast":null,"code":"import { __awaiter } from \"tslib\";\nimport { EventEmitter } from '@angular/core';\nimport { DataInputMethodKeyIDEnum } from '@carbon/enum/data-input-method.enum';\nimport { DataCollectionMethodKeyIDEnum } from '@carbon/enum/data-collection-method.enum';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/forms\";\nimport * as i2 from \"@carbon/service/data-collection-method.service\";\nimport * as i3 from \"@angular/common\";\nimport * as i4 from \"./total-amount/total-amount.component\";\nfunction CreateUpdateComponent_app_total_amount_0_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelement(0, \"app-total-amount\", 1);\n  }\n  if (rf & 2) {\n    const ctx_r0 = i0.ɵɵnextContext();\n    i0.ɵɵproperty(\"activityDataFG\", ctx_r0.activityDataFG)(\"activityConfig\", ctx_r0.activityConfig)(\"docFileList\", ctx_r0.docFileList)(\"defaultDataCollectionMethodID\", ctx_r0.defaultDataCollectionMethodID);\n  }\n}\nexport let CreateUpdateComponent = /*#__PURE__*/(() => {\n  class CreateUpdateComponent {\n    constructor(formBuilder, dataCollectionMethodService) {\n      this.formBuilder = formBuilder;\n      this.dataCollectionMethodService = dataCollectionMethodService;\n      this.DataInputMethodKeyIDEnum = DataInputMethodKeyIDEnum;\n      this.docFileList = [];\n      this.isUpdate = true;\n      this.validity = new EventEmitter();\n    }\n    ngOnInit() {\n      this.activityDataFG = this.formBuilder.group({\n        activityDataDetails: this.formBuilder.array([])\n      });\n      this.getDataCollectionMethod();\n    }\n    getDataCollectionMethod() {\n      return __awaiter(this, void 0, void 0, function* () {\n        let dataCollectionMethods = yield this.dataCollectionMethodService.getDataCollectionMethod();\n        let manual_entry = dataCollectionMethods.find(dcm => dcm.keyID == DataCollectionMethodKeyIDEnum.MANUAL_ENTRY);\n        this.defaultDataCollectionMethodID = manual_entry.dataCollectionMethodID;\n      });\n    }\n    getConfiguration(configuration) {\n      return __awaiter(this, void 0, void 0, function* () {\n        this.activityConfig = configuration;\n        if (this.activityConfig != null && this.activityConfig.activityConfigData.dataInputMethodStdID) {\n          this.dataInputMethoutStdKeyID = this.activityConfig.activityConfigData.dataInputMethodStdKeyID;\n          if (!this.isUpdate) {\n            let activityConfigSource = configuration.activityConfigSource;\n            this.docFileList = new Array(activityConfigSource[0].source.length).fill(null);\n          } else {\n            this.docFileList = new Array(1).fill(null);\n          }\n        }\n      });\n    }\n    isValidForm() {\n      if (this.activityDataFG.invalid) {\n        this.activityDataFG.markAllAsTouched();\n        console.log('invalid form -', this.activityDataFG);\n        return false;\n      }\n      this.activityData = {};\n      this.activityData = JSON.parse(JSON.stringify(this.activityDataFG.value.activityDataDetails));\n      return true;\n    }\n    activityDataValidity() {\n      this.activityDataFG.valueChanges.subscribe(() => this.validity.emit(!this.activityDataFG.invalid));\n    }\n    getActivityData() {\n      return {\n        'activityData': this.activityData,\n        'activityDataFile': this.docFileList\n      };\n    }\n    updateActivityData() {\n      return this.activityData[0];\n    }\n  }\n  CreateUpdateComponent.ɵfac = function CreateUpdateComponent_Factory(t) {\n    return new (t || CreateUpdateComponent)(i0.ɵɵdirectiveInject(i1.FormBuilder), i0.ɵɵdirectiveInject(i2.DataCollectionMethodService));\n  };\n  CreateUpdateComponent.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n    type: CreateUpdateComponent,\n    selectors: [[\"app-create\"]],\n    decls: 1,\n    vars: 1,\n    consts: [[3, \"activityDataFG\", \"activityConfig\", \"docFileList\", \"defaultDataCollectionMethodID\", 4, \"ngIf\"], [3, \"activityDataFG\", \"activityConfig\", \"docFileList\", \"defaultDataCollectionMethodID\"]],\n    template: function CreateUpdateComponent_Template(rf, ctx) {\n      if (rf & 1) {\n        i0.ɵɵtemplate(0, CreateUpdateComponent_app_total_amount_0_Template, 1, 4, \"app-total-amount\", 0);\n      }\n      if (rf & 2) {\n        i0.ɵɵproperty(\"ngIf\", ctx.dataInputMethoutStdKeyID == ctx.DataInputMethodKeyIDEnum.TOTAL_AMOUNT);\n      }\n    },\n    directives: [i3.NgIf, i4.TotalAmountComponent],\n    encapsulation: 2\n  });\n  return CreateUpdateComponent;\n})();","map":null,"metadata":{},"sourceType":"module"}