{"ast":null,"code":"import { FormControl, Validators } from '@angular/forms';\nimport { MAT_DIALOG_DATA } from '@angular/material/dialog';\nimport { ToastrColor, ToastrTitle } from '@library/toastr-service';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/material/dialog\";\nimport * as i2 from \"@carbon/controller/spend-based.controller\";\nimport * as i3 from \"@library/toastr-service\";\nimport * as i4 from \"@angular/material/radio\";\nimport * as i5 from \"@angular/forms\";\nimport * as i6 from \"@angular/material/checkbox\";\nexport let CategorizeRecordDialogComponent = /*#__PURE__*/(() => {\n  class CategorizeRecordDialogComponent {\n    constructor(dialogRef, data, spendBasedController, toasterService) {\n      this.dialogRef = dialogRef;\n      this.data = data;\n      this.spendBasedController = spendBasedController;\n      this.toasterService = toasterService;\n      this.orgID = '';\n      this.recordID = '';\n      this.categoryStdID = '';\n      this.activityStdID = '';\n      this.rememberChoice = false;\n      this.selectedCategoryFC = new FormControl('', Validators.required);\n      this.rememberPreferenceFC = new FormControl(false);\n      this.orgID = data['orgID'];\n      this.recordID = data['recordID'];\n      this.categoryStdID = data['categoryStdID'];\n      this.activityStdID = data['activityStdID'];\n    }\n    ngOnInit() {\n      this.getUserPrefrenceCategory();\n      this.rememberPreferenceFC.valueChanges.subscribe(enabled => {\n        this.rememberChoice = enabled;\n      });\n    }\n    getUserPrefrenceCategory() {\n      this.spendBasedController.getUserPrefrenceCategory(this.orgID, this.recordID).subscribe(getCategoryRes => {\n        this.selectedCategoryFC.patchValue(getCategoryRes['recordKey']);\n        this.rememberPreferenceFC.patchValue(getCategoryRes['rememberPreference']);\n      }, error => {\n        console.log('Error in getUserPrefrenceCategory -', error);\n        this.toasterService.openToast(ToastrTitle.ERROR, 'Error in getting user preference category', ToastrColor.ERROR);\n      });\n    }\n    saveUserPrefrenceCategory() {\n      if (this.rememberChoice == true) {\n        this.toasterService.openToast(ToastrTitle.INFO, 'Records will be categorized for future records.', ToastrColor.INFO);\n      }\n      let preferenceData = {\n        recordID: this.recordID,\n        categoryStdID: this.categoryStdID,\n        activityStdID: this.activityStdID,\n        recordKey: this.selectedCategoryFC.value,\n        rememberPreference: this.rememberChoice\n      };\n      this.spendBasedController.saveUserPrefrenceCategory(this.orgID, preferenceData).subscribe(savedCategoryRes => {\n        this.toasterService.openToast(savedCategoryRes['title'], savedCategoryRes['message'], savedCategoryRes['result']);\n        this.dialogRef.close({\n          result: 'userPreferenceCategorySaved',\n          preferenceCategory: this.selectedCategoryFC.value,\n          rememberChoice: this.rememberChoice\n        });\n      }, error => {\n        console.log('Error in saveUserPrefrenceCategory -', error);\n        this.toasterService.openToast(ToastrTitle.ERROR, 'Error in saving user preference category', ToastrColor.ERROR);\n      });\n    }\n  }\n  CategorizeRecordDialogComponent.ɵfac = function CategorizeRecordDialogComponent_Factory(t) {\n    return new (t || CategorizeRecordDialogComponent)(i0.ɵɵdirectiveInject(i1.MatDialogRef), i0.ɵɵdirectiveInject(MAT_DIALOG_DATA), i0.ɵɵdirectiveInject(i2.SpendBasedController), i0.ɵɵdirectiveInject(i3.ToastrService));\n  };\n  CategorizeRecordDialogComponent.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n    type: CategorizeRecordDialogComponent,\n    selectors: [[\"app-categorize-record-dialog\"]],\n    decls: 21,\n    vars: 3,\n    consts: [[1, \"row\"], [1, \"titleSentence\", \"fs-5\", \"fw-bold\"], [1, \"ps-5\", 3, \"formControl\"], [1, \"row\", \"my-2\"], [1, \"col-sm-7\", \"mt-2\"], [\"value\", \"account\", 1, \"radioBtnLabel\"], [\"value\", \"supplier\", 1, \"radioBtnLabel\"], [1, \"row\", \"mt-4\", \"ps-5\"], [1, \"col-sm-7\"], [1, \"text-dark\", 3, \"formControl\"], [1, \"justify-content-end\", \"centerAlignVertical\"], [\"type\", \"button\", \"mat-dialog-close\", \"\", 1, \"text\", \"btn\", \"btn-sm\", \"btn-secondary\", \"me-2\"], [\"type\", \"button\", 1, \"text\", \"btn\", \"btn-sm\", \"btn-success\", \"me-2\", 3, \"disabled\", \"click\"]],\n    template: function CategorizeRecordDialogComponent_Template(rf, ctx) {\n      if (rf & 1) {\n        i0.ɵɵelementStart(0, \"div\", 0);\n        i0.ɵɵelementStart(1, \"div\", 1);\n        i0.ɵɵtext(2, \" Auto-categorize all records with selected category and activity type that belongs to this- \");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(3, \"mat-radio-group\", 2);\n        i0.ɵɵelementStart(4, \"div\", 3);\n        i0.ɵɵelementStart(5, \"div\", 4);\n        i0.ɵɵelementStart(6, \"mat-radio-button\", 5);\n        i0.ɵɵtext(7, \" Account \");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(8, \"div\", 4);\n        i0.ɵɵelementStart(9, \"mat-radio-button\", 6);\n        i0.ɵɵtext(10, \" Supplier \");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(11, \"div\", 7);\n        i0.ɵɵelementStart(12, \"div\", 8);\n        i0.ɵɵelementStart(13, \"mat-checkbox\", 9);\n        i0.ɵɵtext(14, \" Remember my choice for future imports \");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(15, \"div\", 0);\n        i0.ɵɵelementStart(16, \"div\", 10);\n        i0.ɵɵelementStart(17, \"button\", 11);\n        i0.ɵɵtext(18, \"Cancel\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(19, \"button\", 12);\n        i0.ɵɵlistener(\"click\", function CategorizeRecordDialogComponent_Template_button_click_19_listener() {\n          return ctx.saveUserPrefrenceCategory();\n        });\n        i0.ɵɵtext(20, \"Save\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementEnd();\n      }\n      if (rf & 2) {\n        i0.ɵɵadvance(3);\n        i0.ɵɵproperty(\"formControl\", ctx.selectedCategoryFC);\n        i0.ɵɵadvance(10);\n        i0.ɵɵproperty(\"formControl\", ctx.rememberPreferenceFC);\n        i0.ɵɵadvance(6);\n        i0.ɵɵproperty(\"disabled\", ctx.selectedCategoryFC.invalid);\n      }\n    },\n    directives: [i4.MatRadioGroup, i5.NgControlStatus, i5.FormControlDirective, i4.MatRadioButton, i6.MatCheckbox, i1.MatDialogClose],\n    encapsulation: 2\n  });\n  return CategorizeRecordDialogComponent;\n})();","map":null,"metadata":{},"sourceType":"module"}