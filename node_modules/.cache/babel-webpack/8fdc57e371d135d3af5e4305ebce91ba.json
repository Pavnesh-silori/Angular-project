{"ast":null,"code":"import { RouterModule } from '@angular/router';\nimport { environment } from 'src/environments/environment';\nimport { PagePathEnum } from '@netzero/enum/page-path.enum';\nimport { ActivityKeyIDEnum } from '@carbon/enum/activity.enum';\nimport { LeftLayoutComponent } from '@netzero/layout/layout/left-layout/left-layout.component';\nimport { RightLayoutComponent } from '@netzero/layout/layout/right-layout/right-layout.component';\nimport { SuccessComponent } from '@netzero/component/authorization/success/success.component';\n// tsc-library\nimport { AuthGuard } from '@library/authentication-service';\nimport { ApplicationKeyID } from '@library/application-service';\nimport { AuthorizationComponent } from '@library/authorization';\nimport { OrgSiteAccessType, OrgTypeGuard } from '@library/organization-service';\nimport { LayoutOneComponent, StaticPageOneComponent, StaticPageTwoComponent, StaticPageThreeComponent, StaticPageOneJson, StaticPageThreeJson, VIEW_TYPE_ENUM } from '@library/tsc-common';\nimport { CARBON_RBAC_CONSTANT, RBACGuard, RBACJson } from '@library/rbac-service';\nimport { CARBON_FEATURE_CONSTANT, FeatureGuard, FeatureJson } from '@library/feature-service';\nimport { ExceptionPageJson } from '@carbon/constant/exception-page-json';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/router\";\n// /tsc-library/\nconst routes = [{\n  path: '',\n  redirectTo: PagePathEnum.NETZERO_APP_HOME_PAGE,\n  pathMatch: 'full'\n}, {\n  path: 'login',\n  component: AuthorizationComponent,\n  data: {\n    applicationKeyID: ApplicationKeyID.NETZERO_KEY_ID\n  }\n}, {\n  path: 'authorization/success',\n  component: SuccessComponent,\n  canActivate: [AuthGuard]\n}, {\n  path: '',\n  component: LeftLayoutComponent,\n  children: [{\n    path: 'water',\n    component: StaticPageThreeComponent,\n    data: {\n      appURL: environment.NETZERO_URL,\n      data: StaticPageThreeJson.featureNotConfigure\n    },\n    canActivate: [AuthGuard]\n  }, {\n    path: 'energy',\n    component: StaticPageThreeComponent,\n    data: {\n      appURL: environment.NETZERO_URL,\n      data: StaticPageThreeJson.featureNotConfigure\n    },\n    canActivate: [AuthGuard]\n  }, {\n    path: 'waste',\n    component: StaticPageThreeComponent,\n    data: {\n      appURL: environment.NETZERO_URL,\n      data: StaticPageThreeJson.featureNotConfigure\n    },\n    canActivate: [AuthGuard]\n  }, {\n    path: 'enviro',\n    component: StaticPageThreeComponent,\n    data: {\n      appURL: environment.NETZERO_URL,\n      data: StaticPageThreeJson.featureNotConfigure\n    },\n    canActivate: [AuthGuard]\n  }, {\n    path: 'dashboard',\n    children: [{\n      path: 'netzero',\n      loadChildren: () => import('@netzero/component/dashboard/dashboard.module').then(m => m.DashboardModule),\n      canActivate: [AuthGuard],\n      data: {\n        appURL: environment.NETZERO_URL\n      }\n    }, {\n      path: 'carbon',\n      loadChildren: () => import('@carbon/component/dashboard/dashboard.module').then(m => m.DashboardModule),\n      canActivate: [AuthGuard],\n      data: {\n        appURL: environment.NETZERO_URL\n      }\n    }, {\n      path: 'water/footprint',\n      component: StaticPageThreeComponent,\n      canActivate: [AuthGuard],\n      data: {\n        appURL: environment.NETZERO_URL,\n        data: StaticPageThreeJson.featureNotConfigure\n      }\n    }, {\n      path: 'energy/footprint',\n      component: StaticPageThreeComponent,\n      canActivate: [AuthGuard],\n      data: {\n        appURL: environment.NETZERO_URL,\n        data: StaticPageThreeJson.featureNotConfigure\n      }\n    }, {\n      path: 'waste/footprint',\n      component: StaticPageThreeComponent,\n      canActivate: [AuthGuard],\n      data: {\n        appURL: environment.NETZERO_URL,\n        data: StaticPageThreeJson.featureNotConfigure\n      }\n    }, {\n      path: 'enviro/footprint',\n      component: StaticPageThreeComponent,\n      canActivate: [AuthGuard],\n      data: {\n        appURL: environment.NETZERO_URL,\n        data: StaticPageThreeJson.featureNotConfigure\n      }\n    }]\n  }, {\n    path: 'sustainability-accounting',\n    loadChildren: () => import('@carbon/component/sustainability-accounting/sustainability-accounting.module').then(m => m.SustainabilityAccountingModule),\n    canActivate: [AuthGuard],\n    data: {\n      appURL: environment.NETZERO_URL\n    }\n  }, {\n    path: 'cbam',\n    loadChildren: () => import('@carbon/component/cbam/cbam.module').then(m => m.CbamModule),\n    data: {\n      appURL: environment.NETZERO_URL\n    },\n    canActivate: [AuthGuard]\n  }, {\n    path: 'activity-data',\n    loadChildren: () => import('@carbon/component/activity-data/activity-data.module').then(m => m.ActivityDataModule),\n    canActivate: [AuthGuard]\n  }, {\n    path: 'reporting-framework',\n    loadChildren: () => import('@report-framework/component/tab/tab.module').then(m => m.TabModule)\n  }, {\n    path: 'report',\n    loadChildren: () => import('@carbon/component/report/report.module').then(m => m.ReportModule),\n    canActivate: [AuthGuard]\n  }, {\n    path: 'fugitive-emission-racfs',\n    loadChildren: () => import('@carbon/component/activity-data/ghg/scope-1/fugitive-emission/refrigeration-air-conditioning-fire-suppression/refrigeration-air-conditioning-fire-suppression.module').then(m => m.RefrigerationAirConditioningFireSuppressionModule),\n    data: {\n      appURL: environment.NETZERO_URL\n    },\n    canActivate: [AuthGuard]\n  }, {\n    path: 'fugitive-release-list',\n    loadChildren: () => import('@carbon/component/activity-data/ghg/scope-1/fugitive-emission/other-fugitive-sources/other-sources/fugitive-release/fugitive-release.module').then(m => m.FugitiveReleaseModule),\n    canActivate: [AuthGuard]\n  }, {\n    path: 'product-manufacturer',\n    loadChildren: () => import('@carbon/component/activity-data/ghg/scope-1/fugitive-emission/product-manufacturer/product-manufacturer-tab.module').then(m => m.ProductManufacturerTabModule),\n    canActivate: [AuthGuard]\n  }, {\n    path: 'subsidiary',\n    loadChildren: () => import('@carbon/component/subsidiary/subsidiary.module').then(m => m.SubsidiaryModule),\n    canActivate: [AuthGuard, OrgTypeGuard],\n    data: {\n      appURL: environment.NETZERO_URL,\n      orgTypeAccess: OrgSiteAccessType.ORG\n    }\n  }, {\n    path: 'target',\n    children: [{\n      path: '',\n      loadChildren: () => import('@carbon/component/sbti/sbti.module').then(m => m.SbtiModule),\n      data: {\n        applicationKeyID: ApplicationKeyID.NETZERO_KEY_ID,\n        appURL: environment.NETZERO_URL,\n        orgSwitchRedirect: 'YES',\n        orgTypeAccess: OrgSiteAccessType.ORG,\n        resourcePermission: [CARBON_RBAC_CONSTANT.TARGET_READ],\n        featureKeyID: CARBON_FEATURE_CONSTANT.TARGET\n      },\n      canActivate: [AuthGuard, RBACGuard, FeatureGuard, OrgTypeGuard]\n    }, {\n      path: 'forecast',\n      component: StaticPageThreeComponent,\n      data: {\n        appURL: environment.NETZERO_URL,\n        data: StaticPageThreeJson.featureNotConfigure\n      },\n      canActivate: [AuthGuard]\n    }, {\n      path: 'anomaly-detector',\n      component: StaticPageThreeComponent,\n      data: {\n        appURL: environment.NETZERO_URL,\n        data: StaticPageThreeJson.featureNotConfigure\n      },\n      canActivate: [AuthGuard]\n    }]\n  }, {\n    path: 'reminder',\n    loadChildren: () => import('@netzero/component/reminders/reminders.module').then(m => m.RemindersModule),\n    data: {\n      appURL: environment.NETZERO_URL,\n      orgSwitchRedirect: 'YES'\n    },\n    canActivate: [AuthGuard]\n  }]\n}, {\n  path: '',\n  component: RightLayoutComponent,\n  children: [{\n    path: 'faq',\n    loadChildren: () => import('@carbon/component/faq/faq.module').then(m => m.FaqModule),\n    data: {\n      appURL: environment.NETZERO_URL\n    },\n    canActivate: [AuthGuard]\n  }, {\n    path: 'source',\n    loadChildren: () => import('@netzero/component/source/source.module').then(m => m.SourceModule),\n    data: {\n      appURL: environment.NETZERO_URL\n    },\n    canActivate: [AuthGuard]\n  }, {\n    path: 'target-setting',\n    loadChildren: () => import('@carbon/component/sbti/setting/setting.module').then(m => m.SettingModule),\n    canActivate: [AuthGuard]\n  }, {\n    path: 'carbon-setting',\n    children: [{\n      path: 'boundary-question',\n      loadChildren: () => import('@carbon/component/boundary-question/boundary-question.module').then(m => m.BoundaryQuestionModule),\n      canActivate: [AuthGuard]\n    }, {\n      path: 'activity',\n      loadChildren: () => import('@carbon/component/activity/activity.module').then(m => m.ActivityModule),\n      canActivate: [AuthGuard]\n    }, {\n      path: 'preference',\n      loadChildren: () => import('@carbon/component/preference/preference.module').then(m => m.PreferenceModule),\n      canActivate: [OrgTypeGuard],\n      data: {\n        orgTypeAccess: OrgSiteAccessType.ORG\n      }\n    }, {\n      path: 'activity-config',\n      loadChildren: () => import('@carbon/component/activity-config/activity-config.module').then(m => m.ActivityConfigModule),\n      data: {\n        viewType: VIEW_TYPE_ENUM.PAGE\n      }\n    }, {\n      path: 'activity-configurator',\n      loadChildren: () => import('@carbon/component/activity-data/ghg/scope-1/fugitive-emission/fugitive-configurator/activity-configurator/activity-configurator.module').then(m => m.ActivityConfiguratorModule)\n    }, {\n      path: 'activity-configurator/fugitive-configurator',\n      loadChildren: () => import('@carbon/component/activity-data/ghg/scope-1/fugitive-emission/fugitive-configurator/fugitive-emission-configurator/fugitive-emission-configurator.module').then(m => m.FugitiveEmissionConfiguratorModule)\n    }, {\n      path: 'structural-change',\n      loadChildren: () => import('@carbon/component/structural-change/structural-change.module').then(m => m.StructuralChangeModule)\n    }, {\n      path: 'factor-database',\n      loadChildren: () => import('@carbon/component/factor-database/factor-database.module').then(m => m.FactorDatabaseModule),\n      canActivate: [AuthGuard]\n    }, {\n      path: 'base-year',\n      loadChildren: () => import('@carbon/component/base-year/base-year.module').then(m => m.BaseYearModule)\n    }]\n  }, {\n    path: 'reporting-preference',\n    loadChildren: () => import('@report-framework/component/esg-reporting-tab/esg-reporting-tab.module').then(m => m.EsgReportingTabModule),\n    canActivate: [AuthGuard]\n  }]\n}, {\n  path: '',\n  component: LayoutOneComponent,\n  children: [{\n    path: 'no-authorization',\n    component: StaticPageTwoComponent,\n    data: {\n      data: RBACJson.noAuthorization\n    }\n  }, {\n    path: 'feature-not-available',\n    component: StaticPageTwoComponent,\n    data: {\n      data: FeatureJson.featureNotAvailable\n    }\n  }, {\n    path: 'no-access',\n    component: StaticPageOneComponent,\n    data: {\n      data: StaticPageOneJson.noAccess\n    }\n  }, {\n    path: 'page-not-found',\n    component: StaticPageOneComponent,\n    data: {\n      data: StaticPageOneJson.pageNotFound\n    }\n  }, {\n    path: 'link-expired',\n    component: StaticPageOneComponent,\n    data: {\n      data: StaticPageOneJson.linkExpired\n    }\n  }, {\n    path: 'external-subsidiary/emission-data',\n    loadChildren: () => import('@carbon/component/subsidiary-emission-data/parent-details/parent-details.module').then(m => m.ParentDetailsModule)\n  }, {\n    path: 'emission/submitted-successfully',\n    component: StaticPageOneComponent,\n    data: {\n      data: ExceptionPageJson.emissionSubmittedSuccessfully\n    }\n  }, {\n    path: `${ActivityKeyIDEnum.EMPLOYEE_COMMUTING}/survey/data`,\n    loadChildren: () => import('@carbon/component/activity-data/ghg/scope-3/employee-commuting/survey-data/create/create.module').then(m => m.CreateModule)\n  }, {\n    path: `${ActivityKeyIDEnum.EMPLOYEE_COMMUTING}/survey/data/submitted-successfully`,\n    component: StaticPageOneComponent,\n    data: {\n      data: ExceptionPageJson.employeeCommuteSurveySubmittedSuccessfully\n    }\n  }]\n}, {\n  path: '**',\n  redirectTo: PagePathEnum.NETZERO_APP_HOME_PAGE\n}];\nexport let AppRoutingModule = /*#__PURE__*/(() => {\n  class AppRoutingModule {}\n  AppRoutingModule.ɵfac = function AppRoutingModule_Factory(t) {\n    return new (t || AppRoutingModule)();\n  };\n  AppRoutingModule.ɵmod = /*@__PURE__*/i0.ɵɵdefineNgModule({\n    type: AppRoutingModule\n  });\n  AppRoutingModule.ɵinj = /*@__PURE__*/i0.ɵɵdefineInjector({\n    imports: [[RouterModule.forRoot(routes)], RouterModule]\n  });\n  return AppRoutingModule;\n})();","map":null,"metadata":{},"sourceType":"module"}