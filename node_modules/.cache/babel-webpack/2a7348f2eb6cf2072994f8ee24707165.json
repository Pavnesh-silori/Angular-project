{"ast":null,"code":"import { CARBON_CONSTANT } from '@carbon/constant/carbon.constant';\nimport { ActivityKeyIDEnum } from '@carbon/enum/activity.enum';\nimport * as i0 from \"@angular/core\";\nexport let ViewUtility = /*#__PURE__*/(() => {\n  class ViewUtility {\n    constructor() {}\n    haveValue(value) {\n      if (value != null && value >= 0) return true;\n      return false;\n    }\n    renderView(activityKeyID) {\n      if (activityKeyID == ActivityKeyIDEnum['PURCHASED_ELECTRICITY_KEY_ID'] || activityKeyID == ActivityKeyIDEnum['PURCHASED_COOLING_KEY_ID'] || activityKeyID == ActivityKeyIDEnum['PURCHASED_HEAT_STEAM_KEY_ID']) {\n        return CARBON_CONSTANT['SCOPE_2_VIEW'];\n      } else if (activityKeyID == ActivityKeyIDEnum['US_EEIO_KEY_ID'] || activityKeyID == ActivityKeyIDEnum['CAPITAL_GOODS_KEY_ID'] || activityKeyID == ActivityKeyIDEnum['BUSINESS_TRAVEL_KEY_ID'] || activityKeyID == ActivityKeyIDEnum['PURCHASED_GOODS_AND_SERVICES_KEY_ID'] || activityKeyID == ActivityKeyIDEnum['UPSTREAM_TRANSPORT_AND_DISTRIBUTION_KEY_ID'] || activityKeyID == ActivityKeyIDEnum['DOWNSTREAM_TRANSPORT_AND_DISTRIBUTION_KEY_ID']) {\n        return CARBON_CONSTANT['SCOPE_3_SPEND_BASED_VIEW'];\n      } else if (activityKeyID == ActivityKeyIDEnum['STATIONARY_COMBUSTION_KEY_ID']) {\n        return CARBON_CONSTANT['STATIONARY_COMBUSTION_VIEW'];\n      } else if (activityKeyID == ActivityKeyIDEnum['MOBILE_COMBUSTION_KEY_ID']) {\n        return CARBON_CONSTANT['MOBILE_COMBUSTION_VIEW'];\n      } else if (activityKeyID == ActivityKeyIDEnum['WASTE_GENERATED_IN_OPERATIONS_KEY_ID']) {\n        return CARBON_CONSTANT['WASTE_GENERATED_IN_OPERATIONS_VIEW'];\n      } else {\n        return null;\n      }\n    }\n  }\n  ViewUtility.ɵfac = function ViewUtility_Factory(t) {\n    return new (t || ViewUtility)();\n  };\n  ViewUtility.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n    token: ViewUtility,\n    factory: ViewUtility.ɵfac,\n    providedIn: 'root'\n  });\n  return ViewUtility;\n})();","map":null,"metadata":{},"sourceType":"module"}