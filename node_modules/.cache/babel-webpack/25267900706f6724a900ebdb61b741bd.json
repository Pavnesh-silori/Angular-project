{"ast":null,"code":"import { __awaiter } from \"tslib\";\nimport { EventEmitter } from '@angular/core';\nimport { FormControl, Validators } from '@angular/forms';\nimport { isEqual } from 'lodash';\nimport { DataEntryMethod } from '@carbon/enum/data-entry-mehtod.enum';\nimport { DataEstimationMethod } from '@carbon/enum/data-estimation-mehtod.enum';\nimport { DataInputMethod } from '@carbon/enum/data-input-method.enum';\nimport { UnitTypeEnum } from '@carbon/enum/unit-type.enum';\nimport { SupplierTypeKeyIDEnum } from '@netzero/enum/supplier.enum';\nimport { MatSelectSearchService, MaterialFormFieldAppearance } from '@library/tsc-common';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@library/storage-service\";\nimport * as i2 from \"@angular/router\";\nimport * as i3 from \"@angular/forms\";\nimport * as i4 from \"@library/unit-service\";\nimport * as i5 from \"@carbon/service/data-input-method.service\";\nimport * as i6 from \"@netzero/controller/supplier.controller\";\nimport * as i7 from \"@carbon/controller/contractual-instrument.controller\";\nimport * as i8 from \"@angular/material/card\";\nimport * as i9 from \"@angular/common\";\nimport * as i10 from \"@angular/material/form-field\";\nimport * as i11 from \"@angular/material/select\";\nimport * as i12 from \"@angular/material/core\";\nimport * as i13 from \"ngx-mat-select-search\";\nimport * as i14 from \"@angular/material/radio\";\nimport * as i15 from \"@angular/material/checkbox\";\nimport * as i16 from \"@angular/material/input\";\nfunction CreateComponent_mat_checkbox_1_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"mat-checkbox\", 28);\n    i0.ɵɵelementStart(1, \"div\", 29);\n    i0.ɵɵtext(2, \" Do you want to save it as activity form? \");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const ctx_r0 = i0.ɵɵnextContext();\n    i0.ɵɵproperty(\"formControl\", ctx_r0.saveAsPffFC);\n  }\n}\nfunction CreateComponent_div_6_mat_error_5_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"mat-error\");\n    i0.ɵɵtext(1, \" Activity form name is mandatory \");\n    i0.ɵɵelementEnd();\n  }\n}\nfunction CreateComponent_div_6_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\", 30);\n    i0.ɵɵelementStart(1, \"mat-form-field\", 7);\n    i0.ɵɵelementStart(2, \"mat-label\", 8);\n    i0.ɵɵtext(3, \"Activity form name\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelement(4, \"input\", 31);\n    i0.ɵɵtemplate(5, CreateComponent_div_6_mat_error_5_Template, 2, 0, \"mat-error\", 12);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const ctx_r1 = i0.ɵɵnextContext();\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"appearance\", ctx_r1.MaterialFormFieldAppearance.FORM_FIELD_APPEARANCE);\n    i0.ɵɵadvance(4);\n    i0.ɵɵproperty(\"ngIf\", ctx_r1.errorHandling(\"configName\", \"required\"));\n  }\n}\nfunction CreateComponent_mat_option_14_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"mat-option\", 32);\n    i0.ɵɵtext(1);\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const suppliers_r13 = ctx.$implicit;\n    i0.ɵɵproperty(\"value\", suppliers_r13[\"supplierID\"]);\n    i0.ɵɵadvance(1);\n    i0.ɵɵtextInterpolate1(\" \", suppliers_r13[\"supplierName\"], \" \");\n  }\n}\nfunction CreateComponent_mat_error_16_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"mat-error\");\n    i0.ɵɵtext(1, \" Select a supplier \");\n    i0.ɵɵelementEnd();\n  }\n}\nfunction CreateComponent_div_17_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\", 33);\n    i0.ɵɵelementStart(1, \"span\", 34);\n    i0.ɵɵtext(2, \" info \");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(3, \"span\", 35);\n    i0.ɵɵtext(4, \" You have not created any supplier. Please create one \");\n    i0.ɵɵelementStart(5, \"a\", 36);\n    i0.ɵɵtext(6, \"here\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵtext(7, \". \");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    i0.ɵɵadvance(5);\n    i0.ɵɵproperty(\"routerLink\", \"/source/supplier/page\");\n  }\n}\nfunction CreateComponent_mat_error_32_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"mat-error\", 37);\n    i0.ɵɵtext(1, \" Select an option \");\n    i0.ɵɵelementEnd();\n  }\n}\nfunction CreateComponent_div_33_mat_option_8_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"mat-option\", 32);\n    i0.ɵɵtext(1);\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const contractualInstruments_r16 = ctx.$implicit;\n    i0.ɵɵproperty(\"value\", contractualInstruments_r16[\"id\"]);\n    i0.ɵɵadvance(1);\n    i0.ɵɵtextInterpolate1(\" \", contractualInstruments_r16[\"name\"], \" \");\n  }\n}\nfunction CreateComponent_div_33_mat_error_10_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"mat-error\");\n    i0.ɵɵtext(1, \" Select an option \");\n    i0.ɵɵelementEnd();\n  }\n}\nfunction CreateComponent_div_33_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r18 = i0.ɵɵgetCurrentView();\n    i0.ɵɵelementStart(0, \"div\", 4);\n    i0.ɵɵelementStart(1, \"div\", 38);\n    i0.ɵɵelementStart(2, \"mat-form-field\", 7);\n    i0.ɵɵelementStart(3, \"mat-label\", 8);\n    i0.ɵɵtext(4, \"Select contractual instrument\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(5, \"mat-select\", 39);\n    i0.ɵɵelementStart(6, \"mat-option\");\n    i0.ɵɵelement(7, \"ngx-mat-select-search\", 40);\n    i0.ɵɵelementEnd();\n    i0.ɵɵtemplate(8, CreateComponent_div_33_mat_option_8_Template, 2, 2, \"mat-option\", 11);\n    i0.ɵɵpipe(9, \"async\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵtemplate(10, CreateComponent_div_33_mat_error_10_Template, 2, 0, \"mat-error\", 12);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(11, \"div\", 41);\n    i0.ɵɵelementStart(12, \"mat-form-field\", 7);\n    i0.ɵɵelementStart(13, \"mat-label\", 8);\n    i0.ɵɵtext(14, \" Percentage \");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(15, \"input\", 42);\n    i0.ɵɵlistener(\"blur\", function CreateComponent_div_33_Template_input_blur_15_listener() {\n      i0.ɵɵrestoreView(_r18);\n      const ctx_r17 = i0.ɵɵnextContext();\n      return ctx_r17.checkValue();\n    });\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(16, \"span\", 43);\n    i0.ɵɵtext(17, \"% renewable\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(18, \"mat-error\");\n    i0.ɵɵtext(19, \" Invalid value \");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const ctx_r6 = i0.ɵɵnextContext();\n    i0.ɵɵadvance(2);\n    i0.ɵɵproperty(\"appearance\", ctx_r6.MaterialFormFieldAppearance.FORM_FIELD_APPEARANCE);\n    i0.ɵɵadvance(5);\n    i0.ɵɵproperty(\"formControl\", ctx_r6.contInst.filterFC);\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngForOf\", i0.ɵɵpipeBind1(9, 5, ctx_r6.contInst.filteredEntities));\n    i0.ɵɵadvance(2);\n    i0.ɵɵproperty(\"ngIf\", ctx_r6.errorHandlingACD(\"contractualInstrumentID\", \"required\"));\n    i0.ɵɵadvance(2);\n    i0.ɵɵproperty(\"appearance\", ctx_r6.MaterialFormFieldAppearance.FORM_FIELD_APPEARANCE);\n  }\n}\nfunction CreateComponent_div_36_mat_error_11_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"mat-error\", 37);\n    i0.ɵɵtext(1, \" Select how you want to report your electricity consumption \");\n    i0.ɵɵelementEnd();\n  }\n}\nfunction CreateComponent_div_36_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r21 = i0.ɵɵgetCurrentView();\n    i0.ɵɵelementStart(0, \"div\", 16);\n    i0.ɵɵelementStart(1, \"div\", 17);\n    i0.ɵɵtext(2, \" Do you know your energy consumption? \");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(3, \"mat-radio-group\", 44);\n    i0.ɵɵlistener(\"change\", function CreateComponent_div_36_Template_mat_radio_group_change_3_listener($event) {\n      i0.ɵɵrestoreView(_r21);\n      const ctx_r20 = i0.ɵɵnextContext();\n      return ctx_r20.knowsConsumptionChange($event.value);\n    });\n    i0.ɵɵelementStart(4, \"div\", 19);\n    i0.ɵɵelementStart(5, \"div\", 20);\n    i0.ɵɵelementStart(6, \"mat-radio-button\", 21);\n    i0.ɵɵtext(7, \" Yes \");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(8, \"div\", 20);\n    i0.ɵɵelementStart(9, \"mat-radio-button\", 21);\n    i0.ɵɵtext(10, \" No, use an estimation method \");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementEnd();\n    i0.ɵɵtemplate(11, CreateComponent_div_36_mat_error_11_Template, 2, 0, \"mat-error\", 22);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const ctx_r7 = i0.ɵɵnextContext();\n    i0.ɵɵadvance(6);\n    i0.ɵɵproperty(\"value\", ctx_r7.YES);\n    i0.ɵɵadvance(3);\n    i0.ɵɵproperty(\"value\", ctx_r7.NO);\n    i0.ɵɵadvance(2);\n    i0.ɵɵproperty(\"ngIf\", ctx_r7.errorHandlingACD(\"knowsEnergyConsumption\", \"required\") && ctx_r7.knowsEnergyConsumptionAC.touched);\n  }\n}\nfunction CreateComponent_div_37_div_6_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r26 = i0.ɵɵgetCurrentView();\n    i0.ɵɵelementStart(0, \"div\", 20);\n    i0.ɵɵelementStart(1, \"mat-radio-button\", 48);\n    i0.ɵɵlistener(\"change\", function CreateComponent_div_37_div_6_Template_mat_radio_button_change_1_listener() {\n      const restoredCtx = i0.ɵɵrestoreView(_r26);\n      const dataEntryMethods_r24 = restoredCtx.$implicit;\n      const ctx_r25 = i0.ɵɵnextContext(2);\n      return ctx_r25.dataEntryMethodChange(dataEntryMethods_r24[\"keyID\"]);\n    });\n    i0.ɵɵtext(2);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const dataEntryMethods_r24 = ctx.$implicit;\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"value\", dataEntryMethods_r24[\"id\"]);\n    i0.ɵɵadvance(1);\n    i0.ɵɵtextInterpolate1(\" \", dataEntryMethods_r24[\"name\"], \" \");\n  }\n}\nfunction CreateComponent_div_37_mat_error_7_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"mat-error\", 37);\n    i0.ɵɵtext(1, \" Select how you want to enter data \");\n    i0.ɵɵelementEnd();\n  }\n}\nfunction CreateComponent_div_37_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\", 45);\n    i0.ɵɵelementStart(1, \"div\", 16);\n    i0.ɵɵelementStart(2, \"div\", 17);\n    i0.ɵɵtext(3, \" Enter data using \");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(4, \"mat-radio-group\", 46);\n    i0.ɵɵelementStart(5, \"div\", 19);\n    i0.ɵɵtemplate(6, CreateComponent_div_37_div_6_Template, 3, 2, \"div\", 47);\n    i0.ɵɵtemplate(7, CreateComponent_div_37_mat_error_7_Template, 2, 0, \"mat-error\", 22);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const ctx_r8 = i0.ɵɵnextContext();\n    i0.ɵɵadvance(6);\n    i0.ɵɵproperty(\"ngForOf\", ctx_r8.dataEntryMethod);\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngIf\", ctx_r8.errorHandlingACD(\"dataInputMethodID\", \"required\") && ctx_r8.dataInputMethodIDAC.touched);\n  }\n}\nfunction CreateComponent_div_38_mat_error_6_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"mat-error\");\n    i0.ɵɵtext(1, \" Enter a meter rollover value \");\n    i0.ɵɵelementEnd();\n  }\n}\nfunction CreateComponent_div_38_mat_error_7_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"mat-error\");\n    i0.ɵɵtext(1, \" Meter rollover value can not be negative \");\n    i0.ɵɵelementEnd();\n  }\n}\nfunction CreateComponent_div_38_mat_error_8_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"mat-error\");\n    i0.ɵɵtext(1, \" Rollover value cannot exceed 10 characters \");\n    i0.ɵɵelementEnd();\n  }\n}\nfunction CreateComponent_div_38_mat_option_16_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"mat-option\", 32);\n    i0.ɵɵelementStart(1, \"span\", 53);\n    i0.ɵɵtext(2);\n    i0.ɵɵelementStart(3, \"span\");\n    i0.ɵɵtext(4);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const units_r32 = ctx.$implicit;\n    i0.ɵɵproperty(\"value\", units_r32.id);\n    i0.ɵɵadvance(2);\n    i0.ɵɵtextInterpolate1(\" \", units_r32.name, \" - \");\n    i0.ɵɵadvance(2);\n    i0.ɵɵtextInterpolate(units_r32.uomCode);\n  }\n}\nfunction CreateComponent_div_38_mat_error_18_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"mat-error\");\n    i0.ɵɵtext(1, \" Select unit \");\n    i0.ɵɵelementEnd();\n  }\n}\nfunction CreateComponent_div_38_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\", 4);\n    i0.ɵɵelementStart(1, \"div\", 38);\n    i0.ɵɵelementStart(2, \"mat-form-field\", 7);\n    i0.ɵɵelementStart(3, \"mat-label\", 8);\n    i0.ɵɵtext(4, \" Meter rollover value \");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelement(5, \"input\", 49);\n    i0.ɵɵtemplate(6, CreateComponent_div_38_mat_error_6_Template, 2, 0, \"mat-error\", 12);\n    i0.ɵɵtemplate(7, CreateComponent_div_38_mat_error_7_Template, 2, 0, \"mat-error\", 12);\n    i0.ɵɵtemplate(8, CreateComponent_div_38_mat_error_8_Template, 2, 0, \"mat-error\", 12);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(9, \"div\", 50);\n    i0.ɵɵelementStart(10, \"mat-form-field\", 7);\n    i0.ɵɵelementStart(11, \"mat-label\", 8);\n    i0.ɵɵtext(12, \" Meter unit \");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(13, \"mat-select\", 51);\n    i0.ɵɵelementStart(14, \"mat-option\");\n    i0.ɵɵelement(15, \"ngx-mat-select-search\", 52);\n    i0.ɵɵelementEnd();\n    i0.ɵɵtemplate(16, CreateComponent_div_38_mat_option_16_Template, 5, 3, \"mat-option\", 11);\n    i0.ɵɵpipe(17, \"async\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵtemplate(18, CreateComponent_div_38_mat_error_18_Template, 2, 0, \"mat-error\", 12);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const ctx_r9 = i0.ɵɵnextContext();\n    i0.ɵɵadvance(2);\n    i0.ɵɵproperty(\"appearance\", ctx_r9.MaterialFormFieldAppearance.FORM_FIELD_APPEARANCE);\n    i0.ɵɵadvance(4);\n    i0.ɵɵproperty(\"ngIf\", ctx_r9.errorHandlingACD(\"meterRolloverValue\", \"required\"));\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngIf\", ctx_r9.errorHandlingACD(\"meterRolloverValue\", \"min\"));\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngIf\", ctx_r9.errorHandlingACD(\"meterRolloverValue\", \"max\"));\n    i0.ɵɵadvance(2);\n    i0.ɵɵproperty(\"appearance\", ctx_r9.MaterialFormFieldAppearance.FORM_FIELD_APPEARANCE);\n    i0.ɵɵadvance(5);\n    i0.ɵɵproperty(\"formControl\", ctx_r9.energyUnitSearchUtil.filterFC);\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngForOf\", i0.ɵɵpipeBind1(17, 8, ctx_r9.energyUnitSearchUtil.filteredEntities));\n    i0.ɵɵadvance(2);\n    i0.ɵɵproperty(\"ngIf\", ctx_r9.errorHandlingACD(\"meterReadingUnitID\", \"required\"));\n  }\n}\nfunction CreateComponent_div_39_div_6_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r37 = i0.ɵɵgetCurrentView();\n    i0.ɵɵelementStart(0, \"div\", 20);\n    i0.ɵɵelementStart(1, \"mat-radio-button\", 48);\n    i0.ɵɵlistener(\"change\", function CreateComponent_div_39_div_6_Template_mat_radio_button_change_1_listener() {\n      const restoredCtx = i0.ɵɵrestoreView(_r37);\n      const estimationMethods_r35 = restoredCtx.$implicit;\n      const ctx_r36 = i0.ɵɵnextContext(2);\n      return ctx_r36.estimationMethodChange(estimationMethods_r35[\"keyID\"]);\n    });\n    i0.ɵɵtext(2);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const estimationMethods_r35 = ctx.$implicit;\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"value\", estimationMethods_r35[\"id\"]);\n    i0.ɵɵadvance(1);\n    i0.ɵɵtextInterpolate1(\" \", estimationMethods_r35[\"name\"], \" \");\n  }\n}\nfunction CreateComponent_div_39_mat_error_7_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"mat-error\", 37);\n    i0.ɵɵtext(1, \" Select an energy estimation method \");\n    i0.ɵɵelementEnd();\n  }\n}\nfunction CreateComponent_div_39_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\", 45);\n    i0.ɵɵelementStart(1, \"div\", 16);\n    i0.ɵɵelementStart(2, \"div\", 17);\n    i0.ɵɵtext(3, \" Select estimation method \");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(4, \"mat-radio-group\", 46);\n    i0.ɵɵelementStart(5, \"div\", 19);\n    i0.ɵɵtemplate(6, CreateComponent_div_39_div_6_Template, 3, 2, \"div\", 47);\n    i0.ɵɵtemplate(7, CreateComponent_div_39_mat_error_7_Template, 2, 0, \"mat-error\", 22);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const ctx_r10 = i0.ɵɵnextContext();\n    i0.ɵɵadvance(6);\n    i0.ɵɵproperty(\"ngForOf\", ctx_r10.estimationMethod);\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngIf\", ctx_r10.errorHandlingACD(\"dataInputMethodID\", \"required\") && ctx_r10.dataInputMethodIDAC.touched);\n  }\n}\nfunction CreateComponent_div_40_mat_error_7_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"mat-error\");\n    i0.ɵɵtext(1, \" Area value is mandatory \");\n    i0.ɵɵelementEnd();\n  }\n}\nfunction CreateComponent_div_40_mat_error_8_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"mat-error\");\n    i0.ɵɵtext(1, \" Area value can not be negative \");\n    i0.ɵɵelementEnd();\n  }\n}\nfunction CreateComponent_div_40_mat_option_16_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"mat-option\", 32);\n    i0.ɵɵelementStart(1, \"span\", 53);\n    i0.ɵɵtext(2);\n    i0.ɵɵelementStart(3, \"span\");\n    i0.ɵɵtext(4);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const units_r42 = ctx.$implicit;\n    i0.ɵɵproperty(\"value\", units_r42.id);\n    i0.ɵɵadvance(2);\n    i0.ɵɵtextInterpolate1(\" \", units_r42.name, \" - \");\n    i0.ɵɵadvance(2);\n    i0.ɵɵtextInterpolate(units_r42.uomCode);\n  }\n}\nfunction CreateComponent_div_40_mat_error_18_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"mat-error\");\n    i0.ɵɵtext(1, \" Select unit \");\n    i0.ɵɵelementEnd();\n  }\n}\nfunction CreateComponent_div_40_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\", 54);\n    i0.ɵɵelementStart(1, \"div\", 4);\n    i0.ɵɵelementStart(2, \"div\", 54);\n    i0.ɵɵelementStart(3, \"mat-form-field\", 7);\n    i0.ɵɵelementStart(4, \"mat-label\", 8);\n    i0.ɵɵtext(5, \" Enter total facility area\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelement(6, \"input\", 55);\n    i0.ɵɵtemplate(7, CreateComponent_div_40_mat_error_7_Template, 2, 0, \"mat-error\", 12);\n    i0.ɵɵtemplate(8, CreateComponent_div_40_mat_error_8_Template, 2, 0, \"mat-error\", 12);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(9, \"div\", 56);\n    i0.ɵɵelementStart(10, \"mat-form-field\", 7);\n    i0.ɵɵelementStart(11, \"mat-label\", 8);\n    i0.ɵɵtext(12, \"Area unit\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(13, \"mat-select\", 57);\n    i0.ɵɵelementStart(14, \"mat-option\");\n    i0.ɵɵelement(15, \"ngx-mat-select-search\", 52);\n    i0.ɵɵelementEnd();\n    i0.ɵɵtemplate(16, CreateComponent_div_40_mat_option_16_Template, 5, 3, \"mat-option\", 11);\n    i0.ɵɵpipe(17, \"async\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵtemplate(18, CreateComponent_div_40_mat_error_18_Template, 2, 0, \"mat-error\", 12);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementEnd();\n  }\n  if (rf & 2) {\n    const ctx_r11 = i0.ɵɵnextContext();\n    i0.ɵɵadvance(3);\n    i0.ɵɵproperty(\"appearance\", ctx_r11.MaterialFormFieldAppearance.FORM_FIELD_APPEARANCE);\n    i0.ɵɵadvance(4);\n    i0.ɵɵproperty(\"ngIf\", ctx_r11.errorHandlingACD(\"facilityArea\", \"required\"));\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngIf\", ctx_r11.errorHandlingACD(\"facilityArea\", \"min\"));\n    i0.ɵɵadvance(2);\n    i0.ɵɵproperty(\"appearance\", ctx_r11.MaterialFormFieldAppearance.FORM_FIELD_APPEARANCE);\n    i0.ɵɵadvance(5);\n    i0.ɵɵproperty(\"formControl\", ctx_r11.areaUnitSearchUtil.filterFC);\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngForOf\", i0.ɵɵpipeBind1(17, 7, ctx_r11.areaUnitSearchUtil.filteredEntities));\n    i0.ɵɵadvance(2);\n    i0.ɵɵproperty(\"ngIf\", ctx_r11.errorHandlingACD(\"facilityAreaUnitID\", \"required\"));\n  }\n}\n/* tsc-library */\nexport let CreateComponent = /*#__PURE__*/(() => {\n  class CreateComponent {\n    constructor(storageService, activatedRoute, formBuilder, unitService, dataInputMethodService, supplierController, contractualInstrumentController) {\n      this.formBuilder = formBuilder;\n      this.unitService = unitService;\n      this.dataInputMethodService = dataInputMethodService;\n      this.supplierController = supplierController;\n      this.contractualInstrumentController = contractualInstrumentController;\n      this.DataEntryMethod = DataEntryMethod;\n      this.DataEstimationMethod = DataEstimationMethod;\n      this.MaterialFormFieldAppearance = MaterialFormFieldAppearance;\n      this.YES = 'YES';\n      this.NO = 'NO';\n      this.dataEntryMethod = [];\n      this.estimationMethod = [];\n      this.dataEntryMethodUsed = 'default';\n      this.estimationMethodUsed = 'default';\n      this.supplierSearchUtil = new MatSelectSearchService(['supplierName']);\n      /* contInst: CONTRACTUAL_INSTRUMENT */\n      this.contInst = new MatSelectSearchService(['name']);\n      this.configSearchUtil = new MatSelectSearchService(['configName']);\n      this.areaUnitSearchUtil = new MatSelectSearchService(['name']);\n      this.energyUnitSearchUtil = new MatSelectSearchService(['name']);\n      this.currencySearchUtil = new MatSelectSearchService(['currencyName']);\n      this.origin = 'default';\n      this.saveAsPffFC = new FormControl(false);\n      this.isEqual = new EventEmitter();\n      this.noSuppliers = false;\n      this.validity = new EventEmitter();\n      this.isValid = () => {\n        return !this.activityConfigFG.invalid;\n      };\n      this.errorHandling = (control, error) => {\n        return this.activityConfigAC.get(control).hasError(error);\n      };\n      /* ACTIVITY_CONFIG_DATA */\n      this.errorHandlingACD = (control, error) => {\n        return this.activityConfigDataAC.get(control).hasError(error);\n      };\n      /* ACTIVITY_CONFIG_SOURCE */\n      this.errorHandlingACS = (control, error) => {\n        return this.activityConfigSourceAC.get(control).hasError(error);\n      };\n      this.currentOrgID = storageService.getStorage(['currentOrgID']);\n      activatedRoute.queryParams.subscribe(queryParams => {\n        if (queryParams['activityID']) {\n          this.activityID = queryParams['activityID'];\n          this.activityKeyID = queryParams['activityKeyID'];\n        }\n        if (queryParams['origin']) {\n          this.origin = queryParams['origin'];\n          // if (queryParams['origin'] == 'ad-hoc') {\n          //     this.createSaveAsPFFControlSubscription();\n          // }\n        }\n      });\n    }\n\n    ngOnInit() {\n      this.formGroupInit();\n      this.getSupplierByType();\n    }\n    // createSaveAsPFFControlSubscription() {\n    // this.saveAsPffFC.valueChanges\n    //     .subscribe(enabled => {\n    //         if (enabled) {\n    //             this.configNameAC.enable();\n    //         } else {\n    //             this.configNameAC.reset();\n    //             this.configNameAC.disable();\n    //         }\n    //     });\n    // }\n    formGroupInit() {\n      this.activityConfigFG = this.formBuilder.group({\n        activityConfig: this.formBuilder.group({\n          activityID: this.activityID,\n          activityKeyID: this.activityKeyID,\n          configName: [, Validators.required],\n          reminderEnabled: [],\n          workflowEnabled: [],\n          apiEnabled: []\n        }),\n        activityConfigData: this.formBuilder.group({\n          energy: this.formBuilder.group({\n            isRenewable: [false],\n            percentage: [100]\n          }),\n          haveContractualInstrument: [, Validators.required],\n          contractualInstrumentID: [],\n          knowsEnergyConsumption: [],\n          dataInputMethodID: [],\n          meterRolloverValue: [],\n          meterReadingUnitID: [],\n          facilityArea: [],\n          facilityAreaUnitID: []\n        }),\n        activityConfigSource: this.formBuilder.group({\n          sourceTypeID: null,\n          sourceID: [, Validators.required]\n        })\n      });\n      if (this.origin == 'ad-hoc') {\n        this.configNameAC.disable();\n      }\n    }\n    get saveAdHocAsPff() {\n      return this.saveAsPffFC.value;\n    }\n    get activityConfigAC() {\n      return this.activityConfigFG.get('activityConfig');\n    }\n    get configNameAC() {\n      return this.activityConfigAC.get('configName');\n    }\n    get activityConfigDataAC() {\n      return this.activityConfigFG.get('activityConfigData');\n    }\n    get activityConfigSourceAC() {\n      return this.activityConfigFG.get('activityConfigSource');\n    }\n    get energyAC() {\n      return this.activityConfigDataAC.get('energy');\n    }\n    get haveContractualInstrumentAC() {\n      return this.activityConfigDataAC.get('haveContractualInstrument');\n    }\n    get knowsEnergyConsumptionAC() {\n      return this.activityConfigDataAC.get('knowsEnergyConsumption');\n    }\n    get dataInputMethodIDAC() {\n      return this.activityConfigDataAC.get('dataInputMethodID');\n    }\n    get activityConfigSourceFA() {\n      throw new Error('Method not implemented.');\n    }\n    addValidators(control, validators) {\n      this.activityConfigDataAC.get(control).addValidators(validators);\n      this.activityConfigDataAC.get(control).updateValueAndValidity();\n    }\n    resetAndClearControl(control, reset = null) {\n      this.activityConfigDataAC.get(control).reset(reset);\n      this.activityConfigDataAC.get(control).clearValidators();\n      this.activityConfigDataAC.get(control).updateValueAndValidity();\n    }\n    getSupplierByType() {\n      this.supplierController.getSupplierByType(this.currentOrgID, SupplierTypeKeyIDEnum.ENERGY_SUPPLIER).subscribe(supplierRes => {\n        if (supplierRes.length != 0) {\n          this.activityConfigSourceAC.get('sourceTypeID').patchValue(supplierRes[0]['sourceTypeID']);\n        } else {\n          this.noSuppliers = true;\n        }\n        this.supplierSearchUtil.entityArr = supplierRes;\n        this.supplierSearchUtil.createSubscription();\n      }, error => {\n        console.log('error in getSupplier() -', error);\n      });\n    }\n    getContractualInstrumentList() {\n      this.contractualInstrumentController.getContracturalInstrumentList().subscribe(contInstRes => {\n        this.contInst.entityArr = contInstRes;\n        this.contInst.createSubscription();\n      }, error => {\n        console.log('error in getContractualInstrumentList() -', error);\n      });\n    }\n    getDataInputMethodByActivityAndType(activityID, dataInputMethodType) {\n      return __awaiter(this, void 0, void 0, function* () {\n        let inputMethods = yield this.dataInputMethodService.getDataInputMethodByActivityAndType(activityID, dataInputMethodType);\n        if (dataInputMethodType == DataInputMethod.STANDARD) {\n          this.dataEntryMethod = inputMethods;\n        } else if (dataInputMethodType == DataInputMethod.ESTIMATION) {\n          this.estimationMethod = inputMethods;\n        }\n      });\n    }\n    getUnit(unitType) {\n      return __awaiter(this, void 0, void 0, function* () {\n        let unitFilter = [];\n        unitFilter = [`unitType:${unitType}`];\n        let units = yield this.unitService.getUnit(unitFilter);\n        if (unitType == UnitTypeEnum.AREA) {\n          this.areaUnitSearchUtil.entityArr = units;\n          this.areaUnitSearchUtil.createSubscription();\n        } else if (unitType == UnitTypeEnum.ENERGY) {\n          this.energyUnitSearchUtil.entityArr = units;\n          this.energyUnitSearchUtil.createSubscription();\n        }\n      });\n    }\n    contractualInstrumentChange(haveContInst) {\n      this.estimationMethodUsed = 'default';\n      this.dataEntryMethodUsed = 'default';\n      this.resetContractualInstrumentChildren();\n      if (haveContInst == this.YES) {\n        this.energyAC.get('isRenewable').patchValue(true);\n        this.addValidators('dataInputMethodID', Validators.required);\n        this.addValidators('contractualInstrumentID', Validators.required);\n        if (this.contInst.entityArr.length == 0) {\n          this.getContractualInstrumentList();\n        }\n        if (this.dataEntryMethod.length == 0) {\n          this.getDataInputMethodByActivityAndType(this.activityID, DataInputMethod.STANDARD);\n        }\n      } else {\n        this.energyAC.get('percentage').reset(100);\n        this.energyAC.get('isRenewable').patchValue(false);\n        this.addValidators('knowsEnergyConsumption', Validators.required);\n      }\n    }\n    resetContractualInstrumentChildren() {\n      this.resetAndClearControl('contractualInstrumentID');\n      this.resetAndClearControl('dataInputMethodID');\n      this.resetAndClearControl('knowsEnergyConsumption');\n      this.resetKnowsConsumptionChildren();\n    }\n    knowsConsumptionChange(knowsConsumption) {\n      this.dataEntryMethodUsed = 'default';\n      this.estimationMethodUsed = 'default';\n      this.resetKnowsConsumptionChildren();\n      if (knowsConsumption == this.NO) {\n        this.addValidators('dataInputMethodID', Validators.required);\n        if (this.estimationMethod.length == 0) {\n          this.getDataInputMethodByActivityAndType(this.activityID, DataInputMethod.ESTIMATION);\n        }\n      } else {\n        this.addValidators('dataInputMethodID', Validators.required);\n        if (this.dataEntryMethod.length == 0) {\n          this.getDataInputMethodByActivityAndType(this.activityID, DataInputMethod.STANDARD);\n        }\n      }\n    }\n    resetKnowsConsumptionChildren() {\n      this.resetAndClearControl('dataInputMethodID');\n      this.resetAndClearControl('meterRolloverValue');\n      this.resetAndClearControl('meterReadingUnitID');\n      this.resetAndClearControl('facilityArea');\n      this.resetAndClearControl('facilityAreaUnitID');\n    }\n    dataEntryMethodChange(dataInputMethodKeyID) {\n      this.dataEntryMethodUsed = dataInputMethodKeyID;\n      if (dataInputMethodKeyID == DataEntryMethod.METER_READING) {\n        this.addValidators('meterRolloverValue', Validators.required);\n        this.addValidators('meterReadingUnitID', Validators.required);\n        if (this.energyUnitSearchUtil.entityArr.length == 0) {\n          this.getUnit(UnitTypeEnum.ENERGY);\n        }\n      } else {\n        this.resetAndClearControl('meterRolloverValue');\n        this.resetAndClearControl('meterReadingUnitID');\n      }\n    }\n    estimationMethodChange(estimatedMethodKeyID) {\n      this.estimationMethodUsed = estimatedMethodKeyID;\n      if (estimatedMethodKeyID == DataEstimationMethod.AREA_BASED) {\n        this.addValidators('facilityArea', Validators.required);\n        this.addValidators('facilityAreaUnitID', Validators.required);\n        if (this.areaUnitSearchUtil.entityArr.length == 0) {\n          this.getUnit(UnitTypeEnum.AREA);\n        }\n      } else {\n        this.resetAndClearControl('facilityArea');\n        this.resetAndClearControl('facilityAreaUnitID');\n      }\n    }\n    checkValue() {\n      let finalValue = this.activityConfigDataAC.get('energy').get('percentage').value;\n      if (finalValue == null || finalValue == '') {\n        finalValue = 0;\n      }\n      this.activityConfigDataAC.get('energy').get('percentage').patchValue(finalValue);\n    }\n    patchConfiguration(configuration) {\n      this.activityConfigFG.valueChanges.subscribe(() => {\n        this.isEqual.next(isEqual(this.initialObject, this.activityConfigFG.getRawValue()));\n      });\n      let activityConfig = configuration['activityConfig'] != null ? configuration['activityConfig'] : null;\n      let activityConfigData = configuration['activityConfigData'];\n      let activityConfigSource = configuration['activityConfigSource'];\n      let energy = configuration['activityConfigData']['energy'];\n      if (activityConfig != null) {\n        this.activityConfigAC.patchValue({\n          configName: activityConfig['configName']\n        });\n      } else {\n        this.readOnlyForm();\n      }\n      this.activityConfigSourceAC.patchValue({\n        sourceID: activityConfigSource['sourceID'][0],\n        sourceTypeID: activityConfigSource['sourceTypeID']\n      });\n      this.activityConfigDataAC.patchValue({\n        energy: {\n          isRenewable: energy['isRenewable'],\n          percentage: energy['percentage']\n        },\n        haveContractualInstrument: activityConfigData['haveContractualInstrument']\n      });\n      this.contractualInstrumentChange(activityConfigData['haveContractualInstrument']);\n      if (activityConfigData['haveContractualInstrument'] == this.YES) {\n        this.activityConfigDataAC.patchValue({\n          contractualInstrumentID: activityConfigData['contractualInstrumentID'],\n          dataInputMethodID: activityConfigData['dataInputMethodID']\n        });\n        if (activityConfigData['dataInputMethodKeyID'] == DataEntryMethod.METER_READING) {\n          this.dataEntryMethodChange(activityConfigData['dataInputMethodKeyID']);\n          if (activityConfigData['dataInputMethodKeyID'] == DataEntryMethod.METER_READING) {\n            this.activityConfigDataAC.patchValue({\n              meterRolloverValue: activityConfigData['meterRolloverValue'],\n              meterReadingUnitID: activityConfigData['meterReadingUnitID']\n            });\n          }\n        }\n      } else {\n        this.knowsConsumptionChange(activityConfigData['knowsEnergyConsumption']);\n        this.activityConfigDataAC.patchValue({\n          knowsEnergyConsumption: activityConfigData['knowsEnergyConsumption']\n        });\n        if (activityConfigData['knowsEnergyConsumption'] == this.YES) {\n          this.activityConfigDataAC.patchValue({\n            dataInputMethodID: activityConfigData['dataInputMethodID']\n          });\n          this.dataEntryMethodChange(activityConfigData['dataInputMethodKeyID']);\n          if (activityConfigData['dataInputMethodKeyID'] == DataEntryMethod.METER_READING) {\n            this.activityConfigDataAC.patchValue({\n              meterRolloverValue: activityConfigData['meterRolloverValue'],\n              meterReadingUnitID: activityConfigData['meterReadingUnitID']\n            });\n          }\n        } else {\n          this.estimationMethodUsed = activityConfigData['dataInputMethodKeyID'];\n          this.activityConfigDataAC.patchValue({\n            dataInputMethodID: activityConfigData['dataInputMethodID']\n          });\n          if (activityConfigData['dataInputMethodKeyID'] == DataEstimationMethod.AREA_BASED) {\n            this.addValidators('facilityArea', Validators.required);\n            this.addValidators('facilityAreaUnitID', Validators.required);\n            this.getUnit(UnitTypeEnum.AREA);\n            this.activityConfigDataAC.patchValue({\n              facilityArea: activityConfigData['facilityArea'],\n              facilityAreaUnitID: activityConfigData['facilityAreaUnitID']\n            });\n          }\n        }\n        // if (activityConfig.linkedRecordCount > 0) {\n        //     this.activityConfigSourceAC.disable();\n        //     this.activityConfigDataAC.disable();\n        // }\n      }\n\n      this.isEqual.next(true);\n      this.initialObject = this.activityConfigFG.value;\n    }\n    activityConfigValidity() {\n      this.activityConfigFG.valueChanges.subscribe(() => this.validity.emit(!this.activityConfigFG.invalid));\n    }\n    get getConfigJson() {\n      this.configuration = {};\n      this.configuration = JSON.parse(JSON.stringify(this.activityConfigFG.value));\n      this.configuration['activityConfigSource']['sourceID'] = [this.configuration['activityConfigSource']['sourceID']];\n      return this.configuration;\n    }\n    isValidForm() {\n      if (this.activityConfigFG.invalid) {\n        this.activityConfigFG.markAllAsTouched();\n        console.log('invalid form -', this.activityConfigFG);\n        return false;\n      }\n      this.configuration = {};\n      this.configuration = JSON.parse(JSON.stringify(this.activityConfigFG.getRawValue()));\n      this.configuration['activityConfigSource']['sourceID'] = [this.configuration['activityConfigSource']['sourceID']];\n      return true;\n    }\n    readOnlyForm() {\n      this.activityConfigFG.disable();\n    }\n  }\n  CreateComponent.ɵfac = function CreateComponent_Factory(t) {\n    return new (t || CreateComponent)(i0.ɵɵdirectiveInject(i1.StorageService), i0.ɵɵdirectiveInject(i2.ActivatedRoute), i0.ɵɵdirectiveInject(i3.FormBuilder), i0.ɵɵdirectiveInject(i4.UnitService), i0.ɵɵdirectiveInject(i5.DataInputMethodService), i0.ɵɵdirectiveInject(i6.SupplierController), i0.ɵɵdirectiveInject(i7.ContractualInstrumentController));\n  };\n  CreateComponent.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n    type: CreateComponent,\n    selectors: [[\"pff-purchased-energy\"]],\n    outputs: {\n      isEqual: \"isEqual\"\n    },\n    decls: 41,\n    vars: 19,\n    consts: [[1, \"cardOverwrite\", \"border\"], [3, \"formControl\", 4, \"ngIf\"], [1, \"cardTitle\", \"pb-2\"], [3, \"formGroup\"], [1, \"row\"], [\"formGroupName\", \"activityConfig\", \"class\", \"col-sm-8\", 4, \"ngIf\"], [\"formGroupName\", \"activityConfigSource\", 1, \"col-sm-8\"], [1, \"matFieldWidth100\", 3, \"appearance\"], [1, \"formLabel\"], [\"formControlName\", \"sourceID\"], [\"placeholderLabel\", \"Search by supplier name\", \"noEntriesFoundLabel\", \"No matching supplier found.\", 3, \"formControl\"], [3, \"value\", 4, \"ngFor\", \"ngForOf\"], [4, \"ngIf\"], [\"class\", \"col-sm-4 centerAlignVertical mb-3\", 4, \"ngIf\"], [\"formGroupName\", \"activityConfigData\"], [1, \"col-sm-10\"], [1, \"ps-1\", \"radioBtnField\"], [1, \"radioBtnGroupLabel\"], [\"formControlName\", \"haveContractualInstrument\", 3, \"change\"], [1, \"row\", \"my-2\"], [1, \"col-sm-6\"], [1, \"radioBtnLabel\", 3, \"value\"], [\"class\", \"radioBtnGroupError ms-1 mt-1\", 4, \"ngIf\"], [\"class\", \"row\", 4, \"ngIf\"], [1, \"row\", \"pt-1\"], [\"class\", \"ps-1 radioBtnField\", 4, \"ngIf\"], [\"class\", \"col-sm-10 pt-1\", 4, \"ngIf\"], [\"class\", \"col-sm-8\", 4, \"ngIf\"], [3, \"formControl\"], [1, \"cardTitle\", \"pb-3\"], [\"formGroupName\", \"activityConfig\", 1, \"col-sm-8\"], [\"matInput\", \"\", \"type\", \"text\", \"formControlName\", \"configName\"], [3, \"value\"], [1, \"col-sm-4\", \"centerAlignVertical\", \"mb-3\"], [1, \"material-symbols-outlined\"], [1, \"ms-2\"], [\"target\", \"_blank\", 3, \"routerLink\"], [1, \"radioBtnGroupError\", \"ms-1\", \"mt-1\"], [1, \"col-sm-5\"], [\"formControlName\", \"contractualInstrumentID\"], [\"placeholderLabel\", \"Search by contractual instrument's name\", \"noEntriesFoundLabel\", \"No matching contractual instrument found.\", 3, \"formControl\"], [\"formGroupName\", \"energy\", 1, \"col-sm-3\", \"alignSuffix\"], [\"matInput\", \"\", \"type\", \"number\", \"placeholder\", \"0\", \"min\", \"0\", \"max\", \"100\", \"formControlName\", \"percentage\", 3, \"blur\"], [\"matSuffix\", \"\", 1, \"matSuffix\"], [\"formControlName\", \"knowsEnergyConsumption\", 3, \"change\"], [1, \"col-sm-10\", \"pt-1\"], [\"formControlName\", \"dataInputMethodID\"], [\"class\", \"col-sm-6\", 4, \"ngFor\", \"ngForOf\"], [1, \"radioBtnLabel\", 3, \"value\", \"change\"], [\"matInput\", \"\", \"type\", \"number\", \"placeholder\", \"00000000\", \"min\", \"0\", \"formControlName\", \"meterRolloverValue\"], [1, \"col-sm-3\"], [\"formControlName\", \"meterReadingUnitID\"], [\"placeholderLabel\", \"Search by unit name\", \"noEntriesFoundLabel\", \"No matching unit found.\", 3, \"formControl\"], [1, \"d-flex\", \"justify-content-between\"], [1, \"col-sm-8\"], [\"matInput\", \"\", \"type\", \"number\", \"formControlName\", \"facilityArea\", \"min\", \"0\"], [1, \"col-sm-4\"], [\"formControlName\", \"facilityAreaUnitID\"]],\n    template: function CreateComponent_Template(rf, ctx) {\n      if (rf & 1) {\n        i0.ɵɵelementStart(0, \"mat-card\", 0);\n        i0.ɵɵtemplate(1, CreateComponent_mat_checkbox_1_Template, 3, 1, \"mat-checkbox\", 1);\n        i0.ɵɵelementStart(2, \"div\", 2);\n        i0.ɵɵtext(3, \" Details \");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(4, \"form\", 3);\n        i0.ɵɵelementStart(5, \"div\", 4);\n        i0.ɵɵtemplate(6, CreateComponent_div_6_Template, 6, 2, \"div\", 5);\n        i0.ɵɵelementStart(7, \"div\", 6);\n        i0.ɵɵelementStart(8, \"mat-form-field\", 7);\n        i0.ɵɵelementStart(9, \"mat-label\", 8);\n        i0.ɵɵtext(10, \"Select supplier\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(11, \"mat-select\", 9);\n        i0.ɵɵelementStart(12, \"mat-option\");\n        i0.ɵɵelement(13, \"ngx-mat-select-search\", 10);\n        i0.ɵɵelementEnd();\n        i0.ɵɵtemplate(14, CreateComponent_mat_option_14_Template, 2, 2, \"mat-option\", 11);\n        i0.ɵɵpipe(15, \"async\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵtemplate(16, CreateComponent_mat_error_16_Template, 2, 0, \"mat-error\", 12);\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementEnd();\n        i0.ɵɵtemplate(17, CreateComponent_div_17_Template, 8, 1, \"div\", 13);\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(18, \"div\", 14);\n        i0.ɵɵelementStart(19, \"div\", 4);\n        i0.ɵɵelementStart(20, \"div\", 15);\n        i0.ɵɵelementStart(21, \"div\", 16);\n        i0.ɵɵelementStart(22, \"div\", 17);\n        i0.ɵɵtext(23, \" Do you have a contractual instrument? \");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(24, \"mat-radio-group\", 18);\n        i0.ɵɵlistener(\"change\", function CreateComponent_Template_mat_radio_group_change_24_listener($event) {\n          return ctx.contractualInstrumentChange($event.value);\n        });\n        i0.ɵɵelementStart(25, \"div\", 19);\n        i0.ɵɵelementStart(26, \"div\", 20);\n        i0.ɵɵelementStart(27, \"mat-radio-button\", 21);\n        i0.ɵɵtext(28, \" Yes \");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(29, \"div\", 20);\n        i0.ɵɵelementStart(30, \"mat-radio-button\", 21);\n        i0.ɵɵtext(31, \" No \");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementEnd();\n        i0.ɵɵtemplate(32, CreateComponent_mat_error_32_Template, 2, 0, \"mat-error\", 22);\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementEnd();\n        i0.ɵɵtemplate(33, CreateComponent_div_33_Template, 20, 7, \"div\", 23);\n        i0.ɵɵelementStart(34, \"div\", 24);\n        i0.ɵɵelementStart(35, \"div\", 15);\n        i0.ɵɵtemplate(36, CreateComponent_div_36_Template, 12, 3, \"div\", 25);\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementEnd();\n        i0.ɵɵtemplate(37, CreateComponent_div_37_Template, 8, 2, \"div\", 26);\n        i0.ɵɵtemplate(38, CreateComponent_div_38_Template, 19, 10, \"div\", 23);\n        i0.ɵɵtemplate(39, CreateComponent_div_39_Template, 8, 2, \"div\", 26);\n        i0.ɵɵtemplate(40, CreateComponent_div_40_Template, 19, 9, \"div\", 27);\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementEnd();\n      }\n      if (rf & 2) {\n        i0.ɵɵadvance(1);\n        i0.ɵɵproperty(\"ngIf\", false);\n        i0.ɵɵadvance(3);\n        i0.ɵɵproperty(\"formGroup\", ctx.activityConfigFG);\n        i0.ɵɵadvance(2);\n        i0.ɵɵproperty(\"ngIf\", ctx.origin == \"pff\");\n        i0.ɵɵadvance(2);\n        i0.ɵɵproperty(\"appearance\", ctx.MaterialFormFieldAppearance.FORM_FIELD_APPEARANCE);\n        i0.ɵɵadvance(5);\n        i0.ɵɵproperty(\"formControl\", ctx.supplierSearchUtil.filterFC);\n        i0.ɵɵadvance(1);\n        i0.ɵɵproperty(\"ngForOf\", i0.ɵɵpipeBind1(15, 17, ctx.supplierSearchUtil.filteredEntities));\n        i0.ɵɵadvance(2);\n        i0.ɵɵproperty(\"ngIf\", ctx.errorHandlingACS(\"sourceID\", \"required\"));\n        i0.ɵɵadvance(1);\n        i0.ɵɵproperty(\"ngIf\", ctx.noSuppliers);\n        i0.ɵɵadvance(10);\n        i0.ɵɵproperty(\"value\", ctx.YES);\n        i0.ɵɵadvance(3);\n        i0.ɵɵproperty(\"value\", ctx.NO);\n        i0.ɵɵadvance(2);\n        i0.ɵɵproperty(\"ngIf\", ctx.errorHandlingACD(\"haveContractualInstrument\", \"required\") && ctx.haveContractualInstrumentAC.touched);\n        i0.ɵɵadvance(1);\n        i0.ɵɵproperty(\"ngIf\", ctx.haveContractualInstrumentAC.value == ctx.YES);\n        i0.ɵɵadvance(3);\n        i0.ɵɵproperty(\"ngIf\", ctx.haveContractualInstrumentAC.value == ctx.NO);\n        i0.ɵɵadvance(1);\n        i0.ɵɵproperty(\"ngIf\", ctx.haveContractualInstrumentAC.value == ctx.YES || ctx.knowsEnergyConsumptionAC.value == ctx.YES);\n        i0.ɵɵadvance(1);\n        i0.ɵɵproperty(\"ngIf\", ctx.dataEntryMethodUsed == ctx.DataEntryMethod.METER_READING);\n        i0.ɵɵadvance(1);\n        i0.ɵɵproperty(\"ngIf\", ctx.knowsEnergyConsumptionAC.value == ctx.NO);\n        i0.ɵɵadvance(1);\n        i0.ɵɵproperty(\"ngIf\", ctx.estimationMethodUsed == ctx.DataEstimationMethod.AREA_BASED);\n      }\n    },\n    directives: [i8.MatCard, i9.NgIf, i3.ɵNgNoValidate, i3.NgControlStatusGroup, i3.FormGroupDirective, i3.FormGroupName, i10.MatFormField, i10.MatLabel, i11.MatSelect, i3.NgControlStatus, i3.FormControlName, i12.MatOption, i13.MatSelectSearchComponent, i3.FormControlDirective, i9.NgForOf, i14.MatRadioGroup, i14.MatRadioButton, i15.MatCheckbox, i16.MatInput, i3.DefaultValueAccessor, i10.MatError, i2.RouterLinkWithHref, i3.MinValidator, i3.MaxValidator, i3.NumberValueAccessor, i10.MatSuffix],\n    pipes: [i9.AsyncPipe],\n    encapsulation: 2\n  });\n  return CreateComponent;\n})();","map":null,"metadata":{},"sourceType":"module"}